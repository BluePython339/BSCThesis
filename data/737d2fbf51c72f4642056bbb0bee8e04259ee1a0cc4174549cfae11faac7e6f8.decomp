sub_40130a
sub [ esi ] cl
sub [ esi ] cl
dec ebx
lea ebp [ ebx + 0xe ]
push esp
adc eax 0xb02b312b
out 0x4 eax
xchg [ esp + edi ] esp
cmpsd [ esi ] [ edi ]
shl [ edx ] 0xe5
mov dl 0xeb
sub [ esi ] cl
sub [ ecx ] bl
xchg ebx eax
push ecx
and al 0x87
and al 0x3c
or [ ebx ] ebp
pop edi
inc eax
movaps [ esi ] xmm1
sub [ ecx ] cl
clc
sub eax 0x19
movsd [ edi ] [ esi ]
insb
and al 0xe
sub cl al
movsd [ edi ] [ esi ]
xor ch [ ecx + ecx ]
sub ebx [ esi ]
add ecx [ esi ]
sub [ esi + 0xe3ef2ea ] cl
sub [ edi ] cl
push ebp
cmpsd [ ss : esi ] [ edi ]
enter 0xce9 0x28
push cs
sub esi [ ebx + 0x1b ]
or [ edx + 0x280e299a ] edx
cdq
mov [ 0x280e26cf ] al
sbb [ edi ] cx
sub [ esi ] cl
mov ebp 0x280fb880
push cs
js rwxdata
mov dl 0xeb
sub [ esi ] cl
sub [ ebx + 0x92a64bd ] bl
sub ebx [ edi + 0x40 ]
mov [ 0x280e26c3 ] al
pop esi
sub edx [ eax + 0xe280e81 ]
jecxz rwxdata
sub [ esi ] cl
js rwxdata
mov esp 0x2b0e280f
or [ ebx ] ebp
or ebx esp
and [ eax + ecx + 0x2b ] 0x9
sub [ esi ] cl
sub [ esi ] cl
loop rwxdata
enter 0xbb66 0xd6
test [ ebp + 0x4e7b02b ] dh
sub [ esi ] cl
js rwxdata
nop
push es
sub [ esi ] cl
sub [ esi + 0xe3ef2ea ] ecx
sub [ edi ] cl
cmp eax [ ebx + 0xe280ea0 ]
cmpsd [ esi ] [ edi ]

sub_4017ee
loop rwxdata
mov cl 0x7a
cmpsd [ esi ] [ edi ]
shr [ ecx ] 0x8d
ror [ edi ] 0xdf
cli
loop rwxdata
cmovpo ebp [ eax - 0x1f ]
int3
sbb [ edx + 0x7ab13b00 ] edx
sub [ ecx ] bl
xchg edx eax
add [ ebx ] bh
sub_402594
push ebp
push es
inc eax
or [ eax ] ebp
push cs
sub [ ebx + 0xe3d1dea ] bl
sub [ ecx + 0x2b ] dl
nop
popfd
push cs
sub [ esi ] cl
sar [ eax ] 0x28
push cs
sub [ ebp + 0x7b ] bl
inc eax
je rwxdata
pop edi
imul ebx [ ebp + 0x6a ] 0x7c47677d
pop ebx
0x280e25bc 0x2b51
sub [ eax + ebp - 0x65 ] esp
mov [ 0x280e3a1c ] al
pop esi
sub esi [ ebx + 0x2c ]
pushad
push esp
push 0x73
pop edx
bound ebx [ ebx + 0x71 ]
push edi
push 0x67
jae rwxdata
or bh [ gs : eax + 0x66 ]
imul ecx [ esi ] 0x3b
push cs
pop esi
push cs
jae rwxdata
and al 0xe
cmc
push cs
in eax 0xe
jne rwxdata
or [ edx + 0x4b ] esi
jl rwxdata
push cs
sub [ ecx - 0x43 ] dl
enter 0x396 0x28
push cs
jae rwxdata
sub edx [ eax + 0x15 ]
sub cx [ esi ]
sub [ esi ] cl
mov ebp 0x28009980
push cs
jl rwxdata
fadd [ ebp - 0x3757f9ab ]
ror [ 0xffffffff88280e28 ] cl
and edx [ eax + 0x2b ]
nop
sub [ ebx ] bl
sub [ esi ] cl
test al 0xc8
ror [ 0x73290e28 ] 0x1
sbb [ esi + 0xe280e29 ] dh
js rwxdata
js rwxdata
fwait
mov dl 0xdb
sub [ esi ] cl
sub [ 0xffffffff9b3e72e8 ] al
sub [ ebx + 0xe3a1ca2 ] bl
sub [ esi + 0x2b ] bl
jae rwxdata
jge rwxdata
sub esi [ ebx + 0x2c ]
or [ edx + 0x3f ] esi
dec ebx
push eax
inc ebp
jl rwxdata
test al 0xc8
ror [ 0xffffffff88280e28 ] cl
xor al 0x9b
0x280e22bf 0xbd51
push cs
sub [ ebx + 0x18 ] esi
mov dh 0x29
push cs
sub [ esi ] cl
loope rwxdata
pop ebx
js rwxdata
pop esp
push ebp
js rwxdata
push ecx
sub edx [ eax + 0xe280ea9 ]
test al 0xc8
fwait
push es
sub [ esi ] cl
sub [ ebx + 0x23 ] esi
mov bh 0x26
push cs
sub [ esi + 0xf9103df ] cl
sub [ esi ] cl
test al 0x9b
sub_402689
pop es
pop esi
push cs
jb rwxdata
push cs
sub [ edi ] cl
push ebp
add [ edx + 0x9 ] esi
mov dl 0x4
cmp eax 0xea8e280e
hlt
mov dl 0xf3
sub [ esi ] cl
sub [ esi + 0xe3d07ea ] cl
sub_403210
push 0xffffffff
push sub_403be8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ esp + 0x8 ]
call sub_403330
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0x70 ] 0x0
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_2514
lea ecx [ esp + 0x4 ]
mov [ esp + 0x70 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x68 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x70
retn
sub_403330
push 0xffffffff
push sub_403c08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
push 0x66
mov [ esp + 0xc ] esi
call Ordinal_MFC42_324
mov [ esp + 0x10 ] 0x0
mov [ esi ] rwxdata
call Ordinal_MFC42_1168
push 0x80
push 0xe
push 0x80
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x8 ]
mov [ esi + 0x60 ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4033b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_403c2b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
mov eax [ esi + 0x20 ]
push 0x0
push eax
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je rwxdata
mov edx [ esi + 0x60 ]
mov eax [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
push edx
push 0x1
push 0x80
push eax
call edi
mov ecx [ esi + 0x60 ]
mov edx [ esi + 0x20 ]
push ecx
push 0x0
push 0x80
push edx
call edi
mov eax [ Ordinal_MFC42_6379@IAT ]
push 0x80
push 0xd
push 0x3
push 0x0
push 0x0
push eax
mov ecx esi
call Ordinal_MFC42_6197
mov ecx 0x40
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0xc ]
push rwxdata
push ecx
stosb [ edi ]
call [ sprintf@IAT ]
add esp 0x8
mov ecx esi
call sub_403660
mov ecx [ esp + 0x110 ]
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x114
retn
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ esp + 0xc ]
mov [ esp + 0x11c ] 0x0
call Ordinal_MFC42_4160
mov ecx [ esp + 0x8 ]
mov eax [ ecx - 0x8 ]
test eax eax
je rwxdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x118 ] 0xffffffff
call Ordinal_MFC42_800
mov edx [ edi + 0x4 ]
push ebp
mov ebp [ AppendMenuA@IAT ]
push 0x0
push 0x0
push 0x800
push edx
call ebp
mov eax [ esp + 0xc ]
mov ecx [ edi + 0x4 ]
push eax
push 0x10
push 0x0
push ecx
call ebp
pop ebp
sub_4034e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_403c48
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x60
cmp eax 0x10
jne rwxdata
call Ordinal_MFC42_2379
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp ]
call sub_4032c0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
sub_403560
sub esp 0x168
push esi
mov esi ecx
push edi
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je rwxdata
mov ecx esi
call Ordinal_MFC42_2379
push ebx
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x60 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop ebx
jmp rwxdata
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x6d ]
mov [ esp + 0x6c ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x6c ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x8
pop edi
pop esi
add esp 0x168
retn
sub_403680
mov cl [ rwxdata ]
push ebx
push esi
push edi
xor eax eax
mov dl [ eax + rwxdata ]
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x1b89
jbe rwxdata
xor eax eax
mov cl [ eax + rwxdata ]
inc eax
not cl
mov [ eax + rwxdata ] cl
cmp eax 0x1b89
jbe rwxdata
mov cl [ rwxdata ]
mov dl [ rwxdata ]
mov esi 0x1
xor eax eax
sub esi rwxdata
lea edi [ esi + eax + rwxdata ]
cmp edi 0x1b89
ja rwxdata
mov bl [ eax + rwxdata ]
xor bl dl
sub bl 0x6
mov [ eax + rwxdata ] bl
add eax 0x2
cmp eax 0x3712
jle rwxdata
mov bl cl
xor bl [ eax + rwxdata ]
sub bl 0x4
mov [ eax + rwxdata ] bl
cmp eax 0x1b89
ja rwxdata
xor eax eax
lea eax [ rwxdata ]
add eax 0x25
mov ecx eax
call ecx
push 0x0
call [ exit@IAT ]
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_403b75
cmp [ rwxdata ] ebx
jne rwxdata
call sub_403b60
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_403b72
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_403b82
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_403b9a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_403c58
and [ 0x11993 ] al
add [ eax ] al
js rwxdata
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
sub_4011ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn
sub_401690
mov dl 0x2b
sub [ esi ] ecx
sub [ edi + 0x52a13724 ] al
adc [ edx ] eax
cmpsd [ esi ] [ edi ]
iretd
sub_40303d
cmp [ eax ] al
0xe4004038 0x4038
sub_403047
add dh bl
cmp [ eax ] al
fdivr [ eax ]
inc eax
add dl dl
cmp [ eax ] al
int3
sub_403180
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4031a0
push esi
mov esi ecx
call sub_4031c0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4031c0
jmp Ordinal_MFC42_815
sub_4031d0
call sub_4031e0
jmp sub_4031f0
sub_4031e0
mov ecx rwxdata
jmp sub_403180
sub_4031f0
push sub_403200
call sub_4039d6
pop ecx
retn
sub_403200
mov ecx rwxdata
jmp sub_4031c0
sub_403290
jmp Ordinal_MFC42_641
sub_4032a0
retn
sub_4032b0
retn 0x4
sub_4032c0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4032e0
push esi
mov esi ecx
call sub_403290
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403300
retn 0x4
sub_403310
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_403320
mov eax rwxdata
retn
sub_4033a0
mov eax rwxdata
retn
sub_403640
mov eax [ ecx + 0x60 ]
retn
sub_403650
call sub_403680
sub_403660
push 0x3e9
call Ordinal_MFC42_3092
mov ecx eax
jmp Ordinal_MFC42_5981
sub_403730
sub esp 0x104
push esi
push edi
mov esi ecx
call Ordinal_MFC42_2379
mov ecx esi
call sub_403680
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_6197
jmp [ Ordinal_MFC42_6197@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
Ordinal_MFC42_5981
jmp [ Ordinal_MFC42_5981@IAT ]
Ordinal_MFC42_3092
jmp [ Ordinal_MFC42_3092@IAT ]
sub_4039aa
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4039d6
push [ esp + 0x4 ]
call sub_4039aa
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403b60
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403b72
xor eax eax
retn
sub_403b75
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_403b82
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_403bc8
jmp sub_403bc8
sub_403bc8
push 0x600
push 0x0
call sub_403b9a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_403be0
lea ecx [ ebp - 0x70 ]
jmp sub_403290
sub_403be8
mov eax sub_403c58
jmp __CxxFrameHandler
sub_403c00
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_403c08
mov eax rwxdata
jmp __CxxFrameHandler
sub_403c20
lea ecx [ ebp - 0x114 ]
jmp Ordinal_MFC42_800
sub_403c2b
mov eax rwxdata
jmp __CxxFrameHandler
sub_403c40
lea ecx [ ebp - 0x6c ]
jmp sub_403290
sub_403c48
mov eax rwxdata
jmp __CxxFrameHandler
sub_403c7b
jmp eax
sub_403ccb
jmp [ eax ]
