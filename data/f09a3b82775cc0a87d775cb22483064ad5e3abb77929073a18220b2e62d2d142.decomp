sub_100120c
pop esp
add [ eax ] al
add [ eax ] ch
add [ edi ] ch
bound eax [ eax ]
push 0x0
add [ gs : ebx ] ah
je r-xdata
inc ebx
add [ eax + eax + 0x61 ] ch
add [ ebx ] dh
jae r-xdata
cmp eax 0x29002a00
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ edi ] dh
bound eax [ eax ]
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
push ebx
add [ ebp ] dh
bound eax [ eax ]
je r-xdata
jb r-xdata
add [ gs : ebp ] ah
add [ eax ] al
dec edi
add [ esi ] ch
add [ gs : eax + eax + 0x65 ] cl
add [ esi ] dh
add [ gs : eax + eax ] ch
add [ eax ] al
add [ edx ] al
popad
add [ ebx ] dh
add [ gs : eax ] al
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ 0xa00 ] cl
add [ eax ] al
add [ edx ] ch
add [ eax ] al
add [ ebx ] ah
jae r-xdata
jbe r-xdata
add [ cs : ebp ] ah
jb r-xdata
jb r-xdata
add [ eax ] al
arpl [ eax ] ax
jae r-xdata
jbe r-xdata
add [ cs : eax + eax + 0x6f ] ch
add [ edi ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
jne r-xdata
jo r-xdata
jo r-xdata
outsd
add [ edx ] dh
je r-xdata
add [ gs : eax + eax + 0x43 ] ah
add [ edi ] ch
outsb
add [ eax + eax + 0x72 ] dh
add [ edi ] ch
insb
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x65 ] ah
add [ esi ] ah
popad
add [ ebp ] dh
insb
add [ eax + eax + 0x4e ] dh
add [ ecx ] ah
insd
add [ ecx ] ch
outsb
add [ edi ] ah
inc ebx
add [ edi ] ch
outsb
add [ eax + eax + 0x65 ] dh
add [ eax ] bh
je r-xdata
add [ eax ] al
add [ eax ] al
jae r-xdata
arpl [ eax ] ax
push 0x6d006500
add [ ecx ] ah
dec esi
add [ ecx ] ah
insd
add [ ecx ] ch
outsb
add [ edi ] ah
inc ebx
add [ edi ] ch
outsb
add [ eax + eax + 0x65 ] dh
add [ eax ] bh
je r-xdata
add [ eax ] al
insb
add [ ecx ] ch
outsb
add [ ebx ] ch
imul eax [ eax ] 0x64
add [ eax ] al
insb
add [ eax + eax + 0x61 ] ah
add [ eax ] dh
inc esp
add [ ecx ] ch
jae r-xdata
jo r-xdata
insb
add [ ecx ] ah
jns r-xdata
dec esi
add [ ecx ] ah
insd
add [ ebp ] ah
add [ eax ] al
jb r-xdata
add [ gs : eax ] dh
insb
add [ eax ] dl
jb r-xdata
outsd
add [ eax ] dh
add [ gs : edx ] dh
je r-xdata
jns r-xdata
dec ebp
add [ ebp ] ah
je r-xdata
popad
add [ eax + eax + 0x61 ] al
add [ eax + eax + 0x61 ] dh
add [ eax ] al
add [ eax ] al
add [ 0x70003331 ] dh
add [ edx ] dh
imul eax [ eax ] 0x61006d
jb r-xdata
jns r-xdata
inc edi
add [ edx ] dh
outsd
add [ ebp ] dh
jo r-xdata
dec ecx
add [ eax + eax ] al
add [ eax ] al
add [ eax + eax ] ch
add [ eax ] al
and al [ eax ]
and al [ eax ]
add [ eax ] al
add [ eax ] al
and al [ eax ]
add [ eax ] al
pop esp
add [ eax ] bl
daa
add [ eax ] al
add [ eax ] bl
daa
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x3b ] bl
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
add [ eax ] al
add [ eax + eax + 0x5c ] bl
add [ eax ] al
add [ eax ] al
add [ 0x32003000 ] ah
add [ eax ] bh
add [ eax ] al
add [ eax ] al
outsd
add [ edx ] ah
push 0x0
add [ gs : ebx ] ah
je r-xdata
inc ebx
add [ eax + eax + 0x61 ] ch
add [ ebx ] dh
jae r-xdata
add [ eax ] al
add [ es : eax ] al
add [ eax + eax + 0x69 ] ah
add [ ebx ] dh
je r-xdata
imul eax [ eax ] 0x67006e
jne r-xdata
imul eax [ eax ] 0x680073
add [ gs : eax + eax + 0x4e ] ah
add [ ecx ] ah
insd
add [ ebp ] ah
add [ eax ] al
outsd
add [ edx ] ah
push 0x0
add [ gs : ebx ] ah
je r-xdata
inc ebx
add [ ecx ] ah
je r-xdata
add [ gs : edi ] ah
outsd
add [ edx ] dh
jns r-xdata
add [ eax ] al
add [ eax ] al
insb
add [ eax + eax + 0x61 ] ah
add [ eax ] dh
add [ fs : ecx ] ch
jae r-xdata
jo r-xdata
insb
add [ ecx ] ah
jns r-xdata
outsb
add [ ecx ] ah
insd
add [ ebp ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] al
add [ es : eax ] ch
add [ edi ] ch
bound eax [ eax ]
push 0x0
add [ gs : ebx ] ah
je r-xdata
inc ebx
add [ eax + eax + 0x61 ] ch
add [ ebx ] dh
jae r-xdata
cmp eax 0x61002000
add [ eax + eax + 0x74 ] dh
add [ edx ] dh
imul eax [ eax ] 0x750062
je r-xdata
add [ gs : ebx ] dl
arpl [ eax ] ax
push 0x6d006500
add [ ecx ] ah
sub [ eax ] eax
sub [ eax ] al
jl r-xdata
sub [ eax ] al
insb
add [ ecx ] ch
outsb
add [ ebx ] ch
imul eax [ eax ] 0x3d0064
sub al [ eax ]
sub [ eax ] eax
sub [ eax ] al
popad
add [ eax + eax + 0x74 ] dh
add [ edx ] dh
imul eax [ eax ] 0x750062
je r-xdata
add [ gs : ebx ] dl
jns r-xdata
outsb
add [ eax + eax + 0x61 ] dh
add [ eax ] bh
cmp eax 0x2e003200
add [ 0x35002e00 ] dh
add [ esi ] ch
add [ ecx ] dh
add [ ecx ] ch
add [ ecx ] ch
add [ ecx ] ch
add [ eax ] al
add [ ecx ] dh
add [ esi ] ch
add [ edx ] dh
add [ esi ] ch
add [ eax ] bh
add [ eax + eax ] dh
xor [ eax ] al
add [ cs : ecx ] dh
add [ ecx ] dh
add [ ebx ] dh
add [ 0x36003500 ] dh
add [ esi ] ch
add [ ecx ] dh
add [ esi ] ch
add [ eax + eax ] dh
add [ cs : ebx ] dh
add [ ecx ] dh
add [ ecx ] bh
add [ eax ] al
add [ eax ] al
add [ 0x20006400 ] ah
add [ 0x3a006400 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + eax ] ch
add [ es : eax ] al
add [ eax ] al
add [ 0x7300 ] ah
add [ eax ] al
add [ eax + eax + 0x4e ] al
add [ eax + eax ] ch
add [ es : eax ] al
add [ eax ] al
add [ eax + eax + 0x4e ] al
add [ eax + eax ] ch
add [ eax ] al
imul eax [ eax ] 0x430073
jb r-xdata
imul eax [ eax ] 0x690074
arpl [ eax ] ax
popad
add [ eax + eax + 0x53 ] ch
add [ ecx ] bh
jae r-xdata
je r-xdata
add [ gs : ebp ] ch
dec edi
add [ edx ] ah
push 0x0
add [ gs : ebx ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
add [ edx ] ah
push 0x0
add [ gs : ebx ] ah
je r-xdata
inc edi
add [ ebp ] dl
dec ecx
add [ eax + eax ] al
add [ eax ] al
add [ eax + eax + 0x6f ] dh
add [ eax ] dh
add [ eax ] al
arpl [ eax ] ax
jae r-xdata
jbe r-xdata
bound eax [ eax ]
add [ eax ] al
add [ eax ] al
arpl [ eax ] ax
jae r-xdata
jbe r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ edx ] dh
je r-xdata
add [ eax ] al
add [ eax ] al
ja r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
bound eax [ eax ]
add [ eax ] al
add [ eax ] al
and [ eax ] al
and eax 0x7300
add [ ecx ] al
je r-xdata
je r-xdata
jb r-xdata
imul eax [ eax ] 0x750062
je r-xdata
add [ gs : eax ] ah
add [ 0x29006400 ] ah
add [ eax ] ah
add [ 0x3a007300 ] ah
add [ eax ] al
add [ eax + eax + 0x4e ] al
add [ eax ] al
add [ eax ] al
add [ ebp ] ch
add [ gs : ebp ] ch
bound eax [ eax ]
add [ gs : edx ] dh
add [ eax ] al
add [ eax ] al
and eax 0x3a006400
add [ eax ] ah
add [ 0xd007300 ] ah
add [ edx ] cl
add [ eax ] al
add [ eax ] al
add [ 0x3a006400 ] ah
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp ] dh
jae r-xdata
add [ gs : edx ] dh
add [ eax ] al
add [ eax ] al
insb
add [ edi ] ch
arpl [ eax ] ax
popad
add [ eax + eax + 0x47 ] ch
add [ edx ] dh
outsd
add [ ebp ] dh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ bp + si ] dh
outsd
add [ ebp ] dh
jo r-xdata
add [ eax ] al
add [ fs : edi ] ch
insd
add [ ecx ] ah
imul eax [ eax ] 0x6e
add [ eax ] al
jae r-xdata
popad
add [ ebp ] ch
push ebx
add [ ebp ] ah
jb r-xdata
jbe r-xdata
add [ gs : edx ] dh
add [ eax ] al
insb
add [ ecx ] ah
jae r-xdata
je r-xdata
dec esp
add [ edi ] ch
add [ bx ] ch
outsb
add [ eax + eax + 0x69 ] dl
add [ ebp ] ch
add [ gs : ebx ] dh
je r-xdata
popad
add [ ebp ] ch
jo r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
ja r-xdata
add [ fs : eax + eax + 0x61 ] cl
add [ ebx ] dh
je r-xdata
push ebx
add [ ebp ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
jae r-xdata
jne r-xdata
jo r-xdata
jo r-xdata
insb
add [ ebp ] ah
insd
add [ ebp ] ah
outsb
add [ eax + eax + 0x61 ] dh
add [ eax + eax + 0x43 ] ch
add [ edx ] dh
add [ gs : eax + eax + 0x65 ] ah
add [ esi ] ch
je r-xdata
imul eax [ eax ] 0x6c0061
jae r-xdata
add [ eax ] al
insb
add [ edi ] ch
add [ bx ] ch
outsb
add [ ebx ] al
outsd
add [ ebp ] dh
outsb
add [ eax + eax ] dh
add [ eax ] al
add [ edx ] ah
popad
add [ eax + eax + 0x50 ] ah
add [ edi ] dh
add [ fs : ebx ] al
outsd
add [ ebp ] dh
outsb
add [ eax + eax ] dh
add [ edx ] ah
popad
add [ eax + eax + 0x50 ] ah
add [ ecx ] ah
jae r-xdata
jae r-xdata
ja r-xdata
outsd
add [ edx ] dh
add [ fs : eax + eax + 0x69 ] dl
add [ ebp ] ch
add [ gs : eax ] al
add [ eax + eax + 0x61 ] ch
add [ ebx ] dh
je r-xdata
dec esp
add [ edi ] ch
add [ bx ] ch
add [ esi ] ah
add [ eax ] al
add [ eax ] al
insb
add [ ecx ] ah
jae r-xdata
je r-xdata
dec esp
add [ edi ] ch
add [ bx ] ch
outsb
add [ eax ] al
add [ eax + eax + 0x6d ] ch
add [ eax ] dl
ja r-xdata
add [ fs : eax ] cl
imul eax [ eax ] 0x740073
outsd
add [ edx ] dh
jns r-xdata
add [ eax ] al
add [ eax ] al
outsb
add [ eax + eax + 0x50 ] dh
add [ edi ] dh
add [ fs : eax ] cl
imul eax [ eax ] 0x740073
outsd
add [ edx ] dh
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ fs : edx ] al
inc ebx
add [ ebx ] dl
push eax
add [ edi ] dh
add [ fs : eax ] al
add [ ebp ] ch
add [ gs : ebp ] ch
bound eax [ eax ]
add [ gs : edx ] dh
dec edi
add [ esi ] ah
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ eax ] 0x64
jne r-xdata
inc ecx
add [ ebx ] dl
inc ebx
add [ edi ] ch
insd
add [ eax ] dh
popad
add [ eax + eax ] dh
add [ ebx ] dh
inc ecx
add [ ebp ] cl
inc ecx
add [ ebx ] ah
arpl [ eax ] ax
outsd
add [ ebp ] dh
outsb
add [ eax + eax + 0x54 ] dh
add [ ecx ] bh
jo r-xdata
add [ gs : eax ] al
add [ eax ] al
add [ ebx ] dh
add [ gs : edx ] dh
jbe r-xdata
add [ gs : edx ] dh
push ebx
add [ eax + eax + 0x61 ] dh
add [ eax + eax + 0x65 ] dh
add [ eax ] al
add [ esi ] ch
add [ gs : eax ] bh
je r-xdata
push edx
add [ ecx ] ch
add [ fs : eax ] al
add [ ebp ] ch
outsd
add [ eax + eax + 0x69 ] ah
add [ esi ] ah
imul eax [ eax ] 0x640065
inc ebx
add [ edi ] ch
jne r-xdata
outsb
add [ eax + eax + 0x41 ] dh
add [ eax + eax + 0x4c ] dh
add [ ecx ] ah
jae r-xdata
je r-xdata
push eax
add [ edx ] dh
outsd
add [ ebp ] ch
add [ eax ] al
insd
add [ edi ] ch
add [ fs : ecx ] ch
add [ ecx ] ch
add [ gs : eax + eax + 0x43 ] ah
add [ edi ] ch
jne r-xdata
outsb
add [ eax + eax ] dh
add [ ebx ] ah
jb r-xdata
add [ gs : ecx ] ah
je r-xdata
imul eax [ eax ] 0x6e006f
push esp
add [ ecx ] ch
insd
add [ ebp ] ah
add [ eax ] al
add [ eax ] al
add [ fs : edi ] ch
insd
add [ ecx ] ah
imul eax [ eax ] 0x52006e
add [ gs : eax ] dh
insb
add [ ecx ] ch
arpl [ eax ] ax
popad
add [ eax ] al
add [ edi ] ch
bound eax [ eax ]
push 0x0
add [ gs : ebx ] ah
je r-xdata
push ebx
add [ ecx ] ch
add [ fs : eax ] al
add [ edx ] dh
add [ gs : esi ] dh
imul eax [ eax ] 0x690073
outsd
add [ esi ] ch
add [ eax ] al
add [ eax ] al
push ebp
outsb
push 0x6c646e61
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 4 ] dh
add [ ecx ] al
nop
sbb [ eax ] eax
jo r-xdata
xor esi eax
inc eax
das
r-xdata
add [ ecx ] eax
add [ eax ] al
add [ esi + 0x42 ] cl
xor [ eax ] esi
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x746c6946
jb r-xdata
add esi eax
inc eax
xor [ ecx ] al
mov [ eax + 0x32 ] cl
mov [ eax + 0x33 ] 0x1
mov [ eax + 0x34 ] cl
mov [ eax + 0x68 ] ecx
mov [ eax + 0x6c ] cl
retn 0x4
bound eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x65 ] ch
jb r-xdata
add [ eax ] al
adc eax [ ecx ]
cmp [ esi ] 0x1
add [ eax ] al
add [ ebx + 0x73 ] ah
jbe r-xdata
insb
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_1001923
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x81
add [ ecx ] al
nop
sbb [ eax ] eax
add [ ecx ] eax
add [ eax ] al
add [ esi + 0x42 ] cl
xor [ eax ] esi
add [ eax ] al
add [ eax ] al
adc eax [ ecx ]
cmp [ esi ] 0x1
add [ eax ] al
add [ ebx + 0x73 ] ah
jbe r-xdata
xor esi eax
inc eax
das
r-xdata
add esi eax
inc eax
xor [ ecx ] al
mov [ eax + 0x32 ] cl
mov [ eax + 0x33 ] 0x1
mov [ eax + 0x34 ] cl
mov [ eax + 0x68 ] ecx
mov [ eax + 0x6c ] cl
retn 0x4
bound eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_10019a0
mov eax [ esp + 0x4 ]
or [ eax + 0x58 ] 0xffffffff
xor ecx ecx
mov [ eax + 0x64 ] 0x185
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x5c ] ecx
mov [ eax + 0x60 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x54 ] cl
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x2d ] cl
mov [ eax + 0x2e ] 0x1
mov [ eax + 0x8 ] cl
mov [ eax + 0x31 ] cl
mov [ eax + 0x2f ] 0x1
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x32 ] cl
mov [ eax + 0x33 ] 0x1
mov [ eax + 0x34 ] cl
mov [ eax + 0x68 ] ecx
mov [ eax + 0x6c ] cl
retn 0x4
sub_1001a04
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
push eax
call sub_1006d0f
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_1006d0f
mov esi [ esi + 0x28 ]
test esi esi
je r-xdata
push eax
call sub_1006d0f
pop esi
retn 0x4
push esi
call sub_1006d0f
sub_1001a41
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push ebx
mov ebx [ isspace@IAT ]
push edi
jmp r-xdata
xor eax eax
jmp r-xdata
mov ax [ esi ]
test ax ax
jne r-xdata
pop esi
retn 0x4
movzx eax ax
push eax
call ebx
test eax eax
pop ecx
je r-xdata
push esi
call [ wcslen@IAT ]
pop ecx
lea edi [ esi + eax * 2 - 0x2 ]
jmp r-xdata
inc esi
inc esi
cmp edi esi
jae r-xdata
movzx eax [ edi ]
push eax
call ebx
test eax eax
pop ecx
je r-xdata
pop edi
mov eax esi
pop ebx
and [ edi ] 0x0
dec edi
dec edi
sub_1001ab5
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x2c
push esi
mov esi ecx
je r-xdata
cmp [ esi ] 0x2c
push ecx
jne r-xdata
mov ax [ esi ]
test ax ax
je r-xdata
call sub_1001a41
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
and [ esi ] 0x0
call sub_1001a41
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x10 ]
add esi 0x2
mov [ eax ] esi
jmp r-xdata
cmp ax 0x5c
jne r-xdata
xor eax eax
inc esi
inc esi
cmp [ esi ] 0x2c
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
je r-xdata
mov eax 0x104
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_1001b1f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
xor edx edx
push edi
mov edi [ ebp + 0x8 ]
inc edx
cmp [ edi ] bx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov eax edi
je r-xdata
push esi
lea eax [ edx * 4 + 0x4 ]
push eax
call sub_1006d00
mov esi eax
cmp esi ebx
jne r-xdata
mov cx [ eax ]
cmp cx 0x5c
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_1001ab5
cmp eax ebx
jne r-xdata
mov eax 0x100
jmp r-xdata
cmp cx 0x2c
jne r-xdata
cmp [ eax + 0x2 ] bx
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
xor edi edi
mov [ esi ] ecx
inc edi
jmp r-xdata
inc eax
inc eax
inc edx
mov eax 0x104
jmp r-xdata
add eax 0x4
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
pop edi
pop ebx
leave
retn 0x8
cmp [ eax ] bx
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
call sub_1001ab5
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + edi * 4 ] ebx
mov [ ecx ] esi
mov ecx [ ebp - 0x8 ]
mov [ esi + edi * 4 ] ecx
inc edi
sub_1001bca
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
xor ebx ebx
push 0x1
push ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ edi ] ebx
call DsRoleGetPrimaryDomainInformation
cmp eax ebx
mov [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x4
je r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop ebx
je r-xdata
push [ ebp - 0x8 ]
call DsRoleFreeMemory
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0xc ]
leave
retn 0x8
push [ ebp - 0x4 ]
call NetApiBufferFree
cmp [ ebp + 0x8 ] bl
push esi
lea eax [ ebp - 0x4 ]
push eax
je r-xdata
mov esi [ DsGetDcNameW@IAT ]
push 0x50
push ebx
push ebx
push ebx
push ebx
call esi
cmp eax ebx
mov [ ebp + 0xc ] eax
je r-xdata
push 0x1010
push ebx
push ebx
push ebx
push ebx
call [ DsGetDcNameW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x10
push ebx
push ebx
push ebx
push ebx
call esi
cmp eax ebx
mov [ ebp + 0xc ] eax
jne r-xdata
pop esi
mov eax [ eax ]
cmp eax ebx
je r-xdata
add eax 0x4
push eax
call sub_1006d6a
mov [ edi ] eax
sub_1001c7f
push ebp
mov ebp esp
push ecx
push ecx
dec [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ GetStdHandle@IAT ]
push edi
mov edi [ ebp + 0x10 ]
and [ edi ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0xfffffff6
call esi
push eax
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp - 0x4 ]
and eax 0xfffffff9
push eax
push 0xfffffff6
call esi
push eax
call [ SetConsoleMode@IAT ]
mov eax 0xffff
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
cmp ax 0xd
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push 0xfffffff6
call esi
push eax
call [ SetConsoleMode@IAT ]
and [ ebx ] 0x0
push 0xa
call [ putchar@IAT ]
mov eax [ ebp + 0xc ]
cmp eax [ edi ]
pop ecx
sbb eax eax
inc eax
cmp ax 0xffff
je r-xdata
cmp ax 0x8
jne r-xdata
mov [ ebx ] ax
mov eax [ edi ]
cmp eax [ ebp + 0xc ]
jae r-xdata
cmp ebx [ ebp + 0x8 ]
je r-xdata
inc eax
mov [ edi ] eax
jmp r-xdata
inc ebx
inc ebx
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x10 ]
push eax
push 0xfffffff6
call esi
push eax
call [ ReadConsoleW@IAT ]
test eax eax
je r-xdata
dec ebx
dec ebx
dec [ edi ]
jmp r-xdata
sub_1001d48
push ebp
mov eax 0x2018
lea ebp [ esp - 0x1f98 ]
call sub_1006c30
mov eax [ rw-data ]
mov [ ebp + 0x1f94 ] eax
mov eax [ _iob@IAT ]
add eax 0x40
cmp [ ebp + 0x1fa0 ] eax
jne r-xdata
push 0xfffffff5
push 0xfffffff4
jmp r-xdata
push ebx
push edi
mov edi [ GetConsoleOutputCP@IAT ]
push esi
push esi
push esi
push esi
push 0xffffffff
lea eax [ ebp - 0x6c ]
push eax
push esi
call edi
mov ebx [ WideCharToMultiByte@IAT ]
push eax
call ebx
push eax
mov [ ebp - 0x78 ] eax
call ??2@YAPAXI@Z
cmp eax esi
pop ecx
mov [ ebp - 0x74 ] eax
je r-xdata
lea eax [ ebp - 0x80 ]
push eax
push [ ebp - 0x70 ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetStdHandle@IAT ]
push esi
push [ ebp + 0x1fa8 ]
mov [ ebp - 0x70 ] eax
push [ ebp + 0x1fa4 ]
lea eax [ ebp - 0x6c ]
push 0x1000
push eax
call [ _vsnwprintf@IAT ]
lea eax [ ebp - 0x6c ]
xor esi esi
push eax
mov [ ebp + 0x1f92 ] si
call [ wcslen@IAT ]
add esp 0x14
push [ ebp - 0x70 ]
mov [ ebp + 0x1fa0 ] eax
call [ GetFileType@IAT ]
cmp eax 0x2
jne r-xdata
mov [ ebp + 0x1fa0 ] esi
push esi
push esi
push [ ebp - 0x78 ]
push eax
push 0xffffffff
lea eax [ ebp - 0x6c ]
push eax
push esi
call edi
push eax
call ebx
push esi
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp - 0x78 ]
dec eax
push eax
push [ ebp - 0x74 ]
push [ ebp - 0x70 ]
call [ WriteFile@IAT ]
push [ ebp - 0x74 ]
call ??3@YAXPAX@Z
pop ecx
jmp r-xdata
push esi
lea eax [ ebp + 0x1fa0 ]
push eax
push [ ebp + 0x1fa0 ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x70 ]
call [ WriteConsoleW@IAT ]
jmp r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0x1f94 ]
mov eax [ ebp + 0x1fa0 ]
pop esi
call sub_1006a01
add ebp 0x1f98
leave
retn
sub_1001e92
push ebp
mov ebp esp
mov eax 0x2008
call sub_1006c30
mov eax [ rw-data ]
push ebx
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2008 ] eax
lea eax [ ebp - 0x2008 ]
push eax
push 0xfff
lea eax [ ebp - 0x2004 ]
push eax
xor ebx ebx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x2004 ] bx
push ebx
push 0x800
call [ FormatMessageW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2004 ]
push eax
call [ wcslen@IAT ]
test [ ebp + 0x8 ] 0x1
pop ecx
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
cmp [ rw-data ] bl
je r-xdata
test [ ebp + 0x8 ] 0x8
mov al [ rw-data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_1006a01
leave
retn
lea eax [ ebp - 0x2004 ]
push eax
mov eax [ _iob@IAT ]
add eax 0x20
push eax
call sub_1001e7c
pop ecx
pop ecx
push r-xdata
call [ wprintf@IAT ]
mov [ rw-data ] bl
pop ecx
test [ ebp + 0x8 ] 0x10
je r-xdata
cmp al bl
jne r-xdata
test [ ebp + 0x8 ] 0x2
push esi
mov esi [ fwprintf@IAT ]
je r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp al bl
jne r-xdata
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x2004 ]
push eax
push [ rw-data ]
call esi
pop ecx
pop ecx
pop esi
cmp [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] 0x1
lea eax [ ebp - 0x2004 ]
push eax
push [ rw-data ]
call esi
cmp [ rw-data ] bl
jne r-xdata
push r-xdata
push [ rw-data ]
call [ _wfopen@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
push eax
push 0xfeff
call [ fputwc@IAT ]
cmp ax 0xffff
pop ecx
pop ecx
je r-xdata
push 0x51
push 0x1
call sub_1001e92
mov [ rw-data ] 0x1
jmp r-xdata
pop ecx
pop ecx
sub_1001ff8
push ebp
mov ebp esp
push ebx
xor ebx ebx
test [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
test [ ebp + 0x8 ] 0x8
mov al [ rw-data ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
mov eax [ _iob@IAT ]
push [ ebp + 0xc ]
add eax 0x20
push eax
call sub_1001d48
add esp 0xc
push r-xdata
call [ wprintf@IAT ]
mov [ rw-data ] bl
pop ecx
test [ ebp + 0x8 ] 0x10
je r-xdata
cmp al bl
jne r-xdata
pop ebx
pop ebp
retn
test [ ebp + 0x8 ] 0x2
push esi
mov esi [ vfwprintf@IAT ]
je r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp al bl
jne r-xdata
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call esi
add esp 0xc
pop esi
cmp [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] 0x1
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call esi
add esp 0xc
cmp [ rw-data ] bl
jne r-xdata
push r-xdata
push [ rw-data ]
call [ _wfopen@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
push eax
push 0xfeff
call [ fputwc@IAT ]
cmp ax 0xffff
pop ecx
pop ecx
je r-xdata
push 0x51
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ rw-data ] 0x1
jmp r-xdata
sub_1002105
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
and [ ebp - 0x24 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
push 0x6
xor eax eax
pop ecx
lea edi [ ebp - 0x20 ]
[ edi ]
stosw [ edi ]
xor edi edi
inc edi
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x29 ] 0x0
jne r-xdata
mov esi [ ebp + 0x10 ]
jle r-xdata
mov [ ebp - 0x24 ] 0x104
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
mov edi 0x103
jne r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x28 ] 0x4
mov [ ebp + 0x10 ] 0x3
call sub_10020f9
cmp [ esi + 0x2e ] 0x0
jne r-xdata
push 0x18
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
movzx eax [ eax + 0x2 ]
cmp eax 0x61
jl r-xdata
cmp cx 0x2f
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jg r-xdata
push [ ebx + edi * 4 ]
push 0xb
cmp [ esi + 0x58 ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
je r-xdata
push 0x1a
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
push 0x40
cmp eax 0x5a
jg r-xdata
push eax
call [ _toupper@IAT ]
pop ecx
cmp [ esi + 0x32 ] 0x0
je r-xdata
mov [ esi + 0x58 ] 0x2
cmp [ esi + 0x58 ] 0xffffffff
je r-xdata
push 0x1b
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x24 ] 0x103
jmp r-xdata
lea eax [ ebp + eax - 0x61 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push 0x25
cmp [ esi + 0x31 ] 0x0
je r-xdata
push 0x1c
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
push [ ebx + edi * 4 ]
push 0x53
jmp r-xdata
mov [ eax ] 0x1
mov eax [ ebx + edi * 4 ]
movzx eax [ eax + 0x2 ]
add eax 0xffffffc1
cmp eax 0x3b
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
call sub_1006a01
leave
retn 0xc
cmp [ esi + 0x28 ] 0x0
je r-xdata
push 0x1e
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1001e92
add esp 0xc
movzx eax [ eax + lookup_table_1002758 ]
jmp [ eax * 4 + jump_table_1002700 ]
cmp [ esi + 0x24 ] 0x0
je r-xdata
push 0x1f
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
mov [ rw-data ] 0x1
jmp r-xdata
mov [ esi + 0x30 ] 0x0
jmp r-xdata
mov [ esi + 0x2e ] 0x0
jmp r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
mov [ esi + 0x8 ] 0x1
jmp r-xdata
mov [ esi + 0x6c ] 0x1
jmp r-xdata
call sub_10020f9
jmp r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
and [ ebp - 0x30 ] 0x0
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
and [ ebp - 0x30 ] 0x0
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jge r-xdata
mov [ esi + 0x31 ] 0x1
jmp r-xdata
mov [ esi + 0x33 ] 0x0
jmp r-xdata
mov [ esi + 0x32 ] 0x1
jmp r-xdata
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
cmp [ esi + 0x33 ] 0x0
jne r-xdata
push 0x20
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
push 0x54
jmp r-xdata
mov eax [ ebx + edi * 4 ]
mov [ esi + 0x68 ] eax
jmp r-xdata
push 0x52
jmp r-xdata
mov eax [ ebx + edi * 4 ]
test eax eax
je r-xdata
push 0xc
jmp r-xdata
mov eax [ ebx + edi * 4 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + edi * 4 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
push 0xd
jmp r-xdata
mov eax [ ebx + edi * 4 ]
mov [ esi + 0x18 ] eax
jmp r-xdata
push 0xe
jmp r-xdata
mov eax [ ebx + edi * 4 ]
mov [ esi + 0x1c ] eax
jmp r-xdata
push 0xf
jmp r-xdata
mov eax [ ebx + edi * 4 ]
mov [ esi + 0x20 ] eax
jmp r-xdata
push 0x10
jmp r-xdata
mov eax [ ebx + edi * 4 ]
test eax eax
je r-xdata
push 0x12
jmp r-xdata
inc edi
inc [ ebp + 0x10 ]
mov eax [ ebx + edi * 4 ]
inc [ ebp - 0x28 ]
test eax eax
je r-xdata
push 0x13
jmp r-xdata
mov eax [ ebx + edi * 4 ]
test eax eax
je r-xdata
push 0x1d
jmp r-xdata
mov eax [ ebx + edi * 4 ]
test eax eax
je r-xdata
push 0x14
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
push 0x21
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
mov eax [ ebx + edi * 4 ]
mov cx [ eax ]
cmp cx 0x2d
je r-xdata
push 0x1
call sub_1001e92
pop ecx
pop ecx
jmp r-xdata
push eax
call [ _wtoi@IAT ]
test eax eax
pop ecx
mov [ esi + 0x64 ] eax
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push 0x16
jmp r-xdata
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
mov [ esi + 0x2d ] 0x1
mov eax [ ebx + edi * 4 ]
test eax eax
mov [ ebp - 0x29 ] 0x1
mov [ esi + 0x38 ] eax
je r-xdata
inc edi
inc [ ebp + 0x10 ]
mov eax [ ebx + edi * 4 ]
inc [ ebp - 0x28 ]
test eax eax
mov [ ebp - 0x29 ] 0x1
mov [ esi + 0x38 ] eax
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
push 0x22
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
push r-xdata
push [ ebx + edi * 4 ]
call [ wcscmp@IAT ]
test eax eax
pop ecx
pop ecx
je r-xdata
push r-xdata
push eax
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
call sub_1006d6a
test eax eax
mov [ ebp - 0x30 ] eax
je r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call sub_1001b1f
test eax eax
mov [ ebp - 0x24 ] eax
jne r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call sub_1001b1f
test eax eax
mov [ ebp - 0x24 ] eax
jne r-xdata
push [ ebx + edi * 4 ]
call [ wcslen@IAT ]
mov [ esi + 0x3c ] eax
jmp r-xdata
push [ ebx + edi * 4 ]
call [ wcslen@IAT ]
inc edi
inc [ ebp + 0x10 ]
inc [ ebp - 0x28 ]
mov [ esi + 0x3c ] eax
mov eax [ ebx + edi * 4 ]
test eax eax
pop ecx
mov [ esi + 0x40 ] eax
je r-xdata
push 0x56
jmp r-xdata
push r-xdata
push [ ebx + edi * 4 ]
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
and [ esi + 0x58 ] eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x8
jmp r-xdata
push eax
call sub_1001a41
push eax
call sub_1006d6a
test eax eax
push [ ebp - 0x30 ]
mov [ esi + 0x5c ] eax
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ esi + 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
inc edi
inc [ ebp + 0x10 ]
mov eax [ ebx + edi * 4 ]
inc [ ebp - 0x28 ]
test eax eax
pop ecx
mov [ esi + 0x48 ] eax
je r-xdata
push [ ebx + edi * 4 ]
call [ wcslen@IAT ]
mov [ esi + 0x44 ] eax
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
push r-xdata
push [ ebx + edi * 4 ]
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
mov [ esi + 0x58 ] 0x1
jmp r-xdata
call sub_1006d0f
call sub_1006d0f
inc edi
inc [ ebp + 0x10 ]
mov eax [ ebx + edi * 4 ]
inc [ ebp - 0x28 ]
test eax eax
je r-xdata
push [ ebx + edi * 4 ]
call [ wcslen@IAT ]
pop ecx
mov [ esi + 0x4c ] eax
push 0x11
jmp r-xdata
mov [ esi + 0x58 ] 0x2
jmp r-xdata
push eax
call sub_1006d6a
test eax eax
mov [ ebp - 0x30 ] eax
je r-xdata
push eax
call sub_1001a41
push eax
call sub_1006d6a
test eax eax
push [ ebp - 0x30 ]
mov [ esi + 0x60 ] eax
je r-xdata
call sub_1006d0f
jmp r-xdata
sub_1002794
push ebp
lea ebp [ esp - 0x21c ]
sub esp 0x29c
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
push r-xdata
push ebx
mov [ ebp + 0x218 ] eax
mov [ ebp + 0x4 ] ebx
mov [ ebp ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
call [ setlocale@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x80 ]
push eax
call sub_10019a0
push ebx
call SetThreadUILanguage
lea eax [ ebp - 0x80 ]
push eax
push [ ebp + 0x228 ]
push [ ebp + 0x224 ]
call sub_1002105
mov esi eax
cmp esi ebx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
xor ebx ebx
cmp [ ebp - 0xc ] ebx
je r-xdata
push 0x61
push 0x1
call sub_1001e92
pop ecx
pop ecx
push r-xdata
call sub_1006d6a
cmp eax ebx
mov [ ebp ] eax
je r-xdata
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] 0x1
call sub_1005db8
lea ecx [ ebp + 0x8 ]
call sub_10060eb
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_1006d0f
mov esi 0x100
jmp r-xdata
push r-xdata
call sub_1006d6a
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
call j_sub_1005e5c
jmp r-xdata
push [ ebp - 0x18 ]
call sub_1005de2
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_1006d0f
cmp [ rw-data ] 0x0
je r-xdata
mov edi sub_100120c
push edi
call sub_1005de2
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp ] ebx
je r-xdata
push eax
call sub_1006d0f
cmp [ ebp - 0x68 ] ebx
mov al [ ebp - 0x78 ]
mov [ rw-data ] al
jne r-xdata
push r-xdata
push [ ebp ]
call [ _wfopen@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
push r-xdata
call sub_1005de2
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
mov edi [ fclose@IAT ]
je r-xdata
push [ ebp ]
call sub_1006d0f
cmp [ ebp - 0x38 ] ebx
je r-xdata
cmp [ ebp - 0x52 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
sete al
push eax
call sub_1001bca
test eax eax
jne r-xdata
push eax
push 0xfeff
call [ fputwc@IAT ]
cmp ax 0xffff
pop ecx
pop ecx
jne r-xdata
push 0x50
push 0x1
call sub_1001e92
mov esi 0x101
jmp r-xdata
lea eax [ ebp ]
push eax
call sub_1005dc5
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call edi
pop ecx
push [ ebp - 0x68 ]
push 0x1
push 0x3
pop ebx
push ebx
call sub_1001e92
push [ ebp - 0x1c ]
push [ ebp - 0x68 ]
call [ Ordinal_WLDAP32_170@IAT ]
mov edi eax
add esp 0x14
test edi edi
mov [ ebp + 0x4 ] edi
jne r-xdata
push r-xdata
push [ ebp - 0x38 ]
call [ wcscmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
push 0x55
push 0x7
call sub_1001e92
mov esi 0x104
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x68 ] eax
mov esi 0x101
jmp r-xdata
pop ecx
pop ecx
call sub_10060eb
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0x4 ] ebx
je r-xdata
push eax
call edi
pop ecx
mov esi [ Ordinal_WLDAP32_14@IAT ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x8
push edi
call esi
lea eax [ ebp - 0x4 ]
push eax
push 0x11
push edi
mov [ ebp - 0x4 ] ebx
call esi
add esp 0x18
cmp [ ebp - 0x48 ] 0x0
je r-xdata
push 0x2
push 0x7
call sub_1001e92
pop ecx
pop ecx
push 0x5b
jmp r-xdata
push [ ebp - 0x68 ]
push 0x59
push 0x1
call sub_1001e92
add esp 0xc
lea eax [ ebp - 0x10 ]
push eax
push 0x101
lea eax [ ebp + 0x14 ]
push eax
call sub_1001c7f
test eax eax
je r-xdata
push [ ebp - 0x18 ]
call sub_1005de2
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_1001a04
mov ecx [ ebp + 0x218 ]
pop edi
mov eax esi
pop esi
pop ebx
call sub_1006a01
add ebp 0x21c
leave
retn
push [ ebp + 0x4 ]
call [ Ordinal_WLDAP32_13@IAT ]
pop ecx
push 0x7
push ebx
call sub_1001e92
push 0x486
push 0x0
push 0x0
push edi
call [ Ordinal_WLDAP32_73@IAT ]
mov esi eax
add esp 0x18
test esi esi
je r-xdata
cmp [ ebp - 0x53 ] 0x0
je r-xdata
pop esi
jmp r-xdata
push [ ebp - 0x68 ]
push 0x5a
push 0x1
call sub_1001e92
add esp 0xc
lea eax [ ebp + 0x14 ]
mov ecx 0x202
lea eax [ ebp + 0x14 ]
push eax
call sub_1006dc7
mov [ ebp - 0xc ] eax
lea ecx [ ebp + 0x14 ]
mov edx 0x202
push edi
call sub_1005de2
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
push esi
call [ Ordinal_WLDAP32_118@IAT ]
push eax
push 0x8
push [ ebp - 0x40 ]
push [ ebp - 0x48 ]
push 0x5
push ebx
call sub_1001e92
push 0x486
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push edi
mov [ ebp - 0x30 ] 0x2
call [ Ordinal_WLDAP32_73@IAT ]
mov esi eax
add esp 0x20
test esi esi
je r-xdata
push [ ebp - 0x48 ]
push ebx
push ebx
call sub_1001e92
push [ ebp - 0x38 ]
push [ ebp - 0x48 ]
push edi
mov edi [ Ordinal_WLDAP32_216@IAT ]
call edi
add esp 0x18
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push 0x57
jmp r-xdata
mov [ ecx ] 0x0
inc ecx
dec edx
jne r-xdata
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] 0x1
push r-xdata
call sub_1005de2
mov esi eax
cmp esi ebx
lea ecx [ ebp + 0x8 ]
je r-xdata
cmp [ ebp - 0x52 ] 0x0
lea eax [ ebp - 0x80 ]
push eax
push edi
je r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
push esi
call [ Ordinal_WLDAP32_118@IAT ]
push eax
push 0x6
jmp r-xdata
mov edi [ ebp + 0x4 ]
cmp eax 0x31
je r-xdata
push rw-data
call sub_1005dc5
lea ecx [ ebp + 0x8 ]
mov esi eax
call j_sub_1005e5c
cmp esi ebx
jne r-xdata
call sub_100541f
call sub_1004363
jmp r-xdata
push [ ebp - 0x38 ]
call [ wcslen@IAT ]
shl eax 0x1
pop ecx
mov ecx [ ebp - 0x38 ]
je r-xdata
push 0x7
call sub_1001e92
add esp 0x10
jmp r-xdata
push 0x31
call [ Ordinal_WLDAP32_118@IAT ]
push eax
push 0x4
push 0x7
call sub_1001e92
add esp 0x10
push 0x31
lea eax [ ebp - 0x4 ]
push eax
push 0x11
push [ ebp + 0x4 ]
mov [ ebp - 0x4 ] 0x2
call esi
push [ ebp - 0x38 ]
push [ ebp - 0x48 ]
push [ ebp + 0x4 ]
call edi
mov esi eax
add esp 0x18
test esi esi
je r-xdata
cmp esi 0x100
jne r-xdata
push r-xdata
push ebx
call sub_1001ff8
push 0x9
push ebx
call sub_1001e92
add esp 0x10
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
push esi
call [ Ordinal_WLDAP32_118@IAT ]
push eax
push 0x4
jmp r-xdata
push 0x17
push 0xa
jmp r-xdata
push 0x7
call sub_1001e92
sub_1002c8e
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ wcsstr@IAT ]
push esi
push edi
xor edi edi
test [ ebp + 0x10 ] 0x2
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] 0x0
mov [ eax ] edi
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov esi sub_100120c
push esi
push [ ebp + 0x8 ]
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
mov esi r-xdata
push esi
push [ ebp + 0x8 ]
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push r-xdata
push esi
push [ ebp + 0x8 ]
call sub_100611d
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov edi [ ebp + 0x14 ]
and [ edi ] 0x0
test [ ebp + 0x10 ] 0x8
je r-xdata
push r-xdata
push [ ebp + 0x8 ]
call ebx
test eax eax
pop ecx
pop ecx
mov esi r-xdata
jne r-xdata
mov esi r-xdata
push esi
push [ ebp + 0x8 ]
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push r-xdata
push esi
push [ ebp + 0x8 ]
call sub_100611d
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
xor esi esi
cmp [ ebp - 0xc ] esi
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
je r-xdata
mov edi [ ebp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
mov esi r-xdata
push esi
push [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
push esi
push [ ebp + 0x8 ]
call sub_100611d
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
push esi
push [ ebp + 0x8 ]
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r-xdata
push esi
push [ ebp + 0x8 ]
call sub_100611d
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax edi
je r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
push [ ebp - 0xc ]
call sub_1006d0f
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x1 ] 0x0
je r-xdata
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax edi
je r-xdata
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x14 ] esi
je r-xdata
push [ ebp - 0x10 ]
call sub_1006d0f
push [ ebp + 0x8 ]
call [ wcslen@IAT ]
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
call sub_1006d00
mov esi eax
test esi esi
jne r-xdata
inc [ edi ]
push esi
add eax 0x2
push eax
push [ ebp + 0x8 ]
call [ wcslen@IAT ]
pop ecx
lea eax [ eax + eax + 0x6 ]
push eax
call sub_1006d00
mov ebx eax
test ebx ebx
je r-xdata
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x18 ] esi
pop edi
pop esi
pop ebx
je r-xdata
push [ ebp - 0x14 ]
call sub_1006d0f
push [ ebp + 0x8 ]
push esi
call [ wcscpy@IAT ]
pop ecx
pop ecx
mov [ edi ] esi
mov [ ebp - 0x8 ] 0x100
jmp r-xdata
push esi
push ebx
call [ wcscpy@IAT ]
push [ ebp + 0x8 ]
mov edi [ wcscat@IAT ]
push ebx
call edi
push esi
push ebx
call edi
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
mov ebx [ wcsstr@IAT ]
add esp 0x18
mov eax [ ebp - 0x8 ]
leave
retn 0x10
push [ ebp - 0x18 ]
call sub_1006d0f
sub_1002eae
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push edi
lea eax [ eax * 4 + 0x8 ]
push eax
call sub_1006d00
mov edi eax
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
lea esi [ edi + 0x2 ]
mov [ edi ] 0x58
mov [ esi ] 0x27
inc esi
inc esi
cmp [ ebp + 0xc ] ebx
jbe r-xdata
mov eax 0x100
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ esi ] 0x27
and [ esi + 0x2 ] 0x0
mov [ eax ] edi
xor eax eax
pop esi
mov eax [ ebp + 0x8 ]
movzx eax [ ebx + eax ]
push eax
push r-xdata
push esi
call [ swprintf@IAT ]
add esp 0xc
add esi 0x4
inc ebx
cmp ebx [ ebp + 0xc ]
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
sub_1002f1f
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
xor ebx ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
call [ Ordinal_WLDAP32_127@IAT ]
mov esi eax
add esp 0xc
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
pop ebx
leave
retn 0x10
push edi
push edi
call [ Ordinal_WLDAP32_224@IAT ]
cmp [ ebp - 0x4 ] ebx
pop ecx
je r-xdata
cmp [ edi ] ebx
je r-xdata
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_167@IAT ]
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov esi edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_140@IAT ]
push esi
push r-xdata
mov edi eax
call [ _wcsicmp@IAT ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push [ esi ]
call sub_100655b
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ esi ]
call sub_1006589
mov [ ebp - 0x8 ] eax
add esi 0x4
cmp [ esi ] ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub_1002fec
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea ecx [ ebp - 0x10 ]
xor bl bl
call sub_1005db8
and [ ebp - 0x2 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_10060eb
mov esi eax
test esi esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
call j_sub_1005e5c
mov eax esi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov ax [ esi ]
test ax ax
jne r-xdata
test bl bl
je r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1005dc5
mov esi eax
cmp ax 0x22
jne r-xdata
cmp ax 0x22
jne r-xdata
cmp ax 0x2c
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ax [ esi ]
mov [ ebp - 0x4 ] ax
inc esi
lea eax [ ebp - 0x4 ]
inc esi
push eax
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x22
jne r-xdata
add esi 0x2
cmp [ esi ] 0x0
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2c
push eax
je r-xdata
xor bl bl
jmp r-xdata
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x22
call sub_1005de2
call sub_1005de2
call sub_1005de2
push r-xdata
lea ecx [ ebp - 0x10 ]
call sub_1005de2
push [ rw-data ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
sub_10030bb
mov edx [ esp + 0x4 ]
xor eax eax
test edx edx
je r-xdata
xor edx edx
div [ esp + 0xc ]
mov eax edx
retn 0xc
mov ecx [ esp + 0x8 ]
push esi
movzx esi [ ecx ]
or esi 0x20
add eax esi
inc ecx
inc ecx
dec edx
jne r-xdata
pop esi
sub_10030e3
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
mov ebx [ rw-data ]
push esi
push ebx
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_10030bb
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
jmp r-xdata
lea eax [ esi + esi * 2 ]
lea eax [ edi + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor esi esi
pop edi
retn 0x8
lea eax [ esi + esi * 2 ]
movzx eax [ edi + eax * 4 + 0x8 ]
pop esi
pop ebx
mov ebx [ esp + 0x10 ]
add ebx ebx
inc esi
cmp esi [ rw-data ]
jb r-xdata
push ebx
push [ esp + 0x18 ]
push [ eax ]
call [ _memicmp@IAT ]
mov edi [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + esi * 2 ]
lea eax [ edi + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor esi esi
cmp [ eax + 0x4 ] ebx
jne r-xdata
sub_1003166
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ rw-data ]
push edi
push [ esp + 0x18 ]
push esi
call sub_10030bb
mov ebx eax
cmp ebx edi
jb r-xdata
mov eax [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ eax + ecx * 4 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
xor ebx ebx
add esi esi
lea ebx [ ebx + ebx * 2 ]
shl ebx 0x2
push esi
mov [ ebx + eax + 0x4 ] esi
call sub_1006d00
mov ecx [ rw-data ]
mov [ ebx + ecx ] eax
mov eax [ rw-data ]
mov edi [ ebx + eax ]
test edi edi
jne r-xdata
lea edi [ esi + esi ]
mov ecx esi
mov esi [ esp + 0x14 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ rw-data ]
xor eax eax
inc eax
mov [ ebx + ecx + 0x8 ] al
xor eax eax
jmp r-xdata
inc ebx
cmp ebx [ rw-data ]
jb r-xdata
push edi
push [ esp + 0x18 ]
push [ ecx ]
call [ _memicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
lea ecx [ ebx + ebx * 2 ]
lea ecx [ eax + ecx * 4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
xor ebx ebx
mov eax [ rw-data ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
sub_1003221
push ebp
mov ebp esp
sub esp 0x30
mov al [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
mov bl al
and al 0x2
push 0x28
mov [ ebp - 0xc ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
and bl 0x1
mov [ ebp - 0x1 ] al
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] esi
call sub_1006d00
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push edi
push esi
push sub_1006635
push sub_1006629
push sub_1006641
push eax
call [ RtlInitializeGenericTable@IAT ]
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
mov [ ebp - 0x8 ] 0x100
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ eax ] esi
je r-xdata
cmp [ ebp - 0xc ] esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push esi
push rw-data
push r-xdata
push esi
push esi
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_208@IAT ]
add esp 0x1c
test eax eax
je r-xdata
test bl bl
jne r-xdata
mov edi eax
cmp [ ebp - 0x18 ] esi
je r-xdata
push [ ebp - 0xc ]
call [ Ordinal_WLDAP32_41@IAT ]
pop ecx
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_26@IAT ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax esi
je r-xdata
cmp [ ebp + 0x18 ] esi
je r-xdata
mov [ ebp - 0x8 ] 0x100
jmp r-xdata
lea eax [ ebp + 0x13 ]
push eax
push 0x8
lea eax [ ebp - 0x30 ]
push eax
push [ rw-data ]
mov [ ebp - 0x2c ] esi
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
cmp eax esi
je r-xdata
push [ ebp - 0x18 ]
call sub_1006d0f
mov ebx eax
cmp ebx esi
pop ecx
pop ecx
jne r-xdata
pop edi
mov [ eax ] esi
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
mov [ ebp - 0x8 ] 0x104
jmp r-xdata
add edi 0x4
cmp [ edi ] esi
mov eax edi
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax esi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ eax ] ecx
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_127@IAT ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] esi
je r-xdata
mov eax rw-data
mov edi eax
push [ eax ]
call sub_1006d6a
cmp eax esi
mov [ ebp - 0x30 ] eax
je r-xdata
mov eax [ ebp - 0x8 ]
leave
retn 0x18
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov edi eax
cmp edi esi
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp - 0xc ]
call [ Ordinal_WLDAP32_41@IAT ]
pop ecx
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp + 0x13 ]
push eax
push 0x8
lea eax [ ebp - 0x30 ]
push eax
push [ rw-data ]
mov [ ebp - 0x2c ] esi
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
push edi
push ebx
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_140@IAT ]
add esp 0xc
cmp eax esi
mov [ ebp - 0x10 ] eax
je r-xdata
push ebx
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_27@IAT ]
lea eax [ ebp - 0xc ]
push eax
push esi
push rw-data
push r-xdata
push 0x1
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_208@IAT ]
add esp 0x1c
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push [ ebp - 0x10 ]
call [ Ordinal_WLDAP32_224@IAT ]
pop ecx
add edi 0x4
cmp [ edi ] esi
mov eax edi
jne r-xdata
push [ ebp - 0x30 ]
call sub_1006d0f
mov [ ebp - 0x8 ] 0x104
jmp r-xdata
push edi
push r-xdata
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
push [ ebp - 0x18 ]
call sub_1006d0f
push [ ebp - 0xc ]
mov [ ebp - 0x18 ] esi
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_36@IAT ]
pop ecx
shl eax 0x1
pop ecx
mov [ rw-data ] eax
jne r-xdata
push [ ebp - 0x14 ]
call sub_1006d0f
push [ eax ]
call sub_1006d6a
cmp eax esi
mov [ ebp - 0x30 ] eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
push edi
push r-xdata
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
push [ eax ]
call sub_1006d6a
mov [ ebp - 0x18 ] eax
lea eax [ eax + eax * 2 ]
shl eax 0x2
push eax
call sub_1006d00
mov edi eax
cmp edi esi
mov [ rw-data ] edi
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
push edi
push r-xdata
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
push [ eax ]
call sub_1006d6a
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push [ ebp - 0x10 ]
call [ Ordinal_WLDAP32_224@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
push ebx
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_167@IAT ]
add esp 0x10
mov eax [ rw-data ]
lea ecx [ eax + eax * 2 ]
shl ecx 0x2
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ rw-data ]
push eax
push eax
call [ wcslen@IAT ]
pop ecx
push eax
call sub_1003166
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] esi
je r-xdata
cmp eax esi
jne r-xdata
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_26@IAT ]
jmp r-xdata
mov edi eax
cmp eax esi
pop ecx
pop ecx
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ ebp - 0x24 ] 0x1
add edi 0x4
cmp [ edi ] esi
mov eax edi
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0xc ]
mov [ ebp + 0x17 ] 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
call [ Ordinal_WLDAP32_127@IAT ]
mov edi eax
add esp 0xc
cmp edi esi
je r-xdata
cmp [ ebp - 0xc ] esi
je r-xdata
push r-xdata
push [ eax ]
call [ wcscmp@IAT ]
test eax eax
pop ecx
pop ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x104
jmp r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_140@IAT ]
mov ebx eax
add esp 0xc
cmp ebx esi
mov [ ebp - 0x10 ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
push [ ebp - 0xc ]
call [ Ordinal_WLDAP32_41@IAT ]
pop ecx
mov [ ebp - 0xc ] esi
push edi
push r-xdata
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
push [ ebx ]
jne r-xdata
call sub_1006d6a
mov edi eax
cmp edi esi
je r-xdata
call sub_1006d6a
cmp eax esi
mov [ ebp - 0x14 ] eax
je r-xdata
push edi
call [ _wtoi@IAT ]
pop ecx
push edi
mov [ ebp - 0x20 ] eax
call sub_1006d0f
mov [ ebp + 0x17 ] 0x1
jmp r-xdata
mov edi [ ebp - 0x14 ]
cmp edi esi
je r-xdata
push ebx
call [ Ordinal_WLDAP32_224@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_167@IAT ]
mov edi eax
add esp 0x10
cmp edi esi
jne r-xdata
cmp [ ebp + 0x17 ] 0x0
je r-xdata
mov ebx [ wcscmp@IAT ]
push r-xdata
push edi
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
test [ ebp - 0x20 ] 0x1
je r-xdata
push edi
call sub_1006d0f
push r-xdata
push edi
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x13 ]
push eax
push 0x8
lea eax [ ebp - 0x30 ]
push eax
push [ rw-data ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] esi
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
push edi
push edi
call [ wcslen@IAT ]
pop ecx
push eax
call sub_1003166
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] esi
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_27@IAT ]
sub_1003730
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
lea eax [ edi + edi + 0x2 ]
push eax
xor ebx ebx
call sub_1006d00
mov esi eax
cmp esi ebx
jne r-xdata
lea eax [ edi + 0x1 ]
push eax
push esi
push edi
push [ esp + 0x1c ]
call [ Ordinal_WLDAP32_29@IAT ]
mov ecx [ esp + 0x28 ]
add eax eax
mov [ eax + esi ] bx
mov [ ecx ] esi
mov ecx [ esp + 0x2c ]
add esp 0x10
add eax 0x2
mov [ ecx ] eax
mov ebx 0x100
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x10
sub_1003780
mov ecx [ esp + 0x4 ]
xor edx edx
cmp [ esp + 0x8 ] edx
je r-xdata
mov al 0x1
mov al [ ecx ]
dec [ esp + 0x8 ]
test al al
js r-xdata
test al 0x40
jne r-xdata
test edx edx
jg r-xdata
test edx edx
jg r-xdata
test edx edx
je r-xdata
xor al al
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
retn 0x8
inc ecx
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test al al
js r-xdata
dec edx
test edx edx
jle r-xdata
shl al 0x1
inc edx
cmp edx 0x3
jg r-xdata
sub_10037ce
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
push esi
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_1005db8
push [ rw-data ]
mov esi [ _wfopen@IAT ]
push [ ebp + 0xc ]
call esi
mov edi eax
cmp edi ebx
pop ecx
pop ecx
mov [ ebp - 0x8 ] edi
jne r-xdata
push [ rw-data ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
jne r-xdata
push [ ebp + 0xc ]
push 0x36
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x6c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push 0x4b
jmp r-xdata
mov [ ebp - 0x4 ] 0x101
jmp r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
push edi
push 0xfeff
call [ fputwc@IAT ]
cmp ax 0xffff
pop ecx
pop ecx
je r-xdata
push 0x7
call sub_1001e92
add esp 0xc
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
je r-xdata
push [ ebp + 0x8 ]
push 0x37
push 0x3
call sub_1001e92
mov ebx [ fputws@IAT ]
push edi
push r-xdata
call ebx
add esp 0x14
cmp eax 0xffff
je r-xdata
mov ebx [ fputws@IAT ]
push edi
push r-xdata
jmp r-xdata
push 0x32
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x104
jmp r-xdata
cmp [ ebp - 0xc ] edi
je r-xdata
push [ ebp - 0x10 ]
call sub_1006d0f
push edi
push [ rw-data ]
call ebx
cmp eax 0xffff
pop ecx
pop ecx
jne r-xdata
cmp [ ebp - 0x8 ] edi
mov esi [ fclose@IAT ]
je r-xdata
push [ ebp - 0xc ]
call sub_1006d0f
mov eax [ rw-data ]
mov edi [ fwprintf@IAT ]
xor esi esi
dec eax
test eax eax
jle r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push [ ebp - 0x8 ]
call esi
pop ecx
mov eax [ rw-data ]
push [ eax + esi * 8 + 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
call edi
add esp 0xc
cmp eax 0xffff
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 8 + 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
call edi
add esp 0xc
cmp eax 0xffff
je r-xdata
lea ecx [ ebp - 0x34 ]
call j_sub_1005e5c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
push [ ebp - 0x14 ]
call esi
pop ecx
push 0x32
push 0x7
call sub_1001e92
pop ecx
pop ecx
push [ ebp - 0x8 ]
push [ rw-data ]
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x34 ] 0x0
push [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
push r-xdata
push r-xdata
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r-xdata
push [ ebp - 0x14 ]
call [ fwscanf@IAT ]
add esp 0x10
mov esi eax
jmp r-xdata
push [ ebp - 0x8 ]
push [ rw-data ]
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ rw-data ]
inc esi
dec eax
cmp esi eax
jl r-xdata
push [ ebp - 0x8 ]
push [ rw-data ]
jmp r-xdata
cmp esi 0xffff
jne r-xdata
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
test esi esi
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_1005db8
lea ecx [ ebp - 0x28 ]
call sub_10060eb
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
call j_sub_1005e5c
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x14 ]
call sub_1006230
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push 0x2f
jmp r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x28 ]
call sub_1005de2
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x104
mov eax [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
test eax eax
lea ecx [ ebp - 0x28 ]
je r-xdata
call sub_1005d13
lea ecx [ ebp - 0x34 ]
mov edi eax
call sub_10060eb
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
push r-xdata
call sub_1005de2
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
mov esi [ rw-data ]
mov eax [ ebp + 0x10 ]
sub esi [ ebp - 0x1c ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
push [ ebp - 0x10 ]
call sub_1006d0f
and [ ebp - 0x10 ] 0x0
jmp r-xdata
push edi
lea ecx [ ebp - 0x34 ]
call sub_1005de2
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
call sub_1001a98
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_1002fec
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
test esi esi
jne r-xdata
xor edi edi
test esi esi
jbe r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1005d13
mov ecx [ ebp + 0x10 ]
mov esi eax
mov eax [ ecx + 0x5c ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x34 ]
call sub_1005de2
jmp r-xdata
push esi
push r-xdata
push [ ebp - 0x8 ]
call [ fwprintf@IAT ]
add esp 0xc
cmp eax 0xffff
je r-xdata
lea edx [ ebp - 0xc ]
push edx
push [ ecx + 0x60 ]
push eax
push esi
call sub_100611d
cmp eax edi
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ esi - 0x1 ]
cmp edi eax
lea ecx [ ebp - 0x34 ]
jne r-xdata
push r-xdata
jmp r-xdata
push 0x32
push [ ebp - 0x8 ]
push [ rw-data ]
call ebx
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp - 0xc ] edi
je r-xdata
push r-xdata
push r-xdata
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1005de2
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ ebp - 0xc ] edi
je r-xdata
mov esi [ ebp - 0xc ]
push [ rw-data ]
call sub_1005de2
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
inc edi
cmp edi esi
jb r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r-xdata
push [ ebp - 0x14 ]
call [ fwscanf@IAT ]
add esp 0x10
lea ecx [ ebp - 0x28 ]
mov esi eax
call j_sub_1005e5c
push [ ebp - 0xc ]
call sub_1006d0f
mov [ ebp - 0xc ] edi
sub_1003c10
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
mov [ ebp - 0x1 ] 0x0
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push [ eax ]
push [ eax + 0x4 ]
call sub_1003780
test al al
je r-xdata
mov edx [ eax ]
xor ecx ecx
test edx edx
jbe r-xdata
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + edi * 4 ]
and [ ebp - 0x8 ] 0x0
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push [ eax ]
push [ eax + 0x4 ]
call sub_1003730
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
mov esi [ eax + 0x4 ]
mov [ ebp - 0x1 ] 0x1
shr [ ebp + 0x8 ] 0x1
mov ecx [ ebp + 0x8 ]
xor eax eax
dec ecx
je r-xdata
cmp [ rw-data ] 0x0
mov eax [ ebx + edi * 4 ]
jne r-xdata
jmp r-xdata
cmp al 0x7e
jg r-xdata
pop esi
pop ebx
push edx
call sub_1006d0f
jmp r-xdata
cmp [ edx + eax * 2 ] 0x20
jb r-xdata
inc ecx
cmp ecx edx
jb r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
inc eax
cmp eax ecx
jb r-xdata
mov al [ esi + ecx ]
cmp al 0x20
jl r-xdata
jmp r-xdata
jmp r-xdata
sub_1003cca
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x8 ] 0x0
push ebx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002f1f
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_127@IAT ]
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
pop ebx
leave
retn 0x18
push esi
push edi
and [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
mov [ ebp - 0x28 ] ebx
call [ RtlLookupElementGenericTable@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push esi
cmp [ ebp + 0x10 ] al
je r-xdata
push [ ebp - 0xc ]
push ebx
call sub_10065b7
test eax eax
jne r-xdata
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_142@IAT ]
mov esi eax
push esi
mov [ ebp - 0x10 ] esi
call [ Ordinal_WLDAP32_77@IAT ]
add esp 0x10
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
je r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov edi [ _wcsicmp@IAT ]
push ebx
push r-xdata
call edi
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x1c ]
mov [ ebp - 0x20 ] ebx
call [ RtlLookupElementGenericTable@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
push esi
call sub_1003c10
test al al
jne r-xdata
push ebx
push r-xdata
call edi
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ rw-data ]
mov [ ecx + eax * 8 ] 0x1
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov [ ebp - 0x1c ] ecx
jl r-xdata
push ebx
push ebx
call [ wcslen@IAT ]
pop ecx
push eax
call sub_10030e3
cmp eax 0x1
jne r-xdata
push ebx
call sub_1006d6a
test eax eax
mov [ ebp - 0x20 ] eax
je r-xdata
lea ecx [ eax * 8 + 0x320 ]
push ecx
shl eax 0x3
push eax
push [ rw-data ]
call sub_1006d21
test eax eax
je r-xdata
push [ rw-data ]
push ebx
call [ wcscmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
test esi esi
mov [ ebp - 0x8 ] 0x100
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ eax + ecx * 8 ] 0x1
mov eax [ rw-data ]
mov ecx [ ebp - 0x20 ]
mov edx [ rw-data ]
mov [ edx + eax * 8 + 0x4 ] ecx
inc [ rw-data ]
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x1c ]
call [ RtlInsertElementGenericTable@IAT ]
jmp r-xdata
add [ rw-data ] 0x64
mov [ rw-data ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
mov edi [ rw-data ]
mov eax edi
lea edx [ eax + 0x1 ]
push esi
call [ Ordinal_WLDAP32_79@IAT ]
pop ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ esi ]
cmp [ edx ] eax
jne r-xdata
mov eax edi
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi [ edx + 0x4 ]
mov ecx eax
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov esi [ ebp - 0x10 ]
push [ ebp - 0x10 ]
jmp r-xdata
call [ Ordinal_WLDAP32_79@IAT ]
pop ecx
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_167@IAT ]
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
sub_1003f09
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
call sub_1005db8
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1c ] ebx
call sub_1001a98
xor eax eax
cmp [ rw-data ] ebx
jle r-xdata
push [ ebp + 0x24 ]
lea eax [ ebp - 0x1 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003cca
mov esi eax
cmp esi ebx
jne r-xdata
mov ecx [ rw-data ]
mov [ ecx + eax * 8 ] 0x0
inc eax
cmp eax [ rw-data ]
jl r-xdata
lea ecx [ ebp - 0x30 ]
call j_sub_1005e5c
mov eax esi
pop esi
pop ebx
leave
retn 0x20
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_133@IAT ]
mov edi eax
cmp edi ebx
pop ecx
pop ecx
mov [ ebp - 0x24 ] edi
jne r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
mov [ rw-data ] 0x1
lea eax [ ebp + 0x20 ]
push eax
push 0xf
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_1002c8e
mov esi eax
cmp esi ebx
jne r-xdata
push 0x33
cmp [ ebp - 0x24 ] ebx
pop edi
je r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp - 0x24 ]
call [ Ordinal_WLDAP32_147@IAT ]
pop ecx
push [ ebp + 0x20 ]
mov edi [ fwprintf@IAT ]
push [ rw-data ]
push r-xdata
push [ ebp + 0x1c ]
call edi
add esp 0x10
cmp eax 0xffffffff
je r-xdata
push edi
call sub_1006d6a
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x14 ]
call sub_1006d0f
push 0x32
jmp r-xdata
push [ ebp - 0x18 ]
push r-xdata
push [ ebp + 0x1c ]
call edi
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
push [ ebp - 0xc ]
call [ Ordinal_WLDAP32_79@IAT ]
pop ecx
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov esi 0x104
jmp r-xdata
cmp [ rw-data ] ebx
jle r-xdata
push 0x34
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov esi 0x101
jmp r-xdata
push [ ebp - 0x18 ]
call sub_1006d0f
cmp [ rw-data ] ebx
mov [ ebp - 0x20 ] ebx
jle r-xdata
push [ ebp + 0x1c ]
push r-xdata
call [ fputws@IAT ]
cmp eax 0xffff
pop ecx
pop ecx
jne r-xdata
push [ ebp + 0x1c ]
push [ rw-data ]
call [ fputws@IAT ]
cmp eax 0xffff
pop ecx
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea eax [ eax + ecx * 8 ]
cmp [ eax ] 0x0
je r-xdata
push [ ebp - 0x18 ]
push 0x35
push 0xa
call sub_1001e92
add esp 0xc
push 0x34
jmp r-xdata
mov edi [ ebp - 0x20 ]
inc edi
cmp edi [ rw-data ]
jge r-xdata
mov esi [ eax + 0x4 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_142@IAT ]
push eax
mov [ ebp - 0xc ] eax
call [ Ordinal_WLDAP32_77@IAT ]
push esi
push r-xdata
mov [ ebp + 0x14 ] eax
call [ _wcsicmp@IAT ]
add esp 0x18
push [ ebp + 0x14 ]
mov ebx eax
push [ ebp - 0xc ]
neg ebx
sbb bl bl
inc bl
call sub_1003c10
lea ecx [ ebp - 0x30 ]
mov [ ebp + 0x27 ] al
call sub_10060eb
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_1006d0f
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov esi 0x104
jmp r-xdata
cmp edi [ rw-data ]
mov [ ebp - 0x20 ] edi
jl r-xdata
push [ ebp + 0x1c ]
push r-xdata
call [ fputws@IAT ]
cmp eax 0xffff
pop ecx
pop ecx
je r-xdata
xor ebx ebx
cmp [ ebp - 0x1c ] ebx
je r-xdata
xor edi edi
cmp [ ebp + 0x14 ] edi
jle r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x10 ]
call sub_1006d0f
push 0x32
push [ ebp - 0xc ]
call [ Ordinal_WLDAP32_79@IAT ]
and [ ebp - 0xc ] 0x0
pop ecx
lea ecx [ ebp - 0x30 ]
call sub_1005d13
mov ebx eax
lea eax [ ebp + 0x20 ]
push eax
push 0x4
lea eax [ ebp - 0x1c ]
push eax
push ebx
call sub_1002c8e
mov esi eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push [ ebp - 0x8 ]
call sub_1006d0f
mov edi [ ebp - 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push r-xdata
push [ ebp + 0x1c ]
call [ fwprintf@IAT ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ebx edi
lea ecx [ ebp + 0x18 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push [ eax ]
push [ eax + 0x4 ]
call sub_1003730
mov esi eax
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ eax ]
push [ eax + 0x4 ]
call sub_1002eae
mov esi eax
test esi esi
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + edi * 4 ]
lea ecx [ ebp + 0x18 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push [ eax ]
push [ eax + 0x4 ]
call sub_1003730
mov esi eax
test esi esi
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp + 0x20 ]
push ecx
push 0x3
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp + 0x18 ] eax
call sub_1002c8e
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + edi * 4 + 0x4 ] 0x0
jne r-xdata
push r-xdata
push [ ebp - 0x8 ]
call [ _wcsicmp@IAT ]
neg eax
pop ecx
sbb eax eax
pop ecx
push [ ebp - 0x8 ]
inc eax
inc eax
mov [ rw-data ] eax
call sub_1006d0f
and [ ebp - 0x8 ] esi
push edi
call sub_1006d0f
and [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov [ ebp + 0x18 ] eax
inc edi
cmp edi [ ebp + 0x14 ]
jl r-xdata
jmp r-xdata
test bl bl
jne r-xdata
lea ecx [ ebp - 0x30 ]
test edi edi
lea ecx [ ebp - 0x30 ]
je r-xdata
cmp [ ebp + 0x27 ] 0x0
mov eax [ eax + edi * 4 ]
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push [ ebp + 0x18 ]
call sub_1005de2
mov esi eax
test esi esi
jne r-xdata
push r-xdata
call sub_1005de2
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
push [ ebp - 0x14 ]
call sub_1006d0f
mov [ ebp - 0x14 ] esi
cmp [ ebp - 0x10 ] esi
je r-xdata
push [ ebp - 0x8 ]
call sub_1006d0f
mov [ ebp - 0x8 ] esi
push [ ebp - 0x10 ]
call sub_1006d0f
mov [ ebp - 0x10 ] esi
sub_1004363
push ebp
lea ebp [ esp - 0x7dc ]
sub esp 0x85c
mov eax [ rw-data ]
push ebx
xor ebx ebx
mov [ ebp + 0x7d8 ] eax
push esi
mov esi [ ebp + 0x7e8 ]
push edi
mov edx 0x81
xor eax eax
mov [ ebp + 0x3c8 ] bx
mov ecx edx
lea edi [ ebp + 0x3ca ]
[ edi ]
stosw [ edi ]
xor eax eax
cmp [ esi + 0x30 ] bl
mov [ ebp + 0x5d0 ] bx
mov ecx edx
lea edi [ ebp + 0x5d2 ]
[ edi ]
stosw [ edi ]
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x55 ] 0x1
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x68 ] ebx
lea edi [ ebp - 0x68 ]
mov [ ebp - 0x70 ] ebx
jne r-xdata
cmp [ esi + 0x6c ] bl
je r-xdata
xor edi edi
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp + 0x3c8 ] bx
mov esi [ DeleteFileW@IAT ]
je r-xdata
cmp [ esi + 0x31 ] bl
je r-xdata
push [ esi + 0x14 ]
push 0x28
push 0x3
call sub_1001e92
push 0x29
push 0x3
call sub_1001e92
add esp 0x14
call sub_100666b
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
jne r-xdata
cmp [ ebp + 0x5d0 ] bx
je r-xdata
lea eax [ ebp + 0x3c8 ]
push eax
call esi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x50 ] 0x2
call sub_1006381
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
lea eax [ ebp + 0x5d0 ]
push eax
call esi
lea eax [ ebp - 0x70 ]
push eax
push edi
lea eax [ ebp - 0x78 ]
push eax
push [ ebp - 0x50 ]
push [ esi + 0x28 ]
push [ ebp + 0x7e4 ]
call sub_1003221
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
jne r-xdata
or [ ebp - 0x50 ] 0x1
cmp [ ebp - 0x78 ] ebx
je r-xdata
xor edi edi
cmp [ rw-data ] ebx
jbe r-xdata
cmp [ esi + 0x1c ] ebx
mov eax [ ebp - 0x78 ]
jne r-xdata
cmp [ ebp - 0x74 ] ebx
je r-xdata
push [ ebp - 0x78 ]
call sub_1006d0f
push ecx
call sub_1006d0f
mov [ rw-data ] ebx
xor esi esi
cmp [ esi + 0x31 ] bl
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x54 ] ebx
je r-xdata
push [ ebp - 0x74 ]
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_191@IAT ]
pop ecx
pop ecx
inc edi
add esi 0xc
cmp edi [ rw-data ]
jb r-xdata
push [ eax ]
call sub_1006d0f
mov ecx [ rw-data ]
cmp [ esi + 0x30 ] bl
je r-xdata
cmp [ ebp - 0x70 ] ebx
jne r-xdata
mov [ esi + 0x1c ] eax
push 0x5b
push 0x1
call sub_1001e92
pop ecx
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
mov esi [ RtlEnumerateGenericTable@IAT ]
mov edi [ RtlDeleteElementGenericTable@IAT ]
je r-xdata
push [ ebp - 0x54 ]
call [ Ordinal_WLDAP32_41@IAT ]
pop ecx
mov [ ebp - 0x54 ] ebx
lea eax [ esi + ecx ]
cmp [ eax + 0x8 ] bl
je r-xdata
lea eax [ ebp + 0x1c0 ]
push eax
mov edi 0x104
push edi
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x68 ] ebx
jne r-xdata
push 0x5c
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ esi + 0x31 ] bl
cmp [ ebp - 0x5c ] ebx
je r-xdata
push 0x1
push eax
jmp r-xdata
push 0x2a
push 0x7
call sub_1001e92
pop ecx
mov [ ebp + 0x7e8 ] edi
jmp r-xdata
lea eax [ ebp + 0x3c8 ]
push eax
push ebx
push r-xdata
lea eax [ ebp + 0x1c0 ]
push eax
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
push 0x58
push 0x1
call sub_1001e92
pop ecx
pop ecx
mov [ esi + 0x30 ] bl
mov eax [ rw-data ]
pop edi
pop esi
cmp eax ebx
pop ebx
je r-xdata
jmp r-xdata
call esi
cmp eax ebx
jne r-xdata
pop ecx
push [ rw-data ]
lea eax [ ebp + 0x3c8 ]
push eax
call [ _wfopen@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0x50 ] eax
jne r-xdata
mov ecx [ ebp + 0x7d8 ]
mov eax [ ebp + 0x7e8 ]
call sub_1006a01
add ebp 0x7dc
leave
retn 0x8
push eax
call sub_1006d0f
push 0x1
push [ ebp - 0x5c ]
call esi
cmp eax ebx
jne r-xdata
mov ecx [ eax ]
push eax
push [ rw-data ]
mov [ ebp - 0x6c ] ecx
call edi
push [ ebp - 0x6c ]
call sub_1006d0f
push 0x1
push [ rw-data ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebx
cmp [ esi + 0x31 ] bl
je r-xdata
push 0x2b
jmp r-xdata
mov ecx [ eax ]
push eax
push [ ebp - 0x5c ]
mov [ ebp - 0x6c ] ecx
call edi
push [ ebp - 0x6c ]
call sub_1006d0f
push [ ebp - 0x5c ]
call sub_1006d0f
push 0x28
call sub_1006d00
cmp eax ebx
mov [ ebp - 0x5c ] eax
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push edi
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
push 0x7
call sub_1001e92
pop ecx
mov [ ebp + 0x7e8 ] 0x101
jmp r-xdata
mov [ ebp + 0x7e8 ] 0x100
jmp r-xdata
push ebx
push sub_1006635
push sub_1006629
push sub_1006641
push eax
call [ RtlInitializeGenericTable@IAT ]
push 0x320
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
lea eax [ ebp + 0x5d0 ]
push eax
push ebx
push r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
push 0x2a
push 0x7
call sub_1001e92
pop ecx
mov [ ebp + 0x7e8 ] edi
jmp r-xdata
pop ecx
cmp [ ebp - 0x4c ] ebx
je r-xdata
mov [ rw-data ] 0x64
mov [ rw-data ] ebx
cmp [ esi + 0x30 ] bl
je r-xdata
push [ rw-data ]
lea eax [ ebp + 0x5d0 ]
push eax
call [ _wfopen@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
je r-xdata
push 0x2a
push [ ebp - 0x50 ]
call [ fclose@IAT ]
cmp [ ebp - 0x50 ] ebx
je r-xdata
push [ ebp - 0x4c ]
call [ fclose@IAT ]
lea eax [ ebp - 0x54 ]
push eax
push ebx
push [ esi + 0x24 ]
push [ esi + 0x20 ]
push [ esi + 0x58 ]
push [ esi + 0x1c ]
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_208@IAT ]
mov edi eax
add esp 0x1c
cmp edi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ esi + 0x24 ]
push [ esi + 0x20 ]
push [ esi + 0x58 ]
push [ esi + 0x1c ]
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_206@IAT ]
add esp 0x2c
cmp eax ebx
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x60 ] ebx
jne r-xdata
push 0x2b
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov [ ebp + 0x7e8 ] 0x101
jmp r-xdata
push 0x2d
push 0x3
call sub_1001e92
push r-xdata
push 0xa
call sub_1001ff8
add esp 0x10
call sub_1001a98
push [ ebp - 0x54 ]
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_26@IAT ]
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
push edi
call [ Ordinal_WLDAP32_118@IAT ]
push eax
push 0x2e
push 0x7
call sub_1001e92
add esp 0x10
push [ ebp + 0x7e4 ]
call sub_1005fc5
mov [ ebp + 0x7e8 ] edi
jmp r-xdata
cmp [ ebp - 0x74 ] ebx
je r-xdata
call [ Ordinal_WLDAP32_16@IAT ]
mov edi eax
push 0x2c
push 0x7
mov [ ebp - 0x60 ] edi
call sub_1001e92
cmp edi ebx
pop ecx
pop ecx
mov [ ebp + 0x7e8 ] edi
jne r-xdata
push 0x46
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov [ ebp + 0x7e8 ] ebx
jmp r-xdata
push [ ebp - 0x5c ]
xor eax eax
push [ ebp - 0x4c ]
mov al [ esi + 0x33 ]
push [ ebp - 0x50 ]
push eax
xor eax eax
mov al [ esi + 0x31 ]
push eax
push [ esi + 0x28 ]
push edi
push [ ebp + 0x7e4 ]
call sub_1003f09
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
jne r-xdata
cmp [ ebp - 0x60 ] ebx
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
push 0x100
push ebx
push [ ebp - 0x74 ]
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_135@IAT ]
add esp 0x18
cmp [ ebp - 0x55 ] bl
mov [ ebp - 0x60 ] eax
je r-xdata
inc [ ebp - 0x64 ]
push edi
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_27@IAT ]
mov edi eax
cmp edi ebx
pop ecx
pop ecx
jne r-xdata
cmp [ ebp - 0x64 ] ebx
jne r-xdata
cmp [ ebp - 0x60 ] 0x5e
je r-xdata
cmp [ ebp - 0x54 ] ebx
je r-xdata
push 0x2d
push 0x3
call sub_1001e92
push r-xdata
push 0xa
call sub_1001ff8
add esp 0x10
mov [ ebp - 0x55 ] bl
mov [ rw-data ] 0x1
cmp [ ebp - 0x4c ] ebx
je r-xdata
push 0x2c
push 0x7
call sub_1001e92
pop ecx
pop ecx
push [ ebp + 0x7e4 ]
call sub_1005fc5
mov eax [ ebp - 0x60 ]
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
jne r-xdata
push [ ebp - 0x54 ]
call [ Ordinal_WLDAP32_41@IAT ]
cmp [ ebp - 0x60 ] ebx
pop ecx
mov [ ebp - 0x54 ] ebx
je r-xdata
push ebx
push ebx
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x70 ] ebx
push [ ebp + 0x7e4 ]
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x6c ] ebx
call [ Ordinal_WLDAP32_179@IAT ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x6c ]
add esp 0x20
cmp eax ebx
je r-xdata
push [ ebp - 0x50 ]
mov edi [ fclose@IAT ]
call edi
cmp [ ebp - 0x4c ] ebx
pop ecx
mov [ ebp - 0x50 ] ebx
je r-xdata
push [ ebp - 0x4c ]
call [ fclose@IAT ]
cmp [ rw-data ] bl
pop ecx
mov [ ebp - 0x4c ] ebx
je r-xdata
jmp r-xdata
cmp [ ebp - 0x68 ] ebx
je r-xdata
cmp [ eax ] ebx
mov ecx eax
je r-xdata
push 0x30
push 0x3
call sub_1001e92
pop ecx
pop ecx
push esi
push [ esi + 0x14 ]
lea eax [ ebp + 0x3c8 ]
push eax
call sub_10037ce
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
jne r-xdata
push [ ebp - 0x4c ]
call edi
pop ecx
mov [ ebp - 0x4c ] ebx
lea eax [ ebp + 0x5d0 ]
push r-xdata
push eax
call [ _wfopen@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jne r-xdata
cmp [ ebp - 0x70 ] ebx
je r-xdata
push [ ebp - 0x68 ]
call [ Ordinal_WLDAP32_147@IAT ]
pop ecx
push eax
call [ Ordinal_WLDAP32_224@IAT ]
pop ecx
add ecx 0x4
cmp [ ecx ] ebx
jne r-xdata
push [ ebp - 0x64 ]
push 0x31
push 0x3
call sub_1001e92
add esp 0xc
push [ ebp - 0x50 ]
push [ ebp - 0x4c ]
call sub_1005f55
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
je r-xdata
push [ ebp - 0x54 ]
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_26@IAT ]
jmp r-xdata
push [ ebp - 0x70 ]
call [ Ordinal_WLDAP32_147@IAT ]
pop ecx
push 0x2f
push 0x7
call sub_1001e92
pop ecx
pop ecx
jmp r-xdata
mov edi eax
cmp edi ebx
pop ecx
pop ecx
jne r-xdata
push [ ebp - 0x5c ]
xor eax eax
push [ ebp - 0x4c ]
mov al [ esi + 0x33 ]
push [ ebp - 0x50 ]
push eax
xor eax eax
mov al [ esi + 0x31 ]
push eax
push [ esi + 0x28 ]
push edi
push [ ebp + 0x7e4 ]
call sub_1003f09
cmp eax ebx
mov [ ebp + 0x7e8 ] eax
jne r-xdata
inc [ ebp - 0x64 ]
push edi
push [ ebp + 0x7e4 ]
call [ Ordinal_WLDAP32_27@IAT ]
sub_1004aff
mov eax [ esp + 0x8 ]
push esi
lea eax [ eax * 4 + 0x4 ]
push eax
xor esi esi
call sub_1006d00
test eax eax
mov ecx [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
jne r-xdata
and [ ecx + 0xc ] 0x0
mov eax esi
pop esi
retn 0x8
mov esi 0x100
sub_1004b47
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax 0x104
jmp r-xdata
push r-xdata
push [ ebp + 0xc ]
call sub_1001ff8
pop ecx
pop ecx
xor eax eax
push ebx
push esi
mov ebx r-xdata
pop edi
leave
retn 0x8
call sub_1001ff8
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esp 0x10
test esi esi
je r-xdata
call sub_1001ff8
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esp 0x10
test esi esi
je r-xdata
push r-xdata
push [ ebp + 0xc ]
call sub_1001ff8
add edi 0x4
mov eax [ edi ]
inc [ ebp - 0x4 ]
test eax eax
pop ecx
pop ecx
jne r-xdata
jmp r-xdata
jmp r-xdata
push [ eax + 0x4 ]
mov ecx [ eax ]
push [ ebp - 0x4 ]
mov edx ecx
or edx 0x80
cmp ecx edx
push ebx
push [ ebp + 0xc ]
jne r-xdata
pop esi
pop ebx
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push eax
push r-xdata
push [ ebp + 0xc ]
call sub_1001ff8
add esp 0xc
add esi 0x4
push [ eax ]
push 0x39
push [ ebp + 0xc ]
call sub_1001e92
add esp 0xc
add esi 0x4
jmp r-xdata
sub_1004c1b
push edi
mov edi [ esp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
xor eax eax
pop edi
retn 0x4
push esi
test eax eax
jne r-xdata
jmp r-xdata
push eax
call sub_1006d0f
add esi 0x4
mov eax [ esi ]
mov eax [ edi ]
push [ eax + 0x8 ]
call sub_1006d0f
mov eax [ edi ]
push [ eax + 0x4 ]
call sub_1006d0f
push [ edi ]
call sub_1006d0f
and [ edi ] 0x0
add edi 0x4
cmp [ edi ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ eax ]
mov esi [ eax + 0x8 ]
mov eax [ esi ]
mov edx ecx
or edx 0x80
cmp ecx edx
jne r-xdata
pop esi
push [ eax + 0x4 ]
call sub_1006d0f
push [ esi ]
call sub_1006d0f
add esi 0x4
mov eax [ esi ]
jmp r-xdata
sub_1004c93
push ebp
mov ebp esp
sub esp 0x18
push esi
xor esi esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] esi
call sub_1005c67
lea ecx [ ebp - 0x18 ]
call sub_10060b1
cmp eax esi
mov [ ebp - 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1005914
cmp eax esi
mov [ ebp - 0x8 ] eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
call j_sub_1005d7e
mov eax [ ebp - 0x8 ]
pop esi
leave
retn 0x8
push [ ebp - 0x4 ]
call sub_1006d0f
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push 0x47
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x18 ]
call sub_1005d16
cmp eax esi
mov [ ebp - 0x8 ] eax
jne r-xdata
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov [ ebp - 0x8 ] 0x104
cmp [ ebp - 0x4 ] esi
je r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1005914
cmp eax esi
mov [ ebp - 0x8 ] eax
jne r-xdata
push [ ebp - 0x4 ]
call sub_1006d0f
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0xc ] 0x2
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
cmp [ ebp - 0xc ] 0x3
je r-xdata
push [ ebp - 0x4 ]
call sub_1006d0f
mov [ ebp - 0x4 ] esi
jmp r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_1005c74
cmp eax esi
mov [ ebp - 0x8 ] eax
jne r-xdata
push ebx
lea ecx [ ebp - 0x18 ]
call sub_1005d0f
cmp eax esi
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
mov [ ebp + 0xf ] 0x0
jbe r-xdata
cmp [ rw-data ] 0xffffffff
pop ebx
jne r-xdata
push edi
mov edi [ _wcsicmp@IAT ]
cmp [ ebp + 0xf ] 0x0
jne r-xdata
push 0x48
jmp r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push r-xdata
push [ eax + esi * 4 ]
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
push 0x49
inc esi
cmp esi [ ebx ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push r-xdata
push [ eax + esi * 4 ]
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0xffffffff
jne r-xdata
xor esi esi
pop edi
mov [ ebp + 0xf ] 0x1
sub_1004e0e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call [ wcslen@IAT ]
mov ebx eax
test bl 0x1
pop ecx
je r-xdata
shr ebx 0x1
lea eax [ ebx + ebx ]
push eax
call sub_1006d00
mov edi eax
test edi edi
jne r-xdata
push 0x4a
push 0x7
call sub_1001e92
pop ecx
pop ecx
jmp r-xdata
push esi
mov [ ebp + 0x8 ] edi
call [ _wcslwr@IAT ]
mov ax [ esi ]
test ax ax
pop ecx
je r-xdata
mov esi 0x100
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ebx
xor eax eax
push 0x30
pop edx
mov eax esi
jmp r-xdata
cmp ax dx
jb r-xdata
cmp ax 0x66
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
mov esi 0x104
je r-xdata
cmp ax 0x39
ja r-xdata
sub al 0x57
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1006d0f
sub al dl
cmp cx 0x61
jb r-xdata
cmp cx dx
jb r-xdata
cmp cx 0x66
ja r-xdata
cmp cx 0x39
ja r-xdata
sub cl 0x57
jmp r-xdata
sub cl dl
shl al 0x4
add al cl
mov [ edi ] al
mov ax [ esi ]
inc edi
test ax ax
jne r-xdata
inc esi
inc esi
mov cx [ esi ]
inc esi
inc esi
cmp ax 0x61
jb r-xdata
sub_1004ee1
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1006d0f
and [ esi ] 0x0
add esi 0x8
cmp [ esi ] 0x0
je r-xdata
push eax
call sub_1004c1b
pop esi
retn 0x4
push esi
call sub_1004c1b
and [ esi ] 0x0
sub_1004f17
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xc
xor ebx ebx
call sub_1006d00
mov esi eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
xor eax eax
cmp [ ebp + 0x1c ] 0x0
mov edi esi
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jne r-xdata
mov [ ebp + 0x1c ] 0x100
jmp r-xdata
mov [ esi ] 0x80
call sub_1006d6a
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
and [ esi ] 0x0
call sub_1006d6a
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
lea eax [ eax * 4 + 0x4 ]
push eax
call sub_1006d00
mov edi eax
test edi edi
mov [ esi + 0x8 ] edi
je r-xdata
mov [ ebp + 0x1c ] 0x100
mov [ ebp + 0x1c ] 0x100
mov eax [ ebp + 0x18 ]
lea eax [ eax * 4 + 0x4 ]
push eax
call sub_1006d00
mov edi eax
test edi edi
mov [ esi + 0x8 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
xor eax eax
cmp [ ebp + 0x18 ] eax
stosd [ edi ]
jbe r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push eax
call sub_1006d0f
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push eax
call sub_1006d0f
xor eax eax
cmp [ ebp + 0x18 ] eax
stosd [ edi ]
jbe r-xdata
mov eax [ esi + 0x8 ]
and [ eax + ebx * 4 ] 0x0
push r-xdata
push [ ebp + 0x10 ]
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
mov edi [ ebp + 0x14 ]
push esi
call sub_1006d0f
cmp [ eax ] edi
je r-xdata
cmp [ eax ] edi
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x1
jmp r-xdata
mov ecx [ edi ]
push eax
push ecx
call sub_1004e0e
add edi 0x4
test eax eax
mov [ ebp + 0x1c ] eax
jne r-xdata
push [ esi + 0x8 ]
call sub_1006d0f
mov eax [ esi + 0x8 ]
mov eax [ edi + eax ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push [ edi + eax ]
call sub_1006d0f
mov eax [ esi + 0x8 ]
add edi 0x4
cmp [ edi + eax ] 0x0
jne r-xdata
mov eax [ edi ]
mov [ ebp + 0x14 ] eax
lea ecx [ ebp + 0x14 ]
push ecx
push [ rw-data ]
push eax
push [ edi ]
call sub_100611d
test eax eax
mov [ ebp + 0x1c ] eax
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
xor edi edi
cmp eax edi
je r-xdata
inc ebx
cmp ebx [ ebp + 0x18 ]
jb r-xdata
mov eax [ esi + 0x8 ]
push [ edi + eax ]
call sub_1006d0f
mov eax [ esi + 0x8 ]
add edi 0x4
cmp [ edi + eax ] 0x0
jne r-xdata
push eax
call sub_1006d0f
jmp r-xdata
inc ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] eax
je r-xdata
push 0x8
call sub_1006d00
mov ecx [ esi + 0x8 ]
mov [ ecx + ebx * 4 ] eax
mov eax [ esi + 0x8 ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
jmp r-xdata
cmp ebx [ ebp + 0x18 ]
jb r-xdata
push [ ebp + 0x14 ]
call sub_1006d0f
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
and [ ebp + 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push [ ebp + 0x14 ]
add edi 0x4
call sub_1006d6a
mov ecx [ esi + 0x8 ]
mov [ ecx + ebx * 4 ] eax
mov eax [ esi + 0x8 ]
cmp [ eax + ebx * 4 ] 0x0
je r-xdata
sub_1005149
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
xor ebx ebx
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
call sub_1005c67
lea ecx [ ebp - 0x2c ]
call sub_1005db8
mov edi [ ebp + 0x8 ]
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ ebp - 0x8 ] ebx
lea ecx [ ebp - 0x20 ]
call sub_10060b1
mov esi eax
cmp esi ebx
jne r-xdata
push [ ebp - 0x4 ]
call sub_1006d0f
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x10 ]
push edi
mov [ eax + ecx * 4 ] ebx
call sub_1004ee1
push edi
call sub_1004b2d
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1005914
mov esi eax
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0x2c ]
call j_sub_1005e5c
lea ecx [ ebp - 0x20 ]
call j_sub_1005d7e
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
call sub_1006d0f
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0x3
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx * 4 ] ebx
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov esi 0x105
jmp r-xdata
cmp eax 0x1
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
xor esi esi
push [ ebp - 0x4 ]
call sub_1006d0f
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
jne r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x20 ]
call sub_1005d16
mov esi eax
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ rw-data ]
mov eax [ ebp - 0x8 ]
inc eax
push eax
push 0x5f
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
mov [ ebp + 0xb ] bl
mov [ ebp - 0x14 ] bl
je r-xdata
push 0x3b
push 0x7
call sub_1001e92
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
push [ ebp - 0x4 ]
call sub_1006d6a
cmp eax ebx
mov [ edi ] eax
je r-xdata
push edi
mov [ edi ] ebx
push [ rw-data ]
push [ rw-data ]
push [ ebp - 0x4 ]
call sub_100611d
mov esi eax
cmp esi ebx
jne r-xdata
push 0x7
call sub_1001e92
add esp 0x10
mov esi 0x104
push [ ebp - 0x4 ]
call sub_1006d0f
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov esi 0x100
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1006d0f
mov ecx [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1005914
mov esi eax
cmp esi ebx
jne r-xdata
cmp [ edi ] ebx
jne r-xdata
cmp [ ebp - 0xc ] 0xd
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp + 0xb ]
push eax
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x20 ]
call sub_1005d0f
push eax
lea ecx [ ebp - 0x20 ]
call sub_1005d13
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
lea eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_1004f17
mov esi eax
cmp esi ebx
jne r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1005914
mov esi eax
cmp esi ebx
jne r-xdata
push [ ebp - 0x4 ]
call sub_1006d0f
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xb ] bl
jne r-xdata
cmp [ ebp - 0xc ] 0x3
je r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc [ ebp - 0x10 ]
push [ rw-data ]
push [ ebp - 0x8 ]
push 0x5e
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x20 ]
call sub_1005d16
mov esi eax
cmp esi ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1005914
mov esi eax
cmp esi ebx
jne r-xdata
push [ rw-data ]
mov eax [ ebp - 0x8 ]
inc eax
push eax
push 0x4c
jmp r-xdata
sub_100541f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ esi + 0x14 ]
xor eax eax
push 0x3c
push 0x3
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
call sub_1001e92
mov edi [ _wfopen@IAT ]
add esp 0xc
cmp [ esi + 0x6c ] 0x0
mov ebx r-xdata
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
push ebx
push [ esi + 0x14 ]
call edi
test eax eax
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
jne r-xdata
push 0x4d
push 0x7
call sub_1001e92
pop ecx
pop ecx
mov ebx 0x101
push 0x24
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
push eax
call [ fgetwc@IAT ]
cmp ax 0xfeff
pop ecx
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
mov esi ecx
call sub_10058ca
push esi
call ??3@YAXPAX@Z
pop ecx
mov [ rw-data ] edi
xor eax eax
mov ecx eax
call sub_100585e
jmp r-xdata
push [ ebp - 0xc ]
call [ fclose@IAT ]
cmp [ esi + 0x6c ] 0x0
pop ecx
jne r-xdata
mov [ esi + 0x6c ] 0x1
cmp [ ebp - 0xc ] edi
je r-xdata
xor esi esi
cmp [ ebp - 0x10 ] edi
jle r-xdata
push [ ebp - 0xc ]
mov ecx eax
call sub_1005875
mov ebx eax
test ebx ebx
jne r-xdata
mov ebx 0x100
jmp r-xdata
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov [ rw-data ] r-xdata
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_1004ee1
lea eax [ ebp - 0x20 ]
push eax
call sub_1004b2d
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
push [ ebp - 0xc ]
call [ fclose@IAT ]
pop ecx
push [ ebp - 0x8 ]
call sub_1006d0f
mov eax [ ebp - 0x8 ]
push [ eax + esi * 4 ]
call sub_1006d0f
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
push [ ebp - 0x4 ]
push 0x44
push 0x3
call sub_1001e92
add esp 0xc
xor edi edi
cmp [ esi + 0x6c ] al
je r-xdata
push [ rw-data ]
push [ esi + 0x14 ]
call edi
test eax eax
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
mov eax [ esi + 0x5c ]
mov [ rw-data ] eax
mov eax [ esi + 0x60 ]
mov [ rw-data ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_1004c93
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
call sub_10058d8
cmp ax 0xfeff
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov [ rw-data ] eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1004aff
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
call sub_1005903
push [ esi + 0x14 ]
push 0x4e
push 0x3
call sub_1001e92
push r-xdata
push 0xa
call sub_1001ff8
add esp 0x14
call sub_1001a98
push [ ebp - 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp + 0xc ] 0x2
call sub_1005149
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x105
jne r-xdata
mov edi r-xdata
push [ rw-data ]
push 0x5d
push 0x7
call sub_1001e92
add esp 0xc
xor ebx ebx
jmp r-xdata
call sub_1001a98
push 0x42
push 0xa
call sub_1001e92
inc [ ebp - 0x4 ]
pop ecx
pop ecx
push 0x4
push [ ebp - 0x1c ]
call sub_1004b47
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor edi edi
cmp [ ebp - 0x4 ] edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_1004ee1
push [ ebp - 0x8 ]
inc [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1005149
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x20 ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_157@IAT ]
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ Ordinal_WLDAP32_118@IAT ]
push eax
push [ ebp + 0xc ]
push 0x41
push 0x7
call sub_1001e92
add esp 0x14
push [ ebp + 0x8 ]
call sub_1005fc5
jmp r-xdata
cmp ebx 0x44
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push r-xdata
push 0xa
call sub_1001ff8
add esp 0x10
push 0x2
push [ ebp - 0x1c ]
call sub_1004b47
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp + 0x8 ]
call [ Ordinal_WLDAP32_69@IAT ]
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push 0x42
push 0xa
call sub_1001e92
pop ecx
pop ecx
push [ ebp + 0xc ]
push edi
push 0x4
call sub_1001ff8
push 0x43
push 0xe
call sub_1001e92
add esp 0x14
call sub_1001a98
jmp r-xdata
push [ ebp + 0xc ]
push edi
push 0x4
call sub_1001ff8
push 0x3d
jmp r-xdata
cmp ebx 0x13
je r-xdata
mov ecx [ rw-data ]
cmp ecx edi
je r-xdata
push 0x45
push 0x3
call sub_1001e92
pop ecx
pop ecx
jmp r-xdata
push 0xe
call sub_1001e92
add esp 0x14
call sub_1001a98
jmp r-xdata
push [ ebp + 0xc ]
push edi
push 0x4
call sub_1001ff8
cmp ebx 0x14
jne r-xdata
cmp ebx 0x14
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x3f
push 0x3e
jmp r-xdata
sub_10057b8
push esi
push edi
push 0x800
mov esi ecx
call sub_1006d00
mov edi eax
test edi edi
mov [ esi ] edi
jne r-xdata
xor eax eax
mov ecx 0x200
[ edi ]
and [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x400
mov eax 0x100
jmp r-xdata
pop edi
pop esi
retn
sub_10057eb
push ebx
mov ebx ecx
mov eax [ ebx + 0x4 ]
cmp [ ebx + 0x8 ] eax
push ebp
jb r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx ]
mov dx [ esp + 0xc ]
mov [ ecx + eax * 2 ] dx
inc [ ebx + 0x8 ]
xor eax eax
lea eax [ eax + eax + 0x800 ]
push eax
call sub_1006d00
mov ebp eax
test ebp ebp
jne r-xdata
add [ ebx + 0x4 ] 0x400
mov eax [ ebx + 0x4 ]
push esi
push edi
mov ecx eax
xor eax eax
mov edi ebp
[ edi ]
mov ecx [ ebx + 0x8 ]
mov esi [ ebx ]
mov eax ecx
shr ecx 0x2
mov edi ebp
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push [ ebx ]
call sub_1006d0f
pop edi
mov [ ebx ] ebp
pop esi
mov eax 0x100
jmp r-xdata
pop ebp
pop ebx
retn 0x4
sub_1005875
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
push esi
push edi
mov esi ecx
je r-xdata
mov edi 0x104
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
mov [ esi ] eax
call sub_1006230
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x4
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
and [ esi + 0x20 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] eax
push ecx
call sub_1006d0f
mov eax [ ebp - 0x4 ]
sub_10058d8
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ ecx + 0x18 ] 0x1
xor ax ax
retn
cmp [ eax ] 0x0
je r-xdata
inc [ rw-data ]
mov edx [ ecx + 0x4 ]
mov ax [ edx ]
add edx 0x2
mov [ ecx + 0x4 ] edx
retn
sub_1005914
push ebp
mov ebp esp
sub esp 0x18
push ebx
xor ebx ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x18 ] ebx
call sub_10057b8
mov edi eax
cmp edi ebx
jne r-xdata
cmp edi 0x104
jne r-xdata
mov [ esi + 0x10 ] ebx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push [ rw-data ]
push 0x60
push 0x7
call sub_1001e92
add esp 0xc
cmp bx 0x20
je r-xdata
dec eax
jne r-xdata
mov eax edi
jmp r-xdata
push [ ebp - 0x18 ]
call sub_1006d0f
mov ecx esi
call sub_10058d8
xor edx edx
mov ebx eax
mov eax [ ebp - 0x4 ]
sub eax edx
je r-xdata
cmp bx 0x22
jne r-xdata
mov edi 0x104
jmp r-xdata
cmp [ ebp - 0x8 ] edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp bx 0x5c
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp bx 0xa
je r-xdata
cmp [ esi + 0x20 ] edx
je r-xdata
cmp bx 0x3b
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x8 ] eax
mov ecx esi
call sub_10058d8
cmp ax 0x22
jne r-xdata
xor eax eax
inc eax
mov [ esi + 0x20 ] eax
jmp r-xdata
cmp bx dx
je r-xdata
cmp [ ebp - 0xc ] edx
je r-xdata
push 0x3b
lea ecx [ ebp - 0x18 ]
call sub_10057eb
mov edi eax
test edi edi
jne r-xdata
cmp bx 0x2c
jne r-xdata
push 0x22
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] edx
je r-xdata
cmp bx 0xa
je r-xdata
push 0xd
cmp bx 0x58
jne r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x20 ] edx
je r-xdata
mov [ ebp - 0x8 ] edx
push ebx
jmp r-xdata
cmp bx dx
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test bx bx
je r-xdata
mov ecx esi
call sub_10058d8
cmp ax 0x27
jne r-xdata
push 0x2c
lea ecx [ ebp - 0x18 ]
call sub_10057eb
mov edi eax
test edi edi
jne r-xdata
cmp bx 0x5c
jne r-xdata
cmp bx 0x2c
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_10057eb
mov edi eax
test edi edi
jne r-xdata
cmp bx 0x2c
je r-xdata
mov esi [ ebp - 0x18 ]
push esi
call sub_1006d6a
test eax eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
and [ ebp - 0xc ] 0x0
push 0x3
pop eax
mov [ ecx ] eax
mov [ esi + 0x14 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ esi ]
call sub_1006230
mov edi eax
test edi edi
jne r-xdata
cmp bx 0xa
je r-xdata
push 0x58
lea ecx [ ebp - 0x18 ]
call sub_10057eb
mov edi eax
test edi edi
jne r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
push 0x2
jmp r-xdata
cmp bx 0x3b
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push ebx
cmp [ rw-data ] 0x0
je r-xdata
cmp bx 0x27
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0xc ] eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_1005903
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_1005903
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp - 0xc ] edx
setne cl
lea ecx [ ecx * 8 + 0x1 ]
mov [ eax ] ecx
mov eax ecx
jmp r-xdata
cmp bx 0xa
je r-xdata
inc [ esi + 0x10 ]
jmp r-xdata
cmp bx 0x22
jne r-xdata
cmp bx 0x3b
je r-xdata
push 0x9
jmp r-xdata
cmp bx 0x30
jb r-xdata
xor eax eax
push esi
call sub_1006d0f
mov eax 0x100
jmp r-xdata
push esi
call sub_1006d0f
push ebx
lea ecx [ ebp - 0x18 ]
call sub_10057eb
mov edi eax
test edi edi
je r-xdata
push [ esi + 0xc ]
call sub_1006d0f
mov eax [ ebp - 0xc ]
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
jmp r-xdata
mov ecx esi
call sub_1005903
cmp bx dx
je r-xdata
mov ecx esi
call sub_10058d8
cmp ax bx
jne r-xdata
pop eax
jmp r-xdata
cmp bx 0x61
jb r-xdata
cmp bx 0x39
jbe r-xdata
inc [ esi + 0x10 ]
cmp bx 0x2c
jne r-xdata
mov ecx esi
call sub_1005903
and [ esi + 0x20 ] 0x0
jmp r-xdata
push 0x22
jmp r-xdata
cmp bx 0x41
jb r-xdata
cmp bx 0x66
jbe r-xdata
xor eax eax
inc eax
lea ecx [ ebp - 0x18 ]
call sub_10057eb
mov edi eax
test edi edi
jne r-xdata
cmp bx 0x46
ja r-xdata
sub_1005c74
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
push edi
jne r-xdata
shl eax 0x2
push eax
call sub_1006d00
mov ebx eax
test ebx ebx
je r-xdata
mov [ ebp + 0x8 ] 0x104
jmp r-xdata
test ebx ebx
mov [ ebp + 0x8 ] 0x100
je r-xdata
mov ecx [ esi + 0x8 ]
shl ecx 0x2
mov edx ecx
shr ecx 0x2
xor eax eax
mov edi ebx
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
xor eax eax
mov eax [ esi ]
push [ eax + edi * 4 ]
call sub_1006d6a
test eax eax
mov [ ebx + edi * 4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
call sub_1006d0f
mov eax [ ebx + edi * 4 ]
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push eax
call sub_1006d0f
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_1005d16
push esi
push edi
xor edi edi
cmp [ esp + 0xc ] edi
mov esi ecx
jne r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ eax - 0x1 ]
cmp [ esi + 0x8 ] ecx
jbe r-xdata
mov eax 0x104
jmp r-xdata
push [ esp + 0xc ]
call sub_1006d6a
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
mov [ edx + ecx * 4 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
cmp [ ecx + eax * 4 ] edi
jne r-xdata
lea ecx [ eax * 4 + 0x28 ]
push ecx
shl eax 0x2
push eax
push [ esi ]
call sub_1006d21
cmp eax edi
je r-xdata
pop edi
pop esi
retn 0x4
inc eax
mov [ esi + 0x8 ] eax
mov edi 0x100
jmp r-xdata
add [ esi + 0x4 ] 0xa
mov [ esi ] eax
mov eax edi
sub_1005d7e
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn
push edi
xor edi edi
cmp [ esi + 0x8 ] ebx
jbe r-xdata
push [ esi ]
call sub_1006d0f
mov [ esi ] ebx
pop edi
mov eax [ esi ]
mov eax [ eax + edi * 4 ]
cmp eax ebx
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push eax
call sub_1006d0f
sub_1005de2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call [ wcslen@IAT ]
mov ebx eax
mov eax [ esi + 0x8 ]
pop ecx
lea ecx [ ebx + eax ]
mov eax [ esi + 0x4 ]
lea edx [ eax - 0x1 ]
cmp ecx edx
jbe r-xdata
push [ ebp + 0x8 ]
add [ esi + 0x8 ] ebx
push [ esi ]
call [ wcscat@IAT ]
pop ecx
pop ecx
lea edx [ eax + 0xff ]
cmp ecx edx
lea edi [ eax + ebx + 0x100 ]
ja r-xdata
lea ecx [ edi + edi ]
push ecx
add eax eax
push eax
push [ esi ]
call sub_1006d21
test eax eax
jne r-xdata
lea edi [ eax + 0x100 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0x100
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_1005e78
push ecx
mov eax [ esp + 0x8 ]
cmp [ eax ] 0x0
push ebx
push ebp
push esi
push edi
mov [ esp + 0x18 ] eax
je r-xdata
xor eax eax
sub eax [ esp + 0x1c ]
mov ebp [ iswupper@IAT ]
mov [ esp + 0x10 ] eax
push ebx
call ebp
test eax eax
pop ecx
je r-xdata
push esi
call [ towlower@IAT ]
pop ecx
mov esi eax
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
push ebx
call [ towlower@IAT ]
pop ecx
mov ebx eax
cmp [ edi ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
jmp r-xdata
add [ esp + 0x18 ] 0x2
mov eax [ esp + 0x18 ]
add [ esp + 0x10 ] 0x2
cmp [ eax ] 0x0
jne r-xdata
movzx eax bx
movzx ecx si
sub ecx eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
mov bx [ edi ]
xor esi esi
mov si [ eax ]
push esi
call ebp
test eax eax
pop ecx
je r-xdata
mov eax [ esp + 0x10 ]
inc edi
inc edi
mov bx [ edi ]
xor esi esi
mov si [ eax + edi ]
push esi
call ebp
test eax eax
pop ecx
je r-xdata
push ebx
call ebp
test eax eax
pop ecx
je r-xdata
push esi
call [ towlower@IAT ]
pop ecx
mov esi eax
mov eax [ esp + 0x10 ]
cmp [ eax + edi ] 0x0
jne r-xdata
push ebx
call [ towlower@IAT ]
pop ecx
mov ebx eax
sub_1005f55
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] eax
xor edi edi
jmp r-xdata
test [ esi + 0xc ] 0x10
je r-xdata
push esi
push 0x1
lea eax [ ebp - 0x68 ]
push 0x1
push eax
call [ fread@IAT ]
mov ecx [ esi + 0xc ]
add esp 0x10
test cl 0x20
jne r-xdata
jmp r-xdata
mov edi 0x104
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
call sub_1006a01
leave
retn 0x8
jbe r-xdata
test cl 0x10
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x68 ]
push 0x1
push eax
call [ fwrite@IAT ]
add esp 0x10
test eax eax
je r-xdata
sub_1005fc5
push ebp
lea ebp [ esp - 0x190 ]
sub esp 0x210
mov eax [ rw-data ]
push esi
mov [ ebp + 0x18c ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x34
push [ ebp + 0x198 ]
xor esi esi
mov [ ebp - 0x80 ] esi
call [ Ordinal_WLDAP32_12@IAT ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x18c ]
pop esi
call sub_1006a01
add ebp 0x190
leave
retn 0x4
cmp [ ebp - 0x80 ] esi
je r-xdata
push esi
push 0x104
lea eax [ ebp - 0x7c ]
push eax
push 0x400
push [ ebp - 0x80 ]
push esi
push 0x1000
call [ FormatMessageW@IAT ]
test eax eax
jne r-xdata
push edi
mov edi [ wcscpy@IAT ]
lea esi [ ebp - 0x7c ]
push ebx
push 0xa
lea eax [ ebp - 0x7c ]
push eax
push [ ebp - 0x80 ]
call [ _itow@IAT ]
add esp 0xc
jmp r-xdata
pop ebx
pop edi
lea ebx [ esi + 0x4 ]
cmp [ ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push 0x57
push 0x7
call sub_1001e92
add esp 0xc
push ebx
push esi
call edi
pop ecx
pop ecx
jmp r-xdata
push r-xdata
push esi
call edi
lea eax [ esi + 0x2 ]
push ebx
push eax
call edi
add esp 0x10
jmp r-xdata
push r-xdata
push esi
call [ wcsstr@IAT ]
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
sub_10060b1
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
call sub_1005d7e
push 0x28
call sub_1006d00
mov edi eax
cmp edi ebx
mov [ esi ] edi
jne r-xdata
push 0xa
pop ecx
xor eax eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ebx
[ edi ]
mov ebx 0x100
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_10060eb
push esi
mov esi ecx
call sub_1005e5c
push 0x200
call sub_1006d00
test eax eax
mov [ esi ] eax
jne r-xdata
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] 0x100
and [ eax ] 0x0
xor eax eax
pop esi
retn
mov eax 0x100
pop esi
retn
sub_100611d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ wcslen@IAT ]
push edi
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
call esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
call esi
push [ ebp + 0x8 ]
mov edi eax
call esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ esi ] ebx
call sub_1005e78
add esp 0x14
cmp eax ebx
jne r-xdata
mov esi [ ebp - 0x8 ]
add esi esi
mov [ ebp - 0xc ] esi
mov [ esi ] ebx
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
inc [ ebp - 0x4 ]
add eax esi
push eax
call sub_1005e78
cmp eax ebx
pop ecx
pop ecx
jne r-xdata
sub edi [ ebp - 0x8 ]
imul edi [ ebp - 0x4 ]
add edi [ ebp - 0x14 ]
lea eax [ edi + edi + 0x2 ]
push eax
call sub_1006d00
mov esi eax
cmp esi ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0xc ]
mov [ esi ] bx
push [ ebp + 0x8 ]
call sub_1005e78
mov ebx eax
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push esi
call [ wcsncat@IAT ]
push [ ebp + 0x10 ]
mov edi [ wcscat@IAT ]
push esi
call edi
mov eax [ ebp - 0xc ]
push [ ebp + 0xc ]
add ebx eax
push ebx
call sub_1005e78
add esp 0x24
jmp r-xdata
mov [ ebp - 0x10 ] 0x100
jmp r-xdata
test eax eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
sub eax ebx
sar eax 0x1
push eax
push ebx
push esi
call [ wcsncat@IAT ]
push [ ebp + 0x10 ]
push esi
call edi
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea ebx [ eax + ecx ]
push ebx
call sub_1005e78
add esp 0x1c
push ebx
push esi
call edi
mov eax [ ebp + 0x14 ]
pop ecx
pop ecx
mov [ eax ] esi
sub_1006230
push ebp
lea ebp [ esp - 0x194 ]
sub esp 0x214
mov eax [ rw-data ]
push esi
xor esi esi
lea ecx [ ebp - 0x80 ]
mov [ ebp + 0x190 ] eax
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x7c ] esi
call sub_10060eb
cmp eax esi
mov [ ebp - 0x74 ] eax
jne r-xdata
lea ecx [ ebp - 0x80 ]
call sub_1005e5c
mov ecx [ ebp + 0x190 ]
mov eax [ ebp - 0x74 ]
pop esi
call sub_1006a01
add ebp 0x194
leave
retn 0x8
push ebx
push edi
mov edi [ fgetws@IAT ]
mov ebx 0x100
mov eax [ ebp + 0x19c ]
test [ eax + 0xc ] 0x10
jne r-xdata
mov ax [ esi ]
cmp ax 0xa
je r-xdata
mov esi [ ebp + 0x1a0 ]
push esi
lea ecx [ ebp - 0x80 ]
call sub_1005dc5
test eax eax
mov [ ebp - 0x74 ] eax
jne r-xdata
mov eax [ ebp + 0x1a0 ]
and [ eax ] 0x0
jmp r-xdata
push [ ebp + 0x19c ]
lea eax [ ebp - 0x70 ]
push ebx
push eax
call edi
and [ rw-data ] 0x0
add esp 0xc
inc [ rw-data ]
mov esi eax
test esi esi
je r-xdata
cmp ax 0xd
je r-xdata
pop edi
pop ebx
push [ esi ]
call [ wcslen@IAT ]
cmp eax 0x1
pop ecx
jbe r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_1005de2
test eax eax
mov [ ebp - 0x74 ] eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esi ]
lea ecx [ ecx + eax * 2 - 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
push esi
call [ wcslen@IAT ]
cmp eax 0xff
pop ecx
jne r-xdata
test eax eax
jbe r-xdata
and [ ecx ] 0x0
test esi esi
jne r-xdata
cmp [ esi + 0x1fc ] 0xa
je r-xdata
dec eax
je r-xdata
push [ ebp + 0x19c ]
lea eax [ ebp - 0x70 ]
push ebx
push eax
call edi
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ esi ]
lea eax [ ecx + eax * 2 - 0x2 ]
cmp [ eax ] 0xd
jne r-xdata
jmp r-xdata
and [ eax ] 0x0
sub_1006381
mov eax [ rw-data ]
push ebx
push ebp
xor ebx ebx
push esi
mov esi [ RtlEnumerateGenericTable@IAT ]
xor ebp ebp
inc ebx
cmp eax ebp
push edi
mov edi [ RtlDeleteElementGenericTable@IAT ]
je r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push ebx
push eax
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push ebx
push eax
jmp r-xdata
call esi
cmp eax ebp
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push ebx
push eax
jmp r-xdata
call esi
cmp eax ebp
jne r-xdata
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push ebx
push eax
jmp r-xdata
call esi
cmp eax ebp
jne r-xdata
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push ebx
push eax
jmp r-xdata
call esi
cmp eax ebp
jne r-xdata
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push ebx
push eax
jmp r-xdata
call esi
cmp eax ebp
jne r-xdata
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push eax
jmp r-xdata
call esi
cmp eax ebp
jne r-xdata
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
call esi
cmp eax ebp
jne r-xdata
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
push eax
push [ rw-data ]
call edi
push ebx
push [ rw-data ]
push [ rw-data ]
call [ RtlIsGenericTableEmpty@IAT ]
push [ rw-data ]
call sub_1006d0f
mov [ rw-data ] ebp
sub_100655b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
call [ RtlLookupElementGenericTable@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
leave
retn 0x4
sub_1006589
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
call [ RtlLookupElementGenericTable@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
leave
retn 0x4
sub_10065b7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
call [ RtlLookupElementGenericTable@IAT ]
xor ecx ecx
test eax eax
setne cl
mov eax ecx
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
leave
retn 0x8
sub_1006641
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ ecx ]
mov eax [ eax ]
push eax
call [ _wcsicmp@IAT ]
test eax eax
pop ecx
pop ecx
jge r-xdata
xor ecx ecx
test eax eax
sete cl
inc ecx
mov eax ecx
xor eax eax
jmp r-xdata
retn 0xc
sub_100666b
push ebp
mov ebp esp
sub esp 0x18
push ebx
xor ebx ebx
push 0x28
mov [ ebp - 0x10 ] ebx
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
push esi
mov esi [ RtlInitializeGenericTable@IAT ]
push edi
push ebx
push sub_1006635
push sub_1006629
mov edi sub_1006641
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax 0x100
jmp r-xdata
push 0x28
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov eax rw-data
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
pop ebx
leave
retn
mov eax 0x100
jmp r-xdata
push ebx
push sub_1006635
push sub_1006629
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax 0x104
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x8 ]
add eax 0x4
cmp [ eax ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
pop edi
pop esi
push 0x28
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov eax rw-data
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
push sub_1006635
push sub_1006629
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
cmp [ eax ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
push 0x28
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov eax rw-data
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
push sub_1006635
push sub_1006629
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
cmp [ eax ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
push 0x28
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov eax rw-data
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
push sub_1006635
push sub_1006629
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
cmp [ eax ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
push 0x28
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov eax rw-data
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
push sub_1006635
push sub_1006629
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
cmp [ eax ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
push 0x28
call sub_1006d00
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
mov eax rw-data
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
push sub_1006635
push sub_1006629
push edi
push eax
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
cmp [ eax ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax rw-data
xor esi esi
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
lea eax [ ebp - 0x1 ]
push eax
push 0x8
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
call [ RtlInsertElementGenericTable@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
add esi 0x4
lea eax [ esi + rw-data ]
cmp [ eax ] ebx
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + rw-data ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
je r-xdata
sub_100697b
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
mov [ rw-data ] esi
jne r-xdata
cmp eax 0xbb40e64e
jne r-xdata
push r-xdata
call [ GetModuleHandleA@IAT ]
test eax eax
pop esi
je r-xdata
mov [ rw-data ] 0xbb40e64e
leave
retn
push r-xdata
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_1006a0f
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
mov [ ebp + 0x2a4 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call eax
push 0x502
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x2a4 ]
call sub_1006a01
add ebp 0x2a8
leave
retn
push edi
xor eax eax
and [ ebp - 0x28 ] eax
push 0x13
pop ecx
lea edi [ ebp - 0x7c ]
[ edi ]
mov ecx 0xb2
lea edi [ ebp - 0x24 ]
[ edi ]
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push 0x0
mov [ ebp - 0x80 ] 0xc0000409
mov [ ebp - 0x2c ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ rw-data ]
pop edi
_start
push 0x28
push r-xdata
call sub_1006c90
cmp [ __dos_header ] 0x5a4d
jne r-xdata
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_1006c8c
cmp [ rw-data ] 0x0
jne r-xdata
movzx ecx [ eax + r--data ]
cmp ecx 0x10b
je r-xdata
call sub_1006c7a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x24 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ __wgetmainargs@IAT ]
mov [ ebp - 0x34 ] eax
push rw-data
push rw-data
call _initterm
mov eax [ ebp - 0x20 ]
mov ecx [ __winitenv@IAT ]
mov [ ecx ] eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
call sub_1002794
add esp 0x30
mov esi eax
mov [ ebp - 0x38 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push sub_1006c8c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ eax + r--data ] 0xe
jbe r-xdata
cmp ecx 0x20b
je r-xdata
call [ _cexit@IAT ]
push esi
call [ exit@IAT ]
xor ecx ecx
cmp [ eax + r--data ] ecx
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor ecx ecx
cmp [ eax + r--data ] ecx
jmp r-xdata
setne cl
mov [ ebp - 0x1c ] ecx
sub_1006c30
cmp eax 0x1000
jae r-xdata
push ecx
lea ecx [ esp + 0x8 ]
neg eax
add eax esp
add eax 0x4
test [ eax ] eax
xchg esp eax
mov eax [ eax ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub_1006c90
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esp
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1006d21
push ebp
mov ebp esp
push ebx
push [ ebp + 0x10 ]
call sub_1006d00
cmp [ ebp + 0x8 ] 0x0
mov ebx eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0xc
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x10 ] ecx
jae r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
push [ ebp + 0x8 ]
shr ecx 0x2
mov edi ebx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_1006d0f
pop edi
pop esi
mov ecx [ ebp + 0x10 ]
sub_1006d6a
push edi
mov edi [ esp + 0x8 ]
test edi edi
jne r-xdata
push esi
push edi
call [ wcslen@IAT ]
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
call sub_1006d00
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
pop esi
push edi
push esi
call [ wcscpy@IAT ]
pop ecx
pop ecx
pop edi
retn 0x4
sub_1006da1
push esi
push [ esp + 0x8 ]
call sub_1006d00
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
mov eax esi
pop esi
retn 0x4
push eax
push eax
push eax
push 0x100
call [ RaiseException@IAT ]
sub_1006dc7
push [ esp + 0x4 ]
call [ wcslen@IAT ]
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
call sub_1006da1
test eax eax
je r-xdata
retn 0x4
push [ esp + 0x4 ]
push eax
call [ wcscpy@IAT ]
pop ecx
pop ecx
sub_100191e
add [ ecx ] al
[ ebx ]
sub_1001e7c
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_1001d48
add esp 0xc
retn
sub_1004b2d
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call sub_1006d0f
and [ esi + 0x4 ] 0x0
sub_100585e
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
retn
sub_10058ca
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
call sub_1006d0f
sub_1005c67
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
retn
sub_1005d0f
mov eax [ ecx + 0x8 ]
retn
sub_1005d13
mov eax [ ecx ]
retn
sub_1005db8
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
retn
sub_1005dc5
push [ ecx ]
call sub_1006d6a
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
mov eax 0x100
jmp r-xdata
retn 0x4
sub_1005e5c
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x8 ] 0x0
and [ esi + 0x4 ] 0x0
pop esi
retn
push eax
call sub_1006d0f
and [ esi ] 0x0
j_sub_1005d7e
jmp sub_1005d7e
j_sub_1005e5c
jmp sub_1005e5c
sub_1006a01
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_1006a0f
retn
sub_1006bff
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call [ _c_exit@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_1006ccb
retn
push esi
call [ _exit@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_1006c7a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_1006c8c
xor eax eax
retn
sub_1006ccb
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
push ecx
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
DsRoleFreeMemory
jmp [ DsRoleFreeMemory@IAT ]
DsRoleGetPrimaryDomainInformation
jmp [ DsRoleGetPrimaryDomainInformation@IAT ]
SetThreadUILanguage
jmp [ SetThreadUILanguage@IAT ]
sub_1006d00
push [ esp + 0x4 ]
push 0x40
call [ LocalAlloc@IAT ]
retn 0x4
sub_1006d0f
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
neg eax
sbb eax eax
inc eax
retn 0x4
