sub_4ac043
push ebx
mov [ esp ] bh
jmp rwxdata
mov [ esp ] 0x73c40127
pushfd
pushfd
mov [ esp + 0x4 ] si
push ebp
mov [ esp + 0x8 ] 0x90e9b2d
push [ esp + 0x4 ]
push edx
lea esp [ esp + 0x10 ]
jmp rwxdata
call sub_4b3f0e
mov [ esp + 0x24 ] esi
movzx bx cl
setbe bl
not bl
mov [ esp + 0x20 ] ebp
bswap ebp
movsx bx dl
bswap bx
mov [ esp + 0x1c ] edx
seto bh
pushad
xchg ebp ebx
lea ebp [ ecx * 4 + 0x48143fe0 ]
xchg [ esp + 0x38 ] esi
lea ebx [ ebx - 0x799e353c ]
setae al
setge al
mov [ esp + 0x4 ] ebx
xchg [ esp + 0x34 ] edi
lea esp [ esp + 0x34 ]
sub_4b2b58
mov [ esp + 0x24 ] esi
pushad
jmp rwxdata
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp sub_4b39f6
sub_4b2b8c
dec dh
btc dx cx
or dh 0x42
mov dx [ ebp ]
push ebx
add esi 0x1
mov [ esp ] edx
clc
add ebp 0x2
jmp rwxdata
mov [ eax + edi ] dx
push esi
push edi
mov [ esp + 0x8 ] 0xdd
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2c71
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_4b43c9
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_4b50aa
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4b4f65
call sub_4b3939
clc
lea esp [ esp + 0x20 ]
jno rwxdata
cmp ebx 0x9b2d9e74
stc
add ebp 0x4
pushad
jmp rwxdata
add ebp 0x4
pushad
jmp rwxdata
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] 0xef
mov [ eax + edi ] edx
pushad
push 0xd32b59e6
lea esp [ esp + 0x44 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2cb6
mov [ esp ] bl
mov [ esp + 0x24 ] ebp
pushfd
pushfd
mov [ esp + 0x28 ] edx
mov [ esp ] di
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] cx
push ebx
mov [ esp ] dx
push edx
mov [ esp + 0x28 ] edi
push [ esp + 0x4 ]
push [ esp ]
mov [ esp + 0x10 ] 0xfad3
lea esp [ esp + 0x30 ]
jmp sub_4b39f6
sub_4b2d3c
push 0xe17256ee
xchg [ esp + 0x4c ] edi
lea edi [ eax * 2 + 0x24e6d209 ]
mov edi eax
mov [ esp + 0x4 ] ah
jmp rwxdata
mov [ esp + 0x4 ] bl
cld
call sub_4b2dd4
push 0x512808b0
mov [ esp ] eax
pushad
mov [ esp + 0x1c ] ebx
push ecx
jmp sub_4b514b
sub_4b2d93
or eax ecx
mov [ esp ] 0xf9efae14
stc
xor al [ edx ]
lea esp [ esp + 0x10 ]
jae rwxdata
pushfd
pushfd
inc edx
pushad
dec [ ebp ]
mov [ esp + 0x8 ] 0xbda8
pushfd
push [ esp + 0x4 ]
jmp rwxdata
pushfd
inc edx
call sub_4b4366
pushfd
pushad
mov [ esp ] 0x62e7
mov [ esp + 0x20 ] eax
push 0x494ef5fb
mov [ esp + 0x20 ] ebx
jmp rwxdata
lea esp [ esp + 0x30 ]
jne rwxdata
push ebp
mov [ esp + 0x20 ] esi
pushfd
push [ esp ]
mov [ esp ] bh
mov [ esp + 0x24 ] ebp
pushad
pushfd
mov [ esp ] ch
mov [ esp + 0x44 ] edx
push 0x64406dd
jmp rwxdata
bswap cx
cmp bh dh
sub cl dh
bt edi esp
mov ecx eax
cmp ch dh
pushfd
jmp rwxdata
push 0xd9aec7ef
push edx
mov [ ebp ] eax
push [ esp + 0x4 ]
push ebx
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
push [ esp ]
pushfd
mov [ esp + 0x4c ] esi
pushfd
mov [ esp ] 0x77
mov [ esp + 0x4c ] edi
pushfd
mov [ esp ] ecx
mov [ esp + 0x14 ] 0xf09d
lea esp [ esp + 0x50 ]
jmp sub_4b39f6
shl eax 0x7
bt sp 0x3
shr ecx 0x19
pushfd
pushfd
bt dx ax
call sub_4b2d93
neg al
shrd dx cx cl
movzx eax [ esi ]
shrd dx bx 0xf
sub al bl
jmp sub_4b350b
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2dd4
jmp rwxdata
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2e10
pushad
pushad
push [ esp + 0x40 ]
pop [ ebp ]
push 0xeb72378d
mov [ esp ] 0xe745
mov [ esp ] 0x23b9
lea esp [ esp + 0x48 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2e8b
clc
pushfd
clc
add ebp 0x6
jmp rwxdata
jmp rwxdata
pushad
mov [ eax ] dl
push 0xa98555c3
mov [ esp + 0x8 ] dl
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2f53
inc esi
dec cl
movsx cx dl
lea ecx [ esi - 0x9460c38 ]
xor ch ah
movzx ecx al
stc
bt edx esp
pushad
call sub_4b4e2f
pushfd
push ecx
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
mov [ esp ] esi
mov [ esp + 0x4 ] 0x6a
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b2f9c
mov [ esp ] eax
inc al
clc
pushfd
neg al
call sub_4b4575
stc
bt dx di
sub ebp 0x2
jmp rwxdata
push 0x2d3807c7
push ebp
mov [ ebp ] ax
push ebp
pushfd
lea esp [ esp + 0x14 ]
jmp sub_4b4f65
sub_4b3056
or ecx ecx
mov [ esp + 0xc ] dh
push 0xab652008
pushad
lea esp [ esp + 0x34 ]
je rwxdata
call sub_4b3939
clc
lea esp [ esp + 0x20 ]
jno rwxdata
call sub_4b43c9
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_4b50aa
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4b4f65
cmp ebx 0x9b2d9e74
stc
add ebp 0x4
pushad
jmp rwxdata
add ebp 0x4
pushad
jmp rwxdata
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] 0xef
mov [ eax + edi ] edx
pushad
push 0xd32b59e6
lea esp [ esp + 0x44 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b317c
mov [ esp + 0x10 ] 0x41d03457
push 0x88a6cf
mov [ esp + 0x4c ] ebp
push ebp
mov [ esp + 0x14 ] esp
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
mov [ esp ] 0xc8
mov [ esp + 0x48 ] edi
push 0x84e10a9f
pushfd
mov [ esp + 0x4 ] 0x7
lea esp [ esp + 0x50 ]
jmp sub_4b39f6
sub_4b31f6
pushfd
neg ecx
cmc
call sub_4b4e05
push 0x13dc31a6
pushfd
push eax
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b3302
test esi 0xd87c590b
stc
bt bx 0x6
sub al bl
call sub_4b2f9c
cwde
mov eax [ ebp ]
pushfd
mov eax [ eax ]
mov [ esp ] bl
pushad
pushad
mov [ ebp ] eax
push esp
push 0x3183785b
lea esp [ esp + 0x4c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b3350
push edx
lea esp [ esp + 0x38 ]
jpe rwxdata
pushfd
push ebp
push [ esp ]
jmp rwxdata
pushfd
pushfd
pushfd
pushad
jmp rwxdata
pushfd
pop [ esp + 0x8 ]
push 0x7157e63d
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4b4f65
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp sub_4b4f65
sub_4b3413
mov [ esp ] 0x84
pushad
jmp rwxdata
mov [ esp + 0x20 ] ebx
pushad
push edi
push 0xa412fb79
pushfd
mov [ esp + 0x48 ] esi
call sub_4b317c
mov edx [ ebp ]
jmp rwxdata
clc
lea esp [ esp + 0x20 ]
jno rwxdata
cmp ebx 0x9b2d9e74
stc
add ebp 0x4
pushad
jmp rwxdata
add ebp 0x4
pushad
jmp rwxdata
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] 0xef
mov [ eax + edi ] edx
pushad
push 0xd32b59e6
lea esp [ esp + 0x44 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b341d
pushfd
sub bx ax
pushfd
cwde
test dh 0xda
pushfd
sub ebp 0x4
push ecx
pushfd
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x44 ]
jmp sub_4b4f65
sub_4b34df
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b36d4
push 0xfba30f34
mov [ esp + 0x38 ] esi
call j_sub_4b378d
bt ecx 0xa
xor al bl
mov [ esp ] 0xa0bd6eee
jmp rwxdata
inc al
pushfd
clc
bt esp ebx
add esi 0x1
jmp rwxdata
stc
clc
ror al 0x4
stc
sub esp 0xfffffff8
jae rwxdata
cmp bh 0x24
sub al 0x7
call sub_4b4aad
sub al 0x7
test ch 0xd
pushad
stc
xor bl al
mov [ esp + 0x8 ] bh
sub ebp 0x2
jmp rwxdata
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ ebp ] ax
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
pushfd
lea esp [ esp + 0x2c ]
jmp sub_4b4f65
sub_4b371e
call sub_4b4f5d
bts dx 0x2
sar dl cl
rcl edx 0x18
movzx eax [ esi ]
add dl cl
btc dx 0x1
pushad
movsx dx cl
add al bl
bsr edx ebp
add dl 0x47
movsx dx bl
add esi 0x1
jmp rwxdata
not al
pop edx
cmc
neg al
pushad
or edx ebp
pushfd
add al 0x13
not dx
cmp al dh
add bl al
sar dl cl
lea edx [ 0x17ddbcc1 ]
not dx
mov edx [ eax + edi ]
clc
mov [ esp + 0x4 ] 0x7d66
sub ebp 0x4
push ecx
call sub_4b3a9a
sub_4b3889
pushad
sub ebp 0x2
jmp rwxdata
bt dx ax
clc
and [ ebp + 0x4 ] ax
push ecx
pushfd
pop [ esp + 0x24 ]
pushfd
push [ esp ]
push [ esp + 0x2c ]
pop [ ebp ]
push eax
pushfd
mov [ esp + 0x4 ] si
lea esp [ esp + 0x38 ]
jmp sub_4b4f65
sub_4b38b2
mov [ esp ] eax
pushad
mov [ esp + 0x1c ] ebx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x18 ] esi
pushfd
mov [ esp + 0x18 ] ebp
mov [ esp ] eax
jmp rwxdata
pushad
mov [ esp + 0x34 ] edx
call sub_4b36d4
das
mov ax [ esi ]
cmp ch 0xd8
pushfd
lea esi [ esi + 0x2 ]
stc
cmc
clc
sub ax bx
mov [ esp ] 0x8f5984d5
bt bx bp
add ax 0x209e
pushfd
stc
clc
mov [ esp + 0x4 ] bl
neg ax
stc
pushad
jmp rwxdata
ror ax 0x1
clc
clc
call sub_4b341d
mov [ esp + 0x2c ] edx
jmp rwxdata
pushfd
jmp sub_4b337b
sub_4b38bf
pushfd
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0xc ]
call sub_4b3934
jmp rwxdata
mov [ esp ] ebx
call sub_4b4661
test al 0x80
movzx eax [ esi ]
call sub_4b3302
jmp rwxdata
push ecx
pushfd
pushfd
push ecx
mov [ esp + 0x8 ] edx
push [ esp + 0xc ]
retn 0x10
sub_4b3939
cmp cl 0xf3
sub eax eax
call sub_4b4b2b
call sub_4b41ed
push esi
mov [ esp + 0x3c ] esi
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] edi
pushfd
pushfd
mov [ esp ] 0x58
lea esp [ esp + 0x48 ]
jmp sub_4b39f6
sub_4b39f6
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4b3acc
pushad
push 0x810889da
pushfd
mov [ esp + 0x4 ] dh
mov [ esp + 0x24 ] edx
push 0xe964e9a4
call sub_4b43eb
sub_4b3a59
pushfd
push [ esp + 0x4 ]
call sub_4b4d62
call sub_4b3543
and al dl
lea esp [ esp + 0x28 ]
jno rwxdata
jmp rwxdata
push 0x4aab8746
mov [ esp ] 0xc0
pushfd
mov [ ebp + 0x4 ] ax
call sub_4b38cf
pushfd
mov [ ebp + 0x4 ] ax
push [ esp ]
pushfd
pop [ esp + 0x4 ]
pushad
jmp rwxdata
push [ esp + 0x24 ]
pop [ ebp ]
push 0xb7c59963
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4b4f65
sub_4b3ae0
movzx ecx cl
push ecx
inc al
setge ch
ror al 0x4
rcr ch 0x1
cmp si 0x5980
or ecx 0xef98c43d
sub al 0x7
btc cx 0x7
btr cx dx
test bp si
xor bl al
lea esp [ esp + 0xc ]
jpo rwxdata
bswap ecx
call sub_4b2f53
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp sub_4b4f65
lea ecx [ edx * 8 + 0x6a8876eb ]
inc cx
bswap cx
inc esi
rol ch cl
add cx bp
cmc
lea ecx [ edi + 0x2eaa0f29 ]
movzx ecx al
push edi
push [ esp ]
mov [ ebp - 0x4 ] ecx
bt di 0x3
pushfd
call sub_4b3056
mov [ esp ] 0xeec8
mov [ esp ] 0x20
mov [ esp + 0xc ] rwxdata
pushad
jmp sub_4b32ab
sub_4b3c00
test ah 0x16
pushfd
sub ebp 0x8
pushfd
push [ esp ]
mov [ ebp ] edx
pushad
pushfd
mov [ esp + 0x8 ] eax
mov [ ebp + 0x4 ] eax
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp sub_4b4f65
sub_4b3c22
xchg [ ebp + ecx * 4 ] eax
stc
clc
cmp edi 0xfeecfba0
mov [ esp + 0x48 ] eax
bt di bp
mov [ esp + 0x8 ] 0xe2a3
pushfd
sub ecx 0x1
pushfd
mov [ esp + 0x4 ] ch
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
call sub_4b43c9
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_4b50aa
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4b4f65
stc
push edi
stc
sub eax eax
pushfd
call sub_4b349f
add esi 0x4
push esp
push 0xe554bfa6
pushfd
call sub_4b5150
jmp rwxdata
pushfd
mov [ esp ] esi
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x4 ] edi
pushfd
push 0x86d3befe
push 0xecf66cf3
lea esp [ esp + 0x10 ]
jmp sub_4b39f6
sub_4b3d82
pushfd
lea esp [ esp + 0x3c ]
jpo rwxdata
jmp rwxdata
push ecx
pushad
push [ esp + 0x4 ]
push edx
push [ esp + 0x28 ]
retn 0x2c
push ecx
pushfd
pushfd
push ecx
mov [ esp + 0x8 ] edx
push [ esp + 0xc ]
retn 0x10
sub_4b3dae
mov [ esp + 0x4 ] ebp
call sub_4b4c2f
jmp rwxdata
pushfd
push ecx
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
mov [ esp ] esi
mov [ esp + 0x4 ] 0x6a
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b3eb8
neg ecx
bt bp 0x4
bt sp 0x3
test sp bp
cmp bl 0x81
add ecx 0x0
push ecx
lea esp [ esp + 0x10 ]
jo rwxdata
push 0x3de28678
push [ esp ]
mov [ esp + 0x4 ] ecx
push [ esp ]
push [ esp + 0x4 ]
pushad
push [ esp + 0x2c ]
retn 0x30
pushad
push 0x7817f2bb
mov [ esp + 0x20 ] ecx
push 0xe14cc384
pushad
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_4b3f0e
mov [ esp ] bl
push edi
push [ esp ]
mov [ esp + 0x8 ] eax
pushad
mov [ esp + 0x24 ] ebx
push 0xf50ae366
jmp rwxdata
mov [ esp + 0x24 ] esi
pushad
mov [ esp ] 0x4f
mov [ esp + 0x40 ] ebp
pushfd
pushfd
mov [ esp + 0x44 ] edx
call sub_4b3b66
jmp rwxdata
pushfd
pop [ esp + 0x14 ]
pushad
mov [ esp ] bl
push [ esp + 0x34 ]
pop [ ebp ]
push 0x150720d6
push ebp
push 0x771a3e89
pushfd
lea esp [ esp + 0x48 ]
jmp sub_4b4f65
sub_4b3f4c
lea esp [ esp + 0x2c ]
jns rwxdata
pushad
push 0x810889da
pushfd
mov [ esp + 0x4 ] dh
mov [ esp + 0x24 ] edx
push 0xe964e9a4
call sub_4b43eb
pushfd
mov [ esp ] edx
call sub_4b3247
btc cx 0x6
mov al [ esi ]
call sub_4b2ca7
mov [ ebp ] ax
pushad
push 0xd8141621
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4055
neg bx
sub esp 0xb4
movzx edi cl
and di 0x9319
sbb ecx 0xd20889cd
xadd bl al
mov edi esp
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
sub_4b41a4
mov [ esp ] 0xa5
call sub_4b45e1
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b41ed
bt edi 0x1a
xor al 0xdf
mov al [ ebp ]
push 0xc75da1aa
bt ax di
cmp dh 0xbf
bt bp cx
sub ebp 0x2
jmp rwxdata
add [ ebp + 0x4 ] al
call sub_4b38bf
clc
test dh bh
btr dx 0x6
rdtsc
call sub_4b3c00
sub_4b4366
dec [ ebp ]
pushad
mov [ esp ] 0x40
lea esp [ esp + 0x28 ]
jne rwxdata
bswap cx
cmp bh dh
sub cl dh
bt edi esp
mov ecx eax
cmp ch dh
pushfd
jmp rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jge rwxdata
shl eax 0x7
bt sp 0x3
shr ecx 0x19
pushfd
pushfd
bt dx ax
call sub_4b2d93
neg al
shrd dx cx cl
movzx eax [ esi ]
shrd dx bx 0xf
sub al bl
jmp sub_4b350b
pushfd
jmp rwxdata
mov [ ebp ] eax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b43d7
lea esp [ esp + 0x40 ]
jo rwxdata
jmp rwxdata
push ebp
pushfd
mov [ esp ] edx
jmp rwxdata
pushad
mov [ esp ] bl
mov [ esp + 0x1c ] ebp
call sub_4b30b7
pushfd
pushfd
mov [ ss : eax ] dl
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
push esi
push esi
push 0x6b6e5c0
pushad
mov [ esp + 0x24 ] edi
mov [ esp ] 0x22
pushad
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4441
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_4b4f15
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp sub_4b39f6
sub_4b44f4
bt bx 0xd
clc
test bx di
xchg [ ebp + ecx * 4 ] eax
cmp bh 0x6
mov [ esp ] eax
call sub_4b371e
btr ax bx
dec al
shl al cl
bt ax sp
mov ax [ esi ]
stc
test al bh
add esi 0x2
call sub_4b4532
shld ax di 0x3
aam 0xbc
call sub_4b4f4c
call sub_4b3e61
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4532
call sub_4b3e61
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4575
bt ax 0x6
ror al 0x2
bt esi 0x14
clc
cmp si bx
sub bl al
cmp dl dh
test dh ch
cmc
mov ax [ eax + edi ]
bt bp bx
sub ebp 0x2
jmp sub_4b37a7
sub_4b4661
mov [ esp ] 0x4f35
mov [ esp ] 0x1d54
mov [ esp ] esi
call sub_4b3a59
cmp bl 0x9a
bt bp di
sub ebp 0x2
push 0xbf8b5964
push ebp
jmp rwxdata
shl al cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] ax
call sub_4b3350
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
sub_4b4b2b
call sub_4b463e
call sub_4b3413
xadd al dh
ror dx cl
bsr dx bx
rcr al cl
mov al [ esi ]
sar dl cl
cmp cl cl
add al bl
neg edx
not al
xor dl bl
xor dl 0xa5
jl rwxdata
cmp al al
neg al
neg edx
add al 0x13
sets dh
xor dx cx
rcr dh 0x2
add bl al
rol dh 0x6
dec dh
add esi 0x1
jmp sub_4b315f
lea edx [ ebp * 2 - 0x5250e930 ]
neg al
not dh
sub dh ah
adc dl 0x64
btc dx 0xf
add al 0x13
cmc
shl dh 0x4
test ah dl
bts dx 0x7
add bl al
pushad
ror dl 0x2
mov edx edx
btc edx 0x10
add esi 0x1
shrd edx eax cl
jmp rwxdata
mov edx [ ebp ]
jmp rwxdata
clc
lea esp [ esp + 0x20 ]
jno rwxdata
cmp ebx 0x9b2d9e74
stc
add ebp 0x4
pushad
jmp rwxdata
add ebp 0x4
pushad
jmp rwxdata
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] 0xef
mov [ eax + edi ] edx
pushad
push 0xd32b59e6
lea esp [ esp + 0x44 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4c0c
lea esp [ esp + 0x4c ]
jbe rwxdata
pushfd
mov [ ebp ] eax
pushad
pushad
mov [ esp ] di
lea esp [ esp + 0x44 ]
jmp sub_4b4f65
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x4 ]
jmp sub_4b4f65
sub_4b4d00
mov [ eax + edi ] edx
push 0x785cb02a
mov [ esp + 0xc ] 0x90
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4e05
cmc
cmc
add ecx 0x0
call sub_4b5012
shl al cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] ax
call sub_4b3350
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
sub_4b4e2f
mov [ ebp - 0x4 ] ecx
bt di 0xd
or ecx ecx
mov [ esp ] 0xb
lea esp [ esp + 0x28 ]
je rwxdata
call sub_4b3939
clc
lea esp [ esp + 0x20 ]
jno rwxdata
stc
push esp
pushad
pushad
xor eax eax
pushfd
jmp rwxdata
cmp ebx 0x9b2d9e74
stc
add ebp 0x4
pushad
jmp rwxdata
add ebp 0x4
pushad
jmp rwxdata
stc
call sub_4b3c22
pushfd
jmp sub_4b337b
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] 0xef
mov [ eax + edi ] edx
pushad
push 0xd32b59e6
lea esp [ esp + 0x44 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
sub_4b4f15
ror ax 0x1
mov [ esp + 0xc ] 0x32
jmp rwxdata
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_4b50aa
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4b4f65
sub_4b5012
call sub_4b3d82
pushfd
push ebp
push [ esp ]
jmp rwxdata
pushfd
pop [ esp + 0x8 ]
push 0x7157e63d
jmp rwxdata
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp sub_4b4f65
sub_4b515f
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4b2c94
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 + 0x41 ] ah
add [ edx + edx * 2 ] cl
dec ebx
add [ eax ] cl
add [ eax ] al
add [ eax ] dl
bound eax [ eax ]
add [ eax ] dh
jpo rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b2be9
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_4b3889
jmp rwxdata
add [ eax - 0x43 ] dh
add [ eax ] al
std
fadd [ eax ]
add [ edi ] al
fiadd [ eax ]
add [ eax ] dl
in eax dx
add [ eax ] al
inc eax
in eax dx
add [ eax ] al
call sub_4b4196
shrd si bp cl
inc si
mov esi [ ebp ]
jmp rwxdata
pushad
mov [ esp + 0x20 ] edx
pushad
mov [ esp ] edx
push [ esp + 0x3c ]
mov [ esp + 0x40 ] esi
pushfd
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
_start
jmp sub_4ac043
sub_4b2be9
mov ecx [ eax * 4 + rwxdata ]
stc
call sub_4b3eb8
sub_4b2bf6
mov [ esp + 0xc ] edi
pushfd
lea esp [ esp + 0x10 ]
jmp sub_4b39f6
sub_4b2c94
xchg [ esp + 0x40 ] esi
cld
pop edi
mov esi edx
pushfd
cld
lea edi [ ecx + eax - 0x40 ]
call sub_4b3763
sub_4b2ca7
xor cx 0x1e18
cmp bh 0x70
xor al bl
call sub_4b3ae0
sub_4b2d8a
mov [ esp + 0x24 ] esi
call sub_4b2cb6
sub_4b2dd9
push esp
pushfd
mov [ esp + 0x34 ] eax
pushfd
push [ esp + 0x38 ]
retn 0x3c
sub_4b2fc9
sub bl al
call sub_4b2b8c
pushad
mov [ esp + 0x40 ] esi
jmp sub_4b43d7
sub_4b30b7
mov [ esp + 0x1c ] edx
push [ esp + 0x4 ]
mov [ esp + 0x1c ] esi
push 0x25340325
pushfd
mov [ esp + 0x20 ] edi
push 0x7ee0f402
pushad
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
sub_4b315f
pushad
clc
mov edx [ ebp ]
bt eax 0x1b
clc
clc
push 0xcf01aa64
add ebp 0x4
mov [ esp + 0x8 ] 0xad
call sub_4b4d00
j_sub_4b34df
jmp sub_4b34df
sub_4b3247
call sub_4b4f35
pushfd
mov [ ebp ] eax
pushad
pushad
mov [ esp ] di
lea esp [ esp + 0x44 ]
jmp sub_4b4f65
sub_4b32ab
call sub_4b3399
push edi
pushfd
mov [ esp + 0xc ] esi
pushad
pushfd
mov [ esp + 0x2c ] ebp
jmp sub_4b3f4c
sub_4b32eb
push [ esp + 0x10 ]
lea esp [ esp + 0x24 ]
jge rwxdata
pushfd
call sub_4b3dae
stc
call sub_4b3c22
pushfd
jmp sub_4b337b
push edi
mov [ esp ] ebp
call sub_4b41a4
sub_4b3333
pushfd
stc
sub ebp 0x4
call sub_4b4c0c
ror ax 0x1
clc
clc
call sub_4b341d
mov [ esp + 0x2c ] edx
jmp rwxdata
pushfd
jmp sub_4b337b
sub_4b337b
mov [ esp + 0x2c ] esi
mov [ esp + 0x8 ] cx
pushfd
mov [ esp + 0x2c ] edi
push [ esp ]
push eax
push [ esp ]
lea esp [ esp + 0x38 ]
jmp sub_4b39f6
sub_4b3399
mov [ esp + 0x2c ] eax
push ebx
push [ esp + 0x30 ]
retn 0x34
j_sub_4b378d
jmp sub_4b378d
sub_4b349f
jmp rwxdata
pushfd
xchg [ ebp ] eax
jmp rwxdata
mov [ esp ] 0xeec8
mov [ esp ] 0x20
mov [ esp + 0xc ] rwxdata
pushad
jmp sub_4b32ab
sub_4b350b
inc al
setno dh
neg al
pushfd
pushad
ror al 0x2
call sub_4b2fc9
j_sub_4b2c71
jmp sub_4b2c71
sub_4b3543
pushad
mov [ esp + 0x24 ] eax
push [ esp ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
call sub_4b2b58
sub_4b3763
call sub_4b4b91
jmp sub_4b2d8a
sub_4b378d
pushfd
mov [ esp ] 0x7a
mov [ esp + 0x3c ] edi
mov [ esp ] 0x7b
push [ esp + 0x8 ]
lea esp [ esp + 0x40 ]
jmp sub_4b39f6
sub_4b37a7
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp sub_4b4f65
sub_4b38cf
pushfd
jmp rwxdata
pushfd
pop [ esp + 0xc ]
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x18 ]
jmp sub_4b4f65
sub_4b3934
call sub_4b4d56
sub_4b3a50
mov [ esp + 0x20 ] esi
jmp sub_4b32eb
sub_4b3a87
mov [ esp + 0x10 ] edi
pushfd
lea esp [ esp + 0x14 ]
jmp sub_4b39f6
sub_4b3a9a
mov [ ebp ] edx
push ecx
push esp
lea esp [ esp + 0x50 ]
jmp sub_4b4f65
sub_4b3acc
dec esi
stc
rcr bl cl
ror di cl
btr ebx 0x2
lea ebp [ esp + 0xc ]
jmp sub_4b4055
sub_4b3b66
mov [ esp + 0x44 ] esi
pushfd
pushfd
mov [ esp + 0x48 ] edi
pushfd
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x50 ]
jmp sub_4b39f6
j_sub_4b515f
jmp sub_4b515f
sub_4b3e36
mov [ esp + 0x24 ] edi
pushfd
mov [ esp ] cl
lea esp [ esp + 0x28 ]
jmp sub_4b39f6
sub_4b3e61
cmp dh 0xd5
sub ax bx
call j_sub_4b4441
push eax
jmp sub_4b38b2
sub_4b3ef9
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp sub_4b39f6
sub_4b3f28
mov [ esp + 0x10 ] edi
pushfd
push [ esp ]
pushad
push [ esp ]
lea esp [ esp + 0x3c ]
jmp sub_4b39f6
sub_4b4028
pushad
push 0x3a4676f0
mov [ esp + 0x2c ] rwxdata
call sub_4b2dd9
pushfd
pushfd
mov [ esp + 0x4 ] edi
pushfd
push 0x86d3befe
push 0xecf66cf3
lea esp [ esp + 0x10 ]
jmp sub_4b39f6
sub_4b4196
stc
mov ecx [ eax * 4 + rwxdata ]
pushad
call sub_4b31f6
sub_4b42da
call sub_4b2bf6
mov [ esp + 0x4 ] bl
cld
call sub_4b2dd4
push 0x512808b0
mov [ esp ] eax
pushad
mov [ esp + 0x1c ] ebx
push ecx
jmp sub_4b514b
j_sub_4b4441
jmp sub_4b4441
sub_4b43c9
stc
cmp al 0xd
mov [ esp ] si
sub eax eax
jmp sub_4b44f4
sub_4b43eb
mov [ esp + 0x28 ] esi
push 0x48eb6052
push 0xd1cc5e1
jmp rwxdata
mov [ esp + 0x2c ] edi
push 0x35ce92b
mov [ esp + 0x4 ] ch
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4b39f6
sub_4b45e1
push 0x37daba82
mov [ esp + 0x8 ] edx
pushfd
push 0x177d1823
push 0x1066d885
mov [ esp + 0x10 ] esi
call sub_4b3f28
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_4b3ef9
sub_4b463e
xchg [ ebp ] eax
jmp sub_4b4028
sub_4b4aad
test bl al
xor bl al
test dh 0xf
sub ebp 0x2
mov [ esp ] 0x4d
mov [ ebp ] ax
push [ esp ]
mov [ esp + 0x4 ] 0x4a
lea esp [ esp + 0x8 ]
jmp sub_4b4f65
sub_4b4b91
call sub_4b2d3c
jmp sub_4b2e10
sub_4b4c2f
mov [ esp + 0x4 ] edx
pushad
call sub_4b4c8e
call j_sub_4b34df
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp sub_4b39f6
sub_4b4c8e
mov [ esp + 0x24 ] esi
call sub_4b3e36
pushfd
xchg [ ebp ] eax
jmp rwxdata
mov [ esp ] 0xeec8
mov [ esp ] 0x20
mov [ esp + 0xc ] rwxdata
pushad
jmp sub_4b32ab
sub_4b4d56
mov [ esp + 0xc ] 0x689e
jmp sub_4b50ce
sub_4b4d62
mov [ esp + 0xc ] ebp
pushfd
jmp rwxdata
mov [ esp + 0xc ] edx
push [ esp + 0x4 ]
push [ esp ]
jmp rwxdata
mov [ esp + 0x10 ] esi
call sub_4b3a87
sub_4b4f35
pushfd
mov [ esp + 0x8 ] esi
call sub_4b42da
pushad
aam 0xb3
add al 0xa0
mov eax ebp
pushad
call sub_4b3333
sub_4b4f4c
mov eax [ ebp ]
mov dl bh
ror dl 0x1
shl dl cl
mov dl [ ebp + 0x4 ]
call sub_4b2e8b
sub_4b4f5d
sub ecx 0x1
jmp j_sub_4b2c71
sub_4b4f65
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp j_sub_4b515f
sub_4b50aa
mov [ esp + 0x4 ] 0xc39
pushad
mov [ ebp ] ax
push [ esp + 0x10 ]
mov [ esp ] 0x4f17
mov [ esp + 0x1c ] 0x28
lea esp [ esp + 0x48 ]
jmp sub_4b4f65
sub_4b50ce
push [ esp + 0x14 ]
pop [ ebp ]
pushfd
pushad
push edi
pushfd
lea esp [ esp + 0x44 ]
jmp sub_4b4f65
sub_4b514b
call sub_4b3a50
sub_4b5150
mov [ ebp ] eax
push [ esp ]
lea esp [ esp + 0x18 ]
jmp sub_4b4f65
