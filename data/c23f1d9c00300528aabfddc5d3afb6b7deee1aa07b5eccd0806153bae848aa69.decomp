sub_401000
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_401030
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_401070
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_401120
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_401200
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40122b
mov edx [ esp + 0x4 ]
xor al al
cmp [ edx ] 0x52
jne r-xdata
retn 0x4
cmp [ edx + 0x1 ] 0x61
jne r-xdata
cmp [ edx + 0x2 ] 0x72
jne r-xdata
cmp [ edx + 0x3 ] 0x21
jne r-xdata
cmp [ edx + 0x4 ] 0x1a
jne r-xdata
cmp [ edx + 0x5 ] 0x7
jne r-xdata
cmp [ edx + 0x6 ] al
jne r-xdata
mov [ ecx + 0x71b8 ] al
inc al
sub_401278
push esi
push edi
mov edi [ esp + 0xc ]
lea eax [ edi + edi ]
push eax
mov esi ecx
call sub_40acff
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
test edi edi
je r-xdata
mov ecx rw-data
call sub_403495
sub_4012bf
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
lea eax [ edi + edi ]
push eax
push [ esi ]
call sub_40ad37
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_403495
sub_401306
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov esi ecx
push 0x7
lea edi [ esi + 0x4a60 ]
push edi
mov [ esi + 0x71c0 ] 0x0
call sub_405ca2
cmp eax 0x7
je r-xdata
push ebx
xor ebx ebx
push edi
mov ecx esi
mov [ esi + 0x71c4 ] ebx
call sub_40122b
test al al
je r-xdata
xor al al
jmp r-xdata
push 0x100000
lea ecx [ ebp - 0x14 ]
call sub_403c8d
mov ecx esi
call sub_405593
mov ebx eax
mov eax [ ebp - 0x10 ]
add eax 0xfffffff0
push eax
push [ ebp - 0x14 ]
mov ecx esi
call sub_405ca2
xor edi edi
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
cmp [ esi + 0x71b8 ] bl
je r-xdata
pop edi
pop esi
leave
retn 0x4
xor eax eax
cmp [ esi + 0x71c4 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax edi
cmp [ eax ] 0x52
jne r-xdata
mov ecx esi
call sub_401ca6
mov ecx esi
call sub_401264
mov ax [ esi + 0x71ca ]
cmp ax [ esi + 0x4ac0 ]
je r-xdata
push ebx
push ebx
push ebx
call sub_405aee
jmp r-xdata
cmp [ ebp - 0x14 ] eax
je r-xdata
cmp [ ebp - 0x14 ] eax
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jl r-xdata
push eax
mov ecx esi
call sub_40122b
test al al
je r-xdata
movzx ecx [ esi + 0x4ac8 ]
mov al [ esi + 0x4ac8 ]
and al 0x1
mov [ esi + 0x71ba ] al
mov al cl
shr al 0x3
and al 0x1
mov [ esi + 0x71b9 ] al
mov al cl
shr al 0x1
and al 0x1
mov [ esi + 0x71bb ] al
mov al cl
shr al 0x2
and al 0x1
cmp [ esi + 0x4ad0 ] 0x0
mov [ esi + 0x71bc ] al
setne al
mov [ esi + 0x71bd ] al
mov al cl
shr al 0x6
and al 0x1
mov [ esi + 0x71bf ] al
mov al cl
shr al 0x7
and al 0x1
cmp [ esi + 0x4ad4 ] 0x24
mov [ esi + 0x71c0 ] al
jbe r-xdata
push 0x7c
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
pop ecx
pop ecx
call sub_403480
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp - 0x14 ]
call sub_40ad18
xor al al
jmp r-xdata
push [ ebp - 0x14 ]
call sub_40ad18
jmp r-xdata
jmp r-xdata
cmp [ esi + 0x71b8 ] 0x0
je r-xdata
test al al
je r-xdata
push 0x1
mov ecx rw-data
call sub_40341b
pop ebx
push 0x0
lea eax [ edi + ebx ]
push 0x0
push eax
mov [ esi + 0x71c4 ] eax
call sub_405aee
cmp [ esi + 0x71b8 ] 0x0
jne r-xdata
test edi edi
jle r-xdata
xor ecx ecx
test ecx 0x100
jne r-xdata
push 0x7
lea eax [ esi + 0x4a60 ]
push eax
mov ecx esi
call sub_405ca2
cmp ebx 0x1c
jge r-xdata
push esi
lea ecx [ ebp - 0x20 ]
call sub_40b594
mov eax [ esi + 0x71b0 ]
mov edi [ esi + 0x71a8 ]
mov ebx [ esi + 0x71ac ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x71b4 ]
mov [ ebp - 0x4 ] eax
mov [ esi + 0x71be ] 0x0
jmp r-xdata
test al al
jne r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1f
jle r-xdata
mov ecx esi
call sub_401ca6
test eax eax
jne r-xdata
cmp [ esi + 0x71ba ] 0x0
je r-xdata
cmp [ esi + 0x4ab0 ] 0x0
mov [ esi + 0x71be ] cl
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax ebx
add eax 0x1c
cmp [ eax ] 0x52
jne r-xdata
mov eax [ esi + 0x4aac ]
cmp eax 0x7a
jne r-xdata
jmp r-xdata
lea eax [ esi + 0x17 ]
push eax
lea eax [ esi + 0x71e5 ]
push eax
call sub_40af8a
lea eax [ esi + 0x418 ]
push eax
add esi 0x75e6
push esi
call sub_40b147
cmp [ esi + 0x71be ] 0x0
jne r-xdata
cmp [ eax + 0x1 ] 0x53
jne r-xdata
cmp eax 0x74
jne r-xdata
push r--data
lea eax [ esi + 0x5818 ]
push eax
call sub_40affc
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi + 0x71b0 ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x20 ]
mov [ esi + 0x71a8 ] edi
mov [ esi + 0x71ac ] ebx
mov [ esi + 0x71b4 ] eax
call sub_40b5bb
mov al 0x1
cmp [ eax + 0x2 ] 0x46
jne r-xdata
test [ esi + 0x4ae0 ] 0x1
jne r-xdata
test [ esi + 0x57f0 ] 0x1
jne r-xdata
mov [ esi + 0x71bb ] 0x1
cmp [ eax + 0x3 ] 0x58
je r-xdata
mov [ esi + 0x71be ] 0x1
cmp [ esi + 0x71ba ] 0x0
je r-xdata
mov [ esi + 0x71be ] 0x1
cmp [ esi + 0x71ba ] 0x0
je r-xdata
cmp [ esi + 0x4af8 ] 0x1d
jb r-xdata
mov ecx esi
call sub_401264
mov eax 0x100
test [ esi + 0x4ac8 ] ax
jne r-xdata
mov eax 0x100
test [ esi + 0x4ac8 ] ax
jne r-xdata
sub_4016a5
push esi
mov esi ecx
xor ecx ecx
lea eax [ esi + 0xc30 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0xc44 ]
call sub_40f182
lea ecx [ esi + 0xc68 ]
call sub_40f182
lea ecx [ esi + 0xc8c ]
call sub_40f182
lea ecx [ esi + 0xcb0 ]
call sub_40f182
mov eax esi
pop esi
retn
sub_4016e8
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401306
test al al
jne r-xdata
pop esi
retn 0x4
push 0x78
call sub_40a407
push eax
add esi 0x418
push esi
call sub_40c020
pop ecx
pop ecx
push 0x2
mov ecx rw-data
call j_sub_40344e
sub_40171e
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
call sub_4057a6
test al al
jne r-xdata
push 0x0
mov ecx esi
call sub_401306
test al al
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x78
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
pop ecx
pop ecx
mov ecx esi
call sub_4054de
jmp r-xdata
pop esi
retn 0x8
sub_401768
push esi
push edi
mov edi ecx
call sub_40edc6
mov esi [ esp + 0xc ]
push [ esi + 0x4 ]
mov ecx edi
call sub_40168b
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
add eax eax
push eax
push [ esi ]
push [ edi ]
call sub_40adc9
sub_401797
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov bl [ ecx + 0x580c ]
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push esi
and bl 0x1
call sub_402525
test al al
jne r-xdata
push edi
mov edi [ esi + 0x4 ]
test bl bl
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
shr edi 0x1
lea eax [ edi + 0x1 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_401278
mov ebx [ ebp - 0xc ]
push edi
push ebx
push [ esi ]
call sub_40f3bd
xor eax eax
mov [ ebx + edi * 2 ] ax
shl edi 0x2
lea eax [ edi + 0x1 ]
push eax
mov ecx esi
call sub_401671
push edi
push [ esi ]
push ebx
call sub_40f330
mov eax [ esi ]
mov [ edi + eax ] 0x0
push [ esi ]
call sub_40ae97
mov edi eax
push edi
mov ecx esi
call sub_401671
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax edi
pop edi
push 0x0
mov ecx esi
call sub_401656
lea eax [ edi + 0x1 ]
push eax
mov ecx ebx
call sub_40168b
lea eax [ edi + 0x1 ]
push eax
push [ ebx ]
push [ esi ]
call sub_40f362
push edi
mov ecx esi
call sub_401671
push [ ebx ]
call sub_40b11d
push eax
mov ecx ebx
call sub_40168b
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_401768
mov ecx [ ebp + 0xc ]
push edi
call sub_40168b
push ebx
call sub_40ad18
jmp r-xdata
sub_401883
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_405473
lea ecx [ esi + 0xc20 ]
mov [ esi ] r--data
call sub_40abd6
lea ecx [ esi + 0xe68 ]
call sub_409a22
lea ebp [ esi + 0x1398 ]
mov ecx ebp
call sub_4077fa
lea edi [ esi + 0x4a84 ]
mov ecx edi
call sub_40f182
lea ecx [ esi + 0x4ad8 ]
call sub_4016a5
lea ecx [ esi + 0x57e8 ]
call sub_4016a5
mov eax [ esp + 0x14 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov [ esi + 0x1390 ] eax
mov al [ eax + 0x2d89 ]
or [ esi + 0x4a70 ] 0xffffffff
push 0x18
mov [ esi + 0x16 ] al
push ebx
lea eax [ esi + 0x4ac0 ]
push eax
mov [ esi + 0x71b8 ] bl
mov [ esi + 0x71b9 ] bl
mov [ esi + 0x71ba ] bl
mov [ esi + 0x71bb ] bl
mov [ esi + 0x71bc ] bl
mov [ esi + 0x71bd ] bl
mov [ esi + 0x71be ] bl
mov [ esi + 0x71c4 ] ebx
mov [ edi ] ebx
mov [ esi + 0x71bf ] bl
mov [ esi + 0x71c0 ] bl
mov [ esi + 0x4a80 ] bl
mov [ esi + 0x71c8 ] bl
mov [ esi + 0x4aa8 ] ebx
mov [ esi + 0x71a8 ] ebx
mov [ esi + 0x71ac ] ebx
mov [ esi + 0x71b0 ] ebx
mov [ esi + 0x71b4 ] ebx
mov [ esi + 0x4a78 ] 0x7
mov [ esi + 0x4a7c ] ebx
call sub_40ad9c
push 0xd
pop eax
mov [ esi + 0x4aca ] ax
xor eax eax
pop edi
mov [ esi + 0x71ca ] ax
mov [ esi + 0x75e6 ] ax
mov [ esi + 0x71d0 ] ebx
mov [ esi + 0x71d4 ] ebx
mov [ esi + 0x71d8 ] ebx
mov [ esi + 0x71dc ] ebx
mov [ esi + 0x71e0 ] ebx
mov [ esi + 0xe60 ] bl
mov [ esi + 0x1388 ] bl
mov [ esi + 0x71e5 ] bl
mov [ esi + 0x71c9 ] bl
mov [ esi + 0x71e4 ] bl
mov [ esi + 0x4ab0 ] bl
mov [ esi + 0x4ac4 ] 0x73
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax ebp
sub_401a3a
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
cmp [ esi + 0x71bb ] 0x0
jne r-xdata
push ebx
push esi
lea ecx [ ebp - 0x18 ]
call sub_40b594
test [ esi + 0x4ac8 ] 0x2
push 0x0
push 0x0
je r-xdata
xor al al
jmp r-xdata
movzx eax [ esi + 0x4aca ]
mov ecx [ esi + 0x71c4 ]
lea eax [ eax + ecx + 0x7 ]
push eax
mov ecx esi
call sub_405aee
push r--data
mov ecx esi
call sub_4027b4
test eax eax
je r-xdata
mov eax [ esi + 0x71c4 ]
add eax 0x14
push eax
mov ecx esi
call sub_405aee
mov ecx esi
call sub_401ca6
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
test ebx ebx
jbe r-xdata
pop esi
leave
retn 0x8
xor bl bl
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_401797
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
lea ecx [ ebp - 0x18 ]
call sub_40b5bb
test esi esi
seta al
jmp r-xdata
mov eax [ esi ]
push edi
push ebx
push eax
push eax
call [ OemToCharBuffA@IAT ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov bl 0x1
jmp r-xdata
pop ebx
pop edi
lea eax [ ebx + 0x1 ]
push eax
mov ecx edi
call sub_40168b
push 0x0
mov ecx esi
call sub_401656
lea eax [ ebx + 0x1 ]
push eax
push [ edi ]
push [ esi ]
call sub_40f362
push ebx
mov ecx esi
call sub_401671
push [ edi ]
call sub_40b11d
push eax
mov ecx edi
call sub_40168b
lea ecx [ ebp - 0x18 ]
call sub_40b5bb
mov al bl
sub_401b3e
push esi
mov esi ecx
call sub_405b52
mov ecx [ esi + 0x71ac ]
cmp ecx edx
jg r-xdata
push 0x67
call sub_40a407
push eax
add esi 0x418
push esi
call sub_40c020
pop ecx
pop ecx
push 0x1
mov ecx rw-data
call sub_40341b
jl r-xdata
mov ecx [ esi + 0x71b4 ]
cmp ecx edx
jl r-xdata
mov ecx [ esi + 0x71a8 ]
cmp ecx eax
ja r-xdata
pop esi
retn
jg r-xdata
mov ecx [ esi + 0x71b0 ]
cmp ecx eax
jbe r-xdata
sub_401bc1
mov al [ ecx + 0x4aec ]
cmp al 0x2
jbe r-xdata
retn
mov al [ ecx + 0x4ae0 ]
xor edx edx
and al 0xe0
cmp al 0xe0
setne dl
dec edx
and edx 0xfffffff0
add edx 0x20
mov [ ecx + 0x4afc ] edx
sub_401c03
push esi
mov esi ecx
cmp [ esi + 0x4af8 ] 0x14
jae r-xdata
cmp [ esi + 0x4aec ] 0x6
jb r-xdata
test [ esi + 0x4afc ] 0x10
je r-xdata
lea eax [ esi + 0x4b08 ]
jmp r-xdata
mov al [ esi + 0x4ae0 ]
xor ecx ecx
and al 0xe0
cmp al 0xe0
setne cl
dec ecx
and ecx 0xfffffff0
add ecx 0x20
mov [ esi + 0x4afc ] ecx
mov eax 0xe0
or [ esi + 0x4ae0 ] ax
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x2f
je r-xdata
lea eax [ esi + 0x4f08 ]
pop esi
jmp r-xdata
mov [ eax ] 0x5c
cmp cl 0x5c
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_401be8
mov [ eax ] 0x5f
cmp [ eax ] 0x3a
jne r-xdata
movzx ecx [ eax ]
cmp cx 0x2f
je r-xdata
retn
push 0x5c
pop ecx
mov [ eax ] cx
cmp cx 0x5c
jne r-xdata
inc eax
inc eax
push 0x5f
pop ecx
mov [ eax ] cx
cmp [ eax ] 0x3a
jne r-xdata
sub_401ca6
push ebp
mov ebp esp
mov eax 0x107c
call sub_401200
push ebx
mov ebx ecx
cmp [ ebx + 0x4a80 ] 0x0
je r-xdata
push esi
push edi
call sub_405593
push ebx
lea ecx [ ebp - 0x34 ]
mov [ ebx + 0x71a8 ] eax
mov [ ebx + 0x71ac ] edx
call sub_409841
cmp [ ebx + 0x71c0 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x71c4 ]
mov edx [ ebx + 0x71ac ]
xor ecx ecx
push ecx
add eax 0x14
pop esi
adc ecx esi
cmp edx ecx
jl r-xdata
pop ebx
leave
retn
push 0x7
lea ecx [ ebp - 0x34 ]
call sub_4096a9
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
jg r-xdata
lea eax [ ebx + 0x4ab4 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40975b
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_409739
movzx eax [ ebp - 0x15 ]
lea edi [ ebx + 0x4abc ]
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebx + 0x4ab8 ] eax
call sub_40975b
lea esi [ ebx + 0x4abe ]
push esi
lea ecx [ ebp - 0x34 ]
call sub_40975b
movzx ecx [ esi ]
cmp cx 0x7
jae r-xdata
mov ecx ebx
call sub_401b3e
jmp r-xdata
push 0x8
lea edi [ ebx + 0xe60 ]
push edi
mov ecx ebx
mov [ ebp - 0x1 ] 0x1
call sub_405ca2
cmp eax 0x8
je r-xdata
mov ecx [ ebx + 0x71a8 ]
cmp ecx eax
jb r-xdata
mov eax [ ebx + 0x4ab8 ]
cmp eax 0x75
jne r-xdata
push r--data
push 0x68
call sub_40a407
push eax
lea eax [ ebx + 0x418 ]
push eax
call sub_40c020
add esp 0xc
push 0x3
mov ecx rw-data
mov [ ebx + 0x71c8 ] 0x1
call sub_40341b
cmp [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x1390 ]
add eax 0x281c
cmp [ eax ] si
jne r-xdata
mov ecx ebx
call sub_401b3e
cmp [ ebp - 0x34 ] esi
jmp r-xdata
cmp eax 0x73
jne r-xdata
push 0x6
jmp r-xdata
je r-xdata
cmp [ ebx + 0x4ad4 ] 0x24
lea esi [ ebx + 0xc20 ]
sbb al al
inc al
movzx eax al
push eax
mov eax [ ebx + 0x1390 ]
push 0x0
push 0x0
push edi
add eax 0x281c
push eax
mov ecx esi
call sub_402eda
mov [ ebp - 0x1c ] esi
push 0x80
push eax
lea eax [ ebx + 0x418 ]
push eax
lea eax [ ebx + 0x17 ]
push eax
push 0x2
call sub_402daf
test al al
jne r-xdata
movzx eax cx
sub eax 0x7
push eax
test [ edi ] 0x2
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4096a9
movzx eax [ esi ]
cdq
add eax [ ebx + 0x71a8 ]
adc edx [ ebx + 0x71ac ]
mov [ ebx + 0x71b0 ] eax
mov eax [ ebx + 0x4ab8 ]
mov ecx eax
sub ecx 0x73
mov [ ebx + 0x71b4 ] edx
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x34 ]
call sub_40ad18
mov ecx ebx
call sub_4054de
push 0xff
mov ecx rw-data
call j_sub_40344e
lea edi [ ebx + 0x4ac0 ]
lea esi [ ebx + 0x4ab4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebx + 0x4acc ]
push eax
lea ecx [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
call sub_40975b
lea eax [ ebx + 0x4ad0 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40979a
mov eax 0x200
test [ ebx + 0x4ac8 ] ax
je r-xdata
dec ecx
je r-xdata
pop edi
pop esi
xor edi edi
push edi
lea ecx [ ebp - 0x34 ]
call sub_409817
cmp [ ebp - 0x1 ] 0x0
mov ecx [ ebx + 0x4ab8 ]
not eax
mov [ ebx + 0x71ca ] ax
mov [ ebx + 0x4aac ] ecx
je r-xdata
lea eax [ ebx + 0x4ad4 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_409739
cmp eax 0x74
lea eax [ ebx + 0x4ad8 ]
je r-xdata
sub ecx 0x6
je r-xdata
mov eax [ ebx + 0x71b4 ]
cmp eax [ ebx + 0x71ac ]
jg r-xdata
mov edx [ ebp - 0x30 ]
sub edx [ ebp - 0x24 ]
add edx 0x8
add [ ebx + 0x71b0 ] edx
adc [ ebx + 0x71b4 ] edi
cmp [ ebx + 0x4ab4 ] ax
je r-xdata
mov edi eax
lea esi [ ebx + 0x4ab4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x14 ] eax
add eax 0xc
push eax
lea ecx [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
call sub_40979a
mov esi [ ebp - 0x14 ]
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x8 ] eax
call sub_40979a
lea eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_409739
lea eax [ esi + 0x18 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40979a
lea eax [ esi + 0x1c ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
call sub_40979a
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_409739
lea eax [ esi + 0x21 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_409739
lea eax [ esi + 0x22 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
call sub_40975b
lea eax [ esi + 0x24 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40979a
mov eax 0x100
lea edi [ esi + 0x28 ]
test [ esi + 0x8 ] ax
je r-xdata
lea eax [ ebx + 0x57e8 ]
dec ecx
je r-xdata
mov esi [ ebp - 0x24 ]
cmp [ ebp - 0x34 ] edi
je r-xdata
jl r-xdata
cmp ecx 0x7b
jne r-xdata
mov ecx [ ebp - 0x8 ]
and [ edi ] 0x0
lea eax [ esi + 0x2c ]
and [ eax ] 0x0
cmp [ ecx ] 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
push edi
lea ecx [ ebp - 0x34 ]
call sub_40979a
lea eax [ esi + 0x2c ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x10 ] eax
call sub_40979a
jmp r-xdata
lea edi [ ebx + 0x57c0 ]
lea esi [ ebx + 0x4ab4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebx + 0x57c8 ]
test [ esi ] 0x2
je r-xdata
mov eax 0x8000
test [ edi ] ax
je r-xdata
mov eax esi
push [ ebp - 0x34 ]
call sub_40ad18
push r--data
push 0x68
call sub_40a407
push eax
lea eax [ ebx + 0x418 ]
push eax
call sub_40c020
mov eax [ ebx + 0x71b0 ]
cmp eax [ ebx + 0x71a8 ]
ja r-xdata
lea esi [ ebx + 0x418 ]
push esi
push 0x70
call sub_40a407
push eax
push esi
call sub_40c020
mov [ ebx + 0x4a80 ] 0x1
jmp r-xdata
test [ ebx + 0x57c8 ] 0x4
je r-xdata
push 0x1
push 0x0
push 0x0
push [ edi ]
call sub_401030
mov ecx [ ebp - 0x3c ]
mov ecx [ ecx ]
xor edi edi
push 0x1
add eax ecx
push edi
mov [ esi + 0xcd8 ] eax
mov eax [ ebp - 0x10 ]
push edi
push [ eax ]
adc edx edi
mov [ esi + 0xcdc ] edx
call sub_401030
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
add eax ecx
mov [ esi + 0xce0 ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
adc edx edi
mov edi 0xfff
mov ecx edi
mov [ esi + 0xce4 ] edx
cmp ax cx
jae r-xdata
mov edx 0x7fffffff
mov [ ecx ] edx
mov [ eax ] edx
test [ esi ] 0x8
je r-xdata
lea eax [ ebx + 0x57cc ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40979a
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40979a
mov eax [ ebp - 0xc ]
add [ ebx + 0x71b0 ] eax
adc [ ebx + 0x71b4 ] 0x0
jmp r-xdata
add esp 0xc
push 0x3
mov ecx rw-data
mov [ ebx + 0x71c8 ] 0x1
call sub_40341b
cmp [ ebp - 0x34 ] edi
push ebx
lea ecx [ ebp - 0x58 ]
call sub_40b594
mov ecx ebx
call sub_405593
push edi
push 0x7
pop esi
sub eax esi
sbb edx edi
push edx
push eax
mov ecx ebx
call sub_405aee
mov [ ebp - 0x1 ] 0x1
push edi
lea eax [ ebp - 0x107c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_4097df
push 0x400
lea ecx [ ebp - 0x107c ]
lea eax [ esi + 0x30 ]
push ecx
push eax
mov [ ebp + edi - 0x107c ] 0x0
mov [ ebp - 0x8 ] eax
call sub_40ebc5
mov eax [ esi + 0x4 ]
cmp eax 0x7a
jne r-xdata
movzx edi ax
lea eax [ ebx + 0x57d0 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40975b
jmp r-xdata
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x0
cmp eax 0x74
jne r-xdata
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
movzx edi [ esi + 0xa ]
sub edi eax
mov eax 0x400
sub edi 0x20
test [ esi + 0x8 ] ax
je r-xdata
mov ecx ebx
call sub_405d75
test al al
je r-xdata
lea ecx [ ebp - 0x58 ]
call sub_40b5bb
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax 0x400
test [ esi + 0x8 ] ax
je r-xdata
mov eax 0x200
test [ esi + 0x8 ] ax
je r-xdata
test edi edi
jle r-xdata
sub edi 0x8
mov eax [ ebp - 0x38 ]
push [ eax ]
lea ecx [ esi + 0xc44 ]
call sub_40f108
xor edi edi
mov eax 0x1000
mov [ esi + 0xc68 ] edi
mov [ esi + 0xc8c ] edi
mov [ esi + 0xcb0 ] edi
test [ esi + 0x8 ] ax
je r-xdata
push 0x8
lea eax [ esi + 0xc3c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_4097df
xor eax eax
mov [ esi + 0x430 ] ax
lea ecx [ ebp - 0x54 ]
call sub_4031f0
lea eax [ ebp - 0x107c ]
push eax
call sub_40ae97
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx ]
lea edi [ esi + 0x430 ]
cmp eax ecx
jne r-xdata
lea ecx [ esi + 0xc30 ]
push edi
call sub_401671
push edi
push [ esi + 0xc30 ]
lea ecx [ ebp - 0x34 ]
call sub_4097df
push r--data
push [ ebp - 0x8 ]
call sub_40affc
test eax eax
jne r-xdata
mov eax [ esi + 0xcd8 ]
add [ ebx + 0x71b0 ] eax
mov eax [ esi + 0xcdc ]
lea ecx [ ebp - 0x34 ]
adc [ ebx + 0x71b4 ] eax
mov al [ esi + 0x8 ]
shr al 0x3
and al 0x1
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
call sub_409817
not eax
mov [ ebx + 0x71ca ] ax
cmp [ esi ] ax
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40975b
lea eax [ ebx + 0x571c ]
mov [ ebp - 0x50 ] eax
lea eax [ ebx + 0x5740 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebx + 0x5764 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebx + 0x5788 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xc
push 0x400
inc eax
sub ecx eax
push edi
push ecx
lea eax [ ebp + eax - 0x107c ]
push eax
lea eax [ ebp - 0x107c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_403201
push 0x3ff
push edi
lea eax [ ebp - 0x107c ]
push eax
call sub_40f3fd
push 0x3ff
push [ ebp - 0x8 ]
push edi
call sub_40f330
push [ ebp - 0x8 ]
push [ ebp - 0x8 ]
call CharToOemA
jmp r-xdata
mov eax [ esi + 0xc30 ]
movzx ecx [ eax + 0xb ]
movzx edx [ eax + 0xa ]
add eax 0x8
shl ecx 0x8
add ecx edx
movzx edx [ eax + 0x1 ]
movzx eax [ eax ]
shl ecx 0x8
add ecx edx
shl ecx 0x8
add ecx eax
mov [ ebx + 0x4a70 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x4 ] 0x7a
jne r-xdata
inc [ ebp - 0x10 ]
sub [ ebp - 0xc ] 0x4
cmp [ ebp - 0xc ] 0xfffffffc
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx ebx
call sub_401c03
mov eax 0xfdff
and [ esi + 0x8 ] ax
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0x1
mov ecx rw-data
mov [ ebx + 0x71c8 ] 0x1
call sub_40341b
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call sub_40ae97
cmp eax 0x3fb
jae r-xdata
mov eax [ ebp - 0x10 ]
mov edi [ ebp + eax * 4 - 0x50 ]
movzx eax [ ebp - 0x3c ]
mov cl [ ebp - 0xc ]
shr eax cl
mov [ ebp - 0x40 ] eax
test al 0x8
je r-xdata
mov edx [ ebp - 0x10 ]
mov esi [ ebp + edx * 4 - 0x50 ]
push 0x9
pop ecx
lea edi [ ebp - 0x7c ]
[ edi ] [ esi ]
test al 0x4
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_40979a
push [ ebp - 0x38 ]
mov ecx edi
call sub_40f108
mov eax [ ebp - 0x40 ]
push [ ebp - 0x8 ]
call sub_40eda6
push eax
call sub_40ecc3
push eax
push 0x68
call sub_40a407
push eax
lea eax [ ebx + 0x418 ]
push eax
call sub_40c020
add esp 0xc
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x34 ]
call sub_409817
not eax
cmp [ ebx + 0x4ab4 ] ax
jne r-xdata
push r--data
push [ ebp - 0x8 ]
call sub_40b0ad
and [ ebp - 0x64 ] 0x0
push 0x3
pop esi
and eax esi
jle r-xdata
inc [ ebp - 0x68 ]
mov eax [ ebp - 0x10 ]
mov edi [ ebp + eax * 4 - 0x50 ]
push 0x9
pop ecx
lea esi [ ebp - 0x7c ]
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
sub esi eax
shl esi 0x3
mov edi eax
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_409739
movzx eax [ ebp - 0x16 ]
mov ecx esi
shl eax cl
add esi 0x8
or [ ebp - 0x64 ] eax
dec edi
jne r-xdata
sub_402525
push ebp
mov ebp esp
mov eax 0x162f4
call sub_401200
push ebx
push esi
mov esi ecx
mov ax [ esi + 0x71ca ]
push edi
cmp ax [ esi + 0x57e8 ]
je r-xdata
mov al [ esi + 0x5809 ]
cmp al 0x30
jb r-xdata
push 0x46f
call sub_40a407
push eax
add esi 0x418
push esi
call sub_40c020
pop ecx
pop ecx
push 0x3
mov ecx rw-data
call sub_40341b
jmp r-xdata
push 0x470
call sub_40a407
push eax
add esi 0x418
push esi
call sub_40c020
pop ecx
pop ecx
cmp al 0x35
ja r-xdata
xor al al
cmp [ esi + 0x5808 ] 0x24
ja r-xdata
xor ebx ebx
cmp [ esi + 0x57f4 ] ebx
jne r-xdata
lea edi [ esi + 0xe68 ]
mov ecx edi
call sub_409860
push edi
lea ecx [ ebp - 0x162f4 ]
call sub_411528
push ebx
lea ecx [ ebp - 0x162f4 ]
call sub_411b56
cmp [ ebp + 0xc ] ebx
jne r-xdata
test [ esi + 0x57f0 ] 0x2
jne r-xdata
movzx eax [ esi + 0x57f0 ]
test al 0x4
je r-xdata
push [ esi + 0x57f8 ]
mov ecx [ ebp + 0x8 ]
call sub_401671
push [ esi + 0x57f8 ]
mov eax [ ebp + 0x8 ]
push [ eax ]
mov ecx edi
call sub_409a0d
mov al 0x1
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ esi + 0x57f4 ]
push esi
mov ecx edi
mov [ esi + 0xe88 ] eax
mov [ esi + 0xe8c ] ebx
mov [ esi + 0xe90 ] bl
call sub_409988
mov al [ esi + 0x57f0 ]
shr al 0x1
and al 0x1
mov [ esi + 0x132e ] al
lea eax [ esi + 0x57e8 ]
mov [ edi + 0x38 ] eax
mov [ edi + 0x3c ] ebx
cmp [ esi + 0x5809 ] 0x30
mov eax [ esi + 0x57f8 ]
mov [ ebp - 0x96b4 ] eax
mov [ ebp - 0x96b0 ] ebx
mov [ ebp - 0x969c ] bl
push ebx
jne r-xdata
mov ecx [ esi + 0x1390 ]
add ecx 0x281c
mov [ ebp - 0x4 ] ecx
cmp [ ecx ] bx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
movzx eax [ esi + 0x5808 ]
push eax
lea ecx [ ebp - 0x162f4 ]
call sub_4126a6
push eax
push edi
call sub_403cee
jmp r-xdata
lea ecx [ ebp - 0x162f4 ]
call sub_411a0d
jmp r-xdata
mov cl [ esi + 0x5808 ]
cmp cl 0x24
sbb dl dl
and eax 0x400
inc dl
movzx eax ax
movzx edx dl
push edx
neg eax
sbb eax eax
push ebx
lea edx [ esi + 0x6424 ]
and eax edx
push eax
push [ ebp - 0x4 ]
movzx eax cl
push eax
mov ecx edi
call sub_4099a8
lea ecx [ ebp - 0x162f4 ]
call sub_411a0d
jmp r-xdata
lea eax [ esi + 0x5818 ]
push eax
call sub_40ecc3
push eax
push 0x471
call sub_40a407
push eax
add esi 0x418
push esi
call sub_40c020
add esp 0xc
push 0x3
mov ecx rw-data
call sub_40341b
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x1374 ]
not eax
cmp [ esi + 0x5800 ] eax
je r-xdata
call sub_40edc6
sub_40275b
push ebx
push ebp
push esi
push edi
mov esi ecx
xor ebx ebx
call sub_401ca6
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov ebp [ esp + 0x14 ]
inc ebx
test bl 0x7f
jne r-xdata
cmp [ esi + 0x4aac ] 0x7b
je r-xdata
cmp [ esi + 0x4aac ] ebp
je r-xdata
call sub_40efa5
mov eax edi
jmp r-xdata
mov ecx esi
call sub_401264
mov ecx esi
call sub_401ca6
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp ebp 0x7b
je r-xdata
sub_4027b4
push esi
push edi
mov esi ecx
jmp r-xdata
call sub_401ca6
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x4aac ]
cmp eax 0x7b
je r-xdata
xor eax eax
cmp eax 0x7a
jne r-xdata
mov ecx esi
call sub_401264
mov ecx esi
push [ esp + 0xc ]
lea ecx [ esi + 0x57e8 ]
call sub_4012aa
test al al
jne r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4027fc
push ebp
mov ebp esp
sub esp 0x22c
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] 0x41
call [ SHBrowseForFolderW@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor al al
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
call [ SHGetPathFromIDListW@IAT ]
mov edi eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
xor eax eax
test edi edi
setne al
pop edi
xor al al
jmp r-xdata
leave
retn 0xc
pop esi
sub_402878
push ebp
mov ebp esp
sub esp 0xc58
cmp [ ebp + 0x14 ] 0x0
push ebx
push esi
push edi
lea esi [ ebp - 0x458 ]
je r-xdata
push 0x85
call sub_40a407
push eax
push esi
call sub_40b147
push esi
call sub_40b11d
lea esi [ esi + eax * 2 + 0x2 ]
push r--data
push esi
call sub_40b147
push esi
call sub_40b11d
push 0x58
xor ecx ecx
mov [ esi + eax * 2 + 0x2 ] cx
pop esi
push esi
push ecx
lea eax [ ebp - 0x58 ]
push eax
call sub_40ad9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x54 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x58 ] esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov edi 0x400
push esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x28 ] eax
call sub_407bcb
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
mov eax esi
push eax
call sub_40b147
mov eax esi
push eax
call sub_40b11d
push [ ebp + 0x14 ]
lea esi [ ebp + eax * 2 - 0x456 ]
push esi
call sub_40b147
push esi
call sub_40b11d
lea esi [ esi + eax * 2 + 0x2 ]
cmp [ ebp + 0x18 ] 0x0
mov ebx [ GetOpenFileNameW@IAT ]
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x24 ] 0x1080c
push eax
je r-xdata
push edi
lea eax [ ebp - 0xc58 ]
push eax
call sub_412ae4
lea eax [ ebp - 0xc58 ]
mov [ ebp - 0x2c ] eax
call ebx
call [ GetSaveFileNameW@IAT ]
jmp r-xdata
pop edi
pop esi
setne al
pop ebx
leave
retn 0x14
call [ CommDlgExtendedError@IAT ]
cmp eax 0x3002
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
test edi edi
xor eax eax
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
call ebx
call [ GetSaveFileNameW@IAT ]
jmp r-xdata
mov edi eax
sub_4029a7
push ebp
mov ebp esp
sub esp 0x808
push ebx
push esi
push edi
xor ebx ebx
push ebx
push [ ebp + 0x10 ]
call sub_407c23
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
call sub_40edbd
mov edi 0x400
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x404 ]
push eax
call sub_40ef93
test al al
jne r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_407c07
mov esi eax
movsx eax [ esi ]
push eax
call sub_407884
cmp [ ebp + 0xc ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp al bl
je r-xdata
cmp al bl
je r-xdata
cmp [ ebp - 0x404 ] 0x2a
mov esi [ ebp + 0x10 ]
jne r-xdata
push r--data
lea eax [ ebp - 0x404 ]
push eax
call sub_40b0ad
push ebx
lea eax [ ebp - 0x404 ]
push eax
call sub_407b74
push eax
call sub_407847
test al al
jne r-xdata
mov [ esi ] bl
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x404 ]
push esi
push ebx
push eax
call sub_407c23
push eax
call sub_4075ed
test al al
jne r-xdata
movsx eax [ ebp - 0x403 ]
push eax
call sub_407884
test al al
je r-xdata
jmp r-xdata
mov al 0x1
jmp r-xdata
push edi
push esi
lea eax [ ebp - 0x806 ]
push eax
mov [ ebp - 0x808 ] 0x2e
mov [ ebp - 0x807 ] 0x5c
call sub_40ebc5
lea esi [ ebp - 0x808 ]
sub_402ae0
push ebp
mov ebp esp
push esi
push 0x5
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x4f08 ]
call sub_4029a7
test al al
je r-xdata
xor ecx ecx
cmp [ ebp + 0x14 ] cl
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
mov eax [ esi + 0x4f0c ]
cmp [ eax + 0x20 ] ecx
je r-xdata
pop esi
pop ebp
retn 0x10
push 0x5
push ecx
push [ ebp + 0x8 ]
mov ecx esi
push [ ebp + 0xc ]
push eax
call sub_4029a7
neg al
sbb al al
inc al
jmp r-xdata
sub_402b36
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x30 ]
push eax
mov edi ecx
mov [ ebp + 0x8 ] eax
call sub_40ae97
mov ebx 0x400
cmp eax ebx
jae r-xdata
xor eax eax
lea eax [ esi + 0x430 ]
push eax
call sub_40b11d
cmp eax ebx
jae r-xdata
mov al [ esi + 0x8 ]
and al 0xe0
cmp al 0xe0
sete al
xor ebx ebx
inc ebx
push ebx
push 0x0
mov [ ebp - 0x8 ] al
push [ ebp - 0x8 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_402ae0
test al al
jne r-xdata
mov ecx [ edi + 0x4f04 ]
call sub_40edbd
jmp r-xdata
mov ecx [ edi + 0x4f04 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40eeb8
test al al
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_4075ed
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
inc ebx
mov eax ebx
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call j_sub_40eb0d
neg eax
sbb al al
inc al
mov [ esi ] al
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_402beb
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4f04 ]
xor ebp ebp
cmp edi ebp
je r-xdata
mov edi [ esi + 0x4f08 ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_402acd
push edi
call sub_40b406
pop ecx
mov edi [ esi + 0x4f0c ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_402acd
push edi
call sub_40b406
pop ecx
mov edi [ esi + 0x4f14 ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_402acd
push edi
call sub_40b406
pop ecx
lea edi [ esi + 0x4f10 ]
mov ebx [ edi ]
cmp ebx ebp
je r-xdata
mov ecx edi
call sub_402acd
push edi
call sub_40b406
pop ecx
mov [ edi ] ebp
pop edi
mov [ esi + 0x4f14 ] ebp
mov [ esi + 0x4f0c ] ebp
mov [ esi + 0x4f08 ] ebp
mov [ esi + 0x4f04 ] ebp
lea ecx [ esi + 0x2d60 ]
pop esi
pop ebp
pop ebx
jmp sub_40edc6
mov ecx ebx
call sub_402acd
push ebx
call sub_40b406
pop ecx
sub_402ca6
push ebx
push esi
push edi
mov esi ecx
call sub_407772
mov ecx esi
call sub_402beb
xor ebx ebx
xor eax eax
mov edi 0xa8
push edi
mov [ esi + 0x36d1 ] bl
mov [ esi + 0x3ae2 ] ax
mov [ esi + 0x4302 ] bl
mov [ esi + 0x4702 ] ax
mov [ esi + 0x36c8 ] bl
mov [ esi + 0x36c9 ] bl
mov [ esi + 0x36cc ] ebx
call sub_40b413
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40ef22
jmp r-xdata
xor eax eax
mov ecx eax
call sub_40ef22
jmp r-xdata
push edi
mov [ esi + 0x4f04 ] eax
call sub_40b413
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40ef22
jmp r-xdata
push edi
mov [ esi + 0x4f08 ] eax
call sub_40b413
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40ef22
jmp r-xdata
push edi
mov [ esi + 0x4f0c ] eax
call sub_40b413
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40ef22
jmp r-xdata
push edi
mov [ esi + 0x4f14 ] eax
call sub_40b413
pop ecx
cmp eax ebx
je r-xdata
pop edi
mov [ esi + 0x4f10 ] eax
pop esi
pop ebx
retn
sub_402d7c
push esi
mov esi ecx
call sub_4077fa
xor eax eax
mov ecx esi
mov [ esi + 0x4f10 ] eax
mov [ esi + 0x4f14 ] eax
mov [ esi + 0x4f0c ] eax
mov [ esi + 0x4f08 ] eax
mov [ esi + 0x4f04 ] eax
call sub_402ca6
mov eax esi
pop esi
retn
sub_402db8
xor ecx ecx
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
dec edx
jne r-xdata
push 0x8
mov eax ecx
pop edx
retn
sub_402de2
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
call sub_402db8
cmp esi 0x8
jb r-xdata
test cl 0x7
je r-xdata
xor edx edx
test esi esi
jbe r-xdata
mov edi esi
shr edi 0x3
movzx edx [ ecx ]
movzx edi al
xor edx edi
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec esi
inc ecx
jmp r-xdata
pop edi
pop esi
retn 0xc
push ebx
xor eax [ ecx ]
add ecx 0x8
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
sub esi 0x8
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
mov edx eax
movzx eax dl
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx - 0x4 ]
shr edx 0x8
xor eax edx
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec edi
jne r-xdata
test esi esi
jbe r-xdata
movzx edi [ edx + ecx ]
movzx ebx al
xor edi ebx
shr eax 0x8
xor eax [ edi * 4 + rw-data ]
inc edx
cmp edx esi
jb r-xdata
pop ebx
sub_402eda
push ebp
lea ebp [ esp - 0x64 ]
sub esp 0x270
push ebx
push esi
mov esi [ ebp + 0x6c ]
push edi
xor ebx ebx
mov edi ecx
mov [ ebp + 0x5c ] edi
cmp [ esi ] bx
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x64
leave
retn 0x14
cmp [ ebp + 0x78 ] bl
jne r-xdata
mov [ ebp + 0x78 ] ebx
inc [ ebp + 0x78 ]
add ebx 0x12a
cmp ebx 0x4a8
jb r-xdata
cmp [ ebp + 0x70 ] eax
jne r-xdata
push esi
lea eax [ ebx + rw-data ]
push eax
call sub_40b232
test eax eax
jne r-xdata
push 0x1000000
lea eax [ ebp - 0x20c ]
push eax
push esi
call sub_40f38d
push esi
call sub_40b11d
mov ebx eax
add ebx ebx
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebx + rw-data ] 0x0
je r-xdata
cmp [ ebx + rw-data ] al
je r-xdata
lea eax [ ebp - 0x68 ]
push eax
call sub_40e8fd
and [ ebp + 0x60 ] 0x0
push 0x8
push [ ebp + 0x70 ]
lea eax [ ebp + ebx - 0x20c ]
push eax
call sub_40adc9
add ebx 0x8
push 0x8
push [ ebp + 0x70 ]
lea eax [ ebx + rw-data ]
push eax
call sub_40adfb
test eax eax
jne r-xdata
mov al [ ebp + 0x7c ]
cmp [ ebx + rw-data ] al
je r-xdata
jmp r-xdata
jne r-xdata
dec eax
or eax 0xffffc000
inc eax
mov esi [ ebp + 0x78 ]
imul esi esi 0x12a
push 0x10
lea eax [ esi + rw-data ]
push eax
lea ebx [ edi + 0x21f ]
push ebx
call sub_40adc9
push 0x10
lea eax [ esi + rw-data ]
add edi 0x22f
push eax
push edi
call sub_40adc9
jmp r-xdata
inc [ ebp + 0x60 ]
cmp [ ebp + 0x60 ] 0x40000
jl r-xdata
push 0x27
pop ecx
push [ ebp + 0x7c ]
lea eax [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0x104 ]
lea esi [ ebp - 0x68 ]
lea edi [ ebp - 0x104 ]
push eax
[ edi ] [ esi ]
call sub_40e9dc
mov eax [ ebp + 0x60 ]
mov cl [ ebp + 0x44 ]
cdq
and edx 0x3fff
add eax edx
mov edx [ ebp + 0x5c ]
sar eax 0xe
mov [ eax + edx + 0x22f ] cl
mov edi edx
mov ecx [ ebp + 0x5c ]
xor eax eax
cmp [ ebp + 0x74 ] al
push edi
sete al
push ebx
push eax
call sub_40abeb
push [ ebp + 0x7c ]
lea eax [ ebp - 0x20c ]
push ebx
push eax
lea eax [ ebp - 0x68 ]
push eax
call sub_40e92e
mov eax [ ebp + 0x60 ]
push [ ebp + 0x7c ]
mov ecx eax
mov [ ebp + 0x78 ] al
sar eax 0x10
mov [ ebp + 0x7a ] al
push 0x3
lea eax [ ebp + 0x78 ]
push eax
lea eax [ ebp - 0x68 ]
sar ecx 0x8
push eax
mov [ ebp + 0x79 ] cl
call sub_40e92e
mov eax [ ebp + 0x60 ]
and eax 0x80003fff
jns r-xdata
push [ ebp + 0x7c ]
lea eax [ ebp + 0x48 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
call sub_40e9dc
lea ebx [ edi + 0x21f ]
xor esi esi
mov edi ebx
mov ecx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x8
mov edx eax
shr edx cl
mov [ edi ] dl
inc edi
cmp [ ebp + 0x78 ] 0x20
jl r-xdata
inc esi
cmp esi 0x4
jl r-xdata
mov eax [ ebp + esi * 4 + 0x48 ]
and [ ebp + 0x78 ] 0x0
mov eax [ rw-data ]
push [ ebp + 0x6c ]
imul eax eax 0x12a
add eax rw-data
push eax
call sub_40b147
cmp [ ebp + 0x70 ] 0x0
mov eax [ rw-data ]
setne cl
imul eax eax 0x12a
mov [ eax + rw-data ] cl
cmp cl 0x1
jne r-xdata
mov eax [ rw-data ]
mov cl [ ebp + 0x7c ]
imul eax eax 0x12a
push 0x10
mov [ eax + rw-data ] cl
push ebx
lea eax [ eax + rw-data ]
push eax
call sub_40adc9
mov eax [ rw-data ]
mov edi [ ebp + 0x5c ]
imul eax eax 0x12a
push 0x10
add edi 0x22f
push edi
add eax rw-data
push eax
call sub_40adc9
mov eax [ rw-data ]
inc eax
and eax 0x3
mov [ rw-data ] eax
push 0x8
push [ ebp + 0x70 ]
lea eax [ eax + rw-data ]
push eax
call sub_40adc9
sub_4031b0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x30
je r-xdata
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_409f55
cmp [ ebp + 0xc ] 0x110
jne r-xdata
xor al al
pop ebp
retn 0x1c
mov al [ ebp + 0x20 ]
and al 0x1
movzx eax al
push eax
push [ ebp + 0x18 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_40a1a4
jmp r-xdata
sub_403201
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
xor edx edx
mov ebx ecx
mov cl [ esi ]
inc edx
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0xf ] cl
cmp [ ebp + 0x10 ] edx
jbe r-xdata
cmp eax [ ebp + 0x18 ]
jb r-xdata
cmp eax [ ebp + 0x18 ]
jae r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x18 ]
dec eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
movzx ecx [ ebx + 0x4 ]
shr ecx 0x6
sub ecx 0x0
je r-xdata
mov cl [ edx + esi ]
mov [ ebx + 0x4 ] cl
inc edx
mov [ ebx + 0x8 ] 0x8
movzx cx [ edx + esi ]
mov [ edi + eax * 2 ] cx
inc eax
inc edx
jmp r-xdata
dec ecx
je r-xdata
shl [ ebx + 0x4 ] 0x2
add [ ebx + 0x8 ] 0xfffffffe
cmp edx [ ebp + 0x10 ]
jb r-xdata
movzx di [ ebp + 0xf ]
movzx cx [ edx + esi ]
mov ebx 0x100
imul di bx
add cx di
mov edi [ ebp + 0x14 ]
mov [ edi + eax * 2 ] cx
inc eax
inc edx
jmp r-xdata
dec ecx
je r-xdata
mov ebx [ ebp - 0x8 ]
movzx cx [ edx + esi + 0x1 ]
mov ebx 0x100
imul cx bx
movzx bx [ edx + esi ]
add cx bx
mov [ edi + eax * 2 ] cx
inc eax
inc edx
inc edx
jmp r-xdata
dec ecx
jne r-xdata
movzx ecx [ edx + esi ]
inc edx
test cl cl
jns r-xdata
inc ecx
inc ecx
jmp r-xdata
mov bl [ edx + esi ]
and ecx 0x7f
inc edx
inc ecx
inc ecx
mov [ ebp - 0x1 ] bl
mov [ ebp - 0xc ] ecx
test ecx ecx
jle r-xdata
test ecx ecx
jg r-xdata
cmp eax [ ebp + 0x18 ]
jae r-xdata
cmp eax [ ebp + 0x18 ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movsx cx [ eax + ecx ]
movzx di [ ebp - 0x1 ]
add cx di
mov edi 0xff
and cx di
movzx di [ ebp + 0xf ]
mov ebx 0x100
imul di bx
add cx di
mov edi [ ebp + 0x14 ]
dec [ ebp - 0xc ]
mov [ edi + eax * 2 ] cx
inc eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov ebx [ ebp + 0x8 ]
movsx bx [ eax + ebx ]
mov [ edi + eax * 2 ] bx
mov ebx [ ebp - 0x8 ]
dec ecx
inc eax
sub_403385
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
call [ GetLastError@IAT ]
cmp eax 0x3
jne r-xdata
leave
retn 0x8
push esi
push edi
mov edi 0x400
push edi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
call sub_40b11d
mov esi eax
lea eax [ ebp - 0x800 ]
push eax
call sub_4083a4
test al al
jne r-xdata
mov eax 0x104
pop edi
cmp esi eax
pop esi
jbe r-xdata
lea eax [ ebp - 0x1000 ]
push eax
push edi
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_40b11d
lea esi [ esi + eax + 0x1 ]
push eax
push 0xaf
call sub_40a407
push eax
push r--data
call sub_40c020
add esp 0xc
sub_40341b
mov edx [ esp + 0x4 ]
mov eax edx
dec eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
dec eax
je r-xdata
inc [ ecx + 0x4 ]
retn 0x4
mov [ ecx ] edx
mov eax [ ecx ]
test eax eax
je r-xdata
sub eax 0xfd
jne r-xdata
mov [ ecx ] 0x2
jmp r-xdata
cmp eax 0x1
jne r-xdata
sub_40344e
push esi
mov esi [ esp + 0x8 ]
cmp esi 0xff
jne r-xdata
push esi
mov ecx rw-data
call sub_40341b
call sub_405a73
call sub_40c600
push esi
call sub_40b384
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop esi
retn 0x4
sub_4034a8
push ebp
mov ebp esp
sub esp 0x800
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x2
mov ecx esi
call sub_40344e
pop esi
leave
retn 0x8
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x76
call sub_40a407
push eax
push 0x0
call sub_40c020
add esp 0xc
sub_4034fb
push ebp
mov ebp esp
mov eax 0x1200
call sub_401200
cmp [ ecx + 0x9 ] 0x0
jne r-xdata
xor al al
push ebx
push esi
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x74
call sub_40a407
push eax
lea eax [ ebp - 0x1200 ]
push 0x500
push eax
call sub_40b3bb
add esp 0x10
call [ GetLastError@IAT ]
push 0x35
push 0x7e
mov esi eax
call sub_40a407
push eax
lea eax [ ebp - 0x1200 ]
push eax
push [ rw-data ]
call [ MessageBoxW@IAT ]
cmp eax 0x4
push esi
sete bl
call [ SetLastError@IAT ]
pop esi
mov al bl
pop ebx
jmp r-xdata
leave
retn 0xc
sub_403588
push ebp
mov ebp esp
sub esp 0x800
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x2
mov ecx esi
call sub_40344e
pop esi
leave
retn 0x8
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x204
call sub_40a407
push eax
push 0x0
call sub_40c020
add esp 0xc
sub_4035de
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x6d
call sub_40a407
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40c020
add esp 0xc
pop esi
leave
retn 0x10
sub_40363a
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
push esi
push edi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
mov edi ecx
push [ ebp + 0x8 ]
call sub_407ac7
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x6e
call sub_40a407
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40c020
add esp 0xc
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
call sub_403385
pop edi
pop esi
leave
retn 0x10
sub_4036a7
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x75
call sub_40a407
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40c020
add esp 0xc
pop esi
leave
retn 0x10
sub_403703
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push 0x74
call sub_40a407
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40c020
add esp 0xc
pop esi
leave
retn 0x10
sub_4037d2
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x20
mov [ rw-data ] 0x1
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ LookupPrivilegeValueW@IAT ]
push edi
lea eax [ ebp - 0x10 ]
push eax
push r--data
push ebx
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call esi
mov edi [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r--data
push ebx
call esi
test eax eax
je r-xdata
push ebx
push ebx
push ebx
lea eax [ ebp - 0x14 ]
push eax
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
pop edi
pop esi
push ebx
push ebx
push ebx
lea eax [ ebp - 0x14 ]
push eax
push ebx
push [ ebp - 0x4 ]
call edi
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
sub_4038a6
push ebp
mov ebp esp
mov eax 0x40e4
call sub_401200
call sub_407428
test eax eax
je r-xdata
leave
retn 0xc
mov eax [ ebp + 0x10 ]
push esi
xor esi esi
cmp eax esi
je r-xdata
push 0x1000000
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0xc ]
call sub_40f362
cmp [ eax ] si
je r-xdata
lea eax [ ebp - 0x1004 ]
push eax
lea eax [ ebp - 0x804 ]
cmp [ ebp - 0x1002 ] si
jne r-xdata
push eax
lea eax [ ebp - 0x1004 ]
push eax
call sub_40b147
jmp r-xdata
push 0x3
mov ecx rw-data
call sub_40341b
jmp r-xdata
push edi
push esi
push ebx
call sub_40f3bd
xor eax eax
mov [ esi + edi * 2 ] ax
cmp [ esi ] 0x3a
je r-xdata
push r--data
lea eax [ ebp - 0x804 ]
push eax
call sub_40b147
lea eax [ ebp - 0x1004 ]
push eax
lea eax [ ebp - 0x800 ]
jmp r-xdata
cmp [ ebp - 0x1004 ] si
je r-xdata
pop edi
pop ebx
pop esi
lea eax [ esi + 0x2 ]
push eax
push eax
call sub_407d22
lea ecx [ ebp - 0x40e4 ]
call sub_40387e
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
push 0x0
lea eax [ ebp - 0x40e4 ]
push eax
push esi
push edi
call sub_406651
xor ebx ebx
mov [ ebp + 0x13 ] al
mov eax [ ebp - 0x34dc ]
inc ebx
test bl al
je r-xdata
push eax
call sub_40b147
push ebx
push edi
lea eax [ ebp - 0x804 ]
push eax
call sub_40b11d
lea esi [ ebp + eax * 2 - 0x804 ]
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x641c ]
mov ebx [ eax + 0x6418 ]
lea eax [ ebp - 0x804 ]
push eax
shr edi 0x1
call sub_40b11d
add eax edi
cmp eax 0x402
jae r-xdata
push 0x1000000
lea eax [ ebp - 0x2c44 ]
push eax
lea eax [ ebp - 0x804 ]
push eax
call sub_40f330
lea ecx [ ebp - 0x1c24 ]
call sub_405473
push ebx
lea eax [ ebp - 0x804 ]
push eax
lea eax [ ebp - 0x2c44 ]
push eax
lea ecx [ ebp - 0x1c24 ]
call sub_405897
test al al
je r-xdata
and eax 0xfffffffe
push eax
push esi
push edi
call sub_405e2f
lea ecx [ ebp - 0x2844 ]
call sub_405473
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c24 ]
push eax
push 0x0
call sub_402525
test al al
je r-xdata
push [ ebp - 0x34dc ]
push esi
push edi
call sub_405e2f
lea ecx [ ebp - 0x2844 ]
call sub_405658
lea ecx [ ebp - 0x1c24 ]
call sub_405658
push ebx
push ebx
push esi
push edi
lea ecx [ ebp - 0x2844 ]
call sub_40567b
test al al
je r-xdata
lea ecx [ ebp - 0x1c24 ]
call sub_4054de
lea eax [ ebp - 0x2c54 ]
push eax
lea eax [ ebp - 0x2c5c ]
push eax
lea eax [ ebp - 0x2c64 ]
push eax
push [ ebp - 0x2840 ]
call [ SetFileTime@IAT ]
sub_403aad
push ebp
mov ebp esp
sub esp 0xc
call sub_407428
test eax eax
je r-xdata
leave
retn 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_402525
test al al
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
call sub_4037d2
push 0x7
pop eax
cmp [ rw-data ] bl
je r-xdata
pop esi
pop ebx
push [ ebp - 0xc ]
call sub_40ad18
push [ ebp - 0xc ]
push eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
push 0xf
pop eax
push [ ebp + 0xc ]
call [ SetFileSecurityA@IAT ]
push [ ebp + 0x10 ]
call [ SetFileSecurityW@IAT ]
jmp r-xdata
push [ ebp + 0xc ]
call sub_40ecc3
push eax
push 0x3e4
call sub_40a407
push eax
add esi 0x418
push esi
call sub_40c020
mov esi rw-data
add esp 0xc
mov ecx esi
call sub_403480
push 0x1
mov ecx esi
call sub_40341b
cmp eax ebx
jne r-xdata
sub_403b5f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x2d7c ] 0x0
push esi
mov esi [ ebp + 0xc ]
je r-xdata
push r--data
lea eax [ esi + 0x5818 ]
push eax
call sub_40affc
test eax eax
jne r-xdata
push r--data
lea eax [ esi + 0x5818 ]
push eax
call sub_40affc
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4038a6
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_403aad
sub_403bb9
push esi
push edi
mov esi ecx
call sub_40f182
lea edi [ esi + 0x28 ]
mov ecx edi
call sub_409a22
and [ esi + 0x54c ] 0x0
xor eax eax
push 0x162f0
mov [ esi + 0x115c ] ax
call sub_40b413
pop ecx
test eax eax
je r-xdata
xor eax eax
push edi
mov ecx eax
call sub_411528
jmp r-xdata
push 0x0
mov ecx eax
mov [ esi + 0x548 ] eax
call sub_411b56
pop edi
mov eax esi
pop esi
retn
sub_403c0b
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
push edi
call sub_405b52
mov edi [ esp + 0x10 ]
xor ebx ebx
add edi 0x281c
mov [ esi + 0x4f8 ] eax
mov [ esi + 0x4fc ] edx
mov [ esi + 0x550 ] ebx
mov [ esi + 0x554 ] ebx
cmp [ edi ] bx
je r-xdata
setne al
mov ecx esi
mov [ esi + 0x125c ] al
mov [ esi + 0x4ee ] bl
mov [ esi + 0x125d ] bl
mov [ esi + 0x1e5f ] bl
mov [ esi + 0x559 ] 0x1
mov [ esi + 0x55a ] bl
mov [ esi + 0x55b ] bl
call sub_40f2fc
pop edi
pop esi
pop ebx
retn 0x8
push edi
lea eax [ esi + 0x115c ]
push eax
call sub_40b147
cmp [ edi ] bx
sub_403c8d
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_40acff
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
test edi edi
je r-xdata
mov ecx rw-data
call sub_403495
sub_403cbc
push esi
mov esi ecx
push edi
mov edi [ esi + 0x548 ]
test edi edi
je r-xdata
push 0x100
push 0x0
add esi 0x115c
push esi
call sub_40ad9c
pop edi
pop esi
retn
mov ecx edi
call sub_411a0d
push edi
call sub_40b406
pop ecx
sub_403cee
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
push 0x10000
lea ecx [ ebp - 0xc ]
call sub_403c8d
push [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_409a43
mov esi eax
test esi esi
je r-xdata
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
pop edi
pop esi
leave
retn 0xc
push edi
call sub_40ad18
pop ebx
xor eax eax
cmp eax [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push edi
call sub_409ba5
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
jg r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_409a43
mov esi eax
test esi esi
jne r-xdata
jg r-xdata
mov esi ebx
cmp esi ebx
jb r-xdata
cmp esi 0xffffffff
je r-xdata
sub ebx esi
sbb [ ebp + 0x10 ] 0x0
test ebx ebx
jb r-xdata
sub_403d6f
push ebp
mov ebp esp
mov eax 0x3258
call sub_401200
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
mov al [ ebx + 0x36d1 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov [ ebp - 0x10 ] al
jne r-xdata
mov eax [ esi + 0x4aac ]
mov [ ebp + 0x8 ] eax
cmp eax 0x74
je r-xdata
cmp [ edi + 0x4ee ] 0x0
je r-xdata
cmp [ edi + 0x1e5f ] 0x0
mov [ edi + 0x125d ] 0x0
jne r-xdata
cmp eax 0x76
je r-xdata
xor al al
push [ ebp - 0x10 ]
lea eax [ edi + 0x28 ]
push 0x0
push eax
push esi
call sub_4126d5
test al al
jne r-xdata
cmp [ ebx + 0x2d50 ] 0x0
jne r-xdata
mov [ edi + 0x1e5f ] 0x1
cmp eax 0x79
jne r-xdata
mov [ edi + 0x1e5f ] 0x0
push 0x1
mov ecx rw-data
call sub_40341b
jmp r-xdata
lea eax [ esi + 0x4b08 ]
push eax
push eax
call OemToCharA
lea eax [ esi + 0x4b08 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
call sub_40af8a
xor eax eax
mov [ ebp - 0x19b8 ] ax
mov [ ebp - 0x11 ] al
push 0x5
lea eax [ ebp - 0x11 ]
push eax
lea eax [ esi + 0x4ad8 ]
push eax
mov ecx ebx
call sub_402b36
test eax eax
setne [ ebp + 0x13 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov eax [ ebx + 0x4f04 ]
mov ecx [ edi + 0x554 ]
cmp ecx [ eax + 0x20 ]
jb r-xdata
cmp eax 0x7b
jne r-xdata
push r--data
lea eax [ esi + 0x5818 ]
push eax
call sub_40affc
test eax eax
jne r-xdata
cmp eax 0x7a
jne r-xdata
mov eax 0x200
test [ esi + 0x4ae0 ] ax
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
cmp [ edi + 0x559 ] 0x0
jne r-xdata
mov ecx esi
call sub_401264
test [ esi + 0x57c8 ] 0x1
je r-xdata
cmp [ edi + 0x125d ] 0x0
je r-xdata
mov [ edi + 0x1e5f ] 0x1
mov [ ebp - 0x1 ] 0x0
call sub_40f565
mov [ ebp - 0x1 ] 0x1
test al al
jne r-xdata
mov [ edi + 0x559 ] 0x0
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp - 0x10 ]
lea eax [ edi + 0x28 ]
push 0x0
push eax
push esi
call sub_4126d5
test al al
je r-xdata
lea eax [ edi + 0x165e ]
movzx ecx [ eax ]
neg ecx
sbb ecx ecx
and ecx eax
push ecx
lea eax [ edi + 0x125e ]
push eax
push esi
push ebx
call sub_403b5f
mov eax [ ebp + 0x8 ]
lea eax [ ebp - 0x598 ]
push eax
push eax
call sub_407c23
mov ecx esi
call sub_401ba8
test al al
jne r-xdata
lea eax [ ebp - 0x19b8 ]
push eax
lea eax [ esi + 0x4f08 ]
push eax
call sub_407d22
push 0x1000000
lea eax [ ebp - 0x1db8 ]
push eax
lea eax [ ebp - 0x19b8 ]
push eax
call sub_40f330
test al al
je r-xdata
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
lea ecx [ edi + 0x165e ]
and eax ecx
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] eax
je r-xdata
push 0x0
mov [ edi + 0x1e5f ] 0x0
push [ esi + 0x71ac ]
mov ecx esi
push [ esi + 0x71a8 ]
call sub_405aee
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax 0x800
test [ esi + 0x4ae0 ] ax
je r-xdata
lea eax [ ebp - 0x1db8 ]
push eax
call sub_408273
test al al
je r-xdata
mov ecx esi
call sub_401b96
test al al
jne r-xdata
mov eax [ ebx + 0x32ac ]
cmp eax 0x1
je r-xdata
lea eax [ ebp - 0x1db8 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
call sub_40af8a
mov ecx esi
call sub_401bc1
mov al [ esi + 0x4ae0 ]
shr al 0x1
and al 0x1
mov [ edi + 0x4ee ] al
mov [ edi + 0x4ef ] 0x0
mov eax [ esi + 0x71b0 ]
sub eax [ esi + 0x57b0 ]
mov ecx [ esi + 0x71b4 ]
sbb ecx [ esi + 0x57b4 ]
push 0x0
push ecx
push eax
mov ecx esi
call sub_405aee
cmp [ ebp + 0x13 ] 0x0
mov [ ebp + 0xf ] 0x0
mov [ ebp + 0xb ] 0x0
mov [ ebp - 0x15 ] 0x0
jne r-xdata
cmp [ ebx + 0x32ac ] 0x1
jbe r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x49
push [ ebp - 0x15 ]
sete al
movzx eax al
push eax
movzx eax [ ebx + 0x2dea ]
push eax
lea eax [ ebp - 0x19b8 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
call sub_40bb37
test al al
je r-xdata
mov al [ esi + 0x71b9 ]
mov [ ebp - 0x15 ] al
test al al
je r-xdata
mov [ ebp + 0x13 ] 0x0
test eax eax
jne r-xdata
test [ esi + 0x4ae0 ] 0x4
je r-xdata
cmp [ edi + 0x4ef ] 0x0
jne r-xdata
push 0x0
lea eax [ ebp - 0x19b8 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
call sub_40840a
mov ecx [ ebx + 0x32ac ]
dec ecx
cmp ecx eax
jne r-xdata
mov [ ebp + 0x13 ] al
lea eax [ ebx + 0x411 ]
lea ecx [ edi + 0x125e ]
push eax
push ecx
mov [ ebp - 0x8 ] ecx
call sub_40af8a
cmp [ ebx + 0x2d4c ] 0x4
jne r-xdata
lea eax [ edi + 0x115c ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x19b8 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
call sub_40840a
jmp r-xdata
mov [ ebp + 0xb ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x58
jne r-xdata
push 0x80
push eax
lea eax [ ebp - 0x19b8 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
push 0x1
call sub_402daf
test al al
jne r-xdata
cmp [ esi + 0x71b9 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x45
je r-xdata
push 0x3a
call sub_40789c
test al al
je r-xdata
push 0x0
call sub_40baf5
pop ecx
lea eax [ ebp - 0x598 ]
push eax
call sub_40ecc3
push eax
push 0x73
call sub_40a407
push eax
call sub_40baf5
pop ecx
pop ecx
mov [ edi + 0x1e5e ] 0x1
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
lea eax [ ebp - 0x598 ]
push eax
call sub_407b74
cmp [ ebx + 0x2d4c ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0xb ] 0x1
mov [ eax ] 0x0
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ edi + 0x125f ] 0x5f
jne r-xdata
lea eax [ ebp - 0x598 ]
jmp r-xdata
xor eax eax
mov [ edi + 0x165e ] ax
lea eax [ ebx + 0x812 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5f
jne r-xdata
movsx eax [ edi + 0x1260 ]
push eax
call sub_407884
test al al
je r-xdata
push eax
push [ ebp - 0x8 ]
call sub_40b0ad
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
push eax
call sub_40eb62
cmp [ ebp + 0xb ] 0x0
mov [ ebp - 0x16 ] al
je r-xdata
mov [ ebp + 0xb ] 0x0
test [ esi + 0x4ae0 ] 0x1
mov [ ebp + 0xb ] 0x1
je r-xdata
push 0x1000000
lea eax [ edi + 0x165e ]
push eax
lea eax [ ebx + 0x411 ]
push eax
call sub_40f362
push eax
lea eax [ edi + 0x165e ]
push eax
call sub_40b147
jmp r-xdata
cmp [ edi + 0x125f ] 0x5f
jne r-xdata
mov al [ ebp - 0x16 ]
sub al 0x41
cmp al 0x19
ja r-xdata
cmp [ ebp - 0x10 ] 0x45
je r-xdata
cmp [ ebx + 0x2d49 ] 0x0
je r-xdata
cmp [ ebx + 0x2d48 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x45
je r-xdata
xor eax eax
mov [ edi + 0x165e ] ax
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov [ eax ] 0x5c
mov [ edi + 0x125f ] 0x5c
mov [ edi + 0x125f ] 0x3a
jmp r-xdata
lea ecx [ ebp - 0x3258 ]
call sub_40387e
push 0x0
lea eax [ ebp - 0x3258 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_406651
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x58
jne r-xdata
test [ esi + 0x4ae0 ] 0x4
je r-xdata
lea eax [ ebp - 0x19b8 ]
push eax
call sub_407bcb
cmp [ ebx + 0x2d4c ] 0x1
je r-xdata
cmp [ ebx + 0x2d48 ] 0x0
lea eax [ esi + 0x571c ]
push eax
lea ecx [ ebp - 0x2644 ]
call sub_40f2d2
test al al
je r-xdata
mov al [ esi + 0x4af8 ]
cmp al 0x24
je r-xdata
cmp [ edi + 0x115c ] 0x0
jne r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
cmp [ edi + 0x1660 ] 0x5f
jne r-xdata
lea eax [ ebp - 0x19b8 ]
jmp r-xdata
mov [ ebp + 0xb ] 0x0
cmp [ ebp - 0x2648 ] 0x0
je r-xdata
lea ecx [ ebp - 0x11b8 ]
call sub_405473
push [ esi + 0x4afc ]
call sub_405dfd
test al al
jne r-xdata
cmp al 0x1d
je r-xdata
push 0x1
mov ecx rw-data
call sub_40341b
mov [ ebp + 0xb ] 0x0
movzx eax [ edi + 0x1662 ]
push eax
call sub_407884
test al al
je r-xdata
push eax
lea eax [ edi + 0x165e ]
push eax
call sub_40b1b9
cmp [ ebp + 0xb ] 0x0
je r-xdata
push edi
lea ecx [ ebp - 0x2644 ]
call sub_40f272
test al al
jmp r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx esi
call sub_401b96
test al al
je r-xdata
cmp [ esi + 0x4af9 ] 0x30
je r-xdata
push 0x3a
pop eax
mov [ edi + 0x1660 ] ax
jmp r-xdata
je r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
cmp [ esi + 0x71b9 ] 0x0
je r-xdata
mov al [ ebx + 0x2dea ]
test al al
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
lea eax [ ebp - 0x598 ]
push eax
call sub_40ecc3
push eax
push 0x6c
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
add esp 0xc
push 0x1
mov ecx rw-data
mov [ ebp + 0xb ] 0x0
call sub_40341b
inc [ edi + 0x550 ]
xor eax eax
mov [ edi + 0x510 ] eax
mov [ edi + 0x514 ] eax
mov [ edi + 0x518 ] eax
mov [ edi + 0x51c ] eax
cmp [ esi + 0x71b8 ] al
setne al
or [ edi + 0x538 ] 0xffffffff
dec eax
mov [ edi + 0x534 ] eax
cmp [ esi + 0x4aec ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x19b8 ]
push eax
lea eax [ ebp - 0x598 ]
push eax
mov [ ebp - 0x15 ] 0x1
mov [ ebp + 0xf ] 0x1
mov [ ebp + 0xb ] 0x1
call sub_40bb37
test al al
jne r-xdata
cmp [ ebp - 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
lea ecx [ ebp - 0x11b8 ]
call sub_405658
jmp r-xdata
cmp [ ebp - 0x10 ] 0x50
je r-xdata
lea eax [ edi + 0x115c ]
push eax
lea eax [ ebp - 0x198 ]
push eax
call sub_40b147
push 0x80
lea eax [ ebp - 0x98 ]
push eax
lea eax [ edi + 0x115c ]
push eax
call [ CharToOemBuffW@IAT ]
push 0x80
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_40f362
xor eax eax
mov [ ebp - 0x9a ] ax
jmp r-xdata
inc [ edi + 0x54c ]
cmp [ ebp - 0x10 ] 0x50
je r-xdata
lea ecx [ ebp - 0x11b8 ]
call sub_405658
cmp [ ebp + 0x13 ] 0x0
je r-xdata
xor bl bl
jmp r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x58
jne r-xdata
mov [ ebp + 0xf ] 0x1
cmp [ ebp - 0x10 ] 0x45
je r-xdata
and [ ebp - 0xc ] 0x0
movzx ecx [ esi + 0x4af8 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
movzx eax [ esi + 0x4ae0 ]
test al 0x4
je r-xdata
lea ecx [ ebp - 0x11b8 ]
call sub_405635
test al al
je r-xdata
inc [ edi + 0x554 ]
lea ecx [ ebp - 0x11b8 ]
call sub_405658
mov al bl
jmp r-xdata
test al al
jne r-xdata
cmp [ ebx + 0x2d4c ] 0x1
je r-xdata
cmp [ ebx + 0x2d88 ] 0x0
sete al
cmp [ ebx + 0x2dea ] 0x0
mov [ ebp - 0x11a5 ] al
jne r-xdata
cmp [ esi + 0x71c8 ] al
jne r-xdata
cmp [ esi + 0x4af8 ] 0x24
lea ecx [ edi + 0x28 ]
sbb dl dl
and eax 0x400
inc dl
movzx eax ax
movzx edx dl
push edx
neg eax
sbb eax eax
push 0x0
lea edx [ esi + 0x5714 ]
and eax edx
push eax
lea eax [ ebp - 0x198 ]
push eax
push [ ebp - 0xc ]
call sub_4099a8
mov eax [ esi + 0x57b0 ]
mov [ edi + 0x48 ] eax
mov eax [ esi + 0x57b4 ]
mov [ edi + 0x4c ] eax
lea eax [ ebp - 0x11b8 ]
push eax
push esi
lea ecx [ edi + 0x28 ]
call sub_409988
mov al [ ebp + 0xf ]
mov cl [ ebp - 0x15 ]
mov [ edi + 0x51 ] al
mov [ edi + 0x52 ] cl
test al al
jne r-xdata
push [ ebp - 0x8 ]
call sub_40ecc3
push eax
push 0x406
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
add esp 0xc
lea eax [ edi + 0x165e ]
push eax
push [ ebp - 0x8 ]
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
mov ecx rw-data
call sub_403785
push [ esi + 0x4af4 ]
lea eax [ ebp - 0x1 ]
push [ esi + 0x57bc ]
push [ esi + 0x57b8 ]
push eax
push [ ebx + 0x2d28 ]
lea eax [ ebp - 0x11b8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push eax
push ebx
call sub_405210
test al al
jne r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x15 ] 0x0
mov [ ebp - 0xc ] 0x1
je r-xdata
mov eax [ esi + 0x57b0 ]
mov ecx [ esi + 0x57b4 ]
mov edx [ esi + 0x57bc ]
shld ecx eax 0xb
shl eax 0xb
cmp ecx edx
jl r-xdata
mov [ ebp + 0xb ] al
cmp [ ebp - 0x1 ] al
jne r-xdata
inc [ edi + 0x54c ]
cmp [ ebx + 0x2dea ] 0x0
jne r-xdata
test [ esi + 0x4ae0 ] 0x1
jne r-xdata
mov al [ ebp - 0xc ]
mov [ edi + 0x125d ] al
jmp r-xdata
push [ ebp - 0xc ]
lea eax [ edi + 0x534 ]
push eax
push [ ebp - 0x8 ]
lea eax [ edi + 0x28 ]
push esi
push eax
call sub_40f32b
test al al
je r-xdata
jg r-xdata
lea edx [ edi + 0x165e ]
push edx
push [ ebp - 0x8 ]
lea eax [ esi + 0x418 ]
lea ecx [ esi + 0x17 ]
push eax
push ecx
mov ecx rw-data
call sub_40363a
push 0x9
mov ecx rw-data
call sub_40341b
push [ ebp - 0x8 ]
call sub_408273
test al al
jne r-xdata
cmp [ ebx + 0x2d8f ] 0x0
push [ esi + 0x4afc ]
sete al
movzx eax al
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_405ea5
test eax eax
je r-xdata
mov ecx esi
call sub_401264
mov al [ esi + 0x71b8 ]
test al al
je r-xdata
cmp [ esi + 0x4af9 ] 0x30
jne r-xdata
test edx edx
jl r-xdata
cmp eax [ esi + 0x57b8 ]
jbe r-xdata
push 0x456
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
pop ecx
pop ecx
push 0x400
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1db8 ]
push eax
call sub_40ebc5
push 0x1
push [ ebp - 0x8 ]
call sub_4082fb
push 0x1
push 0x0
push [ ebp - 0x8 ]
call sub_40606e
push [ esi + 0x4af4 ]
lea eax [ ebp - 0x1 ]
push [ esi + 0x57bc ]
push [ esi + 0x57b8 ]
push eax
push [ ebx + 0x2d28 ]
lea eax [ ebp - 0x11b8 ]
push 0x0
push [ ebp - 0x8 ]
push eax
push ebx
call sub_405210
test al al
je r-xdata
mov [ edi + 0x125d ] 0x1
jmp r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_405d8d
mov [ ebp + 0xb ] al
test al al
je r-xdata
mov eax [ esi + 0x4af0 ]
not eax
cmp [ edi + 0x534 ] eax
jne r-xdata
mov ecx [ edi + 0x534 ]
cmp ecx [ esi + 0x4af0 ]
je r-xdata
mov eax [ edi + 0x548 ]
mov ecx [ esi + 0x57b8 ]
mov [ eax + 0xcc40 ] ecx
mov ecx [ esi + 0x57bc ]
mov [ eax + 0xcc44 ] ecx
mov [ eax + 0xcc58 ] 0x0
mov al [ esi + 0x4ae0 ]
mov ecx [ edi + 0x548 ]
shr al 0x4
and al 0x1
movzx eax al
push eax
movzx eax [ esi + 0x4af8 ]
push eax
call sub_4126a6
push [ esi + 0x57bc ]
lea eax [ edi + 0x28 ]
push [ esi + 0x57b8 ]
push eax
call sub_403cee
jmp r-xdata
push [ esi + 0x57bc ]
lea ecx [ ebp - 0x11b8 ]
push [ esi + 0x57b8 ]
call sub_405b24
jg r-xdata
lea eax [ edi + 0x165e ]
push eax
push [ ebp - 0x8 ]
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
mov ecx rw-data
call sub_40363a
mov [ ebp + 0xb ] 0x1
jmp r-xdata
cmp [ edi + 0x125d ] 0x0
je r-xdata
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40606e
cmp [ ebx + 0x2d8f ] 0x0
push [ esi + 0x4afc ]
sete al
movzx eax al
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_405ea5
test eax eax
je r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_405e02
push eax
call sub_405de5
test al al
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
test al al
jne r-xdata
mov ecx esi
call sub_405b52
cmp edx [ esi + 0x57b4 ]
jl r-xdata
cmp [ esi + 0x57b8 ] 0x5f5e100
jb r-xdata
mov bl 0x1
mov eax [ ebx + 0x32bc ]
neg eax
sbb eax eax
lea ecx [ esi + 0x5764 ]
and eax ecx
push eax
mov eax [ ebx + 0x32b8 ]
neg eax
sbb eax eax
lea ecx [ esi + 0x5740 ]
and eax ecx
push eax
mov eax [ ebx + 0x32b4 ]
add esi 0x571c
neg eax
sbb eax eax
and eax esi
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_4060a6
cmp [ ebp + 0xb ] 0x0
je r-xdata
push [ esi + 0x4af4 ]
lea eax [ ebp + 0xb ]
push [ esi + 0x57bc ]
push [ esi + 0x57b8 ]
push eax
push [ ebx + 0x2d28 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push 0x0
push ebx
call sub_405210
mov [ ebp + 0xb ] 0x0
cmp [ esi + 0x4af9 ] 0x30
je r-xdata
mov [ edi + 0x55b ] 0x0
jmp r-xdata
test [ esi + 0x4ae0 ] 0x10
jne r-xdata
jg r-xdata
push [ ebp - 0x8 ]
call sub_40ecc3
push eax
push 0x6f
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
add esp 0xc
push [ ebp - 0xc ]
mov ecx rw-data
push [ ebp - 0x8 ]
call sub_403385
mov ecx rw-data
call sub_403480
push 0x9
mov ecx rw-data
call sub_40341b
cmp [ ebx + 0x2d8f ] 0x0
jne r-xdata
cmp [ ebp - 0x15 ] 0x0
mov [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ esi + 0x57bc ] 0x0
jl r-xdata
cmp eax [ esi + 0x57b0 ]
jbe r-xdata
push [ esi + 0x4afc ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_405e2f
cmp [ ebp + 0xf ] 0x0
jne r-xdata
test al al
jne r-xdata
jg r-xdata
cmp [ ebp - 0x10 ] 0x58
je r-xdata
test [ esi + 0x4ae0 ] 0x4
je r-xdata
test al al
je r-xdata
cmp [ esi + 0x57b8 ] 0x0
jbe r-xdata
push [ esi + 0x4afc ]
call sub_405dfd
test al al
jne r-xdata
cmp [ ebp - 0x10 ] 0x45
jne r-xdata
lea eax [ ebp - 0x598 ]
push eax
call sub_40ecc3
push eax
push 0x71
cmp [ edi + 0x55b ] al
jne r-xdata
mov [ edi + 0x55b ] 0x1
cmp [ ebx + 0x2d44 ] al
je r-xdata
lea eax [ ebp - 0x598 ]
push eax
call sub_40ecc3
push eax
push 0x70
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ esi + 0x4afc ] 0xffffffdf
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
add esp 0xc
push 0x3
mov ecx rw-data
mov [ ebp - 0x1 ] 0x1
call sub_40341b
call sub_403480
mov edx [ ebx + 0x32bc ]
neg edx
sbb edx edx
lea eax [ esi + 0x5764 ]
and edx eax
mov eax [ ebx + 0x32b8 ]
neg eax
sbb eax eax
push edx
lea edx [ esi + 0x5740 ]
and eax edx
push eax
mov eax [ ebx + 0x32b4 ]
neg eax
lea ecx [ esi + 0x571c ]
sbb eax eax
and eax ecx
push eax
lea ecx [ ebp - 0x11b8 ]
call sub_4059c6
lea ecx [ ebp - 0x11b8 ]
call sub_4054de
mov ecx [ ebx + 0x32bc ]
neg ecx
sbb ecx ecx
lea eax [ esi + 0x5764 ]
and ecx eax
push ecx
mov ecx [ ebx + 0x32b4 ]
neg ecx
sbb ecx ecx
lea eax [ esi + 0x571c ]
and ecx eax
push ecx
lea ecx [ ebp - 0x11b8 ]
call sub_405632
cmp [ ebx + 0x2d8f ] 0x0
jne r-xdata
cmp [ ebx + 0x2d88 ] 0x0
je r-xdata
mov [ edi + 0x125d ] 0x1
push [ esi + 0x4afc ]
lea eax [ ebp - 0xda0 ]
push eax
lea eax [ ebp - 0x11a1 ]
push eax
call sub_405e2f
lea ecx [ ebp - 0x11b8 ]
call sub_405622
sub_404c21
push ebp
mov ebp esp
mov eax 0x9e88
call sub_401200
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x9e88 ]
call sub_401883
lea eax [ esi + 0x95c ]
push eax
lea edi [ esi + 0x55c ]
push edi
lea ecx [ ebp - 0x9e88 ]
call sub_4057a6
test al al
jne r-xdata
push 0x1
lea ecx [ ebp - 0x9e88 ]
call sub_401306
test al al
jne r-xdata
push 0x6
push ebx
xor ebx ebx
xor edi edi
cmp [ ebp - 0x2cce ] bl
je r-xdata
push r--data
push edi
call sub_407e79
test al al
je r-xdata
lea ecx [ ebp - 0x9e88 ]
call sub_4019f2
pop edi
xor eax eax
pop esi
leave
retn 0x4
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x9e88 ]
push eax
push edi
mov ecx esi
call sub_403c0b
mov al [ edi + 0x36d1 ]
pop ebx
cmp al 0x54
je r-xdata
lea eax [ ebp - 0x9e71 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_40af8a
lea eax [ ebp - 0x9a70 ]
push eax
lea eax [ ebp - 0xc00 ]
push eax
call sub_40b147
push 0x1
jmp r-xdata
mov [ edi + 0x2dea ] 0x1
cmp al 0x49
jne r-xdata
xor eax eax
inc eax
cmp [ ebp - 0x2cd0 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_40341b
jmp r-xdata
lea ecx [ ebp - 0x9e88 ]
call sub_401ca6
lea ecx [ ebp + 0xb ]
push ecx
push eax
lea eax [ ebp - 0x9e88 ]
push eax
push edi
mov ecx esi
call sub_403d6f
test al al
jne r-xdata
lea ecx [ ebp - 0x9e88 ]
call sub_403480
lea eax [ esi + 0x528 ]
add [ eax ] edi
adc [ eax + 0x4 ] ebx
mov eax [ ebp - 0x14a0 ]
add edi eax
mov eax [ ebp - 0x149c ]
adc ebx eax
jmp r-xdata
xor al al
jmp r-xdata
test [ ebp - 0x53c0 ] 0x10
je r-xdata
push eax
push 0x400
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_408034
lea ecx [ ebp - 0x20a0 ]
call sub_40387e
push 0x0
lea eax [ ebp - 0x20a0 ]
push eax
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_406651
test al al
je r-xdata
sub_404db0
push ebp
mov ebp esp
mov eax 0x15a4
call sub_401200
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x1e5e ] 0x0
mov al [ ebx + 0x36d1 ]
push edi
lea ecx [ ebp - 0x15a4 ]
mov [ esi + 0x4ec ] al
call sub_40387e
mov edi 0x400
lea eax [ esi + 0x95c ]
push edi
lea ecx [ esi + 0x55c ]
push eax
mov [ ebp + 0x8 ] eax
push ecx
jmp r-xdata
mov ecx ebx
call sub_402aad
test al al
jne r-xdata
push 0x0
lea eax [ ebp - 0x15a4 ]
push eax
push [ ebp + 0x8 ]
lea eax [ esi + 0x55c ]
push eax
call sub_406651
test al al
je r-xdata
mov ecx [ ebx + 0x4f10 ]
call sub_40edbd
jmp r-xdata
push edi
push [ ebp + 0x8 ]
lea eax [ esi + 0x55c ]
push eax
mov ecx [ ebp - 0x9a4 ]
lea eax [ esi + 0x528 ]
add [ eax ] ecx
mov ecx [ ebp - 0x9a0 ]
adc [ eax + 0x4 ] ecx
push edi
push [ ebp + 0x8 ]
lea eax [ esi + 0x55c ]
push eax
mov ecx ebx
call sub_402aad
test al al
jne r-xdata
lea eax [ ebx + 0x281c ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_40b147
push ebx
mov ecx esi
call sub_404c21
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebx + 0x281c ]
push eax
call sub_40b147
cmp [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ esi + 0x54c ] 0x0
jne r-xdata
push 0x0
lea eax [ ebp - 0x15a4 ]
push eax
push [ ebp + 0x8 ]
lea eax [ esi + 0x55c ]
push eax
call sub_406651
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebx + 0x36d1 ] 0x49
je r-xdata
mov ecx [ ebp - 0x9a4 ]
lea eax [ esi + 0x520 ]
add [ eax ] ecx
mov ecx [ ebp - 0x9a0 ]
adc [ eax + 0x4 ] ecx
cmp [ esi + 0x1e5e ] al
jne r-xdata
push 0xa
mov ecx rw-data
call sub_40341b
push 0x343
call sub_40a407
push eax
push [ ebp + 0x8 ]
call sub_40c020
pop ecx
pop ecx
sub_404f14
push ebp
mov ebp esp
sub esp 0xc00
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx 0x3f6
test edi edi
je r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
call sub_40ae97
cmp eax ebx
ja r-xdata
and [ ebp + 0x8 ] 0x0
test edi edi
je r-xdata
push esi
call sub_40b11d
cmp eax ebx
ja r-xdata
xor al al
and [ ebp + 0xc ] 0x0
test esi esi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
xor eax eax
xor ebx ebx
mov [ ebp - 0x400 ] 0x0
mov [ ebp - 0xc00 ] ax
inc ebx
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_407e41
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
push esi
call sub_407e5d
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
push edi
call sub_40ae97
add eax edi
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_405d8d
test al al
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
push ebx
push edi
sub eax edi
push eax
lea eax [ ebp - 0x400 ]
push r--data
push eax
call sub_40b394
add esp 0x18
push esi
call sub_40b11d
lea eax [ esi + eax * 2 ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
cmp ebx 0xf4240
jge r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
push ebx
sub eax esi
push esi
sar eax 0x1
push eax
push r--data
lea eax [ ebp - 0xc00 ]
push 0x400
push eax
call sub_40b3bb
add esp 0x1c
test esi esi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
inc ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0x400 ]
push eax
push edi
call sub_40af8a
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0xc00 ]
push eax
push esi
call sub_40b147
sub_405062
push ebp
mov ebp esp
mov eax 0x30c0
call sub_401200
push ebx
push esi
push edi
lea ecx [ ebp - 0x30c0 ]
call sub_40387e
xor edi edi
push edi
lea eax [ ebp - 0x30c0 ]
push eax
push [ ebp + 0x8 ]
push edi
call sub_406651
test al al
je r-xdata
xor al al
cmp [ ebp - 0x2440 ] di
je r-xdata
lea eax [ ebp - 0x2440 ]
push eax
lea eax [ ebp - 0x2cc0 ]
push eax
call sub_407bcb
push eax
call sub_40f568
test eax eax
je r-xdata
lea eax [ ebp - 0x2440 ]
push eax
push [ ebp + 0x8 ]
call sub_407bcb
push eax
call sub_40f568
test eax eax
jne r-xdata
mov [ ebp - 0x800 ] ax
xor ebx ebx
mov esi 0x400
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_40ebed
lea eax [ ebp - 0x2cc0 ]
push eax
call sub_407bcb
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_407bcb
push eax
call sub_40b147
mov esi [ MoveFileW@IAT ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call esi
test eax eax
je r-xdata
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x800 ]
push eax
call sub_40ebed
push ebx
push r--data
push esi
lea eax [ ebp - 0x800 ]
push eax
call sub_407bcb
push eax
call sub_40b3bb
add esp 0x10
lea eax [ ebp - 0x800 ]
push eax
push edi
call sub_405d8d
test al al
je r-xdata
lea ecx [ ebp - 0x1c20 ]
call sub_405473
push [ ebp + 0x8 ]
xor bl bl
push edi
call sub_405d8d
test al al
jne r-xdata
add ebx 0x7b
cmp ebx 0x2710
jl r-xdata
xor eax eax
mov [ ebp - 0x800 ] ax
lea eax [ ebp - 0x1000 ]
push eax
lea eax [ ebp - 0x800 ]
push eax
call esi
test bl bl
je r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c20 ]
push edi
call sub_4057d6
mov bl al
cmp [ ebp - 0x800 ] di
jne r-xdata
cmp [ ebp - 0x800 ] di
je r-xdata
lea ecx [ ebp - 0x1c20 ]
call sub_405658
mov al 0x1
jmp r-xdata
lea ecx [ ebp - 0x1c20 ]
call sub_4054de
lea ecx [ ebp - 0x1c20 ]
call sub_405563
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_405210
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
sub esp 0xc04
test eax eax
je r-xdata
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x10 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
call sub_405d8d
xor ebx ebx
inc ebx
jmp r-xdata
mov [ eax ] 0x0
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1 ] 0x0
cmp eax 0x2
je r-xdata
push 0x400
lea eax [ ebp - 0xc04 ]
push eax
push esi
push edi
mov [ ebp - 0x1 ] bl
call sub_407ac7
lea eax [ ebp - 0xc04 ]
push eax
call sub_405062
test al al
je r-xdata
push esi
push edi
call sub_4061e9
push ebx
push esi
push edi
call sub_40606e
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push ebx
push esi
push edi
call sub_4057d6
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
cmp eax 0x3
jne r-xdata
test edi edi
je r-xdata
push esi
push edi
call sub_405e73
push ebx
push esi
push edi
call sub_4057d6
jmp r-xdata
mov al bl
jmp r-xdata
xor al al
jmp r-xdata
mov [ eax ] bl
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x2d70 ] 0x0
jne r-xdata
push esi
push edi
call sub_404f14
test al al
jne r-xdata
test esi esi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x24
cmp eax ebx
je r-xdata
push esi
push edi
call sub_405d8d
and [ ebp + 0x18 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x1000000
push edi
lea eax [ ebp - 0xc04 ]
push eax
call sub_40f330
test eax eax
je r-xdata
lea eax [ ebp - 0xc04 ]
push eax
push esi
xor eax eax
mov [ ebp - 0xc04 ] ax
push edi
lea eax [ ebp - 0x404 ]
push eax
call sub_40af8a
push esi
call sub_40eade
push eax
lea eax [ ebp - 0xc04 ]
push eax
call sub_40b147
xor eax eax
cmp [ ebp + 0xc ] eax
sete al
push eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc04 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_40c9e8
movsx eax al
push eax
push [ rw-data ]
call sub_40aec0
mov ecx ebx
sub ecx [ rw-data ]
add eax ecx
cmp eax ebx
je r-xdata
cmp eax 0x4
jne r-xdata
push 0x2
pop ecx
cmp eax ecx
je r-xdata
cmp eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2d28 ] ebx
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2d28 ] ecx
jmp r-xdata
mov [ eax ] bl
cmp eax 0x6
jne r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_407b74
lea ecx [ ebp - 0x404 ]
cmp eax ecx
mov eax ecx
push eax
push edi
jne r-xdata
push 0xff
mov ecx rw-data
call j_sub_40344e
call sub_40af8a
test esi esi
je r-xdata
call sub_407b74
push eax
lea eax [ ebp - 0xc04 ]
push eax
call sub_407bcb
lea ecx [ ebp - 0xc04 ]
cmp eax ecx
mov eax ecx
push eax
push esi
jne r-xdata
call sub_40b147
jmp r-xdata
call sub_407bcb
push eax
jmp r-xdata
sub_405473
mov eax ecx
or [ eax + 0x4 ] 0xffffffff
xor ecx ecx
xor edx edx
mov [ eax ] r--data
mov [ eax + 0x17 ] cl
mov [ eax + 0x418 ] dx
mov [ eax + 0x12 ] cl
mov [ eax + 0x8 ] cl
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x11 ] cl
mov [ eax + 0xc18 ] ecx
mov [ eax + 0x16 ] cl
mov [ eax + 0x13 ] 0x1
mov [ eax + 0xc1c ] ecx
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] cl
retn
sub_4054de
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
mov bl 0x1
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
inc [ esi + 0xc1c ]
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
test bl bl
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov ebx eax
dec ebx
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ esi + 0x14 ] bl
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
mov ecx rw-data
call sub_4034a8
and [ eax * 4 + rw-data ] 0x0
inc eax
cmp eax 0x100
jb r-xdata
cmp [ eax * 4 + rw-data ] esi
je r-xdata
jmp r-xdata
sub_405563
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x13 ] 0x0
je r-xdata
call sub_4054de
lea eax [ esi + 0x418 ]
push eax
add esi 0x17
push esi
call sub_405e73
pop esi
retn
sub_405593
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
or edx 0xffffffff
xor ebx ebx
cmp [ esi + 0x4 ] edx
jne r-xdata
push edi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push ebx
push [ esi + 0x4 ]
mov [ ebp - 0x4 ] ebx
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ esi + 0x14 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x1
cdq
push ebx
push edx
push eax
call sub_401030
xor ecx ecx
add eax edi
adc edx ecx
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax edx
jmp r-xdata
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
mov ecx rw-data
call sub_403588
cmp [ esi + 0x14 ] bl
je r-xdata
pop esi
pop ebx
leave
retn
or edx 0xffffffff
mov eax edx
jmp r-xdata
lea eax [ esi + 0x418 ]
push eax
add esi 0x17
push esi
mov ecx rw-data
call sub_403588
pop edi
sub_405635
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ GetFileType@IAT ]
cmp eax 0x2
je r-xdata
xor al al
retn
xor eax eax
inc eax
retn
cmp eax 0x3
je r-xdata
xor eax eax
retn
sub_40567b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ esi + 0xc18 ] ebx
cmp [ esi + 0x16 ] bl
je r-xdata
mov [ ebp - 0x4 ] 0x80000000
cmp [ ebp + 0x14 ] bl
je r-xdata
mov [ ebp + 0x10 ] 0x1
mov [ ebp + 0x14 ] 0x1
cmp [ ebp + 0x10 ] bl
je r-xdata
mov [ ebp - 0x4 ] 0xc0000000
xor eax eax
cmp [ esi + 0x15 ] bl
setne al
dec eax
and eax 0x8000000
mov edi eax
call sub_407428
test eax eax
je r-xdata
mov [ ebp + 0x14 ] 0x3
push ebx
push edi
push 0x3
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp edi 0xffffffff
setne [ ebp + 0x13 ]
mov [ esi + 0x12 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
cmp [ ebp + 0x13 ] bl
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
cmp [ eax ] bx
je r-xdata
mov al [ ebp + 0x13 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ esi + 0x4 ] edi
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov [ esi + 0xc18 ] 0x1
push ebx
push edi
push 0x3
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push eax
call [ CreateFileW@IAT ]
jmp r-xdata
xor eax eax
mov [ esi + 0x418 ] ax
push edi
call sub_40b11d
lea eax [ eax + eax + 0x2 ]
push eax
push edi
lea eax [ esi + 0x418 ]
push eax
call sub_40ae4c
jmp r-xdata
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x1000000
lea eax [ esi + 0x17 ]
push eax
push edi
call sub_40f330
push [ ebp + 0x8 ]
call sub_40ae97
inc eax
push eax
push [ ebp + 0x8 ]
lea eax [ esi + 0x17 ]
push eax
call sub_40ae4c
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_4054b7
sub_4057a6
push 0x0
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40567b
test al al
je r-xdata
push [ esp + 0x8 ]
mov ecx rw-data
push [ esp + 0x8 ]
call sub_4037aa
xor al al
mov al 0x1
jmp r-xdata
retn 0x8
sub_4057d6
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ ebp + 0x10 ] bl
jne r-xdata
mov [ ebp + 0x10 ] 0x1
mov [ ebp + 0x10 ] ebx
cmp [ esi + 0x16 ] bl
je r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0x10 ]
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp edi ebx
je r-xdata
call sub_407428
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x418 ] ax
push edi
lea eax [ esi + 0x418 ]
push eax
call sub_40b147
jmp r-xdata
cmp [ edi ] bx
je r-xdata
push 0x1000000
push eax
push edi
call sub_40f330
push [ ebp + 0x8 ]
push eax
call sub_40af8a
jmp r-xdata
lea eax [ esi + 0x17 ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0x10 ]
push 0xc0000000
push edi
call [ CreateFileW@IAT ]
jmp r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_4054b7
xor eax eax
cmp [ esi + 0x4 ] 0xffffffff
pop edi
pop esi
setne al
pop ebx
pop ebp
retn 0xc
mov [ esi + 0x4 ] eax
mov [ esi + 0x12 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
cmp edi ebx
je r-xdata
sub_405897
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4057d6
test al al
je r-xdata
push esi
mov esi rw-data
push 0x9
mov ecx esi
call sub_40341b
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_4037be
xor al al
pop esi
mov al 0x1
jmp r-xdata
pop ebp
retn 0xc
sub_4058d3
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
cmp [ edi + 0xc ] 0x1
mov esi 0x4e20
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx edi
call sub_405635
test al al
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] esi
cmp [ edi + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x6d
jne r-xdata
push esi
push [ ebp + 0x8 ]
mov ecx edi
call sub_4058d3
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
xor eax eax
jmp r-xdata
sub_405952
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0xffffffff
je r-xdata
mov al 0x1
push esi
mov esi [ ebp + 0xc ]
test esi esi
jg r-xdata
push [ ebp + 0x10 ]
mov eax esi
sar eax 0x1f
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push [ edi + 0x4 ]
call [ SetFilePointer@IAT ]
pop esi
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
pop edi
leave
retn 0xc
call sub_405b52
call sub_405593
jmp r-xdata
add [ ebp + 0x8 ] eax
adc esi edx
and [ ebp + 0x10 ] 0x0
sub_4059c6
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx eax
je r-xdata
mov [ ebp + 0xb ] al
mov [ ebp + 0xb ] 0x1
cmp [ ecx ] eax
jne r-xdata
mov [ ebp + 0xf ] al
mov [ ebp + 0xf ] 0x1
cmp [ edi ] eax
jne r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp edi eax
je r-xdata
xor bl bl
cmp [ esi ] eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40f030
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_40f030
cmp [ ebp + 0xb ] al
je r-xdata
movzx eax [ ebp + 0xb ]
neg eax
sbb eax eax
lea ecx [ ebp - 0xc ]
and eax ecx
push eax
movzx eax bl
neg eax
sbb eax eax
lea ecx [ ebp - 0x14 ]
and eax ecx
push eax
movzx eax [ ebp + 0xf ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
and eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
call [ SetFileTime@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40f030
sub_405a73
push ebp
mov ebp esp
push ecx
inc [ rw-data ]
push esi
mov [ ebp - 0x1 ] 0x1
xor esi esi
add esi 0x4
cmp esi 0x400
jb r-xdata
mov [ eax + 0x14 ] 0x0
mov ecx [ esi + rw-data ]
cmp [ ecx + 0x12 ] 0x0
je r-xdata
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
dec [ rw-data ]
mov al [ ebp - 0x1 ]
pop esi
leave
retn
call sub_4054de
call sub_405563
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
and [ esi + rw-data ] 0x0
jmp r-xdata
test al al
je r-xdata
sub_405aee
push esi
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_405952
test al al
jne r-xdata
pop esi
retn 0xc
cmp [ esi + 0x14 ] al
je r-xdata
lea eax [ esi + 0x418 ]
push eax
add esi 0x17
push esi
mov ecx rw-data
call sub_403588
sub_405b24
push esi
push 0x0
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
call sub_405952
test al al
je r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_405622
push 0x0
push 0x0
push 0x0
mov ecx esi
call sub_405aee
sub_405b52
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
push edi
push esi
lea ecx [ ebp - 0x18 ]
call sub_40b594
push 0x2
push 0x0
push 0x0
mov ecx esi
call sub_405aee
mov ecx esi
call sub_405593
lea ecx [ ebp - 0x18 ]
mov esi eax
mov edi edx
call sub_40b5bb
mov edx edi
pop edi
mov eax esi
pop esi
leave
retn
sub_405b8d
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
leave
retn 0x8
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push ebx
mov ebx [ WriteFile@IAT ]
push edi
dec eax
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call ebx
dec eax
neg eax
sbb al al
inc al
cmp [ ebp + 0xc ] edi
jbe r-xdata
push 0xfffffff5
dec eax
jne r-xdata
pop edi
mov [ esi + 0x8 ] 0x1
pop ebx
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov eax 0x4000
cmp ecx eax
jae r-xdata
push 0xfffffff4
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
add eax edi
push eax
push [ esi + 0x4 ]
call ebx
dec eax
neg eax
sbb al al
inc al
je r-xdata
mov eax ecx
call [ GetStdHandle@IAT ]
mov [ esi + 0x4 ] eax
push 0x0
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
mov edi rw-data
push eax
mov ecx edi
call sub_4034fb
test al al
je r-xdata
add edi 0x4000
cmp edi [ ebp + 0xc ]
jb r-xdata
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
push 0x0
push 0x0
mov ecx edi
call sub_403785
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
jmp r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ esi + 0xc ] edi
je r-xdata
test eax eax
jbe r-xdata
test al al
jne r-xdata
push 0x0
mov ecx esi
call sub_405593
mov ecx [ ebp - 0x4 ]
xor edi edi
sub eax ecx
sbb edx edi
push edx
push eax
mov ecx esi
call sub_405aee
jmp r-xdata
sub_405ca2
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor ebx ebx
mov esi ecx
push edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
cmp [ esi + 0x11 ] bl
je r-xdata
mov edi rw-data
call sub_405593
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ esi + 0xc18 ] 0x2
cmp [ esi + 0x14 ] bl
je r-xdata
cmp [ esi + 0x11 ] bl
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov edi 0x200
lea eax [ esi + 0x418 ]
push eax
add esi 0x17
push esi
mov ecx edi
call sub_403764
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
mov ecx edi
call sub_403371
test al al
jne r-xdata
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_4058d3
cmp eax 0xffffffff
jne r-xdata
mov eax edi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_4058d3
mov [ ebp - 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] eax
add ebx edi
cmp ebx [ ebp + 0xc ]
jb r-xdata
mov eax edi
xor ecx ecx
mov eax ebx
add eax [ ebp - 0xc ]
push 0x0
adc ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx esi
call sub_405aee
mov eax [ ebp + 0xc ]
sub eax ebx
cmp eax edi
jb r-xdata
jmp r-xdata
sub_405d8d
call sub_407428
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push eax
call [ GetFileAttributesW@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
jmp r-xdata
retn 0x8
sub_405e02
call sub_407428
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ GetFileAttributesW@IAT ]
jmp r-xdata
retn 0x8
sub_405e2f
push ebp
mov ebp esp
call sub_407428
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor al al
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
cmp [ eax ] 0x0
je r-xdata
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push eax
call [ SetFileAttributesW@IAT ]
jmp r-xdata
test eax eax
setne al
jmp r-xdata
sub_405e73
call sub_407428
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ DeleteFileW@IAT ]
jmp r-xdata
test eax eax
setne al
retn 0x8
sub_405ea5
push ebp
mov ebp esp
push ebx
push esi
call sub_407428
mov esi [ ebp + 0xc ]
xor ebx ebx
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp esi ebx
je r-xdata
push 0x2
pop eax
push ebx
push [ ebp + 0x8 ]
call [ CreateDirectoryA@IAT ]
cmp [ esi ] bx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
cmp [ ebp + 0x10 ] bl
je r-xdata
push ebx
push esi
call [ CreateDirectoryW@IAT ]
jmp r-xdata
cmp eax 0x3
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x8 ]
call sub_405e2f
cmp eax ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
sub_405f11
push ebp
mov ebp esp
sub esp 0x400
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor al al
cmp [ edi ] 0x0
je r-xdata
push ebx
push esi
mov [ ebp + 0xb ] 0x1
mov ebx edi
cmp [ ebp + 0xc ] 0x0
pop esi
pop ebx
jne r-xdata
cmp [ ebx ] 0x5c
jne r-xdata
mov al [ ebp + 0xb ]
jmp r-xdata
push edi
call sub_407c07
movsx eax [ eax ]
push eax
call sub_407884
test al al
jne r-xdata
push ebx
call sub_401be8
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
push esi
push edi
lea eax [ ebp - 0x400 ]
push eax
call sub_40afbe
push 0x0
push 0x1
push 0x0
lea eax [ ebp - 0x400 ]
push eax
mov [ ebp + esi - 0x400 ] 0x0
call sub_405ea5
test eax eax
je r-xdata
pop edi
leave
retn 0x8
push 0x0
push 0x1
push 0x0
push edi
call sub_405ea5
test eax eax
je r-xdata
mov esi ebx
sub esi edi
cmp esi 0x400
jge r-xdata
mov [ ebp + 0xb ] 0x0
mov [ ebp + 0xb ] 0x0
sub_405fc0
push ebp
mov ebp esp
sub esp 0x800
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor al al
cmp [ esi ] bx
je r-xdata
mov [ ebp + 0xb ] 0x1
push edi
cmp [ ebp + 0xc ] 0x0
pop edi
jne r-xdata
cmp [ ebx + esi ] 0x5c
jne r-xdata
mov al [ ebp + 0xb ]
jmp r-xdata
push esi
call sub_40782e
movzx eax [ eax ]
push eax
call sub_407884
test al al
jne r-xdata
inc ebx
inc ebx
cmp [ ebx + esi ] 0x0
jne r-xdata
push edi
push esi
lea eax [ ebp - 0x800 ]
push eax
call sub_40b177
xor eax eax
push eax
mov [ ebp + edi * 2 - 0x800 ] ax
push 0x1
lea eax [ ebp - 0x800 ]
push eax
push 0x0
call sub_405ea5
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push 0x0
push 0x1
push esi
push 0x0
call sub_405ea5
test eax eax
je r-xdata
mov edi ebx
sar edi 0x1
cmp edi 0x400
jge r-xdata
mov [ ebp + 0xb ] 0x0
mov [ ebp + 0xb ] 0x0
sub_40606e
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor al al
cmp [ eax ] 0x0
je r-xdata
push [ esp + 0xc ]
push eax
call sub_405fc0
jmp r-xdata
push [ esp + 0xc ]
push eax
call sub_405f11
jmp r-xdata
retn 0xc
sub_4060a6
push ebp
mov ebp esp
sub esp 0x820
call sub_407428
test eax eax
je r-xdata
leave
retn 0x14
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x2 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x3 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x1 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
je r-xdata
mov [ ebp + 0xf ] bl
jmp r-xdata
test al 0x1
je r-xdata
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_405e02
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push esi
push 0x400
lea eax [ ebp - 0x820 ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_407ac7
push ebx
push 0x2000000
push 0x3
push ebx
push 0x3
push 0x40000000
lea eax [ ebp - 0x820 ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
mov [ ebp + 0xf ] 0x1
call sub_405e2f
pop esi
pop edi
pop ebx
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40f030
cmp [ ebp - 0x1 ] bl
je r-xdata
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40f030
movzx eax [ ebp - 0x2 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x20 ]
and eax ecx
push eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x10 ]
and eax ecx
push eax
movzx eax [ ebp - 0x3 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x18 ]
and eax ecx
push eax
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0xf ] bl
je r-xdata
mov ecx [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40f030
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x8 ]
call sub_405e2f
sub_40622b
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push edi
lea eax [ esi + 0x400 ]
push eax
call sub_40b147
cmp [ esi ] 0x0
jne r-xdata
mov [ esi + 0xc00 ] 0x1
push 0x1000000
push esi
push edi
call sub_40f330
sub_406261
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0xa50
push ebx
push esi
push edi
call sub_407428
mov edi 0x1000000
test eax eax
je r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x5e8 ]
push eax
push [ ebp + 0x78 ]
call sub_40f330
cmp [ eax ] 0x0
je r-xdata
push edi
lea eax [ ebp - 0x9e8 ]
push eax
push [ ebp + 0x74 ]
call sub_40f362
cmp [ eax ] 0x0
je r-xdata
push [ ebp + 0x70 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x5e8 ]
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp + 0x70 ] eax
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x5e8 ]
push eax
call sub_40af8a
jmp r-xdata
push [ ebp + 0x70 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x9e8 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x70 ] eax
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x9e8 ]
push eax
call sub_40b147
jmp r-xdata
cmp [ ebp + 0x70 ] ebx
je r-xdata
mov [ ebp + 0x70 ] ebx
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x149c ] al
lea eax [ ebp - 0x5e8 ]
push eax
push esi
call sub_40af8a
lea eax [ ebp - 0xac ]
push eax
push esi
call sub_407b74
push eax
call sub_40af8a
push edi
lea eax [ esi + 0x400 ]
push eax
push esi
call sub_40f362
push 0x1
push 0x0
push 0x0
push [ ebp - 0xbc ]
call sub_401030
mov ecx [ ebp - 0xb8 ]
xor ebx ebx
add eax ecx
mov [ esi + 0xc00 ] eax
mov eax [ ebp - 0xd8 ]
mov [ esi + 0xc08 ] eax
push edi
lea eax [ esi + 0xc80 ]
push eax
lea eax [ ebp + 0x58 ]
adc edx ebx
push eax
mov [ esi + 0xc04 ] edx
call sub_40f362
mov eax [ ebp - 0xd4 ]
mov [ esi + 0x1480 ] eax
mov eax [ ebp - 0xd0 ]
mov [ esi + 0x1484 ] eax
mov eax [ ebp - 0xcc ]
mov [ esi + 0x1488 ] eax
mov eax [ ebp - 0xc8 ]
mov [ esi + 0x148c ] eax
mov eax [ ebp - 0xc4 ]
mov [ esi + 0x1490 ] eax
mov eax [ ebp - 0xc0 ]
mov [ esi + 0x1494 ] eax
lea eax [ ebp - 0xc4 ]
lea edi [ esi + 0xc14 ]
push eax
mov ecx edi
call sub_40f188
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ esi + 0xc38 ]
call sub_40f188
lea eax [ ebp - 0xcc ]
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0x7c ]
or ebx 0xffffffff
lea eax [ ebp - 0xd8 ]
push eax
cmp [ ebp + 0x70 ] ebx
jne r-xdata
cmp [ ebp + 0x70 ] ebx
je r-xdata
mov [ ebp + 0x70 ] ebx
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x149c ] al
lea eax [ ebp - 0x9e8 ]
push eax
lea ebx [ esi + 0x400 ]
push ebx
call sub_40b147
lea eax [ ebp - 0x1bc ]
push eax
push ebx
call sub_407bcb
push eax
call sub_40b147
push edi
push esi
push ebx
call sub_40f330
push 0x1
push 0x0
push 0x0
push [ ebp - 0x1cc ]
call sub_401030
mov ecx [ ebp - 0x1c8 ]
xor edi edi
add eax ecx
mov [ esi + 0xc00 ] eax
mov eax [ ebp - 0x1e8 ]
mov [ esi + 0xc08 ] eax
lea eax [ ebp + 0x4c ]
push eax
lea eax [ esi + 0xc80 ]
adc edx edi
push eax
mov [ esi + 0xc04 ] edx
call sub_40b147
mov eax [ ebp - 0x1e4 ]
mov [ esi + 0x1480 ] eax
mov eax [ ebp - 0x1e0 ]
mov [ esi + 0x1484 ] eax
mov eax [ ebp - 0x1dc ]
mov [ esi + 0x1488 ] eax
mov eax [ ebp - 0x1d8 ]
mov [ esi + 0x148c ] eax
mov eax [ ebp - 0x1d4 ]
mov [ esi + 0x1490 ] eax
mov eax [ ebp - 0x1d0 ]
mov [ esi + 0x1494 ] eax
lea eax [ ebp - 0x1d4 ]
lea edi [ esi + 0xc14 ]
push eax
mov ecx edi
call sub_40f188
lea eax [ ebp - 0x1e4 ]
push eax
lea ecx [ esi + 0xc38 ]
call sub_40f188
lea eax [ ebp - 0x1dc ]
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0x7c ]
or ebx 0xffffffff
lea eax [ ebp - 0x1e8 ]
push eax
cmp [ ebp + 0x70 ] ebx
jne r-xdata
and [ esi + 0x1498 ] 0x0
mov eax [ ebp + 0x70 ]
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
xor eax eax
cmp eax 0x3
jmp r-xdata
push eax
lea ecx [ esi + 0xc5c ]
call sub_40f188
mov ecx edi
call sub_40f0e0
mov [ esi + 0xc0c ] eax
cmp eax 0x3
je r-xdata
je r-xdata
cmp eax 0x12
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0x149c ] al
jmp r-xdata
sub_4065b9
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
xor ebx ebx
jmp r-xdata
mov [ edi + 0x149c ] bl
cmp [ esi ] bl
jne r-xdata
push edi
lea eax [ esi + 0x400 ]
push eax
push esi
cmp [ esi + 0xc00 ] bl
je r-xdata
xor al al
jmp r-xdata
push [ esi + 0xc04 ]
call sub_406261
push 0xffffffff
call sub_406261
mov [ esi + 0xc04 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push [ edi + 0xc08 ]
mov [ edi + 0x1498 ] ebx
call sub_405de5
mov [ edi + 0xc10 ] al
push edi
mov [ esi + 0xc00 ] bl
call sub_407b74
mov ebp eax
push r--data
push ebp
call sub_40affc
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push r--data
push ebp
call sub_40affc
test eax eax
jne r-xdata
mov al 0x1
sub_406651
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov [ esi + 0x149c ] 0x0
call sub_407847
test al al
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xffffffff
call sub_406261
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push eax
call [ FindClose@IAT ]
push [ esi + 0xc08 ]
and [ esi + 0x1498 ] 0x0
call sub_405de5
mov [ esi + 0xc10 ] al
mov al 0x1
pop esi
pop ebp
retn 0x10
sub_4066ab
push esi
push edi
mov edi 0x8002
push edi
mov esi ecx
call sub_40b413
pop ecx
push edi
push 0x0
push eax
mov [ esi + 0x8 ] eax
call sub_40ad9c
pop edi
mov eax esi
pop esi
retn
sub_4066d6
mov edx ecx
mov eax [ edx + 0x8 ]
mov ecx [ edx ]
add ecx eax
movzx eax [ ecx ]
push esi
movzx esi [ ecx + 0x1 ]
movzx ecx [ ecx + 0x2 ]
shl eax 0x8
or eax esi
shl eax 0x8
or eax ecx
push 0x8
pop ecx
sub ecx [ edx + 0x4 ]
pop esi
shr eax cl
and eax 0xffff
retn
sub_406720
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
sub_40676e
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x8
sub_4067b1
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi - 0x4 ]
xor ebx ebx
push edi
test eax eax
je r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x10 ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0xc ] ecx
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x14
mov [ eax + 0x4 ] ebx
mov ecx [ esi + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x18
sub_406864
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov edi ecx
call [ CLSIDFromString@IAT ]
lea esi [ edi + 0x18 ]
push esi
push r--data
push 0x5
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call [ CoCreateInstance@IAT ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi [ esi ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push esi
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4068ea
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
pop esi
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40696a
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp [ ebp + 0x8 ] edi
je r-xdata
push edi
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffd
push eax
call [ ecx + 0x2c ]
push ebx
lea ebx [ esi + 0x1c ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffb
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xffffffff
push eax
call [ ecx + 0x2c ]
pop ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4069da
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ esi + 0x1c ]
push edx
push [ esi + 0x14 ]
push 0x0
push esi
push 0x0
push 0xfffffffc
push eax
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_406a26
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
mov eax [ esi + 0x18 ]
pop esi
retn
xor eax eax
pop esi
retn
sub_406a41
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x20 ] cl
mov [ eax + 0x21 ] cl
mov [ eax + 0x24 ] ecx
retn
sub_406a63
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0xc ] 0x0
pop esi
retn
call sub_4068ea
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_406aa9
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ GetTickCount@IAT ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
call ebx
sub eax [ ebp - 0xc ]
cmp eax 0x2710
ja r-xdata
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call [ eax + 0x48 ]
mov esi eax
cmp esi edi
jl r-xdata
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x28 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp esi edi
pop edi
pop esi
setge al
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call [ eax + 0x48 ]
test eax eax
jl r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x28 ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov esi eax
sub_406b80
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x3c
jne r-xdata
xor al al
inc eax
inc eax
cmp [ eax + 0x2 ] 0x2f
jne r-xdata
push 0x2
pop ecx
mov al 0x1
jmp r-xdata
inc ecx
cmp ecx 0x14
jb r-xdata
retn 0x4
cmp [ eax + ecx * 2 ] 0x3e
je r-xdata
sub_406bb6
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40b11d
imul eax eax 0xc
add eax 0x200
push eax
call sub_40acff
mov edi eax
mov [ ebp - 0x8 ] edi
test edi edi
jne r-xdata
push ebx
push r--data
push edi
call sub_40b147
push edi
call sub_40b11d
mov ebx eax
mov eax esi
cmp [ eax ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
push [ ebp + 0x8 ]
xor eax eax
mov [ edi + ebx * 2 ] ax
call sub_40ad18
mov eax edi
pop ebx
push 0x4
push r--data
push esi
call sub_40f625
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
cmp esi [ ebp + 0x8 ]
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ edi ] 0xd
jne r-xdata
mov ax [ esi ]
mov [ edi + ebx * 2 ] ax
inc ebx
cmp [ esi ] 0x20
jne r-xdata
mov edi [ ebp - 0x8 ]
inc esi
inc esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ebx * 2 ]
mov [ ebp - 0x4 ] eax
cmp [ esi - 0x2 ] 0x20
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
jne r-xdata
push r--data
push [ ebp - 0x4 ]
call sub_40b147
add [ ebp - 0x4 ] 0x8
mov esi edi
lea edi [ esi + 0x4 ]
add ebx 0x4
cmp [ edi ] 0xd
je r-xdata
push r--data
lea eax [ edi + ebx * 2 ]
push eax
call sub_40b147
add ebx 0x6
jmp r-xdata
cmp [ esi + 0x6 ] 0xa
jne r-xdata
sub_406ca4
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
call esi
mov [ ebp - 0x4 ] eax
call esi
sub eax [ ebp - 0x4 ]
xor ebx ebx
mov edi 0x2710
jmp r-xdata
cmp eax edi
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push eax
call [ ecx + 0xe0 ]
cmp [ ebp - 0xc ] 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
push 0x3
pop eax
push ebx
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] ax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push 0x2
push 0x3f
mov [ ebp - 0x14 ] 0x96
mov ecx [ eax ]
push eax
call [ ecx + 0xd8 ]
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
call esi
sub eax [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call [ DispatchMessageW@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ GetMessageW@IAT ]
sub_406d85
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
push r--data
push edi
call sub_406792
test eax eax
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
push r--data
push edi
call sub_406792
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
pop edi
push r--data
push edi
call sub_406792
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push edi
call sub_406792
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
push r--data
push edi
call sub_406792
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
and [ esi ] 0x0
mov eax 0x80004002
lea ecx [ eax + 0xc ]
jmp r-xdata
sub_406e30
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_406720
push esi
call sub_40b406
pop ecx
xor eax eax
sub_406e51
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0xc ] 0x0
mov [ ebp - 0xc ] ecx
je r-xdata
leave
retn 0x4
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_406b80
push esi
mov [ ebp + 0xb ] al
call sub_40b11d
lea eax [ eax + eax + 0x200 ]
push eax
call sub_40acff
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
push ebx
mov ebx r--data
push ebx
push edi
call sub_40b147
push r--data
push edi
call sub_40b1b9
push r--data
push edi
call sub_40b1b9
cmp [ esi ] 0x20
mov [ ebp - 0x4 ] esi
jne r-xdata
push 0x6
push ebx
push [ ebp - 0x4 ]
call sub_40f625
mov ebx eax
neg ebx
sbb bl bl
inc bl
je r-xdata
add [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x20
je r-xdata
push esi
push edi
call sub_40b1b9
test bl bl
jne r-xdata
mov esi [ ebp - 0x4 ]
add esi 0xc
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push r--data
push edi
call sub_40b1b9
push edi
call sub_40b11d
mov esi eax
imul esi esi 0x6
add esi 0x9
push esi
push 0x40
call [ GlobalAlloc@IAT ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov ecx [ ebp - 0xc ]
push edi
call sub_406bb6
mov edi eax
push edi
call sub_40ad18
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
call [ CreateStreamOnHGlobal@IAT ]
pop ebx
test eax eax
jl r-xdata
push eax
push eax
add esi 0xfffffffd
push esi
lea ecx [ ebx + 0x3 ]
push ecx
push 0xffffffff
push edi
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push [ eax + 0xc ]
call sub_406aa9
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx ] 0xef
mov [ ebx + 0x1 ] 0xbb
mov [ ebx + 0x2 ] 0xbf
jmp r-xdata
sub_406f8f
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_40b11d
lea eax [ eax + eax + 0x2 ]
push eax
call sub_40acff
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0x4
push esi
mov ecx edi
call sub_406b80
mov edi [ ebp - 0x4 ]
mov [ ebp + 0xb ] al
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax [ ebp - 0x4 ]
push ebx
jmp r-xdata
test ax ax
jne r-xdata
cmp ax 0x3c
je r-xdata
push 0x4
push r--data
push esi
call sub_40f625
mov ebx eax
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0xd
pop eax
mov [ edi ] ax
push 0x2
pop eax
add edi eax
push 0xa
pop ecx
mov [ edi ] cx
add edi eax
test bl bl
je r-xdata
push 0x4
push r--data
push esi
call sub_40f625
test eax eax
jne r-xdata
xor bl bl
cmp [ ebp + 0xb ] bl
je r-xdata
cmp ax 0xd
je r-xdata
push 0x7
push r--data
xor eax eax
push esi
mov [ edi ] ax
call sub_40f625
test eax eax
jne r-xdata
push 0xd
pop ecx
mov [ edi ] cx
push 0xa
add edi eax
pop ecx
mov [ edi ] cx
add edi eax
movzx eax [ esi ]
test ax ax
je r-xdata
cmp ax 0x26
jne r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
cmp ax 0xa
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp [ esi ] ax
je r-xdata
cmp ax 0x20
jne r-xdata
xor edx edx
push 0x20
pop eax
jmp r-xdata
cmp [ edi - 0x2 ] 0x20
je r-xdata
cmp ax 0x3e
je r-xdata
cmp [ esi ] 0x3e
jne r-xdata
pop ebx
push 0x8
push r--data
push esi
call sub_40f625
inc esi
inc esi
test eax eax
je r-xdata
mov [ edi ] ax
inc edi
inc edi
cmp edi [ ebp - 0x4 ]
je r-xdata
test bl bl
jne r-xdata
cmp cx 0x3b
jne r-xdata
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
add esi 0xe
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ edi - 0x2 ] ax
je r-xdata
movzx eax [ esi ]
inc edx
inc edx
cmp edx 0x28
jb r-xdata
lea esi [ eax + 0x2 ]
mov bl 0x1
jmp r-xdata
lea eax [ edx + esi ]
movzx ecx [ eax ]
test cx cx
je r-xdata
sub_40710f
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
cmp [ esi + 0x21 ] 0x0
mov [ esi + 0x20 ] 0x1
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x8 ]
push 0x1
call sub_4069da
push [ esi + 0x10 ]
call sub_406e51
sub_407178
push esi
mov esi ecx
xor eax eax
push 0x10
push eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x1c ]
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] 0x1
call sub_40ad9c
mov eax esi
pop esi
retn
sub_4071b5
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
push 0x2c
mov [ esi + 0x4 ] edi
call sub_40b413
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_407178
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov [ eax + 0x14 ] edi
mov ecx [ esi + 0x8 ]
push r--data
call sub_406864
mov ecx [ esi + 0x8 ]
push 0x1
call sub_40696a
mov ecx [ esi + 0x8 ]
push 0x1
call sub_4069da
mov ecx [ esi + 0x8 ]
call sub_406a26
mov edi eax
cmp edi ebx
je r-xdata
mov [ esi + 0x8 ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
push ebp
lea ecx [ esi + 0xc ]
push ecx
push r--data
push edi
call [ eax ]
mov ebp eax
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
cmp ebp ebx
pop ebp
jl r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push ebx
push ebx
mov [ esi + 0x20 ] bl
push ebx
cmp ecx ebx
je r-xdata
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x2c ]
mov ecx esi
call sub_40710f
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x2c ]
jmp r-xdata
sub_407265
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
push esi
mov ecx eax
call sub_4071b5
sub eax 0x80
jne r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
push [ edi ]
push 0xffffffeb
push esi
call [ SetWindowLongW@IAT ]
jmp r-xdata
sub_4072af
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0x7f00
push edi
mov ebx ecx
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x828
mov [ ebp - 0x28 ] sub_407265
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edi
call [ LoadCursorW@IAT ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] edi
call [ RegisterClassExW@IAT ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn 0x4
sub_407316
push ebp
mov ebp esp
mov al [ ebp + 0x18 ]
sub esp 0x10
push ebx
push esi
push edi
push 0x0
push [ ebp + 0xc ]
mov esi ecx
mov [ esi + 0x21 ] al
call [ ShowWindow@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_4072af
mov eax [ ebp + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ GetWindowRect@IAT ]
mov ebx [ GetParent@IAT ]
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call ebx
push eax
push 0x0
call [ MapWindowPoints@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0x8 ]
push esi
push [ esi ]
sub edi eax
push 0x0
push [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
dec edi
mov [ ebp + 0x18 ] ecx
dec edi
call ebx
push eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push eax
push edi
push [ ebp - 0xc ]
xor edi edi
push [ ebp + 0x18 ]
push 0x40000000
push edi
push r--data
push edi
call [ CreateWindowExW@IAT ]
mov [ esi + 0x4 ] eax
cmp [ esi + 0xc ] edi
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
cmp eax edi
je r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ esi + 0x1c ] 0x64
jbe r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp [ esi + 0x14 ] edi
jne r-xdata
mov ecx esi
call sub_406ca4
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
mov ecx esi
call sub_406f8f
mov esi eax
cmp esi edi
je r-xdata
push 0x5
push [ ebp + 0xc ]
call [ ShowWindow@IAT ]
push esi
push [ ebp + 0xc ]
call [ SetWindowTextW@IAT ]
push esi
call sub_40ad18
jmp r-xdata
sub_407428
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x114
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x114 ] 0x114
call [ GetVersionExW@IAT ]
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x110 ]
mov edx [ ebp - 0x10c ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
jmp r-xdata
mov eax 0x501
leave
retn
shl eax 0x8
add eax [ rw-data ]
leave
retn
cmp ecx 0x2
jne r-xdata
sub_4074eb
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
test bl bl
sete al
cmp al 0x2a
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp al 0x3f
je r-xdata
cmp al 0x2e
jne r-xdata
mov al 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp al bl
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea ebx [ edi + 0x1 ]
cmp [ ebx ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor al al
jmp r-xdata
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp al 0x2e
jne r-xdata
push [ ebp + 0x10 ]
push esi
push edi
call sub_4074eb
inc esi
test al al
jne r-xdata
jmp r-xdata
push 0x2e
push esi
call sub_40aec0
cmp [ ebx ] 0x0
mov esi eax
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
push eax
call sub_407494
push [ ebp + 0x10 ]
mov bl al
movzx eax [ edi ]
push eax
call sub_407494
inc edi
test al al
je r-xdata
test bl bl
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp bl 0x5c
je r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
push r--data
push edi
mov [ ebp + 0xc ] esi
call sub_40af29
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp bl al
je r-xdata
push 0x2e
inc esi
push esi
call sub_40aec0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push esi
push ebx
call sub_4074aa
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_4075ed
push ebp
mov ebp esp
sub esp 0x800
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
shr eax 0x1f
and al 0x1
and edi 0xffff
mov [ ebp + 0x10 ] al
je r-xdata
push ebx
call sub_407b74
push [ ebp + 0xc ]
mov ebx eax
call sub_407b74
push 0x6
mov esi eax
push esi
push r--data
call sub_40eb2e
test eax eax
je r-xdata
push ebx
call sub_40ae97
mov esi eax
cmp edi 0x2
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x10 ]
push esi
cmp edi 0x2
jne r-xdata
cmp edi 0x1
jne r-xdata
cmp edi 0x3
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push ebx
call sub_4074eb
push ebx
call sub_4074aa
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov esi 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
push ebx
call sub_407e9d
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_407e9d
cmp edi 0x2
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_4074c9
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_4074aa
test eax eax
jne r-xdata
cmp edi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
mov al [ esi + eax ]
cmp al 0x5c
je r-xdata
cmp edi 0x4
je r-xdata
mov al 0x1
jmp r-xdata
cmp al 0x2f
je r-xdata
push 0x0
lea eax [ ebp - 0x400 ]
push eax
call sub_407847
test al al
je r-xdata
cmp edi 0x5
jne r-xdata
test al al
jne r-xdata
cmp edi 0x4
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x400 ] 0x0
je r-xdata
push 0x0
push ebx
call sub_407847
test al al
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push eax
call sub_40ae97
push eax
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_4074c9
push [ ebp + 0x10 ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_4074aa
jmp r-xdata
test eax eax
jne r-xdata
sub_407772
push esi
push edi
push 0x36c8
xor edi edi
mov esi ecx
push edi
push esi
call sub_40ad9c
mov eax 0x7fffffff
mov [ esi + 0x2d28 ] edi
mov [ esi + 0x2d20 ] edi
mov [ esi + 0x2d78 ] edi
mov [ esi + 0x2d6c ] edi
pop edi
mov [ esi + 0xc ] __pe_WINRAR_export_address_table
mov [ esi + 0x2d2c ] 0x3
mov [ esi + 0x2d8c ] 0x1
mov [ esi + 0x32b4 ] 0x4
mov [ esi + 0x2dd8 ] eax
mov [ esi + 0x2ddc ] eax
mov [ esi + 0x2de0 ] eax
mov [ esi + 0x2de4 ] eax
pop esi
retn
sub_4077fa
push esi
mov esi ecx
xor ecx ecx
lea eax [ esi + 0x2d60 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0x2d90 ]
call sub_40f182
lea ecx [ esi + 0x2db4 ]
call sub_40f182
mov ecx esi
call sub_407772
mov eax esi
pop esi
retn
sub_407847
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
push r--data
push [ esp + 0x8 ]
call sub_40af29
xor eax eax
jmp r-xdata
push r--data
push eax
call sub_40b34f
jmp r-xdata
retn 0x8
neg eax
sbb eax eax
neg eax
sub_4078a9
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40b11d
test eax eax
jbe r-xdata
pop esi
retn 0x4
cmp [ esi + eax * 2 - 0x2 ] 0x5c
je r-xdata
push r--data
push esi
call sub_40b1b9
sub_4078cf
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
je r-xdata
cmp [ edi ] 0x0
mov eax edi
je r-xdata
cmp esi edi
je r-xdata
mov eax edi
test esi esi
je r-xdata
xor ecx ecx
push ebx
push edi
call sub_40b11d
cmp eax [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
retn 0xc
mov eax esi
inc eax
inc eax
inc ecx
inc ecx
cmp [ eax ] 0x0
jne r-xdata
push 0x5c
test esi esi
jne r-xdata
push edi
push esi
call sub_40b147
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ eax ] 0x2f
jne r-xdata
pop ebx
mov edx ecx
sar edx 0x1
pop ebx
mov [ esi + edx * 2 ] bx
pop edx
mov [ eax ] dx
jmp r-xdata
sub_407939
push ebp
mov ebp esp
sub esp 0x400
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
mov esi 0x400
push esi
push edi
call [ GetFullPathNameA@IAT ]
test eax eax
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp eax esi
jae r-xdata
pop edi
pop esi
leave
retn 0x8
push edi
lea eax [ ebp - 0x400 ]
push eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_40af8a
sub_407984
push ebp
mov ebp esp
sub esp 0x800
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
cmp [ edi ] 0x0
je r-xdata
call sub_407428
test eax eax
je r-xdata
mov esi 0x1000000
push esi
lea eax [ ebp - 0x400 ]
push eax
push edi
call sub_40f330
lea eax [ ebp - 0x400 ]
push eax
push eax
call sub_407939
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
call sub_40f362
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x800 ]
push eax
mov esi 0x400
push esi
push edi
call [ GetFullPathNameW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0x8
cmp edi [ ebp + 0xc ]
je r-xdata
cmp eax esi
jae r-xdata
push edi
lea eax [ ebp - 0x800 ]
push eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_40b147
jmp r-xdata
sub_407a1e
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
push eax
call sub_40eb7b
movzx eax ax
add eax 0xffffffbf
cmp ax 0x19
ja r-xdata
xor eax eax
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_407a4a
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
push esi
mov [ ebx ] ax
call sub_407a1e
test al al
je r-xdata
push edi
push 0x5c
pop edi
cmp [ esi ] di
jne r-xdata
movzx eax [ esi ]
push eax
push r--data
push 0x4
push ebx
call sub_40b3bb
add esp 0x10
jmp r-xdata
pop edi
cmp [ esi + 0x2 ] di
jne r-xdata
pop esi
pop ebx
retn 0x8
push edi
lea eax [ esi + 0x4 ]
push eax
call sub_40b2e1
test eax eax
je r-xdata
push edi
add eax 0x2
push eax
call sub_40b2e1
test eax eax
je r-xdata
push esi
call sub_40b11d
sub eax esi
sar eax 0x1
inc eax
jmp r-xdata
mov edi eax
push edi
push esi
push ebx
call sub_40b177
xor eax eax
mov [ ebx + edi * 2 ] ax
sub_407ac7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ ebp + 0x10 ]
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ esi ] ax
push edi
push esi
push [ ebp + 0x8 ]
call sub_40f362
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
xor eax eax
mov [ esi + edi * 2 - 0x2 ] ax
test edi edi
jbe r-xdata
push edi
push eax
push esi
call sub_40b177
jmp r-xdata
sub_407b1a
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
test edi edi
jbe r-xdata
mov [ esi ] 0x0
push edi
push esi
push [ esp + 0x14 ]
call sub_40f330
mov [ esi + edi - 0x1 ] 0x0
jmp r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
sub_407b74
push esi
mov esi [ esp + 0x8 ]
mov al [ esi ]
push edi
xor edi edi
mov ecx esi
test al al
je r-xdata
mov eax esi
movsx eax al
push eax
call sub_407884
test al al
je r-xdata
push ecx
call sub_401be8
mov ecx eax
mov al [ ecx ]
test al al
jne r-xdata
lea edi [ ecx + 0x1 ]
test edi edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax edi
jmp r-xdata
lea edi [ esi + 0x1 ]
cmp [ edi ] 0x3a
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
call sub_401be8
cmp eax edi
lea eax [ esi + 0x2 ]
je r-xdata
sub_407bcb
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40b11d
mov ecx eax
jmp r-xdata
dec ecx
jns r-xdata
movzx eax [ esi + ecx * 2 ]
push eax
call sub_407884
test al al
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + ecx * 2 + 0x2 ]
jmp r-xdata
mov eax esi
cmp [ esi + 0x2 ] 0x3a
lea eax [ esi + 0x4 ]
je r-xdata
pop esi
retn 0x4
sub_407c23
push ebp
mov ebp esp
sub esp 0x400
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi ]
test al al
je r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ esi + 0x2 ]
cmp [ esi ] 0x2e
jne r-xdata
push edi
mov al [ ecx - 0x1 ]
inc ecx
test al al
jne r-xdata
cmp [ ecx - 0x1 ] 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x2e
jne r-xdata
cmp al 0x5c
jne r-xdata
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
movsx eax al
push eax
call sub_407884
test al al
je r-xdata
cmp [ ecx ] 0x2e
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
call sub_40ebc5
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0xc ]
call sub_40af8a
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x0
jne r-xdata
mov al [ edi ]
mov ecx edi
test al al
je r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
lea edi [ esi + 0x2 ]
jmp r-xdata
movsx eax [ ecx + 0x1 ]
push eax
call sub_407884
test al al
je r-xdata
mov esi eax
cmp edi esi
je r-xdata
mov dl al
push 0x5c
lea eax [ esi + 0x2 ]
push eax
call sub_40aec0
test eax eax
je r-xdata
lea esi [ ecx + 0x2 ]
pop edi
cmp [ edi ] 0x0
mov esi edi
jne r-xdata
cmp dl 0x2e
jne r-xdata
lea edi [ ecx + 0x1 ]
jmp r-xdata
push 0x5c
inc eax
push eax
call sub_40aec0
test eax eax
je r-xdata
mov al [ esi ]
mov edi esi
test al al
je r-xdata
inc ecx
mov dl [ ecx ]
test dl dl
jne r-xdata
lea edi [ eax + 0x1 ]
movsx eax dl
push eax
call sub_407884
test al al
je r-xdata
sub_407d22
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
sub esp 0x800
push edi
mov edi eax
test cx cx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
movzx edx cx
lea ecx [ eax + 0x4 ]
cmp [ edi ] 0x2e
jne r-xdata
push esi
inc ecx
movzx eax [ ecx - 0x3 ]
inc ecx
movzx edx ax
test ax ax
jne r-xdata
cmp [ ecx - 0x2 ] 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x2e
jne r-xdata
cmp [ esi ] 0x5c
jne r-xdata
cmp [ edi + 0x2 ] 0x3a
jne r-xdata
movzx eax dx
push eax
call sub_407884
test al al
je r-xdata
cmp [ ecx ] 0x2e
jne r-xdata
mov eax edi
pop edi
leave
retn 0x8
push 0x400
push edi
lea eax [ ebp - 0x800 ]
push eax
call sub_40ebed
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_40b147
lea eax [ edi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
movzx eax [ esi ]
mov edx esi
test ax ax
je r-xdata
cmp [ esi + 0x2 ] 0x5c
jne r-xdata
lea esi [ edi + 0x4 ]
movzx eax [ ecx + 0x2 ]
push eax
call sub_407884
test al al
je r-xdata
mov edi eax
cmp esi edi
je r-xdata
movzx ecx ax
push 0x5c
lea eax [ esi + 0x4 ]
push eax
call sub_40b2e1
test eax eax
je r-xdata
lea edi [ ecx + 0x4 ]
pop esi
cmp [ esi ] 0x0
mov edi esi
jne r-xdata
cmp cx 0x2e
jne r-xdata
lea esi [ edx + 0x2 ]
jmp r-xdata
push 0x5c
add eax 0x2
push eax
call sub_40b2e1
test eax eax
je r-xdata
cmp [ edi ] 0x0
mov esi edi
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
lea esi [ eax + 0x2 ]
movzx eax cx
push eax
call sub_407884
test al al
je r-xdata
sub_407e79
push [ esp + 0x4 ]
call sub_407e41
test eax eax
je r-xdata
xor eax eax
push [ esp + 0x8 ]
inc eax
push eax
call sub_40eb0d
test eax eax
jne r-xdata
inc eax
jmp r-xdata
retn 0x8
sub_407e9d
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
push edi
dec esi
call sub_407b74
sub eax edi
cmp esi eax
jl r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_40afbe
mov [ esi + edi ] 0x0
pop edi
pop esi
retn 0xc
push edi
call sub_407b74
mov esi eax
sub esi edi
sub_407ed3
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
push edi
dec esi
call sub_407bcb
sub eax edi
sar eax 0x1
cmp esi eax
jl r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_40b177
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
pop esi
retn 0xc
push edi
call sub_407bcb
mov esi eax
sub esi edi
sar esi 0x1
sub_407f0f
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_407bcb
lea ecx [ esi + 0x4 ]
cmp eax ecx
jb r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn 0x4
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
dec eax
dec eax
add esi 0x8
cmp eax esi
jb r-xdata
sub_407f3a
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_40ae97
lea edi [ eax + ebx - 0x1 ]
jmp r-xdata
movsx eax [ edi ]
push eax
call sub_40eb96
test al al
je r-xdata
cmp edi ebx
jbe r-xdata
movsx eax [ edi ]
mov esi edi
jmp r-xdata
dec edi
push eax
call sub_40eb96
test al al
jne r-xdata
cmp esi ebx
jbe r-xdata
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
dec esi
movsx eax [ esi ]
cmp esi ebx
ja r-xdata
mov al [ esi ]
cmp al 0x2e
je r-xdata
jmp r-xdata
movsx eax al
push eax
call sub_40eb96
test al al
jne r-xdata
push 0x2e
push ebx
call sub_407b74
push eax
call sub_407b44
test eax eax
je r-xdata
dec esi
cmp eax esi
jae r-xdata
mov edi esi
sub_407fb4
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_40b11d
lea edi [ ebx + eax * 2 - 0x2 ]
jmp r-xdata
movzx eax [ edi ]
push eax
call sub_40eb96
test al al
je r-xdata
cmp edi ebx
jbe r-xdata
movzx eax [ edi ]
mov esi edi
jmp r-xdata
dec edi
dec edi
push eax
call sub_40eb96
test al al
jne r-xdata
cmp esi ebx
jbe r-xdata
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
dec esi
dec esi
movzx eax [ esi ]
cmp esi ebx
ja r-xdata
movzx eax [ esi ]
cmp ax 0x2e
je r-xdata
jmp r-xdata
movzx eax ax
push eax
call sub_40eb96
test al al
jne r-xdata
push 0x2e
push ebx
call sub_407bcb
push eax
call sub_40b2e1
test eax eax
je r-xdata
dec esi
dec esi
cmp eax esi
jae r-xdata
mov edi esi
sub_408034
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
cmp [ edi ] 0x0
je r-xdata
push edi
call sub_407e41
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_407e5d
mov esi eax
test esi esi
jne r-xdata
lea ebp [ esi + 0x1 ]
cmp [ ebp ] 0x0
jne r-xdata
push ebx
push r--data
push edi
call sub_40ec17
push edi
call sub_407e41
mov esi eax
jmp r-xdata
lea ebp [ esi + 0x2 ]
cmp [ ebp ] 0x0
jne r-xdata
push ebx
push r--data
push edi
call sub_40ec42
push edi
call sub_407e5d
mov esi eax
jmp r-xdata
push r--data
push ebp
call sub_40eb0d
test eax eax
je r-xdata
push edi
call sub_40ae97
lea ecx [ ebx - 0x3 ]
cmp eax ecx
jb r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
push r--data
push ebp
call sub_40f568
test eax eax
je r-xdata
push edi
call sub_40b11d
add ebx 0xfffffffd
cmp eax ebx
jb r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
push r--data
push ebp
call sub_40af8a
push r--data
push ebp
call sub_40eb0d
test eax eax
jne r-xdata
lea edi [ esi + 0x2 ]
movsx eax [ edi ]
push eax
call sub_40eb96
test al al
je r-xdata
push edi
call sub_407f3a
mov esi eax
jmp r-xdata
push r--data
push ebp
call sub_40b147
push r--data
push ebp
call sub_40f568
test eax eax
jne r-xdata
lea edi [ esi + 0x4 ]
movzx eax [ edi ]
push eax
call sub_40eb96
test al al
je r-xdata
push edi
call sub_407fb4
mov esi eax
jmp r-xdata
push r--data
push edi
call sub_40af8a
add esi 0x3
movsx eax [ esi ]
push eax
call sub_40eb96
test al al
je r-xdata
inc [ esi ]
cmp [ esi ] 0x3a
je r-xdata
push r--data
push edi
call sub_40b147
add esi 0x6
movzx eax [ esi ]
push eax
call sub_40eb96
test al al
je r-xdata
inc [ esi ]
movzx eax [ esi ]
cmp ax 0x3a
je r-xdata
mov eax esi
jmp r-xdata
mov [ esi ] 0x30
dec esi
cmp esi edi
jb r-xdata
jmp r-xdata
mov eax esi
jmp r-xdata
push 0x30
pop eax
mov [ esi ] ax
dec esi
dec esi
cmp esi edi
jb r-xdata
jmp r-xdata
inc [ eax ]
cmp [ eax ] 0x3a
je r-xdata
push edi
call sub_40ae97
add eax edi
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_40eb96
test al al
je r-xdata
inc [ eax ]
movzx ecx [ eax ]
cmp cx 0x3a
je r-xdata
push edi
call sub_40b11d
lea eax [ edi + eax * 2 ]
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_40eb96
test al al
je r-xdata
lea ecx [ eax - 0x1 ]
cmp [ ecx ] 0x2e
je r-xdata
jmp r-xdata
cmp eax esi
jne r-xdata
lea ecx [ eax - 0x2 ]
cmp [ ecx ] 0x2e
je r-xdata
jmp r-xdata
cmp eax esi
jne r-xdata
mov [ eax ] 0x41
jmp r-xdata
mov [ eax ] 0x30
mov eax ecx
mov cl [ eax ]
mov [ eax + 0x1 ] cl
dec eax
mov [ esi + 0x1 ] 0x31
jmp r-xdata
push 0x41
pop ecx
mov [ eax ] cx
jmp r-xdata
push 0x30
pop edx
mov [ eax ] dx
mov eax ecx
mov cx [ eax ]
mov [ eax + 0x2 ] cx
dec eax
dec eax
push 0x31
pop eax
mov [ esi + 0x2 ] ax
jmp r-xdata
sub_408273
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
cmp [ esi ] bl
je r-xdata
mov al [ esi ]
mov ecx esi
jmp r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
cmp al bl
jne r-xdata
push 0x3a
lea eax [ esi + 0x2 ]
push eax
call sub_40aec0
test eax eax
je r-xdata
cmp al 0x20
jb r-xdata
push ebx
push ebx
push 0xffffffff
push esi
push 0x8
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
jne r-xdata
cmp [ esi ] bl
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x459
je r-xdata
pop esi
pop ebx
retn 0x4
push ecx
call sub_401be8
mov ecx eax
mov al [ ecx ]
movsx eax [ ecx + 0x1 ]
push eax
call sub_407884
test al al
jne r-xdata
xor eax eax
push r--data
push esi
call sub_40af29
test eax eax
jne r-xdata
inc eax
jmp r-xdata
sub_4082fb
push ebp
mov ebp esp
sub esp 0x800
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_40ae97
mov esi eax
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push edi
call sub_40f362
lea eax [ esi + 0x1 ]
push eax
push edi
lea eax [ ebp - 0x800 ]
push eax
call sub_40f330
xor bl bl
mov [ esi + edi ] bl
mov esi edi
cmp [ edi ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax r--data
cmp [ ebp + 0xc ] bl
jne r-xdata
movsx ecx [ esi ]
push ecx
push eax
call sub_40aec0
test eax eax
jne r-xdata
mov eax r--data
mov [ esi ] 0x5f
cmp [ ebp + 0xc ] bl
je r-xdata
cmp [ esi ] 0x20
jne r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov eax esi
sub eax edi
cmp eax 0x1
jle r-xdata
cmp [ esi ] 0x20
jae r-xdata
push esi
call sub_401be8
mov esi eax
cmp [ esi ] bl
jne r-xdata
movsx eax [ esi + 0x1 ]
push eax
call sub_407884
test al al
je r-xdata
mov [ esi ] 0x5f
mov [ esi ] 0x5f
sub_4083a4
push ebp
mov ebp esp
sub esp 0x800
push esi
mov esi [ ebp + 0x8 ]
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_407ed3
lea eax [ ebp - 0x800 ]
push eax
push 0x0
call sub_407847
test al al
je r-xdata
cmp [ esi ] 0x5c
jne r-xdata
mov al 0x1
jmp r-xdata
push esi
call sub_407a1e
test al al
je r-xdata
cmp [ esi + 0x2 ] 0x5c
je r-xdata
pop esi
leave
retn 0x4
xor eax eax
movzx eax [ esi + 0x4 ]
push eax
call sub_407884
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_40840a
push ebp
mov ebp esp
push esi
push edi
push 0x3b
push [ ebp + 0x8 ]
xor edi edi
call sub_407b5c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ esi + 0x1 ]
push eax
call sub_40b420
cmp [ ebp + 0x10 ] 0x0
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0xc
push 0x3b
push [ ebp + 0xc ]
call sub_40b30e
mov esi eax
test esi esi
je r-xdata
mov [ esi ] 0x0
test edi edi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ esi + 0x2 ]
push eax
call sub_40f6fc
mov edi eax
xor eax eax
mov [ esi ] ax
sub_4084d3
push esi
push edi
mov edi [ esp + 0xc ]
mov ecx edi
call j_sub_4066d6
mov esi eax
and eax 0xc000
mov ecx edi
je r-xdata
push 0x6
call sub_406704
mov eax esi
shr eax 0xa
and eax 0xf
cmp eax 0x4000
je r-xdata
test esi 0x3c00
jne r-xdata
push 0x2
cmp eax 0x8000
je r-xdata
shr esi 0x6
and esi 0xff
push 0xa
shr esi 0x2
or esi 0xffffff00
push 0xe
jmp r-xdata
call sub_406704
mov ecx edi
call j_sub_4066d6
mov esi eax
call sub_406704
mov ecx edi
call j_sub_4066d6
mov esi eax
push 0x10
mov ecx edi
shl esi 0x10
call sub_406704
mov ecx edi
call j_sub_4066d6
or esi eax
jmp r-xdata
pop edi
pop esi
retn 0x4
call sub_406704
mov eax esi
jmp r-xdata
push 0x10
mov ecx edi
jmp r-xdata
sub_408571
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax 0x40000
cmp edx eax
jae r-xdata
pop ebp
retn 0xc
mov ecx [ ecx + 0xc ]
add ecx edx
cmp [ ebp + 0xc ] ecx
je r-xdata
sub eax edx
cmp [ ebp + 0x10 ] eax
jae r-xdata
push eax
push [ ebp + 0xc ]
push ecx
call sub_40ae4c
mov eax [ ebp + 0x10 ]
sub_4085a2
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
push 0xffffffff
call sub_402de2
xor edx edx
not eax
xor ecx ecx
add ecx 0xc
inc edx
cmp ecx 0x54
jb r-xdata
cmp [ ecx + rw-data ] esi
je r-xdata
cmp [ ecx + rw-data ] eax
jne r-xdata
xor eax eax
imul edx edx 0xc
mov eax [ edx + rw-data ]
jmp r-xdata
pop esi
retn 0x8
sub_4085e3
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
movzx edx [ eax + ecx ]
inc eax
push esi
movzx esi [ eax + ecx ]
lea ecx [ eax + ecx + 0x1 ]
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
shl eax 0x8
or eax ecx
mov ecx [ esp + 0xc ]
shl esi 0x8
or edx esi
shl eax 0x10
or eax edx
and ecx 0x7
shr eax cl
push 0x20
pop ecx
sub ecx [ esp + 0x10 ]
or edx 0xffffffff
shr edx cl
pop esi
and eax edx
retn 0xc
sub_408633
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax ecx
cdq
push esi
and edx 0x7
add eax edx
and ecx 0x7
push edi
mov esi eax
mov eax ecx
push 0x20
pop ecx
sub ecx [ ebp + 0x14 ]
or edx 0xffffffff
shr edx cl
mov ecx eax
mov eax [ ebp + 0x8 ]
shl [ ebp + 0xc ] cl
shl edx cl
sar esi 0x3
xor edi edi
add esi eax
not edx
mov al [ esi + edi ]
and al dl
or al [ ebp + 0xc ]
shr [ ebp + 0xc ] 0x8
shr edx 0x8
or edx 0xff000000
mov [ esi + edi ] al
inc edi
cmp edi 0x4
jb r-xdata
pop edi
pop esi
pop ebp
retn 0x10
sub_40868c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
mov eax edi
imul eax eax 0x28
push eax
push [ esi ]
call sub_40ad37
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_403495
sub_4086d5
push edi
mov edi ecx
call j_sub_4066d6
test eax 0x8000
je r-xdata
push esi
mov esi [ esp + 0xc ]
mov ecx edi
test eax 0xc000
jne r-xdata
mov ecx [ esp + 0x8 ]
and [ ecx ] 0x0
shr eax 0xc
and eax 0x7
mov [ ecx + 0x4 ] eax
lea eax [ edi + eax * 4 + 0x10 ]
mov [ ecx + 0xc ] eax
push 0x4
mov ecx edi
call sub_406704
jmp r-xdata
mov [ esi ] 0x2
test eax 0x2000
jne r-xdata
cmp [ esp + 0x10 ] 0x0
mov [ esi ] 0x1
je r-xdata
pop edi
retn 0x8
test eax 0x1000
jne r-xdata
shr eax 0xa
and eax 0x7
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] eax
lea eax [ edi + eax * 4 + 0x10 ]
mov [ esi + 0xc ] eax
push 0x6
push 0x2
call sub_406704
push edi
call sub_4084d3
mov [ esi + 0x4 ] eax
jmp r-xdata
shr eax 0x6
and eax 0xff
mov [ esi + 0x4 ] eax
push 0xa
jmp r-xdata
and [ esi + 0x4 ] 0x0
push 0x4
shr eax 0x9
and eax 0x7
mov [ esi + 0x4 ] eax
lea eax [ edi + eax * 4 + 0x10 ]
mov [ esi + 0xc ] eax
push 0x7
jmp r-xdata
pop esi
call sub_406704
jmp r-xdata
call sub_406704
push edi
call sub_4084d3
mov [ esi + 0x8 ] eax
sub_4087a3
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x50
push esi
mov esi ecx
test edx edx
jle r-xdata
pop esi
leave
retn 0x4
cmp edx 0x2
push ebx
push edi
jle r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0xc ]
mov esi [ esi + 0x28 ]
cmp eax 0x3c000
jae r-xdata
cmp edx 0x3
je r-xdata
pop edi
pop ebx
cmp eax 0x4
jl r-xdata
mov eax [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x20 ]
cmp eax 0x3c000
jae r-xdata
cmp edx 0x4
je r-xdata
cmp edx 0x2
sete dl
and [ ebp + 0x8 ] 0x0
lea edi [ eax - 0x4 ]
add dl 0xe8
test edi edi
jle r-xdata
cmp eax 0x15
jl r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov esi [ esi + 0xc ]
sub ecx 0x3
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x1c ] esi
lea ebx [ esi + eax ]
mov [ esi + 0x3c020 ] eax
cmp eax 0x1e000
jae r-xdata
cmp edx 0x5
je r-xdata
mov al [ ecx ]
inc ecx
inc [ ebp + 0x8 ]
inc esi
cmp al 0xe8
je r-xdata
mov ebx [ esi + 0x28 ]
add eax 0xffffffeb
shr ebx 0x4
test eax eax
jle r-xdata
test edx edx
jl r-xdata
mov edi [ esi + 0x20 ]
mov eax [ esi + 0x10 ]
mov esi [ esi + 0xc ]
lea ecx [ esi + edi ]
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] ecx
mov [ esi + 0x3c020 ] edi
cmp edi 0x1e000
jae r-xdata
cmp edx 0x6
je r-xdata
mov eax [ ecx ]
test eax eax
jge r-xdata
cmp al dl
jne r-xdata
dec eax
shr eax 0x4
inc eax
mov [ ebp - 0x2c ] eax
and [ ebp - 0x8 ] 0x0
neg ecx
mov [ ebp - 0x14 ] ecx
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x10 ] ebx
jle r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x10 ]
mov edi [ esi + 0xc ]
xor ebx ebx
mov [ ebp - 0x1c ] eax
lea edx [ ecx + ecx ]
mov [ edi + 0x3c020 ] ecx
cmp ecx 0x1e000
jae r-xdata
cmp edx 0x7
jne r-xdata
cmp eax 0x1000000
jge r-xdata
lea ebx [ esi + eax ]
test ebx ebx
jl r-xdata
cmp [ ebp + 0x8 ] edi
jl r-xdata
add [ ebp + 0x8 ] 0x10
inc ebx
dec [ ebp - 0x2c ]
jne r-xdata
mov al [ eax + rw-data ]
test al al
je r-xdata
inc [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
cmp [ ebp - 0x8 ] 0x3
jl r-xdata
mov esi [ ebp - 0x14 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esi
add esi ebx
push 0x3
dec eax
xor edx edx
pop ecx
div ecx
inc eax
mov [ ebp - 0xc ] eax
jmp r-xdata
and [ ebp + 0x8 ] ebx
test eax eax
jle r-xdata
mov ebx [ esi + 0x20 ]
xor edx edx
mov edi ebx
cmp ebx 0x1e000
jae r-xdata
add [ ebp + 0x8 ] 0x4
add ecx 0x4
add esi 0x4
sub eax esi
add eax 0x1000000
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
and eax 0x1f
sub eax 0x10
js r-xdata
jmp r-xdata
and [ ebp - 0x1c ] 0x0
movzx eax al
push 0x12
mov [ ebp - 0x34 ] eax
pop edi
mov eax [ ebp - 0x10 ]
and [ ebp + 0x8 ] 0x0
cmp [ ebp - 0x8 ] eax
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x30 ]
add edx 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx edi [ esi ]
movzx eax [ esi - 0x3 ]
mov [ ebp - 0x24 ] edi
sub edi eax
add edi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax edi
sub eax [ ebp + 0x8 ]
push eax
call sub_40b578
mov [ ebp - 0x2c ] eax
mov eax edi
sub eax [ ebp - 0x24 ]
push eax
call sub_40b578
sub edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
push edi
call sub_40b578
mov ecx [ ebp - 0x28 ]
add esp 0xc
cmp [ ebp - 0x2c ] ecx
jg r-xdata
push 0x1c
push ebx
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
call sub_40ad9c
mov eax [ ebp - 0x10 ]
and [ ebp - 0x1c ] 0x0
cmp eax edi
jmp r-xdata
mov edi [ ebp + 0x8 ]
xor al al
add edi ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ ecx ] eax
inc [ ebp - 0x1c ]
add edi 0x29
cmp edi 0x64
jle r-xdata
push 0x4
lea eax [ edi + 0x18 ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_4085e3
cmp eax 0x5
jne r-xdata
cmp eax edx
jl r-xdata
cmp [ ebp - 0x18 ] 0x3
jl r-xdata
cmp [ ebp - 0x28 ] eax
jg r-xdata
cmp [ ebp - 0x2c ] eax
jle r-xdata
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp edi edx
jl r-xdata
mov eax [ esi + 0xc ]
sub edi ebx
mov [ eax + 0x3c01c ] edi
mov eax [ esi + 0xc ]
mov [ eax + 0x3c020 ] ebx
jmp r-xdata
mov eax [ esi + 0xc ]
mov cl [ eax + edx ]
inc edx
cmp cl 0x2
jne r-xdata
mov ecx [ ebp - 0x1c ]
xor eax eax
inc eax
shl eax cl
mov ecx [ ebp - 0x34 ]
test ecx eax
je r-xdata
push 0x14
push edi
push 0x14
push edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_4085e3
sub eax ebx
and eax 0xfffff
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_408633
mov cl [ eax + ebx + 0x1 ]
add [ eax + ebx ] cl
add [ eax + ebx + 0x2 ] cl
add eax 0x3
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edi ebx
mov ebx ecx
mov ecx [ ebp - 0x14 ]
imul edx ebx
movzx ecx [ ecx ]
mov esi edi
imul esi [ ebp + 0x8 ]
add esi edx
mov edx [ ebp - 0x8 ]
imul edx eax
inc [ ebp - 0x14 ]
add esi edx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx * 8 ]
mov esi [ ebp - 0x30 ]
shr eax 0x3
mov [ ebp - 0x34 ] ecx
and eax 0xff
sub eax ecx
mov ecx [ ebp - 0x18 ]
mov [ ecx + esi ] al
movsx esi [ ebp - 0x34 ]
mov cl al
sub cl dl
movsx ecx cl
shl esi 0x3
push esi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
call sub_40b578
add [ ebp - 0x50 ] eax
mov eax esi
sub eax [ ebp - 0xc ]
push eax
call sub_40b578
add [ ebp - 0x4c ] eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
call sub_40b578
add [ ebp - 0x48 ] eax
mov eax esi
sub eax ebx
push eax
call sub_40b578
add [ ebp - 0x44 ] eax
lea eax [ esi + ebx ]
push eax
call sub_40b578
add [ ebp - 0x40 ] eax
mov eax esi
sub eax edi
push eax
call sub_40b578
add [ ebp - 0x3c ] eax
add esi edi
push esi
call sub_40b578
add [ ebp - 0x38 ] eax
add esp 0x1c
test [ ebp - 0x1c ] 0x1f
jne r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x2c ]
jl r-xdata
mov edx [ esi + 0xc ]
sub al [ edx + ebx ]
inc ebx
mov [ edx + edi ] al
add edi [ ebp - 0x1c ]
lea edx [ ecx + ecx ]
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov [ eax + edi ] cl
inc edi
cmp edx ebx
jl r-xdata
mov cl [ eax + edx ]
inc edx
cmp cl 0x2
je r-xdata
mov ecx [ ebp - 0x1c ]
sub al [ ecx ]
mov ecx [ ebp - 0x34 ]
inc [ ebp - 0x1c ]
add [ ebp - 0x18 ] 0x3
movzx eax al
mov [ esi + ecx ] al
add esi 0x3
dec [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x2c ]
inc [ ebp - 0x1c ]
cmp eax [ ebp - 0x28 ]
mov esi [ ebp - 0x50 ]
xor edi edi
xor ecx ecx
mov [ ebp - 0x50 ] edi
inc ecx
mov edi [ ebp - 0x28 ]
xor ebx ebx
jmp r-xdata
jmp r-xdata
add cl 0xe0
and [ eax ] 0x0
inc ecx
cmp ecx 0x7
jb r-xdata
mov esi edx
mov edi ecx
lea eax [ ebp + ecx * 4 - 0x50 ]
mov edx [ eax ]
cmp edx esi
jae r-xdata
mov eax edi
dec eax
je r-xdata
cmp [ ebp - 0x8 ] 0xfffffff0
jl r-xdata
dec eax
je r-xdata
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x10
jge r-xdata
dec eax
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0xfffffff0
jl r-xdata
dec eax
je r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
dec eax
je r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0xfffffff0
jl r-xdata
dec eax
jne r-xdata
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x10
jge r-xdata
inc [ ebp + 0x8 ]
jmp r-xdata
sub_408c99
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] 0x17d7840
mov ebx [ ebp - 0x8 ]
add ebx 0x28
dec [ ebp - 0x4 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_409265 ]
lea eax [ ebx + 0x8 ]
push eax
mov ecx edi
mov [ ebp - 0x8 ] ebx
call sub_4084b7
mov esi eax
lea eax [ ebx + 0x18 ]
push eax
mov ecx edi
call sub_4084b7
mov ecx [ ebx ]
cmp ecx 0x28
ja r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov bl [ ecx + 0x4 ]
test bl bl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
test [ edi + 0x30 ] 0x2
mov esi [ esi ]
cmp esi [ ebp + 0xc ]
jae r-xdata
test [ edi + 0x30 ] 0x2
jmp r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
test [ edi + 0x30 ] 0x80000000
jmp r-xdata
test [ edi + 0x30 ] 0x80000000
jmp r-xdata
test [ edi + 0x30 ] 0x1
jmp r-xdata
test [ edi + 0x30 ] 0x3
jmp r-xdata
test [ edi + 0x30 ] 0x3
jmp r-xdata
test [ edi + 0x30 ] 0x1
add [ edi + 0x2c ] 0xfffffffc
mov edx [ esi ]
mov eax [ edi + 0x2c ]
mov ecx [ edi + 0xc ]
and eax 0x3ffff
mov eax [ eax + ecx ]
mov [ esi ] eax
add [ edi + 0x2c ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp + 0x8 ]
push 0x28
cdq
pop ebx
idiv ebx
add [ edi + 0x2c ] 0xfffffffc
mov ecx [ edi + 0x2c ]
mov edx [ edi + 0xc ]
inc eax
and ecx 0x3ffff
mov [ ecx + edx ] eax
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x2c ]
sub eax 0x4
lea ecx [ edi + 0x10 ]
mov [ ebp - 0xc ] 0x8
lea eax [ edi + 0x2c ]
mov ecx [ eax ]
push 0x8
pop edx
add [ edi + 0x2c ] 0xfffffffc
mov edx [ edi + 0x30 ]
jmp r-xdata
mov eax [ edi + 0x2c ]
mov edx [ edi + 0xc ]
mov ecx eax
and ecx 0x3ffff
mov ecx [ ecx + edx ]
add eax 0x4
mov [ edi + 0x30 ] ecx
mov [ edi + 0x2c ] eax
jmp r-xdata
movzx eax [ eax ]
jmp r-xdata
movzx eax [ eax ]
movsx eax al
jmp r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov dl [ ebx + 0x4 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov bl [ ecx + 0x4 ]
test bl bl
je r-xdata
mov cl [ ebx + 0x4 ]
test cl cl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov bl [ ecx + 0x4 ]
test bl bl
je r-xdata
mov ecx [ edi + 0x2c ]
cmp ecx 0x40000
jae r-xdata
push [ ebx + 0xc ]
mov ecx edi
call sub_4087a3
mov eax [ eax ]
movzx eax [ eax ]
mov esi [ esi ]
movzx esi [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov al 0x1
jmp r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
jne r-xdata
mov eax [ esi ]
movzx eax [ esi ]
jmp r-xdata
mov eax [ esi ]
movzx eax [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov esi [ esi ]
movzx esi [ esi ]
jmp r-xdata
je r-xdata
jmp r-xdata
mov eax [ esi ]
not eax
jmp r-xdata
movzx eax [ esi ]
not al
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov eax [ esi ]
movzx eax [ esi ]
jmp r-xdata
mov ebx [ ecx ]
mov esi [ edi + 0xc ]
mov edx eax
and edx 0x3ffff
add ecx 0x4
sub eax 0x4
dec [ ebp - 0xc ]
mov [ edx + esi ] ebx
jne r-xdata
add [ edi + 0x2c ] 0xffffffe0
jmp r-xdata
mov ebx [ edi + 0xc ]
mov esi ecx
and esi 0x3ffff
mov esi [ esi + ebx ]
mov [ eax ] esi
sub eax 0x4
add ecx 0x4
dec edx
jne r-xdata
jmp r-xdata
mov eax [ edi + 0x2c ]
mov ecx [ edi + 0xc ]
and eax 0x3ffff
mov [ eax + ecx ] edx
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov edx [ esi ]
movzx edx [ esi ]
jmp r-xdata
mov ecx [ esi ]
movzx ecx [ esi ]
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ eax ]
jmp r-xdata
mov ebx [ esi ]
movzx ebx [ esi ]
jmp r-xdata
mov ecx [ esi ]
movzx ecx [ esi ]
jmp r-xdata
mov edx [ edi + 0xc ]
mov eax ecx
and eax 0x3ffff
mov eax [ eax + edx ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test bl bl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test cl cl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor al al
imul esi esi 0x28
add esi [ ebp + 0x8 ]
mov ebx esi
jmp r-xdata
mov [ esi ] eax
and eax 0xff
jmp r-xdata
inc eax
test cl cl
je r-xdata
mov [ esi ] al
jmp r-xdata
dec eax
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov [ esi ] al
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov ecx [ eax ]
movzx ecx [ eax ]
jmp r-xdata
test cl cl
je r-xdata
mov ecx [ eax ]
movzx ecx [ eax ]
jmp r-xdata
test cl cl
je r-xdata
push 0x2
pop eax
jmp r-xdata
and eax 0x80000001
or eax 0x1
jmp r-xdata
neg eax
mov ecx eax
je r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
movzx ecx [ eax ]
mov [ esi ] cl
jmp r-xdata
test cl cl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
test dl dl
je r-xdata
test bl bl
je r-xdata
test ecx ecx
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ edi + 0x30 ]
and edx 0x1
test cl cl
je r-xdata
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ edi + 0x30 ]
and edx 0x1
mov [ ebp - 0xc ] ecx
test bl bl
je r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp esi ecx
sbb eax eax
neg eax
and ecx 0x80000000
or eax ecx
push 0x2
pop eax
jmp r-xdata
mov ecx esi
sub ecx eax
jne r-xdata
test ecx ecx
jne r-xdata
and ecx 0xff
je r-xdata
lea ecx [ eax + edx ]
test bl bl
je r-xdata
cmp edx ecx
sbb eax eax
mov edx ecx
neg eax
and edx 0x80000000
or eax edx
mov ecx edx
sub ecx eax
jne r-xdata
and eax 0x80000000
jmp r-xdata
jmp r-xdata
test cl cl
je r-xdata
test eax eax
mov ecx eax
jne r-xdata
xor eax edx
jmp r-xdata
mov eax ecx
and eax 0x80000000
jmp r-xdata
jmp r-xdata
and eax edx
or eax edx
jmp r-xdata
jne r-xdata
and eax esi
jmp r-xdata
mov ebx eax
and ebx 0x80000000
push 0x2
pop ebx
jmp r-xdata
mov eax edx
shl eax cl
test eax eax
jne r-xdata
mov ebx eax
and ebx 0x80000000
push 0x2
pop ebx
jmp r-xdata
mov eax edx
shr eax cl
test eax eax
jne r-xdata
mov eax edx
sar eax cl
jmp r-xdata
mov [ edi + 0x30 ] eax
cmp [ ebx + 0x4 ] 0x0
jmp r-xdata
mov [ eax ] edx
jmp r-xdata
mov [ eax ] dl
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
je r-xdata
imul eax ecx
test dl dl
jmp r-xdata
mov eax [ esi ]
movzx eax [ esi ]
jmp r-xdata
cmp ecx ebx
jb r-xdata
and ecx 0xff
lea ecx [ edx + ebx ]
add ecx eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp ecx [ ebp - 0xc ]
ja r-xdata
and ecx 0xff
mov ecx [ ebp - 0xc ]
sub ecx edx
sub ecx eax
test bl bl
je r-xdata
imul eax eax 0x28
add eax [ ebp + 0x8 ]
add ecx 0x4
mov ebx eax
mov [ edi + 0x2c ] ecx
jmp r-xdata
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax ecx
and eax 0x80000000
push 0x2
pop eax
jmp r-xdata
mov eax ecx
and al 0x80
movzx eax al
neg eax
sbb eax eax
and eax 0x80000000
jmp r-xdata
je r-xdata
jmp r-xdata
dec ecx
shl edx cl
shr edx 0x1f
mov ecx [ ebp - 0x8 ]
or edx ebx
mov [ edi + 0x30 ] edx
cmp [ ecx + 0x4 ] 0x0
dec ecx
shr edx cl
and edx 0x1
jmp r-xdata
xor edx edx
div ecx
test bl bl
jmp r-xdata
xor edx edx
inc edx
jne r-xdata
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
mov [ esi ] cl
jmp r-xdata
cmp ecx edx
sbb edx edx
neg edx
or edx eax
mov [ edi + 0x30 ] edx
mov eax ecx
and eax 0x80000000
push 0x2
pop eax
jmp r-xdata
xor edx edx
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
or eax edx
mov [ edi + 0x30 ] eax
jmp r-xdata
test ecx ecx
jne r-xdata
sub_409309
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
and [ ebx + 0x4 ] 0x0
and [ ebx ] 0x0
mov eax 0x8000
push edi
cmp esi eax
jae r-xdata
mov edi [ ebp + 0x8 ]
push eax
push edi
push [ ebx + 0x8 ]
call sub_40adc9
xor ecx ecx
xor al al
inc ecx
mov [ ebp + 0xb ] al
cmp esi ecx
jbe r-xdata
mov eax esi
push 0x8
mov ecx ebx
call sub_406704
mov esi [ ebp + 0x10 ]
mov al [ ebp + 0xb ]
and [ esi + 0x10 ] 0x0
cmp al [ edi ]
jne r-xdata
xor al [ ecx + edi ]
inc ecx
cmp ecx esi
jb r-xdata
push 0x1
mov ecx esi
call sub_40868c
mov eax [ esi + 0x10 ]
lea ecx [ eax + 0x1 ]
imul eax eax 0x28
add eax [ esi ]
mov [ esi + 0x10 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
lea ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] ecx
push 0x3
pop ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x8 ] ecx
xor edx edx
mov [ eax ] 0x16
xor ecx ecx
cmp [ esi + 0x10 ] edx
jle r-xdata
push [ ebp + 0xc ]
mov ecx ebx
push edi
call sub_4085a2
mov edi eax
test edi edi
je r-xdata
mov [ ebp + 0xb ] al
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor edi edi
mov ecx ebx
call j_sub_4066d6
push 0x1
mov ecx ebx
mov edi eax
call sub_406704
test edi 0x8000
je r-xdata
push 0x1
mov ecx esi
call sub_40868c
mov eax [ esi + 0x10 ]
lea ecx [ eax + 0x1 ]
imul eax eax 0x28
add eax [ esi ]
and [ ebp + 0xc ] 0x0
mov [ esi + 0x10 ] ecx
lea ecx [ eax + 0xc ]
mov [ ecx ] edi
mov [ eax + 0x14 ] ecx
lea ecx [ eax + 0x1c ]
push 0x3
mov [ eax + 0x24 ] ecx
pop ecx
mov [ eax ] 0x28
mov [ eax + 0x18 ] ecx
mov [ eax + 0x8 ] ecx
cmp [ eax + 0x24 ] edx
jne r-xdata
lea ebx [ eax + 0xc ]
mov [ eax + 0x14 ] ebx
mov eax [ ebp + 0xc ]
cmp [ ebx ] eax
jb r-xdata
push ebx
call sub_4084d3
mov ecx [ ebx ]
and [ ebp + 0x8 ] 0x0
inc eax
mov [ ebp + 0x10 ] eax
cmp ecx [ ebp + 0xc ]
jae r-xdata
inc ecx
add edi 0x28
cmp ecx [ esi + 0x10 ]
jl r-xdata
lea ebx [ eax + 0x1c ]
mov [ eax + 0x24 ] ebx
push 0x1
mov ecx esi
call sub_40868c
mov edi [ esi + 0x10 ]
imul edi edi 0x28
add edi [ esi ]
mov ecx ebx
call j_sub_4066d6
mov ecx ebx
test eax 0x8000
jne r-xdata
jmp r-xdata
mov eax [ esi ]
add eax edi
cmp [ eax + 0x14 ] edx
jne r-xdata
shr eax 0xa
sub eax 0x18
push 0x6
shr eax 0xc
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
mov [ edi + 0x4 ] 0x0
mov ecx ebx
call j_sub_4066d6
test eax 0xffff8000
setne al
push 0x1
mov ecx ebx
mov [ edi + 0x4 ] al
call sub_406704
jmp r-xdata
mov [ edi ] eax
call sub_406704
mov eax [ edi ]
test [ eax + rw-data ] 0x4
je r-xdata
lea edi [ esi + 0x20 ]
push 0x1
mov ecx edi
call sub_40ede2
mov edi [ edi ]
add edi [ ebp + 0x8 ]
mov ecx ebx
call j_sub_4066d6
shr eax 0x8
push 0x8
mov ecx ebx
mov [ edi ] al
call sub_406704
mov eax [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebx ] eax
jb r-xdata
inc [ esi + 0x10 ]
movzx eax [ edi + 0x4 ]
push eax
push edx
mov ecx ebx
call sub_4086d5
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
lea eax [ edi + 0x18 ]
push 0x3
pop ecx
mov [ ebp + 0x10 ] eax
mov [ eax ] ecx
mov eax [ edi ]
lea edx [ edi + 0x8 ]
mov [ edx ] ecx
movzx eax [ eax + rw-data ]
and eax ecx
mov [ ebp + 0x8 ] eax
mov [ edi + 0x24 ] 0x0
mov [ edi + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
movzx eax [ edi + 0x4 ]
push eax
push [ ebp + 0x10 ]
mov ecx ebx
call sub_4086d5
jmp r-xdata
mov eax [ edi ]
test [ eax + rw-data ] 0x18
je r-xdata
mov eax [ edi + 0xc ]
mov ecx 0x100
cmp eax ecx
jl r-xdata
cmp eax 0x88
jl r-xdata
sub eax ecx
jmp r-xdata
cmp eax 0x10
jl r-xdata
sub eax 0x108
jmp r-xdata
mov [ edi + 0xc ] eax
cmp eax 0x8
jl r-xdata
sub eax 0x8
jmp r-xdata
add eax [ esi + 0x10 ]
sub eax 0x10
sub_409599
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1c
lea eax [ esi + 0x2c ]
mov edi ecx
push eax
lea eax [ edi + 0x10 ]
push eax
call sub_40adc9
mov eax [ esi + 0x18 ]
mov ebx 0x2000
mov [ ebp + 0x8 ] eax
cmp eax ebx
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x24 ]
sub ebx ecx
cmp eax ebx
jb r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
push [ esi + 0x14 ]
add eax 0x3c000
push eax
call sub_40adc9
test eax eax
je r-xdata
mov eax ebx
and [ edi + 0x30 ] 0x0
mov [ edi + 0x2c ] 0x40000
mov eax [ esi + 0xc ]
mov ebx eax
test eax eax
jne r-xdata
push eax
mov eax [ edi + 0xc ]
push [ esi + 0x20 ]
lea eax [ eax + ecx + 0x3c000 ]
push eax
call sub_40adc9
mov eax [ esi + 0x10 ]
test eax eax
jle r-xdata
mov ebx [ esi ]
mov edx [ edi + 0xc ]
mov ecx [ edx + 0x3c020 ]
mov eax [ edx + 0x3c01c ]
mov ebx 0x3ffff
and ecx ebx
and eax ebx
lea ebx [ eax + ecx ]
cmp ebx 0x40000
jb r-xdata
push eax
push ebx
mov ecx edi
call sub_408c99
test al al
jne r-xdata
add edx ecx
mov [ esi + 0x48 ] edx
mov [ esi + 0x4c ] eax
add esi 0x14
mov ecx esi
call sub_40edc6
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x3c030 ]
mov eax 0x1fc0
cmp ecx eax
jae r-xdata
xor eax eax
xor ecx ecx
mov [ ebx ] 0x16
test eax eax
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ eax + 0x40 ]
push ebx
mov ecx esi
call sub_40ede2
mov eax [ edi + 0xc ]
push ebx
add eax 0x3c000
push eax
push [ esi ]
call sub_40adc9
sub_4096a9
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
push edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0x10 ]
mov edi [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax edi
add eax edx
mov [ ebp - 0x4 ] edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_40ede2
mov eax [ esi + 0x10 ]
add eax [ esi ]
push [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
push eax
call sub_405ca2
add [ esi + 0x10 ] eax
add ecx edx
mov [ esi + 0x10 ] ecx
jmp r-xdata
push ebx
mov ebx eax
not ebx
inc ebx
and ebx 0xf
add ebx eax
push ebx
mov ecx esi
call sub_40ede2
mov eax [ esi ]
mov ecx [ esi + 0xc ]
add eax edi
push ebx
push eax
call sub_405ca2
mov ecx [ esi + 0x18 ]
mov edi eax
mov eax [ esi ]
add eax [ ebp - 0x4 ]
push ebx
push eax
call sub_402ec6
neg edi
sbb edi edi
and edi [ ebp + 0x8 ]
pop ebx
add [ esi + 0x10 ] edi
jmp r-xdata
sub_40975b
mov eax [ ecx + 0x14 ]
lea edx [ eax + 0x1 ]
cmp edx [ ecx + 0x10 ]
jae r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx ] ax
mov edx [ ecx ]
add eax edx
movzx dx [ eax + 0x1 ]
movzx ax [ eax ]
push esi
mov esi 0x100
imul dx si
add dx ax
mov eax [ esp + 0x8 ]
mov [ eax ] dx
add [ ecx + 0x14 ] 0x2
pop esi
jmp r-xdata
retn 0x4
sub_40979a
mov eax [ ecx + 0x14 ]
lea edx [ eax + 0x3 ]
cmp edx [ ecx + 0x10 ]
jae r-xdata
mov eax [ esp + 0x4 ]
and [ eax ] 0x0
mov edx [ ecx ]
add eax edx
movzx edx [ eax + 0x3 ]
push esi
movzx esi [ eax + 0x2 ]
shl edx 0x8
add edx esi
movzx esi [ eax + 0x1 ]
movzx eax [ eax ]
shl edx 0x8
add edx esi
shl edx 0x8
add edx eax
mov eax [ esp + 0x8 ]
mov [ eax ] edx
add [ ecx + 0x14 ] 0x4
pop esi
jmp r-xdata
retn 0x4
sub_4097df
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
lea ecx [ eax + edi - 0x1 ]
push edi
cmp ecx [ esi + 0x10 ]
jae r-xdata
push 0x0
push [ esp + 0x14 ]
call sub_40ad9c
mov ecx [ esi ]
add ecx eax
push ecx
push [ esp + 0x14 ]
call sub_40adc9
add [ esi + 0x14 ] edi
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_409817
mov edx [ ecx + 0x10 ]
cmp edx 0x2
jbe r-xdata
or eax 0xffffffff
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ ecx ]
inc eax
add edx 0xfffffffe
push edx
inc eax
push eax
push 0xffffffff
call sub_402de2
jmp r-xdata
mov edx [ ecx + 0x14 ]
retn 0x4
sub_409860
xor eax eax
or edx 0xffffffff
mov [ ecx ] al
mov [ ecx + 0xc ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] 0x1
mov [ ecx + 0x29 ] al
mov [ ecx + 0x2a ] al
mov [ ecx + 0x4c5 ] al
mov [ ecx + 0x4c6 ] al
mov [ ecx + 0x4c7 ] al
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x514 ] eax
mov [ ecx + 0x518 ] eax
mov [ ecx + 0x4c8 ] eax
mov [ ecx + 0x4cc ] eax
mov [ ecx + 0x4f0 ] eax
mov [ ecx + 0x4f4 ] eax
mov [ ecx + 0x4e8 ] eax
mov [ ecx + 0x4ec ] eax
mov [ ecx + 0x4e0 ] eax
mov [ ecx + 0x4e4 ] eax
mov [ ecx + 0x4d8 ] eax
mov [ ecx + 0x4dc ] eax
mov [ ecx + 0x510 ] edx
mov [ ecx + 0x50c ] edx
mov [ ecx + 0x508 ] edx
mov [ ecx + 0x4c0 ] edx
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
mov [ ecx + 0x4c4 ] al
mov [ ecx + 0x500 ] eax
mov [ ecx + 0x504 ] eax
mov [ ecx + 0x4f8 ] eax
mov [ ecx + 0x4fc ] eax
retn
sub_40991d
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
je r-xdata
pop ebp
retn 0x10
mov eax [ ecx + 0x2c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x500 ]
push esi
mov esi [ ecx + 0x504 ]
push edi
mov edi edx
or edi esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x57bc ]
push [ eax + 0x57b8 ]
push [ ecx + 0x4f4 ]
push [ ecx + 0x4f0 ]
call sub_40c07d
pop edi
pop esi
mov [ ebp + 0x10 ] edx
mov edx [ ecx + 0x4f8 ]
add [ ebp + 0x8 ] edx
mov edx [ ecx + 0x4fc ]
mov [ ebp + 0x14 ] esi
adc [ ebp + 0xc ] edx
sub_4099a8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
movzx esi [ eax ]
cmp [ ebp + 0x14 ] dl
je r-xdata
neg esi
sbb esi esi
and esi [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x1d
push ebx
push [ ebp + 0x18 ]
setl bl
mov [ ecx + 0x518 ] esi
movzx esi bl
push esi
push edx
push [ ebp + 0x10 ]
add ecx 0x280
push eax
call sub_402eda
pop ebx
push [ ebp + 0x18 ]
neg esi
push edx
push [ ebp + 0x14 ]
sbb esi esi
and esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ ecx + 0x514 ] esi
push eax
add ecx 0x40
call sub_402eda
jmp r-xdata
pop esi
pop ebp
retn 0x14
sub_409a43
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] edi
jbe r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov ebx [ esi + 0x2c ]
xor eax eax
cmp eax [ esi + 0x24 ]
mov [ ebp - 0xc ] ebx
jl r-xdata
cmp edi 0xffffffff
je r-xdata
mov ecx [ eax + 0x71a8 ]
push [ esi + 0x4d4 ]
add ecx [ esi + 0x4e8 ]
mov eax [ eax + 0x71ac ]
push [ esi + 0x4d0 ]
adc eax [ esi + 0x4ec ]
push eax
push ecx
mov ecx esi
call sub_40991d
mov eax [ ebp + 0xc ]
jg r-xdata
call sub_40efa5
mov eax edi
cmp [ esi + 0x518 ] 0x0
mov eax [ ebp - 0x8 ]
mov edi eax
je r-xdata
cmp [ ebx + 0x4 ] 0xffffffff
je r-xdata
push [ esi + 0x4 ]
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40adc9
mov edi [ esi + 0x4 ]
and [ esi + 0x4 ] 0x0
jmp r-xdata
mov eax [ esi + 0x20 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ esi + 0x20 ]
jbe r-xdata
test al 0xf
je r-xdata
or eax 0xffffffff
jmp r-xdata
push eax
push [ ebp - 0x4 ]
mov ecx ebx
call sub_405ca2
mov edi eax
mov eax [ esi + 0x38 ]
test eax eax
jne r-xdata
mov eax edi
cdq
lea ecx [ esi + 0x4e8 ]
add [ ecx ] eax
adc [ ecx + 0x4 ] edx
add [ ebp - 0x8 ] edi
add [ ebp - 0x4 ] edi
sub [ ebp + 0xc ] edi
sub [ esi + 0x20 ] eax
mov eax [ esi + 0x20 ]
sbb [ esi + 0x24 ] edx
or eax [ esi + 0x24 ]
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push eax
push [ ebp + 0x8 ]
lea ecx [ esi + 0x280 ]
call sub_402ec6
and eax 0xfffffff0
add eax 0x10
pop edi
pop esi
pop ebx
leave
retn 0x8
test [ eax + 0x8 ] 0x2
je r-xdata
lea eax [ ebx + 0x4ad8 ]
cmp [ esi + 0x4c6 ] al
je r-xdata
push edi
push [ ebp - 0x4 ]
lea ebx [ esi + 0x510 ]
push [ ebx ]
call sub_402de2
mov [ ebx ] eax
mov ebx [ ebp - 0xc ]
movzx eax [ esi + 0x4c4 ]
push eax
push 0x1
push esi
push ebx
call sub_4126d5
test al al
je r-xdata
mov [ esi + 0x4c7 ] 0x1
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
sub_409ba5
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
push edi
mov edi [ esp + 0x14 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] edi
je r-xdata
cmp [ esi + 0x29 ] 0x0
jne r-xdata
cmp edi [ esi + 0x10 ]
ja r-xdata
lea eax [ esi + 0x4f0 ]
add [ eax ] edi
adc [ eax + 0x4 ] 0x0
cmp [ esi + 0x2a ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
push edi
push ebx
call sub_405b8d
push edi
push ebx
push [ esi + 0x14 ]
call sub_40adc9
add [ esi + 0x14 ] edi
sub [ esi + 0x10 ] edi
jmp r-xdata
call sub_40efa5
pop edi
pop esi
pop ebx
retn 0x8
push edi
add esi 0x50c
push ebx
push [ esi ]
call sub_402de2
mov [ esi ] eax
sub_409c28
push ebp
mov ebp esp
mov eax 0x342c
call sub_401200
push edi
push 0x5c
push [ ebp + 0x8 ]
mov edi ecx
call sub_40b2e1
test eax eax
lea eax [ ebp - 0x142c ]
jne r-xdata
push [ ebp + 0x8 ]
push eax
call sub_40b147
push esi
lea ecx [ ebp - 0xc2c ]
call sub_405473
xor esi esi
push esi
push 0x1
lea eax [ ebp - 0x142c ]
push eax
push esi
lea ecx [ ebp - 0xc2c ]
call sub_40567b
test al al
jne r-xdata
push 0x400
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x5c
lea eax [ ebp - 0x142c ]
push eax
call sub_40b30e
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp + 0xb ] 0x0
mov [ ebp - 0x8 ] esi
push ebx
lea ecx [ ebp - 0xc2c ]
call sub_405658
jmp r-xdata
pop edi
leave
retn 0x4
add eax 0x2
mov eax [ ebp - 0x4 ]
cdq
push 0x0
push edx
push eax
lea ecx [ ebp - 0xc2c ]
call sub_405aee
push 0x80002
call sub_40acff
mov [ edi ] eax
lea ecx [ ebp - 0xc2c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc2c ]
call sub_405593
mov ebx eax
push 0x2000
lea eax [ ebp - 0x342c ]
push eax
lea ecx [ ebp - 0xc2c ]
call sub_405ca2
mov [ ebp - 0xc ] eax
xor esi esi
add eax 0xfffffff0
js r-xdata
pop esi
call sub_405658
pop ebx
push 0x80000
push eax
call sub_405ca2
cmp [ ebp + 0xb ] 0x0
mov [ edi + 0x4 ] eax
je r-xdata
mov eax [ ebp - 0xc ]
push 0x0
lea eax [ eax + ebx - 0x10 ]
push 0x0
push eax
lea ecx [ ebp - 0xc2c ]
call sub_405aee
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x80
jb r-xdata
cmp [ ebp + esi - 0x342c ] 0x2a
jne r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
call sub_40acff
mov esi eax
test esi esi
je r-xdata
shr eax 0x1
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp [ ebp + esi - 0x342c ] 0x2a
jne r-xdata
cmp [ ebp + esi - 0x342b ] 0x2a
jne r-xdata
lea ecx [ ebp - 0xc2c ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax + ecx ] 0x0
mov eax [ edi + 0x4 ]
inc eax
push eax
push esi
push [ edi ]
call sub_40f362
push [ edi ]
call sub_40ad18
mov [ edi ] esi
mov ecx [ edi + 0x4 ]
mov eax 0x40000
cmp ecx eax
ja r-xdata
cmp [ ebp + esi - 0x342c ] 0x52
jne r-xdata
lea eax [ ebp + esi - 0x3428 ]
cmp [ eax - 0x2 ] 0x2a
jne r-xdata
push 0xb
push r--data
lea eax [ ebp + esi - 0x342a ]
push eax
call sub_40b050
test eax eax
je r-xdata
mov ecx [ edi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
xor ecx ecx
xor ebx ebx
cmp [ edi + 0x4 ] ecx
jbe r-xdata
mov eax ecx
mov eax [ ebp - 0xc ]
inc esi
add eax 0xfffffff0
cmp esi eax
jle r-xdata
cmp [ ebp + esi - 0x342b ] 0x61
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xffffffe0
cmp esi ecx
jg r-xdata
add esi ebx
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
mov [ edi + 0x4 ] ecx
mov eax [ edi ]
movzx edx [ eax + ebx * 2 ]
inc ebx
test dx dx
je r-xdata
jmp r-xdata
push 0x4
push r--data
lea eax [ ebp + esi - 0x342a ]
push eax
call sub_40b050
test eax eax
je r-xdata
push 0xb
push r--data
push eax
call sub_40b282
test eax eax
je r-xdata
cmp dx 0x5c
jne r-xdata
mov [ ebp + 0xb ] 0x1
cmp dx 0xd
je r-xdata
movzx esi [ eax + ebx * 2 ]
sub esi 0x22
je r-xdata
push 0xc
cmp dx 0xa
jne r-xdata
push 0x22
sub esi 0x3a
je r-xdata
mov [ eax + ecx * 2 ] dx
inc ecx
cmp ebx [ edi + 0x4 ]
jb r-xdata
pop edx
push 0x5c
jmp r-xdata
sub esi 0x12
je r-xdata
inc ebx
jmp r-xdata
push 0xa
jmp r-xdata
sub esi 0x4
je r-xdata
push 0xd
jmp r-xdata
dec esi
dec esi
jne r-xdata
push 0x9
jmp r-xdata
sub_409ef2
push esi
mov esi [ ecx ]
movzx eax [ esi ]
push edi
test ax ax
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x7
lea eax [ edi + 0x2 ]
push eax
lea eax [ esi + 0x2 ]
push eax
call sub_40b282
test eax eax
jne r-xdata
cmp ax 0xc
je r-xdata
jmp r-xdata
cmp [ esi + 0x10 ] 0x3d
jne r-xdata
inc esi
inc esi
inc esi
inc esi
cmp [ esi ] 0xc
je r-xdata
cmp [ esi + 0x12 ] 0x22
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
mov eax esi
jmp r-xdata
cmp ax [ edi ]
jne r-xdata
pop edi
pop esi
retn 0x4
sub_409f7c
push ebp
mov ebp esp
mov eax 0x2014
call sub_401200
push ebx
mov ebx ecx
cmp [ ebx ] 0x0
push esi
push edi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax 0x0
mov ecx r--data
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
push eax
call sub_40b147
mov ecx r--data
dec eax
je r-xdata
push esi
lea eax [ ebp - 0x1014 ]
push eax
push [ ebp + 0x8 ]
call sub_40f330
lea eax [ ebp - 0x1014 ]
push eax
mov [ ebp - 0x15 ] 0x0
call sub_40ae97
push eax
lea eax [ ebp - 0x1014 ]
push eax
push edi
call sub_402de2
not eax
push eax
push r--data
lea eax [ ebp - 0x14 ]
push 0xa
push eax
call sub_40b3bb
add esp 0x10
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
call sub_409ef2
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x2014 ]
push eax
push [ ebp + 0x18 ]
call sub_40f330
lea eax [ ebp - 0x2014 ]
push eax
call sub_40ae97
push eax
lea eax [ ebp - 0x2014 ]
push eax
push edi
call sub_402de2
mov edi eax
mov ecx r--data
jmp r-xdata
dec eax
jne r-xdata
lea ebx [ eax + 0x14 ]
push 0xc
push ebx
call sub_40b2e1
test eax eax
je r-xdata
push 0x1
push ecx
push 0xffffffff
call sub_402de2
cmp [ ebp + 0x18 ] 0x0
mov edi eax
mov esi 0x1000
je r-xdata
mov ecx r--data
jmp r-xdata
mov esi 0xff
sub eax ebx
sar eax 0x1
mov esi eax
jmp r-xdata
mov edi [ ebp + 0xc ]
test esi esi
jbe r-xdata
neg eax
sbb eax eax
and eax ecx
mov esi eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
jbe r-xdata
push 0x22
xor eax eax
push edi
mov [ edi + esi * 2 ] ax
call sub_40b30e
test eax eax
je r-xdata
push esi
push ebx
push edi
call sub_40b177
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
sub_40a0c1
push ebp
mov ebp esp
sub esp 0x400
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push 0x1
push 0x200
push eax
push r--data
call sub_409f7c
push 0x2a
lea eax [ ebp - 0x400 ]
push eax
call sub_40b2e1
mov edi eax
push 0x64
pop ebx
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ecx ] ebx
mov [ esi ] ebx
lea eax [ ebp - 0x400 ]
push eax
call sub_40f6fc
mov esi [ ebp + 0xc ]
add edi 0x2
push edi
mov [ esi ] eax
call sub_40f6fc
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ecx ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_40a140
push ebp
mov ebp esp
sub esp 0x800
push esi
push edi
push 0x0
mov edi ecx
call [ GetModuleHandleW@IAT ]
push 0x5
mov esi r--data
push esi
push eax
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
mov eax r--data
push eax
push 0x1
push 0x400
lea ecx [ ebp - 0x800 ]
push ecx
push eax
mov ecx edi
call sub_409f7c
push esi
lea eax [ ebp - 0x800 ]
push eax
call sub_40b232
neg eax
sbb al al
inc al
mov [ edi + 0x10 ] al
mov [ edi + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
sub_40a1a4
push ebp
mov ebp esp
sub esp 0x850
push ebx
push esi
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x20 ] ecx
call sub_40a0c1
mov [ ebp - 0x1 ] al
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x50 ]
push eax
push [ ebp + 0x8 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x2c ]
mov eax [ ebp - 0x48 ]
inc ecx
inc esi
mov ebx ecx
mov edi esi
sub edi [ ebp - 0x44 ]
sub ebx eax
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi 0x400
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x8
call [ GetSystemMetrics@IAT ]
push 0x5
push [ ebp + 0x8 ]
sub edi eax
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
push esi
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
push [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push 0x1
push esi
lea eax [ ebp - 0x850 ]
push eax
push eax
call sub_409f7c
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
jmp r-xdata
mov esi 0x400
imul eax [ ebp - 0x10 ]
cdq
push 0x64
pop ebx
idiv ebx
add eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x44 ]
imul eax [ ebp - 0xc ]
cdq
idiv ebx
add eax edi
mov [ ebp - 0x18 ] eax
mov eax ecx
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov ebx eax
mov eax esi
sub eax [ ebp - 0x18 ]
sar ebx 0x1
add ebx [ ebp - 0x30 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
add esi [ ebp - 0x2c ]
test ebx ebx
jge r-xdata
test eax eax
jne r-xdata
test esi esi
jge r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0xfffffff0
push [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x204
call [ GetWindowLongW@IAT ]
test eax 0x800
jne r-xdata
xor esi esi
push esi
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x850 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push esi
push ebx
push 0x0
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x206
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push 0x1
push esi
lea eax [ ebp - 0x850 ]
push eax
push eax
call sub_409f7c
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextW@IAT ]
push 0x2
push [ ebp + 0x10 ]
call [ GetWindow@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax [ ebp - 0x8 ]
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x34 ]
sub eax [ ebp - 0x3c ]
push 0x204
inc eax
imul eax [ ebp - 0xc ]
cdq
push 0x64
pop ecx
idiv ecx
push eax
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x40 ]
inc eax
imul eax [ ebp - 0x10 ]
cdq
idiv ecx
push eax
mov eax [ ebp - 0x3c ]
sub eax edi
sub eax [ ebp - 0x2c ]
imul eax [ ebp - 0xc ]
cdq
idiv ecx
push eax
mov eax ebx
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x40 ]
sar ecx 0x1
sub eax ecx
sub eax [ ebp - 0x30 ]
push 0x64
imul eax [ ebp - 0x10 ]
pop ecx
cdq
idiv ecx
push eax
push 0x0
push [ ebp + 0x10 ]
call [ SetWindowPos@IAT ]
inc [ ebp + 0x8 ]
sub_40a407
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x8
jb r-xdata
push ebx
push ebp
shl eax 0xa
add eax rw-data
push esi
mov esi eax
xor eax eax
mov ebp rw-data
push edi
mov ecx ebp
mov [ esi ] ax
call sub_409eea
mov ebx [ LoadStringW@IAT ]
mov edi 0x200
test al al
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push edi
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call ebx
push edi
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call ebx
test eax eax
jne r-xdata
push 0x0
push 0x0
push edi
push esi
push esi
mov ecx ebp
call sub_409f7c
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40a483
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push esi
mov esi [ eax ]
xor esi [ ecx ]
mov [ edx ] esi
mov esi [ eax + 0x4 ]
xor esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x8 ]
xor esi [ ecx + 0x8 ]
mov [ edx + 0x8 ] esi
mov eax [ eax + 0xc ]
xor eax [ ecx + 0xc ]
pop esi
mov [ edx + 0xc ] eax
retn 0xc
sub_40a4b5
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x20
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x8 ] ecx
call sub_40adc9
xor eax eax
push 0x4
xor ecx ecx
mov [ ebp + 0x8 ] eax
xor ebx ebx
pop edx
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx edx
jge r-xdata
cmp ecx edx
lea esi [ ebp + ebx * 4 - 0x28 ]
mov [ ebp - 0x4 ] esi
cmp ebx edx
jl r-xdata
inc eax
mov [ ebp + 0x8 ] eax
xor ecx ecx
jne r-xdata
mov edi [ ebp - 0x8 ]
lea esi [ ecx + eax * 4 ]
lea edi [ edi + esi * 4 + 0x14 ]
mov esi [ ebp - 0x4 ]
add [ ebp - 0x4 ] edx
inc ebx
inc ecx
cmp ebx edx
movsd [ edi ] [ esi ]
jl r-xdata
cmp eax 0xa
jg r-xdata
cmp eax 0xa
jg r-xdata
cmp ecx edx
jge r-xdata
mov [ ebp - 0x4 ] rw-data
mov bl [ eax + esi - 0x4 ]
xor [ eax + esi ] bl
inc esi
cmp esi edx
jl r-xdata
add eax edx
dec edi
jne r-xdata
xor esi esi
xor ebx ebx
cmp ebx edx
jge r-xdata
cmp ecx edx
lea eax [ ebp + ebx * 4 - 0x28 ]
cmp ebx edx
jl r-xdata
inc [ ebp + 0x8 ]
xor ecx ecx
jne r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x8 ]
lea esi [ ecx + esi * 4 ]
lea edi [ edi + esi * 4 + 0x14 ]
mov esi eax
inc ebx
add eax edx
inc ecx
cmp ebx edx
movsd [ edi ] [ esi ]
jl r-xdata
cmp [ ebp + 0x8 ] 0xa
jg r-xdata
cmp [ ebp + 0x8 ] 0xa
jle r-xdata
cmp ecx edx
jge r-xdata
movzx esi [ ebp - 0x1b ]
mov al [ ebp - 0x28 ]
xor al [ esi + rw-data ]
movzx esi [ ebp - 0x1a ]
mov bl [ esi + rw-data ]
movzx esi [ ebp - 0x19 ]
xor [ ebp - 0x27 ] bl
mov bl [ esi + rw-data ]
movzx esi [ ebp - 0x1c ]
xor [ ebp - 0x26 ] bl
mov bl [ esi + rw-data ]
mov esi [ ebp - 0x4 ]
xor al [ esi ]
xor [ ebp - 0x25 ] bl
inc [ ebp - 0x4 ]
push 0x3
mov [ ebp - 0x28 ] al
lea eax [ ebp - 0x24 ]
pop edi
sub_40a5ca
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
add ecx 0x24
push 0x4
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] 0x9
pop edi
movzx edx [ ecx + 0x1 ]
movzx ebx [ ecx - 0x1 ]
mov dl [ eax + edx * 4 + rw-data ]
xor dl [ eax + ebx * 4 + rw-data ]
movzx ebx [ ecx - 0x2 ]
xor dl [ eax + ebx * 4 + rw-data ]
movzx ebx [ ecx ]
xor dl [ eax + ebx * 4 + rw-data ]
add ecx edi
mov [ esi ] dl
add esi edi
dec [ ebp - 0x8 ]
jne r-xdata
inc eax
cmp eax edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
lea esi [ ebp + eax - 0x1c ]
add ecx 0x2
mov [ ebp - 0x8 ] edi
push 0x10
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x4 ]
call sub_40adc9
add [ ebp - 0x4 ] 0x10
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
leave
retn
sub_40a649
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0xb4 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40a483
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx ecx [ ebp - 0x3 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x6 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x9 ]
xor eax [ ecx * 4 + rw-data ]
mov esi [ ebp + 0xc ]
movzx ecx [ ebp - 0xf ]
mov [ esi ] eax
movzx eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x2 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x5 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xb ]
mov [ esi + 0x4 ] eax
movzx eax [ ebp - 0x8 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xe ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x1 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x7 ]
mov [ esi + 0x8 ] eax
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xa ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xd ]
xor eax [ ecx * 4 + rw-data ]
lea ebx [ edi + 0xa4 ]
mov [ esi + 0xc ] eax
mov [ ebp + 0x8 ] 0x8
push ebx
push esi
lea eax [ ebp - 0x10 ]
push eax
call sub_40a483
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx ecx [ ebp - 0x3 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x6 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x9 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xf ]
mov [ esi ] eax
movzx eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x2 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x5 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xb ]
mov [ esi + 0x4 ] eax
movzx eax [ ebp - 0x8 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xe ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x1 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x7 ]
mov [ esi + 0x8 ] eax
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xa ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xd ]
xor eax [ ecx * 4 + rw-data ]
sub ebx 0x10
dec [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
jne r-xdata
lea eax [ edi + 0x24 ]
push eax
push esi
lea eax [ ebp - 0x10 ]
push eax
call sub_40a483
movzx eax [ ebp - 0x10 ]
mov al [ eax + rw-data ]
mov [ esi ] al
movzx eax [ ebp - 0x3 ]
mov al [ eax + rw-data ]
mov [ esi + 0x1 ] al
movzx eax [ ebp - 0x6 ]
mov al [ eax + rw-data ]
mov [ esi + 0x2 ] al
movzx eax [ ebp - 0x9 ]
mov al [ eax + rw-data ]
mov [ esi + 0x3 ] al
movzx eax [ ebp - 0xc ]
mov al [ eax + rw-data ]
mov [ esi + 0x4 ] al
movzx eax [ ebp - 0xf ]
mov al [ eax + rw-data ]
mov [ esi + 0x5 ] al
movzx eax [ ebp - 0x2 ]
mov al [ eax + rw-data ]
mov [ esi + 0x6 ] al
movzx eax [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov [ esi + 0x7 ] al
movzx eax [ ebp - 0x8 ]
mov al [ eax + rw-data ]
mov [ esi + 0x8 ] al
movzx eax [ ebp - 0xb ]
mov al [ eax + rw-data ]
mov [ esi + 0x9 ] al
movzx eax [ ebp - 0xe ]
mov al [ eax + rw-data ]
mov [ esi + 0xa ] al
movzx eax [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ esi + 0xb ] al
movzx eax [ ebp - 0x4 ]
mov al [ eax + rw-data ]
mov [ esi + 0xc ] al
movzx eax [ ebp - 0x7 ]
mov al [ eax + rw-data ]
mov [ esi + 0xd ] al
movzx eax [ ebp - 0xa ]
mov al [ eax + rw-data ]
mov [ esi + 0xe ] al
movzx eax [ ebp - 0xd ]
mov al [ eax + rw-data ]
add edi 0x14
push edi
push esi
push esi
mov [ esi + 0xf ] al
call sub_40a483
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40a8f3
push ebp
mov ebp esp
sub esp 0x304
push ebx
push esi
xor eax eax
xor ecx ecx
inc eax
mov esi 0x11b
push edi
mov edx eax
and dl 0x80
movsx edx dl
mov [ ebp + ecx - 0x304 ] al
mov [ ebp + ecx - 0x205 ] al
mov [ ebp + eax - 0x104 ] cl
inc ecx
neg edx
sbb edx edx
and edx esi
lea edi [ eax + eax ]
xor edx edi
xor eax edx
cmp eax 0x1
jne r-xdata
xor ecx ecx
pop edi
mov edx eax
and dl 0x80
movsx edx dl
neg edx
sbb edx edx
mov [ ecx + rw-data ] al
and edx esi
add eax eax
xor eax edx
inc ecx
cmp ecx 0x1e
jb r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test bl bl
je r-xdata
xor eax eax
movzx eax bl
movzx eax [ ebp + eax - 0x104 ]
lea ecx [ ebp - 0x205 ]
sub ecx eax
movzx eax [ ecx ]
jmp r-xdata
xor edx edx
movzx edx cl
movzx edx [ ebp + edx - 0x104 ]
movzx edx [ ebp + edx - 0x2eb ]
jmp r-xdata
lea ecx [ eax + eax ]
xor ecx eax
add ecx ecx
xor ecx eax
add ecx ecx
xor ecx eax
add ecx ecx
xor eax ecx
mov ecx eax
sar ecx 0x8
xor cl al
xor cl 0x63
lea eax [ ebx * 4 ]
lea edx [ eax + rw-data ]
mov [ ebx + rw-data ] cl
mov [ edx + 0x1 ] cl
mov [ edx ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
je r-xdata
xor ecx ecx
movzx ecx cl
movzx ecx [ ebp + ecx - 0x104 ]
movzx ecx [ ebp + ecx - 0x303 ]
jmp r-xdata
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
test cl cl
je r-xdata
xor bl bl
mov ecx esi
shl ecx 0x3
xor ecx esi
shl ecx 0x2
xor ecx esi
add ecx ecx
mov edx ecx
sar edx 0x8
movzx edx dl
movzx ecx cl
xor edx ecx
xor edx 0x5
movzx ecx [ ebp + edx - 0x104 ]
lea edx [ ebp - 0x205 ]
sub edx ecx
mov bl [ edx ]
jmp r-xdata
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
movzx esi bl
mov ecx esi
shl ecx 0x3
xor ecx esi
shl ecx 0x2
xor ecx esi
add ecx ecx
mov edx ecx
sar edx 0x8
xor dl cl
xor dl 0x5
je r-xdata
xor edx edx
movzx ecx bl
movzx ecx [ ebp + ecx - 0x104 ]
movzx edx [ ebp + ecx - 0x29c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] bl
test bl bl
je r-xdata
xor edx edx
movzx edx [ ebp + esi - 0x104 ]
movzx edx [ ebp + edx - 0x23d ]
jmp r-xdata
movzx esi bl
mov ecx esi
shl ecx 0x2
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
test bl bl
je r-xdata
xor edx edx
movzx edx [ ebp + esi - 0x104 ]
movzx edx [ ebp + edx - 0x216 ]
jmp r-xdata
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
test bl bl
je r-xdata
xor edx edx
movzx edx [ ebp + esi - 0x104 ]
movzx edx [ ebp + edx - 0x225 ]
jmp r-xdata
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
test bl bl
je r-xdata
mov ebx [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x100
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
jl r-xdata
sub_40abeb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x20
push esi
mov esi ecx
push ebx
mov [ esi ] eax
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov bl [ eax + edi ]
mov ecx eax
mov edx eax
shr ecx 0x2
and edx 0x3
inc eax
lea edx [ ebp + edx - 0x20 ]
mov [ edx + ecx * 4 ] bl
cmp eax 0x10
jb r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ ebp + 0x10 ]
mov cl [ eax + ecx ]
mov [ esi + eax + 0x4 ] cl
inc eax
cmp eax 0x10
jl r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx esi
call sub_40a4b5
cmp [ esi ] 0x1
jne r-xdata
pop esi
leave
retn 0xc
mov ecx esi
call sub_40a5ca
sub_40ac4a
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
test edi edi
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
jbe r-xdata
lea eax [ ebx + 0x4 ]
push 0x10
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40adc9
shr esi 0x4
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] esi
test esi esi
jbe r-xdata
push 0x10
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
call sub_40adc9
mov eax [ ebp - 0x4 ]
shl eax 0x4
jmp r-xdata
mov esi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x14 ]
push eax
push edi
mov ecx ebx
call sub_40a649
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push eax
call sub_40a483
mov eax [ edi ]
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xc ] eax
add edi 0x10
add esi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
sub_40ad37
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
call sub_40acff
jmp r-xdata
pop ebp
retn 0x8
sub_40ad63
push ebp
mov ebp esp
push ecx
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call [ OemToCharBuffA@IAT ]
movzx eax [ ebp + 0x8 ]
push eax
call [ CharUpperA@IAT ]
mov [ ebp - 0x4 ] eax
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ CharToOemBuffA@IAT ]
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_40ad9c
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_40adc9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_40adfb
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jbe r-xdata
sub_40ae4c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40adc9
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
sub_40ae97
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
sub_40aec0
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_40aeec
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_40ae97
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
leave
retn 0x8
sub_40af29
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
test eax eax
je r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
movsx eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
leave
retn 0x8
sub_40af8a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
test eax eax
je r-xdata
sub_40afbe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_40affc
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
inc eax
je r-xdata
sub_40b050
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jbe r-xdata
sub_40b0cb
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40ae97
add eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_40b11d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
inc ecx
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
sub_40b147
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cx [ ecx ]
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
inc ecx
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_40b177
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cx [ ecx ]
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
inc ecx
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_40b1d7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40b11d
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax * 2 ]
mov [ ebp + 0x8 ] eax
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cx [ ecx ]
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
inc ecx
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_40b232
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
xor edx edx
cmp eax ecx
setge dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jne r-xdata
pop ebp
retn 0x8
sub_40b282
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_40b2e1
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_40b30e
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_40b11d
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
leave
retn 0x8
sub_40b34f
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
push [ ebp + 0xc ]
call sub_40b2e1
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_40b394
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ wvsprintfA@IAT ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40ae97
leave
retn
sub_40b3bb
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ wvsprintfW@IAT ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40b11d
leave
retn
sub_40b3e2
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x30
jl r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x39
jg r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_40b420
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
imul eax eax 0xa
mov ecx [ ebp + 0x8 ]
movsx ecx [ ecx ]
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call sub_40b3e2
test eax eax
je r-xdata
sub_40b46b
push ebp
mov ebp esp
sub esp 0x20
push rw-data
push 0x101
call sub_40b466
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40f7da
mov [ ebp - 0x14 ] eax
jmp r-xdata
and [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_403481
mov [ ebp - 0x18 ] eax
jmp r-xdata
push rw-data
push 0xc
call sub_40b466
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
call sub_409c13
mov [ ebp - 0x1c ] eax
jmp r-xdata
push rw-data
push 0x14
call sub_40b466
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
and [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_402d7c
mov [ ebp - 0x20 ] eax
jmp r-xdata
push rw-data
push 0x4f18
call sub_40b466
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
leave
retn
sub_40b51c
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
retn
mov al [ esp + 0x8 ]
movzx eax al
imul eax eax 0x1010101
mov edx ecx
push ebx
push edi
mov edi [ esp + 0xc ]
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_40b54c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
inc eax
inc ecx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_40b594
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx edi
mov [ esi ] edi
call sub_405593
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0xc1c ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_40b5d8
push ebp
mov ebp esp
sub esp 0x1c
push esi
xor esi esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
sub_40b617
push ebp
mov ebp esp
sub esp 0x12c
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi 0x400
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ec6d
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push ebx
push esi
xor eax eax
push rw-data
mov [ esi ] ax
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push edi
call [ GetNumberFormatW@IAT ]
xor eax eax
pop edi
mov [ esi + ebx * 2 - 0x2 ] ax
pop esi
pop ebx
leave
retn 0x10
push 0x64
lea eax [ ebp - 0x12c ]
push eax
push 0xf
push edi
call [ GetLocaleInfoW@IAT ]
mov ax [ ebp - 0x12c ]
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] ax
mov [ rw-data ] rw-data
sub_40b69e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xf4240
jbe r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
shr eax 0x8
shr [ ebp + 0xc ] 0x8
cmp [ ebp + 0xc ] eax
jae r-xdata
xor eax eax
jmp r-xdata
imul eax eax 0x64
xor edx edx
div [ ebp + 0xc ]
push 0x64
pop eax
jmp r-xdata
pop ebp
retn 0x8
sub_40b6d2
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
movzx eax [ esi ]
test ax ax
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
mov [ ebp + 0xb ] 0x0
movzx eax [ esi ]
cmp ax 0x2c
jne r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ecx ] dx
jne r-xdata
mov [ edi ] ax
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov bl [ ebp + 0xb ]
test bl bl
je r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push 0x22
pop edx
cmp ax dx
jne r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
xor eax eax
mov [ edi ] ax
push edx
push ecx
call sub_40b2e1
test eax eax
setne [ ebp + 0xb ]
mov [ ebp + 0xb ] 0x0
jmp r-xdata
mov esi ecx
mov [ edi ] dx
jmp r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov eax esi
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
push eax
call sub_40eba8
test al al
jne r-xdata
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp bl [ ebp + 0xb ]
jne r-xdata
inc edi
inc edi
movzx eax [ esi + 0x4 ]
cmp ax 0x2c
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
test ax ax
je r-xdata
sub_40b796
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListW@IAT ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
leave
retn 0x8
sub_40b7d0
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
xor ecx ecx
mov [ eax ] cx
retn 0x4
push esi
mov [ eax ] dx
inc eax
inc eax
inc ecx
inc ecx
movzx esi [ ecx + 0x2 ]
cmp si dx
jne r-xdata
movzx edx [ ecx ]
cmp dx 0x5c
jne r-xdata
pop esi
cmp si 0x6e
jne r-xdata
push 0x5c
push 0xa
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
pop edx
mov [ eax ] dx
inc eax
inc eax
add ecx 0x4
jmp r-xdata
sub_40b81c
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
xor edi edi
push edi
call [ GetDC@IAT ]
mov esi [ CreateCompatibleDC@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call esi
push [ ebp - 0x8 ]
mov ebx eax
call esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x18
push [ ebp + 0x8 ]
call [ GetObjectW@IAT ]
mov eax [ ebp - 0x20 ]
imul eax [ ebp + 0xc ]
cdq
idiv [ ebp - 0x24 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ CreateCompatibleBitmap@IAT ]
push [ ebp + 0x8 ]
mov esi [ SelectObject@IAT ]
push ebx
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
push [ ebp - 0x4 ]
call esi
push 0xcc0020
push [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x24 ]
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push edi
push [ ebp - 0x4 ]
call [ StretchBlt@IAT ]
push [ ebp + 0x8 ]
push ebx
call esi
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call esi
mov esi [ DeleteDC@IAT ]
push ebx
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
push edi
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebp + 0x10 ] eax
sub_40b8e1
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_40b924
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_40b967
push 0x64
call sub_40b8e1
cmp eax 0x7d
jge r-xdata
xor eax eax
inc eax
retn
push 0x64
call sub_40b924
cmp eax 0x7d
jge r-xdata
xor eax eax
retn
sub_40b986
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_40b11d
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x3 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40b413
pop ecx
mov esi eax
push ebx
lea eax [ esi + 0x2 ]
push eax
call sub_40b147
push 0x22
pop eax
mov [ esi + edi * 2 + 0x2 ] ax
mov [ esi ] ax
push esi
xor eax eax
push ebx
mov [ esi + edi * 2 + 0x4 ] ax
call sub_40b147
push esi
call sub_40b406
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x4
sub_40b9e1
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push 0x68
push [ rw-data ]
call [ GetDlgItem@IAT ]
cmp [ rw-data ] 0x0
mov esi [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x4 ] edi
mov ebx 0xb1
jne r-xdata
mov edi 0x5f5e100
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x60 ]
push eax
push 0x0
push 0x43a
push [ ebp - 0x4 ]
mov [ ebp - 0x60 ] 0x5c
call esi
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x47 ] 0x0
mov [ ebp - 0x5c ] eax
je r-xdata
mov ecx [ rw-data ]
call sub_406a92
push 0x5
push edi
call [ ShowWindow@IAT ]
push 0xffffffff
push 0x0
push ebx
push edi
call esi
push r--data
push 0x0
push 0xc2
push edi
call esi
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x60 ]
push ecx
push eax
push 0x444
push [ ebp - 0x4 ]
call esi
push [ ebp + 0xc ]
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
and ecx 0xbfffffff
or ecx eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x4c ] 0xa0
mov [ ebp - 0x5c ] 0x40000001
push r--data
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x58 ]
and eax 0xfffffffe
or eax 0x40000000
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x60 ]
push eax
push 0x1
push 0x444
push [ ebp - 0x4 ]
call esi
sub_40baf5
push ebp
mov ebp esp
mov eax 0x1800
call sub_401200
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
inc [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
leave
retn
lea ecx [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x1800 ]
push eax
call [ wvsprintfW@IAT ]
lea eax [ ebp - 0x1800 ]
push eax
push 0x1
call sub_40b9e1
sub_40bb37
push ebp
mov ebp esp
mov eax 0x1400
call sub_401200
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
cmp [ ebp + 0x18 ] 0x0
lea eax [ ebp - 0x800 ]
push eax
je r-xdata
push 0x65
push 0x66
jmp r-xdata
call sub_40a407
push eax
lea eax [ ebp - 0x1400 ]
push 0x600
push eax
call sub_40b3bb
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x65
push [ rw-data ]
call [ SetDlgItemTextW@IAT ]
call sub_40b5d8
xor eax eax
cmp [ rw-data ] al
sete al
leave
retn 0x14
sub_40bbb1
push ebp
lea ebp [ esp - 0x68 ]
mov eax 0x1250
call sub_401200
push ebx
push edi
mov edi [ ebp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x7c ]
push [ ebp + 0x78 ]
push [ ebp + 0x74 ]
push edi
call sub_4031b0
test al al
je r-xdata
mov eax [ ebp + 0x74 ]
sub eax 0x110
push esi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x6c
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov esi 0x400
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x11e8 ]
push eax
call sub_40ebed
push esi
push ebx
lea eax [ ebp - 0x11e8 ]
push eax
call sub_4078cf
lea eax [ ebp - 0x11e8 ]
push eax
push 0x65
push edi
mov edi [ SetDlgItemTextW@IAT ]
call edi
push 0x100
push 0x2b4
lea eax [ ebp - 0x9e8 ]
push eax
push ebx
lea eax [ ebp - 0x11e8 ]
push eax
call [ SHGetFileInfoW@IAT ]
push ebx
push [ ebp - 0x9e8 ]
push 0x170
push 0x66
push [ ebp + 0x70 ]
call [ SendDlgItemMessageW@IAT ]
lea eax [ ebp - 0x334 ]
push eax
lea eax [ ebp - 0x11e8 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x74 ] eax
cmp eax 0xffffffff
je r-xdata
dec eax
jne r-xdata
pop edi
pop ebx
add ebp 0x68
leave
retn 0x10
xor eax eax
lea eax [ ebp + 0x48 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x48 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x80 ]
push eax
push ebx
lea eax [ ebp + 0x58 ]
push eax
push 0x2
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea eax [ ebp + 0x58 ]
push eax
push ebx
push esi
call [ GetDateFormatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x81
call sub_40a407
push eax
push r--data
mov ebx 0x200
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40b3bb
add esp 0x18
lea eax [ ebp - 0x734 ]
push eax
push 0x6a
push [ ebp + 0x70 ]
call edi
push [ ebp + 0x74 ]
call [ FindClose@IAT ]
test [ ebp - 0x334 ] 0x10
jne r-xdata
movzx eax [ ebp + 0x78 ]
push 0x2
pop esi
sub eax esi
je r-xdata
push 0x0
push [ ebp - 0x9e8 ]
push 0x170
push 0x67
push [ ebp + 0x70 ]
call [ SendDlgItemMessageW@IAT ]
lea eax [ ebp + 0x50 ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
call [ DosDateTimeToFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x50 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x80 ]
push eax
push 0x0
lea eax [ ebp + 0x58 ]
push eax
push 0x2
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea eax [ ebp + 0x58 ]
push eax
push 0x0
push esi
call [ GetDateFormatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x81
call sub_40a407
push eax
push r--data
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40b3bb
add esp 0x18
lea eax [ ebp - 0x734 ]
push eax
push 0x6b
push [ ebp + 0x70 ]
call edi
test [ ebp - 0x334 ] 0x10
mov eax [ rw-data ]
mov ecx [ rw-data ]
je r-xdata
push 0x32
lea eax [ ebp - 0xe4 ]
push eax
push 0x1
push 0x0
push 0x0
push [ ebp - 0x318 ]
call sub_401030
mov ecx [ ebp - 0x314 ]
xor ebx ebx
add eax ecx
adc edx ebx
push edx
push eax
call sub_40b617
push 0x80
call sub_40a407
push eax
lea eax [ ebp - 0xe4 ]
push eax
push r--data
mov ebx 0x200
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40b3bb
add esp 0x14
lea eax [ ebp - 0x734 ]
push eax
push 0x68
push [ ebp + 0x70 ]
call edi
push 0x5
sub eax 0x6a
je r-xdata
push 0x32
lea edx [ ebp - 0xe4 ]
push edx
push eax
push ecx
call sub_40b617
push 0x80
call sub_40a407
push eax
lea eax [ ebp - 0xe4 ]
push eax
push r--data
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40b3bb
add esp 0x14
lea eax [ ebp - 0x734 ]
push eax
push 0x69
push [ ebp + 0x70 ]
call edi
mov edx ecx
or edx eax
je r-xdata
push esi
push edi
call [ EndDialog@IAT ]
xor eax eax
inc eax
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
xor esi esi
inc esi
jmp r-xdata
dec eax
je r-xdata
pop esi
push ebx
push ebx
push 0x171
push 0x66
push edi
call [ SendDlgItemMessageW@IAT ]
cmp eax ebx
je r-xdata
dec eax
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
pop esi
push 0x3
jmp r-xdata
dec eax
je r-xdata
push 0x6
jmp r-xdata
dec eax
jne r-xdata
sub_40befd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4031b0
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push esi
push 0x65
mov [ rw-data ] esi
mov esi [ SetDlgItemTextW@IAT ]
push edi
call esi
push [ rw-data ]
push 0x66
push edi
call esi
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push 0x400
push [ rw-data ]
push 0x66
push edi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub_40bf86
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4031b0
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push [ ebp + 0x14 ]
push 0x66
push esi
call [ SetDlgItemTextW@IAT ]
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop esi
pop ebp
retn 0x10
push 0x80
push rw-data
push 0x65
push esi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push esi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub_40c020
push ebp
mov ebp esp
mov eax 0x2000
call sub_401200
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
push esi
call [ GetLastError@IAT ]
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x2000 ]
push eax
call [ wvsprintfW@IAT ]
lea eax [ ebp - 0x2000 ]
push eax
push r--data
call sub_40baf5
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
push esi
call [ SetLastError@IAT ]
sub_40c09a
push ebp
mov ebp esp
mov eax 0x1e60
call sub_401200
push esi
call sub_40eacf
push r--data
push rw-data
call sub_40af8a
mov ecx [ rw-data ]
push r--data
call sub_40ef41
push [ ebp + 0x8 ]
push rw-data
call sub_40b147
push [ ebp + 0x8 ]
mov esi rw-data
push 0x0
mov ecx esi
call sub_402aa2
push 0x4
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov al [ rw-data ]
mov [ rw-data ] al
mov al [ rw-data ]
lea ecx [ ebp - 0x1e60 ]
mov [ rw-data ] 0x1
mov [ rw-data ] al
call sub_403bb9
push esi
lea ecx [ ebp - 0x1e60 ]
call sub_404db0
lea ecx [ ebp - 0x1e60 ]
call sub_403cbc
pop esi
leave
retn 0x4
sub_40c13e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4031b0
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov [ rw-data ] esi
push esi
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push 0x400
push [ rw-data ]
push 0x65
push edi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub eax 0x64
je r-xdata
push 0x0
push [ rw-data ]
call sub_407bcb
push eax
push [ rw-data ]
push 0x7b
call sub_40a407
push eax
push edi
call sub_402878
test al al
je r-xdata
push [ rw-data ]
jmp r-xdata
push 0x65
push edi
call [ SetDlgItemTextW@IAT ]
sub_40c1f1
push ebp
mov ebp esp
mov eax 0x1400
call sub_401200
cmp [ ebp + 0x8 ] 0x54
je r-xdata
mov [ ebp + 0x8 ] 0x20b
cmp [ ebp + 0x8 ] 0x58
jne r-xdata
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
call sub_407bcb
push eax
push [ ebp + 0x8 ]
call sub_40a407
push eax
lea eax [ ebp - 0x1400 ]
push 0x600
push eax
call sub_40b3bb
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x0
call sub_40b9e1
leave
retn 0xc
mov [ ebp + 0x8 ] 0x79
jmp r-xdata
sub_40c26d
push ebp
mov ebp esp
sub esp 0x804
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov esi 0x400
push esi
lea eax [ ebp - 0x804 ]
push eax
push [ ebp + 0x8 ]
jmp r-xdata
call sub_40ed03
mov edi eax
test edi edi
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
pop edi
pop esi
leave
retn 0x4
push esi
lea eax [ ebp - 0x804 ]
push eax
push edi
cmp [ ebp - 0x804 ] 0x2f
je r-xdata
movzx eax [ ebp - 0x802 ]
push eax
call sub_40f695
sub eax 0x44
je r-xdata
cmp [ ebp - 0x804 ] 0x2d
jne r-xdata
push esi
lea eax [ ebp - 0x800 ]
push eax
push rw-data
dec eax
je r-xdata
movzx eax [ ebp - 0x800 ]
push eax
call sub_40f695
cmp eax 0x4c
jne r-xdata
sub eax 0xb
je r-xdata
cmp [ ebp - 0x7fe ] 0x0
jne r-xdata
push 0x80
lea eax [ ebp - 0x800 ]
push eax
push rw-data
jmp r-xdata
sub eax 0x3
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call sub_40ebed
movzx eax [ ebp - 0x800 ]
push eax
call sub_40f695
sub eax 0x0
je r-xdata
mov [ rw-data ] 0x1
sub eax 0x31
je r-xdata
dec eax
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
sub eax 0x1e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push esi
lea eax [ ebp - 0x7fe ]
push eax
push rw-data
jmp r-xdata
sub_40c392
push ebp
mov ebp esp
mov eax 0x2000
call sub_401200
push ebx
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ebx ] 0x0
test edi edi
je r-xdata
mov [ eax ] 0x0
xor eax eax
movzx eax [ edi ]
test ax ax
je r-xdata
push esi
xor esi esi
xor ecx ecx
cmp ax 0xd
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
inc edi
cmp ax 0xa
je r-xdata
mov [ edx ] ax
mov eax [ ebp + 0x14 ]
inc edx
add eax 0xfffffffe
inc edx
cmp ecx eax
jg r-xdata
test esi esi
jne r-xdata
mov eax edi
pop esi
jmp r-xdata
mov [ ebx ] ax
test esi esi
je r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ edx ] ax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
jmp r-xdata
movzx eax [ edi ]
inc ecx
test ax ax
jne r-xdata
test ebx ebx
je r-xdata
pop edi
pop ebx
leave
retn 0x10
push 0x1000
lea eax [ ebp - 0x2000 ]
push eax
push esi
call [ ExpandEnvironmentStringsW@IAT ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x2000 ]
push eax
push ebx
call sub_40ebed
xor eax eax
mov [ esi ] ax
movzx eax ax
inc edi
inc edi
cmp ax 0x3d
jne r-xdata
jmp r-xdata
mov esi edx
jmp r-xdata
mov [ ebx ] 0x1
sub_40c468
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ WaitForSingleObject@IAT ]
push edi
push 0xa
push [ ebp + 0x8 ]
call esi
mov edi 0x102
jmp r-xdata
cmp eax edi
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
push 0xa
push [ ebp + 0x8 ]
call esi
pop edi
pop esi
leave
retn 0x4
sub_40c4a7
push ebp
mov ebp esp
sub esp 0x820
push 0x400
lea eax [ ebp - 0x820 ]
push eax
call sub_412ae4
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
push 0x6
push [ rw-data ]
lea eax [ ebp - 0x820 ]
push eax
call sub_407bcb
push eax
call sub_40f625
test eax eax
jne r-xdata
push r--data
call sub_412ad1
lea eax [ ebp - 0x820 ]
push eax
call sub_40b11d
xor ecx ecx
push 0x1e
mov [ ebp + eax * 2 - 0x81e ] cx
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_40ad9c
push 0x14
pop eax
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x820 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x3
call [ SHFileOperationW@IAT ]
sub_40c537
push ebp
mov ebp esp
mov eax 0x2004
call sub_401200
push ebx
push esi
push 0x20000
call sub_40acff
mov esi eax
test esi esi
jne r-xdata
xor eax eax
mov [ esi ] ax
xor ebx ebx
jmp r-xdata
mov ecx rw-data
call sub_403495
push 0x1000
lea eax [ ebp - 0x1 ]
push eax
push 0x0
push [ edi ]
xor ecx ecx
lea edx [ ebp - 0x2004 ]
call sub_40c392
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x2004 ] 0x7d
je r-xdata
cmp [ ebp - 0x2004 ] 0x7b
je r-xdata
lea eax [ ebp - 0x2004 ]
push eax
call sub_40b11d
add eax ebx
cmp eax 0xfffb
ja r-xdata
lea eax [ ebp - 0x2004 ]
push eax
push esi
call sub_40b1b9
push esi
call sub_40b11d
mov ebx eax
test ebx ebx
jbe r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea eax [ esi + ebx * 2 - 0x2 ]
push r--data
lea eax [ esi + ebx * 2 ]
push eax
call sub_40b147
dec ebx
dec eax
dec eax
test ebx ebx
ja r-xdata
cmp [ eax ] 0x20
jne r-xdata
sub_40c600
push ebx
xor ebx ebx
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
cmp eax ebx
je r-xdata
push 0x7d
call sub_40a407
push eax
push 0x2
push [ rw-data ]
call [ SetDlgItemTextW@IAT ]
cmp [ rw-data ] bl
pop ebx
je r-xdata
push 0x1
push eax
call [ ShowWindow@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
retn
jmp sub_40c4a7
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push 0x1
push 0x111
push [ rw-data ]
call [ SendMessageW@IAT ]
jmp r-xdata
push ebx
call [ Sleep@IAT ]
call sub_40b5d8
sub_40c698
push [ esp + 0x4 ]
push esi
call sub_40b147
xor ecx ecx
cmp [ esi ] cx
je r-xdata
retn 0x4
mov eax esi
push 0x25
pop edx
mov [ eax ] dx
cmp dx 0x5c
je r-xdata
movzx edx [ eax ]
cmp dx 0x3a
je r-xdata
cmp dx 0x2f
jne r-xdata
inc ecx
lea eax [ esi + ecx * 2 ]
cmp [ eax ] 0x0
jne r-xdata
sub_40c6d3
push ebp
mov ebp esp
sub esp 0x808
push ebx
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
pop ebx
leave
retn 0x4
cmp [ rw-data ] bx
je r-xdata
push esi
push rw-data
lea esi [ ebp - 0x808 ]
call sub_40c698
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x20006
push ebx
push ebx
push ebx
push r--data
push 0x80000001
call [ RegCreateKeyExW@IAT ]
pop esi
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_40b11d
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x808 ]
push 0x1
push ebx
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40c758
push ebp
mov ebp esp
mov eax 0x100c
call sub_401200
cmp [ rw-data ] 0x0
je r-xdata
leave
retn 0x8
push esi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x100c ]
call sub_40c698
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
pop esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x80c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x100c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x800
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
shr [ ebp - 0x4 ] 0x1
mov eax 0x3ff
cmp [ ebp - 0x4 ] eax
jae r-xdata
push [ ebp + 0xc ]
xor ecx ecx
mov [ ebp + eax * 2 - 0x80c ] cx
lea eax [ ebp - 0x80c ]
push eax
push [ ebp + 0x8 ]
call sub_40ebed
mov eax [ ebp - 0x4 ]
sub_40c803
push ebp
mov ebp esp
sub esp 0x81c
call sub_40b967
test al al
je r-xdata
leave
retn 0x4
push edi
push 0x5
push [ ebp + 0x8 ]
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov edi eax
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
pop edi
push ebx
mov ebx [ SendMessageW@IAT ]
push esi
pop esi
pop ebx
push 0x400
lea eax [ ebp - 0x81c ]
push eax
push edi
call [ GetClassNameW@IAT ]
push r--data
lea eax [ ebp - 0x81c ]
push eax
call sub_40f568
test eax eax
jne r-xdata
push 0x2
push edi
call [ GetWindow@IAT ]
mov edi eax
cmp edi [ ebp - 0x4 ]
je r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
and eax 0x1f
cmp al 0xe
jne r-xdata
inc [ ebp + 0x8 ]
test edi edi
jne r-xdata
push 0x0
push 0x0
push 0x173
push edi
call ebx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x18
push esi
call [ GetObjectW@IAT ]
push [ ebp - 0x14 ]
call sub_40b924
push eax
push [ ebp - 0x18 ]
call sub_40b8e1
push eax
push esi
call sub_40b81c
push eax
push 0x0
push 0x172
push edi
call ebx
cmp esi [ rw-data ]
je r-xdata
push esi
call [ DeleteObject@IAT ]
sub_40c8f6
push esi
mov esi [ esp + 0x8 ]
push 0x20
push esi
call sub_40b2e1
test eax eax
je r-xdata
mov eax esi
cmp [ esi ] 0x22
je r-xdata
push esi
call sub_40782e
cmp [ eax ] 0x22
je r-xdata
push esi
call sub_40b986
jmp r-xdata
pop esi
retn 0x4
sub_40c927
push ebp
mov ebp esp
push esi
mov esi [ DialogBoxParamW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x8 ]
push sub_40bbb1
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
push 0x2
pop eax
jmp r-xdata
dec eax
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ SetFileAttributesW@IAT ]
mov al 0x59
dec eax
je r-xdata
mov al 0x4e
jmp r-xdata
dec eax
je r-xdata
pop esi
pop ebp
retn 0x10
mov [ rw-data ] 0x1
dec eax
jne r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
push sub_40befd
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov al 0x43
jmp r-xdata
dec eax
mov al 0x4e
jne r-xdata
cmp [ rw-data ] 0x0
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
je r-xdata
mov al 0x52
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
sub_40c9e8
push ebp
mov ebp esp
sub esp 0x800
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push esi
push edi
call sub_407ac7
push [ ebp + 0x18 ]
lea eax [ ebp - 0x800 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_40c927
mov bl al
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x18
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_40b147
push 0x1000000
push edi
lea eax [ ebp - 0x800 ]
push eax
call sub_40f330
sub_40ca5f
push ebp
mov ebp esp
sub esp 0x800
cmp [ rw-data ] 0x0
push esi
je r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ rw-data ]
mov esi eax
jne r-xdata
push [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
push rw-data
push esi
jmp r-xdata
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_407ac7
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
call sub_40b177
mov esi [ ebp + 0x14 ]
push rw-data
push esi
call sub_40b147
lea eax [ ebp - 0x800 ]
push eax
push sub_40bf86
push esi
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
jne r-xdata
xor esi esi
xor eax eax
cmp [ esi ] ax
pop esi
setne al
leave
retn 0x14
push 0x80
push esi
push rw-data
mov esi [ ebp + 0x14 ]
mov [ esi ] ax
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
sub_40cb21
push ebp
mov ebp esp
sub esp 0x800
push esi
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407ac7
lea eax [ ebp - 0x800 ]
push eax
push sub_40c13e
push [ rw-data ]
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
cmp [ ebp + 0x8 ] 0x0
mov esi eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1000000
push [ ebp + 0x8 ]
lea eax [ ebp - 0x800 ]
push eax
call sub_40f330
mov eax esi
pop esi
leave
retn 0x8
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_40b147
sub_40cb9d
push ebp
mov ebp esp
mov eax 0x1048
call sub_401200
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] bx
je r-xdata
pop esi
pop ebx
leave
retn 0x4
push esi
call sub_40b11d
cmp eax 0x3f6
jae r-xdata
push edi
push 0x3c
pop edi
push edi
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_40ad9c
movzx ecx [ esi ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] 0x1c0
cmp cx 0x22
jne r-xdata
mov [ ebp - 0x38 ] esi
lea eax [ esi + 0x2 ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] bl
jne r-xdata
mov ecx esi
xor eax eax
cmp cx bx
je r-xdata
push [ ebp - 0x38 ]
mov [ ebp - 0x2c ] 0x1
call sub_407e5d
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
cmp [ esi + eax * 2 ] 0x20
je r-xdata
jmp r-xdata
push [ ebp - 0x38 ]
call sub_405dd7
mov bl al
test bl bl
je r-xdata
push r--data
push eax
call sub_40f568
test eax eax
jne r-xdata
mov [ ebp - 0x34 ] rw-data
lea eax [ esi + eax * 2 ]
cmp [ eax ] 0x20
jne r-xdata
cmp [ esi + eax * 2 + 0x2 ] 0x2f
je r-xdata
inc eax
cmp [ esi + eax * 2 ] bx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov edi r--data
je r-xdata
lea eax [ ebp - 0x1048 ]
push eax
push [ ebp - 0x38 ]
call sub_407984
lea eax [ ebp - 0x1048 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] r--data
add eax 0x2
mov [ ebp - 0x34 ] eax
xor ecx ecx
mov [ eax ] cx
inc eax
lea ecx [ esi + eax * 2 ]
cmp [ ecx ] bx
jne r-xdata
cmp [ esi + eax * 2 ] 0x22
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
cmp [ ecx ] 0x22
jne r-xdata
jmp r-xdata
push 0x20
pop ecx
mov [ esi + eax * 2 ] cx
pop edi
cmp [ rw-data ] 0x0
mov ebx [ ShowWindow@IAT ]
mov [ ebp - 0x1 ] 0x0
mov esi 0x3e8
jne r-xdata
push [ ebp - 0x38 ]
lea eax [ ebp - 0x848 ]
push eax
call sub_40b147
push edi
lea eax [ ebp - 0x848 ]
push eax
call sub_40b1b9
lea eax [ ebp - 0x848 ]
push eax
call sub_405dd7
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x7d0
push [ ebp - 0x10 ]
call [ WaitForInputIdle@IAT ]
push [ ebp - 0x10 ]
call sub_40c468
cmp [ rw-data ] 0x0
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call [ GetExitCodeProcess@IAT ]
test eax eax
je r-xdata
push 0x0
push [ rw-data ]
call ebx
mov [ ebp - 0x1 ] 0x1
cmp [ rw-data ] 0x0
je r-xdata
push edi
push [ ebp - 0x8 ]
call sub_40f568
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
add eax esi
cmp eax [ rw-data ]
jbe r-xdata
xor eax eax
cmp [ ebp + 0x8 ] al
sete al
dec eax
and eax 0xfffffce0
add eax esi
push eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1b58
jmp r-xdata
push 0x1
push [ rw-data ]
call ebx
call [ Sleep@IAT ]
sub_40cdf6
push ebp
mov ebp esp
mov eax 0x150d8
call sub_401200
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0xc
push 0x1000
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
lea edx [ ebp - 0x90d8 ]
call sub_40c392
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push ebx
push esi
push edi
push esi
push eax
call sub_40b6d2
add esi 0x2000
dec edi
jne r-xdata
xor esi esi
cmp esi 0xd
ja r-xdata
inc esi
cmp esi 0xe
jb r-xdata
push 0x1000
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
lea edx [ ebp - 0x90d8 ]
call sub_40c392
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_40d962 ]
push [ esi * 4 + rw-data ]
lea eax [ ebp - 0x90d8 ]
push eax
call sub_40f568
test eax eax
je r-xdata
jmp r-xdata
push 0x6
mov ebx 0x400
lea eax [ ebp - 0x3830 ]
lea esi [ ebp - 0x150d8 ]
pop edi
pop edi
pop esi
pop ebx
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
movzx eax [ ebp - 0x3830 ]
sub eax edi
je r-xdata
movzx eax [ ebp - 0x3830 ]
push eax
call sub_40ad63
cmp eax 0x46
je r-xdata
cmp [ ebp + 0x10 ] 0x4
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x3
jne r-xdata
cmp [ ebp + 0x10 ] 0x5
jne r-xdata
cmp [ ebp + 0x10 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
push ebx
lea eax [ ebp - 0x830 ]
push eax
call sub_412ae4
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x1830 ]
push eax
call sub_40b147
lea eax [ ebp - 0x1830 ]
push eax
call sub_4078a9
lea eax [ ebp - 0x3830 ]
push eax
lea eax [ ebp - 0x1830 ]
push eax
call sub_40b1b9
lea ecx [ ebp - 0x4438 ]
call sub_4061fb
lea eax [ ebp - 0x1830 ]
push eax
lea ecx [ ebp - 0x4438 ]
call sub_40622b
lea ecx [ ebp - 0x58d8 ]
call sub_40387e
push edi
lea eax [ ebp - 0x58d8 ]
push eax
lea ecx [ ebp - 0x4438 ]
call sub_4065b9
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
jmp r-xdata
cmp [ rw-data ] di
jne r-xdata
movzx eax [ ebp - 0x3830 ]
push eax
call sub_40eb96
test al al
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
sub eax 0x30
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp eax 0x55
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x3830 ]
push eax
call sub_40b232
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
lea eax [ ebp - 0x1030 ]
push eax
push ebx
call [ GetTempPathW@IAT ]
lea eax [ ebp - 0x1030 ]
push eax
call sub_4078a9
xor esi esi
push esi
push [ rw-data ]
lea eax [ ebp - 0x1030 ]
push eax
push r--data
lea eax [ ebp - 0x1830 ]
push ebx
push eax
call sub_40b3bb
mov edi [ GetFileAttributesW@IAT ]
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x3830 ] di
je r-xdata
push 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x830 ] ax
movzx eax [ ebp - 0x150d8 ]
push eax
call sub_40ad63
push ebx
cmp eax 0x50
je r-xdata
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x4438 ]
call sub_406218
jmp r-xdata
mov edi [ GetFileAttributesW@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push r--data
push eax
call sub_40b1b9
xor eax eax
cmp [ ebp - 0x3830 ] 0x22
lea esi [ ebp - 0x3830 ]
mov [ ebp - 0x830 ] ax
jne r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x3830 ]
sub eax 0x30
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x0
dec eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
push edi
cmp [ rw-data ] edi
jne r-xdata
add esp 0x18
lea eax [ ebp - 0x1830 ]
push eax
call edi
cmp eax 0xffffffff
jne r-xdata
lea edi [ ebp + 0xc ]
call sub_40c537
mov [ rw-data ] eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
lea ecx [ ebp - 0x3830 ]
call sub_40cb9d
push rw-data
lea eax [ ebp - 0x830 ]
push eax
call sub_40ebed
mov [ ebp - 0x8 ] 0x2
cmp eax 0x54
lea eax [ ebp - 0x830 ]
je r-xdata
lea eax [ ebp - 0x54d8 ]
push eax
call edi
cmp eax 0xffffffff
je r-xdata
call sub_407428
cmp eax ebx
je r-xdata
lea edi [ ebp + 0xc ]
call sub_40c537
mov edi eax
lea edi [ ebp - 0x3830 ]
jmp r-xdata
push esi
call sub_40b11d
cmp eax ebx
jae r-xdata
lea esi [ ebp - 0x382e ]
dec eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x2
inc esi
push esi
push [ rw-data ]
lea eax [ ebp - 0x1030 ]
push eax
push r--data
lea eax [ ebp - 0x1830 ]
push ebx
push eax
call sub_40b3bb
lea eax [ ebp - 0x1830 ]
push eax
push 0x66
push [ ebp + 0x8 ]
call [ SetDlgItemTextW@IAT ]
xor edi edi
cmp [ ebp - 0x3830 ] di
je r-xdata
lea eax [ ebp - 0x1030 ]
push eax
call sub_405dd7
test al al
jne r-xdata
lea eax [ ebp - 0x130d6 ]
push eax
lea eax [ ebp - 0x1030 ]
push eax
call sub_40b147
push 0x22
lea eax [ ebp - 0x102e ]
push eax
call sub_40b2e1
cmp eax edi
je r-xdata
push rw-data
push eax
call sub_40ebed
mov [ ebp - 0x8 ] 0x7
jmp r-xdata
push rw-data
push eax
call sub_40ebed
mov [ ebp - 0x8 ] 0x10
jmp r-xdata
push 0x0
lea eax [ ebp - 0x58d8 ]
push eax
lea ecx [ ebp - 0x4438 ]
call sub_4065b9
test al al
jne r-xdata
lea eax [ ebp - 0x54d8 ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1030 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
call sub_407a4a
lea eax [ ebp - 0x1030 ]
push eax
call sub_4078a9
lea eax [ ebp - 0x830 ]
push eax
call sub_40b11d
mov esi eax
cmp esi 0x4
jb r-xdata
push [ rw-data ]
call sub_40b11d
mov esi eax
xor esi esi
jmp r-xdata
test bl bl
je r-xdata
movzx eax [ esi ]
cmp ax 0x2e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
cmp [ ebp - 0xb0d8 ] si
je r-xdata
xor ebx ebx
lea esi [ ebp - 0x1030 ]
cmp [ ebp - 0x1030 ] bx
je r-xdata
xor ecx ecx
mov [ eax ] cx
add eax 0x2
push eax
lea eax [ ebp - 0x1830 ]
push eax
call sub_40b147
jmp r-xdata
xor eax eax
mov [ ebp - 0x68d8 ] ax
mov [ ebp - 0x1830 ] ax
lea eax [ ebp - 0x130d8 ]
push eax
lea eax [ ebp - 0x1030 ]
push eax
call sub_40b147
cmp [ ebp - 0x1030 ] 0x22
jne r-xdata
push 0x0
lea eax [ ebp - 0x54d8 ]
push eax
call [ SetFileAttributesW@IAT ]
cmp [ ebp - 0x4cc8 ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x3830 ]
push eax
push 0x0
call sub_407847
test al al
jne r-xdata
lea eax [ ebp - 0x1030 ]
push eax
call sub_40b11d
cmp esi eax
ja r-xdata
push edi
push eax
call sub_40b1b9
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor ecx ecx
mov [ eax ] cx
push edi
call sub_40b11d
add eax esi
lea eax [ eax + eax + 0xa ]
push eax
push [ rw-data ]
call sub_40ad37
mov [ rw-data ] eax
test bl bl
je r-xdata
cmp ax 0x5c
je r-xdata
cmp [ esi + 0x2 ] 0x5c
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
xor eax eax
mov [ ebp - 0x430 ] ax
push 0x2c
lea eax [ ebp - 0x3830 ]
push eax
call sub_40b2e1
test eax eax
jne r-xdata
lea eax [ ebp - 0x70d8 ]
push eax
lea eax [ ebp - 0x1030 ]
push eax
call sub_407984
cmp [ ebp - 0x830 ] si
jne r-xdata
lea eax [ ebp - 0x68d8 ]
push eax
lea eax [ ebp - 0xb0d8 ]
push eax
call sub_407984
movzx eax [ esi ]
cmp ax 0x20
je r-xdata
push esi
lea eax [ ebp - 0x54d8 ]
push eax
push r--data
lea eax [ ebp - 0x1030 ]
push ebx
push eax
call sub_40b3bb
add esp 0x14
lea eax [ ebp - 0x1030 ]
push eax
call edi
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x54d8 ]
push eax
call sub_40b11d
xor ecx ecx
push 0x1e
mov [ ebp + eax * 2 - 0x54d6 ] cx
push ecx
lea eax [ ebp - 0x30 ]
push eax
call sub_40ad9c
push 0x14
pop eax
mov [ ebp - 0x20 ] ax
lea eax [ ebp - 0x54d8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x2c ] 0x3
call [ SHFileOperationW@IAT ]
push edi
call sub_40ad18
jmp r-xdata
push esi
cmp ax di
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] di
je r-xdata
cmp [ ebp - 0x430 ] di
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x3830 ] di
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
call sub_4078a9
cmp [ ebp - 0x110d8 ] si
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x830 ]
push eax
call sub_40b796
movzx edi ax
xor eax eax
mov [ esi ] ax
lea eax [ ebp - 0x1030 ]
push eax
call sub_405dd7
test al al
je r-xdata
cmp ax 0x2f
jne r-xdata
inc esi
lea eax [ ebp - 0x1030 ]
push eax
lea eax [ ebp - 0x54d8 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
mov edi rw-data
push edi
call sub_40b147
push ebx
lea eax [ ebp - 0x830 ]
push eax
call sub_40c758
push 0x66
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov esi eax
lea eax [ ebp - 0x830 ]
push eax
push esi
call [ SetWindowTextW@IAT ]
mov ebx [ SendMessageW@IAT ]
push edi
push 0x0
push 0x143
push esi
call ebx
lea eax [ ebp - 0x830 ]
push eax
push edi
call sub_40b232
test eax eax
je r-xdata
cmp [ eax + 0x2 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1
push edi
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0x2 ] 0x3a
je r-xdata
push eax
jmp r-xdata
lea eax [ ebp - 0x3830 ]
push eax
call sub_40b7d0
xor eax eax
mov [ ebp - 0x2830 ] ax
push 0x24
lea eax [ ebp - 0x430 ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0x8 ]
call [ MessageBoxW@IAT ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x150d8 ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
call sub_40b147
lea eax [ ebp - 0x130d8 ]
push eax
lea eax [ ebp - 0x430 ]
push eax
call sub_40b147
lea eax [ ebp - 0x3830 ]
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x4030 ]
push eax
call sub_40b147
lea eax [ ebp - 0xd0d8 ]
cmp [ ebp - 0xd0d8 ] si
jne r-xdata
lea eax [ ebp - 0x110d8 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
call sub_40b1b9
lea eax [ ebp - 0x830 ]
push eax
call sub_4078a9
mov [ esi ] di
mov ebx esi
cmp di 0x2f
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
jne r-xdata
push 0x4
push 0x0
lea eax [ ebp - 0x1030 ]
push eax
call [ MoveFileExW@IAT ]
lea eax [ ebp - 0x830 ]
push eax
push 0x0
push 0x143
push esi
call ebx
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
cmp [ ebp - 0x830 ] di
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
push r--data
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x800
call [ RegQueryValueExW@IAT ]
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
shr [ ebp - 0x8 ] 0x1
mov eax 0x3ff
cmp [ ebp - 0x8 ] eax
jae r-xdata
lea eax [ ebp - 0x830 ]
push eax
call sub_40b147
push 0x1
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
call [ EndDialog@IAT ]
xor edi edi
lea esi [ ecx + ecx ]
lea eax [ ebp + esi - 0x382e ]
push eax
lea eax [ ebp - 0x430 ]
push eax
call sub_40b147
xor eax eax
mov [ ebp + esi - 0x3830 ] ax
inc ecx
lea eax [ ebp + ecx * 2 - 0x3830 ]
cmp [ eax ] di
jne r-xdata
push eax
call sub_407bcb
push eax
lea eax [ ebp - 0x830 ]
push eax
call sub_40b1b9
lea eax [ ebp - 0x830 ]
push eax
call sub_407e5d
cmp eax esi
je r-xdata
lea eax [ ebp - 0x130d8 ]
test ebx ebx
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x20
je r-xdata
push 0x2f
pop eax
mov [ ebp - 0x1830 ] ax
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x182e ]
jmp r-xdata
push esi
call sub_40b11d
mov edi eax
lea eax [ ebp - 0x830 ]
push eax
call sub_40b11d
add edi eax
cmp edi 0x3ff
jae r-xdata
lea eax [ ebp - 0x830 ]
push eax
call sub_40b11d
cmp [ ebp + eax * 2 - 0x832 ] 0x5c
je r-xdata
xor ecx ecx
mov [ ebp + eax * 2 - 0x830 ] cx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x40
je r-xdata
jmp r-xdata
push r--data
lea eax [ ebp - 0x830 ]
push eax
call sub_40b1b9
push r--data
push eax
call sub_40f568
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] ax
push esi
lea eax [ ebp - 0x1830 ]
push eax
call sub_40b147
mov [ ebx ] di
jmp r-xdata
push 0x22
lea eax [ ebp - 0x830 ]
push eax
call sub_40b30e
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x830 ]
push eax
call sub_40b1b9
jmp r-xdata
push r--data
lea eax [ ebp - 0x830 ]
push eax
call sub_40b1b9
push 0x0
lea eax [ ebp - 0x4030 ]
push eax
push 0x5
push 0x1000
call [ SHChangeNotify@IAT ]
jmp r-xdata
push 0x1
lea eax [ ebp - 0x830 ]
push eax
call sub_405fc0
lea eax [ ebp - 0x70d8 ]
push eax
lea eax [ ebp - 0x60d8 ]
push eax
call sub_40b147
lea eax [ ebp - 0x60d8 ]
push eax
call sub_407f0f
lea eax [ ebp - 0x1830 ]
push eax
call sub_40eaee
push eax
lea eax [ ebp - 0x68d8 ]
push eax
call sub_40eaee
push eax
lea eax [ ebp - 0xf0d8 ]
push eax
call sub_40eaee
push eax
lea eax [ ebp - 0x60d8 ]
push eax
call sub_40eaee
push eax
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x70d8 ]
push eax
push esi
call sub_4129f9
cmp [ ebp - 0x4030 ] si
je r-xdata
sub_40d99a
push ebp
mov ebp esp
mov eax 0x7e00
call sub_401200
push ebx
call sub_40eacf
xor ebx ebx
push ebx
lea ecx [ ebp - 0x7e00 ]
call sub_401883
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x7e00 ]
push ebx
call sub_40171e
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x7e00 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_401a3a
test al al
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
lea esi [ eax + eax ]
mov edi eax
lea eax [ esi + 0x2 ]
push eax
call sub_40acff
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x18 ] ebx
pop ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40ad18
xor ecx ecx
push esi
mov [ esi + eax ] cx
push [ ebp - 0xc ]
push eax
call sub_40adc9
xor edi edi
jmp r-xdata
lea ecx [ ebp - 0x7e00 ]
call sub_4019f2
leave
retn 0xc
push [ ebp - 0x18 ]
call sub_40ad18
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
sub_40da54
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
push edi
push edi
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4031b0
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax [ rw-data ]
push esi
mov esi [ SendMessageW@IAT ]
cmp eax edi
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
push 0x1
push 0x80
push ebx
call esi
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
push ebx
call sub_40c803
push 0x65
push ebx
call [ GetDlgItem@IAT ]
push 0x10000
push edi
push 0x435
push eax
mov [ ebp + 0xc ] eax
call esi
push 0xf
call [ GetSysColor@IAT ]
push eax
push edi
push 0x443
push [ ebp + 0xc ]
call esi
push 0x3
push [ rw-data ]
push ebx
call sub_40cdf6
pop esi
cmp [ rw-data ] edi
je r-xdata
push eax
push edi
push 0x172
push 0x66
push ebx
call [ SendDlgItemMessageW@IAT ]
pop edi
pop ebx
pop ebp
retn 0x10
push 0x1
dec eax
je r-xdata
push ebx
call [ SetForegroundWindow@IAT ]
mov ecx [ rw-data ]
push edi
push edi
push [ rw-data ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_407316
push [ rw-data ]
call sub_40ad18
jmp r-xdata
push edi
jmp r-xdata
push ebx
call [ EndDialog@IAT ]
sub_40db65
push ebp
mov ebp esp
mov eax 0x695c
call sub_401200
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4031b0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x110
push edi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] esi
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
pop esi
pop ebx
leave
retn 0x10
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
push 0x1
push 0x80
push esi
call [ SendMessageW@IAT ]
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
push esi
call sub_40c803
mov edi [ GetDlgItem@IAT ]
push 0x68
push esi
call edi
push __pe_WINRAR_export_address_table
push ebx
push 0x435
push eax
mov [ ebp + 0x14 ] eax
call [ SendMessageW@IAT ]
push 0x400
lea eax [ ebp - 0x103c ]
push eax
call sub_412ae4
push 0x66
push esi
call edi
mov [ ebp + 0x10 ] eax
mov eax rw-data
cmp [ rw-data ] bx
jne r-xdata
push eax
push ebx
push 0x172
push 0x6c
push esi
call [ SendDlgItemMessageW@IAT ]
pop edi
push 0x400
lea eax [ ebp - 0x83c ]
push eax
push 0x66
push esi
call [ GetDlgItemTextW@IAT ]
cmp [ rw-data ] bl
je r-xdata
dec eax
je r-xdata
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextW@IAT ]
push [ ebp + 0x10 ]
call sub_412afb
push rw-data
push rw-data
push rw-data
mov [ rw-data ] bl
call sub_40d99a
cmp [ rw-data ] ebx
jbe r-xdata
lea eax [ ebp - 0x103c ]
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
je r-xdata
sub eax 0x65
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
push 0x7
push [ rw-data ]
push esi
call sub_40cdf6
push 0x68
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0xc ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
jmp r-xdata
mov [ rw-data ] 0x1
push ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x83c ]
push eax
push 0x64
call sub_40a407
push eax
push esi
call sub_4027fc
test al al
je r-xdata
mov edi [ SetDlgItemTextW@IAT ]
cmp [ rw-data ] bl
jne r-xdata
xor eax eax
mov edi 0x96
mov [ ebp - 0x695c ] ax
mov [ ebp + 0xc ] edi
push [ ebp + 0xc ]
call [ SetFocus@IAT ]
cmp [ rw-data ] bl
je r-xdata
mov edi [ SendMessageW@IAT ]
push 0xffffffff
push ebx
push 0xb1
push eax
call edi
push r--data
push ebx
push 0xc2
push [ ebp + 0xc ]
call edi
cmp [ rw-data ] ebx
jle r-xdata
push esi
call [ EndDialog@IAT ]
jmp r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x83c ]
push eax
push 0x66
push esi
call [ SetDlgItemTextW@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jbe r-xdata
push 0xab
call sub_40a407
push eax
push 0x6b
push esi
call edi
push 0xaa
call sub_40a407
push eax
push 0x1
push esi
call edi
cmp [ ebp + 0xc ] 0x97
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
lea eax [ ebp - 0x83c ]
push eax
lea eax [ ebp - 0x1040 ]
push eax
call sub_40b147
lea eax [ ebp - 0x1040 ]
push eax
call sub_40c8f6
lea eax [ ebp - 0x1040 ]
push eax
push 0xa5
call sub_40a407
push eax
lea eax [ ebp - 0x295c ]
push 0x480
push eax
call sub_40b3bb
add esp 0x10
lea eax [ ebp - 0x295c ]
push 0xa6
call sub_40a407
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push ebx
push [ rw-data ]
push esi
call sub_40cdf6
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
lea eax [ ebp - 0x695c ]
push eax
call sub_40b1b9
push [ ebp + 0xc ]
call sub_40a407
push eax
lea eax [ ebp - 0x695c ]
push eax
call sub_40b1b9
cmp [ rw-data ] bl
jne r-xdata
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x9c
jle r-xdata
push ebx
lea eax [ ebp - 0x83c ]
push eax
mov [ ebp + 0xf ] bl
call sub_405fc0
mov edi [ GetLastError@IAT ]
test al al
jne r-xdata
lea eax [ ebp - 0x83c ]
push eax
call sub_40c6d3
push eax
push ebx
call sub_40b9e1
cmp [ rw-data ] bl
jne r-xdata
push 0x7d
mov [ rw-data ] 0x1
call sub_40a407
push eax
push 0x1
push esi
call [ SetDlgItemTextW@IAT ]
mov eax [ rw-data ]
cmp eax 0x9
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
push ebx
push [ ebp + 0x10 ]
call [ EnableWindow@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x83c ]
push eax
call sub_412ad1
mov [ ebp + 0x13 ] al
cmp al bl
jne r-xdata
call edi
cmp eax 0x5
je r-xdata
xor ecx ecx
cmp eax 0x3
setne cl
dec ecx
and ecx 0x5
add ecx 0x7f
mov edi ecx
lea edi [ eax + 0x7a ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push 0x67
push esi
call sub_40316d
push ebx
push 0x66
push esi
call sub_40316d
push 0x1
push [ rw-data ]
push esi
call sub_40cdf6
push esi
call [ SetForegroundWindow@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
mov ecx [ rw-data ]
push ebx
push ebx
push eax
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_407316
push [ rw-data ]
call sub_40ad18
mov ecx [ rw-data ]
push ebx
push ebx
lea eax [ ebp - 0x695c ]
push eax
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_407316
cmp [ rw-data ] bl
jne r-xdata
call edi
cmp eax 0x5
jne r-xdata
mov [ ebp + 0xf ] 0x1
cmp eax 0x3
jne r-xdata
push 0x30
push 0x7e
call sub_40a407
push eax
push edi
call sub_40a407
push eax
push esi
call [ MessageBoxW@IAT ]
jmp r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
xor edi edi
inc edi
cmp [ ebp + 0x13 ] bl
je r-xdata
mov [ ebp + 0xf ] 0x1
push 0x7d
call sub_40a407
push eax
push 0x1
push esi
call edi
push ebx
push 0x1
push 0x111
push esi
cmp eax 0x1
jne r-xdata
push ebx
push sub_40da54
push ebx
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
je r-xdata
push ebx
push 0x67
push esi
mov [ rw-data ] edi
call sub_40318b
push ebx
push 0x66
push esi
call sub_40318b
push ebx
push edi
push esi
call sub_40316d
push edi
push 0x69
push esi
call sub_40318b
push r--data
push 0x65
push esi
call [ SetDlgItemTextW@IAT ]
push 0x65
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp + 0xf ] bl
sete [ ebp + 0xf ]
cmp [ ebp + 0xf ] bl
jne r-xdata
call [ GetTickCount@IAT ]
push eax
push r--data
lea eax [ ebp - 0x103c ]
push 0x400
push eax
call sub_40b3bb
add esp 0x10
lea ecx [ ebp - 0x205c ]
call sub_405473
xor edi edi
inc edi
push edi
lea eax [ ebp - 0x103c ]
push eax
push ebx
lea ecx [ ebp - 0x205c ]
call sub_4057d6
mov [ ebp + 0x13 ] al
cmp al bl
jne r-xdata
call [ PostMessageW@IAT ]
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x5
push [ rw-data ]
push esi
call sub_40cdf6
push 0x2
push [ rw-data ]
push esi
call sub_40cdf6
push rw-data
call sub_40c09a
push 0x6
push [ rw-data ]
push esi
call sub_40cdf6
cmp [ rw-data ] bl
jne r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
or eax 0x80
push eax
push 0xfffffff0
push [ ebp + 0xc ]
call [ SetWindowLongW@IAT ]
mov [ ebp + 0xf ] bl
push 0x82
call sub_40a407
push eax
lea eax [ ebp - 0x83c ]
push eax
push r--data
lea eax [ ebp - 0x143c ]
push 0x600
push eax
call sub_40b3bb
add esp 0x14
push 0x1
mov ecx rw-data
call sub_40341b
push 0x30
push 0x7e
call sub_40a407
push eax
lea eax [ ebp - 0x143c ]
push eax
push esi
call [ MessageBoxW@IAT ]
inc [ rw-data ]
jmp r-xdata
push 0x400
lea eax [ ebp - 0x103c ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
push rw-data
push rw-data
lea eax [ ebp - 0x83c ]
push eax
push r--data
lea eax [ ebp - 0x4f74 ]
push 0x130c
push eax
call sub_40b3bb
add esp 0x18
push r--data
mov edi 0x5800
push edi
push ebx
push 0x8000004
lea eax [ ebp - 0x103c ]
mov [ ebp - 0x2c ] eax
push ebx
lea eax [ ebp - 0x4f74 ]
push 0xffffffff
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x38 ] 0x40
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] ebx
call [ CreateFileMappingW@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x205c ]
call sub_405658
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x5
jne r-xdata
push edi
push edi
push esi
call sub_40316d
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
call [ GetCommandLineW@IAT ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x13 ] bl
jne r-xdata
mov [ ebp + 0xf ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp + 0xf ] 0x1
push 0x2710
push [ ebp - 0x4 ]
call [ WaitForInputIdle@IAT ]
push 0x1f4
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
jmp r-xdata
push 0x7
push rw-data
call sub_40b796
push 0x2
push rw-data
call sub_40b796
push 0x10
push rw-data
call sub_40b796
push ebx
push ebx
push ebx
push 0x2
push [ ebp + 0x10 ]
call [ MapViewOfFile@IAT ]
push edi
push rw-data
push eax
mov [ ebp + 0x14 ] eax
call sub_40adc9
push [ ebp + 0x14 ]
call [ UnmapViewOfFile@IAT ]
push 0x2000
push eax
push rw-data
call sub_40ebed
push 0x4
push [ rw-data ]
push ebx
call sub_40cdf6
cmp [ ebp + 0xf ] bl
je r-xdata
push [ ebp + 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
sub_40e385
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
push 0x1
call sub_40effc
xor ebx ebx
push ebx
call [ OleInitialize@IAT ]
mov ecx rw-data
call sub_40f722
mov esi 0x5800
push esi
push ebx
mov edi rw-data
push edi
call sub_40ad9c
call [ GetCommandLineW@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push 0x400
mov esi rw-data
push esi
push ebx
call [ GetModuleFileNameW@IAT ]
push esi
push r--data
call [ SetEnvironmentVariableW@IAT ]
push ebx
call [ GetModuleHandleW@IAT ]
mov edi eax
push 0x64
push edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ LoadIconW@IAT ]
push 0x65
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadBitmapW@IAT ]
lea ecx [ ebp - 0xc ]
mov [ rw-data ] eax
call sub_412b54
push esi
mov ecx rw-data
call sub_40a3f0
lea ecx [ ebp - 0x5c ]
call sub_406a41
lea ecx [ ebp - 0x34 ]
call sub_406a41
push 0x64
call sub_40b8e1
push 0x64
mov [ ebp - 0x40 ] eax
call sub_40b8e1
push ebx
push sub_40db65
mov [ ebp - 0x18 ] eax
push ebx
lea eax [ ebp - 0x5c ]
mov [ rw-data ] eax
push r--data
lea eax [ ebp - 0x34 ]
push edi
mov [ rw-data ] eax
call [ DialogBoxParamW@IAT ]
lea ecx [ ebp - 0x34 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_406a63
lea ecx [ ebp - 0x5c ]
call sub_406a63
lea ecx [ ebp - 0xc ]
call sub_412bae
cmp [ rw-data ] bl
je r-xdata
push eax
call sub_40c26d
cmp [ rw-data ] bl
je r-xdata
push 0x100
push ebx
push rw-data
call sub_40ad9c
cmp [ rw-data ] ebx
jbe r-xdata
call sub_40c4a7
push [ ebp - 0x8 ]
push r--data
call [ SetEnvironmentVariableW@IAT ]
push r--data
push ebx
push 0x4
call [ OpenFileMappingW@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push [ rw-data ]
mov esi [ DeleteObject@IAT ]
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ rw-data ]
call sub_40ad18
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
push ebx
push ebx
push 0x4
push eax
call [ MapViewOfFile@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call esi
push [ ebp - 0x4 ]
call [ UnmapViewOfFile@IAT ]
push esi
push eax
push edi
call sub_40adc9
push edi
push r--data
call [ SetEnvironmentVariableW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
call [ OleUninitialize@IAT ]
mov eax [ rw-data ]
cmp eax ebx
ja r-xdata
push eax
call sub_40c468
push 0xff
mov ecx rw-data
call sub_40341b
push eax
call [ ExitProcess@IAT ]
mov eax [ rw-data ]
sub_40e5a0
push ebp
mov ebp esp
sub esp 0x20
cmp [ ebp + 0x14 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov ebx [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push 0x40
push [ ebp + 0x10 ]
push ebx
call sub_40adc9
jmp r-xdata
mov esi [ ebp + 0x8 ]
push 0x5
pop ecx
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov eax rw-data
mov [ ebp + 0x14 ] ebx
xor ecx ecx
mov esi rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ ebp + 0x14 ]
mov edx [ esi ]
mov ecx edx
ror ecx 0x8
and ecx 0xff00ff00
rol edx 0x8
and edx 0xff00ff
or ecx edx
mov [ esi ] ecx
mov esi [ eax - 0x8 ]
mov edx [ eax ]
mov edx [ ebp + edx * 4 - 0x20 ]
mov edi [ eax - 0x4 ]
mov edi [ ebp + edi * 4 - 0x20 ]
add [ ebp + 0x14 ] 0x4
lea esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0x10 ] esi
mov esi [ eax + 0x4 ]
lea esi [ ebp + esi * 4 - 0x20 ]
xor edi edx
mov [ ebp - 0x4 ] esi
mov esi [ eax - 0xc ]
mov esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x10 ]
and edi [ edx ]
rol esi 0x5
xor edi [ ebp + 0xc ]
add esi ecx
mov ecx [ ebp - 0x4 ]
lea edx [ edi + esi + 0x5a827999 ]
add [ ecx ] edx
mov ecx [ ebp + 0x10 ]
ror [ ecx ] 0x2
add eax 0x14
mov edx rw-data
cmp eax edx
jl r-xdata
mov [ ebp + 0x14 ] 0x10
push 0x4
pop ecx
dec ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ ecx - 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
lea edi [ ecx + 0x5 ]
and edi 0xf
xor eax [ ebx + edi * 4 ]
and ecx 0xf
xor eax [ ebx + ecx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov esi [ edx - 0x8 ]
mov ecx [ edx ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
mov edi [ edx - 0x4 ]
mov edi [ ebp + edi * 4 - 0x20 ]
lea esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0x10 ] esi
mov esi [ edx + 0x4 ]
lea esi [ ebp + esi * 4 - 0x20 ]
xor edi ecx
mov [ ebp - 0x4 ] esi
mov esi [ edx - 0xc ]
mov esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
and edi [ ecx ]
rol esi 0x5
xor edi [ ebp + 0xc ]
add esi eax
mov eax [ ebp - 0x4 ]
lea ecx [ edi + esi + 0x5a827999 ]
add [ eax ] ecx
mov eax [ ebp + 0x10 ]
ror [ eax ] 0x2
inc [ ebp + 0x14 ]
add edx 0x14
mov eax rw-data
cmp edx eax
jl r-xdata
mov [ ebp + 0x14 ] 0x14
mov edx eax
lea eax [ ecx + 0x1 ]
cdq
push 0x5
pop edi
idiv edi
lea eax [ ecx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ esi ] edx
cdq
idiv edi
lea eax [ ecx + 0x3 ]
add esi 0x14
mov [ esi - 0x10 ] edx
cdq
idiv edi
lea eax [ ecx + 0x4 ]
mov [ esi - 0xc ] edx
cdq
idiv edi
mov [ esi - 0x8 ] edx
test ecx ecx
je r-xdata
mov [ rw-data ] 0x1
cmp esi rw-data
jl r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ ecx - 0x5 ]
lea edi [ ecx + 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
and ecx 0xf
and edi 0xf
xor eax [ ebx + edi * 4 ]
xor eax [ ebx + ecx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov ecx [ edx - 0x8 ]
mov edi [ edx ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ edx + 0x4 ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ edx - 0xc ]
mov esi [ ebp + ecx * 4 - 0x20 ]
mov ecx [ edx - 0x4 ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
xor ecx [ ebp + edi * 4 - 0x20 ]
rol esi 0x5
mov edi ecx
mov ecx [ ebp + 0x10 ]
xor edi [ ecx ]
add esi eax
mov eax [ ebp - 0x4 ]
lea esi [ edi + esi + 0x6ed9eba1 ]
add [ eax ] esi
ror [ ecx ] 0x2
inc [ ebp + 0x14 ]
add edx 0x14
cmp edx rw-data
jl r-xdata
mov ecx rw-data
mov [ ebp + 0x14 ] 0x28
mov [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x14 ]
lea edx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ edx - 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
lea edi [ edx + 0x5 ]
and edi 0xf
xor eax [ ebx + edi * 4 ]
and edx 0xf
xor eax [ ebx + edx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov edx [ ecx - 0x4 ]
mov edi [ ecx + 0x8 ]
mov esi [ ecx ]
mov esi [ ebp + esi * 4 - 0x20 ]
lea edx [ ebp + edx * 4 - 0x20 ]
lea edi [ ebp + edi * 4 - 0x20 ]
mov [ ebp - 0xc ] edx
mov edx [ edx ]
mov [ ebp - 0x8 ] edi
mov edi [ ecx - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
mov edi [ ebp + edi * 4 - 0x20 ]
mov [ ebp + 0xc ] edx
or edx esi
and ecx edx
mov edx ecx
mov ecx [ ebp + 0xc ]
and ecx esi
or edx ecx
rol edi 0x5
add edi eax
mov eax [ ebp - 0x8 ]
lea ecx [ edx + edi - 0x70e44324 ]
add [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0xc ]
ror [ eax ] 0x2
inc [ ebp + 0x14 ]
add ecx 0x14
cmp ecx rw-data
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp + 0x14 ] 0x3c
mov edx rw-data
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ ecx - 0x5 ]
lea edi [ ecx + 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
and ecx 0xf
and edi 0xf
xor eax [ ebx + edi * 4 ]
xor eax [ ebx + ecx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov ecx [ edx - 0x8 ]
mov edi [ edx ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ edx + 0x4 ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edx - 0xc ]
mov esi [ ebp + ecx * 4 - 0x20 ]
mov ecx [ edx - 0x4 ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
xor ecx [ ebp + edi * 4 - 0x20 ]
rol esi 0x5
mov edi ecx
mov ecx [ ebp + 0x10 ]
xor edi [ ecx ]
add esi eax
mov eax [ ebp - 0xc ]
lea esi [ edi + esi - 0x359d3e2a ]
add [ eax ] esi
ror [ ecx ] 0x2
inc [ ebp + 0x14 ]
add edx 0x14
cmp edx rw-data
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push 0x5
sub ecx eax
pop edx
mov esi [ ecx + eax ]
add [ eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_40e92e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x14 ]
mov ecx ebx
mov eax edx
shl ecx 0x3
shr eax 0x3
add edx ecx
and eax 0x3f
push edi
mov [ esi + 0x14 ] edx
cmp edx ecx
jae r-xdata
mov ecx ebx
shr ecx 0x1d
add [ esi + 0x18 ] ecx
lea ecx [ eax + ebx ]
cmp ecx 0x3f
jbe r-xdata
inc [ esi + 0x18 ]
xor edi edi
push 0x40
pop edi
sub edi eax
push edi
push [ ebp + 0xc ]
lea eax [ eax + esi + 0x1c ]
push eax
call sub_40adc9
push [ ebp + 0x14 ]
lea ecx [ esi + 0x1c ]
push ecx
lea eax [ esi + 0x5c ]
push eax
push esi
call sub_40e5a0
lea eax [ edi + 0x3f ]
cmp eax ebx
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
sub ebx edi
push ebx
add edi ecx
push edi
lea eax [ eax + esi + 0x1c ]
push eax
call sub_40adc9
xor eax eax
jmp r-xdata
mov [ ebp + 0x10 ] eax
cmp ebx edi
jbe r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea eax [ eax + ecx - 0x3f ]
push eax
lea eax [ esi + 0x5c ]
push eax
push esi
call sub_40e5a0
add [ ebp + 0x10 ] 0x40
add edi 0x40
cmp [ ebp + 0x10 ] ebx
jb r-xdata
sub_40e9dc
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
mov edx eax
and edx 0x3
push 0x3
pop ecx
sub ecx edx
shl ecx 0x3
cmp eax 0x4
sbb edx edx
neg edx
mov edx [ esi + edx * 4 + 0x14 ]
shr edx cl
inc eax
mov [ ebp + eax - 0x11 ] dl
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push 0x1
lea eax [ ebp + 0xb ]
push eax
push esi
mov [ ebp + 0xb ] 0x80
call sub_40e92e
lea edi [ esi + 0x14 ]
mov ebx 0x1c0
jmp r-xdata
mov eax [ edi ]
push [ ebp + 0x10 ]
and eax 0x1f8
cmp eax ebx
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
push eax
push esi
mov [ ebp + 0xb ] 0x0
call sub_40e92e
push 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_40e92e
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
shl eax 0x2
mov ecx [ eax + esi ]
mov [ eax + edx ] ecx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x5
jb r-xdata
push 0x4
push ebx
lea eax [ ebp - 0x4 ]
push eax
call sub_40ad9c
push 0x4
push ebx
lea eax [ ebp - 0x8 ]
push eax
call sub_40ad9c
push 0x40
push ebx
lea eax [ esi + 0x1c ]
push eax
call sub_40ad9c
push 0x14
push ebx
push esi
call sub_40ad9c
push 0x8
push ebx
push edi
call sub_40ad9c
push 0x8
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_40ad9c
cmp [ ebp + 0x10 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x40
push ebx
add esi 0x5c
push esi
call sub_40ad9c
sub_40ebc5
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea eax [ esi - 0x1 ]
push eax
push [ esp + 0x14 ]
push edi
call sub_40afbe
mov [ edi + esi - 0x1 ] 0x0
sub_40ebed
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea eax [ esi - 0x1 ]
push eax
push [ esp + 0x14 ]
push edi
call sub_40b177
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
sub_40ec17
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40ae97
mov ecx [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
cmp edx ecx
jae r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
sub ecx eax
dec ecx
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b0cb
sub_40ec42
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40b11d
mov ecx [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
cmp edx ecx
jae r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
sub ecx eax
dec ecx
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b1d7
sub_40ec6d
push ebp
mov ebp esp
sub esp 0x6c
push esi
xor esi esi
push ebx
push 0x0
push 0xa
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401120
add ecx 0x30
mov [ ebp + esi * 2 - 0x6c ] cx
inc esi
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0xc ] edx
jne r-xdata
mov edx [ ebp + 0x10 ]
pop ebx
test esi esi
jbe r-xdata
xor eax eax
mov [ edx + esi * 2 ] ax
pop esi
leave
retn 0xc
lea ecx [ ebp + esi * 2 - 0x6e ]
push edi
mov di [ ecx ]
mov [ edx + eax * 2 ] di
inc eax
dec ecx
dec ecx
cmp eax esi
jb r-xdata
pop edi
sub_40ecc3
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x4
jb r-xdata
push esi
shl eax 0xb
add eax rw-data
push 0x400
mov esi eax
push esi
push [ esp + 0x10 ]
call sub_40f362
xor eax eax
mov [ esi + 0x7fe ] ax
mov eax esi
pop esi
retn 0x4
xor eax eax
mov [ rw-data ] eax
sub_40ed03
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ edx ]
push eax
call sub_40eba8
test al al
jne r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp + 0xb ] 0x0
xor eax eax
jmp r-xdata
cmp cx 0x22
jne r-xdata
movzx eax cx
push eax
call sub_40eba8
test al al
jne r-xdata
pop ebp
retn 0xc
test edi edi
je r-xdata
lea eax [ edx + 0x2 ]
cmp [ eax ] cx
jne r-xdata
test edi edi
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
lea eax [ ebx - 0x1 ]
cmp esi eax
jae r-xdata
cmp [ ebp + 0xb ] 0x0
sete al
mov [ ebp + 0xb ] al
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax edx
pop ebx
xor eax eax
mov [ edi + esi * 2 ] ax
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov [ edi + esi * 2 ] cx
inc esi
mov edx eax
jmp r-xdata
lea ecx [ ebx - 0x1 ]
cmp esi ecx
jae r-xdata
push 0x22
pop ecx
mov [ edi + esi * 2 ] cx
inc esi
sub_40ede2
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
push edi
push [ esi ]
call sub_40ad37
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_403495
sub_40ee4b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ebx r--data
mov edi [ esi + 0x4 ]
push ebx
call sub_40ae97
inc eax
push eax
mov ecx esi
call sub_40ede2
mov eax [ esi ]
push ebx
add eax edi
push eax
call sub_40af8a
push [ ebp + 0xc ]
mov ebx [ esi + 0x14 ]
lea edi [ esi + 0x10 ]
call sub_40b11d
inc eax
push eax
mov ecx edi
call sub_4012bf
mov eax [ edi ]
push [ ebp + 0xc ]
lea eax [ eax + ebx * 2 ]
push eax
call sub_40b147
inc [ esi + 0x20 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ ebp + 0xc ] r--data
sub_40eeb8
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x4 ]
jae r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
and [ eax ] 0x0
push edi
mov edi [ esi ]
add edi eax
push edi
call sub_40ae97
inc eax
add [ esi + 0xc ] eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
xor al al
and [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
lea edi [ ecx + eax * 2 ]
push edi
call sub_40b11d
inc eax
add [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov [ eax ] edi
mov al 0x1
pop edi
jmp r-xdata
mov [ eax ] edi
pop esi
retn 0x8
sub_40ef22
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
call sub_40ee26
mov eax esi
pop esi
retn
sub_40ef4f
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40eeb8
test al al
je r-xdata
leave
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40afbe
mov al 0x1
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_40b177
sub_40efa5
test [ rw-data ] 0x1
jne r-xdata
call sub_40b45b
sub eax [ rw-data ]
cmp eax 0x32
jle r-xdata
or [ rw-data ] 0x1
call sub_40b45b
mov [ rw-data ] eax
retn
cmp [ rw-data ] 0x0
je r-xdata
jmp sub_40b5d8
push esi
push edi
mov edi 0xff
mov esi rw-data
push edi
mov ecx esi
call sub_40341b
push edi
mov ecx esi
call j_sub_40344e
pop edi
pop esi
sub_40effc
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
retn 0x4
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
movzx ecx [ esp + 0x4 ]
neg ecx
sbb ecx ecx
and ecx r--data
push ecx
call eax
sub_40f030
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
mov ax [ esi ]
mov [ ebp - 0x18 ] ax
mov ax [ esi + 0x4 ]
mov [ ebp - 0x16 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x12 ] ax
mov ax [ esi + 0xc ]
mov [ ebp - 0x10 ] ax
mov ax [ esi + 0x10 ]
mov [ ebp - 0xe ] ax
mov ax [ esi + 0x14 ]
mov [ ebp - 0xc ] ax
xor eax eax
mov [ ebp - 0xa ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov esi [ esi + 0x18 ]
add [ ebp - 0x8 ] esi
cmp [ ebp - 0x8 ] esi
pop esi
jae r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
leave
retn 0x4
inc [ ebp - 0x4 ]
sub_40f09c
mov edx [ ecx ]
mov eax [ esp + 0x4 ]
cmp edx [ eax ]
jne r-xdata
xor eax eax
mov edx [ ecx + 0x4 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov edx [ ecx + 0xc ]
cmp edx [ eax + 0xc ]
jne r-xdata
mov edx [ ecx + 0x10 ]
cmp edx [ eax + 0x10 ]
jne r-xdata
mov edx [ ecx + 0x14 ]
cmp edx [ eax + 0x14 ]
jne r-xdata
mov ecx [ ecx + 0x18 ]
cmp ecx [ eax + 0x18 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40f0e0
mov eax [ ecx ]
sub eax 0x3c
shl eax 0x4
or eax [ ecx + 0x4 ]
shl eax 0x5
or eax [ ecx + 0x8 ]
shl eax 0x5
or eax [ ecx + 0xc ]
shl eax 0x6
or eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x14 ]
shl eax 0x5
shr ecx 0x1
or eax ecx
retn
sub_40f108
mov eax [ esp + 0x4 ]
mov edx eax
and edx 0x1f
add edx edx
mov [ ecx + 0x14 ] edx
and [ ecx + 0x18 ] 0x0
mov edx eax
shr edx 0x5
and edx 0x3f
mov [ ecx + 0x10 ] edx
mov edx eax
shr edx 0xb
and edx 0x1f
mov [ ecx + 0xc ] edx
mov edx eax
shr edx 0x10
and edx 0x1f
mov [ ecx + 0x8 ] edx
mov edx eax
shr edx 0x15
shr eax 0x19
and edx 0xf
add eax 0x7bc
mov [ ecx + 0x4 ] edx
mov [ ecx ] eax
retn 0x4
sub_40f153
mov ecx [ esp + 0x4 ]
test cl 0x3
jne r-xdata
xor eax eax
push esi
mov eax ecx
push 0x64
cdq
pop esi
idiv esi
pop esi
test edx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax ecx
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
retn 0x4
sub_40f188
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx edi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1a ]
movzx ecx [ ebp - 0x1e ]
movzx edx [ ebp - 0x20 ]
mov [ esi + 0xc ] edi
movzx edi [ ebp - 0x16 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] edi
movzx edi [ ebp - 0x14 ]
dec eax
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x14 ] edi
movzx edi [ ebp - 0x1c ]
inc eax
mov [ esi ] edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x1c ] edi
cmp ecx eax
jbe r-xdata
cmp ecx 0x2
jbe r-xdata
mov edi rw-data
push ebx
xor eax eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
xor edx edx
xor ecx ecx
sub edx ecx
sub edx [ ebp - 0x10 ]
pop edi
add edx [ ebp - 0x8 ]
mov eax esi
mov [ esi + 0x18 ] edx
pop esi
leave
retn 0x4
push edx
call sub_40f153
test al al
je r-xdata
mov ebx [ edi ]
add [ esi + 0x20 ] ebx
inc eax
add edi 0x4
cmp eax ecx
jb r-xdata
pop ebx
inc [ esi + 0x20 ]
sub_40f23f
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
cmp [ ecx ] esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_40f030
push 0x1
push esi
push esi
push [ ebp - 0x4 ]
call sub_401030
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
xor eax eax
xor edx edx
jmp r-xdata
pop esi
leave
retn
sub_40f272
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
push edi
call sub_40f23f
mov ecx esi
mov ebx eax
mov edi edx
call sub_40f23f
cmp edx edi
jg r-xdata
xor eax eax
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax ebx
jae r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40f2a2
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
push edi
call sub_40f23f
mov ecx esi
mov ebx eax
mov edi edx
call sub_40f23f
cmp edx edi
jl r-xdata
xor eax eax
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40f2d2
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40f2a2
test al al
jne r-xdata
xor eax eax
inc eax
push [ esp + 0x8 ]
mov ecx esi
call sub_40f09c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_40f2fc
push ebp
mov ebp esp
sub esp 0x18
push esi
lea eax [ ebp - 0x18 ]
push eax
mov esi ecx
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_40f188
pop esi
leave
retn
sub_40f330
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push ebx
push ebx
push [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x1
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ eax ] bl
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop ebx
leave
retn 0xc
mov [ ebp - 0x1 ] bl
sub_40f362
mov eax [ esp + 0x8 ]
push ebx
push [ esp + 0x10 ]
xor ecx ecx
push eax
push 0xffffffff
push [ esp + 0x14 ]
mov bl 0x1
push ecx
push ecx
mov [ eax ] cx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov al bl
pop ebx
retn 0xc
xor bl bl
sub_40f38d
mov eax [ esp + 0x8 ]
push esi
xor esi esi
cmp [ esp + 0x10 ] esi
jbe r-xdata
pop esi
retn 0xc
mov ecx [ esp + 0x8 ]
inc esi
inc ecx
inc ecx
cmp esi [ esp + 0x10 ]
jb r-xdata
mov dl [ ecx ]
mov [ eax + esi * 2 ] dl
mov dl [ ecx + 0x1 ]
mov [ eax + esi * 2 + 0x1 ] dl
cmp [ ecx ] 0x0
je r-xdata
sub_40f3bd
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
sub edx ecx
push edi
pop edi
inc esi
inc ecx
inc ecx
cmp esi [ ebp + 0x10 ]
jb r-xdata
movzx ax [ ecx + 0x1 ]
mov edi 0x100
imul ax di
movzx di [ ecx ]
add ax di
mov [ edx + ecx ] ax
je r-xdata
sub_40f3fd
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
dec eax
push ebx
mov [ ebp + 0x10 ] eax
mov al [ edx ]
push esi
mov esi [ ebp + 0xc ]
push edi
test al al
je r-xdata
test esi esi
je r-xdata
push 0x3f
pop edi
xor eax eax
cmp [ edx ] al
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0xc
xor eax eax
mov [ esi ] ax
test esi esi
je r-xdata
and eax 0xffffffe0
cmp eax 0xc0
jne r-xdata
cmp eax 0xffff
jbe r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov eax ecx
and eax 0xfffffff0
cmp eax 0xe0
jne r-xdata
mov al [ edx ]
mov bl al
and bl 0xc0
cmp bl 0x80
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax ecx
and eax 0xfffffff8
cmp eax 0xf0
jne r-xdata
mov al [ edx ]
and al 0xc0
cmp al 0x80
jne r-xdata
movsx eax al
and ecx 0x1f
and eax edi
shl ecx 0x6
or eax ecx
inc edx
jmp r-xdata
mov al [ edx ]
test al al
jne r-xdata
mov [ esi ] ax
inc esi
inc esi
cmp eax 0x10ffff
ja r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov al [ edx ]
and al 0xc0
cmp al 0x80
jne r-xdata
mov bl [ edx + 0x1 ]
mov al bl
and al 0xc0
cmp al 0x80
jne r-xdata
movzx ecx al
inc edx
mov eax ecx
cmp ecx 0x80
jb r-xdata
test esi esi
je r-xdata
mov al [ edx + 0x1 ]
and al 0xc0
cmp al 0x80
jne r-xdata
movsx eax [ edx ]
and ecx 0xf
and eax edi
shl ecx 0x6
or eax ecx
movsx ecx bl
shl eax 0x6
and ecx edi
or eax ecx
inc edx
inc edx
jmp r-xdata
lea ecx [ eax - 0x10000 ]
shr ecx 0xa
sub ecx 0x2800
mov [ esi ] cx
inc esi
and eax 0x3ff
inc esi
sub eax 0x2400
jmp r-xdata
mov bl [ edx + 0x2 ]
mov al bl
and al 0xc0
cmp al 0x80
jne r-xdata
movsx eax [ edx ]
and ecx 0x7
and eax edi
shl ecx 0x6
or eax ecx
movsx ecx [ edx + 0x1 ]
shl eax 0x6
and ecx edi
or eax ecx
movsx ecx bl
shl eax 0x6
and ecx edi
or eax ecx
add edx 0x3
sub_40f568
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
call sub_407428
test eax eax
je r-xdata
push esi
mov esi 0x800
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40f330
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_40f330
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40eb0d
pop esi
push 0xffffffff
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
dec eax
dec eax
jmp r-xdata
leave
retn 0x8
sub_40f5da
push ebp
mov ebp esp
mov eax 0x1000
call sub_401200
push esi
mov esi 0x800
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_407b1a
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_407b1a
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40eb0d
pop esi
leave
retn 0x8
sub_40f625
push ebp
mov ebp esp
call sub_407428
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f5da
push esi
push edi
push [ ebp + 0x8 ]
call sub_40b11d
mov esi [ ebp + 0x10 ]
cmp eax esi
jae r-xdata
mov edi esi
push [ ebp + 0x8 ]
call sub_40b11d
mov edi eax
jmp r-xdata
mov eax esi
push [ ebp + 0xc ]
call sub_40b11d
jmp r-xdata
push [ ebp + 0xc ]
call sub_40b11d
cmp eax esi
jae r-xdata
pop ebp
retn 0xc
push eax
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
dec eax
pop edi
dec eax
pop esi
jmp r-xdata
sub_40f695
push ebp
mov ebp esp
sub esp 0x20
call sub_407428
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x1e ] ax
push 0xa
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] si
call sub_40f330
cmp [ ebp - 0xc ] 0x3f
jne r-xdata
push [ ebp + 0x8 ]
call [ CharUpperW@IAT ]
jmp r-xdata
push [ ebp - 0xc ]
call sub_40eb53
mov [ ebp - 0xc ] al
push 0x1000000
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40f362
movzx eax [ ebp - 0x20 ]
mov eax esi
jmp r-xdata
leave
retn 0x4
pop esi
sub_40f6fc
mov edx [ esp + 0x4 ]
xor eax eax
jmp r-xdata
movzx ecx [ edx ]
cmp cx 0x30
jae r-xdata
cmp cx 0x39
ja r-xdata
retn 0x4
imul eax eax 0xa
movzx ecx cx
inc edx
lea eax [ eax + ecx - 0x30 ]
inc edx
sub_40f722
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
mov edi ecx
call [ GetCPInfo@IAT ]
cmp [ ebp - 0x14 ] 0x1
seta al
mov [ edi + 0x100 ] al
push esi
call [ IsDBCSLeadByte@IAT ]
test eax eax
setne al
mov [ esi + edi ] al
inc esi
cmp esi 0x100
jb r-xdata
pop edi
pop esi
leave
retn
sub_40f77e
mov eax [ esp + 0x4 ]
push esi
jmp r-xdata
mov dl [ eax ]
test dl dl
jne r-xdata
movzx esi dl
cmp [ esi + ecx ] 0x0
je r-xdata
xor eax eax
movsx edx dl
cmp edx [ esp + 0xc ]
je r-xdata
inc eax
inc eax
jmp r-xdata
pop esi
retn 0x8
inc eax
sub_40f7a8
push esi
mov esi [ esp + 0x8 ]
mov dl [ esi ]
xor eax eax
test dl dl
je r-xdata
pop esi
retn 0x8
push edi
movsx edx dl
cmp edx [ esp + 0x10 ]
jne r-xdata
inc esi
inc esi
jmp r-xdata
inc esi
mov eax esi
mov dl [ esi ]
test dl dl
jne r-xdata
movzx edi dl
cmp [ edi + ecx ] 0x0
je r-xdata
pop edi
sub_40f7e6
mov eax [ esp + 0xc ]
movzx edx [ eax + ecx + 0x4 ]
mov eax [ esp + 0x8 ]
movzx eax [ eax + ecx + 0x4 ]
sub eax edx
imul edx edx 0xc
add edx [ esp + 0x4 ]
push esi
movzx esi [ eax + ecx + 0x29 ]
push edi
movzx edi [ esi + ecx + 0x4 ]
cmp edi eax
je r-xdata
movzx eax [ eax + ecx + 0x29 ]
lea eax [ ecx + eax * 4 + 0xb8 ]
mov ecx [ eax ]
pop edi
mov [ edx ] ecx
mov [ eax ] edx
pop esi
retn 0xc
dec esi
lea edi [ ecx + esi * 4 + 0xb8 ]
push ebx
mov ebx [ edi ]
mov [ edx ] ebx
mov [ edi ] edx
movzx esi [ esi + ecx + 0x4 ]
mov edi esi
imul edi edi 0xc
add edx edi
sub eax esi
pop ebx
sub_40f85a
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
shl ebx 0x14
cmp [ edi ] ebx
jne r-xdata
push esi
call sub_40f846
push 0xc
xor edx edx
pop ecx
mov eax ebx
div ecx
mov esi eax
inc esi
inc esi
imul esi esi 0xc
push esi
call sub_40acff
mov [ edi + 0xac ] eax
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
lea eax [ eax + esi - 0xc ]
mov [ edi + 0x158 ] eax
mov [ edi ] ebx
mov al 0x1
mov ecx rw-data
call sub_403495
xor al al
jmp r-xdata
pop edi
pop ebx
retn 0x4
pop esi
sub_40f8b5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x98
mov esi ecx
push 0x0
lea eax [ esi + 0xb8 ]
push eax
call sub_40ad9c
mov edi [ esi ]
mov eax edi
cdq
and edx 0x7
add eax edx
sar eax 0x3
push 0xc
pop ebx
xor edx edx
div ebx
push 0xc
xor edx edx
mov ecx [ esi + 0xac ]
mov [ esi + 0x150 ] ecx
mov ebx eax
imul ebx ebx 0x54
sub edi ebx
mov eax edi
mov [ ebp - 0x8 ] eax
pop edi
div edi
push 0xc
xor edx edx
inc eax
imul eax eax 0xc
lea edi [ eax + ecx ]
mov eax [ ebp - 0x8 ]
add ecx eax
mov [ esi + 0x15c ] ecx
pop ecx
mov eax ebx
div ecx
push 0x4
pop edx
push edx
mov [ esi + 0x154 ] edi
mov [ esi + 0xb0 ] edi
pop ecx
imul eax eax 0xc
add eax edi
mov [ esi + 0xb4 ] eax
xor eax eax
inc eax
mov [ esi + eax + 0x3 ] al
inc eax
dec edx
jne r-xdata
inc eax
mov [ esi + ecx + 0x4 ] al
inc ecx
inc eax
inc eax
cmp ecx 0x8
jl r-xdata
inc eax
jmp r-xdata
cmp ecx 0xc
jl r-xdata
mov [ esi + ecx + 0x4 ] al
inc ecx
add eax 0x3
inc eax
jmp r-xdata
cmp ecx 0x26
jl r-xdata
mov [ esi + ecx + 0x4 ] al
inc ecx
add eax 0x4
xor ecx ecx
mov [ ebp - 0x4 ] 0xffffffd7
sub [ ebp - 0x4 ] esi
mov [ esi + 0xaa ] cl
lea eax [ esi + 0x2a ]
mov [ ebp - 0x8 ] 0x80
movzx edx [ esi + ecx + 0x4 ]
mov edi [ ebp - 0x4 ]
xor ebx ebx
add edi eax
cmp edx edi
setl bl
add ecx ebx
mov [ eax ] cl
inc eax
dec [ ebp - 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40f9b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
movzx ebx [ eax + esi + 0x29 ]
mov eax [ ebp + 0x10 ]
movzx edx [ eax + esi + 0x29 ]
mov [ ebp + 0xc ] ebx
cmp ebx edx
jne r-xdata
lea ecx [ esi + edx * 4 + 0xb8 ]
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
push edx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call sub_40f7e6
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
imul eax eax 0xc
mov edx [ edi ]
push eax
push ebx
push edi
mov [ ecx ] edx
call sub_40adc9
mov eax [ ebp + 0xc ]
lea eax [ esi + eax * 4 + 0xb8 ]
mov ecx [ eax ]
mov [ ebx ] ecx
mov [ eax ] ebx
mov eax edi
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
pop edi
sub_40fa1d
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x650 ]
movzx eax [ eax ]
mov al [ eax + esi + 0x96c ]
mov [ esi + 0xa6e ] al
push edi
lea edi [ ecx + 0x2 ]
mov ecx [ ecx + 0x8 ]
movzx ecx [ ecx ]
movzx edx [ edi ]
movzx edx [ edx + esi + 0x96c ]
movzx ebx [ edi + 0x1 ]
movzx ecx [ ecx + esi + 0x86b ]
shl ebx 0x5
add edx ebx
lea ecx [ ecx + edx * 2 + 0x4f8 ]
mov edx [ esi + 0x664 ]
sar edx 0x1a
and edx 0x20
add ecx edx
movzx edx [ esi + 0xa6d ]
add ecx edx
movzx eax al
lea edx [ esi + 0x4a70 ]
shr [ edx + 0x8 ] 0xe
mov ebp [ edx + 0x8 ]
add ecx eax
mov eax [ edx + 0x4 ]
sub eax [ edx ]
xor edx edx
div ebp
lea ecx [ esi + ecx * 2 ]
movzx ebx [ ecx ]
cmp eax ebx
jae r-xdata
mov [ esi + 0x4a7c ] ebx
movzx eax [ ecx ]
movzx edx ax
add edx 0x20
sar edx 0x7
sub eax edx
mov [ ecx ] ax
mov [ esi + 0x4a80 ] 0x4000
movzx eax [ ecx ]
mov cl [ esi + 0xa6c ]
shr eax 0xa
movzx eax [ eax + r--data ]
mov [ esi + 0x658 ] eax
mov [ esi + 0x654 ] 0x1
movzx eax [ edi ]
mov [ eax + esi + 0x66c ] cl
and [ esi + 0x650 ] 0x0
mov [ esi + 0xa6d ] 0x0
mov [ esi + 0x650 ] edi
mov al [ edi + 0x1 ]
cmp al 0x80
setb dl
add dl al
mov [ edi + 0x1 ] dl
and [ esi + 0x4a7c ] 0x0
movzx eax [ ecx ]
mov [ esi + 0x4a80 ] eax
movzx eax [ ecx ]
movzx edx ax
add edx 0x20
sar edx 0x7
sub eax edx
sub eax 0xffffff80
mov [ ecx ] ax
inc [ esi + 0x664 ]
mov [ esi + 0xa6d ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40fb67
lea eax [ ecx + 0xca78 ]
mov edx [ eax ]
mov [ ecx + 0xca7c ] edx
lea edx [ ecx + 0xca74 ]
push esi
mov esi [ edx ]
mov [ eax ] esi
lea eax [ ecx + 0xca70 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
pop esi
retn 0x4
sub_40fb94
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ecx + 0xca8c ]
mov eax esi
sub eax [ ebp + 0xc ]
mov edx 0x3ffeff
push edi
cmp eax edx
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp esi edx
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x3fffff
mov edx [ ecx + 0xcc34 ]
mov edi [ ebp + 0x8 ]
add eax edx
add edx esi
add esi edi
push 0x8
mov [ ecx + 0xca8c ] esi
pop esi
cmp edi esi
jb r-xdata
mov esi [ ecx + 0xcc34 ]
mov ebx [ ecx + 0xca8c ]
dec [ ebp + 0x8 ]
mov edx eax
and edx edi
mov dl [ edx + esi ]
mov [ esi + ebx ] dl
mov edx [ ecx + 0xca8c ]
inc eax
inc edx
and edx edi
cmp [ ebp + 0x8 ] 0x0
mov [ ecx + 0xca8c ] edx
jne r-xdata
test edi edi
jbe r-xdata
mov ecx edi
shr ecx 0x3
mov cl [ eax ]
mov [ edx ] cl
cmp edi 0x1
jbe r-xdata
mov bl [ eax ]
mov [ edx ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x3 ]
mov [ edx + 0x3 ] bl
mov bl [ eax + 0x4 ]
mov [ edx + 0x4 ] bl
mov bl [ eax + 0x5 ]
mov [ edx + 0x5 ] bl
mov bl [ eax + 0x6 ]
mov [ edx + 0x6 ] bl
mov bl [ eax + 0x7 ]
mov [ edx + 0x7 ] bl
add eax esi
add edx esi
sub edi esi
dec ecx
jne r-xdata
mov cl [ eax + 0x1 ]
mov [ edx + 0x1 ] cl
cmp edi 0x2
jbe r-xdata
mov cl [ eax + 0x2 ]
mov [ edx + 0x2 ] cl
cmp edi 0x3
jbe r-xdata
mov cl [ eax + 0x3 ]
mov [ edx + 0x3 ] cl
cmp edi 0x4
jbe r-xdata
mov cl [ eax + 0x4 ]
mov [ edx + 0x4 ] cl
cmp edi 0x5
jbe r-xdata
mov cl [ eax + 0x5 ]
mov [ edx + 0x5 ] cl
cmp edi 0x6
jbe r-xdata
mov al [ eax + 0x6 ]
mov [ edx + 0x6 ] al
jmp r-xdata
sub_40fca3
push esi
mov esi ecx
mov ecx [ esi + 0xca94 ]
mov eax [ esi ]
push edi
mov edi ecx
sub edi eax
jns r-xdata
cmp eax 0x4000
jle r-xdata
xor al al
jmp r-xdata
mov edi ecx
test edi edi
jle r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0xca94 ]
sub ecx 0x1e
mov [ esi + 0xca98 ] ecx
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
add [ esi + 0xca94 ] eax
and [ esi ] 0x0
mov [ esi + 0xca94 ] edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
push edi
add eax ecx
push eax
push ecx
call sub_40ae4c
mov ecx [ esi + 0xc ]
mov eax 0x8000
sub eax edi
and eax 0xfffffff0
push eax
mov eax [ esi + 0x8 ]
add eax edi
push eax
call sub_409a43
test eax eax
jle r-xdata
sub_40fd1d
push esi
mov esi ecx
mov edx [ esi + 0xcc54 ]
mov eax [ esi + 0xcc44 ]
cmp edx eax
mov ecx [ esi + 0xcc40 ]
push edi
mov edi [ esi + 0xcc50 ]
jg r-xdata
pop edi
pop esi
retn 0x8
jl r-xdata
sub ecx edi
sbb eax edx
xor edi edi
cmp edi eax
push ebx
mov ebx [ esp + 0x14 ]
jl r-xdata
cmp edi ecx
jae r-xdata
mov ecx [ esi + 0xc ]
push ebx
push [ esp + 0x14 ]
call sub_409ba5
mov eax [ esp + 0x14 ]
add [ esi + 0xcc50 ] eax
pop ebx
adc [ esi + 0xcc54 ] edi
jg r-xdata
mov ebx ecx
cmp ebx ecx
jbe r-xdata
sub_40fd7d
push ebp
mov ebp esp
sub esp 0x80
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x40
xor edi edi
push edi
lea eax [ ebp - 0x40 ]
push eax
mov [ esi ] ebx
call sub_40ad9c
xor ecx ecx
cmp ebx edi
jbe r-xdata
mov eax ebx
shl eax 0x2
push eax
push edi
lea eax [ esi + 0x1488 ]
push eax
mov [ ebp - 0x40 ] edi
call sub_40ad9c
lea ebx [ esi + 0x44 ]
mov [ ebx ] edi
mov [ esi + 0x4 ] edi
xor eax eax
mov [ ebp + 0xc ] 0x1
mov edx ebx
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
and eax 0xf
lea eax [ ebp + eax * 4 - 0x40 ]
inc [ eax ]
inc ecx
cmp ecx ebx
jb r-xdata
mov edi [ ebp + 0xc ]
add eax [ ebp + edi * 4 - 0x40 ]
push 0x10
pop ecx
sub ecx edi
mov edi eax
shl edi cl
mov ecx [ ebp + 0xc ]
mov ecx [ ebp + ecx * 4 - 0x44 ]
add ecx [ edx ]
add eax eax
inc [ ebp + 0xc ]
mov [ edx - 0x3c ] edi
mov [ edx + 0x4 ] ecx
add edx 0x4
cmp [ ebp + 0xc ] 0x10
jb r-xdata
push 0x40
push ebx
lea eax [ ebp - 0x80 ]
push eax
call sub_40adc9
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
jbe r-xdata
cmp edi 0x12a
jb r-xdata
mov eax [ ebp + 0x8 ]
mov al [ edx + eax ]
and al 0xf
je r-xdata
mov [ esi + 0x84 ] 0x7
cmp edi 0x12b
ja r-xdata
inc edx
cmp edx edi
jb r-xdata
movzx eax al
lea eax [ ebp + eax * 4 - 0x80 ]
mov ecx [ eax ]
mov [ esi + ecx * 4 + 0x1488 ] edx
inc ecx
mov [ eax ] ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ esi + 0x488 ]
mov [ ebp + 0x8 ] eax
mov [ esi + 0x84 ] 0xa
jmp r-xdata
cmp eax [ ecx ]
jae r-xdata
mov ecx [ esi + 0x84 ]
xor edx edx
inc edx
mov ebx edx
shl ebx cl
xor edi edi
test ebx ebx
jbe r-xdata
cmp edx 0x10
jae r-xdata
push 0x10
mov [ esi + edi + 0x88 ] dl
sub eax [ esi + edx * 4 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x44 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
inc edx
add ecx 0x4
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov eax [ esi + eax * 4 + 0x1488 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
push 0x10
pop ecx
sub ecx [ esi + 0x84 ]
mov eax edi
shl eax cl
lea ecx [ esi + edx * 4 + 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] 0x4
inc edi
cmp edi ebx
jb r-xdata
sub_40fee7
push esi
mov esi ecx
movzx eax [ esi ]
mov cl [ esi + 0x2 ]
movzx edx ax
shr edx cl
sub eax edx
mov [ esi ] ax
xor eax eax
test edx edx
sete al
pop esi
add eax edx
retn
sub_40ff05
mov eax ecx
mov cl [ eax + 0x2 ]
cmp cl 0x7
jae r-xdata
retn
dec [ eax + 0x3 ]
jne r-xdata
shl [ eax ] 0x1
mov dl 0x3
shl dl cl
inc cl
mov [ eax + 0x2 ] cl
mov [ eax + 0x3 ] dl
sub_40ff24
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
lea esi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x8
sub_40ff4c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi ]
call sub_40ad37
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_403495
sub_40ffc0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
or [ esi + 0x8 ] 0xffffffff
push edi
push 0x4
mov [ esi + 0x18 ] eax
pop edi
mov ecx [ esi + 0x18 ]
call sub_40ff95
mov ecx [ esi + 0x4 ]
shl ecx 0x8
or ecx eax
dec edi
mov [ esi + 0x4 ] ecx
jne r-xdata
pop edi
pop esi
retn 0x4
sub_40fff4
push ebp
mov ebp esp
mov eax [ ecx + 0xb0 ]
sub esp 0x10
cmp eax [ ecx + 0xb4 ]
je r-xdata
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea edi [ ecx + 0x4 ]
lea edx [ ecx + 0xb8 ]
mov [ ebp - 0x4 ] 0x26
mov esi 0xffff
jmp r-xdata
mov [ eax ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov eax [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
lea ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0xc ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebx + 0x8 ] eax
mov ebx esi
mov [ ebp - 0xc ] eax
mov [ eax ] bx
movzx bx [ edi ]
mov [ eax + 0x2 ] bx
add edx 0x4
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
cmp edx eax
je r-xdata
lea eax [ ebp - 0x10 ]
mov esi edx
cmp edx eax
jne r-xdata
jmp r-xdata
lea eax [ edx + 0x4 ]
mov ebx [ eax ]
add edx 0x8
mov edi [ edx ]
mov [ edi + 0x4 ] ebx
mov eax [ eax ]
mov edx [ edx ]
mov [ eax + 0x8 ] edx
movzx eax [ esi + 0x2 ]
cmp eax 0x80
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ edx + 0x2 ]
imul eax eax 0xc
mov edi esi
add eax edx
cmp [ eax ] di
je r-xdata
movzx edi [ ecx + eax + 0x29 ]
movzx edx [ ecx + edi + 0x4 ]
cmp edx eax
je r-xdata
lea edx [ eax - 0x81 ]
shr edx 0x7
inc edx
mov edi edx
imul edi edi 0xffffff80
add eax edi
movzx edi [ eax + 0x2 ]
movzx ebx [ edx + 0x2 ]
add edi ebx
cmp edi 0x10000
jge r-xdata
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
lea eax [ ecx + edi * 4 + 0xb8 ]
mov edx [ eax ]
mov [ esi ] edx
mov [ eax ] esi
movzx ebx [ ecx + edi + 0x3 ]
dec edi
mov edx eax
sub edx ebx
sub eax edx
imul eax eax 0xc
lea edx [ ecx + edx * 4 + 0xb4 ]
mov ebx [ edx ]
add eax esi
mov [ eax ] ebx
mov [ edx ] eax
mov edi [ ecx + 0x14c ]
mov [ esi ] edi
mov [ ecx + 0x14c ] esi
add esi 0x600
dec edx
jne r-xdata
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0x4 ]
mov [ edi + 0x4 ] ebx
mov edi [ eax + 0x4 ]
mov ebx [ eax + 0x8 ]
mov [ edi + 0x8 ] ebx
mov ax [ eax + 0x2 ]
add [ edx + 0x2 ] ax
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_410154
push esi
mov esi ecx
cmp [ esi + 0xaa ] 0x0
push edi
mov edi [ esp + 0xc ]
jne r-xdata
mov ecx edi
lea eax [ esi + edi * 4 + 0xb8 ]
mov [ esi + 0xaa ] 0xff
call sub_40fff4
lea ecx [ esi + edi * 4 + 0xb8 ]
mov eax [ ecx ]
test eax eax
je r-xdata
dec [ esi + 0xaa ]
movzx eax [ edi + esi + 0x4 ]
imul eax eax 0xc
lea edx [ esi + 0x15c ]
mov ecx [ edx ]
mov edi ecx
sub edi [ esi + 0x150 ]
cmp edi eax
jle r-xdata
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
mov [ ecx ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
sub ecx eax
mov [ edx ] ecx
lea ecx [ esi + 0x154 ]
sub [ ecx ] eax
mov eax [ ecx ]
jmp r-xdata
inc ecx
add eax 0x4
cmp ecx 0x26
je r-xdata
push ebx
lea eax [ esi + ecx * 4 + 0xb8 ]
mov ebx [ eax ]
mov edx [ ebx ]
push edi
push ecx
push ebx
mov ecx esi
mov [ eax ] edx
call sub_40f7e6
mov eax ebx
pop ebx
pop edi
pop esi
retn 0x4
sub_4101f1
mov eax [ esp + 0x4 ]
push esi
movzx esi [ eax + ecx + 0x29 ]
lea edx [ ecx + esi * 4 + 0xb8 ]
mov eax [ edx ]
test eax eax
je r-xdata
movzx edx [ esi + ecx + 0x4 ]
mov eax [ ecx + 0xb0 ]
imul edx edx 0xc
add edx eax
mov [ ecx + 0xb0 ] edx
cmp edx [ ecx + 0xb4 ]
jbe r-xdata
mov ecx [ eax ]
mov [ edx ] ecx
jmp r-xdata
pop esi
retn 0x4
movzx eax [ esi + ecx + 0x4 ]
imul eax eax 0xc
sub edx eax
push esi
mov [ ecx + 0xb0 ] edx
call sub_410154
sub_410246
lea edx [ ecx + 0xb4 ]
mov eax [ edx ]
cmp eax [ ecx + 0xb0 ]
je r-xdata
lea edx [ ecx + 0xb8 ]
cmp [ edx ] 0x0
je r-xdata
add eax 0xfffffff4
mov [ edx ] eax
retn
push 0x0
call sub_410154
retn
mov eax [ edx ]
mov ecx [ eax ]
mov [ edx ] ecx
retn
sub_410276
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
movzx ebx [ esi + edi + 0x29 ]
movzx eax [ esi + edi + 0x2a ]
cmp ebx eax
jne r-xdata
lea eax [ esi + 0x1 ]
push eax
call sub_4101f1
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
imul esi esi 0xc
push esi
mov esi [ ebp + 0x8 ]
push esi
push eax
call sub_40adc9
lea eax [ edi + ebx * 4 + 0xb8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov [ eax ] esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4102c9
push ebx
mov ebx ecx
mov ecx [ esp + 0x8 ]
add ecx 0x4a8c
call sub_410246
test eax eax
je r-xdata
pop ebx
retn 0xc
push esi
mov esi [ esp + 0x14 ]
push edi
xor ecx ecx
inc ecx
mov [ eax ] cx
mov ecx [ esp + 0x14 ]
lea edi [ eax + 0x2 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
mov [ eax + 0x8 ] ebx
mov [ ecx + 0x2 ] eax
pop esi
sub_41031e
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi 0x100
push edi
mov esi ecx
push 0x0
lea eax [ esi + 0x66c ]
push eax
call sub_40ad9c
lea ebx [ esi + 0x4a8c ]
mov ecx ebx
call sub_40f8b5
mov eax [ esi + 0x660 ]
cmp eax 0xc
jl r-xdata
or ecx 0xffffffff
sub ecx eax
mov [ esi + 0x668 ] ecx
mov ecx ebx
call sub_410246
mov [ esi + 0x64c ] eax
mov [ esi + 0x644 ] eax
and [ eax + 0x8 ] 0x0
mov eax [ esi + 0x660 ]
mov [ esi + 0x65c ] eax
mov eax [ esi + 0x644 ]
mov [ eax ] di
mov eax [ esi + 0x644 ]
mov ecx 0x101
mov [ eax + 0x2 ] cx
mov edi 0x80
push edi
mov ecx ebx
call sub_4101f1
mov ecx [ esi + 0x644 ]
mov [ ecx + 0x4 ] eax
mov eax [ esi + 0x644 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x650 ] eax
mov eax [ esi + 0x668 ]
xor ecx ecx
mov [ esi + 0x664 ] eax
mov [ esi + 0xa6d ] cl
xor eax eax
push 0xc
pop eax
mov edx [ esi + 0x644 ]
mov edx [ edx + 0x4 ]
mov [ eax + edx ] cl
mov edx [ esi + 0x644 ]
mov edx [ edx + 0x4 ]
mov [ edx + eax + 0x1 ] 0x1
mov edx [ esi + 0x644 ]
mov edx [ edx + 0x4 ]
and [ edx + eax + 0x2 ] 0x0
add eax 0x6
inc ecx
cmp eax 0x600
jl r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0xa70 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ecx ]
cdq
idiv ebx
mov edx 0x4000
sub edx eax
mov eax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x10
dec [ ebp - 0x14 ]
mov [ eax ] dx
jne r-xdata
add [ ebp - 0xc ] 0x2
inc ecx
inc ecx
cmp ecx r--data
jl r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] 0x8
inc [ ebp - 0x4 ]
add [ ebp - 0x10 ] edi
cmp [ ebp - 0x4 ] edi
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
add ebx 0x2
mov ecx r--data
mov [ ebp - 0xc ] eax
xor edx edx
lea ecx [ esi + 0x3 ]
mov [ ecx - 0x1 ] 0x3
mov [ ecx - 0x3 ] ax
mov [ ecx ] 0x4
add ecx 0x4
dec esi
jne r-xdata
inc edx
cmp edx 0x19
jl r-xdata
lea eax [ edx + 0x2 ]
push 0x10
imul eax eax 0x28
pop esi
pop edi
pop esi
pop ebx
leave
retn
sub_410496
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
mov [ esi + 0xa6c ] bl
mov [ esi + 0x660 ] eax
call sub_41031e
push 0x9
push 0x4
lea eax [ esi + 0x86e ]
push eax
mov [ esi + 0x86c ] 0x0
mov [ esi + 0x86d ] 0x2
call sub_40ad9c
push 0xf5
push 0x6
lea eax [ esi + 0x877 ]
push eax
call sub_40ad9c
xor eax eax
mov [ esi + eax + 0x76c ] al
inc eax
cmp eax 0x3
jl r-xdata
mov edx eax
mov edi ebx
mov ecx 0x100
jmp r-xdata
cmp eax ecx
jl r-xdata
dec edi
mov [ esi + eax + 0x76c ] dl
jne r-xdata
push 0x40
push 0x0
lea eax [ esi + 0x96c ]
push eax
call sub_40ad9c
push 0xc0
push 0x8
lea eax [ esi + 0x9ac ]
push eax
call sub_40ad9c
pop edi
mov [ esi + 0x642 ] 0x7
pop esi
pop ebx
retn 0x4
inc eax
inc ebx
mov edi ebx
inc edx
sub_410541
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx ecx
movzx eax [ ebx ]
mov [ ebp - 0x18 ] eax
dec eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x650 ]
push esi
push edi
jmp r-xdata
cmp eax [ ebx + 0x4 ]
jne r-xdata
lea esi [ eax - 0x6 ]
push esi
push eax
call sub_40ff24
mov eax esi
mov ecx [ ebx + 0x4 ]
add [ ecx + 0x1 ] 0x4
lea ecx [ ebx + 0x2 ]
add [ ecx ] 0x4
movzx edx [ ecx ]
movzx esi [ eax + 0x1 ]
movzx edx dx
sub edx esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
cmp [ esi + 0x65c ] edx
setne dl
mov [ ebp - 0x14 ] edx
movzx edx [ eax + 0x1 ]
add edx [ ebp - 0x14 ]
sar edx 0x1
mov [ eax + 0x1 ] dl
movzx dx dl
mov [ ecx ] dx
dec [ ebp - 0x4 ]
jne r-xdata
mov esi eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
mov edx eax
movsw [ edi ] [ esi ]
movzx edx [ eax + 0x7 ]
sub [ ebp - 0x8 ] edx
mov esi [ ebp - 0x14 ]
add eax 0x6
mov [ ebp - 0x10 ] edx
add edx esi
sar edx 0x1
mov [ eax + 0x1 ] dl
movzx dx dl
add [ ecx ] dx
mov dl [ eax + 0x1 ]
cmp dl [ eax - 0x5 ]
jbe r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
lea esi [ ebp - 0x20 ]
mov edi edx
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x20 ]
mov esi [ ebp - 0x10 ]
shr edx 0x8
cmp dl [ esi - 0x5 ]
mov edx esi
ja r-xdata
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
sub eax 0x6
cmp [ eax ] 0x0
je r-xdata
lea esi [ edx - 0x6 ]
mov edi edx
movsd [ edi ] [ esi ]
sub edx 0x6
movsw [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
cmp edx [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x650 ] eax
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push [ ebx + 0x4 ]
add ecx 0x4a8c
call sub_40f9b0
mov [ ebx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub [ ebx ] dx
add eax edx
movzx edx [ ebx ]
cmp dx 0x1
jne r-xdata
mov edx eax
sar edx 0x1
sub eax edx
add [ ecx ] ax
mov ecx [ ebp - 0x18 ]
movzx eax [ ebx ]
inc ecx
sar ecx 0x1
inc eax
sar eax 0x1
cmp ecx eax
je r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x10 ]
shr edx 0x8
mov bl dl
shr bl 0x1
sub dl bl
sar eax 0x1
cmp eax 0x1
mov [ ebp - 0xf ] dl
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov esi [ ebp - 0x14 ]
inc eax
sar eax 0x1
movzx eax [ eax + edx + 0x4ab5 ]
lea eax [ edx + eax * 4 + 0x4b44 ]
mov edi [ eax ]
mov [ esi ] edi
mov [ eax ] esi
mov [ edx + 0x650 ] ecx
lea esi [ ebp - 0x10 ]
mov edi ecx
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4106d0
push ebp
mov ebp esp
sub esp 0x108
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
mov eax [ ebx + 0x650 ]
mov ecx [ ebx + 0x644 ]
push esi
mov esi [ eax + 0x2 ]
push edi
lea edi [ ebp - 0x108 ]
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x8 ] 0x0
mov [ ebp - 0x108 ] eax
lea edi [ ebp - 0x104 ]
je r-xdata
mov ecx [ ecx + 0x8 ]
cmp [ ecx ] 0x1
je r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov dl [ esi ]
inc esi
mov [ ebp - 0x6 ] esi
movzx esi [ ecx ]
mov [ ebp - 0x8 ] dl
cmp si 0x1
je r-xdata
lea eax [ ecx + 0x2 ]
mov edx [ ebx + 0x650 ]
mov eax [ ecx + 0x4 ]
mov dl [ edx ]
jmp r-xdata
cmp [ eax + 0x2 ] esi
jne r-xdata
mov al [ ecx + 0x3 ]
cmp ecx [ ebx + 0x4bdc ]
ja r-xdata
mov ecx [ eax + 0x2 ]
mov [ edi ] eax
add edi 0x4
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
cmp [ eax ] dl
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x108 ]
cmp edi eax
jne r-xdata
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov eax ecx
jmp r-xdata
add eax 0x6
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
sub edi 0x4
push [ edi ]
push ebx
call sub_4102c9
mov ecx eax
test ecx ecx
je r-xdata
cmp [ eax ] dl
jne r-xdata
lea eax [ ebp - 0x108 ]
cmp edi eax
je r-xdata
add eax 0x6
movzx eax [ eax + 0x1 ]
movzx edx [ ecx + 0x2 ]
movzx esi si
dec eax
sub edx esi
sub edx eax
lea esi [ eax + eax ]
cmp esi edx
ja r-xdata
mov eax edx
imul eax eax 0x3
lea eax [ eax + esi - 0x1 ]
lea esi [ edx + edx ]
xor edx edx
div esi
imul eax eax 0x5
cmp edx eax
sbb eax eax
neg eax
jmp r-xdata
mov [ ebp - 0x7 ] al
inc al
jmp r-xdata
sub_4107ea
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
mov esi [ ebx + 0x650 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx [ ebp - 0x20 ]
mov eax ecx
shr eax 0x8
xor esi esi
cmp al 0x1f
jae r-xdata
xor edx edx
cmp [ ebx + 0x65c ] edx
jne r-xdata
mov eax [ ebx + 0x644 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x4bdc ]
mov [ eax ] cl
inc [ ebx + 0x4bdc ]
mov eax [ ebx + 0x4bdc ]
mov [ ebp - 0x14 ] eax
cmp eax [ ebx + 0x4be8 ]
jae r-xdata
push esi
push 0x1
mov ecx ebx
call sub_4106d0
mov ecx [ ebx + 0x650 ]
mov [ ecx + 0x2 ] eax
mov eax [ ebx + 0x650 ]
mov eax [ eax + 0x2 ]
mov [ ebx + 0x64c ] eax
mov [ ebx + 0x644 ] eax
test eax eax
jne r-xdata
cmp [ edi ] 0x1
je r-xdata
mov ecx ebx
call sub_41031e
mov [ ebx + 0xa6c ] 0x0
jmp r-xdata
cmp [ ebp - 0x1e ] edx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea esi [ edi + 0x2 ]
mov al [ esi + 0x1 ]
cmp al 0x20
setb dl
add dl al
mov [ esi + 0x1 ] dl
mov esi [ edi + 0x4 ]
cmp [ esi ] cl
je r-xdata
mov ecx [ ebx + 0x650 ]
mov [ ecx + 0x2 ] eax
mov eax [ ebx + 0x644 ]
mov [ ebp - 0x1e ] eax
cmp [ ebp - 0x1e ] eax
ja r-xdata
mov al [ esi + 0x1 ]
mov ecx [ ebp - 0x20 ]
cmp al 0x73
jae r-xdata
add esi 0x6
cmp [ esi ] cl
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x4 ] eax
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x1e ]
mov [ ebx + 0x644 ] eax
mov [ ebx + 0x64c ] eax
dec [ ebx + 0x65c ]
jne r-xdata
push esi
push edx
mov ecx ebx
call sub_4106d0
mov [ ebp - 0x1e ] eax
test eax eax
je r-xdata
add al 0x2
mov [ esi + 0x1 ] al
add [ edi + 0x2 ] 0x2
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al [ esi - 0x5 ]
jb r-xdata
push 0x1
lea ecx [ ebx + 0x4a8c ]
call sub_4101f1
test eax eax
je r-xdata
test al 0x1
jne r-xdata
mov eax [ ebx + 0x644 ]
movzx ecx [ ebp - 0x1f ]
movzx esi [ eax ]
movzx edi [ eax + 0x2 ]
sub edi ecx
sub edi esi
mov [ ebp - 0xc ] esi
mov esi [ ebx + 0x64c ]
inc edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] esi
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x1e ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x64c ]
xor ecx ecx
cmp eax [ ebx + 0x644 ]
setne cl
sub [ ebx + 0x4bdc ] ecx
jmp r-xdata
lea eax [ esi - 0x6 ]
push eax
push esi
mov [ ebp - 0x14 ] eax
call sub_40ff24
mov esi [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
lea ecx [ esi + 0x2 ]
mov esi ecx
mov edi eax
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov [ edx + 0x4 ] eax
mov dl [ eax + 0x1 ]
cmp dl 0x1e
jae r-xdata
shl eax 0x3
lea ecx [ esi + 0x2 ]
movzx edx [ ecx ]
movzx edx dx
cmp eax edx
mov eax [ ebp - 0x4 ]
sbb edx edx
shl eax 0x2
inc edx
cmp [ ebp - 0xc ] eax
sbb eax eax
inc eax
and dx ax
mov eax [ ebp - 0x4 ]
add eax eax
add dx dx
cmp eax [ ebp - 0xc ]
sbb eax eax
neg eax
add dx ax
movzx eax [ ecx ]
jmp r-xdata
shr eax 0x1
push eax
push [ esi + 0x4 ]
lea ecx [ ebx + 0x4a8c ]
call sub_410276
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov [ eax + 0x1 ] 0x78
add dl dl
mov [ eax + 0x1 ] dl
jmp r-xdata
add dx ax
movzx eax dx
mov [ ecx ] dx
movzx edx ax
lea eax [ edx + 0x6 ]
imul eax [ ebp - 0x18 ]
add edx edi
mov edi edx
imul edi edi 0x6
add eax eax
cmp eax edi
mov [ ebp - 0x8 ] edx
mov edi edx
jae r-xdata
mov eax [ ebp - 0x4 ]
imul edi edi 0xf
cmp eax edi
sbb edi edi
imul edx edx 0xc
inc edi
cmp eax edx
sbb edx edx
inc edx
add edi edx
mov edx [ ebp - 0x8 ]
imul edx edx 0x9
cmp eax edx
sbb eax eax
inc eax
lea edx [ edi + eax + 0x4 ]
movzx eax [ ecx ]
add eax edx
shl edi 0x2
cmp eax edi
sbb edi edi
inc edi
cmp edx eax
sbb eax eax
neg eax
lea edx [ edi + eax + 0x1 ]
movzx eax [ ecx ]
add eax 0x3
jmp r-xdata
movzx ax [ eax + 0x1 ]
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
push 0x3
pop edx
cmp edx [ ebp - 0xc ]
sbb edx edx
neg edx
add dx [ ebx + 0x658 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x10 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov [ ecx ] ax
mov ecx [ ebp - 0x14 ]
mov eax edi
imul eax eax 0x6
add eax [ esi + 0x4 ]
inc edi
mov [ eax + 0x2 ] ecx
mov cl [ ebp - 0x20 ]
mov [ eax ] cl
mov [ eax + 0x1 ] dl
mov [ esi ] di
mov esi [ esi + 0x8 ]
mov [ ebp - 0x8 ] esi
cmp esi [ ebx + 0x644 ]
jne r-xdata
sub_410ac8
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
mov [ ebx + 0x650 ] eax
add [ eax + 0x1 ] 0x4
push edi
mov edi ecx
add [ edi + 0x2 ] 0x4
mov cl [ eax + 0x1 ]
cmp cl [ eax - 0x5 ]
jbe r-xdata
pop edi
pop ebx
retn 0x8
push esi
lea esi [ eax - 0x6 ]
push esi
push eax
call sub_40ff24
mov [ ebx + 0x650 ] esi
cmp [ esi + 0x1 ] 0x7c
pop esi
jbe r-xdata
push ebx
mov ecx edi
call sub_410541
sub_410b10
push ebp
mov ebp esp
movzx eax [ ecx + 0x2 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4a84 ] eax
lea ebx [ esi + 0x4a70 ]
mov eax [ ebx + 0x8 ]
xor edx edx
div [ ebx + 0x14 ]
push edi
mov edi [ ecx + 0x4 ]
xor edx edx
mov [ ebp + 0x8 ] eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
div [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x4a84 ]
cmp [ ebp + 0x8 ] eax
jl r-xdata
movzx edx [ edi + 0x1 ]
cmp [ ebp + 0x8 ] edx
jge r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0x650 ] 0x0
je r-xdata
lea ebx [ edx + edx ]
cmp ebx eax
seta al
mov [ esi + 0xa6d ] al
mov [ esi + 0x4a80 ] edx
movzx eax al
add [ esi + 0x664 ] eax
add edx 0x4
mov [ esi + 0x650 ] edi
mov [ edi + 0x1 ] dl
add [ ecx + 0x2 ] 0x4
cmp edx 0x7c
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0xa6d ] 0x0
movzx ebx [ ecx ]
dec ebx
jmp r-xdata
and [ esi + 0x4a7c ] 0x0
jmp r-xdata
push esi
call sub_410541
movzx eax [ edi + 0x7 ]
add edi 0x6
add edx eax
cmp edx [ ebp + 0x8 ]
jle r-xdata
mov al 0x1
dec ebx
je r-xdata
mov [ esi + 0x4a80 ] edx
movzx eax [ edi + 0x1 ]
push edi
sub edx eax
push esi
mov [ esi + 0x4a7c ] edx
call sub_410ac8
mov eax [ esi + 0x650 ]
movzx eax [ eax ]
mov al [ eax + esi + 0x96c ]
mov [ esi + 0xa6e ] al
mov [ esi + 0x4a7c ] edx
movzx eax [ edi ]
mov dl [ esi + 0xa6c ]
mov [ eax + esi + 0x66c ] dl
movzx eax [ ecx ]
mov [ esi + 0x654 ] eax
dec eax
and [ esi + 0x650 ] 0x0
mov dl [ esi + 0xa6c ]
sub edi 0x6
dec eax
movzx ecx [ edi ]
mov [ ecx + esi + 0x66c ] dl
jne r-xdata
mov eax [ esi + 0x4a84 ]
mov [ esi + 0x4a80 ] eax
jmp r-xdata
sub_410c4e
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x650 ] eax
add [ eax + 0x1 ] 0x4
add [ ecx + 0x2 ] 0x4
cmp [ eax + 0x1 ] 0x7c
jbe r-xdata
mov eax [ esi + 0x668 ]
inc [ esi + 0xa6c ]
mov [ esi + 0x664 ] eax
pop esi
retn 0x8
push esi
call sub_410541
sub_410c88
push ebp
mov ebp esp
push ecx
movzx eax [ ecx ]
mov edx 0x100
push edi
cmp ax dx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edi [ eax + 0x640 ]
mov [ eax + 0x4a84 ] 0x1
push ebx
movzx edi ax
mov eax [ ebp + 0xc ]
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x654 ] eax
movzx edx [ esi + eax + 0x76b ]
setg bl
mov [ ebp - 0x4 ] edi
imul edi edi 0xb
lea eax [ ebx + edx * 4 ]
movzx edx [ ecx + 0x2 ]
mov ecx [ ecx + 0x8 ]
movzx ecx [ ecx ]
xor ebx ebx
cmp edx edi
setl bl
sub ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ebp + 0xc ] ecx
movzx ecx [ esi + 0xa6e ]
setl dl
lea eax [ ebx + eax * 2 ]
lea eax [ edx + eax * 2 ]
add eax ecx
lea edi [ esi + eax * 4 ]
mov ecx edi
call sub_40fee7
mov [ esi + 0x4a84 ] eax
pop esi
pop ebx
jmp r-xdata
mov eax edi
pop edi
leave
retn 0x8
sub_410d1a
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx ecx
movzx edi [ ebx ]
sub edi [ esi + 0x654 ]
push edi
push esi
call sub_410c88
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x408 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
sub eax 0x6
and [ ebp - 0x8 ] 0x0
mov cl [ esi + 0xa6c ]
add eax 0x6
movzx edx [ eax ]
cmp [ edx + esi + 0x66c ] cl
je r-xdata
movzx edx [ eax + 0x1 ]
mov ecx [ ebp - 0x8 ]
add ecx edx
mov edx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
dec edi
mov [ ebp - 0x8 ] ecx
mov [ edx ] eax
jne r-xdata
add [ esi + 0x4a84 ] ecx
lea edi [ esi + 0x4a70 ]
mov eax [ edi + 0x8 ]
xor edx edx
div [ edi + 0x14 ]
xor edx edx
mov [ ebp + 0x8 ] eax
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x4 ]
sub eax [ edi ]
div [ ebp + 0x8 ]
mov edx [ esi + 0x4a84 ]
cmp eax edx
mov [ ebp + 0x8 ] eax
jl r-xdata
cmp [ ebp + 0x8 ] ecx
mov edi [ ebp - 0x408 ]
lea eax [ ebp - 0x408 ]
jge r-xdata
xor al al
jmp r-xdata
mov [ esi + 0x4a7c ] ecx
mov [ esi + 0x4a80 ] edx
movzx edi [ ebx ]
sub edi [ esi + 0x654 ]
lea eax [ ebp - 0x408 ]
sub eax 0x4
mov ecx edi
movzx edx [ ecx + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov dl [ esi + 0xa6c ]
add eax 0x4
dec edi
mov ecx [ eax ]
movzx ecx [ ecx ]
mov [ ecx + esi + 0x66c ] dl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x4a84 ]
add [ eax ] cx
movzx eax [ ebx ]
mov [ esi + 0x654 ] eax
cmp edx [ ebp + 0x8 ]
jle r-xdata
add eax 0x4
mov edi [ eax ]
movzx ecx [ edi + 0x1 ]
add edx ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4a80 ] edx
movzx eax [ edi + 0x1 ]
sub edx eax
mov [ esi + 0x4a7c ] edx
call sub_40ff05
push edi
push esi
mov ecx ebx
call sub_410c4e
jmp r-xdata
mov al 0x1
sub_410e59
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4a8c ]
mov ecx edi
call sub_40f846
push 0x1
mov ecx edi
call sub_40f85a
push 0x2
mov ecx esi
call sub_410496
pop edi
pop esi
retn
sub_410e7f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_40ff95
mov ebx eax
mov [ ebp + 0x8 ] ebx
shr ebx 0x5
and bl 0x1
je r-xdata
cmp [ esi + 0x4a8c ] 0x0
jne r-xdata
mov ecx edi
call sub_40ff95
mov [ ebp - 0x4 ] eax
test [ ebp + 0x8 ] 0x40
je r-xdata
xor al al
jmp r-xdata
push edi
lea ecx [ esi + 0x4a70 ]
call sub_40ffc0
test bl bl
je r-xdata
mov ecx edi
call sub_40ff95
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
pop edi
pop esi
pop ebx
leave
retn 0x8
xor eax eax
cmp [ esi + 0x644 ] eax
setne al
mov eax [ ebp + 0x8 ]
and eax 0x1f
inc eax
mov ebx eax
cmp ebx 0x10
jle r-xdata
lea ecx [ esi + 0x4a8c ]
cmp ebx 0x1
jne r-xdata
imul ebx ebx 0x3
sub ebx 0x20
mov eax [ ebp - 0x4 ]
inc eax
push eax
call sub_40f85a
push ebx
mov ecx esi
call sub_410496
call sub_40f846
jmp r-xdata
sub_410f22
push esi
mov esi ecx
mov ecx [ esi + 0x644 ]
mov edx [ esi + 0x4bdc ]
push edi
cmp ecx edx
jbe r-xdata
or eax 0xffffffff
mov edi [ esi + 0x4be4 ]
cmp ecx edi
ja r-xdata
cmp [ ecx ] 0x1
je r-xdata
push esi
call sub_40fa1d
mov eax [ ecx + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi + 0x4a70 ]
mov ecx [ esi + 0x4a78 ]
lea edx [ eax + ecx ]
xor edx eax
cmp edx 0x1000000
jb r-xdata
cmp [ esi + 0x65c ] 0x0
mov eax [ esi + 0x650 ]
push ebx
movzx ebx [ eax ]
jne r-xdata
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4a88 ]
lea edi [ esi + 0x4a74 ]
call sub_40ff95
mov ecx [ edi ]
shl [ esi + 0x4a78 ] 0x8
shl ecx 0x8
or eax ecx
shl [ esi + 0x4a70 ] 0x8
mov [ edi ] eax
jmp r-xdata
cmp ecx 0x8000
jae r-xdata
mov ecx esi
call sub_4107ea
cmp [ esi + 0xa6c ] 0x0
jne r-xdata
mov eax [ eax + 0x2 ]
cmp eax [ esi + 0x4bdc ]
jbe r-xdata
push esi
call sub_410b10
mov eax [ esi + 0x4bdc ]
neg eax
and eax 0x7fff
mov [ esi + 0x4a78 ] eax
mov eax [ esi + 0x4a70 ]
mov ecx [ esi + 0x4a78 ]
lea edx [ eax + ecx ]
xor edx eax
cmp edx 0x1000000
jb r-xdata
mov ecx esi
call sub_40fb4c
mov [ esi + 0x64c ] eax
mov [ esi + 0x644 ] eax
jmp r-xdata
mov ecx [ esi + 0x4a7c ]
lea eax [ esi + 0x4a78 ]
mov edx [ eax ]
mov edi edx
imul edi ecx
add [ esi + 0x4a70 ] edi
mov edi [ esi + 0x4a80 ]
sub edi ecx
imul edi edx
mov [ eax ] edi
cmp [ esi + 0x650 ] 0x0
je r-xdata
cmp ecx [ esi + 0x4be4 ]
ja r-xdata
mov ecx [ esi + 0x4a88 ]
lea edi [ esi + 0x4a74 ]
call sub_40ff95
mov ecx [ edi ]
shl [ esi + 0x4a78 ] 0x8
shl ecx 0x8
or eax ecx
shl [ esi + 0x4a70 ] 0x8
mov [ edi ] eax
jmp r-xdata
cmp ecx 0x8000
jae r-xdata
movzx edx [ ecx ]
cmp edx [ esi + 0x654 ]
je r-xdata
mov eax ebx
pop ebx
jmp r-xdata
neg eax
and eax 0x7fff
mov [ esi + 0x4a78 ] eax
mov ecx [ esi + 0x644 ]
inc [ esi + 0x65c ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x644 ] ecx
cmp ecx eax
jbe r-xdata
push esi
call sub_410d1a
jmp r-xdata
pop edi
pop esi
retn
test al al
jne r-xdata
sub_4110e1
push ebx
push esi
push edi
mov esi ecx
call sub_4066d6
mov edx [ esp + 0x10 ]
mov ebx [ edx + 0x84 ]
and eax 0xfffe
cmp eax [ edx + ebx * 4 + 0x4 ]
jae r-xdata
push 0xf
pop edi
lea ecx [ ebx + 0x1 ]
cmp ecx edi
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + edx + 0x88 ]
add ecx [ esi + 0x4 ]
mov edi ecx
shr edi 0x3
add [ esi ] edi
and ecx 0x7
mov [ esi + 0x4 ] ecx
mov eax [ edx + eax * 4 + 0x488 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
mov ebx ecx
and ecx 0x7
mov [ esi + 0x4 ] ecx
shr ebx 0x3
add [ esi ] ebx
sub eax [ edx + edi * 4 ]
push 0x10
pop ecx
sub ecx edi
shr eax cl
add eax [ edx + edi * 4 + 0x44 ]
cmp eax [ edx ]
jb r-xdata
lea ebx [ edx + ecx * 4 + 0x4 ]
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ edx + eax * 4 + 0x1488 ]
xor eax eax
mov edi ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
sub_41117a
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
mov ecx edi
call sub_410f22
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
mov ecx edi
call sub_410e59
and [ esi + 0xcc30 ] 0x0
sub_4111bf
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x18 ] 0x0
mov esi ecx
jbe r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xcc50 ]
push ebx
mov [ edi + 0x44 ] eax
mov eax [ edi + 0x14 ]
push [ esi + 0xcc50 ]
add eax 0x24
lea ebx [ esi + 0x4c00 ]
push eax
mov ecx ebx
call sub_4084aa
mov eax [ esi + 0xcc50 ]
mov edx [ esi + 0xcc54 ]
mov cl 0x20
call sub_401000
push eax
mov eax [ edi + 0x14 ]
add eax 0x28
push eax
mov ecx ebx
call sub_4084aa
push edi
mov ecx ebx
call sub_409599
pop ebx
sub_411221
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
cmp edi eax
je r-xdata
mov ecx [ esi + 0xcc34 ]
sub edi eax
add ecx eax
push edi
push ecx
mov ecx esi
call sub_40fd1d
mov [ esi + 0xcc4a ] 0x1
jae r-xdata
mov ecx eax
neg ecx
and ecx 0x3fffff
push ecx
mov ecx [ esi + 0xcc34 ]
add ecx eax
push ecx
mov ecx esi
call sub_40fd1d
push edi
push [ esi + 0xcc34 ]
mov ecx esi
call sub_40fd1d
mov [ esi + 0xcc49 ] 0x1
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_411284
push ebp
mov ebp esp
sub esp 0x1ac
push esi
mov esi ecx
mov eax [ esi + 0xca94 ]
sub eax 0x19
cmp [ esi ] eax
jle r-xdata
mov eax [ esi + 0x4 ]
neg eax
and eax 0x7
push eax
mov ecx esi
call sub_406704
mov ecx esi
call j_sub_4066d6
test eax 0x8000
je r-xdata
call sub_40fca3
test al al
je r-xdata
push ebx
xor ebx ebx
mov [ esi + 0xcc30 ] ebx
mov [ esi + 0xcc5c ] ebx
mov [ esi + 0xcc60 ] ebx
test eax 0x4000
jne r-xdata
lea eax [ esi + 0x4bfc ]
push eax
push esi
lea ecx [ esi + 0x10 ]
mov [ esi + 0xcc30 ] 0x1
call sub_410e7f
jmp r-xdata
pop esi
leave
retn
push 0x2
mov ecx esi
call sub_406704
push edi
push 0x194
push ebx
lea eax [ esi + 0xca9c ]
push eax
call sub_40ad9c
mov [ ebp + ebx - 0x18 ] al
mov ecx esi
call j_sub_4066d6
shr eax 0xc
push 0x4
mov ecx esi
movzx edi al
call sub_406704
test edi edi
jne r-xdata
mov ecx esi
call j_sub_4066d6
shr eax 0xc
movzx eax al
push 0x4
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_406704
mov eax [ ebp - 0x4 ]
cmp eax 0xf
jne r-xdata
push 0x14
lea eax [ esi + 0xb13c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_40fd7d
xor ebx ebx
inc edi
inc edi
jmp r-xdata
mov [ ebp + ebx - 0x18 ] 0xf
jmp r-xdata
lea eax [ esi + 0xb13c ]
push eax
mov ecx esi
call sub_4110e1
cmp eax 0x10
jge r-xdata
mov ecx esi
call sub_40fca3
test al al
je r-xdata
test edi edi
jg r-xdata
inc ebx
cmp ebx 0x14
jl r-xdata
cmp eax 0x12
mov ecx esi
jge r-xdata
mov cl [ ebx + esi + 0xca9c ]
add cl al
and cl 0xf
mov [ ebp + ebx - 0x1ac ] cl
inc ebx
jmp r-xdata
xor al al
jmp r-xdata
dec edi
cmp ebx 0x14
jae r-xdata
dec ebx
jmp r-xdata
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp ebx 0x194
jl r-xdata
pop edi
pop ebx
mov [ ebp + ebx - 0x18 ] 0x0
inc ebx
call j_sub_4066d6
mov edi eax
shr edi 0x9
add edi 0xb
push 0x7
call j_sub_4066d6
mov edi eax
shr edi 0xd
add edi 0x3
push 0x3
jmp r-xdata
call j_sub_4066d6
mov edi eax
shr edi 0x9
add edi 0xb
push 0x7
call j_sub_4066d6
mov edi eax
shr edi 0xd
add edi 0x3
push 0x3
jmp r-xdata
mov eax [ esi + 0xca94 ]
sub eax 0x5
cmp [ esi ] eax
jle r-xdata
mov eax [ esi ]
cmp eax [ esi + 0xca94 ]
mov [ esi + 0x4c68 ] 0x1
jle r-xdata
test edi edi
jg r-xdata
mov ecx esi
call sub_406704
jmp r-xdata
test edi edi
jg r-xdata
mov ecx esi
call sub_406704
jmp r-xdata
push 0x12b
lea eax [ esi + 0x4c6c ]
push eax
lea eax [ ebp - 0x1ac ]
push eax
mov ecx esi
call sub_40fd7d
push 0x3c
lea eax [ esi + 0x65a0 ]
push eax
lea eax [ ebp - 0x81 ]
push eax
mov ecx esi
call sub_40fd7d
push 0x11
lea eax [ esi + 0x7ed4 ]
push eax
lea eax [ ebp - 0x45 ]
push eax
mov ecx esi
call sub_40fd7d
push 0x1c
lea eax [ esi + 0x9808 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov ecx esi
call sub_40fd7d
push 0x194
lea eax [ ebp - 0x1ac ]
push eax
add esi 0xca9c
push esi
call sub_40adc9
mov al 0x1
dec edi
cmp ebx 0x194
jge r-xdata
dec edi
cmp ebx 0x194
jge r-xdata
jmp r-xdata
mov [ ebp + ebx - 0x1ac ] 0x0
inc ebx
mov al [ ebp + ebx - 0x1ad ]
mov [ ebp + ebx - 0x1ac ] al
inc ebx
sub_411528
push esi
mov esi ecx
call sub_4066ab
lea ecx [ esi + 0x10 ]
call sub_410301
lea ecx [ esi + 0x4c00 ]
call sub_40846d
lea ecx [ esi + 0x4c34 ]
call sub_4066ab
xor ecx ecx
lea eax [ esi + 0x4c40 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea eax [ esi + 0x4c4c ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea eax [ esi + 0x4c58 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
mov [ esi + 0xcc34 ] ecx
mov [ esi + 0xcc38 ] cl
mov [ esi + 0xcc48 ] cl
mov [ esi + 0xcc49 ] cl
mov [ esi + 0xcc4a ] cl
mov eax esi
pop esi
retn 0x4
sub_4115a5
push esi
push edi
mov esi ecx
call sub_4066d6
xor dl dl
test eax 0x8000
je r-xdata
mov ecx eax
mov eax [ esi + 0x4 ]
shr ecx 0xe
mov dl 0x1
and cl dl
inc eax
inc eax
mov eax [ esi + 0x4 ]
mov cl 0x1
inc eax
jmp r-xdata
xor eax eax
test cl cl
je r-xdata
mov edi eax
shr edi 0x3
add [ esi ] edi
and eax 0x7
test cl cl
mov [ esi + 0x4 ] eax
sete al
mov [ esi + 0x4c68 ] al
test dl dl
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx esi
call sub_411284
test al al
je r-xdata
pop edi
pop esi
retn
sub_411621
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xca90 ]
mov eax [ esi + 0xca8c ]
sub eax ecx
and eax 0x3fffff
cmp [ esi + 0x4c50 ] 0x0
push edi
jbe r-xdata
push [ esi + 0xca8c ]
push ecx
mov ecx esi
call sub_411221
mov eax [ esi + 0xca8c ]
mov [ esi + 0xca90 ] eax
mov edx [ ebp - 0x4 ]
mov edi [ esi + 0x4c4c ]
shl edx 0x2
mov ebx [ edx + edi ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
inc [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
cmp edx [ esi + 0x4c50 ]
jb r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
mov [ ebp - 0x14 ] edx
mov edx edi
sub edx ecx
and edx 0x3fffff
mov [ ebp - 0x18 ] edi
cmp edx eax
jae r-xdata
mov [ ebx + 0xc ] 0x0
jmp r-xdata
cmp ecx edi
je r-xdata
mov edx [ ebp - 0x14 ]
cmp edx eax
ja r-xdata
push edi
push ecx
mov ecx esi
call sub_411221
mov eax [ esi + 0xca8c ]
sub eax edi
mov ecx edi
and eax 0x3fffff
mov edx [ ebp - 0x4 ]
jmp r-xdata
lea eax [ edx + edi ]
and eax 0x3fffff
mov [ ebp - 0x14 ] eax
cmp edi eax
jb r-xdata
cmp edx [ esi + 0x4c50 ]
jb r-xdata
mov eax [ esi + 0xcc34 ]
push edx
add eax edi
push eax
push 0x0
test eax eax
je r-xdata
mov eax [ esi + 0x4c4c ]
mov eax [ eax + edx * 4 ]
test eax eax
je r-xdata
mov [ esi + 0xca90 ] ecx
jmp r-xdata
push ebx
mov ecx esi
call sub_4111bf
mov eax [ ebx + 0x18 ]
cmp eax 0x40
jbe r-xdata
lea ecx [ ebx + 0x14 ]
push eax
call sub_401671
mov eax [ edi + 0x18 ]
sub eax 0x40
push eax
mov eax [ edi + 0x14 ]
add eax 0x40
push eax
mov eax [ ebx + 0x14 ]
add eax 0x40
push eax
call sub_40adc9
mov eax __pe_WINRAR_export_address_table
sub eax edi
push eax
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xcc34 ]
add eax edi
push eax
lea ecx [ esi + 0x4c00 ]
push 0x0
call sub_408571
push [ ebp - 0x14 ]
push [ esi + 0xcc34 ]
push [ ebp - 0x10 ]
jmp r-xdata
inc edx
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ edi + 0x14 ]
call sub_40edc6
cmp [ edi + 0x18 ] eax
jae r-xdata
lea ecx [ esi + 0x4c00 ]
call sub_408571
mov eax [ ebx + 0x10 ]
mov ecx [ esi + 0x4c40 ]
mov edi [ ecx + eax * 4 ]
mov eax [ edi + 0x2c ]
add edi 0x14
add ebx 0x14
cmp eax 0x40
jbe r-xdata
mov [ eax + 0xc ] 0x0
mov eax [ esi + 0x4c4c ]
and [ ebx + eax ] 0x0
mov eax [ ebp - 0x4 ]
inc eax
cmp eax [ esi + 0x4c50 ]
jae r-xdata
push 0x1
call sub_411602
mov eax [ ebx + 0x18 ]
sub eax 0x40
push eax
mov eax [ ebx + 0x14 ]
add eax 0x40
push eax
mov eax [ edi + 0x14 ]
add eax 0x40
push eax
call sub_40adc9
jmp r-xdata
push eax
lea ecx [ edi + 0x14 ]
call sub_401671
mov ecx [ esi + 0xc ]
push edi
push [ ebp - 0x10 ]
call sub_409ba5
mov ecx [ ebp - 0x14 ]
lea eax [ esi + 0xcc50 ]
add [ eax ] edi
mov [ esi + 0xcc4a ] 0x1
adc [ eax + 0x4 ] 0x0
mov eax [ esi + 0xca8c ]
sub eax ecx
and eax 0x3fffff
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4c4c ]
mov ecx [ ebx + eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4c4c ]
mov ebx [ ebx + eax + 0x4 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebx ] eax
jne r-xdata
cmp [ ebx + 0x4 ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push edi
push [ ebp - 0x10 ]
lea ecx [ esi + 0x4c00 ]
push 0x0
call sub_408571
mov eax [ ebx + 0x10 ]
mov ecx [ esi + 0x4c40 ]
mov edi [ ecx + eax * 4 ]
mov eax [ edi + 0x2c ]
add edi 0x14
add ebx 0x14
cmp eax 0x40
jbe r-xdata
push ebx
mov ecx esi
call sub_4111bf
mov eax [ ebx + 0x18 ]
cmp eax 0x40
jbe r-xdata
lea ecx [ ebx + 0x14 ]
push eax
call sub_401671
mov eax [ edi + 0x18 ]
sub eax 0x40
push eax
mov eax [ edi + 0x14 ]
add eax 0x40
push eax
mov eax [ ebx + 0x14 ]
add eax 0x40
push eax
call sub_40adc9
lea ecx [ edi + 0x14 ]
call sub_40edc6
cmp [ edi + 0x18 ] eax
jae r-xdata
mov eax [ esi + 0x4c4c ]
and [ ebx + eax ] 0x0
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x4c50 ]
jb r-xdata
push 0x1
call sub_411602
mov eax [ ebx + 0x18 ]
sub eax 0x40
push eax
mov eax [ ebx + 0x14 ]
add eax 0x40
push eax
mov eax [ edi + 0x14 ]
add eax 0x40
push eax
call sub_40adc9
jmp r-xdata
push eax
lea ecx [ edi + 0x14 ]
call sub_401671
mov ebx [ ebp - 0x8 ]
mov eax [ ebx + 0x48 ]
inc [ ebp - 0x4 ]
mov edi [ ebx + 0x4c ]
mov ebx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
shl ebx 0x2
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4c4c ]
mov ecx [ ebx + eax ]
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
sub_411969
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x4c58 ]
call sub_40edc6
and [ esi + 0x4c64 ] 0x0
xor edi edi
cmp [ esi + 0x4c44 ] edi
jbe r-xdata
lea ecx [ esi + 0x4c40 ]
call sub_40edc6
xor edi edi
cmp [ esi + 0x4c50 ] edi
jbe r-xdata
mov eax [ esi + 0x4c40 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
pop edi
lea ecx [ esi + 0x4c4c ]
pop esi
jmp sub_40edc6
mov eax [ esi + 0x4c4c ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi [ esi + 0x4c44 ]
jb r-xdata
push 0x1
call sub_411602
inc edi
cmp edi [ esi + 0x4c50 ]
jb r-xdata
push 0x1
call sub_411602
sub_4119e5
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_411a0d
push esi
mov esi ecx
mov eax [ esi + 0xcc34 ]
test eax eax
je r-xdata
mov ecx esi
call sub_411969
lea ecx [ esi + 0x4c58 ]
call sub_40ffb3
lea ecx [ esi + 0x4c4c ]
call sub_40ffb3
lea ecx [ esi + 0x4c40 ]
call sub_40ffb3
lea ecx [ esi + 0x4c34 ]
call sub_4066cc
lea ecx [ esi + 0x4c00 ]
call sub_40847d
lea ecx [ esi + 0x4a9c ]
call sub_40f846
mov ecx esi
pop esi
jmp sub_4066cc
cmp [ esi + 0xcc38 ] 0x0
jne r-xdata
push eax
call sub_40b406
pop ecx
sub_411a7b
push ebx
xor ebx ebx
push esi
mov esi ecx
cmp [ esp + 0xc ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0xcc50 ] ebx
mov [ esi + 0xcc54 ] ebx
mov [ esi + 0xca94 ] ebx
mov [ esi + 0xca98 ] ebx
pop esi
pop ebx
retn 0x4
push edi
push 0x10
push ebx
lea eax [ esi + 0xca70 ]
push eax
mov [ esi + 0x4c68 ] bl
call sub_40ad9c
push 0x194
push ebx
lea eax [ esi + 0xca9c ]
push eax
mov [ esi + 0xca80 ] ebx
mov [ esi + 0xca88 ] ebx
mov [ esi + 0xca84 ] ebx
call sub_40ad9c
mov edi 0x1934
push edi
push ebx
lea eax [ esi + 0x4c6c ]
push eax
call sub_40ad9c
push edi
push ebx
lea eax [ esi + 0x65a0 ]
push eax
call sub_40ad9c
push edi
push ebx
lea eax [ esi + 0x7ed4 ]
push eax
call sub_40ad9c
push edi
push ebx
lea eax [ esi + 0x9808 ]
push eax
call sub_40ad9c
push edi
push ebx
lea eax [ esi + 0xb13c ]
push eax
call sub_40ad9c
mov ecx esi
mov [ esi + 0xca90 ] ebx
mov [ esi + 0xca8c ] ebx
mov [ esi + 0x4bfc ] 0x2
mov [ esi + 0xcc30 ] ebx
call sub_411969
pop edi
sub_411b56
mov eax [ esp + 0x4 ]
push edi
mov edi ecx
test eax eax
jne r-xdata
mov [ edi + 0xcc34 ] eax
mov [ edi + 0xcc38 ] 0x1
push ebx
push esi
mov ebx __pe_WINRAR_export_address_table
push ebx
call sub_40b413
pop ecx
push ebx
push 0x0
lea esi [ edi + 0xcc34 ]
push eax
mov [ esi ] eax
call sub_40ad9c
cmp [ esi ] 0x0
pop esi
pop ebx
jne r-xdata
push 0x0
mov ecx edi
call sub_411a7b
pop edi
retn 0x4
mov ecx rw-data
call sub_403495
jmp r-xdata
sub_411bad
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x4c34 ]
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
mov eax 0x8000
cmp [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push eax
push [ ebp + 0xc ]
push [ edi + 0x4c3c ]
call sub_40adc9
lea ecx [ edi + 0x4c00 ]
mov [ ebp - 0xc ] ecx
call sub_408491
test [ ebp + 0x8 ] 0x80
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ edi + 0x4c64 ]
mov [ ebp - 0x8 ] eax
mov ebx eax
push esi
call sub_4084d3
mov ebx eax
mov [ ebp - 0x8 ] ebx
test ebx ebx
jne r-xdata
xor al al
cmp ebx [ edi + 0x4c5c ]
ja r-xdata
dec ebx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov ecx edi
call sub_411969
jmp r-xdata
cmp ebx eax
push 0x64
mov [ edi + 0x4c64 ] ebx
sete [ ebp + 0x13 ]
call sub_40b413
mov esi eax
pop ecx
test esi esi
je r-xdata
mov eax [ edi + 0x4c44 ]
cmp ebx eax
ja r-xdata
xor esi esi
lea ecx [ esi + 0x14 ]
call sub_4119e5
jmp r-xdata
mov eax [ edi + 0x4c40 ]
mov eax [ eax + ebx * 4 ]
mov [ esi + 0x10 ] ebx
inc [ eax + 0x8 ]
mov [ ebp + 0xc ] eax
cmp ebx 0x400
jbe r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea ebx [ edi + 0x4c4c ]
push 0x1
mov ecx ebx
call sub_40ff4c
xor edx edx
inc edx
lea ebx [ edi + 0x4c4c ]
lea ebx [ edi + 0x4c40 ]
push 0x1
mov ecx ebx
call sub_40ff4c
push 0x64
call sub_40b413
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax [ edi + 0xca8c ]
add eax [ ebp - 0x10 ]
mov ebx 0x3fffff
and eax ebx
test [ ebp + 0x8 ] 0x20
mov [ esi ] eax
je r-xdata
add [ ebp - 0x10 ] 0x102
mov edx [ ebp - 0x10 ]
test edx edx
jle r-xdata
inc [ ebp - 0x10 ]
and [ ebp + 0xc ] 0x0
lea ecx [ eax + 0x14 ]
call sub_4119e5
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
jmp r-xdata
push 0x1
mov ecx esi
call sub_411602
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0x4c5c ]
jae r-xdata
push [ ebp - 0x4 ]
call sub_4084d3
mov edx [ ebp - 0x8 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x4c58 ]
mov [ ecx + edx * 4 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ edi + 0x4c50 ]
jb r-xdata
and [ ecx ] 0x0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
cmp [ edi + 0x4c50 ] eax
jbe r-xdata
mov eax [ edi + 0x4c44 ]
mov ecx [ ebx ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 4 - 0x4 ] edx
mov eax [ edi + 0x4c44 ]
dec eax
push 0x0
lea ecx [ edi + 0x4c58 ]
mov [ esi + 0x10 ] eax
call sub_41150d
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ edi + 0x4c58 ]
mov eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ edi + 0xca90 ]
mov edi [ edi + 0xca8c ]
cmp eax edi
je r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + eax * 4 ]
mov edx eax
sub edx [ ebp - 0x10 ]
mov eax [ ebx ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebx ]
mov eax [ ebp - 0x14 ]
lea ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
sub eax edi
and eax ebx
cmp eax [ ebp - 0x10 ]
ja r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x4c50 ]
mov ecx [ ebx ]
push [ ebp - 0x4 ]
sub eax edx
mov [ ecx + eax * 4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
call sub_4084d3
test [ ebp + 0x8 ] 0x40
mov [ ebp - 0x10 ] eax
je r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call j_sub_4066d6
mov ecx [ ebp - 0x4 ]
mov edi eax
push 0x7
shr edi 0x9
call sub_406704
and [ ebp - 0x10 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_4084d3
mov edi eax
mov [ ebp + 0x10 ] edi
cmp edi 0x10000
jae r-xdata
inc [ ebp - 0x10 ]
add ebx 0x4
cmp [ ebp - 0x10 ] 0x7
jl r-xdata
push [ ebp - 0x4 ]
call sub_4084d3
mov [ ebx ] eax
push 0x1c
push 0x0
lea ebx [ esi + 0x40 ]
push ebx
mov [ esi + 0xc ] al
call sub_40ad9c
test [ ebp + 0x8 ] 0x10
mov eax [ esi + 0x4 ]
mov [ esi + 0x50 ] eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4c ] 0x3c000
mov [ esi + 0x54 ] eax
je r-xdata
cmp [ esi + 0x2c ] 0x40
jae r-xdata
lea edi [ esi + 0x34 ]
push eax
mov ecx edi
call sub_40ede2
push [ ebp + 0x10 ]
push [ ebx + 0x34 ]
push [ edi ]
call sub_40adc9
test edi edi
je r-xdata
mov ecx [ ebp - 0x10 ]
xor eax eax
inc eax
shl eax cl
test edi eax
je r-xdata
lea ebx [ esi + 0x28 ]
mov edi [ ebx ]
lea eax [ esi + 0x40 ]
mov [ ebp + 0xc ] edi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x7
lea edi [ esi + 0x28 ]
mov ecx edi
call sub_40edc6
push 0x40
mov ecx edi
call sub_40ede2
push edi
lea ecx [ ebp - 0x20 ]
call sub_403c8d
xor ebx ebx
test edi edi
mov edi [ ebp - 0x20 ]
jbe r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
mov ecx [ ebp - 0xc ]
push [ ebp + 0xc ]
call sub_4084aa
add [ ebp + 0x10 ] 0x4
add [ ebp + 0xc ] 0x4
dec [ ebp - 0x14 ]
jne r-xdata
push [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
lea eax [ edi + 0x1c ]
push eax
call sub_4084aa
mov ecx [ ebp - 0xc ]
push 0x0
lea eax [ edi + 0x20 ]
push eax
call sub_4084aa
push [ esi + 0x8 ]
mov ecx [ ebp - 0xc ]
lea eax [ edi + 0x2c ]
push eax
call sub_4084aa
push 0x10
push 0x0
add edi 0x30
push edi
call sub_40ad9c
test [ ebp + 0x8 ] 0x8
je r-xdata
mov ebx [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
lea eax [ ebx + 0x14 ]
push eax
push [ ebp + 0x10 ]
push edi
call sub_409309
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx 0x3
cmp ecx 0x8000
jae r-xdata
mov eax [ ebx + 0x14 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ ebx + 0x38 ]
lea ecx [ eax - 0x1 ]
mov [ ebp + 0x10 ] eax
cmp ecx 0x1ffe
ja r-xdata
push edi
call sub_40ad18
jmp r-xdata
test edi edi
je r-xdata
call j_sub_4066d6
mov ecx [ ebp - 0x4 ]
shr eax 0x8
push 0x8
mov [ edi + ebx ] al
call sub_406704
inc ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push eax
call sub_4084d3
mov edi eax
cmp edi 0x1fc0
ja r-xdata
push edi
call sub_40ad18
jmp r-xdata
mov esi [ esi + 0x2c ]
lea eax [ edi + 0x40 ]
cmp esi eax
jae r-xdata
mov esi [ ebx ]
add esi 0x40
xor ebx ebx
test edi edi
jbe r-xdata
mov eax edi
sub eax esi
add eax 0x40
push eax
mov ecx ebx
call sub_40ede2
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
call j_sub_4066d6
mov ecx [ ebp - 0x4 ]
shr eax 0x8
push 0x8
mov [ ebx + esi ] al
call sub_406704
inc ebx
cmp ebx edi
jb r-xdata
sub_41202c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
call sub_4066d6
mov edi eax
mov eax [ esi + 0x4 ]
add eax 0x8
shr edi 0x8
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
mov [ ebp - 0x4 ] edi
mov ebx eax
and ebx 0x7
and edi 0x7
inc edi
mov [ esi + 0x4 ] ebx
cmp edi 0x7
jne r-xdata
cmp edi 0x8
jne r-xdata
mov ecx esi
call sub_4066d6
mov edi eax
shr edi 0x8
add edi 0x7
lea eax [ ebx + 0x8 ]
jmp r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_403c8d
xor ebx ebx
test edi edi
jle r-xdata
mov ecx esi
call sub_4066d6
mov edi eax
lea eax [ ebx + 0x10 ]
mov ecx eax
shr ecx 0x3
add ecx [ esi ]
and eax 0x7
mov [ esi + 0x4 ] eax
mov [ esi ] ecx
push edi
push [ ebp - 0x10 ]
mov ecx esi
push [ ebp - 0x4 ]
call sub_411bad
cmp [ ebp - 0x10 ] 0x0
mov bl al
je r-xdata
mov eax [ esi + 0xca94 ]
dec eax
cmp [ esi ] eax
jl r-xdata
mov al bl
push [ ebp - 0x10 ]
call sub_40ad18
mov ecx esi
call sub_4066d6
mov ecx [ ebp - 0x10 ]
shr eax 0x8
mov [ ecx + ebx ] al
mov eax [ esi + 0x4 ]
add eax 0x8
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
inc ebx
cmp ebx edi
mov [ esi + 0x4 ] eax
jl r-xdata
mov ecx esi
call sub_40fca3
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
cmp ebx eax
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x10 ]
call sub_40ad18
pop edi
pop esi
pop ebx
leave
retn
sub_412121
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edi
call sub_41117a
mov esi eax
or ebx 0xffffffff
mov [ ebp - 0x8 ] esi
cmp esi ebx
jne r-xdata
and esi 0x7
inc esi
cmp esi 0x7
jne r-xdata
xor al al
jmp r-xdata
cmp esi 0x8
jne r-xdata
mov ecx edi
call sub_41117a
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
lea ecx [ ebp - 0x14 ]
call sub_403c8d
mov edi [ ebp - 0x14 ]
xor ebx ebx
test esi esi
jle r-xdata
mov ecx edi
call sub_41117a
mov esi eax
cmp esi ebx
je r-xdata
lea esi [ eax + 0x7 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
push edi
push [ ebp - 0x8 ]
call sub_411bad
mov bl al
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_41117a
cmp eax 0xffffffff
je r-xdata
mov ecx edi
call sub_41117a
cmp eax ebx
je r-xdata
mov al bl
push edi
call sub_40ad18
test edi edi
je r-xdata
mov [ edi + ebx ] al
inc ebx
cmp ebx esi
jl r-xdata
shl esi 0x8
add esi eax
push edi
call sub_40ad18
jmp r-xdata
sub_4121d9
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ esi + 0xcc48 ] 0x0
mov [ esi + 0xcc58 ] 0x1
jne r-xdata
mov [ ebp - 0x8 ] ebx
xor edi edi
mov eax [ esi ]
mov edi 0x3fffff
and [ esi + 0xca8c ] edi
cmp eax [ esi + 0xca98 ]
jle r-xdata
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_411a7b
mov ecx esi
call sub_40fca3
test al al
je r-xdata
inc ebx
cmp ebx 0x13
jb r-xdata
push edx
lea eax [ edi + rw-data ]
mov ecx ebx
push ebx
mov [ ebp - 0x4 ] 0x1
shl [ ebp - 0x4 ] cl
push eax
mov [ ebp - 0xc ] edx
call sub_40b51c
add esp 0xc
mov eax [ esi + 0xca90 ]
mov ecx [ esi + 0xca8c ]
mov edx eax
sub edx ecx
and edx edi
cmp edx 0x104
jae r-xdata
mov ecx esi
call sub_40fca3
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebx * 4 + rw-data ]
test edx edx
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ edi * 4 + rw-data ] eax
add eax [ ebp - 0x4 ]
inc edi
dec [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jne r-xdata
cmp [ esi + 0xcc30 ] 0x1
jne r-xdata
cmp eax ecx
je r-xdata
mov ecx esi
call sub_411621
mov ecx esi
call sub_411284
test al al
je r-xdata
cmp [ esi + 0x4c68 ] 0x0
jne r-xdata
lea eax [ esi + 0x4c6c ]
push eax
mov ecx esi
call sub_4110e1
mov edx 0x100
cmp eax edx
jge r-xdata
lea ecx [ esi + 0x10 ]
call sub_410f22
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ecx esi
call sub_411621
mov eax [ esi + 0xcc54 ]
cmp eax [ esi + 0xcc44 ]
jg r-xdata
mov ecx 0x10f
cmp eax ecx
jl r-xdata
mov ecx [ esi + 0xcc34 ]
mov edx [ esi + 0xca8c ]
mov [ ecx + edx ] al
lea ecx [ esi + 0x10 ]
call sub_410e59
and [ esi + 0xcc30 ] 0x0
cmp ebx [ esi + 0x4bfc ]
jne r-xdata
jl r-xdata
cmp eax edx
jne r-xdata
sub eax ecx
movzx edi [ eax + rw-data ]
movzx ebx [ eax + rw-data ]
add edi 0x3
mov [ ebp + 0x8 ] edi
test ebx ebx
jbe r-xdata
mov eax [ esi + 0xcc34 ]
mov ecx [ esi + 0xca8c ]
mov [ eax + ecx ] bl
jmp r-xdata
mov ecx esi
call sub_41117a
test eax eax
jne r-xdata
cmp [ esi + 0xcc48 ] 0x0
jne r-xdata
mov eax [ esi + 0xcc50 ]
cmp eax [ esi + 0xcc40 ]
ja r-xdata
cmp eax 0x101
jne r-xdata
mov ecx esi
call sub_4115a5
jmp r-xdata
lea eax [ esi + 0x65a0 ]
push eax
mov ecx esi
call sub_4110e1
movzx ebx [ eax + rw-data ]
mov edi [ eax * 4 + rw-data ]
inc edi
test ebx ebx
jbe r-xdata
mov ecx esi
call sub_4066d6
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add edi eax
mov eax [ esi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ ebp + 0x8 ] edi
mov [ esi + 0x4 ] eax
inc [ esi + 0xca8c ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx esi
call sub_411284
mov [ esi + 0xcc58 ] 0x0
jmp r-xdata
cmp eax 0x102
jne r-xdata
mov ecx esi
call sub_41202c
jmp r-xdata
test al al
jne r-xdata
cmp edi 0x2000
jb r-xdata
cmp eax 0x9
jle r-xdata
cmp eax 0x2
je r-xdata
jmp r-xdata
cmp eax 0x107
jge r-xdata
mov eax [ esi + 0xca88 ]
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_40fb67
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc [ ebp + 0x8 ]
cmp edi 0x40000
jb r-xdata
mov ecx esi
call sub_4066d6
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add edi eax
mov eax [ esi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
cmp ebx 0x4
jbe r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x110
jge r-xdata
add eax 0xfffffefd
lea ecx [ esi + eax * 4 + 0xca70 ]
mov ebx [ ecx ]
jmp r-xdata
push [ esi + 0xca84 ]
jmp r-xdata
mov [ esi + 0xca84 ] edi
mov [ esi + 0xca88 ] eax
inc [ ebp + 0x8 ]
mov eax [ esi + 0xcc60 ]
test eax eax
jle r-xdata
mov ecx esi
call sub_4066d6
push 0x14
pop ecx
sub ecx ebx
shr eax cl
shl eax 0x4
add edi eax
mov eax [ esi + 0x4 ]
lea eax [ eax + ebx - 0x4 ]
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
cmp eax 0x4
jne r-xdata
mov ecx esi
call sub_412121
jmp r-xdata
movzx edi [ eax + rw-data ]
movzx ebx [ eax + rw-data ]
sub eax 0x107
inc edi
test ebx ebx
jbe r-xdata
test eax eax
jg r-xdata
push eax
lea eax [ esi + 0x7ed4 ]
push eax
mov ecx esi
call sub_4110e1
cmp eax 0x10
jne r-xdata
dec eax
mov [ esi + 0xcc60 ] eax
jmp r-xdata
cmp eax 0x5
jne r-xdata
xor edi edi
mov [ ebp + 0xb ] 0x0
xor ebx ebx
push edi
mov ecx esi
call sub_40fb67
push 0x2
pop eax
mov ecx esi
call sub_4066d6
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add edi eax
mov eax [ esi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
mov edx [ ecx - 0x4 ]
mov [ ecx ] edx
dec eax
sub ecx 0x4
lea eax [ esi + 0x9808 ]
push eax
mov ecx esi
mov [ esi + 0xca70 ] ebx
call sub_4110e1
movzx edi [ eax + rw-data ]
movzx eax [ eax + rw-data ]
inc edi
inc edi
mov [ ebp + 0x8 ] eax
test eax eax
jbe r-xdata
add edi eax
mov [ esi + 0xcc5c ] eax
jmp r-xdata
mov [ esi + 0xcc60 ] 0xf
add edi [ esi + 0xcc5c ]
jmp r-xdata
mov ecx esi
call sub_41117a
cmp eax 0xffffffff
je r-xdata
mov ecx esi
call sub_41117a
cmp eax 0xffffffff
jne r-xdata
push ebx
mov [ esi + 0xca84 ] ebx
mov [ esi + 0xca88 ] edi
push edi
jmp r-xdata
mov ecx esi
call sub_4066d6
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add edi eax
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
push 0x1
add eax 0x4
jmp r-xdata
movzx eax al
cmp ebx 0x3
jne r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov ecx esi
call sub_40fb94
jmp r-xdata
shl edi 0x8
add edi eax
mov [ ebp - 0xc ] eax
jmp r-xdata
inc ebx
cmp ebx 0x4
jl r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
add edi 0x2
add eax 0x20
jmp r-xdata
push edi
sub_4126d5
push ebp
mov ebp esp
mov eax 0x1814
call sub_401200
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x1390 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x4aac ]
push edi
mov [ ebp - 0x8 ] eax
cmp eax 0x7a
jne r-xdata
lea ecx [ esi + 0x4ad8 ]
mov [ ebp - 0x4 ] ecx
cmp eax 0x74
jne r-xdata
lea ecx [ esi + 0x57e8 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp + 0xb ] 0x0
test [ ecx + 0x8 ] 0x2
mov [ ebp + 0xb ] 0x1
jne r-xdata
mov ecx esi
call sub_405593
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
test edi edi
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov ecx esi
call sub_4054de
lea eax [ esi + 0x17 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call sub_40af8a
lea eax [ esi + 0x418 ]
push eax
lea eax [ ebp - 0x1014 ]
push eax
call sub_40b147
test [ esi + 0x4ac8 ] 0x10
je r-xdata
mov ecx esi
lea ebx [ edi + 0x4f8 ]
call sub_405b52
add [ ebx ] eax
adc [ ebx + 0x4 ] edx
cmp [ ecx + 0x20 ] 0x14
jb r-xdata
xor eax eax
inc eax
cmp [ esi + 0x71b8 ] 0x0
jne r-xdata
mov eax [ ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x1014 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
mov ecx esi
call sub_40567b
test al al
je r-xdata
xor al al
jmp r-xdata
not eax
cmp [ edi + 0x510 ] eax
je r-xdata
test edi edi
je r-xdata
push 0x1
mov ecx esi
call sub_4016e8
cmp [ ebp + 0x14 ] 0x54
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
setne al
lea eax [ eax * 4 + 0x54 ]
push eax
call sub_40c1f1
cmp [ ebp + 0xb ] 0x0
mov ecx esi
je r-xdata
push eax
mov ebx 0x400
push ebx
lea eax [ ebp - 0x1014 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call sub_408034
mov [ ebp + 0xf ] 0x0
jmp r-xdata
add ecx 0x30
push ecx
call sub_40ecc3
push eax
push 0x72
call sub_40a407
push eax
lea eax [ esi + 0x418 ]
push eax
call sub_40c020
add esp 0xc
cmp [ ebp + 0xf ] 0x0
jne r-xdata
and [ edi + 0x500 ] 0x0
and [ edi + 0x504 ] 0x0
call sub_401ca6
push [ ebp - 0x8 ]
call sub_40275b
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x2d70 ] 0x0
jne r-xdata
lea eax [ esi + 0x17 ]
push eax
lea eax [ ebp - 0x814 ]
push eax
call sub_40af8a
lea eax [ esi + 0x418 ]
push eax
lea eax [ ebp - 0x1814 ]
push eax
call sub_40b147
push 0x1
push ebx
lea eax [ ebp - 0x1814 ]
push eax
lea eax [ ebp - 0x814 ]
push eax
call sub_408034
push 0x0
push 0x0
lea eax [ ebp - 0x1814 ]
push eax
lea eax [ ebp - 0x814 ]
push eax
mov ecx esi
mov [ ebp + 0xf ] 0x1
call sub_40567b
test al al
jne r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_401bc1
mov eax [ esi + 0x71b0 ]
sub eax [ esi + 0x57b0 ]
mov ecx [ esi + 0x71b4 ]
sbb ecx [ esi + 0x57b4 ]
push 0x0
push ecx
push eax
mov ecx esi
call sub_405aee
cmp [ esi + 0x4aac ] 0x74
jne r-xdata
push 0x77
call sub_40a407
push eax
lea eax [ ebp - 0x1014 ]
push eax
call sub_40c020
pop ecx
pop ecx
xor edi edi
push edi
push edi
lea eax [ esi + 0x418 ]
push eax
lea eax [ esi + 0x17 ]
push eax
mov ecx esi
call sub_40567b
push edi
push [ ebp - 0xc ]
mov ecx esi
push [ ebp - 0x10 ]
call sub_405aee
xor al al
jmp r-xdata
lea eax [ ebp - 0x1014 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call sub_4126c0
test al al
je r-xdata
lea eax [ ebp - 0x814 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call sub_40af8a
lea eax [ ebp - 0x1814 ]
push eax
lea eax [ ebp - 0x1014 ]
push eax
call sub_40b147
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x8 ] 0x7b
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x8 ]
shr cl 0x1
and cl 0x1
mov [ edi + 0x4c6 ] cl
mov ecx [ eax + 0xcd8 ]
mov [ edi + 0x20 ] ecx
mov eax [ eax + 0xcdc ]
mov [ edi + 0x24 ] eax
mov [ edi + 0x4c6 ] 0x0
jmp r-xdata
mov ecx esi
call sub_405b52
and [ edi + 0x4e8 ] 0x0
and [ edi + 0x4ec ] 0x0
or [ edi + 0x510 ] 0xffffffff
mov [ edi + 0x4d0 ] eax
mov [ edi + 0x4d4 ] edx
sub_4129f9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
xor ebx ebx
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov al bl
pop ebx
leave
retn 0x1c
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
cmp [ ebp + 0x18 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x2
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
push [ ebp + 0x1c ]
push r--data
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
push eax
call [ ecx + 0x44 ]
cmp [ ebp + 0x20 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x1
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x18 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov bl 0x1
sub_412afb
push ebp
mov ebp esp
sub esp 0xa0
push edi
mov edi [ ebp + 0x8 ]
push 0x50
lea eax [ ebp - 0xa0 ]
push eax
push edi
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
mov esi r--data
push esi
lea eax [ ebp - 0xa0 ]
push eax
call sub_40f568
test eax eax
je r-xdata
pop edi
leave
retn 0x4
push 0x10
push edi
call [ SHAutoComplete@IAT ]
pop esi
push 0x0
push esi
push 0x0
push edi
call [ FindWindowExW@IAT ]
mov edi eax
sub_412b54
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ LoadLibraryW@IAT ]
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
push 0x0
mov [ esi + 0x4 ] eax
call [ OleInitialize@IAT ]
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x8
mov [ ebp - 0x4 ] 0x7ff
call [ InitCommonControlsEx@IAT ]
push rw-data
call [ SHGetMalloc@IAT ]
pop edi
mov eax esi
pop esi
leave
retn
sub_412bae
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ FreeLibrary@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call edi
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
jmp [ OleUninitialize@IAT ]
push esi
call edi
sub_4012aa
push [ esp + 0x4 ]
add ecx 0x30
push ecx
call sub_40affc
neg eax
sbb eax eax
inc eax
retn 0x4
sub_401656
push esi
push 0x1
mov esi ecx
call sub_40ede2
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dl [ esp + 0x8 ]
mov [ eax + ecx - 0x1 ] dl
pop esi
retn 0x4
sub_4019f2
push esi
mov esi ecx
lea ecx [ esi + 0x6418 ]
call sub_40ffb3
lea ecx [ esi + 0x5708 ]
call sub_40ffb3
lea ecx [ esi + 0x1398 ]
call sub_4077de
mov ecx esi
pop esi
jmp sub_405658
sub_401a1e
push esi
mov esi ecx
call sub_4019f2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40b406
pop ecx
sub_401ba8
cmp [ ecx + 0x4aec ] 0x2
ja r-xdata
xor eax eax
retn
test [ ecx + 0x4afc ] 0x8
je r-xdata
xor eax eax
inc eax
retn
sub_402aa2
mov ecx [ ecx + 0x4f10 ]
jmp sub_40ee4b
sub_402c96
push esi
mov esi ecx
call sub_402beb
mov ecx esi
pop esi
jmp sub_4077de
sub_402daf
push ebp
mov ebp esp
pop ebp
jmp sub_40ca5f
sub_402ec6
push [ esp + 0x4 ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40ac4a
retn 0x8
sub_4031f0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_40335f
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx + 0x9 ] al
mov [ ecx + 0xa ] al
retn
sub_403371
xor al al
retn 0x8
sub_403376
push 0x6b
call sub_40a407
push eax
call sub_40baf5
pop ecx
retn
sub_403481
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x9 ] cl
mov [ eax + 0xa ] cl
retn
sub_403495
push esi
mov esi ecx
call sub_403376
push 0x8
mov ecx esi
call sub_40344e
pop esi
retn
j_sub_40344e
jmp sub_40344e
sub_403764
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0x0
push 0x0
call sub_4036a7
push 0x2
mov ecx esi
call sub_40344e
pop esi
retn 0x8
sub_403785
push esi
push [ esp + 0x14 ]
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_403703
push 0x5
mov ecx esi
call sub_40344e
pop esi
retn 0x10
sub_4037aa
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x0
push 0x0
call sub_4035de
retn 0x8
sub_4037be
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x0
push 0x0
call sub_40363a
retn 0x8
sub_40387e
push esi
mov esi ecx
lea ecx [ esi + 0xc14 ]
call sub_40f182
lea ecx [ esi + 0xc38 ]
call sub_40f182
lea ecx [ esi + 0xc5c ]
call sub_40f182
mov eax esi
pop esi
retn
sub_4054b7
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
retn 0x4
xor eax eax
mov [ eax * 4 + rw-data ] ecx
inc eax
cmp eax 0x100
jb r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
jmp r-xdata
sub_405622
push [ ecx + 0x4 ]
call [ SetEndOfFile@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
retn
sub_405632
retn 0x8
sub_405ad2
push esi
mov esi ecx
call sub_405658
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40b406
pop ecx
sub_405d75
push ebp
mov ebp esp
push ecx
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_405ca2
mov al [ ebp - 0x1 ]
leave
retn
sub_405de5
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
xor eax eax
test [ esp + 0x4 ] 0x10
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_405dfd
xor al al
retn 0x4
sub_4061e9
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_405e2f
retn 0x8
sub_4061fb
mov eax ecx
or [ eax + 0xc04 ] 0xffffffff
xor ecx ecx
mov [ eax ] 0x0
mov [ eax + 0x400 ] cx
mov [ eax + 0xc00 ] 0x1
retn
sub_406218
mov eax [ ecx + 0xc04 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FindClose@IAT ]
sub_406751
mov eax [ esp + 0x4 ]
inc [ eax + 0x10 ]
mov eax [ eax + 0x10 ]
retn 0x4
sub_40675e
mov eax 0x80004001
retn 0x4
sub_406766
mov eax 0x80004002
retn 0x8
sub_4067ac
xor eax eax
retn 0x4
sub_40682b
mov eax 0x80004001
retn 0xc
sub_406833
mov eax 0x80004001
retn 0x8
sub_40683b
mov eax 0x80004001
retn 0x10
sub_406843
xor eax eax
retn 0x8
sub_406848
xor eax eax
retn 0xc
sub_40684d
mov eax [ esp + 0x18 ]
or [ eax ] 0xffffffff
mov eax 0x80020006
retn 0x18
sub_40685c
mov eax 0x80020003
retn 0x24
sub_406a92
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ DestroyWindow@IAT ]
and [ esi + 0x4 ] 0x0
sub_406d53
sub [ esp + 0x4 ] 0x4
jmp sub_406833
sub_406d5d
sub [ esp + 0x4 ] 0x4
jmp sub_40676e
sub_406d67
sub [ esp + 0x4 ] 0x4
jmp sub_406751
sub_406d71
sub [ esp + 0x4 ] 0x8
jmp sub_406751
sub_406d7b
sub [ esp + 0x4 ] 0xc
jmp sub_406751
sub_40713c
sub [ esp + 0x4 ] 0xc
jmp sub_406d85
sub_407146
sub [ esp + 0x4 ] 0x4
jmp sub_406e30
sub_407150
sub [ esp + 0x4 ] 0x8
jmp sub_406e30
sub_40715a
sub [ esp + 0x4 ] 0xc
jmp sub_406e30
sub_407164
sub [ esp + 0x4 ] 0x4
jmp sub_406d85
sub_40716e
sub [ esp + 0x4 ] 0x8
jmp sub_406d85
sub_4077de
push esi
push 0x36c8
mov esi ecx
push 0x0
push esi
call sub_40ad9c
lea ecx [ esi + 0x2d60 ]
pop esi
jmp sub_40ffb3
sub_40782e
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40b11d
test eax eax
lea eax [ esi + eax * 2 - 0x2 ]
ja r-xdata
pop esi
retn 0x4
mov eax esi
sub_40789c
xor eax eax
cmp [ esp + 0x4 ] 0x3a
sete al
retn 0x4
sub_407b44
cmp [ rw-data ] 0x0
je r-xdata
jmp sub_40aec0
mov ecx rw-data
jmp sub_40f77e
sub_407b5c
cmp [ rw-data ] 0x0
je r-xdata
jmp sub_40aeec
mov ecx rw-data
jmp sub_40f7a8
sub_407c07
mov eax [ esp + 0x4 ]
push esi
mov esi eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
mov esi eax
call sub_401be8
mov eax esi
pop esi
retn 0x4
sub_40846d
push esi
mov esi ecx
call sub_4066ab
and [ esi + 0xc ] 0x0
mov eax esi
pop esi
retn
sub_40847d
push esi
mov esi ecx
push [ esi + 0xc ]
call sub_40b406
pop ecx
mov ecx esi
pop esi
jmp sub_4066cc
sub_408491
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
retn
push 0x40004
call sub_40b413
pop ecx
mov [ esi + 0xc ] eax
sub_409739
mov eax [ ecx + 0x14 ]
cmp eax [ ecx + 0x10 ]
jae r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] 0x0
mov edx [ ecx ]
mov al [ eax + edx ]
mov edx [ esp + 0x4 ]
mov [ edx ] al
inc [ ecx + 0x14 ]
jmp r-xdata
retn 0x4
sub_409841
mov edx [ esp + 0x4 ]
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
retn 0x4
sub_409988
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov [ ecx + 0x2c ] eax
or [ ecx + 0x4c0 ] 0xffffffff
retn 0x8
mov [ ecx + 0x30 ] eax
sub_409a0d
mov eax [ esp + 0x4 ]
mov [ ecx + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0xc ] 0x1
mov [ ecx + 0x10 ] eax
retn 0x8
sub_409a22
push esi
mov esi ecx
lea ecx [ esi + 0x40 ]
call sub_40abd6
lea ecx [ esi + 0x280 ]
call sub_40abd6
mov ecx esi
call sub_409860
mov eax esi
pop esi
retn
sub_409c13
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] cl
retn
sub_409c20
push [ ecx ]
call sub_40ad18
retn
sub_409eea
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_409f55
cmp [ ecx + 0x10 ] 0x0
je r-xdata
retn 0x4
push 0xffffffec
push [ esp + 0x8 ]
call [ GetWindowLongW@IAT ]
or eax __pe_WINRAR_export_address_table
push eax
push 0xffffffec
push [ esp + 0xc ]
call [ SetWindowLongW@IAT ]
sub_40a3f0
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_409c28
mov ecx esi
call sub_40a140
pop esi
retn 0x4
sub_40acff
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
pop ebp
retn 0x4
sub_40b0ad
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ae97
add eax [ ebp + 0x8 ]
push eax
call sub_40af8a
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_40b384
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40b406
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40ad18
pop ebp
retn
sub_40b519
xor eax eax
retn
sub_40b578
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn
neg eax
_start
call sub_40b46b
xor eax eax
push eax
push eax
push eax
push eax
call sub_40e385
sub_40b5bb
mov eax ecx
mov ecx [ eax ]
mov edx [ eax + 0x10 ]
cmp edx [ ecx + 0xc1c ]
jne r-xdata
retn
push 0x0
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_405aee
sub_40bffa
push 0x0
push [ esp + 0x10 ]
push [ esp + 0xc ]
call sub_40b69e
push eax
push 0x402
push 0x6a
push [ rw-data ]
call [ SendDlgItemMessageW@IAT ]
retn 0x10
sub_40c07d
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call sub_40bffa
call sub_40b5d8
retn 0x20
sub_40e8fd
mov eax [ esp + 0x4 ]
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
mov [ eax + 0x10 ] 0xc3d2e1f0
retn 0x4
sub_40eacf
call sub_402db8
mov ecx rw-data
jmp sub_40335f
sub_40eade
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
retn 0x4
mov eax r--data
sub_40eaee
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
cmp [ eax ] 0x0
jne r-xdata
retn 0x4
CharToOemA
jmp [ CharToOemA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
sub_40eb0d
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
retn 0x8
sub_40eb2e
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0x14 ]
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
retn 0xc
sub_40eb53
movzx eax [ esp + 0x4 ]
push eax
call [ CharUpperA@IAT ]
retn 0x4
sub_40eb62
cmp [ esp + 0x4 ] 0x69
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
call sub_40ad63
mov al 0x49
jmp r-xdata
retn 0x4
sub_40eb7b
cmp [ esp + 0x4 ] 0x69
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
call sub_40f695
push 0x49
pop eax
jmp r-xdata
retn 0x4
sub_40eb96
mov eax [ esp + 0x4 ]
add eax 0xffffffd0
push 0x9
pop ecx
cmp ecx eax
sbb eax eax
inc eax
retn 0x4
j_sub_40eb0d
jmp sub_40eb0d
sub_40eda6
push esi
mov esi rw-data
push esi
push [ esp + 0xc ]
call [ OemToCharA@IAT ]
mov eax esi
pop esi
retn 0x4
sub_40edbd
and [ ecx + 0xc ] 0x0
and [ ecx + 0x1c ] 0x0
retn
sub_40ee26
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x1c ] 0x0
call sub_40edc6
lea ecx [ esi + 0x10 ]
call sub_40edc6
and [ esi + 0x20 ] 0x0
and [ esi + 0xa4 ] 0x0
pop esi
retn
sub_40ef41
push 0x0
push [ esp + 0x8 ]
call sub_40ee4b
retn 0x4
sub_40ef93
push [ esp + 0x8 ]
push 0x0
push [ esp + 0xc ]
call sub_40ef4f
retn 0x8
sub_40f32b
xor al al
retn 0x14
sub_40f565
mov al 0x1
retn
sub_40f762
mov eax [ esp + 0x4 ]
movzx edx [ eax ]
cmp [ edx + ecx ] 0x0
je r-xdata
inc eax
cmp [ eax + 0x1 ] 0x0
je r-xdata
add eax 0x2
jmp r-xdata
retn 0x4
sub_40f7da
push esi
mov esi ecx
call sub_40f722
mov eax esi
pop esi
retn
sub_40f846
cmp [ ecx ] 0x0
je r-xdata
retn
push [ ecx + 0xac ]
and [ ecx ] 0x0
call sub_40ad18
sub_40fb4c
push 0x100
mov [ ecx + 0xa6c ] 0x1
push 0x0
add ecx 0x66c
push ecx
call sub_40ad9c
retn
sub_410301
mov eax ecx
xor ecx ecx
mov [ eax + 0x4a8c ] ecx
mov [ eax + 0x644 ] ecx
mov [ eax + 0x64c ] ecx
mov [ eax + 0x648 ] ecx
retn
sub_4111a4
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_40ffb3
lea ecx [ esi + 0x14 ]
call sub_40ffb3
mov ecx esi
pop esi
jmp sub_40ffb3
sub_41150d
push esi
push 0x1
mov esi ecx
call sub_40ff4c
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esp + 0x8 ]
mov [ ecx + eax * 4 - 0x4 ] edx
pop esi
retn 0x4
sub_4126a6
cmp [ esp + 0x4 ] 0x1d
je r-xdata
push [ esp + 0x8 ]
call sub_4121d9
cmp [ esp + 0x4 ] 0x24
jne r-xdata
retn 0x8
sub_4126c0
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_40cb21
test eax eax
setne al
retn 0x8
sub_412ad1
push [ esp + 0x4 ]
call [ SetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x4
sub_412ae4
push [ esp + 0x4 ]
push [ esp + 0xc ]
call [ GetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x8
sub_412bde
mov ecx rw-data
jmp sub_403481
sub_412be8
mov ecx rw-data
call sub_409c13
push sub_412c1e
call sub_40b519
pop ecx
retn
sub_412bfe
mov ecx rw-data
call sub_402d7c
push sub_412c28
call sub_40b519
pop ecx
retn
sub_412c14
mov ecx rw-data
jmp sub_40f722
sub_412c1e
mov ecx rw-data
jmp sub_409c20
sub_412c28
mov ecx rw-data
jmp sub_402c96
