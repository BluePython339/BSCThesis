sub_401000
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_41717a
mov [ esi ] r--data
mov eax esi
mov esp ebp
pop ebp
retn
sub_401040
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
add esp 0x4
sub_4010d0
push ebp
mov ebp esp
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov ecx edx
jne r-xdata
mov [ ebp - 0x4 ] ecx
cmp ecx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0x8 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
lea edx [ ebp + 0x8 ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
pop esi
cmp [ eax ] edx
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_401160
push ebp
mov ebp esp
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov ecx edx
jne r-xdata
mov [ ebp - 0x4 ] ecx
cmp ecx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0x8 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
lea edx [ ebp + 0x8 ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
pop esi
cmp [ eax ] edx
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_4011d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4383f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_4066a0
mov eax [ edi + 0x4 ]
push eax
call sub_41827c
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_401230
push ebp
mov ebp esp
push ecx
push edi
push esi
call sub_401160
push esi
mov edi eax
call sub_4010d0
add esp 0x8
cmp edi eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax rwxdata
mov [ ebp - 0x4 ] esi
call sub_405cf0
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
movzx eax [ edi + esi ]
pop edi
mov esp ebp
pop ebp
retn
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
sub_401270
push ebp
mov ebp esp
push ecx
push edi
push esi
call sub_401160
push esi
mov edi eax
call sub_4010d0
add esp 0x8
cmp edi eax
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4 ]
mov eax rwxdata
mov [ ebp - 0x4 ] esi
call sub_405cf0
mov dl [ ebp + 0x8 ]
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
mov [ edi + esi ] dl
sub_401300
inc [ ecx + 0xdc ]
cmp [ ecx + 0xdc ] 0x37
jne r-xdata
mov edx [ ecx + 0xdc ]
cmp edx 0x18
jl r-xdata
mov [ ecx + 0xdc ] 0x0
mov eax [ ecx + edx * 4 + 0x7c ]
xor eax [ ecx + edx * 4 ]
mov [ ecx + edx * 4 ] eax
retn
mov eax [ ecx + edx * 4 - 0x60 ]
xor eax [ ecx + edx * 4 ]
mov [ ecx + edx * 4 ] eax
retn
sub_401340
push ebx
push esi
push edi
xor edi edi
xor ecx ecx
mov [ eax + 0xdc ] edi
xor edx edx
mov esi 0x1
mov [ eax + ecx * 4 ] edx
add ecx esi
add edx 0x12b9b0a1
cmp ecx 0x37
jl r-xdata
mov edx 0x7d0
lea esp [ esp ]
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] edi
mov ecx [ eax + 0xdc ]
mov ebx [ eax + ecx * 4 + 0x7c ]
mov ebx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] edi
xor [ eax + ecx * 4 ] ebx
add [ eax + 0xdc ] esi
mov ecx [ eax + 0xdc ]
cmp ecx 0x37
jne r-xdata
mov ecx [ eax + 0xdc ]
mov ebx [ eax + ecx * 4 + 0x7c ]
mov ebx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] edi
xor [ eax + ecx * 4 ] ebx
add [ eax + 0xdc ] esi
mov ecx [ eax + 0xdc ]
cmp ecx 0x37
jne r-xdata
mov ecx [ eax + 0xdc ]
mov ebx [ eax + ecx * 4 + 0x7c ]
mov ebx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] edi
xor [ eax + ecx * 4 ] ebx
add [ eax + 0xdc ] esi
mov ecx [ eax + 0xdc ]
cmp ecx 0x37
jne r-xdata
mov ecx [ eax + 0xdc ]
mov ebx [ eax + ecx * 4 + 0x7c ]
mov ebx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] edi
xor [ eax + ecx * 4 ] ebx
add [ eax + 0xdc ] esi
mov ecx [ eax + 0xdc ]
cmp ecx 0x37
jne r-xdata
mov ecx [ eax + 0xdc ]
mov ebx [ eax + ecx * 4 + 0x7c ]
mov ebx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
add [ eax + 0xdc ] esi
mov ecx [ eax + 0xdc ]
cmp ecx 0x37
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor [ eax + ecx * 4 ] ebx
sub edx esi
jne r-xdata
sub_4014a0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
add esp 0x4
sub_4014e0
mov eax [ esi ]
push ebx
push edi
movzx edi [ esi + 0x4 ]
lea ecx [ edi - 0x4 ]
mov edx eax
sar edx cl
mov ebx eax
mov ecx edi
sar ebx cl
sub eax ebx
mov [ esi ] eax
cmp edx 0xffff
jbe r-xdata
xor eax eax
test edx edx
sete al
pop edi
pop ebx
add eax edx
retn
mov edx 0xffff
lea ecx [ edi - 0x4 ]
mov eax edx
shl eax cl
mov [ esi ] eax
sub_401520
mov cl [ eax + 0x4 ]
cmp cl [ eax + 0x5 ]
jae r-xdata
retn
mov edx 0xffff
add [ eax + 0x6 ] dx
jne r-xdata
mov edx [ eax ]
add edx edx
mov [ eax ] edx
mov edx 0x3
shl dx cl
inc cl
mov [ eax + 0x4 ] cl
mov [ eax + 0x6 ] dx
sub_4015b0
push ebp
mov ebp esp
xor ecx ecx
push ebx
mov bl [ esi + 0x1 ]
cmp [ ebp + 0x8 ] ecx
je r-xdata
cmp bl 0x5e
jb r-xdata
cmp bl 0x5e
jb r-xdata
movzx ecx bl
shl ecx 0x4
mov dl [ ecx + rwxdata ]
mov [ esi + 0x1 ] dl
pop ebx
pop ebp
retn 0x4
mov eax [ rwxdata ]
inc [ eax + 0xdc ]
cmp [ eax + 0xdc ] 0x37
jne r-xdata
movzx ecx bl
shl ecx 0x4
mov dl [ ecx + rwxdata ]
mov [ esi + 0x1 ] dl
pop ebx
pop ebp
retn 0x4
mov eax [ rwxdata ]
inc [ eax + 0xdc ]
cmp [ eax + 0xdc ] 0x37
jne r-xdata
mov ecx [ eax + 0xdc ]
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] ecx
mov ecx [ eax + 0xdc ]
cmp ecx 0x18
jl r-xdata
mov [ eax + 0xdc ] ecx
mov edx [ eax + ecx * 4 + 0x7c ]
mov edx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
mov edx [ eax + ecx * 4 + 0x7c ]
mov edx [ eax + ecx * 4 - 0x60 ]
jmp r-xdata
mov al [ edx + rwxdata ]
mov [ esi + 0x1 ] al
pop ebx
pop ebp
retn 0x4
xor [ eax + ecx * 4 ] edx
mov bl [ esi + 0x1 ]
mov eax [ eax + ecx * 4 ]
movzx edx bl
shl edx 0x4
cmp eax [ edx + rwxdata ]
jb r-xdata
mov al [ edx + rwxdata ]
mov [ esi + 0x1 ] al
pop ebx
pop ebp
retn 0x4
xor [ eax + ecx * 4 ] edx
mov bl [ esi + 0x1 ]
mov eax [ eax + ecx * 4 ]
movzx edx bl
shl edx 0x4
cmp eax [ edx + rwxdata ]
jb r-xdata
sub_4016a0
push ebp
mov ebp esp
sub esp 0xf40
mov ecx 0x3
xor eax eax
mov [ ebp - 0xe70 ] cx
mov ecx 0x4
mov [ ebp - 0xf40 ] eax
or eax 0xffffffff
mov [ ebp - 0xe60 ] cx
xor ecx ecx
push ebx
mov [ ebp - 0xe50 ] cx
push esi
mov ecx 0x1
push edi
mov [ ebp - 0xf3c ] 0x1000200
mov [ ebp - 0xf38 ] eax
mov [ ebp - 0xf34 ] eax
mov [ ebp - 0xf30 ] 0x10000
mov [ ebp - 0xf2c ] 0x3010401
mov [ ebp - 0xf28 ] eax
mov [ ebp - 0xf24 ] eax
mov [ ebp - 0xf20 ] 0x1
mov [ ebp - 0xf1c ] 0x4020502
mov [ ebp - 0xf18 ] eax
mov [ ebp - 0xf14 ] eax
mov [ ebp - 0xf10 ] 0x20000
mov [ ebp - 0xf0c ] 0x6030703
mov [ ebp - 0xf08 ] eax
mov [ ebp - 0xf04 ] eax
mov [ ebp - 0xf00 ] 0x10001
mov [ ebp - 0xefc ] 0x7040804
mov [ ebp - 0xef8 ] eax
mov [ ebp - 0xef4 ] eax
mov [ ebp - 0xef0 ] 0x2
mov [ ebp - 0xeec ] 0x8050905
mov [ ebp - 0xee8 ] eax
mov [ ebp - 0xee4 ] eax
mov [ ebp - 0xee0 ] 0x30000
mov [ ebp - 0xedc ] 0xa060703
mov [ ebp - 0xed8 ] eax
mov [ ebp - 0xed4 ] eax
mov [ ebp - 0xed0 ] 0x20001
mov [ ebp - 0xecc ] 0xb070c07
mov [ ebp - 0xec8 ] eax
mov [ ebp - 0xec4 ] eax
mov [ ebp - 0xec0 ] 0x10002
mov [ ebp - 0xebc ] 0xc080d08
mov [ ebp - 0xeb8 ] eax
mov [ ebp - 0xeb4 ] eax
mov [ ebp - 0xeb0 ] 0x3
mov [ ebp - 0xeac ] 0x8050e09
mov [ ebp - 0xea8 ] eax
mov [ ebp - 0xea4 ] eax
mov [ ebp - 0xea0 ] 0x40000
mov [ ebp - 0xe9c ] 0xf0a0b06
mov [ ebp - 0xe98 ] eax
mov [ ebp - 0xe94 ] eax
mov [ ebp - 0xe90 ] 0x30001
mov [ ebp - 0xe8c ] 0x100b0c07
mov [ ebp - 0xe88 ] eax
mov [ ebp - 0xe84 ] eax
mov [ ebp - 0xe80 ] 0x20002
mov [ ebp - 0xe7c ] 0x110c120c
mov [ ebp - 0xe78 ] eax
mov [ ebp - 0xe74 ] eax
mov [ ebp - 0xe6e ] 0x130d0001
mov [ ebp - 0xe6a ] 0xc08
mov [ ebp - 0xe68 ] eax
mov [ ebp - 0xe64 ] eax
mov [ ebp - 0xe5e ] 0x140e0000
mov [ ebp - 0xe5a ] 0xd09
mov [ ebp - 0xe58 ] eax
mov [ ebp - 0xe54 ] eax
mov [ ebp - 0xe4e ] 0xb060005
mov [ ebp - 0xe4a ] 0x150f
mov [ ebp - 0xe48 ] eax
mov [ ebp - 0xe44 ] eax
mov [ ebp - 0xe40 ] cx
mov [ ebp - 0xe3e ] 0x110b0004
mov [ ebp - 0xe3a ] 0x1610
mov [ ebp - 0xe38 ] eax
mov [ ebp - 0xe34 ] eax
mov esi 0x3
mov [ ebp - 0xe20 ] si
mov esi 0x4
mov [ ebp - 0xe10 ] si
mov esi 0x5
mov [ ebp - 0xe00 ] si
xor esi esi
mov [ ebp - 0xdf0 ] si
mov ecx 0x2
mov esi 0x1
mov [ ebp - 0xde0 ] si
mov esi ecx
mov [ ebp - 0xdd0 ] si
mov esi 0x3
mov [ ebp - 0xdc0 ] si
mov esi 0x4
mov [ ebp - 0xdb0 ] si
mov esi 0x5
mov [ ebp - 0xda0 ] si
mov esi 0x6
mov [ ebp - 0xd90 ] si
xor esi esi
mov [ ebp - 0xd80 ] si
mov esi 0x1
mov [ ebp - 0xd70 ] si
mov esi ecx
mov [ ebp - 0xe30 ] cx
mov [ ebp - 0xe2e ] 0x120c0003
mov [ ebp - 0xe2a ] 0x1711
mov [ ebp - 0xe28 ] eax
mov [ ebp - 0xe24 ] eax
mov [ ebp - 0xe1e ] 0x19120002
mov [ ebp - 0xe1a ] 0x110c
mov [ ebp - 0xe18 ] eax
mov [ ebp - 0xe14 ] eax
mov [ ebp - 0xe0e ] 0x1a130001
mov [ ebp - 0xe0a ] 0x120d
mov [ ebp - 0xe08 ] eax
mov [ ebp - 0xe04 ] eax
mov [ ebp - 0xdfe ] 0x1b140000
mov [ ebp - 0xdfa ] 0xd09
mov [ ebp - 0xdf8 ] eax
mov [ ebp - 0xdf4 ] eax
mov [ ebp - 0xdee ] 0x100a0006
mov [ ebp - 0xdea ] 0x1c15
mov [ ebp - 0xde8 ] eax
mov [ ebp - 0xde4 ] eax
mov [ ebp - 0xdde ] 0x110b0005
mov [ ebp - 0xdda ] 0x1d16
mov [ ebp - 0xdd8 ] eax
mov [ ebp - 0xdd4 ] eax
mov [ ebp - 0xdce ] 0x18110004
mov [ ebp - 0xdca ] 0x1e17
mov [ ebp - 0xdc8 ] eax
mov [ ebp - 0xdc4 ] eax
mov [ ebp - 0xdbe ] 0x19120003
mov [ ebp - 0xdba ] 0x1711
mov [ ebp - 0xdb8 ] eax
mov [ ebp - 0xdb4 ] eax
mov [ ebp - 0xdae ] 0x21190002
mov [ ebp - 0xdaa ] 0x1812
mov [ ebp - 0xda8 ] eax
mov [ ebp - 0xda4 ] eax
mov [ ebp - 0xd9e ] 0x221a0001
mov [ ebp - 0xd9a ] 0x120d
mov [ ebp - 0xd98 ] eax
mov [ ebp - 0xd94 ] eax
mov [ ebp - 0xd8e ] 0x231b0000
mov [ ebp - 0xd8a ] 0x130e
mov [ ebp - 0xd88 ] eax
mov [ ebp - 0xd84 ] eax
mov [ ebp - 0xd7e ] 0x100a0007
mov [ ebp - 0xd7a ] 0x241c
mov [ ebp - 0xd78 ] eax
mov [ ebp - 0xd74 ] eax
mov [ ebp - 0xd6e ] 0x17100006
mov [ ebp - 0xd6a ] 0x251d
mov [ ebp - 0xd68 ] eax
mov [ ebp - 0xd64 ] eax
mov [ ebp - 0xd60 ] si
mov [ ebp - 0xd5e ] 0x18110005
mov esi 0x5
mov [ ebp - 0xd30 ] si
mov esi 0x6
mov [ ebp - 0xd20 ] si
mov esi 0x7
mov [ ebp - 0xd10 ] si
xor esi esi
mov [ ebp - 0xd00 ] si
mov esi 0x1
mov [ ebp - 0xcf0 ] si
mov esi ecx
mov [ ebp - 0xce0 ] si
mov edx 0x3
mov esi 0x3
mov [ ebp - 0xcd0 ] si
mov [ ebp - 0xd50 ] dx
mov edx 0x4
mov esi edx
mov [ ebp - 0xcc0 ] si
mov esi 0x5
mov [ ebp - 0xcb0 ] si
mov esi 0x6
mov [ ebp - 0xca0 ] si
mov esi 0x7
mov [ ebp - 0xd5a ] 0x261e
mov [ ebp - 0xd58 ] eax
mov [ ebp - 0xd54 ] eax
mov [ ebp - 0xd4e ] 0x20180004
mov [ ebp - 0xd4a ] 0x1e17
mov [ ebp - 0xd48 ] eax
mov [ ebp - 0xd44 ] eax
mov [ ebp - 0xd40 ] dx
mov [ ebp - 0xd3e ] 0x21190003
mov [ ebp - 0xd3a ] 0x1f18
mov [ ebp - 0xd38 ] eax
mov [ ebp - 0xd34 ] eax
mov [ ebp - 0xd2e ] 0x2a210002
mov [ ebp - 0xd2a ] 0x1812
mov [ ebp - 0xd28 ] eax
mov [ ebp - 0xd24 ] eax
mov [ ebp - 0xd1e ] 0x2b220001
mov [ ebp - 0xd1a ] 0x1913
mov [ ebp - 0xd18 ] eax
mov [ ebp - 0xd14 ] eax
mov [ ebp - 0xd0e ] 0x2c230000
mov [ ebp - 0xd0a ] 0x130e
mov [ ebp - 0xd08 ] eax
mov [ ebp - 0xd04 ] eax
mov [ ebp - 0xcfe ] 0x160f0008
mov [ ebp - 0xcfa ] 0x2d24
mov [ ebp - 0xcf8 ] eax
mov [ ebp - 0xcf4 ] eax
mov [ ebp - 0xcee ] 0x17100007
mov [ ebp - 0xcea ] 0x2e25
mov [ ebp - 0xce8 ] eax
mov [ ebp - 0xce4 ] eax
mov [ ebp - 0xcde ] 0x1f170006
mov [ ebp - 0xcda ] 0x2f26
mov [ ebp - 0xcd8 ] eax
mov [ ebp - 0xcd4 ] eax
mov [ ebp - 0xcce ] 0x20180005
mov [ ebp - 0xcca ] 0x261e
mov [ ebp - 0xcc8 ] eax
mov [ ebp - 0xcc4 ] eax
mov [ ebp - 0xcbe ] 0x29200004
mov [ ebp - 0xcba ] 0x271f
mov [ ebp - 0xcb8 ] eax
mov [ ebp - 0xcb4 ] eax
mov [ ebp - 0xcae ] 0x2a210003
mov [ ebp - 0xcaa ] 0x1f18
mov [ ebp - 0xca8 ] eax
mov [ ebp - 0xca4 ] eax
mov [ ebp - 0xc9e ] 0x342a0002
mov [ ebp - 0xc9a ] 0x2019
mov [ ebp - 0xc98 ] eax
mov [ ebp - 0xc94 ] eax
mov [ ebp - 0xc90 ] si
mov [ ebp - 0xc8e ] 0x352b0001
mov [ ebp - 0xc8a ] 0x1913
mov [ ebp - 0xc88 ] eax
mov [ ebp - 0xc84 ] eax
mov esi 0x8
mov [ ebp - 0xc80 ] si
xor esi esi
mov [ ebp - 0xc70 ] si
mov esi 0x1
mov [ ebp - 0xc60 ] si
mov esi ecx
mov [ ebp - 0xc50 ] si
mov esi edx
mov [ ebp - 0xc30 ] si
mov ecx 0x3
mov esi 0x5
mov [ ebp - 0xc20 ] si
mov [ ebp - 0xc40 ] cx
mov ecx 0x6
mov esi ecx
mov [ ebp - 0xc10 ] si
mov esi 0x7
mov [ ebp - 0xc00 ] si
mov esi 0x8
mov [ ebp - 0xbf0 ] si
mov esi 0x9
mov [ ebp - 0xbe0 ] si
mov esi 0x1
mov [ ebp - 0xbd0 ] si
mov esi 0x2
mov [ ebp - 0xbc0 ] si
mov esi 0x3
mov [ ebp - 0xc7e ] 0x362c0000
mov [ ebp - 0xc7a ] 0x1a14
mov [ ebp - 0xc78 ] eax
mov [ ebp - 0xc74 ] eax
mov [ ebp - 0xc6e ] 0x160f0009
mov [ ebp - 0xc6a ] 0x5e2d
mov [ ebp - 0xc68 ] eax
mov [ ebp - 0xc64 ] eax
mov [ ebp - 0xc5e ] 0x1e160008
mov [ ebp - 0xc5a ] 0x372e
mov [ ebp - 0xc58 ] eax
mov [ ebp - 0xc54 ] eax
mov [ ebp - 0xc4e ] 0x1f170007
mov [ ebp - 0xc4a ] 0x382f
mov [ ebp - 0xc48 ] eax
mov [ ebp - 0xc44 ] eax
mov [ ebp - 0xc3e ] cx
mov [ ebp - 0xc3c ] 0x2f26281f
mov [ ebp - 0xc38 ] eax
mov [ ebp - 0xc34 ] eax
mov [ ebp - 0xc2e ] 0x29200005
mov [ ebp - 0xc2a ] 0x3027
mov [ ebp - 0xc28 ] eax
mov [ ebp - 0xc24 ] eax
mov [ ebp - 0xc1e ] 0x33290004
mov [ ebp - 0xc1a ] 0x271f
mov [ ebp - 0xc18 ] eax
mov [ ebp - 0xc14 ] eax
mov [ ebp - 0xc0e ] 0x342a0003
mov [ ebp - 0xc0a ] 0x2820
mov [ ebp - 0xc08 ] eax
mov [ ebp - 0xc04 ] eax
mov [ ebp - 0xbfe ] 0x3e340002
mov [ ebp - 0xbfa ] 0x2019
mov [ ebp - 0xbf8 ] eax
mov [ ebp - 0xbf4 ] eax
mov [ ebp - 0xbee ] 0x3f350001
mov [ ebp - 0xbea ] 0x211a
mov [ ebp - 0xbe8 ] eax
mov [ ebp - 0xbe4 ] eax
mov [ ebp - 0xbde ] 0x5f360000
mov [ ebp - 0xbda ] 0x1a14
mov [ ebp - 0xbd8 ] eax
mov [ ebp - 0xbd4 ] eax
mov [ ebp - 0xbce ] 0x1e160009
mov [ ebp - 0xbca ] 0x6037
mov [ ebp - 0xbc8 ] eax
mov [ ebp - 0xbc4 ] eax
mov [ ebp - 0xbbe ] 0x271e0008
mov [ ebp - 0xbba ] 0x4038
mov [ ebp - 0xbb8 ] eax
mov [ ebp - 0xbb4 ] eax
mov [ ebp - 0xbb0 ] si
mov esi 0x7
mov [ ebp - 0xb70 ] si
mov esi 0x8
mov [ ebp - 0xb60 ] si
mov esi 0x9
mov [ ebp - 0xb50 ] si
mov esi 0x2
mov [ ebp - 0xb40 ] si
mov esi 0x3
mov [ ebp - 0xb30 ] si
mov esi 0x4
mov [ ebp - 0xb20 ] si
mov esi 0x5
mov [ ebp - 0xba0 ] dx
mov edx 0x5
mov [ ebp - 0xb10 ] si
mov esi ecx
mov [ ebp - 0xb90 ] dx
mov edx ecx
mov [ ebp - 0xb00 ] si
mov esi 0x7
mov ecx 0x8
mov [ ebp - 0xbae ] 0x281f0007
mov [ ebp - 0xbaa ] 0x382f
mov [ ebp - 0xba8 ] eax
mov [ ebp - 0xba4 ] eax
mov [ ebp - 0xb9e ] 0x32280006
mov [ ebp - 0xb9a ] 0x3930
mov [ ebp - 0xb98 ] eax
mov [ ebp - 0xb94 ] eax
mov [ ebp - 0xb8e ] 0x33290005
mov [ ebp - 0xb8a ] 0x3027
mov [ ebp - 0xb88 ] eax
mov [ ebp - 0xb84 ] eax
mov [ ebp - 0xb80 ] dx
mov [ ebp - 0xb7e ] 0x3d330004
mov [ ebp - 0xb7a ] 0x3128
mov [ ebp - 0xb78 ] eax
mov [ ebp - 0xb74 ] eax
mov [ ebp - 0xb6e ] 0x3e340003
mov [ ebp - 0xb6a ] 0x2820
mov [ ebp - 0xb68 ] eax
mov [ ebp - 0xb64 ] eax
mov [ ebp - 0xb5e ] 0x473e0002
mov [ ebp - 0xb5a ] 0x2921
mov [ ebp - 0xb58 ] eax
mov [ ebp - 0xb54 ] eax
mov [ ebp - 0xb4e ] 0x613f0001
mov [ ebp - 0xb4a ] 0x211a
mov [ ebp - 0xb48 ] eax
mov [ ebp - 0xb44 ] eax
mov [ ebp - 0xb3e ] 0x271e0009
mov [ ebp - 0xb3a ] 0x6340
mov [ ebp - 0xb38 ] eax
mov [ ebp - 0xb34 ] eax
mov [ ebp - 0xb2e ] 0x31270008
mov [ ebp - 0xb2a ] 0x4038
mov [ ebp - 0xb28 ] eax
mov [ ebp - 0xb24 ] eax
mov [ ebp - 0xb1e ] 0x32280007
mov [ ebp - 0xb1a ] 0x4139
mov [ ebp - 0xb18 ] eax
mov [ ebp - 0xb14 ] eax
mov [ ebp - 0xb0e ] 0x3c320006
mov [ ebp - 0xb0a ] 0x3930
mov [ ebp - 0xb08 ] eax
mov [ ebp - 0xb04 ] eax
mov [ ebp - 0xafe ] 0x3d330005
mov [ ebp - 0xafa ] 0x3a31
mov [ ebp - 0xaf8 ] eax
mov [ ebp - 0xaf4 ] eax
mov [ ebp - 0xaf0 ] si
mov [ ebp - 0xaee ] 0x463d0004
mov [ ebp - 0xaea ] 0x3128
mov [ ebp - 0xae8 ] eax
mov [ ebp - 0xae4 ] eax
mov [ ebp - 0xae0 ] cx
mov [ ebp - 0xade ] 0x473e0003
mov [ ebp - 0xada ] 0x3229
mov [ ebp - 0xad8 ] eax
mov [ ebp - 0xad4 ] eax
mov ecx 0x9
mov [ ebp - 0xad0 ] cx
mov esi 0x5
mov [ ebp - 0xaa0 ] si
mov esi edx
mov ecx 0x3
mov [ ebp - 0xac0 ] cx
mov [ ebp - 0xa90 ] si
mov edx 0x5
mov [ ebp - 0xa40 ] dx
mov ecx 0x4
mov esi 0x7
mov edx 0x6
mov [ ebp - 0xab0 ] cx
mov ecx 0x8
mov [ ebp - 0xa80 ] si
mov [ ebp - 0xa30 ] dx
mov esi ecx
mov edx 0x7
mov [ ebp - 0xa70 ] si
mov [ ebp - 0xa20 ] dx
mov esi 0x9
mov edx ecx
mov [ ebp - 0xa60 ] si
mov [ ebp - 0xa10 ] dx
mov esi 0x4
mov edx 0x9
mov [ ebp - 0xace ] 0x64470002
mov [ ebp - 0xaca ] 0x2921
mov [ ebp - 0xac8 ] eax
mov [ ebp - 0xac4 ] eax
mov [ ebp - 0xabe ] 0x31270009
mov [ ebp - 0xaba ] 0x6340
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xab4 ] eax
mov [ ebp - 0xaae ] cx
mov [ ebp - 0xaac ] 0x48413b31
mov [ ebp - 0xaa8 ] eax
mov [ ebp - 0xaa4 ] eax
mov [ ebp - 0xa9e ] 0x3c320007
mov [ ebp - 0xa9a ] 0x4139
mov [ ebp - 0xa98 ] eax
mov [ ebp - 0xa94 ] eax
mov [ ebp - 0xa8e ] 0x453c0006
mov [ ebp - 0xa8a ] 0x423a
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa84 ] eax
mov [ ebp - 0xa7e ] 0x463d0005
mov [ ebp - 0xa7a ] 0x3a31
mov [ ebp - 0xa78 ] eax
mov [ ebp - 0xa74 ] eax
mov [ ebp - 0xa6e ] 0x4e460004
mov [ ebp - 0xa6a ] 0x3b32
mov [ ebp - 0xa68 ] eax
mov [ ebp - 0xa64 ] eax
mov [ ebp - 0xa5e ] 0x64470003
mov [ ebp - 0xa5a ] 0x3229
mov [ ebp - 0xa58 ] eax
mov [ ebp - 0xa54 ] eax
mov [ ebp - 0xa50 ] si
mov [ ebp - 0xa4e ] 0x3b310009
mov [ ebp - 0xa4a ] 0x6748
mov [ ebp - 0xa48 ] eax
mov [ ebp - 0xa44 ] eax
mov [ ebp - 0xa3e ] 0x443b0008
mov [ ebp - 0xa3a ] 0x4841
mov [ ebp - 0xa38 ] eax
mov [ ebp - 0xa34 ] eax
mov [ ebp - 0xa2e ] 0x453c0007
mov [ ebp - 0xa2a ] 0x4942
mov [ ebp - 0xa28 ] eax
mov [ ebp - 0xa24 ] eax
mov [ ebp - 0xa1e ] 0x4d450006
mov [ ebp - 0xa1a ] 0x423a
mov [ ebp - 0xa18 ] eax
mov [ ebp - 0xa14 ] eax
mov [ ebp - 0xa0e ] 0x4e460005
mov [ ebp - 0xa0a ] 0x433b
mov [ ebp - 0xa08 ] eax
mov [ ebp - 0xa04 ] eax
mov [ ebp - 0xa00 ] dx
mov ecx 0xa
mov [ ebp - 0x950 ] cx
mov edx 0x5
mov ecx 0x1
mov [ ebp - 0x9f0 ] dx
mov [ ebp - 0x940 ] cx
mov edx 0x7
mov ecx 0xa
mov [ ebp - 0x9e0 ] dx
mov [ ebp - 0x930 ] cx
mov edx 0x9
xor ecx ecx
mov [ ebp - 0x9d0 ] dx
mov edx 0x7fffffff
mov [ ebp - 0x920 ] cx
mov ecx 0x2
mov [ ebp - 0x9fe ] 0x684e0004
mov [ ebp - 0x9fa ] 0x3b32
mov [ ebp - 0x9f8 ] eax
mov [ ebp - 0x9f4 ] eax
mov [ ebp - 0x9ee ] 0x443b0009
mov [ ebp - 0x9ea ] 0x6748
mov [ ebp - 0x9e8 ] eax
mov [ ebp - 0x9e4 ] eax
mov [ ebp - 0x9de ] 0x4d450007
mov [ ebp - 0x9da ] 0x4942
mov [ ebp - 0x9d8 ] eax
mov [ ebp - 0x9d4 ] eax
mov [ ebp - 0x9ce ] 0x684e0005
mov [ ebp - 0x9ca ] 0x433b
mov [ ebp - 0x9c8 ] eax
mov [ ebp - 0x9c4 ] eax
mov [ ebp - 0x9c0 ] 0x90006
mov [ ebp - 0x9bc ] 0x6c4f4c44
mov [ ebp - 0x9b8 ] eax
mov [ ebp - 0x9b4 ] eax
mov [ ebp - 0x9b0 ] 0x60009
mov [ ebp - 0x9ac ] 0x4a436d54
mov [ ebp - 0x9a8 ] eax
mov [ ebp - 0x9a4 ] eax
mov [ ebp - 0x9a0 ] 0x90007
mov [ ebp - 0x99c ] 0x6c4f534c
mov [ ebp - 0x998 ] eax
mov [ ebp - 0x994 ] eax
mov [ ebp - 0x990 ] 0x70009
mov [ ebp - 0x98c ] 0x504a6d54
mov [ ebp - 0x988 ] eax
mov [ ebp - 0x984 ] eax
mov [ ebp - 0x980 ] 0x90008
mov [ ebp - 0x97c ] 0x72555753
mov [ ebp - 0x978 ] eax
mov [ ebp - 0x974 ] eax
mov [ ebp - 0x970 ] 0x80009
mov [ ebp - 0x96c ] 0x55507357
mov [ ebp - 0x968 ] eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x960 ] 0xa0000
mov [ ebp - 0x95c ] 0x625e1d15
mov [ ebp - 0x958 ] eax
mov [ ebp - 0x954 ] edx
mov [ ebp - 0x94e ] 0x655f0000
mov [ ebp - 0x94a ] 0x221b
mov [ ebp - 0x948 ] edx
mov [ ebp - 0x944 ] eax
mov [ ebp - 0x93e ] 0x261d000a
mov [ ebp - 0x93a ] 0x6660
mov [ ebp - 0x938 ] eax
mov [ ebp - 0x934 ] edx
mov [ ebp - 0x92e ] 0x69610001
mov [ ebp - 0x92a ] 0x2a22
mov [ ebp - 0x928 ] edx
mov [ ebp - 0x924 ] eax
mov [ ebp - 0x91e ] 0x251c000c
mov [ ebp - 0x91a ] 0x6a62
mov [ ebp - 0x918 ] eax
mov [ ebp - 0x914 ] edx
mov [ ebp - 0x910 ] cx
mov [ ebp - 0x90e ] 0x3026000a
mov [ ebp - 0x90a ] 0x6b63
mov [ ebp - 0x908 ] eax
mov [ ebp - 0x904 ] edx
mov ecx 0xa
mov [ ebp - 0x900 ] cx
mov ecx 0xc
mov [ ebp - 0x8f0 ] cx
mov ecx 0x1
mov [ ebp - 0x8e0 ] cx
mov ecx 0x3
mov [ ebp - 0x8d0 ] cx
mov ecx 0xa
mov [ ebp - 0x8c0 ] cx
mov ecx 0xc
mov [ ebp - 0x8b0 ] cx
xor ecx ecx
mov [ ebp - 0x8a0 ] cx
mov ecx 0x2
mov [ ebp - 0x890 ] cx
mov ecx esi
mov [ ebp - 0x880 ] cx
mov ecx 0xa
mov [ ebp - 0x870 ] cx
mov ecx 0xc
mov [ ebp - 0x860 ] cx
mov ecx 0xe
mov [ ebp - 0x850 ] cx
mov ecx 0x1
mov [ ebp - 0x840 ] cx
mov ecx 0x3
mov [ ebp - 0x8fe ] 0x6e640002
mov [ ebp - 0x8fa ] 0x332a
mov [ ebp - 0x8f8 ] edx
mov [ ebp - 0x8f4 ] eax
mov [ ebp - 0x8ee ] 0x6f650000
mov [ ebp - 0x8ea ] 0x2b23
mov [ ebp - 0x8e8 ] edx
mov [ ebp - 0x8e4 ] eax
mov [ ebp - 0x8de ] 0x2f25000c
mov [ ebp - 0x8da ] 0x7066
mov [ ebp - 0x8d8 ] eax
mov [ ebp - 0x8d4 ] edx
mov [ ebp - 0x8ce ] 0x3a30000a
mov [ ebp - 0x8ca ] 0x6b63
mov [ ebp - 0x8c8 ] eax
mov [ ebp - 0x8c4 ] edx
mov [ ebp - 0x8be ] 0x6e640003
mov [ ebp - 0x8ba ] 0x3c33
mov [ ebp - 0x8b8 ] edx
mov [ ebp - 0x8b4 ] eax
mov [ ebp - 0x8ae ] 0x75690001
mov [ ebp - 0x8aa ] 0x342b
mov [ ebp - 0x8a8 ] edx
mov [ ebp - 0x8a4 ] eax
mov [ ebp - 0x89e ] 0x2e24000e
mov [ ebp - 0x89a ] 0x766a
mov [ ebp - 0x898 ] eax
mov [ ebp - 0x894 ] edx
mov [ ebp - 0x88e ] 0x392f000c
mov [ ebp - 0x88a ] 0x776b
mov [ ebp - 0x888 ] eax
mov [ ebp - 0x884 ] edx
mov [ ebp - 0x87e ] 0x433a000a
mov [ ebp - 0x87a ] 0x7167
mov [ ebp - 0x878 ] eax
mov [ ebp - 0x874 ] edx
mov [ ebp - 0x86e ] 0x74680004
mov [ ebp - 0x86a ] 0x443c
mov [ ebp - 0x868 ] edx
mov [ ebp - 0x864 ] eax
mov [ ebp - 0x85e ] 0x7a6e0002
mov [ ebp - 0x85a ] 0x3d34
mov [ ebp - 0x858 ] edx
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x84e ] 0x7b6f0000
mov [ ebp - 0x84a ] 0x352c
mov [ ebp - 0x848 ] edx
mov [ ebp - 0x844 ] eax
mov [ ebp - 0x83e ] 0x382e000e
mov [ ebp - 0x83a ] 0x7c70
mov [ ebp - 0x838 ] eax
mov [ ebp - 0x834 ] edx
mov [ ebp - 0x830 ] cx
mov [ ebp - 0x82e ] 0x4239000c
mov ecx 0x5
mov [ ebp - 0x820 ] cx
mov ecx 0xa
mov esi ecx
mov [ ebp - 0x810 ] si
mov esi 0x2
mov [ ebp - 0x7d0 ] si
mov esi 0x4
mov [ ebp - 0x7c0 ] si
mov esi 0xc
mov [ ebp - 0x7b0 ] si
mov [ ebp - 0x81e ] cx
mov esi 0xe
mov [ ebp - 0x7a0 ] si
mov ecx 0xc
mov esi 0x10
mov [ ebp - 0x800 ] cx
mov [ ebp - 0x790 ] si
mov ecx 0xe
mov esi 0x1
mov [ ebp - 0x7f0 ] cx
mov [ ebp - 0x780 ] si
xor ecx ecx
mov esi 0x3
mov [ ebp - 0x7e0 ] cx
mov ecx 0x3fffffff
mov [ ebp - 0x770 ] si
mov esi 0x5
mov [ ebp - 0x82a ] 0x776b
mov [ ebp - 0x828 ] eax
mov [ ebp - 0x824 ] edx
mov [ ebp - 0x81c ] 0x71674b43
mov [ ebp - 0x818 ] eax
mov [ ebp - 0x814 ] edx
mov [ ebp - 0x80e ] 0x74680005
mov [ ebp - 0x80a ] 0x4b44
mov [ ebp - 0x808 ] edx
mov [ ebp - 0x804 ] eax
mov [ ebp - 0x7fe ] 0x7a6e0003
mov [ ebp - 0x7fa ] 0x453d
mov [ ebp - 0x7f8 ] edx
mov [ ebp - 0x7f4 ] eax
mov [ ebp - 0x7ee ] 0x81750001
mov [ ebp - 0x7ea ] 0x3e35
mov [ ebp - 0x7e8 ] edx
mov [ ebp - 0x7e4 ] eax
mov [ ebp - 0x7de ] 0x372d0010
mov [ ebp - 0x7da ] 0x8a76
mov [ ebp - 0x7d8 ] eax
mov [ ebp - 0x7d4 ] ecx
mov [ ebp - 0x7ce ] 0x4138000e
mov [ ebp - 0x7ca ] 0x8277
mov [ ebp - 0x7c8 ] eax
mov [ ebp - 0x7c4 ] edx
mov [ ebp - 0x7be ] 0x4a42000c
mov [ ebp - 0x7ba ] 0x7d71
mov [ ebp - 0x7b8 ] eax
mov [ ebp - 0x7b4 ] edx
mov [ ebp - 0x7ae ] 0x80740004
mov [ ebp - 0x7aa ] 0x4c45
mov [ ebp - 0x7a8 ] edx
mov [ ebp - 0x7a4 ] eax
mov [ ebp - 0x79e ] 0x877a0002
mov [ ebp - 0x79a ] 0x463e
mov [ ebp - 0x798 ] edx
mov [ ebp - 0x794 ] eax
mov [ ebp - 0x78e ] 0x8d7b0000
mov [ ebp - 0x78a ] 0x3f36
mov [ ebp - 0x788 ] ecx
mov [ ebp - 0x784 ] eax
mov [ ebp - 0x77e ] 0x40370010
mov [ ebp - 0x77a ] 0x8e7c
mov [ ebp - 0x778 ] eax
mov [ ebp - 0x774 ] ecx
mov [ ebp - 0x76e ] 0x4941000e
mov [ ebp - 0x76a ] 0x8277
mov [ ebp - 0x768 ] eax
mov [ ebp - 0x764 ] edx
mov [ ebp - 0x760 ] si
mov [ ebp - 0x75e ] 0x514a000c
mov [ ebp - 0x75a ] 0x7d71
mov esi 0xc
mov [ ebp - 0x750 ] si
mov [ ebp - 0x754 ] edx
mov [ ebp - 0x748 ] edx
mov esi 0xe
mov [ ebp - 0x740 ] si
mov [ ebp - 0x738 ] edx
mov [ ebp - 0x704 ] edx
mov [ ebp - 0x6f4 ] edx
mov [ ebp - 0x6e8 ] edx
mov [ ebp - 0x6d8 ] edx
mov esi 0x10
mov [ ebp - 0x730 ] si
mov edx 0x10
mov [ ebp - 0x6d0 ] dx
mov esi 0x2
mov [ ebp - 0x720 ] si
mov edx 0x3
mov [ ebp - 0x6c0 ] dx
mov esi 0x4
mov [ ebp - 0x710 ] si
mov edx 0x10
mov esi 0x6
mov [ ebp - 0x6b0 ] dx
xor edx edx
mov [ ebp - 0x700 ] si
mov esi 0xc
mov [ ebp - 0x6a0 ] dx
mov edx 0x4
mov [ ebp - 0x6f0 ] si
mov esi 0xe
mov [ ebp - 0x690 ] dx
mov [ ebp - 0x758 ] eax
mov [ ebp - 0x74e ] 0x80740005
mov [ ebp - 0x74a ] 0x524c
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x73e ] 0x877a0003
mov [ ebp - 0x73a ] 0x4d46
mov [ ebp - 0x734 ] eax
mov [ ebp - 0x72e ] 0x91810001
mov [ ebp - 0x72a ] 0x473f
mov [ ebp - 0x728 ] ecx
mov [ ebp - 0x724 ] eax
mov [ ebp - 0x71e ] 0x48400010
mov [ ebp - 0x71a ] 0x9282
mov [ ebp - 0x718 ] eax
mov [ ebp - 0x714 ] ecx
mov [ ebp - 0x70e ] 0x5049000e
mov [ ebp - 0x70a ] 0x887d
mov [ ebp - 0x708 ] eax
mov [ ebp - 0x6fe ] 0x5651000c
mov [ ebp - 0x6fa ] 0x8378
mov [ ebp - 0x6f8 ] eax
mov [ ebp - 0x6ee ] 0x86790006
mov [ ebp - 0x6ea ] 0x5652
mov [ ebp - 0x6e4 ] eax
mov [ ebp - 0x6e0 ] si
mov [ ebp - 0x6de ] 0x89800004
mov [ ebp - 0x6da ] 0x534d
mov [ ebp - 0x6d4 ] eax
mov [ ebp - 0x6ce ] 0x95870002
mov [ ebp - 0x6ca ] 0x4e47
mov [ ebp - 0x6c8 ] ecx
mov [ ebp - 0x6c4 ] eax
mov [ ebp - 0x6be ] 0x4f480010
mov [ ebp - 0x6ba ] 0x9282
mov [ ebp - 0x6b8 ] eax
mov [ ebp - 0x6b4 ] ecx
mov [ ebp - 0x6ae ] 0x95870003
mov [ ebp - 0x6aa ] 0x544e
mov [ ebp - 0x6a8 ] ecx
mov [ ebp - 0x6a4 ] eax
mov [ ebp - 0x69e ] 0x605e0014
mov [ ebp - 0x69a ] 0x9a8a
mov [ ebp - 0x698 ] eax
mov [ ebp - 0x694 ] ecx
mov [ ebp - 0x68e ] 0x554f0010
mov [ ebp - 0x68a ] 0x9688
mov [ ebp - 0x688 ] eax
mov [ ebp - 0x684 ] ecx
mov edx 0x10
mov [ ebp - 0x680 ] dx
mov esi 0x6
mov [ ebp - 0x610 ] si
mov edx 0x14
mov [ ebp - 0x670 ] dx
mov esi 0x10
mov [ ebp - 0x600 ] si
mov edx 0x1
mov [ ebp - 0x660 ] dx
mov esi 0x14
mov [ ebp - 0x5f0 ] si
mov edx 0x5
mov esi 0x3
mov [ ebp - 0x650 ] dx
mov [ ebp - 0x5e0 ] si
mov edx 0x10
mov esi 0x7
mov [ ebp - 0x640 ] dx
mov [ ebp - 0x5d0 ] si
mov edx 0x14
mov esi 0x10
mov [ ebp - 0x630 ] dx
mov [ ebp - 0x5c0 ] si
mov edx 0x2
mov esi 0x14
mov [ ebp - 0x67e ] 0x99890004
mov [ ebp - 0x67a ] 0x5754
mov [ ebp - 0x678 ] ecx
mov [ ebp - 0x674 ] eax
mov [ ebp - 0x66e ] 0x9d8d0000
mov [ ebp - 0x66a ] 0x615f
mov [ ebp - 0x668 ] ecx
mov [ ebp - 0x664 ] eax
mov [ ebp - 0x65e ] 0x63600014
mov [ ebp - 0x65a ] 0x9e8e
mov [ ebp - 0x658 ] eax
mov [ ebp - 0x654 ] ecx
mov [ ebp - 0x64e ] 0x58550010
mov [ ebp - 0x64a ] 0x9688
mov [ ebp - 0x648 ] eax
mov [ ebp - 0x644 ] ecx
mov [ ebp - 0x63e ] 0x99890005
mov [ ebp - 0x63a ] 0x5957
mov [ ebp - 0x638 ] ecx
mov [ ebp - 0x634 ] eax
mov [ ebp - 0x62e ] 0x9f910001
mov [ ebp - 0x62a ] 0x6461
mov [ ebp - 0x628 ] ecx
mov [ ebp - 0x624 ] eax
mov [ ebp - 0x620 ] dx
mov [ ebp - 0x61e ] 0x67630014
mov [ ebp - 0x61a ] 0xa092
mov [ ebp - 0x618 ] eax
mov [ ebp - 0x614 ] ecx
mov [ ebp - 0x60e ] 0x5a580010
mov [ ebp - 0x60a ] 0x9b8b
mov [ ebp - 0x608 ] eax
mov [ ebp - 0x604 ] ecx
mov [ ebp - 0x5fe ] 0x9c8c0006
mov [ ebp - 0x5fa ] 0x5b59
mov [ ebp - 0x5f8 ] ecx
mov [ ebp - 0x5f4 ] eax
mov [ ebp - 0x5ee ] 0xa1950002
mov [ ebp - 0x5ea ] 0x6864
mov [ ebp - 0x5e8 ] ecx
mov [ ebp - 0x5e4 ] eax
mov [ ebp - 0x5de ] 0x6c670014
mov [ ebp - 0x5da ] 0xa092
mov [ ebp - 0x5d8 ] eax
mov [ ebp - 0x5d4 ] ecx
mov [ ebp - 0x5ce ] 0x5c5a0010
mov [ ebp - 0x5ca ] 0x9b8b
mov [ ebp - 0x5c8 ] eax
mov [ ebp - 0x5c4 ] ecx
mov [ ebp - 0x5be ] 0x9c8c0007
mov [ ebp - 0x5ba ] 0x5d5b
mov [ ebp - 0x5b8 ] ecx
mov [ ebp - 0x5b4 ] eax
mov [ ebp - 0x5b0 ] si
mov [ ebp - 0x5ae ] 0xa1950003
mov [ ebp - 0x5aa ] 0x6d68
xor esi esi
mov [ ebp - 0x5a0 ] si
mov esi 0x4
mov [ ebp - 0x590 ] si
mov esi 0x14
mov [ ebp - 0x580 ] si
mov esi 0x18
mov [ ebp - 0x570 ] si
mov esi 0x1
mov [ ebp - 0x560 ] si
mov esi 0x18
mov [ ebp - 0x550 ] si
mov esi edx
mov [ ebp - 0x540 ] si
mov esi 0x18
mov [ ebp - 0x530 ] si
mov esi 0x3
mov [ ebp - 0x520 ] si
mov esi 0x18
mov [ ebp - 0x510 ] si
xor esi esi
mov [ ebp - 0x500 ] si
mov esi 0x4
mov [ ebp - 0x4f0 ] si
mov esi 0x18
mov [ ebp - 0x4e0 ] si
mov [ ebp - 0x5a8 ] ecx
mov [ ebp - 0x5a4 ] eax
mov [ ebp - 0x59e ] 0x66620018
mov [ ebp - 0x59a ] 0xa49a
mov [ ebp - 0x598 ] eax
mov [ ebp - 0x594 ] ecx
mov [ ebp - 0x58e ] 0x726c0014
mov [ ebp - 0x58a ] 0xa296
mov [ ebp - 0x588 ] eax
mov [ ebp - 0x584 ] ecx
mov [ ebp - 0x57e ] 0xa3990004
mov [ ebp - 0x57a ] 0x736d
mov [ ebp - 0x578 ] ecx
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x56e ] 0xa79d0000
mov [ ebp - 0x56a ] 0x6965
mov [ ebp - 0x568 ] ecx
mov [ ebp - 0x564 ] eax
mov [ ebp - 0x55e ] 0x6b660018
mov [ ebp - 0x55a ] 0xa89e
mov [ ebp - 0x558 ] eax
mov [ ebp - 0x554 ] ecx
mov [ ebp - 0x54e ] 0xab9f0001
mov [ ebp - 0x54a ] 0x6e69
mov [ ebp - 0x548 ] ecx
mov [ ebp - 0x544 ] eax
mov [ ebp - 0x53e ] 0x716b0018
mov [ ebp - 0x53a ] 0xaca0
mov [ ebp - 0x538 ] eax
mov [ ebp - 0x534 ] ecx
mov [ ebp - 0x52e ] 0xada10002
mov [ ebp - 0x52a ] 0x746e
mov [ ebp - 0x528 ] ecx
mov [ ebp - 0x524 ] eax
mov [ ebp - 0x51e ] 0x78710018
mov [ ebp - 0x51a ] 0xaca0
mov [ ebp - 0x518 ] eax
mov [ ebp - 0x514 ] ecx
mov [ ebp - 0x50e ] 0xada10003
mov [ ebp - 0x50a ] 0x7974
mov [ ebp - 0x508 ] ecx
mov [ ebp - 0x504 ] eax
mov [ ebp - 0x4fe ] 0x706a001c
mov [ ebp - 0x4fa ] 0xb0a4
mov [ ebp - 0x4f8 ] eax
mov [ ebp - 0x4f4 ] ecx
mov [ ebp - 0x4ee ] 0x7e780018
mov [ ebp - 0x4ea ] 0xaea2
mov [ ebp - 0x4e8 ] eax
mov [ ebp - 0x4e4 ] ecx
mov [ ebp - 0x4de ] 0xafa30004
mov [ ebp - 0x4da ] 0x7f79
mov [ ebp - 0x4d8 ] ecx
mov [ ebp - 0x4d4 ] eax
mov esi 0x1c
mov [ ebp - 0x4d0 ] si
mov esi 0x1
mov [ ebp - 0x4c0 ] si
mov esi 0x5
mov [ ebp - 0x4b0 ] si
mov esi 0x18
mov [ ebp - 0x4a0 ] si
mov esi 0x1c
mov [ ebp - 0x490 ] si
mov esi edx
mov [ ebp - 0x480 ] si
mov esi 0x1c
mov [ ebp - 0x470 ] si
mov esi 0x3
mov [ ebp - 0x460 ] si
mov esi 0x1c
mov [ ebp - 0x450 ] si
mov esi 0x20
mov [ ebp - 0x430 ] si
mov esi 0x1
mov [ ebp - 0x4c8 ] ecx
mov [ ebp - 0x4b4 ] ecx
mov [ ebp - 0x4a4 ] ecx
mov [ ebp - 0x498 ] ecx
mov [ ebp - 0x488 ] ecx
mov [ ebp - 0x474 ] ecx
mov [ ebp - 0x468 ] ecx
mov [ ebp - 0x454 ] ecx
mov [ ebp - 0x448 ] ecx
mov [ ebp - 0x420 ] si
xor ecx ecx
mov esi 0x20
mov [ ebp - 0x440 ] cx
mov ecx 0xfffffff
mov [ ebp - 0x410 ] si
mov esi edx
mov [ ebp - 0x4ce ] 0xb1a70000
mov [ ebp - 0x4ca ] 0x756f
mov [ ebp - 0x4c4 ] eax
mov [ ebp - 0x4be ] 0x7770001c
mov [ ebp - 0x4ba ] 0xb2a8
mov [ ebp - 0x4b8 ] eax
mov [ ebp - 0x4ae ] 0x847e0018
mov [ ebp - 0x4aa ] 0xaea2
mov [ ebp - 0x4a8 ] eax
mov [ ebp - 0x49e ] 0xafa30005
mov [ ebp - 0x49a ] 0x857f
mov [ ebp - 0x494 ] eax
mov [ ebp - 0x48e ] 0xb3ab0001
mov [ ebp - 0x48a ] 0x7a75
mov [ ebp - 0x484 ] eax
mov [ ebp - 0x47e ] 0x7d77001c
mov [ ebp - 0x47a ] 0xb4ac
mov [ ebp - 0x478 ] eax
mov [ ebp - 0x46e ] 0xb5ad0002
mov [ ebp - 0x46a ] 0x807a
mov [ ebp - 0x464 ] eax
mov [ ebp - 0x45e ] 0x837d001c
mov [ ebp - 0x45a ] 0xb4ac
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x44e ] 0xb5ad0003
mov [ ebp - 0x44a ] 0x8680
mov [ ebp - 0x444 ] eax
mov [ ebp - 0x43e ] 0x7c760020
mov [ ebp - 0x43a ] 0xbeb0
mov [ ebp - 0x438 ] eax
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x42e ] 0xbfb10000
mov [ ebp - 0x42a ] 0x817b
mov [ ebp - 0x428 ] ecx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x41e ] 0x827c0020
mov [ ebp - 0x41a ] 0xc0b2
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x414 ] ecx
mov [ ebp - 0x40e ] 0xc1b30001
mov [ ebp - 0x40a ] 0x8781
mov [ ebp - 0x408 ] ecx
mov [ ebp - 0x404 ] eax
mov [ ebp - 0x400 ] si
mov [ ebp - 0x3fe ] 0x88820020
mov esi 0x20
mov [ ebp - 0x3f0 ] si
mov esi 0x3
mov [ ebp - 0x3e0 ] si
mov esi 0x20
mov [ ebp - 0x3d0 ] si
mov esi 0x4
mov [ ebp - 0x3c0 ] si
mov esi 0x20
mov [ ebp - 0x3b0 ] si
mov esi 0x5
mov [ ebp - 0x3a0 ] si
mov esi 0x20
mov [ ebp - 0x390 ] si
mov esi 0x6
mov [ ebp - 0x380 ] si
mov esi 0x20
mov [ ebp - 0x370 ] si
xor esi esi
mov [ ebp - 0x360 ] si
mov esi 0x30
mov [ ebp - 0x350 ] si
mov esi 0x1
mov [ ebp - 0x340 ] si
mov esi 0x30
mov [ ebp - 0x3fa ] 0xc2b4
mov [ ebp - 0x3f8 ] eax
mov [ ebp - 0x3f4 ] ecx
mov [ ebp - 0x3ee ] 0xc3b50002
mov [ ebp - 0x3ea ] 0x8987
mov [ ebp - 0x3e8 ] ecx
mov [ ebp - 0x3e4 ] eax
mov [ ebp - 0x3de ] 0x8b880020
mov [ ebp - 0x3da ] 0xc2b4
mov [ ebp - 0x3d8 ] eax
mov [ ebp - 0x3d4 ] ecx
mov [ ebp - 0x3ce ] 0xc3b50003
mov [ ebp - 0x3ca ] 0x8c89
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3c4 ] eax
mov [ ebp - 0x3be ] 0x8f8b0020
mov [ ebp - 0x3ba ] 0xc4b6
mov [ ebp - 0x3b8 ] eax
mov [ ebp - 0x3b4 ] ecx
mov [ ebp - 0x3ae ] 0xc5b70004
mov [ ebp - 0x3aa ] 0x908c
mov [ ebp - 0x3a8 ] ecx
mov [ ebp - 0x3a4 ] eax
mov [ ebp - 0x39e ] 0x938f0020
mov [ ebp - 0x39a ] 0xc4b6
mov [ ebp - 0x398 ] eax
mov [ ebp - 0x394 ] ecx
mov [ ebp - 0x38e ] 0xc5b70005
mov [ ebp - 0x38a ] 0x9490
mov [ ebp - 0x388 ] ecx
mov [ ebp - 0x384 ] eax
mov [ ebp - 0x37e ] 0x97930020
mov [ ebp - 0x37a ] 0xc6b8
mov [ ebp - 0x378 ] eax
mov [ ebp - 0x374 ] ecx
mov [ ebp - 0x36e ] 0xc7b90006
mov [ ebp - 0x36a ] 0x9894
mov [ ebp - 0x368 ] ecx
mov [ ebp - 0x364 ] eax
mov [ ebp - 0x35e ] 0x9e9a0030
mov [ ebp - 0x35a ] 0xc8be
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] ecx
mov [ ebp - 0x34e ] 0xc9bf0000
mov [ ebp - 0x34a ] 0x9f9d
mov [ ebp - 0x348 ] ecx
mov [ ebp - 0x344 ] eax
mov [ ebp - 0x33e ] 0xa09e0030
mov [ ebp - 0x33a ] 0xcac0
mov [ ebp - 0x338 ] eax
mov [ ebp - 0x334 ] ecx
mov [ ebp - 0x330 ] si
mov [ ebp - 0x32e ] 0xcbc10001
mov [ ebp - 0x32a ] 0xa19f
mov [ ebp - 0x328 ] ecx
mov [ ebp - 0x324 ] eax
mov esi edx
mov [ ebp - 0x320 ] si
mov esi 0x30
mov [ ebp - 0x310 ] si
mov esi 0x3
mov [ ebp - 0x300 ] si
mov esi 0x30
mov [ ebp - 0x2f0 ] si
mov esi 0x4
mov [ ebp - 0x2e0 ] si
mov esi 0x30
mov [ ebp - 0x2d0 ] si
mov esi 0x40
mov [ ebp - 0x2b0 ] si
mov esi 0x1
mov [ ebp - 0x2a0 ] si
mov esi 0x40
mov [ ebp - 0x290 ] si
mov esi edx
mov [ ebp - 0x280 ] si
mov esi 0x40
mov [ ebp - 0x314 ] ecx
mov [ ebp - 0x308 ] ecx
mov [ ebp - 0x2f4 ] ecx
mov [ ebp - 0x2e8 ] ecx
mov [ ebp - 0x2d4 ] ecx
mov [ ebp - 0x2c8 ] ecx
mov [ ebp - 0x270 ] si
xor ecx ecx
mov esi 0x3
mov [ ebp - 0x2c0 ] cx
mov ecx 0x7ffffff
mov [ ebp - 0x260 ] si
mov esi 0x40
mov [ ebp - 0x31e ] 0xa2a00030
mov [ ebp - 0x31a ] 0xccc2
mov [ ebp - 0x318 ] eax
mov [ ebp - 0x30e ] 0xcdc30002
mov [ ebp - 0x30a ] 0xa3a1
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x2fe ] 0xa5a20030
mov [ ebp - 0x2fa ] 0xccc2
mov [ ebp - 0x2f8 ] eax
mov [ ebp - 0x2ee ] 0xcdc30003
mov [ ebp - 0x2ea ] 0xa6a3
mov [ ebp - 0x2e4 ] eax
mov [ ebp - 0x2de ] 0xa9a50030
mov [ ebp - 0x2da ] 0xcec4
mov [ ebp - 0x2d8 ] eax
mov [ ebp - 0x2ce ] 0xcfc50004
mov [ ebp - 0x2ca ] 0xaaa6
mov [ ebp - 0x2c4 ] eax
mov [ ebp - 0x2be ] 0xb2b00040
mov [ ebp - 0x2ba ] 0xd4c8
mov [ ebp - 0x2b8 ] eax
mov [ ebp - 0x2b4 ] ecx
mov [ ebp - 0x2ae ] 0xd5c90000
mov [ ebp - 0x2aa ] 0xb3b1
mov [ ebp - 0x2a8 ] ecx
mov [ ebp - 0x2a4 ] eax
mov [ ebp - 0x29e ] 0xb4b20040
mov [ ebp - 0x29a ] 0xd6ca
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] ecx
mov [ ebp - 0x28e ] 0xd7cb0001
mov [ ebp - 0x28a ] 0xb5b3
mov [ ebp - 0x288 ] ecx
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x27e ] 0xb6b40040
mov [ ebp - 0x27a ] 0xd8cc
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] ecx
mov [ ebp - 0x26e ] 0xd9cd0002
mov [ ebp - 0x26a ] 0xb7b5
mov [ ebp - 0x268 ] ecx
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x25e ] 0xb8b60040
mov [ ebp - 0x25a ] 0xd8cc
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] ecx
mov [ ebp - 0x250 ] si
mov esi 0x4
mov [ ebp - 0x240 ] si
mov esi 0x40
mov [ ebp - 0x230 ] si
mov esi 0x5
mov [ ebp - 0x220 ] si
mov esi 0x40
mov [ ebp - 0x210 ] si
xor esi esi
mov [ ebp - 0x200 ] si
mov esi 0x60
mov [ ebp - 0x1f0 ] si
mov esi 0x1
mov [ ebp - 0x1e0 ] si
mov esi 0x60
mov [ ebp - 0x1d0 ] si
mov esi edx
mov [ ebp - 0x1c0 ] si
mov esi 0x60
mov [ ebp - 0x1b0 ] si
mov esi 0x3
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x234 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x208 ] ecx
mov [ ebp - 0x1f4 ] ecx
mov [ ebp - 0x1e8 ] ecx
mov [ ebp - 0x1d4 ] ecx
mov [ ebp - 0x1c8 ] ecx
mov [ ebp - 0x1b4 ] ecx
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1a0 ] si
mov [ ebp - 0x194 ] ecx
mov [ ebp - 0x188 ] ecx
mov esi 0x60
xor ecx ecx
mov [ ebp - 0x24e ] 0xd9cd0003
mov [ ebp - 0x24a ] 0xb9b7
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23e ] 0xbab80040
mov [ ebp - 0x23a ] 0xdace
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x22e ] 0xdbcf0004
mov [ ebp - 0x22a ] 0xbbb9
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x21e ] 0xbcba0040
mov [ ebp - 0x21a ] 0xdace
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20e ] 0xdbcf0005
mov [ ebp - 0x20a ] 0xbdbb
mov [ ebp - 0x204 ] eax
mov [ ebp - 0x1fe ] 0xc0be0060
mov [ ebp - 0x1fa ] 0xdcd4
mov [ ebp - 0x1f8 ] eax
mov [ ebp - 0x1ee ] 0xddd50000
mov [ ebp - 0x1ea ] 0xc1bf
mov [ ebp - 0x1e4 ] eax
mov [ ebp - 0x1de ] 0xc2c00060
mov [ ebp - 0x1da ] 0xded6
mov [ ebp - 0x1d8 ] eax
mov [ ebp - 0x1ce ] 0xdfd70001
mov [ ebp - 0x1ca ] 0xc3c1
mov [ ebp - 0x1c4 ] eax
mov [ ebp - 0x1be ] 0xc4c20060
mov [ ebp - 0x1ba ] 0xe0d8
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1ae ] 0xe1d90002
mov [ ebp - 0x1aa ] 0xc5c3
mov [ ebp - 0x1a4 ] eax
mov [ ebp - 0x19e ] 0xc6c40060
mov [ ebp - 0x19a ] 0xe0d8
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x190 ] si
mov [ ebp - 0x18e ] 0xe1d90003
mov [ ebp - 0x18a ] 0xc7c5
mov [ ebp - 0x184 ] eax
mov [ ebp - 0x180 ] cx
mov [ ebp - 0x17e ] 0xcac80080
mov [ ebp - 0x17a ] 0xe6dc
mov [ ebp - 0x178 ] eax
mov esi 0x80
mov [ ebp - 0x170 ] si
mov esi 0x1
mov [ ebp - 0x160 ] si
mov esi 0x80
mov [ ebp - 0x150 ] si
mov esi edx
mov [ ebp - 0x140 ] si
mov edx 0x80
mov [ ebp - 0x130 ] dx
mov edx esi
mov esi 0x3
mov [ ebp - 0x120 ] si
mov ecx 0x1ffffff
mov esi 0x80
mov [ ebp - 0x110 ] si
mov esi 0x4
mov [ ebp - 0x100 ] si
mov esi 0x80
mov [ ebp - 0xf0 ] si
mov esi 0x100
mov [ ebp - 0x174 ] ecx
mov [ ebp - 0x168 ] ecx
mov [ ebp - 0x154 ] ecx
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xd0 ] si
xor ecx ecx
mov esi 0x1
mov [ ebp - 0xe0 ] cx
mov ecx 0xffffff
mov [ ebp - 0xc0 ] si
mov esi 0x100
mov [ ebp - 0x16e ] 0xe7dd0000
mov [ ebp - 0x16a ] 0xcbc9
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x15e ] 0xccca0080
mov [ ebp - 0x15a ] 0xe8de
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x14e ] 0xe9df0001
mov [ ebp - 0x14a ] 0xcdcb
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x13e ] 0xcecc0080
mov [ ebp - 0x13a ] 0xeae0
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x12e ] dx
mov [ ebp - 0x12c ] 0xcfcdebe1
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x11e ] 0xd0ce0080
mov [ ebp - 0x11a ] 0xeae0
mov [ ebp - 0x118 ] eax
mov [ ebp - 0x10e ] 0xebe10003
mov [ ebp - 0x10a ] 0xd1cf
mov [ ebp - 0x104 ] eax
mov [ ebp - 0xfe ] 0xd2d00080
mov [ ebp - 0xfa ] 0xece2
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xee ] 0xede30004
mov [ ebp - 0xea ] 0xd3d1
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xde ] 0xdedc0100
mov [ ebp - 0xda ] 0xeee6
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] ecx
mov [ ebp - 0xce ] 0xefe70000
mov [ ebp - 0xca ] 0xdfdd
mov [ ebp - 0xc8 ] ecx
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xbe ] 0xe0de0100
mov [ ebp - 0xba ] 0xf0e8
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] ecx
mov [ ebp - 0xb0 ] si
mov [ ebp - 0xae ] 0xf1e90001
mov [ ebp - 0xaa ] 0xe1df
mov [ ebp - 0xa8 ] ecx
mov esi edx
mov [ ebp - 0xa0 ] si
mov esi 0x100
mov [ ebp - 0x90 ] si
mov esi 0x3
mov [ ebp - 0x80 ] si
mov esi 0x100
mov [ ebp - 0x70 ] si
mov esi 0x200
mov [ ebp - 0x50 ] si
mov esi 0x1
mov [ ebp - 0x40 ] si
mov esi 0x200
mov [ ebp - 0x30 ] si
mov esi edx
mov [ ebp - 0x20 ] si
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x88 ] ecx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] ecx
xor ecx ecx
mov esi 0x200
mov [ ebp - 0x10 ] si
mov [ ebp - 0x60 ] cx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx 0x3d0
lea esi [ ebp - 0xf40 ]
mov edi rwxdata
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x9e ] 0xe2e00100
mov [ ebp - 0x9a ] 0xf2ea
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x8e ] 0xf3eb0002
mov [ ebp - 0x8a ] 0xe3e1
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x7e ] 0xe4e20100
mov [ ebp - 0x7a ] 0xf2ea
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x6e ] 0xf3eb0003
mov [ ebp - 0x6a ] 0xe5e3
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5e ] 0xe8e60200
mov [ ebp - 0x5a ] 0xeeee
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4e ] 0xefef0000
mov [ ebp - 0x4a ] 0xe9e7
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x3e ] 0xeae80200
mov [ ebp - 0x3a ] 0xf0f0
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x2e ] 0xf1f10001
mov [ ebp - 0x2a ] 0xebe9
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1e ] 0xecea0200
mov [ ebp - 0x1a ] 0xf2f2
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xe ] 0xf3f30002
mov [ ebp - 0xa ] 0xedeb
mov [ ebp - 0x4 ] eax
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403e20
push ebp
mov ebp esp
push 0xffffffff
push sub_43830e
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax 0x100
lea edi [ esi + 0xc ]
call sub_406270
xor eax eax
lea edi [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x1
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov eax 0x10000
call sub_406270
push 0x2000006
mov [ ebp - 0x4 ] 0x2
call sub_4176e1
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
xor eax eax
mov ecx eax
mov edi 0x1000002
lea esp [ esp ]
mov [ ecx ] dx
add ecx 0x2
dec edi
jns r-xdata
jmp r-xdata
mov [ esi + 0x2c ] eax
mov [ esi + 0x78 ] 0x1
mov eax [ esi + 0xc ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x54 ] edx
mov ecx [ esi + 0xc ]
mov [ esi + 0x34 ] ecx
mov [ esi + 0x58 ] edx
mov eax [ esi + 0xc ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x5c ] edx
mov ecx [ esi + 0xc ]
mov [ esi + 0x3c ] ecx
mov [ esi + 0x60 ] edx
mov eax [ esi + 0xc ]
mov [ esi + 0x40 ] eax
mov [ esi + 0x64 ] edx
mov ecx [ esi + 0xc ]
mov [ esi + 0x44 ] ecx
mov [ esi + 0x68 ] edx
mov eax [ esi + 0xc ]
mov [ esi + 0x48 ] eax
mov [ esi + 0x6c ] edx
mov ecx [ esi + 0xc ]
mov [ esi + 0x4c ] ecx
mov [ esi + 0x70 ] edx
mov eax [ esi + 0xc ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x74 ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_403f30
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push edi
push eax
call sub_4181ab
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi ] r--data
je r-xdata
push eax
call sub_41827c
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
add esp 0x4
sub_403fb0
mov eax [ esi + 0x2c ]
push edi
push eax
call sub_4181ab
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_41827c
add esp 0x4
sub_404000
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
movzx edx [ eax + 0x1 ]
push esi
mov eax [ ebp + 0x8 ]
shl edx 0x4
movzx edx [ edx + rwxdata ]
add [ eax ] edx
mov edx [ ecx + 0x30 ]
movzx edx [ edx + 0x1 ]
shl edx 0x4
movzx esi [ edx + rwxdata ]
mov edx [ ebp + 0xc ]
add [ edx ] esi
mov esi [ ecx + 0x34 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
add esi esi
add esi esi
add [ eax ] esi
mov esi [ ecx + 0x34 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
add esi esi
add esi esi
add [ edx ] esi
mov esi [ ecx + 0x38 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add [ eax ] esi
mov esi [ ecx + 0x38 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add [ edx ] esi
mov esi [ ecx + 0x3c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x4
add [ eax ] esi
mov esi [ ecx + 0x3c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x4
add [ edx ] esi
mov esi [ ecx + 0x40 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x19
add [ eax ] esi
mov esi [ ecx + 0x40 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x19
add [ edx ] esi
mov esi [ ecx + 0x44 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add esi esi
add esi esi
add [ eax ] esi
mov esi [ ecx + 0x44 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add esi esi
add esi esi
add [ edx ] esi
mov esi [ ecx + 0x48 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x31
add [ eax ] esi
mov esi [ ecx + 0x48 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x31
add [ edx ] esi
mov esi [ ecx + 0x4c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x6
add [ eax ] esi
mov esi [ ecx + 0x4c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x6
add [ edx ] esi
mov esi [ ecx + 0x50 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x51
add [ eax ] esi
mov eax [ ecx + 0x50 ]
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
imul eax eax 0x51
add [ edx ] eax
pop esi
pop ebp
retn 0x8
sub_4041a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea ebx [ edi + 0x30 ]
mov [ ebp - 0x4 ] 0x9
add ebx 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4015b0
mov esi [ ebx ]
test esi esi
je r-xdata
mov edx [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + edx * 2 ]
mov [ edi + 0x8 ] eax
cmp eax 0x35
jl r-xdata
mov eax [ edi + 0x78 ]
lea eax [ ecx + eax * 2 ]
mov [ edi + 0x78 ] eax
cmp eax 0x100
jl r-xdata
add eax 0xffffffcb
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x78 ]
mov ecx [ edi + 0xc ]
lea edx [ ecx + eax * 2 ]
mov ecx [ edi + 0x4 ]
shl ecx 0x8
mov [ edi + 0x30 ] edx
mov edx [ edi + 0x1c ]
add ecx eax
lea eax [ edx + ecx * 2 ]
mov [ edi + 0x34 ] eax
lea esi [ edi + 0x38 ]
mov ebx 0x7
mov ecx [ edi + 0x70 ]
mov edx [ edi + 0x6c ]
add ecx eax
mov eax [ edi + 0x68 ]
imul ecx ecx 0x3ade81d5
mov [ edi + 0x74 ] ecx
add edx [ edi + 0x78 ]
mov ecx [ edi + 0x64 ]
imul edx edx 0x3ade81d5
mov [ edi + 0x70 ] edx
add eax [ edi + 0x78 ]
mov edx [ edi + 0x60 ]
imul eax eax 0x3ade81d5
mov [ edi + 0x6c ] eax
add ecx [ edi + 0x78 ]
mov eax [ edi + 0x5c ]
imul ecx ecx 0x3ade81d5
mov [ edi + 0x68 ] ecx
add edx [ edi + 0x78 ]
mov ecx [ edi + 0x58 ]
imul edx edx 0x3ade81d5
mov [ edi + 0x64 ] edx
add eax [ edi + 0x78 ]
mov edx [ edi + 0x54 ]
imul eax eax 0x3ade81d5
mov [ edi + 0x60 ] eax
add ecx [ edi + 0x78 ]
imul ecx ecx 0x3ade81d5
mov [ edi + 0x5c ] ecx
add edx [ edi + 0x78 ]
imul edx edx 0x3ade81d5
mov [ edi + 0x58 ] edx
mov eax [ edi + 0x78 ]
sub eax 0x100
mov [ edi + 0x4 ] eax
mov eax 0x1
mov [ edi + 0x78 ] eax
mov [ edi + 0x8 ] eax
mov edx [ edi + 0x78 ]
mov ecx [ esi + 0x24 ]
shl edx 0x18
add ecx edx
add ecx [ edi + 0x8 ]
lea eax [ edi + 0x2c ]
push eax
call sub_407a40
mov [ esi ] eax
add esi 0x4
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4042d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4382d3
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_406350
lea esi [ edi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_406420
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] ebx
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
mov [ edi + 0x34 ] ebx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_404350
push ebp
mov ebp esp
mov edx ecx
push esi
mov esi [ edx + 0x34 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
mov eax esi
sub eax [ edx + 0x30 ]
cmp eax 0x3e8
jle r-xdata
imul eax eax
lea eax [ eax + eax * 2 ]
mov eax 0x2dc6c0
jmp r-xdata
add [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov cl 0x7
sub cl [ edx + 0x2c ]
mov edx [ edx + 0x4 ]
mov dl [ esi + edx ]
shr dl cl
mov ecx [ ebp + 0xc ]
test dl 0x1
jne r-xdata
sub_4043a0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
add eax [ esi + 0x28 ]
xor ebx ebx
mov cl [ eax ]
add cl cl
add cl [ ebp + 0x8 ]
push edi
mov [ eax ] cl
inc [ esi + 0x2c ]
mov eax [ esi + 0x34 ]
mov edx [ esi + 0x2c ]
cmp eax ebx
je r-xdata
cmp edx 0x8
jne r-xdata
mov edi [ esi + 0x4 ]
mov al [ eax + edi ]
mov cl 0x8
sub cl dl
shr al cl
mov ecx [ esi + 0x28 ]
cmp al [ edi + ecx ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x28 ]
imul ecx ecx 0x75bcd170
mov [ esi + 0x2c ] ebx
mov ebx [ esi + 0x4 ]
movzx edx [ ebx + eax ]
lea edx [ edx + ecx + 0x1 ]
inc eax
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x8 ]
sub ecx ebx
cmp eax ecx
jne r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] ebx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov [ esi + 0x28 ] 0x0
mov ecx [ esi + 0x18 ]
sub ecx [ esi + 0x14 ]
mov edi edx
mov eax 0x55555556
imul ecx
mov ecx edi
mov eax edx
shr eax 0x1f
lea eax [ edx + eax - 0x1 ]
shr ecx 0x10
xor ecx edi
and eax ecx
lea edi [ eax + eax * 2 ]
add edi [ esi + 0x14 ]
movzx eax [ edi + 0x2 ]
movzx ecx [ edi + 0x1 ]
movzx edx [ edi ]
shl eax 0x8
or eax ecx
shl eax 0x8
or eax edx
mov [ esi + 0x34 ] eax
jle r-xdata
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x34 ]
cmp eax [ esi + 0x30 ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ebp + 0x8 ] edx
test eax eax
jle r-xdata
mov eax [ esi + 0x28 ]
mov ecx eax
sar ecx 0x8
mov [ ebp + 0x9 ] al
mov [ ebp + 0xa ] cl
mov dx [ ebp + 0x9 ]
sar eax 0x10
mov [ edi ] dx
mov [ edi + 0x2 ] al
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x30 ] eax
lea ecx [ edx + 0x1 ]
lea ecx [ ecx ]
mov eax [ esi + 0x30 ]
cmp eax ecx
je r-xdata
mov dl [ eax + ebx - 0x1 ]
cmp dl [ ebx + ecx - 0x2 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
dec eax
dec edx
dec ecx
mov [ esi + 0x30 ] eax
mov [ ebp + 0x8 ] edx
test eax eax
jg r-xdata
test edx edx
jle r-xdata
sub_4044e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
je r-xdata
push eax
call sub_41827c
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
add esp 0x4
sub_404540
mov eax [ esi + 0x14 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_41827c
add esp 0x4
sub_404580
push ebx
xor ebx ebx
push edi
push 0x800006
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
lea edi [ esi + 0x10 ]
call sub_4176e1
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
mov edx r--data
lea ebx [ ebx ]
mov [ ecx ] bx
add ecx 0x2
dec edx
jns r-xdata
jmp r-xdata
mov [ edi ] eax
mov eax 0x1
push edi
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
call sub_407ae0
push edi
xor ecx ecx
mov [ esi + 0x20 ] eax
call sub_407ae0
pop edi
mov [ esi + 0x24 ] eax
mov eax esi
pop ebx
retn
sub_4045f0
mov ecx [ eax + 0xc ]
push edi
mov edi [ eax + 0x20 ]
movzx edi [ edi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
inc ecx
imul ecx ecx
imul edi ecx
add [ esi ] edi
mov edi [ eax + 0x20 ]
movzx edi [ edi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
imul edi ecx
add [ edx ] edi
mov edi [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
lea ecx [ ecx + edi + 0x2 ]
mov edi [ eax + 0x24 ]
imul ecx ecx
movzx edi [ edi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
imul edi ecx
add [ esi ] edi
mov eax [ eax + 0x24 ]
movzx eax [ eax + 0x1 ]
shl eax 0x4
movzx eax [ eax + rwxdata ]
imul eax ecx
add [ edx ] eax
pop edi
retn
sub_404660
push ebx
push esi
mov esi [ edi + 0x20 ]
mov ebx eax
push ebx
call sub_4015b0
mov esi [ edi + 0x24 ]
push ebx
call sub_4015b0
mov eax [ edi + 0x18 ]
mov edx [ edi + 0x1c ]
lea ecx [ ebx + eax * 2 ]
lea eax [ ebx + edx * 2 ]
mov [ edi + 0x18 ] ecx
mov [ edi + 0x1c ] eax
cmp eax 0x3b
jl r-xdata
cmp ecx 0x100
jl r-xdata
add eax 0xffffffc5
mov [ edi + 0x1c ] eax
mov esi [ edi + 0x14 ]
mov ecx [ edi + 0x4 ]
imul esi esi 0x149ace2f
mov edx [ edi + 0x18 ]
imul ecx ecx 0x75bcd17
add esi ecx
shl edx 0x18
add esi edx
add esi [ edi + 0x1c ]
lea ebx [ edi + 0x10 ]
push ebx
mov ecx esi
call sub_407ae0
mov ecx [ edi ]
add ecx esi
push ebx
mov [ edi + 0x20 ] eax
call sub_407ae0
pop esi
mov [ edi + 0x24 ] eax
pop ebx
retn
lea eax [ ecx - 0x100 ]
push eax
mov [ edi + 0x18 ] eax
call sub_417bc4
add esp 0x4
mov esi 0x1
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ edi + 0x18 ]
push eax
call sub_4179e0
add eax [ edi + 0x4 ]
add [ edi + 0xc ] esi
imul eax eax 0x204a0a90
mov ecx 0xdfb5f570
sub ecx eax
add esp 0x4
cmp [ edi + 0xc ] 0x8
mov [ edi + 0x4 ] ecx
jle r-xdata
mov eax [ edi + 0x18 ]
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
mov edx [ edi + 0xc ]
mov [ edi + 0x8 ] edx
mov [ edi + 0xc ] ecx
mov [ edi ] eax
mov [ edi + 0x4 ] ecx
mov [ edi + 0xc ] 0x8
jmp r-xdata
sub_404760
push ebp
mov ebp esp
push 0xffffffff
push sub_43829e
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_406540
mov [ ebp - 0x4 ] 0x1
push 0x10006
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x18 ] 0x1
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x20 ] edi
call sub_4176e1
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
mov edx 0x8002
nop
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
jmp r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] edi
mov [ ebx + 0x30 ] edi
mov eax 0x800
lea edi [ ebx + 0x28 ]
call sub_406270
lea eax [ ebx + 0x24 ]
push eax
xor ecx ecx
call sub_407b80
mov [ ebx + 0x38 ] eax
mov eax [ ebx + 0x28 ]
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] 0x0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_404830
push ebp
mov ebp esp
cmp [ ecx + 0x40 ] 0x0
jle r-xdata
pop ebp
retn 0x8
mov eax [ ecx + 0x38 ]
movzx edx [ eax + 0x1 ]
mov eax [ ebp + 0x8 ]
shl edx 0x4
movzx edx [ edx + rwxdata ]
shl edx 0x4
add [ eax ] edx
mov edx [ ecx + 0x38 ]
movzx edx [ edx + 0x1 ]
push esi
shl edx 0x4
movzx esi [ edx + rwxdata ]
mov edx [ ebp + 0xc ]
shl esi 0x4
add [ edx ] esi
mov esi [ ecx + 0x3c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
add esi esi
add esi esi
add [ eax ] esi
mov eax [ ecx + 0x3c ]
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
add eax eax
add eax eax
add [ edx ] eax
pop esi
sub_4048a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
inc [ edi + 0x1c ]
mov eax [ edi + 0x1c ]
xor ecx ecx
cmp eax [ edi + 0x40 ]
jl r-xdata
mov eax [ edi + 0x20 ]
cmp eax ecx
jle r-xdata
mov [ edi + 0x1c ] ecx
mov ebx [ ebp + 0x8 ]
mov esi [ edi + 0x38 ]
push ebx
call sub_4015b0
mov esi [ edi + 0x3c ]
push ebx
call sub_4015b0
mov eax [ edi + 0x18 ]
mov edx [ edi + 0x4 ]
inc [ edi + 0x14 ]
lea eax [ ebx + eax * 2 ]
and eax 0xff
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov [ edi + 0x18 ] eax
mov edx [ ecx + 0x8 ]
mov eax [ ecx ]
lea ebx [ eax + edx ]
cmp ebx [ edi + 0x14 ]
jne r-xdata
dec eax
mov [ edi + 0x20 ] eax
cmp eax ecx
jne r-xdata
mov [ ecx + 0x4 ] 0x1
mov edx [ edi + 0x14 ]
sub edx eax
mov [ ecx + 0x8 ] edx
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x3
jle r-xdata
mov [ edi + 0x40 ] ecx
mov eax [ edi + 0x14 ]
mov [ ecx ] eax
mov ecx [ edi + 0x18 ]
mov eax [ edi + 0x1c ]
imul ecx ecx 0x343f0b05
lea edx [ eax + eax * 2 ]
lea eax [ edi + 0x24 ]
add ecx edx
push eax
call sub_407b80
mov ecx [ edi + 0x1c ]
mov edx [ edi + 0x28 ]
mov [ edi + 0x38 ] eax
and ecx 0x7ff
lea eax [ edx + ecx * 2 ]
mov [ edi + 0x3c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp edx 0x8
jle r-xdata
imul eax edx
cmp eax [ edi + 0x20 ]
jle r-xdata
mov [ edi + 0x20 ] eax
mov esi [ ecx + 0x8 ]
cmp [ edi + 0x40 ] esi
je r-xdata
mov eax [ edi + 0x14 ]
cdq
idiv esi
mov [ edi + 0x40 ] esi
mov [ edi + 0x1c ] edx
jmp r-xdata
sub_404990
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov eax [ esi + 0x24 ]
push eax
call sub_4181ab
mov eax [ esi + 0x4 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
je r-xdata
push eax
call sub_41827c
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
add esp 0x4
sub_404a00
mov eax [ esi + 0x28 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov eax [ esi + 0x24 ]
push eax
call sub_4181ab
mov eax [ esi + 0x4 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_41827c
add esp 0x4
sub_404a50
push ebp
mov ebp esp
sub esp 0x8
mov eax 0x1
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx esi
call eax
mov edx [ esi + 0x7c ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x7c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call edx
mov ecx [ esi + 0xc0 ]
mov edx [ esi + 0xd4 ]
movzx edi [ edx + 0x1 ]
lea eax [ ecx + 0x1 ]
imul eax eax
shl edi 0x4
movzx edi [ edi + rwxdata ]
imul edi eax
add [ ebp - 0x8 ] edi
movzx edx [ edx + 0x1 ]
shl edx 0x4
movzx edx [ edx + rwxdata ]
imul edx eax
add [ ebp - 0x4 ] edx
mov eax [ esi + 0xbc ]
lea eax [ eax + ecx + 0x2 ]
mov ecx [ esi + 0xd8 ]
imul eax eax
movzx edx [ ecx + 0x1 ]
shl edx 0x4
movzx edx [ edx + rwxdata ]
imul edx eax
add [ ebp - 0x8 ] edx
movzx ecx [ ecx + 0x1 ]
shl ecx 0x4
movzx edx [ ecx + rwxdata ]
imul edx eax
add [ ebp - 0x4 ] edx
mov eax [ esi + 0xdc ]
mov eax [ eax ]
lea edx [ ebp - 0x4 ]
lea ecx [ esi + 0xdc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
call eax
mov edx [ ebp - 0x4 ]
fild [ ebp - 0x4 ]
add edx [ ebp - 0x8 ]
fnstcw [ ebp - 0x2 ]
movzx eax [ ebp - 0x2 ]
fmul [ r--data ]
mov [ ebp - 0x8 ] edx
or eax 0xc00
fild [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
pop edi
fdivp st1
fldcw [ ebp - 0x8 ]
fistp [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
fldcw [ ebp - 0x2 ]
mov esp ebp
pop ebp
retn
sub_404b50
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
push ebx
mov ecx esi
call edx
mov eax [ esi + 0x7c ]
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0x7c ]
push ebx
call edx
lea edi [ esi + 0xb4 ]
mov eax ebx
call sub_404660
mov eax [ esi + 0xdc ]
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0xdc ]
push ebx
call edx
pop edi
retn
sub_404b90
push ebp
mov ebp esp
push 0xffffffff
push sub_43855e
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x200400 ]
push eax
call sub_404e20
mov ecx [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp + 0x10 ]
mov [ esi + 0x200520 ] ecx
mov [ esi + 0x200524 ] edx
mov [ esi + 0x200528 ] ebx
mov [ esi + 0x20052c ] 0xffffffff
mov [ esi + 0x200530 ] ebx
mov [ esi + 0x200534 ] ebx
mov [ esi + 0x200538 ] ebx
mov [ esi + 0x20053c ] ebx
mov [ esi + 0x200540 ] ebx
mov [ esi + 0x200544 ] ebx
mov [ esi + 0x200548 ] ebx
call sub_4181b6
cmp [ esi + 0x200520 ] 0x1
mov [ esi + 0x200540 ] eax
jne r-xdata
lea eax [ esi + 0x6 ]
mov edi 0x1000
mov dl 0x7
jmp r-xdata
mov [ ebp + 0xc ] 0x4
jmp r-xdata
mov ecx 0x200
jmp r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edi [ esi + 0x200524 ]
mov [ ebp + 0x10 ] edi
mov ecx edx
jne r-xdata
mov ebx 0x8
mov [ eax - 0x6 ] ecx
mov [ eax - 0x2 ] 0x4
mov [ eax ] bx
mov [ eax - 0x1 ] dl
add ecx 0x400
add eax ebx
cmp ecx 0x10200
jl r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp + 0x10 ] edi
mov ecx edx
jne r-xdata
lea esp [ esp ]
dec edi
jne r-xdata
xor eax eax
cmp [ eax + 0xc ] edi
jae r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esi + 0x200000 ] edi
mov [ esi + 0x200004 ] 0x1
mov [ esi + 0x200008 ] 0x2
mov [ esi + 0x20000c ] 0x3
mov eax 0x5
mov edi 0x4
mov [ esi + 0x200018 ] eax
mov [ esi + 0x20001c ] eax
mov [ esi + 0x200010 ] edi
mov [ esi + 0x200014 ] edi
mov eax ebx
lea ecx [ esi + 0x200020 ]
xor eax eax
inc [ esi + 0x200534 ]
jmp r-xdata
lea edx [ ebp + 0x10 ]
mov eax rwxdata
mov [ ebp + 0x10 ] edi
call sub_405cf0
lea ecx [ ebx + 0x1 ]
mov [ eax ] ecx
movzx eax [ ebx + edi ]
cmp eax 0xffffffff
jne r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ eax + 0xc ] edi
jae r-xdata
cmp ecx edx
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edx eax
sar edx 0x2
add edx edi
mov [ ecx ] edx
inc eax
add ecx edi
cmp eax 0x20
jl r-xdata
mov eax 0x20
lea ecx [ esi + 0x200080 ]
nop
mov edx [ esi + 0x200530 ]
shl edx 0x8
add edx eax
dec [ ebp + 0xc ]
mov [ esi + 0x200530 ] edx
jne r-xdata
inc [ esi + 0x200538 ]
cmp ecx edx
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp edi [ ecx + 0xc ]
jb r-xdata
mov edx eax
sar edx 0x3
add edx 0x10
mov [ ecx ] edx
inc eax
add ecx edi
cmp eax 0x80
jl r-xdata
lea eax [ esi + 0x200200 ]
lea ecx [ esi + 0x2001fc ]
mov edx 0x80
xor ebx ebx
cmp edi [ ecx + 0xc ]
jb r-xdata
lea edx [ ebp + 0x10 ]
mov eax rwxdata
call sub_405cf0
mov ebx [ eax ]
mov ebx 0x3f
sub ebx [ ecx ]
sub ecx edi
mov [ eax ] ebx
add eax edi
dec edx
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp + 0x10 ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
jmp r-xdata
cmp ebx eax
je r-xdata
sub_404e20
push ebp
mov ebp esp
push 0xffffffff
push sub_4383d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
push ebx
call sub_403e20
xor eax eax
lea edi [ ebx + 0x7c ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_406350
lea esi [ edi + 0x14 ]
xor eax eax
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_406420
xor eax eax
mov [ edi + 0x24 ] eax
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] eax
lea esi [ ebx + 0xb4 ]
mov [ ebp - 0x4 ] 0x3
call sub_404580
lea eax [ ebx + 0xdc ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_404760
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_404ed0
mov eax [ esi + 0x104 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x10c ] edi
mov eax [ esi + 0x100 ]
push eax
call sub_4181ab
mov eax [ esi + 0xe0 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xdc ] r--data
mov ecx [ esi + 0xc4 ]
push ecx
call sub_4181ab
mov eax [ esi + 0x90 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov eax [ esi + 0x80 ]
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x7c ] r--data
mov edx [ esi + 0x2c ]
push edx
call sub_4181ab
mov eax [ esi + 0x1c ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_41827c
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_41827c
add esp 0x4
sub_404ff0
push ebp
mov ebp esp
sub esp 0x2c
push esi
push edi
mov edi 0x1
add [ ebx + 0x20053c ] edi
lea esi [ ebx + 0x200400 ]
call sub_404a50
movzx ecx ax
mov eax 0xffff
sub eax ecx
mov [ ebp - 0x18 ] eax
shr eax 0x8
mov edx [ ebx + eax * 4 + 0x200000 ]
mov eax [ ebx + 0x200478 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov edx [ ebx + 0x20047c ]
mov edx [ edx ]
lea ecx [ ebx + 0x20047c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call edx
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
xor ecx ecx
lea eax [ esi + esi * 2 ]
cmp edi eax
setg cl
xor eax eax
lea edx [ edi + edi * 2 ]
cmp edx esi
setg al
xor edx edx
add ecx eax
mov eax [ ebp - 0x10 ]
cmp edi esi
mov esi [ ebx + 0x2004c0 ]
setg dl
mov edi 0x1
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
add ecx edx
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0x2004d4 ]
movzx eax [ ecx + 0x1 ]
shl eax 0x4
movzx eax [ eax + rwxdata ]
lea edx [ esi + 0x1 ]
imul edx edx
imul eax edx
add eax edi
mov [ ebp - 0x8 ] eax
movzx ecx [ ecx + 0x1 ]
shl ecx 0x4
movzx ecx [ ecx + rwxdata ]
imul ecx edx
mov edx [ ebx + 0x2004bc ]
add ecx edi
mov [ ebp - 0x4 ] ecx
lea edx [ edx + esi + 0x2 ]
mov esi [ ebx + 0x2004d8 ]
imul edx edx
movzx edi [ esi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
imul edi edx
add eax edi
mov [ ebp - 0x8 ] eax
movzx eax [ esi + 0x1 ]
shl eax 0x4
movzx eax [ eax + rwxdata ]
imul eax edx
mov edx [ ebx + 0x2004dc ]
add ecx eax
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + 0x2004dc ]
lea eax [ ebp - 0x4 ]
mov edx [ edx ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call edx
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
xor ecx ecx
lea eax [ esi + esi * 2 ]
cmp edi eax
setg cl
xor eax eax
lea edx [ edi + edi * 2 ]
cmp edx esi
setg al
xor edx edx
add ecx eax
mov eax [ ebp - 0x10 ]
cmp edi esi
setg dl
add ecx edx
lea esi [ ecx + eax * 4 ]
shl esi 0x6
add esi [ ebp - 0xc ]
movzx edi [ ebx + esi * 8 + 0x4 ]
mov eax [ ebx + esi * 8 ]
lea ecx [ edi - 0x4 ]
mov edx eax
sar edx cl
mov ecx edi
mov edi eax
sar edi cl
sub eax edi
mov [ ebx + esi * 8 ] eax
cmp edx 0xffff
jbe r-xdata
xor ecx ecx
test edx edx
sete cl
add edx ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx 0xffff
add ecx 0xfffffffc
mov eax edx
shl eax cl
mov [ ebx + esi * 8 ] eax
cmp [ ebp - 0xc ] 0x1
jbe r-xdata
mov eax [ ebx + esi * 8 - 0x8 ]
movzx ecx [ ebx + esi * 8 - 0x4 ]
inc ecx
mov edi eax
sar edi cl
sub eax edi
mov [ ebx + esi * 8 - 0x8 ] eax
cmp [ ebp - 0xc ] 0x3f
jae r-xdata
mov eax [ ebx + esi * 8 - 0x10 ]
movzx ecx [ ebx + esi * 8 - 0xc ]
inc ecx
mov edi eax
sar edi cl
sub eax edi
mov [ ebx + esi * 8 - 0x10 ] eax
cmp [ ebp - 0xc ] 0x3e
jae r-xdata
mov eax [ ebx + esi * 8 + 0x8 ]
movzx ecx [ ebx + esi * 8 + 0xc ]
inc ecx
mov edi eax
sar edi cl
sub eax edi
mov [ ebx + esi * 8 + 0x8 ] eax
mov eax [ ebp - 0x18 ]
lea ecx [ eax + edx * 2 ]
mov eax [ ebx + 0x20052c ]
add ecx edx
mov edx [ ebx + 0x200528 ]
sub eax edx
shr ecx 0x2
cmp eax 0x10000000
jb r-xdata
mov eax [ ebx + esi * 8 + 0x10 ]
movzx ecx [ ebx + esi * 8 + 0x14 ]
inc ecx
mov edi eax
sar edi cl
sub eax edi
mov [ ebx + esi * 8 + 0x10 ] eax
cmp eax 0x1000000
jb r-xdata
shr eax 0x10
imul eax ecx
jmp r-xdata
cmp eax 0x100000
jb r-xdata
shr eax 0xc
imul eax ecx
shr eax 0x4
jmp r-xdata
add edx eax
cmp [ ebx + 0x200520 ] 0x0
jne r-xdata
cmp eax 0x10000
jb r-xdata
shr eax 0x8
imul eax ecx
shr eax 0x8
jmp r-xdata
cmp [ ebx + 0x200530 ] edx
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
imul eax ecx
shr eax 0x10
shr eax 0x4
imul eax ecx
shr eax 0xc
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x8 ] 0x0
mov [ ebx + 0x20052c ] edx
jmp r-xdata
inc edx
mov [ ebx + 0x200528 ] edx
mov [ ebx + 0x20052c ] edx
jmp r-xdata
mov cl [ ebx + esi * 8 + 0x4 ]
lea edx [ ebx + esi * 8 + 0x4 ]
cmp cl [ ebx + esi * 8 + 0x5 ]
jae r-xdata
mov eax [ ebp - 0xc ]
add [ ebx + esi * 8 ] 0x1000
mov ecx 0x800
test eax eax
je r-xdata
mov edx [ ebx + 0x200400 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
lea edi [ ebx + 0x200400 ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0x7c ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
lea ecx [ edi + 0x7c ]
push edx
call eax
mov eax [ ebp + 0x8 ]
add edi 0xb4
call sub_404660
mov edx [ ebx + 0x2004dc ]
mov edi [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea ecx [ ebx + 0x2004dc ]
push edi
call eax
test edi edi
jne r-xdata
mov ecx [ ebx + 0x200528 ]
xor ecx [ ebx + 0x20052c ]
test ecx 0xff000000
jne r-xdata
lea eax [ ebx + esi * 8 + 0x6 ]
mov edi 0xffff
add [ eax ] di
jne r-xdata
cmp eax 0x1
jbe r-xdata
add [ ebx + esi * 8 - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov edi [ ebx + esi * 8 ]
add edi edi
mov [ ebx + esi * 8 ] edi
mov esi 0x3
shl si cl
inc cl
mov [ edx ] cl
mov [ eax ] si
cmp eax 0x3f
jae r-xdata
add [ ebx + esi * 8 - 0x10 ] ecx
mov eax [ ebx + 0x20052c ]
shl [ ebx + 0x200528 ] 0x8
shl eax 0x8
add eax 0xff
cmp [ ebx + 0x200520 ] 0x1
mov [ ebx + 0x20052c ] eax
jne r-xdata
movzx edx [ ebx + 0x20052f ]
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov esi [ ebx + 0x200524 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] esi
mov edx ecx
jne r-xdata
cmp eax 0x3e
jae r-xdata
add [ ebx + esi * 8 + 0x8 ] ecx
mov edx [ ebx + 0x200528 ]
xor edx [ ebx + 0x20052c ]
test edx 0xff000000
je r-xdata
mov edi [ rwxdata ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov esi [ ebx + 0x200524 ]
mov [ ebp - 0x18 ] esi
mov ecx edi
jne r-xdata
mov [ ebp - 0x18 ] edx
cmp edx ecx
je r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
add [ ebx + esi * 8 + 0x10 ] ecx
cmp [ ebx + 0x200520 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx edi
je r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x14 ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x20 ] edi
lea eax [ ebp - 0x20 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor edi edi
lea edx [ ebp - 0x10 ]
mov eax rwxdata
call sub_405cf0
mov edi [ eax ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x18 ]
mov eax rwxdata
call sub_405cf0
mov ecx [ eax ]
mov edi [ rwxdata ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
lea eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] ecx
cmp ecx edx
je r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
mov ecx edx
jne r-xdata
cmp [ eax ] ecx
je r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx edx
je r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x18 ] esi
mov ecx edx
jne r-xdata
cmp [ eax ] edi
je r-xdata
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0xc ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x24 ] edx
lea eax [ ebp - 0x24 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x10 ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
xor eax eax
lea edx [ ebp - 0x18 ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
mov edi [ rwxdata ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
inc [ ebx + 0x200538 ]
lea edx [ ebp - 0x18 ]
mov eax rwxdata
mov [ ebp - 0x18 ] esi
call sub_405cf0
mov dl [ ebp - 0x1c ]
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
mov [ edi + esi ] dl
cmp edi eax
je r-xdata
cmp [ eax ] edx
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov edx [ ebx + 0x200524 ]
mov [ ebp - 0x18 ] edx
mov ecx edi
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax rwxdata
mov [ ebp - 0x1c ] esi
call sub_405cf0
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx + esi ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
cmp [ eax ] edx
je r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx edi
je r-xdata
cmp [ eax + 0xc ] edx
jae r-xdata
inc [ ebx + 0x200538 ]
mov edi [ rwxdata ]
mov [ ebp - 0x28 ] edi
lea eax [ ebp - 0x28 ]
cmp edx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
inc [ ebx + 0x200534 ]
xor eax eax
cmp [ ebx + 0x200534 ] 0x5
jle r-xdata
lea edx [ ebp - 0x18 ]
mov eax rwxdata
call sub_405cf0
lea eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ ebx + 0x200530 ]
shl ecx 0x8
add ecx eax
mov [ ebx + 0x200530 ] ecx
push r--data
call sub_417a0c
add esp 0x4
mov esi ebx
call sub_405870
push 0x1
call sub_418663
cmp [ eax ] edi
je r-xdata
sub_405630
push ebp
mov ebp esp
push 0xffffffff
push sub_43852e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp [ edi + 0x200520 ] 0x0
jne r-xdata
cmp [ edi + 0x200544 ] 0x0
jle r-xdata
mov eax [ edi + 0x200528 ]
xor eax [ edi + 0x20052c ]
test eax 0xff000000
jne r-xdata
lea esi [ edi + 0x200400 ]
call sub_404ed0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x200524 ]
push eax
call sub_401160
mov ecx eax
mov eax [ edi + 0x200544 ]
mov [ ebp + 0x8 ] ecx
fild [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
fild [ edi + 0x200548 ]
sub esp 0x14
cdq
and edx 0x7
fdiv [ r--data ]
add eax edx
sar eax 0x3
fstp [ esp + 0x10 ]
fld st1
fmul [ r--data ]
fdiv st1
fstp [ esp + 0x8 ]
fxch st1
fmul [ r--data ]
fdivrp st1
fstp [ esp ]
push eax
push ecx
push r--data
call sub_417a0c
add esp 0x24
movzx eax [ edi + 0x20052f ]
mov esi [ edi + 0x200524 ]
push esi
mov [ ebp - 0x1c ] eax
call sub_401160
push esi
mov ebx eax
call sub_4010d0
add esp 0x8
cmp ebx eax
je r-xdata
movzx ecx [ edi + 0x20052f ]
mov esi [ edi + 0x200524 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x18 ] esi
mov edx ecx
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax rwxdata
mov [ ebp - 0x20 ] esi
call sub_405cf0
mov dl [ ebp - 0x1c ]
lea ecx [ ebx + 0x1 ]
mov [ eax ] ecx
mov [ ebx + esi ] dl
mov [ ebp - 0x10 ] edx
cmp edx ecx
je r-xdata
lea ebx [ ebx ]
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x14 ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor ebx ebx
lea edx [ ebp - 0x18 ]
mov eax rwxdata
call sub_405cf0
mov ebx [ eax ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] ecx
cmp ecx edx
je r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
mov ecx edx
jne r-xdata
cmp [ eax ] ecx
je r-xdata
mov [ ebp - 0x1c ] edx
lea eax [ ebp - 0x1c ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x10 ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ edi + 0x20052c ]
shl [ edi + 0x200528 ] 0x8
shl ecx 0x8
add ecx 0xff
mov [ edi + 0x20052c ] ecx
mov edx [ edi + 0x200528 ]
xor edx ecx
test edx 0xff000000
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax rwxdata
mov [ ebp - 0x18 ] esi
call sub_405cf0
lea edx [ ebx + 0x1 ]
mov [ eax ] edx
mov al [ ebp - 0x20 ]
mov [ ebx + esi ] al
cmp ebx eax
je r-xdata
cmp [ eax ] edx
je r-xdata
sub_405870
push ebp
mov ebp esp
sub esp 0x8
push edi
call sub_4181b6
mov edi eax
mov eax [ esi + 0x20053c ]
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
push r--data
call sub_417a0c
add esp 0x4
mov ecx [ esi + 0x200538 ]
mov [ ebp - 0x4 ] ecx
fild [ ebp - 0x4 ]
mov edx edi
sub edx [ esi + 0x200540 ]
fild [ ebp - 0x8 ]
sub esp 0x18
mov [ ebp - 0x8 ] edx
fild [ ebp - 0x8 ]
cdq
and edx 0x7
add eax edx
fdiv [ r--data ]
sar eax 0x3
fstp [ esp + 0x10 ]
fld st1
fmul [ r--data ]
fdiv st1
fstp [ esp + 0x8 ]
fxch st1
fmul [ r--data ]
fdivrp st1
fstp [ esp ]
push eax
push ecx
push r--data
call sub_417a0c
add esp 0x24
jmp r-xdata
mov ecx [ esi + 0x20053c ]
mov eax edi
sub eax [ esi + 0x200540 ]
mov [ esi + 0x200540 ] edi
add [ esi + 0x200548 ] eax
add [ esi + 0x200544 ] ecx
mov [ esi + 0x20053c ] 0x0
mov [ esi + 0x200538 ] 0x0
pop edi
mov esp ebp
pop ebp
retn
sub_405930
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
mov ebx [ rwxdata ]
push esi
xor esi esi
push edi
lea edi [ esi + 0x8 ]
push 0x0
call sub_404ff0
dec edi
lea esi [ eax + esi * 2 ]
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405960
push ebx
mov ebx [ rwxdata ]
push esi
push edi
mov esi eax
mov edi 0x8
mov eax esi
shr eax 0x7
and eax 0x1
push eax
call sub_404ff0
add esi esi
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4059b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4385bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call sub_4016a0
mov esi [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax rwxdata
mov [ ebp - 0x10 ] esi
call sub_405cf0
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
lea edx [ ebp + 0xc ]
mov eax rwxdata
mov [ ebp + 0xc ] esi
call sub_405cf0
mov ebx [ rwxdata ]
mov [ eax ] 0x0
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
add ecx eax
mov [ ebp + 0xc ] ecx
cmp eax ecx
je r-xdata
push 0x20054c
call sub_4186f1
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
jmp r-xdata
xor eax eax
push esi
push ebx
push eax
call sub_404b90
jmp r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ rwxdata ] 0x0
mov [ ebp + 0xc ] esi
mov ecx edx
jne r-xdata
push ebx
call sub_405630
push ebx
call sub_41827c
add esp 0x4
movsx esi [ eax ]
mov edi 0x8
jmp r-xdata
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ rwxdata ] ebx
mov [ ebp + 0x10 ] ecx
cmp ecx edx
je r-xdata
lea esp [ esp ]
mov eax esi
shr eax 0x7
and eax 0x1
push eax
call sub_404ff0
add esi esi
dec edi
jne r-xdata
mov [ ebp + 0x8 ] edx
lea eax [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ rwxdata ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp + 0xc ]
mov eax rwxdata
call sub_405cf0
mov eax [ eax ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
cmp [ eax ] edx
je r-xdata
sub_405b70
push ebp
mov ebp esp
push 0xffffffff
push sub_43858b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi edx
push 0xe0
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
xor eax eax
call sub_401340
jmp r-xdata
mov esi [ ebp + 0xc ]
add esi edi
cmp edi esi
je r-xdata
push 0x20054c
call sub_4186f1
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ rwxdata ] eax
call sub_4016a0
lea edx [ ebp - 0x10 ]
mov eax rwxdata
mov [ ebp - 0x10 ] esi
call sub_405cf0
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea edx [ ebp + 0x8 ]
mov eax rwxdata
mov [ ebp + 0x8 ] esi
call sub_405cf0
mov [ eax ] 0x0
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov esi eax
test eax eax
je r-xdata
mov edi edi
xor eax eax
push esi
push 0x1
push eax
call sub_404b90
jmp r-xdata
mov eax [ rwxdata ]
push eax
call sub_41827c
add esp 0x4
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_405630
push esi
call sub_41827c
add esp 0x4
call sub_405930
mov [ edi ] al
inc edi
cmp edi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ rwxdata ] eax
sub_405c80
push ebp
mov ebp esp
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
mov esp ebp
pop ebp
retn
sub_405cf0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
cmp ebx [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
lea ebx [ ebx ]
mov ecx [ edx ]
push edi
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_408570
push ebx
lea edi [ ebp - 0x4 ]
mov ecx esi
call sub_408030
mov eax [ ebp - 0x4 ]
pop edi
pop esi
add eax 0x10
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
pop esi
lea eax [ ebx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_405d70
push ebp
mov ebp esp
push 0xffffffff
push sub_438378
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_4066a0
mov eax [ edi + 0x4 ]
push eax
call sub_41827c
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_405de0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_405e50
push ebp
mov ebp esp
push edi
mov edi eax
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
call sub_406270
mov eax edi
pop edi
pop ebp
retn 0x4
sub_405eb0
push 0x2000006
call sub_4176e1
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
retn
mov ecx eax
mov edx 0x1000002
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
mov [ esi ] eax
mov eax esi
retn
sub_406000
push 0x800006
call sub_4176e1
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
retn
mov ecx eax
mov edx r--data
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
mov [ esi ] eax
mov eax esi
retn
sub_4060b0
push 0x10006
call sub_4176e1
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
retn
mov ecx eax
mov edx 0x8002
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
mov [ esi ] eax
mov eax esi
retn
sub_406130
push ebp
mov ebp esp
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
mov esp ebp
pop ebp
retn
sub_4061a0
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] edx
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
mov esi [ esi ]
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
cmp [ ecx + 0xc ] esi
jae r-xdata
pop esi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4061d0
push ebp
mov ebp esp
push ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push esi
push ecx
push edx
lea esi [ ebp - 0x4 ]
call sub_4066a0
pop esi
mov esp ebp
pop ebp
retn
sub_406270
push ebp
mov ebp esp
push ecx
mov edx [ edi ]
push esi
mov esi eax
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx edx
sar ecx 0x1
cmp ecx esi
jbe r-xdata
jae r-xdata
lea edx [ edx + esi * 2 ]
cmp edx eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx esi
sub edx ecx
mov ecx edi
call sub_4068b0
mov ecx [ edi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx ecx
sub edx [ edi ]
push eax
sar edx 0x1
mov eax esi
sub eax edx
call sub_408600
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi ]
add esp 0x4
sar ecx 0x1
sub esi ecx
lea edx [ eax + esi * 2 ]
mov ecx eax
cmp eax eax
je r-xdata
mov [ edi + 0x4 ] edx
mov si [ ecx ]
mov [ edx ] si
add ecx 0x2
add edx 0x2
cmp ecx eax
jne r-xdata
mov [ edi + 0x4 ] edx
pop esi
mov esp ebp
pop ebp
retn
sub_406350
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx eax
sub edx ecx
cmp edx __dos_header
jbe r-xdata
jae r-xdata
push ebx
lea ebx [ ecx + __dos_header ]
cmp ebx eax
je r-xdata
retn
sub ecx eax
add ecx __dos_header
mov eax esi
call sub_4069a0
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
sub eax ecx
add eax __dos_header
je r-xdata
pop ebx
push edi
mov edi eax
sub edi eax
push edi
push eax
push ebx
call sub_417380
add esp 0xc
add edi ebx
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi ]
add eax __dos_header
mov [ esi + 0x4 ] eax
retn
push eax
push 0x0
push ecx
call sub_420010
add esp 0xc
sub_406420
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x4 ]
push edi
mov edi [ esi ]
mov edx ecx
sub edx edi
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x100000
jbe r-xdata
jae r-xdata
add edi 0x300000
cmp edi ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx 0x100000
sub ebx eax
mov ecx esi
call sub_406a80
mov edi [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
sub ecx [ esi ]
mov eax 0x55555556
imul ecx
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx 0x100000
sub ecx edx
mov eax edi
call sub_408690
mov edi [ esi + 0x4 ]
mov ecx edi
sub ecx [ esi ]
mov eax 0x55555556
imul ecx
mov ecx edx
shr ecx 0x1f
add ecx edx
mov eax 0x100000
sub eax ecx
add esp 0x4
lea edx [ edi + eax * 2 ]
add edx eax
mov [ esi + 0x4 ] edx
pop ebx
mov eax ecx
cmp ecx ecx
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
mov esp ebp
pop ebp
retn
mov dx [ eax ]
mov [ edi ] dx
mov dl [ eax + 0x2 ]
mov [ edi + 0x2 ] dl
add eax 0x3
add edi 0x3
cmp eax ecx
jne r-xdata
sub_406540
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x4 ]
push edi
mov edi [ esi ]
mov edx ecx
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x100
jbe r-xdata
jae r-xdata
lea edx [ edi + 0xc00 ]
cmp edx ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx 0x100
sub ebx eax
mov ecx esi
call sub_406ba0
mov edi [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
sub ecx [ esi ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx 0x100
sub ecx edx
mov eax edi
call sub_4086e0
mov edi [ esi + 0x4 ]
mov ecx edi
sub ecx [ esi ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
add esp 0x4
mov eax 0x100
sub eax ecx
lea edx [ eax + eax * 2 ]
lea eax [ edi + edx * 4 ]
mov [ esi + 0x4 ] eax
pop ebx
mov eax ecx
cmp ecx ecx
je r-xdata
mov [ esi + 0x4 ] edx
pop edi
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov edi [ eax ]
mov [ edx ] edi
mov edi [ eax + 0x4 ]
mov [ edx + 0x4 ] edi
mov edi [ eax + 0x8 ]
mov [ edx + 0x8 ] edi
add eax 0xc
add edx 0xc
cmp eax ecx
jne r-xdata
sub_4066a0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_406f00
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_406ca0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_406740
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ edx ]
mov edi edi
mov eax ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
cmp [ ecx + 0xc ] edx
jae r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_406770
push ebp
mov ebp esp
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_406860
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
cmp edx ecx
je r-xdata
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x4 ]
cmp ecx esi
je r-xdata
mov [ edi + 0x4 ] edx
pop esi
push ebx
jmp r-xdata
mov bx [ ecx ]
mov [ edx ] bx
add ecx 0x2
add edx 0x2
cmp ecx esi
jne r-xdata
pop ebx
sub_4068b0
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x7fffffff
sar eax 0x1
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x1
cmp eax edx
jbe r-xdata
push r--data
call sub_4315a8
pop edi
pop esi
retn
mov esi edx
shr esi 0x1
mov edi 0x7fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_407030
mov edx eax
cmp edx eax
jae r-xdata
sub_406950
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
cmp eax ecx
je r-xdata
mov eax edx
pop ebp
retn 0xc
push esi
mov esi [ ebx + 0x4 ]
push edi
sub esi ecx
push esi
push ecx
push eax
mov edi eax
call sub_417380
mov eax [ ebp + 0x8 ]
add esp 0xc
add esi edi
pop edi
mov [ ebx + 0x4 ] esi
pop esi
pop ebp
retn 0xc
sub_4069a0
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
push edi
or edi 0xffffffff
sub eax edx
sub edi ecx
cmp edi eax
jae r-xdata
add eax ecx
mov ecx [ esi + 0x8 ]
sub ecx edx
cmp eax ecx
jbe r-xdata
push r--data
call sub_4315a8
pop edi
pop esi
retn
mov edx ecx
shr edx 0x1
or edi 0xffffffff
sub edi edx
cmp edi ecx
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_407170
mov ecx eax
cmp ecx eax
jae r-xdata
sub_406a30
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
cmp edx ecx
je r-xdata
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x4 ]
cmp ecx esi
je r-xdata
mov [ edi + 0x4 ] edx
pop esi
push ebx
jmp r-xdata
mov bx [ ecx ]
mov [ edx ] bx
mov bl [ ecx + 0x2 ]
mov [ edx + 0x2 ] bl
add ecx 0x3
add edx 0x3
cmp ecx esi
jne r-xdata
pop ebx
sub_406a80
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x55555556
imul edx
mov esi edx
shr esi 0x1f
mov eax 0x55555555
add esi edx
sub eax ebx
cmp eax esi
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add esi ebx
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_4315a8
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x55555555
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_407250
mov eax esi
cmp eax esi
jae r-xdata
sub_406b50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
cmp edx ecx
je r-xdata
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x4 ]
cmp ecx esi
je r-xdata
mov [ edi + 0x4 ] edx
pop esi
push ebx
mov ebx [ ecx ]
mov [ edx ] ebx
mov ebx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ebx
mov ebx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ebx
add ecx 0xc
add edx 0xc
cmp ecx esi
jne r-xdata
pop ebx
sub_406ba0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov esi edx
shr esi 0x1f
mov eax 0x15555555
add esi edx
sub eax ebx
cmp eax esi
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add esi ebx
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_4315a8
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x15555555
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_4073b0
mov eax esi
cmp eax esi
jae r-xdata
sub_406ca0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_4079b0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_4315f5
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_41827c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_407700
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4076a0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_407630
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_4076a0
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_407630
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_407630
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_4076a0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_406f00
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_4075f0
mov esi [ esi ]
push ebx
call sub_41827c
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_406fd0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
sub_407030
push ebp
mov ebp esp
push 0xffffffff
push sub_438260
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x7fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x1
cmp eax ecx
jae r-xdata
push r--data
call sub_4315a8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_407760
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_4089f0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x4
sar edi 0x1
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 2 ]
lea eax [ ebx + edi * 2 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_41827c
add esp 0x4
sub_407130
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
sar eax 0x1
mov ecx eax
shr ecx 0x1
mov esi 0x7fffffff
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_407170
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
cmp eax ecx
jae r-xdata
push r--data
call sub_4315a8
pop ebp
retn 0x4
push ebx
push edi
call sub_4077c0
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi ]
sub ecx eax
push ecx
push eax
push edi
call sub_417380
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
add esp 0xc
sub ebx eax
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
add ebx edi
lea eax [ edi + edx ]
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] eax
pop ebx
push eax
call sub_41827c
add esp 0x4
sub_407210
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
mov ecx eax
or esi 0xffffffff
shr ecx 0x1
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_407250
push ebp
mov ebp esp
push 0xffffffff
push sub_438240
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x55555555
jbe r-xdata
mov edx [ edi + 0x8 ]
sub edx [ edi ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
push r--data
call sub_4315a8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_407820
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
mov ecx [ edi ]
push edx
mov [ ebp - 0x14 ] eax
call sub_408a30
mov ebx [ edi ]
mov ecx [ edi + 0x4 ]
sub ecx ebx
mov eax 0x55555556
imul ecx
mov esi edx
shr esi 0x1f
add esp 0x4
add esi edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
add edx ecx
lea ecx [ eax + esi * 2 ]
add ecx esi
mov [ edi + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov [ edi ] eax
push ebx
call sub_41827c
add esp 0x4
sub_407370
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
shr ecx 0x1
mov edx 0x55555555
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax esi
cmp eax esi
jae r-xdata
sub_4073b0
push ebp
mov ebp esp
push 0xffffffff
push sub_438220
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x15555555
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx [ esi ]
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
push r--data
call sub_4315a8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_407880
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
mov [ ebp - 0x14 ] eax
call sub_408a50
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov edi edx
shr edi 0x1f
add esp 0x4
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi + edi * 2 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
push ebx
call sub_41827c
add esp 0x4
sub_4074e0
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
shr ecx 0x1
mov edx 0x15555555
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax esi
cmp eax esi
jae r-xdata
sub_4075f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_4075f0
mov esi [ esi ]
push edi
call sub_41827c
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_407630
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4076a0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_407760
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx + ecx ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_4077c0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
push ecx
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_407820
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x55555555
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx + ecx * 2 ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_407880
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x15555555
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx + ecx * 2 ]
add eax eax
add eax eax
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_4079b0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_407a40
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov eax ecx
and eax 0xffffff
push esi
mov esi [ ebp + 0x8 ]
shr ecx 0x18
push edi
lea edi [ eax + 0x3 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov ecx 0x3b9aca00
mov edx eax
cmp eax edi
jae r-xdata
mov al [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov [ ebp + 0xa ] al
mov [ ebp + 0xb ] 0x0
mov ax [ ebp + 0xa ]
add ecx ecx
mov [ ecx + edx ] ax
mov eax [ esi ]
add eax ecx
mov esi [ esi ]
lea eax [ esi + eax * 2 ]
nop
mov cl [ ebp - 0x4 ]
pop edi
mov [ ebp + 0xa ] cl
mov [ ebp + 0xb ] 0x0
mov dx [ ebp + 0xa ]
pop esi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx ebx [ eax ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi ecx
jge r-xdata
inc edx
add eax 0x2
cmp edx edi
jb r-xdata
mov ecx esi
mov [ ebp - 0x8 ] edx
movzx esi [ eax + 0x1 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x8 ]
sub_407ae0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov eax ecx
and eax 0x3fffff
push esi
mov esi [ ebp + 0x8 ]
shr ecx 0x18
push edi
lea edi [ eax + 0x3 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov ecx 0x3b9aca00
mov edx eax
cmp eax edi
jae r-xdata
mov al [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov [ ebp + 0xa ] al
mov [ ebp + 0xb ] 0x0
mov ax [ ebp + 0xa ]
add ecx ecx
mov [ ecx + edx ] ax
mov eax [ esi ]
add eax ecx
mov esi [ esi ]
lea eax [ esi + eax * 2 ]
nop
mov cl [ ebp - 0x4 ]
pop edi
mov [ ebp + 0xa ] cl
mov [ ebp + 0xb ] 0x0
mov dx [ ebp + 0xa ]
pop esi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx ebx [ eax ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi ecx
jge r-xdata
inc edx
add eax 0x2
cmp edx edi
jb r-xdata
mov ecx esi
mov [ ebp - 0x8 ] edx
movzx esi [ eax + 0x1 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x8 ]
sub_407b80
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov eax ecx
and eax 0x7fff
push esi
mov esi [ ebp + 0x8 ]
shr ecx 0x18
push edi
lea edi [ eax + 0x3 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov ecx 0x3b9aca00
mov edx eax
cmp eax edi
jae r-xdata
mov al [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov [ ebp + 0xa ] al
mov [ ebp + 0xb ] 0x0
mov ax [ ebp + 0xa ]
add ecx ecx
mov [ ecx + edx ] ax
mov eax [ esi ]
add eax ecx
mov esi [ esi ]
lea eax [ esi + eax * 2 ]
nop
mov cl [ ebp - 0x4 ]
pop edi
mov [ ebp + 0xa ] cl
mov [ ebp + 0xb ] 0x0
mov dx [ ebp + 0xa ]
pop esi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx ebx [ eax ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi ecx
jge r-xdata
inc edx
add eax 0x2
cmp edx edi
jb r-xdata
mov ecx esi
mov [ ebp - 0x8 ] edx
movzx esi [ eax + 0x1 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x8 ]
sub_407c20
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi ecx
call sub_408570
mov ecx [ ebp + 0x8 ]
push ecx
mov edi ebx
mov ecx esi
call sub_408030
pop edi
mov eax ebx
pop esi
pop ebp
retn 0x4
sub_407d80
cmp ecx edx
je r-xdata
retn
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
pop esi
sub_407e00
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0xaaaaaaa
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
add eax eax
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
sub_407e70
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_407ed0
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
add eax eax
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
sub_407f20
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
push ecx
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_407f70
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x55555555
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ eax + eax * 2 ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
sub_407fc0
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x15555555
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
sub_408030
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
push 0x1
push edi
call sub_408240
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ esi + 0xc ]
jae r-xdata
push esi
push ebx
lea esi [ ebp - 0x8 ]
call sub_408170
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push 0x1
push edi
call sub_408240
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_4084b0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_4079b0
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push 0x0
push edi
call sub_408240
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push 0x1
push edi
call sub_408240
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
push edi
mov ecx eax
call sub_408240
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408170
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_41827c
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_408240
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_4084b0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_408240
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_408240
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_41827c
add esp 0x4
push r--data
call sub_4315a8
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_4084b0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_408570
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4186f1
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_408600
push ebp
mov ebp esp
push ecx
xor edx edx
cmp eax edx
jbe r-xdata
mov esp ebp
pop ebp
retn
push esi
mov [ ebp - 0x2 ] dx
mov si dx
dec eax
add ecx 0x2
cmp eax edx
ja r-xdata
mov [ ecx ] si
cmp ecx edx
je r-xdata
pop esi
sub_408690
push ebp
mov ebp esp
push ecx
xor edx edx
cmp ecx edx
jbe r-xdata
mov esp ebp
pop ebp
retn
push esi
mov [ ebp - 0x3 ] dx
mov si dx
dec ecx
add eax 0x3
cmp ecx edx
ja r-xdata
mov [ eax ] si
mov [ eax + 0x2 ] dl
cmp eax edx
je r-xdata
pop esi
sub_4086e0
test ecx ecx
je r-xdata
retn
push esi
push edi
xor edx edx
xor esi esi
xor edi edi
lea esp [ esp ]
add eax 0xc
dec ecx
jne r-xdata
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
test eax eax
je r-xdata
pop edi
pop esi
sub_4087a0
cmp ecx edx
je r-xdata
retn
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
pop esi
sub_408810
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_4088c0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4186f1
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov edx [ esi + 0x4 ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x14 ] cx
mov esp ebp
pop ebp
retn
sub_4089f0
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
mov si [ ecx ]
mov [ eax ] si
test eax eax
je r-xdata
pop esi
sub_408a10
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_408a30
cmp ecx esi
je r-xdata
retn
test eax eax
je r-xdata
add ecx 0x3
add eax 0x3
cmp ecx esi
jne r-xdata
mov dx [ ecx ]
mov [ eax ] dx
mov dl [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
sub_408a50
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
test eax eax
je r-xdata
pop esi
sub_408cb0
push ebp
mov ebp esp
xor edx edx
mov eax ecx
div [ ebp + 0x8 ]
cmp eax 0x4
je r-xdata
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn
push ecx
call [ rwxdata ]
add esp 0x4
pop ebp
retn
sub_408d00
push ebp
mov ebp esp
mov edx [ eax ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
sub edx ebx
mov [ eax + 0x58 ] edx
mov [ eax + 0x5c ] ecx
cmp ebx ecx
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x64 ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
inc edx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x70 ]
push esi
mov esi [ eax + 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x74 ]
push edi
mov edi [ eax + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x60 ]
sub edi esi
movzx eax [ edx + ecx + 0x1 ]
dec ebx
mov [ ebp + 0x8 ] ebx
movzx ebx [ edx + ecx ]
shl ebx 0x5
xor eax ebx
movzx ebx [ edx + ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ ebp - 0x4 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ ebx + eax * 4 ]
mov [ edi + esi ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp - 0x8 ]
mov [ esi ] ebx
mov ebx [ ebp - 0xc ]
inc [ ebx + eax * 4 ]
movzx eax [ edx + ecx ]
mov ebx [ ebp - 0x10 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp + 0x8 ]
inc ecx
add esi 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
sub_408db0
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov [ esi ] 0x800000
mov ecx [ esi ]
mov [ esi + 0x8 ] 0x1
cmp ecx 0x800000
ja r-xdata
mov [ esi + 0x4 ] 0x800
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax 0x800
ja r-xdata
lea eax [ ecx + eax * 2 ]
cmp eax edi
ja r-xdata
push eax
call [ rwxdata ]
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
push ebx
push 0x40000
mov [ esi + 0x60 ] eax
call [ rwxdata ]
mov ecx [ esi + 0x4 ]
add esp 0x4
add ecx [ esi ]
mov [ esi + 0x64 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
cmp ebx edi
jbe r-xdata
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x64 ] edi
je r-xdata
cmp ebx edi
jbe r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x68 ] edi
je r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov [ esi + 0x68 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
cmp [ esi + 0x6c ] edi
je r-xdata
push 0x40000
mov [ esi + 0x6c ] eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x70 ] eax
cmp [ esi + 0x60 ] edi
je r-xdata
cmp eax edi
je r-xdata
push 0x40000
call [ rwxdata ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov [ esi + 0x74 ] eax
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea ebx [ eax + ecx ]
mov [ esi + 0x14 ] eax
add eax ebx
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x50 ] ebx
cmp eax 0xffffffff
jb r-xdata
mov eax [ esi + 0x60 ]
push 0x40000
mov [ esi + 0x58 ] ecx
mov ecx [ esi + 0x70 ]
add eax ebx
push edi
push ecx
mov [ esi + 0x54 ] eax
call sub_420010
mov edx [ ebp - 0x4 ]
push 0x40000
push 0xff
push edx
call sub_420010
mov [ esi + 0x44 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x5c ] edi
mov edi [ esi + 0x30 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
add esp 0x18
sub eax ecx
mov [ esi + 0x28 ] eax
je r-xdata
pop ebx
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi ]
mov [ esi + 0x4c ] 0x0
test eax eax
jne r-xdata
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
push eax
mov eax [ esi + 0x60 ]
push ecx
push eax
call sub_420a30
mov ecx [ esi + 0x28 ]
mov edx ecx
add esp 0xc
add [ edi + 0x1c ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x28 ] edx
sub ebx eax
mov [ esi + 0x4c ] ebx
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
neg eax
pop ebx
mov [ esi + 0x4c ] eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_408fd0
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x68 ]
mov [ esi + 0x6c ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x68 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x60 ]
mov [ esi + 0x64 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x60 ] edi
pop edi
retn
push eax
call [ rwxdata ]
add esp 0x4
sub_409050
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x1c ]
push esi
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov esi edx
movzx edx [ esi ]
inc esi
mov [ ecx + 0x1c ] esi
test edx edx
jns r-xdata
mov ecx [ eax + 0x50 ]
mov esi 0x1
add [ eax + 0x44 ] esi
cmp [ eax + 0x44 ] ecx
jne r-xdata
dec ecx
mov [ eax + 0x28 ] ecx
jmp r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x60 ]
mov [ ecx + esi ] dl
cmp ecx [ eax + 0x4 ]
jae r-xdata
add [ eax + 0x48 ] esi
cmp [ eax + 0x48 ] ecx
jne r-xdata
mov [ eax + 0x44 ] 0x0
mov esi [ eax + 0x54 ]
mov [ ecx + esi ] dl
add [ eax + 0x4c ] esi
pop esi
cmp [ eax + 0x4c ] ecx
jne r-xdata
mov [ eax + 0x48 ] 0x0
retn
mov [ eax + 0x4c ] 0x0
sub_4090d0
mov eax [ edx + 0x58 ]
test eax eax
jne r-xdata
dec eax
mov [ edx + 0x58 ] eax
mov ecx [ edx + 0x60 ]
movzx eax [ ecx + esi ]
add ecx esi
shl eax 0x5
push edi
movzx edi [ ecx + 0x1 ]
xor eax edi
movzx edi [ ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ edx + 0x74 ]
lea eax [ ecx + eax * 4 ]
pop edi
cmp [ eax ] esi
jne r-xdata
retn
mov [ eax ] 0xffffffff
retn
sub_409130
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
mov ecx [ edx + 0x48 ]
inc eax
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x58 ]
push esi
mov esi [ edx + 0x60 ]
push edi
mov edi [ edx + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x8 ]
movzx eax [ esi + edi ]
movzx ebx [ esi + edi + 0x1 ]
shl eax 0x5
xor eax ebx
movzx ebx [ esi + edi + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
movzx ebx [ esi + edi ]
mov eax [ edx + 0x74 ]
cmp [ eax + ebx * 4 ] edi
jne r-xdata
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
movzx ebx [ eax ]
inc eax
mov [ edi + 0x1c ] eax
test ebx ebx
jns r-xdata
movzx edi [ esi + ecx ]
movzx eax [ esi + ecx + 0x1 ]
shl edi 0x5
xor eax edi
movzx edi [ esi + ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ edi + eax * 4 ]
mov edi [ edx + 0x68 ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x64 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + eax * 4 ] ecx
mov edi [ edx + 0x6c ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x70 ]
inc [ edi + eax * 4 ]
movzx edi [ esi + ecx ]
mov eax [ edx + 0x74 ]
mov [ eax + edi * 4 ] ecx
mov edi [ edx + 0x30 ]
mov eax [ edi + 0x1c ]
cmp eax [ edi + 0x24 ]
jae r-xdata
mov [ eax + ebx * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] bl
cmp eax [ edx + 0x4 ]
jae r-xdata
inc ecx
cmp ecx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edx + 0x50 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
mov edi [ edx + 0x54 ]
mov [ eax + edi ] bl
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi ebx
jne r-xdata
xor ecx ecx
dec [ ebp + 0x8 ]
jne r-xdata
xor edi edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ edx + 0x4c ] edi
pop edi
mov [ edx + 0x58 ] esi
pop esi
mov [ edx + 0x48 ] ecx
mov [ edx + 0x44 ] eax
pop ebx
sub_409280
push ebp
mov ebp esp
push ecx
mov edx [ esi + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x48 ]
add edi [ esi + 0x60 ]
cmp [ ebp + 0xc ] 0x0
mov al [ edi + edx - 0x1 ]
mov [ ebp - 0x1 ] al
jbe r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ebx
ja r-xdata
mov cl [ eax + edx ]
cmp cl [ edi + edx ]
jne r-xdata
mov eax [ esi + 0x60 ]
mov cl [ ebp - 0x1 ]
dec [ ebp + 0xc ]
add eax ebx
cmp [ eax + edx - 0x1 ] cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edi ]
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
lea ecx [ edi + 0x2 ]
add eax 0x2
lea ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
sub ecx edi
cmp ecx edx
jbe r-xdata
mov bl [ ecx ]
inc eax
cmp bl [ eax ]
je r-xdata
mov edx ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] ebx
cmp ecx [ esi + 0x28 ]
je r-xdata
mov ebx [ esi + 0x28 ]
inc ecx
add ebx edi
cmp ecx ebx
jae r-xdata
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x6c ]
cmp ecx [ eax + ebx * 4 ]
ja r-xdata
mov cl [ ecx + edi - 0x1 ]
mov [ ebp - 0x1 ] cl
sub_409320
mov edx [ eax + 0x48 ]
mov ecx [ eax + 0x60 ]
movzx ecx [ ecx + edx ]
mov edx [ eax + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx 0x2
cmp [ eax + 0x20 ] edx
jae r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov [ eax + 0x20 ] edx
mov [ eax + 0x34 ] ecx
sub_409350
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x60 ]
lea ecx [ edx + eax ]
movzx eax [ ecx ]
push edi
movzx edi [ ecx + 0x1 ]
shl eax 0x5
xor eax edi
movzx edi [ ecx + 0x2 ]
mov ebx [ esi + 0x68 ]
shl eax 0x5
xor eax edi
mov edi [ esi + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
lea edi [ edi + eax * 4 ]
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov [ ebx + edx * 4 ] edi
mov [ ebp - 0x8 ] edi
mov edi [ esi + 0x70 ]
lea eax [ edi + eax * 4 ]
mov edi [ eax ]
lea ebx [ edi + 0x1 ]
mov [ eax ] ebx
mov eax [ esi + 0x10 ]
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x28 ]
mov [ eax ] edx
movzx eax [ ecx ]
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
test eax eax
je r-xdata
movzx ecx [ ecx ]
mov edx [ esi + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
mov edi eax
mov edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jbe r-xdata
cmp eax 0x2
jae r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
inc ecx
mov [ esi + 0x24 ] 0x0
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ esi + 0x2c ] 0xffffffff
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0x6c ]
mov [ ecx + edx * 4 ] edi
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x34 ]
cmp ecx edx
jbe r-xdata
cmp ebx 0x3
jb r-xdata
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x4c ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x60 ]
movzx ebx [ edi + eax ]
lea ecx [ edi + eax ]
movzx eax [ ecx + 0x1 ]
shl ebx 0x5
xor eax ebx
movzx ebx [ ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ esi + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ esi + 0x74 ]
cmp [ ecx + eax * 4 ] edi
lea eax [ ecx + eax * 4 ]
jne r-xdata
mov eax [ esi + 0x50 ]
sub eax edx
add eax ecx
sub ecx edx
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_409280
add esp 0x8
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] 0xffffffff
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x24 ] eax
sub_4094d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ eax ] 0x1
mov [ esi + 0x30 ] eax
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x7c ] edi
mov [ eax + 0x78 ] edi
mov [ eax + 0x74 ] edi
mov [ eax + 0x88 ] edi
mov [ eax + 0x84 ] edi
mov [ eax + 0x80 ] edi
mov [ eax + 0x8c ] edi
call sub_408db0
mov ebx eax
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
pop edi
mov [ esi + 0x18 ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_408fd0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_409540
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub esi eax
mov ecx esi
sub ecx eax
push ecx
mov edx ebx
call sub_409130
sub esi [ ebp + 0x8 ]
add esp 0x4
inc esi
jmp r-xdata
mov ecx [ ebx + 0x28 ]
inc ecx
mov [ edi + 0x4 ] ecx
mov esi ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_408fd0
jmp r-xdata
add [ edi + 0x74 ] esi
mov eax ebx
mov [ ebx + 0x20 ] 0x1
call sub_409350
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov [ edi + 0xc ] eax
mov eax ebx
mov [ edi + 0x8 ] edx
call sub_409050
xor eax eax
cmp [ ebx + 0x2c ] eax
jge r-xdata
xor eax eax
pop ebp
retn
mov ecx [ edi + 0x74 ]
cmp ecx [ edi + 0x7c ]
jbe r-xdata
mov edx [ edi + 0x1c ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x70 ]
mov [ edi + 0x18 ] edx
pop esi
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
mov edx [ edi + 0x78 ]
push 0x3
push edx
push ecx
call eax
add esp 0x10
add [ edi + 0x7c ] 0x400
sub_4095e0
push esi
xor esi esi
cmp edx 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edx esi
je r-xdata
mov [ ecx + 0x2c ] esi
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x44 ] esi
xor eax eax
pop esi
retn
cmp eax 0x8
je r-xdata
mov [ ecx + 0x34 ] esi
or eax 0xffffffff
pop esi
retn
mov [ ecx + 0x38 ] eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ecx + 0x3c ] eax
cmp eax 0x10
je r-xdata
cmp eax 0x20
jne r-xdata
sub_409630
mov ecx [ esi + 0x40 ]
mov eax [ esi + 0x2c ]
mov [ ecx ] al
cmp [ esi + 0x38 ] 0x10
jb r-xdata
retn
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
cmp [ esi + 0x38 ] 0x20
jne r-xdata
mov edx eax
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
sub_409660
mov ecx [ eax + 0x30 ]
push esi
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] edi
mov [ eax + 0x30 ] 0x1
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edi + edx * 2 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
sub_4096e0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov [ eax + 0x40 ] 0x0
retn
push esi
cmp ecx [ eax + 0x38 ]
je r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
xor ecx ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x40 ] ecx
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
add edx edx
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jne r-xdata
sub_4097b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_409660
mov edi 0x1
call sub_409660
pop edi
pop ebp
retn
push ebx
add edi 0x2
push esi
mov esi 0x4
mov [ ebp + 0x8 ] edi
lea ecx [ ecx ]
add esi esi
cmp edi esi
jae r-xdata
shr esi 0x1
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edi [ ebp + 0x8 ]
cmp esi 0x2
ja r-xdata
sub_4098e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
push edi
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x6c ]
add [ esi + 0x84 ] ebx
cmp ebx [ eax + 0xc ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
add eax 0xfffffffd
push eax
push esi
call sub_4098e0
mov eax [ esi + 0x54 ]
mov edx 0x3
sub edx eax
add ebx edx
add esp 0xc
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x4 ]
jbe r-xdata
mov [ eax + 0xc ] ebx
xor edi edi
mov eax esi
call sub_409660
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
dec eax
shr eax 0x8
inc eax
push eax
mov eax esi
call sub_4097b0
movzx eax [ ebp + 0x10 ]
mov ecx [ esi + 0x44 ]
dec al
add esp 0x4
mov [ ecx ] al
inc [ esi + 0x44 ]
mov eax esi
call sub_409660
mov edi 0x1
call sub_409660
jmp r-xdata
mov eax 0x1
cmp eax ebx
sbb edi edi
neg edi
mov eax esi
call sub_409660
mov edi ebx
and edi 0x1
call sub_409660
mov ecx [ ebp + 0x10 ]
pop edi
mov [ esi + 0x14 ] ecx
pop esi
pop ebx
pop ebp
retn
xor edi edi
mov eax esi
call sub_409660
call sub_409660
add ebx 0xfffffffc
push ebx
call sub_4097b0
mov edx [ ebp + 0x10 ]
add esp 0x4
pop edi
mov [ esi + 0x14 ] edx
pop esi
pop ebx
pop ebp
retn
mov edx 0xd00
cmp edx [ ebp + 0x10 ]
sbb eax eax
neg eax
or ecx 0xffffffff
sub ecx eax
add ebx ecx
cmp ebx 0x4
jb r-xdata
sub_4099e0
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov ecx [ eax + 0x6c ]
add [ eax + 0x80 ] edi
cmp edi [ ecx + 0x14 ]
jbe r-xdata
push ebx
push esi
mov ebx 0x1
mov [ ecx + 0x14 ] edi
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edx + edx + 0x1 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov esi [ ebp + 0x8 ]
mov dl [ esi ]
mov ecx [ eax + 0x44 ]
mov [ ecx ] dl
add [ eax + 0x44 ] ebx
add esi ebx
sub edi ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
sub_409a90
cmp edx 0x2
jb r-xdata
or eax 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x50 ]
ja r-xdata
cmp ecx 0xd00
ja r-xdata
push esi
mov esi 0xd00
cmp esi ecx
sbb esi esi
push edi
neg esi
mov edi 0xfffffffe
sub edi esi
add edx edi
pop edi
pop esi
cmp ecx [ eax + 0x14 ]
jne r-xdata
dec ecx
shr ecx 0x8
mov eax 0xb
test ecx ecx
je r-xdata
mov eax 0x3
jmp r-xdata
add eax 0x2
cmp edx 0x3
jb r-xdata
add eax 0x2
shr ecx 0x1
jne r-xdata
retn
sub edx 0x3
add eax 0x2
shr edx 0x1
jne r-xdata
retn
sub_409b00
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
lea ecx [ eax - 0x1 ]
mov ebx edx
cmp ecx 0x9
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_4170d2
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax * 8 ]
push 0x90
sub esi eax
lea edx [ ebp - 0xd4 ]
push 0x0
lea esi [ esi * 4 + r--data ]
push edx
mov [ ebp - 0xdc ] esi
call sub_420010
or eax 0xffffffff
lea ecx [ ebp - 0x44 ]
push 0x40
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
lea eax [ ebx + edi ]
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov edi [ ebp + 0x8 ]
mov edx ecx
push 0x0
push edx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x68 ] ecx
call sub_420010
mov ecx [ ebp - 0x68 ]
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x68 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8c ]
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x88 ]
add esp 0x18
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x9c ] 0x8
mov [ ebp - 0x98 ] 0x1
call sub_4095e0
test eax eax
jne r-xdata
pop esi
pop edi
mov eax 0xfffffffe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x90 ] edi
mov edx 0x800
cmp eax 0x800
jae r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x16c ] edx
cmp eax 0x800000
jb r-xdata
mov edx eax
mov ecx [ ebp - 0x84 ]
mov edi 0xffff
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x164 ] edi
cmp ecx 0xffffffff
je r-xdata
mov eax 0x800000
cmp ebx eax
jae r-xdata
mov eax 0x800000
cmp ecx 0x800000
jae r-xdata
cmp edx 0x8
jb r-xdata
mov eax ebx
cmp ebx 0x100
jae r-xdata
mov [ ebp - 0x170 ] eax
mov eax ecx
cmp eax 0x100
jb r-xdata
mov [ ebp - 0x170 ] eax
mov eax 0x100
mov eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x170 ]
lea eax [ ebp - 0xd4 ]
call sub_4094d0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x164 ] edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0x15c ]
jae r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov [ ebp - 0x15c ] eax
push 0x0
xor eax eax
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] 0x1
call sub_409540
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push 0xffffffff
push 0x0
push 0x0
call edx
add esp 0x10
cmp [ ebp - 0xd0 ] eax
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_4099e0
xor edi edi
call sub_409660
push 0x1000000
call sub_4097b0
mov eax [ ebp - 0x90 ]
mov [ eax ] 0xff
inc [ ebp - 0x90 ]
add esp 0x8
lea eax [ ebp - 0xd4 ]
call sub_4096e0
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
mov edx [ ebp - 0xf0 ]
mov ecx eax
mov [ edx ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xcc ]
jmp r-xdata
lea esi [ ebp - 0x170 ]
call sub_408fd0
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push 0x4
push ecx
mov ecx [ ebp - 0x60 ]
push ecx
call edx
add esp 0x10
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
cmp [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xc8 ]
mov ebx edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ecx
jne r-xdata
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xe0 ] edx
mov ecx [ esi + 0x10 ]
mov eax 0x1
add [ ebp - 0xd8 ] eax
push 0x0
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x160 ] ecx
call sub_409540
add esp 0x4
jne r-xdata
cmp ecx [ ebp - 0x84 ]
ja r-xdata
cmp ecx 0xd00
ja r-xdata
mov eax [ ebp - 0xdc ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_4099e0
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ebx
push ecx
mov [ ebp - 0xd8 ] 0x0
call sub_4098e0
mov edx [ ebp - 0xdc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
inc esi
mov eax ebx
push esi
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_409540
mov esi [ ebp - 0xdc ]
add esp 0x14
jmp r-xdata
cmp edi [ eax + 0x8 ]
jae r-xdata
mov edi [ ebp - 0xcc ]
cmp ecx [ ebp - 0xc0 ]
je r-xdata
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_409a90
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xdc ]
mov eax [ eax ]
dec edi
mov [ ebp - 0xec ] eax
cmp eax edi
jbe r-xdata
cmp [ ebp - 0xec ] esi
jbe r-xdata
mov [ ebp - 0xec ] edi
mov [ ebp - 0xe4 ] esi
jmp r-xdata
cmp [ ebp - 0xd0 ] ebx
jbe r-xdata
mov eax [ ebp - 0xdc ]
cmp ebx [ eax + 0x4 ]
jb r-xdata
mov edx [ eax + 0x10 ]
mov [ ebp - 0x160 ] edx
mov ecx [ eax + 0x10 ]
shr ecx 0x2
mov [ ebp - 0x160 ] ecx
jmp r-xdata
mov ebx [ ebp - 0xe8 ]
cmp esi [ ebp - 0xec ]
jb r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_409a90
test eax eax
js r-xdata
push 0x0
mov eax 0x1
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_409540
mov edi [ ebp - 0xcc ]
add [ ebp - 0xe4 ] 0x9
add esp 0x4
inc esi
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov ecx edi
sub ecx [ ebp - 0xe8 ]
add ecx esi
lea edx [ edx + ecx * 4 ]
add edx ecx
mov ecx [ ebp - 0xe4 ]
add ecx eax
cmp edx ecx
jg r-xdata
inc [ ebp - 0x48 ]
add [ ebp - 0xd8 ] esi
mov esi [ ebp - 0xdc ]
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
ja r-xdata
sub_40a050
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ecx ecx
xor eax eax
xor edx edx
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] edx
mov ebx 0x1
lea esp [ esp ]
mov bl [ eax + esi ]
mov [ edx + edi ] bl
inc edx
inc eax
jmp r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edi ecx
shr edi 0x8
and edi 0x1
lea ebx [ edi + ebx * 2 ]
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
cmp ebx 0x2
jne r-xdata
test ecx 0x100
je r-xdata
movzx edi [ eax + esi ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
mov edi [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
pop esi
pop ebx
cmp eax ecx
jne r-xdata
inc edi
mov [ ebp - 0x8 ] edi
test cl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
test cl 0x7f
je r-xdata
mov esi 0xd00
cmp esi edi
sbb esi esi
neg esi
add edx esi
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov esi edx
sub esi edi
mov edi [ ebp + 0x10 ]
mov bl [ esi + edi ]
add esi edi
mov [ edx + edi ] bl
inc edx
inc esi
mov edi edi
mov edx 0x1
jmp r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
mov bl [ esi ]
mov [ edx + edi ] bl
inc edx
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_40a1e0
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
nop
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
cmp edi 0x2
jne r-xdata
movzx edx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add edx edi
inc eax
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax ecx
jne r-xdata
inc edx
mov [ ebp - 0x8 ] edx
add ecx ecx
mov [ ebp - 0x4 ] edx
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
mov edi ecx
shr edi 0x10
add ecx ecx
and edi 0x1
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx 0xd00
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0xc ] edi
mov edi ebx
sub edi [ ebp - 0x4 ]
inc ebx
add edi [ ebp + 0xc ]
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_40a3d0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx 0x1
lea ebx [ ebx ]
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test edx edx
je r-xdata
movzx edx [ esi + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc esi
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
inc edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + edi ]
mov ecx 0x1f
dec ecx
mov edx eax
shr edx cl
mov ebx eax
add esi 0x4
shr ebx 0x1f
and edx 0x1
jmp r-xdata
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
test ecx ecx
je r-xdata
lea ebx [ edx + ebx * 2 ]
test ebx ebx
jne r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov edx [ ebp - 0xc ]
mov edi 0xd00
cmp edi edx
sbb edi edi
neg edi
add ebx edi
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov ebx 0x1
lea ebx [ ebx ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
add ebx 0x2
test edx edx
je r-xdata
sub_40a5b0
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ecx ecx
xor eax eax
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
cmp eax [ ebp + 0xc ]
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x1000002
ja r-xdata
mov edi ecx
shr edi 0x8
and edi 0x1
lea edx [ edi + edx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov [ ebp - 0x4 ] ebx
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
cmp edx 0x2
jne r-xdata
test ecx 0x100
je r-xdata
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + esi ]
add edx 0xfffffffd
shl edx 0x8
add edi edx
inc eax
cmp edi 0xffffffff
je r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
inc edi
mov [ ebp - 0xc ] edi
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
test cl 0x7f
je r-xdata
mov ebx [ ebp - 0x4 ]
mov esi 0xd00
cmp esi edi
sbb esi esi
neg esi
add edx esi
mov [ ebp - 0x10 ] edx
add edx ebx
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
jmp r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
cmp edi ebx
ja r-xdata
test cl 0x7f
je r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
sub esi edi
mov edi [ ebp + 0x10 ]
mov dl [ esi + edi ]
add esi edi
mov [ ebx + edi ] dl
inc ebx
inc esi
nop
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov dl [ esi ]
mov [ ebx + edi ] dl
inc ebx
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_40a820
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
lea ecx [ ecx ]
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea esp [ esp ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
add ecx ecx
test cx cx
jne r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
cmp edi 0x2
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add edx edi
inc eax
cmp edx 0xffffffff
je r-xdata
add ecx ecx
mov [ ebp - 0x4 ] edx
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
inc edx
mov [ ebp - 0xc ] edx
mov edi ecx
shr edi 0x10
add ecx ecx
and edi 0x1
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx 0xd00
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0x10 ] edi
add edi ebx
cmp edi [ ebp - 0x8 ]
ja r-xdata
mov edi 0x1
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx ebx
ja r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0xc ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
lea ebx [ ebx ]
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x10 ] edx
jne r-xdata
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_40aad0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor esi esi
xor eax eax
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0xc ] edx
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx 0x1
nop
cmp eax [ ebp + 0xc ]
jae r-xdata
test edx edx
je r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
lea ebx [ edx + ebx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ebx
test ecx ecx
je r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test edx edx
je r-xdata
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ eax + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x10 ] edx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov esi [ eax + edi ]
mov ecx 0x1f
dec ecx
mov edx esi
shr edx cl
mov ebx esi
add eax 0x4
shr ebx 0x1f
and edx 0x1
jmp r-xdata
dec ecx
mov ebx esi
shr ebx cl
and ebx 0x1
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ edx + ebx * 2 ]
test edx edx
jne r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ebx 0xd00
cmp ebx edi
sbb ebx ebx
neg ebx
add edx ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
add edx ebx
cmp edx [ ebp - 0xc ]
ja r-xdata
lea ebx [ edx + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edi ebx
ja r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi [ ebp - 0x10 ]
inc ebx
add edi [ ebp + 0x10 ]
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
jmp r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
inc [ ebp - 0x4 ]
mov [ ebx + edi ] dl
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
cmp edx [ ebp - 0xc ]
jae r-xdata
lea edx [ edx + ebx * 2 ]
mov [ ebp - 0x8 ] edx
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
sub_40ada0
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push ebx
mov ebx [ ebp + 0x8 ]
add ebx eax
push esi
xor esi esi
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] ebx
cmp edx ebx
jb r-xdata
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
mov edi edi
cmp eax ebx
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi edx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x1000002
ja r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp esi eax
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc eax
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
cmp edx 0x2
jne r-xdata
test ecx 0x100
je r-xdata
cmp eax ebx
jae r-xdata
mov esi [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ eax + edi ]
add edx 0xfffffffd
shl edx 0x8
add esi edx
inc eax
cmp esi 0xffffffff
je r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
cmp eax ebx
jne r-xdata
inc esi
mov [ ebp - 0xc ] esi
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
sbb eax eax
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
test cl 0x7f
je r-xdata
mov ebx 0xd00
cmp ebx esi
sbb ebx ebx
neg ebx
add edx ebx
add edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
cmp esi ebx
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] edx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_40b050
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
push edi
mov edi [ ebp + 0x8 ]
add edi eax
xor ecx ecx
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] edi
cmp esi edi
jb r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea ebx [ ebx ]
cmp eax edi
jae r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp edi 0x1000002
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
inc eax
jmp r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
cmp edi 0x2
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ eax + edx ]
add edi 0xfffffffd
shl edi 0x8
add esi edi
inc eax
cmp esi 0xffffffff
je r-xdata
add ecx ecx
mov [ ebp - 0x8 ] esi
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
inc esi
mov [ ebp - 0xc ] esi
mov edi ecx
shr edi 0x10
add ecx ecx
and edi 0x1
test cx cx
jne r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov esi 0xd00
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add esi edi
add esi ebx
cmp esi [ ebp - 0x4 ]
ja r-xdata
mov edi 0x1
lea ebx [ ebx ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
lea ebx [ esi + 0x1 ]
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
add edi 0x2
sub_40b320
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov esi [ ebp + 0x8 ]
add esi edx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] edi
mov [ ebp + 0x8 ] esi
cmp edi esi
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
test esi esi
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp esi edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc edx
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
cmp edi 0x2
jne r-xdata
test esi esi
je r-xdata
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
movzx esi [ edx + ebx ]
add edi 0xfffffffd
shl edi 0x8
add esi edi
inc edx
cmp esi 0xffffffff
je r-xdata
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp edx eax
jne r-xdata
inc esi
mov [ ebp - 0x10 ] esi
mov eax [ edx + ebx ]
mov ecx 0x1f
dec ecx
mov esi eax
shr esi cl
mov edi eax
add edx 0x4
shr edi 0x1f
and esi 0x1
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
test ecx ecx
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
lea edi [ esi + edi * 2 ]
test edi edi
jne r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov esi 0xd00
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add edi esi
mov esi [ ebp - 0x4 ]
add esi edi
cmp esi [ ebp - 0xc ]
ja r-xdata
mov edi 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] edi
ja r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
cmp esi edx
ja r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
add edi 0x2
test esi esi
je r-xdata
sub_40b610
push ebp
mov ebp esp
mov edx [ eax ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
sub edx ebx
mov [ eax + 0x58 ] edx
mov [ eax + 0x5c ] ecx
cmp ebx ecx
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x64 ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
inc edx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x70 ]
push esi
mov esi [ eax + 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x74 ]
push edi
mov edi [ eax + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x60 ]
sub edi esi
movzx eax [ edx + ecx + 0x1 ]
dec ebx
mov [ ebp + 0x8 ] ebx
movzx ebx [ edx + ecx ]
shl ebx 0x5
xor eax ebx
movzx ebx [ edx + ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ ebp - 0x4 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ ebx + eax * 4 ]
mov [ edi + esi ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp - 0x8 ]
mov [ esi ] ebx
mov ebx [ ebp - 0xc ]
inc [ ebx + eax * 4 ]
movzx eax [ edx + ecx ]
mov ebx [ ebp - 0x10 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp + 0x8 ]
inc ecx
add esi 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
sub_40b6c0
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov [ esi ] 0x800000
mov ecx [ esi ]
mov [ esi + 0x8 ] 0x1
cmp ecx 0x800000
ja r-xdata
mov [ esi + 0x4 ] 0x800
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax 0x800
ja r-xdata
lea eax [ ecx + eax * 2 ]
cmp eax edi
ja r-xdata
push eax
call [ rwxdata ]
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
push ebx
push 0x40000
mov [ esi + 0x60 ] eax
call [ rwxdata ]
mov ecx [ esi + 0x4 ]
add esp 0x4
add ecx [ esi ]
mov [ esi + 0x64 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
cmp ebx edi
jbe r-xdata
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x64 ] edi
je r-xdata
cmp ebx edi
jbe r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x68 ] edi
je r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov [ esi + 0x68 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
cmp [ esi + 0x6c ] edi
je r-xdata
push 0x40000
mov [ esi + 0x6c ] eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x70 ] eax
cmp [ esi + 0x60 ] edi
je r-xdata
cmp eax edi
je r-xdata
push 0x40000
call [ rwxdata ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov [ esi + 0x74 ] eax
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea ebx [ eax + ecx ]
mov [ esi + 0x14 ] eax
add eax ebx
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x50 ] ebx
cmp eax 0xffffffff
jb r-xdata
mov eax [ esi + 0x60 ]
push 0x40000
mov [ esi + 0x58 ] ecx
mov ecx [ esi + 0x70 ]
add eax ebx
push edi
push ecx
mov [ esi + 0x54 ] eax
call sub_420010
mov edx [ ebp - 0x4 ]
push 0x40000
push 0xff
push edx
call sub_420010
mov [ esi + 0x44 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x5c ] edi
mov edi [ esi + 0x30 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
add esp 0x18
sub eax ecx
mov [ esi + 0x28 ] eax
je r-xdata
pop ebx
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi ]
mov [ esi + 0x4c ] 0x0
test eax eax
jne r-xdata
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
push eax
mov eax [ esi + 0x60 ]
push ecx
push eax
call sub_420a30
mov ecx [ esi + 0x28 ]
mov edx ecx
add esp 0xc
add [ edi + 0x1c ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x28 ] edx
sub ebx eax
mov [ esi + 0x4c ] ebx
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
neg eax
pop ebx
mov [ esi + 0x4c ] eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_40b8e0
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x68 ]
mov [ esi + 0x6c ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x68 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x60 ]
mov [ esi + 0x64 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x60 ] edi
pop edi
retn
push eax
call [ rwxdata ]
add esp 0x4
sub_40b960
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x1c ]
push esi
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov esi edx
movzx edx [ esi ]
inc esi
mov [ ecx + 0x1c ] esi
test edx edx
jns r-xdata
mov ecx [ eax + 0x50 ]
mov esi 0x1
add [ eax + 0x44 ] esi
cmp [ eax + 0x44 ] ecx
jne r-xdata
dec ecx
mov [ eax + 0x28 ] ecx
jmp r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x60 ]
mov [ ecx + esi ] dl
cmp ecx [ eax + 0x4 ]
jae r-xdata
add [ eax + 0x48 ] esi
cmp [ eax + 0x48 ] ecx
jne r-xdata
mov [ eax + 0x44 ] 0x0
mov esi [ eax + 0x54 ]
mov [ ecx + esi ] dl
add [ eax + 0x4c ] esi
pop esi
cmp [ eax + 0x4c ] ecx
jne r-xdata
mov [ eax + 0x48 ] 0x0
retn
mov [ eax + 0x4c ] 0x0
sub_40b9e0
mov eax [ edx + 0x58 ]
test eax eax
jne r-xdata
dec eax
mov [ edx + 0x58 ] eax
mov ecx [ edx + 0x60 ]
movzx eax [ ecx + esi ]
add ecx esi
shl eax 0x5
push edi
movzx edi [ ecx + 0x1 ]
xor eax edi
movzx edi [ ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ edx + 0x74 ]
lea eax [ ecx + eax * 4 ]
pop edi
cmp [ eax ] esi
jne r-xdata
retn
mov [ eax ] 0xffffffff
retn
sub_40ba40
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
mov ecx [ edx + 0x48 ]
inc eax
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x58 ]
push esi
mov esi [ edx + 0x60 ]
push edi
mov edi [ edx + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x8 ]
movzx eax [ esi + edi ]
movzx ebx [ esi + edi + 0x1 ]
shl eax 0x5
xor eax ebx
movzx ebx [ esi + edi + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
movzx ebx [ esi + edi ]
mov eax [ edx + 0x74 ]
cmp [ eax + ebx * 4 ] edi
jne r-xdata
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
movzx ebx [ eax ]
inc eax
mov [ edi + 0x1c ] eax
test ebx ebx
jns r-xdata
movzx edi [ esi + ecx ]
movzx eax [ esi + ecx + 0x1 ]
shl edi 0x5
xor eax edi
movzx edi [ esi + ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ edi + eax * 4 ]
mov edi [ edx + 0x68 ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x64 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + eax * 4 ] ecx
mov edi [ edx + 0x6c ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x70 ]
inc [ edi + eax * 4 ]
movzx edi [ esi + ecx ]
mov eax [ edx + 0x74 ]
mov [ eax + edi * 4 ] ecx
mov edi [ edx + 0x30 ]
mov eax [ edi + 0x1c ]
cmp eax [ edi + 0x24 ]
jae r-xdata
mov [ eax + ebx * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] bl
cmp eax [ edx + 0x4 ]
jae r-xdata
inc ecx
cmp ecx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edx + 0x50 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
mov edi [ edx + 0x54 ]
mov [ eax + edi ] bl
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi ebx
jne r-xdata
xor ecx ecx
dec [ ebp + 0x8 ]
jne r-xdata
xor edi edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ edx + 0x4c ] edi
pop edi
mov [ edx + 0x58 ] esi
pop esi
mov [ edx + 0x48 ] ecx
mov [ edx + 0x44 ] eax
pop ebx
sub_40bb90
push ebp
mov ebp esp
push ecx
mov edx [ esi + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x48 ]
add edi [ esi + 0x60 ]
cmp [ ebp + 0xc ] 0x0
mov al [ edi + edx - 0x1 ]
mov [ ebp - 0x1 ] al
jbe r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ebx
ja r-xdata
mov cl [ eax + edx ]
cmp cl [ edi + edx ]
jne r-xdata
mov eax [ esi + 0x60 ]
mov cl [ ebp - 0x1 ]
dec [ ebp + 0xc ]
add eax ebx
cmp [ eax + edx - 0x1 ] cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edi ]
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
lea ecx [ edi + 0x2 ]
add eax 0x2
lea ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
sub ecx edi
cmp ecx edx
jbe r-xdata
mov bl [ ecx ]
inc eax
cmp bl [ eax ]
je r-xdata
mov edx ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] ebx
cmp ecx [ esi + 0x28 ]
je r-xdata
mov ebx [ esi + 0x28 ]
inc ecx
add ebx edi
cmp ecx ebx
jae r-xdata
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x6c ]
cmp ecx [ eax + ebx * 4 ]
ja r-xdata
mov cl [ ecx + edi - 0x1 ]
mov [ ebp - 0x1 ] cl
sub_40bc30
mov edx [ eax + 0x48 ]
mov ecx [ eax + 0x60 ]
movzx ecx [ ecx + edx ]
mov edx [ eax + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx 0x2
cmp [ eax + 0x20 ] edx
jae r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov [ eax + 0x20 ] edx
mov [ eax + 0x34 ] ecx
sub_40bc60
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x60 ]
lea ecx [ edx + eax ]
movzx eax [ ecx ]
push edi
movzx edi [ ecx + 0x1 ]
shl eax 0x5
xor eax edi
movzx edi [ ecx + 0x2 ]
mov ebx [ esi + 0x68 ]
shl eax 0x5
xor eax edi
mov edi [ esi + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
lea edi [ edi + eax * 4 ]
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov [ ebx + edx * 4 ] edi
mov [ ebp - 0x8 ] edi
mov edi [ esi + 0x70 ]
lea eax [ edi + eax * 4 ]
mov edi [ eax ]
lea ebx [ edi + 0x1 ]
mov [ eax ] ebx
mov eax [ esi + 0x10 ]
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x28 ]
mov [ eax ] edx
movzx eax [ ecx ]
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
test eax eax
je r-xdata
movzx ecx [ ecx ]
mov edx [ esi + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
mov edi eax
mov edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jbe r-xdata
cmp eax 0x2
jae r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
inc ecx
mov [ esi + 0x24 ] 0x0
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ esi + 0x2c ] 0xffffffff
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0x6c ]
mov [ ecx + edx * 4 ] edi
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x34 ]
cmp ecx edx
jbe r-xdata
cmp ebx 0x3
jb r-xdata
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x4c ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x60 ]
movzx ebx [ edi + eax ]
lea ecx [ edi + eax ]
movzx eax [ ecx + 0x1 ]
shl ebx 0x5
xor eax ebx
movzx ebx [ ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ esi + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ esi + 0x74 ]
cmp [ ecx + eax * 4 ] edi
lea eax [ ecx + eax * 4 ]
jne r-xdata
mov eax [ esi + 0x50 ]
sub eax edx
add eax ecx
sub ecx edx
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_40bb90
add esp 0x8
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] 0xffffffff
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x24 ] eax
sub_40bde0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ eax ] 0x1
mov [ esi + 0x30 ] eax
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x7c ] edi
mov [ eax + 0x78 ] edi
mov [ eax + 0x74 ] edi
mov [ eax + 0x88 ] edi
mov [ eax + 0x84 ] edi
mov [ eax + 0x80 ] edi
mov [ eax + 0x8c ] edi
call sub_40b6c0
mov ebx eax
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
pop edi
mov [ esi + 0x18 ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_40b8e0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_40be50
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub esi eax
mov ecx esi
sub ecx eax
push ecx
mov edx ebx
call sub_40ba40
sub esi [ ebp + 0x8 ]
add esp 0x4
inc esi
jmp r-xdata
mov ecx [ ebx + 0x28 ]
inc ecx
mov [ edi + 0x4 ] ecx
mov esi ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_40b8e0
jmp r-xdata
add [ edi + 0x74 ] esi
mov eax ebx
mov [ ebx + 0x20 ] 0x1
call sub_40bc60
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov [ edi + 0xc ] eax
mov eax ebx
mov [ edi + 0x8 ] edx
call sub_40b960
xor eax eax
cmp [ ebx + 0x2c ] eax
jge r-xdata
xor eax eax
pop ebp
retn
mov ecx [ edi + 0x74 ]
cmp ecx [ edi + 0x7c ]
jbe r-xdata
mov edx [ edi + 0x1c ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x70 ]
mov [ edi + 0x18 ] edx
pop esi
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
mov edx [ edi + 0x78 ]
push 0x3
push edx
push ecx
call eax
add esp 0x10
add [ edi + 0x7c ] 0x400
sub_40bef0
push esi
xor esi esi
cmp edx 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edx esi
je r-xdata
mov [ ecx + 0x2c ] esi
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x44 ] esi
xor eax eax
pop esi
retn
cmp eax 0x8
je r-xdata
mov [ ecx + 0x34 ] esi
or eax 0xffffffff
pop esi
retn
mov [ ecx + 0x38 ] eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ecx + 0x3c ] eax
cmp eax 0x10
je r-xdata
cmp eax 0x20
jne r-xdata
sub_40bf40
mov ecx [ esi + 0x40 ]
mov eax [ esi + 0x2c ]
mov [ ecx ] al
cmp [ esi + 0x38 ] 0x10
jb r-xdata
retn
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
cmp [ esi + 0x38 ] 0x20
jne r-xdata
mov edx eax
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
sub_40bf70
mov ecx [ eax + 0x30 ]
push esi
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] edi
mov [ eax + 0x30 ] 0x1
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edi + edx * 2 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
sub_40bff0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov [ eax + 0x40 ] 0x0
retn
push esi
cmp ecx [ eax + 0x38 ]
je r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
xor ecx ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x40 ] ecx
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
add edx edx
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jne r-xdata
sub_40c0c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_40bf70
mov edi 0x1
call sub_40bf70
pop edi
pop ebp
retn
push ebx
add edi 0x2
push esi
mov esi 0x4
mov [ ebp + 0x8 ] edi
lea ecx [ ecx ]
add esi esi
cmp edi esi
jae r-xdata
shr esi 0x1
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edi [ ebp + 0x8 ]
cmp esi 0x2
ja r-xdata
sub_40c1f0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_40bf70
mov edi 0x1
call sub_40bf70
pop edi
pop ebp
retn
push ebx
push esi
mov esi 0x2
sub edi esi
add esi esi
add esi esi
cmp edi esi
jae r-xdata
mov [ ebp + 0x8 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov edi [ ebp + 0x8 ]
mov [ eax + 0x2c ] ecx
cmp esi 0x2
ja r-xdata
sub_40c390
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x6c ]
add [ esi + 0x84 ] ebx
cmp ebx [ eax + 0xc ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
add eax 0xfffffffd
push eax
push esi
call sub_40c390
mov eax [ esi + 0x54 ]
mov edx 0x3
sub edx eax
add ebx edx
add esp 0xc
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x4 ]
jbe r-xdata
mov [ eax + 0xc ] ebx
push edi
xor edi edi
mov eax esi
call sub_40bf70
mov eax [ ebp + 0x10 ]
mov ecx 0x500
cmp ecx eax
sbb edx edx
neg edx
or ecx 0xffffffff
sub ecx edx
add ebx ecx
cmp ebx 0x4
sbb edi edi
and edi ebx
mov [ ebp + 0x8 ] edi
cmp eax [ esi + 0x14 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
dec eax
shr eax 0x7
inc eax
push eax
mov eax esi
call sub_40c1f0
mov al [ ebp + 0x10 ]
mov edx [ esi + 0x44 ]
dec al
add al al
add esp 0x4
cmp edi 0x1
setbe cl
or al cl
mov [ edx ] al
inc [ esi + 0x44 ]
mov eax esi
xor edi edi
mov eax esi
call sub_40bf70
mov edi 0x1
call sub_40bf70
mov edx edi
cmp edx [ ebp + 0x8 ]
sbb edi edi
neg edi
call sub_40bf70
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x14 ] ecx
pop esi
pop ebx
pop ebp
retn
add ebx 0xfffffffc
push ebx
mov eax esi
call sub_40c0c0
mov eax [ ebp + 0x10 ]
add esp 0x4
mov [ esi + 0x14 ] eax
pop esi
pop ebx
pop ebp
retn
and edi 0x1
call sub_40bf70
pop edi
cmp ebx 0x4
jb r-xdata
sub_40c490
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov ecx [ eax + 0x6c ]
add [ eax + 0x80 ] edi
cmp edi [ ecx + 0x14 ]
jbe r-xdata
push ebx
push esi
mov ebx 0x1
mov [ ecx + 0x14 ] edi
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edx + edx + 0x1 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov esi [ ebp + 0x8 ]
mov dl [ esi ]
mov ecx [ eax + 0x44 ]
mov [ ecx ] dl
add [ eax + 0x44 ] ebx
add esi ebx
sub edi ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
sub_40c540
cmp edx 0x2
jb r-xdata
or eax 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x50 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
push esi
mov esi 0x500
cmp esi ecx
sbb esi esi
push edi
neg esi
mov edi 0xfffffffe
sub edi esi
add edx edi
pop edi
pop esi
cmp ecx [ eax + 0x14 ]
jne r-xdata
dec ecx
shr ecx 0x7
mov eax 0xa
test ecx ecx
je r-xdata
mov eax 0x3
jmp r-xdata
add eax 0x2
cmp edx 0x3
jb r-xdata
shr ecx 0x2
add eax 0x3
test ecx ecx
jne r-xdata
retn
sub edx 0x3
lea ebx [ ebx ]
add eax 0x2
shr edx 0x1
jne r-xdata
retn
sub_40c5b0
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
lea ecx [ eax - 0x1 ]
mov ebx edx
cmp ecx 0x9
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_4170d2
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax * 8 ]
push 0x90
sub esi eax
lea edx [ ebp - 0xd4 ]
push 0x0
lea esi [ esi * 4 + r--data ]
push edx
mov [ ebp - 0xdc ] esi
call sub_420010
or eax 0xffffffff
lea ecx [ ebp - 0x44 ]
push 0x40
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
lea eax [ ebx + edi ]
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov edi [ ebp + 0x8 ]
mov edx ecx
push 0x0
push edx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x68 ] ecx
call sub_420010
mov ecx [ ebp - 0x68 ]
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x68 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8c ]
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x88 ]
add esp 0x18
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x9c ] 0x8
mov [ ebp - 0x98 ] 0x1
call sub_40bef0
test eax eax
jne r-xdata
pop esi
pop edi
mov eax 0xfffffffe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x90 ] edi
mov edx 0x800
cmp eax 0x800
jae r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x16c ] edx
cmp eax 0x800000
jb r-xdata
mov edx eax
mov ecx [ ebp - 0x84 ]
mov edi 0xffff
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x164 ] edi
cmp ecx 0xffffffff
je r-xdata
mov eax 0x800000
cmp ebx eax
jae r-xdata
mov eax 0x800000
cmp ecx 0x800000
jae r-xdata
cmp edx 0x8
jb r-xdata
mov eax ebx
cmp ebx 0x100
jae r-xdata
mov [ ebp - 0x170 ] eax
mov eax ecx
cmp eax 0x100
jb r-xdata
mov [ ebp - 0x170 ] eax
mov eax 0x100
mov eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x170 ]
lea eax [ ebp - 0xd4 ]
call sub_40bde0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x164 ] edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0x15c ]
jae r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov [ ebp - 0x15c ] eax
push 0x0
xor eax eax
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] 0x1
call sub_40be50
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push 0xffffffff
push 0x0
push 0x0
call edx
add esp 0x10
cmp [ ebp - 0xd0 ] eax
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_40c490
xor edi edi
call sub_40bf70
push 0x1000000
call sub_40c1f0
mov eax [ ebp - 0x90 ]
mov [ eax ] 0xff
inc [ ebp - 0x90 ]
add esp 0x8
lea eax [ ebp - 0xd4 ]
call sub_40bff0
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
mov edx [ ebp - 0xf0 ]
mov ecx eax
mov [ edx ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xcc ]
jmp r-xdata
lea esi [ ebp - 0x170 ]
call sub_40b8e0
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push 0x4
push ecx
mov ecx [ ebp - 0x60 ]
push ecx
call edx
add esp 0x10
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
cmp [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xc8 ]
mov ebx edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ecx
jne r-xdata
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xe0 ] edx
mov ecx [ esi + 0x10 ]
mov eax 0x1
add [ ebp - 0xd8 ] eax
push 0x0
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x160 ] ecx
call sub_40be50
add esp 0x4
jne r-xdata
cmp ecx [ ebp - 0x84 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
mov eax [ ebp - 0xdc ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_40c490
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ebx
push ecx
mov [ ebp - 0xd8 ] 0x0
call sub_40c390
mov edx [ ebp - 0xdc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
inc esi
mov eax ebx
push esi
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_40be50
mov esi [ ebp - 0xdc ]
add esp 0x14
jmp r-xdata
cmp edi [ eax + 0x8 ]
jae r-xdata
mov edi [ ebp - 0xcc ]
cmp ecx [ ebp - 0xc0 ]
je r-xdata
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_40c540
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xdc ]
mov eax [ eax ]
dec edi
mov [ ebp - 0xec ] eax
cmp eax edi
jbe r-xdata
cmp [ ebp - 0xec ] esi
jbe r-xdata
mov [ ebp - 0xec ] edi
mov [ ebp - 0xe4 ] esi
jmp r-xdata
cmp [ ebp - 0xd0 ] ebx
jbe r-xdata
mov eax [ ebp - 0xdc ]
cmp ebx [ eax + 0x4 ]
jb r-xdata
mov edx [ eax + 0x10 ]
mov [ ebp - 0x160 ] edx
mov ecx [ eax + 0x10 ]
shr ecx 0x2
mov [ ebp - 0x160 ] ecx
jmp r-xdata
mov ebx [ ebp - 0xe8 ]
cmp esi [ ebp - 0xec ]
jb r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_40c540
test eax eax
js r-xdata
push 0x0
mov eax 0x1
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_40be50
mov edi [ ebp - 0xcc ]
add [ ebp - 0xe4 ] 0x9
add esp 0x4
inc esi
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov ecx edi
sub ecx [ ebp - 0xe8 ]
add ecx esi
lea edx [ edx + ecx * 4 ]
add edx ecx
mov ecx [ ebp - 0xe4 ]
add ecx eax
cmp edx ecx
jg r-xdata
inc [ ebp - 0x48 ]
add [ ebp - 0xd8 ] esi
mov esi [ ebp - 0xdc ]
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
ja r-xdata
sub_40cb00
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov edx 0x1
nop
mov dl [ eax + edi ]
mov esi [ ebp + 0x10 ]
mov [ ebx + esi ] dl
inc ebx
inc eax
jmp r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
mov ebx [ ebp - 0x8 ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
cmp eax ecx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0x8 ] ebx
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
test dl 0x7f
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov esi edi
sub esi ebx
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x10 ]
mov bl [ esi + edx ]
add esi edx
mov [ edi + edx ] bl
inc edi
inc esi
mov edi edi
mov edx 0x1
lea ecx [ ecx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 ]
test edx edx
jne r-xdata
mov bl [ esi ]
mov [ edi + edx ] bl
inc edi
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_40ccd0
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
nop
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp edi 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add ecx edi
inc eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
add edx edx
mov [ ebp - 0x4 ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax ecx
jne r-xdata
mov edi ecx
not edi
shr ecx 0x1
and edi 0x1
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
mov edx 0x500
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0xc ] edi
mov edi ebx
sub edi [ ebp - 0x4 ]
inc ebx
add edi [ ebp + 0xc ]
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
jmp r-xdata
mov edi 0x1
lea ecx [ ecx ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_40cf00
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx 0x1
lea ebx [ ebx ]
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
mov [ ebp - 0x4 ] ebx
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx ebx [ esi + edi ]
add edx 0xfffffffd
shl edx 0x8
add ebx edx
inc esi
cmp ebx 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov edx ebx
not edx
shr ebx 0x1
and edx 0x1
inc ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov eax [ esi + edi ]
mov ecx 0x1f
dec ecx
mov ebx eax
shr ebx cl
mov edx eax
add esi 0x4
shr edx 0x1f
and ebx 0x1
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
lea ebx [ ebx + edx * 2 ]
test ebx ebx
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov edi 0x500
cmp edi edx
sbb edi edi
neg edi
add ebx edi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x10 ] edx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
add ebx 0x2
test edx edx
je r-xdata
sub_40d120
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
cmp eax [ ebp + 0xc ]
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov ebx [ ebp + 0xc ]
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
mov ebx [ ebp + 0x10 ]
mov [ esi + ebx ] dl
inc esi
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov [ ebp - 0x4 ] esi
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edx
cmp eax ebx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0xc ] ebx
test dl 0x7f
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov [ ebp - 0x10 ] edx
add edx edi
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
mov edi edi
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
pop edi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov esi edi
sub esi ebx
mov bl [ esi + edx ]
add esi edx
mov [ edi + edx ] bl
inc edi
inc esi
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov bl [ esi ]
mov [ edi + edx ] bl
inc edi
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_40d3e0
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
lea ecx [ ecx ]
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea esp [ esp ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp edi 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add edx edx
mov [ ebp - 0x4 ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add ecx edi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
mov edi ecx
not edi
shr ecx 0x1
and edi 0x1
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx 0x500
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0x10 ] edi
add edi ebx
cmp edi [ ebp - 0x8 ]
ja r-xdata
mov edi 0x1
mov edi edi
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx ebx
ja r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0xc ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x10 ] edx
jne r-xdata
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_40d6d0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] edx
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx 0x1
nop
cmp esi [ ebp + 0xc ]
jae r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x1000002
ja r-xdata
lea edx [ edx + ebx * 2 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
cmp esi ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp esi ebx
jae r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov ebx [ ebp - 0x8 ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
movzx ebx [ esi + edi ]
add edx 0xfffffffd
shl edx 0x8
add ebx edx
inc esi
cmp ebx 0xffffffff
je r-xdata
mov eax [ esi + edi ]
mov ecx 0x1f
dec ecx
mov ebx eax
shr ebx cl
mov edx eax
add esi 0x4
shr edx 0x1f
and ebx 0x1
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov edx ebx
not edx
shr ebx 0x1
and edx 0x1
inc ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
mov edi [ ebp - 0x8 ]
mov ebx 0x500
cmp ebx edi
sbb ebx ebx
neg ebx
add edx ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
add edx ebx
cmp edx [ ebp - 0x10 ]
ja r-xdata
lea ebx [ edx + 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edi ebx
ja r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi [ ebp - 0x8 ]
inc ebx
add edi [ ebp + 0x10 ]
mov dl [ edi ]
mov [ ebp - 0x8 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x8 ]
mov [ ebx + edi - 0x1 ] dl
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
inc [ ebp - 0x8 ]
mov [ ebx + edi ] dl
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0x10 ]
jae r-xdata
lea edx [ edx + ebx * 2 ]
mov [ ebp - 0xc ] edx
cmp esi [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
test edx edx
je r-xdata
sub_40d9f0
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi eax
xor esi esi
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] edi
cmp edx edi
jb r-xdata
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
mov edi edi
cmp eax edi
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax edi
jae r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc eax
jmp r-xdata
movzx edx [ eax + ebx ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax edi
jae r-xdata
mov edi [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ eax + ebx ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + ebx ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
cmp eax edi
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
test dl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
mov esi 0x500
cmp esi edi
sbb esi esi
neg esi
add edx esi
add edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
lea esp [ esp ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp edi esi
ja r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
ja r-xdata
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] edx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_40dcd0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
push edi
mov edi [ ebp + 0x8 ]
add edi eax
xor ecx ecx
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] edi
cmp esi edi
jb r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea ebx [ ebx ]
cmp eax edi
jae r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp edi 0x1000002
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
add esi esi
test si si
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
inc eax
jmp r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
cmp edi 0x2
jne r-xdata
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add esi esi
mov [ ebp - 0x8 ] ecx
test si si
je r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edx ]
add edi 0xfffffffd
shl edi 0x8
add ecx edi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edi esi
shr edi 0x10
and edi 0x1
jmp r-xdata
mov edi esi
shr edi 0x10
and edi 0x1
jmp r-xdata
lea esi [ ecx + ecx ]
test si si
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
mov edi ecx
not edi
shr ecx 0x1
and edi 0x1
inc ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov esi 0x500
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add esi edi
add esi ebx
cmp esi [ ebp - 0x4 ]
ja r-xdata
mov edi 0x1
mov edi edi
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
lea ebx [ esi + 0x1 ]
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
add edi 0x2
sub_40dfe0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp - 0xc ]
add esi edx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp + 0x8 ] esi
cmp edi esi
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
test esi esi
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp esi edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
lea edi [ esi + edi * 2 ]
mov [ ebp - 0x8 ] edi
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc edx
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
cmp edi 0x2
jne r-xdata
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
shr esi 0x1f
mov ecx 0x1f
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x8 ]
movzx edi [ edx + ebx ]
add esi 0xfffffffd
shl esi 0x8
add edi esi
inc edx
cmp edi 0xffffffff
je r-xdata
mov eax [ edx + ebx ]
mov ecx 0x1f
dec ecx
mov edi eax
shr edi cl
mov esi eax
add edx 0x4
shr esi 0x1f
and edi 0x1
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp edx eax
jne r-xdata
mov esi edi
not esi
shr edi 0x1
and esi 0x1
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
lea edi [ edi + esi * 2 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov edi eax
add edx 0x4
mov ecx 0x1f
shr edi 0x1f
dec ecx
mov edi eax
shr edi cl
and edi 0x1
jmp r-xdata
mov esi 0x500
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add edi esi
mov esi [ ebp - 0x4 ]
add esi edi
cmp esi [ ebp - 0xc ]
ja r-xdata
mov edi 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] edi
ja r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
cmp esi edx
ja r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
add edi 0x2
test esi esi
je r-xdata
sub_40e310
push ebp
mov ebp esp
mov edx [ eax ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
sub edx ebx
mov [ eax + 0x58 ] edx
mov [ eax + 0x5c ] ecx
cmp ebx ecx
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x64 ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
inc edx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x70 ]
push esi
mov esi [ eax + 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x74 ]
push edi
mov edi [ eax + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x60 ]
sub edi esi
movzx eax [ edx + ecx + 0x1 ]
dec ebx
mov [ ebp + 0x8 ] ebx
movzx ebx [ edx + ecx ]
shl ebx 0x5
xor eax ebx
movzx ebx [ edx + ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ ebp - 0x4 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ ebx + eax * 4 ]
mov [ edi + esi ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp - 0x8 ]
mov [ esi ] ebx
mov ebx [ ebp - 0xc ]
inc [ ebx + eax * 4 ]
movzx eax [ edx + ecx ]
mov ebx [ ebp - 0x10 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp + 0x8 ]
inc ecx
add esi 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
sub_40e3c0
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov [ esi ] 0x800000
mov ecx [ esi ]
mov [ esi + 0x8 ] 0x1
cmp ecx 0x800000
ja r-xdata
mov [ esi + 0x4 ] 0x800
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax 0x800
ja r-xdata
lea eax [ ecx + eax * 2 ]
cmp eax edi
ja r-xdata
push eax
call [ rwxdata ]
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
push ebx
push 0x40000
mov [ esi + 0x60 ] eax
call [ rwxdata ]
mov ecx [ esi + 0x4 ]
add esp 0x4
add ecx [ esi ]
mov [ esi + 0x64 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
cmp ebx edi
jbe r-xdata
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x64 ] edi
je r-xdata
cmp ebx edi
jbe r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x68 ] edi
je r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov [ esi + 0x68 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
cmp [ esi + 0x6c ] edi
je r-xdata
push 0x40000
mov [ esi + 0x6c ] eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x70 ] eax
cmp [ esi + 0x60 ] edi
je r-xdata
cmp eax edi
je r-xdata
push 0x40000
call [ rwxdata ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov [ esi + 0x74 ] eax
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea ebx [ eax + ecx ]
mov [ esi + 0x14 ] eax
add eax ebx
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x50 ] ebx
cmp eax 0xffffffff
jb r-xdata
mov eax [ esi + 0x60 ]
push 0x40000
mov [ esi + 0x58 ] ecx
mov ecx [ esi + 0x70 ]
add eax ebx
push edi
push ecx
mov [ esi + 0x54 ] eax
call sub_420010
mov edx [ ebp - 0x4 ]
push 0x40000
push 0xff
push edx
call sub_420010
mov [ esi + 0x44 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x5c ] edi
mov edi [ esi + 0x30 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
add esp 0x18
sub eax ecx
mov [ esi + 0x28 ] eax
je r-xdata
pop ebx
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi ]
mov [ esi + 0x4c ] 0x0
test eax eax
jne r-xdata
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
push eax
mov eax [ esi + 0x60 ]
push ecx
push eax
call sub_420a30
mov ecx [ esi + 0x28 ]
mov edx ecx
add esp 0xc
add [ edi + 0x1c ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x28 ] edx
sub ebx eax
mov [ esi + 0x4c ] ebx
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
neg eax
pop ebx
mov [ esi + 0x4c ] eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_40e5e0
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x68 ]
mov [ esi + 0x6c ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x68 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x60 ]
mov [ esi + 0x64 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x60 ] edi
pop edi
retn
push eax
call [ rwxdata ]
add esp 0x4
sub_40e660
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x1c ]
push esi
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov esi edx
movzx edx [ esi ]
inc esi
mov [ ecx + 0x1c ] esi
test edx edx
jns r-xdata
mov ecx [ eax + 0x50 ]
mov esi 0x1
add [ eax + 0x44 ] esi
cmp [ eax + 0x44 ] ecx
jne r-xdata
dec ecx
mov [ eax + 0x28 ] ecx
jmp r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x60 ]
mov [ ecx + esi ] dl
cmp ecx [ eax + 0x4 ]
jae r-xdata
add [ eax + 0x48 ] esi
cmp [ eax + 0x48 ] ecx
jne r-xdata
mov [ eax + 0x44 ] 0x0
mov esi [ eax + 0x54 ]
mov [ ecx + esi ] dl
add [ eax + 0x4c ] esi
pop esi
cmp [ eax + 0x4c ] ecx
jne r-xdata
mov [ eax + 0x48 ] 0x0
retn
mov [ eax + 0x4c ] 0x0
sub_40e6e0
mov eax [ edx + 0x58 ]
test eax eax
jne r-xdata
dec eax
mov [ edx + 0x58 ] eax
mov ecx [ edx + 0x60 ]
movzx eax [ ecx + esi ]
add ecx esi
shl eax 0x5
push edi
movzx edi [ ecx + 0x1 ]
xor eax edi
movzx edi [ ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ edx + 0x74 ]
lea eax [ ecx + eax * 4 ]
pop edi
cmp [ eax ] esi
jne r-xdata
retn
mov [ eax ] 0xffffffff
retn
sub_40e740
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
mov ecx [ edx + 0x48 ]
inc eax
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x58 ]
push esi
mov esi [ edx + 0x60 ]
push edi
mov edi [ edx + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x8 ]
movzx eax [ esi + edi ]
movzx ebx [ esi + edi + 0x1 ]
shl eax 0x5
xor eax ebx
movzx ebx [ esi + edi + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
movzx ebx [ esi + edi ]
mov eax [ edx + 0x74 ]
cmp [ eax + ebx * 4 ] edi
jne r-xdata
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
movzx ebx [ eax ]
inc eax
mov [ edi + 0x1c ] eax
test ebx ebx
jns r-xdata
movzx edi [ esi + ecx ]
movzx eax [ esi + ecx + 0x1 ]
shl edi 0x5
xor eax edi
movzx edi [ esi + ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ edi + eax * 4 ]
mov edi [ edx + 0x68 ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x64 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + eax * 4 ] ecx
mov edi [ edx + 0x6c ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x70 ]
inc [ edi + eax * 4 ]
movzx edi [ esi + ecx ]
mov eax [ edx + 0x74 ]
mov [ eax + edi * 4 ] ecx
mov edi [ edx + 0x30 ]
mov eax [ edi + 0x1c ]
cmp eax [ edi + 0x24 ]
jae r-xdata
mov [ eax + ebx * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] bl
cmp eax [ edx + 0x4 ]
jae r-xdata
inc ecx
cmp ecx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edx + 0x50 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
mov edi [ edx + 0x54 ]
mov [ eax + edi ] bl
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi ebx
jne r-xdata
xor ecx ecx
dec [ ebp + 0x8 ]
jne r-xdata
xor edi edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ edx + 0x4c ] edi
pop edi
mov [ edx + 0x58 ] esi
pop esi
mov [ edx + 0x48 ] ecx
mov [ edx + 0x44 ] eax
pop ebx
sub_40e890
push ebp
mov ebp esp
push ecx
mov edx [ esi + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x48 ]
add edi [ esi + 0x60 ]
cmp [ ebp + 0xc ] 0x0
mov al [ edi + edx - 0x1 ]
mov [ ebp - 0x1 ] al
jbe r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ebx
ja r-xdata
mov cl [ eax + edx ]
cmp cl [ edi + edx ]
jne r-xdata
mov eax [ esi + 0x60 ]
mov cl [ ebp - 0x1 ]
dec [ ebp + 0xc ]
add eax ebx
cmp [ eax + edx - 0x1 ] cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edi ]
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
lea ecx [ edi + 0x2 ]
add eax 0x2
lea ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
sub ecx edi
cmp ecx edx
jbe r-xdata
mov bl [ ecx ]
inc eax
cmp bl [ eax ]
je r-xdata
mov edx ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] ebx
cmp ecx [ esi + 0x28 ]
je r-xdata
mov ebx [ esi + 0x28 ]
inc ecx
add ebx edi
cmp ecx ebx
jae r-xdata
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x6c ]
cmp ecx [ eax + ebx * 4 ]
ja r-xdata
mov cl [ ecx + edi - 0x1 ]
mov [ ebp - 0x1 ] cl
sub_40e930
mov edx [ eax + 0x48 ]
mov ecx [ eax + 0x60 ]
movzx ecx [ ecx + edx ]
mov edx [ eax + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx 0x2
cmp [ eax + 0x20 ] edx
jae r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov [ eax + 0x20 ] edx
mov [ eax + 0x34 ] ecx
sub_40e960
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x60 ]
lea ecx [ edx + eax ]
movzx eax [ ecx ]
push edi
movzx edi [ ecx + 0x1 ]
shl eax 0x5
xor eax edi
movzx edi [ ecx + 0x2 ]
mov ebx [ esi + 0x68 ]
shl eax 0x5
xor eax edi
mov edi [ esi + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
lea edi [ edi + eax * 4 ]
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov [ ebx + edx * 4 ] edi
mov [ ebp - 0x8 ] edi
mov edi [ esi + 0x70 ]
lea eax [ edi + eax * 4 ]
mov edi [ eax ]
lea ebx [ edi + 0x1 ]
mov [ eax ] ebx
mov eax [ esi + 0x10 ]
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x28 ]
mov [ eax ] edx
movzx eax [ ecx ]
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
test eax eax
je r-xdata
movzx ecx [ ecx ]
mov edx [ esi + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
mov edi eax
mov edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jbe r-xdata
cmp eax 0x2
jae r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
inc ecx
mov [ esi + 0x24 ] 0x0
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ esi + 0x2c ] 0xffffffff
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0x6c ]
mov [ ecx + edx * 4 ] edi
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x34 ]
cmp ecx edx
jbe r-xdata
cmp ebx 0x3
jb r-xdata
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x4c ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x60 ]
movzx ebx [ edi + eax ]
lea ecx [ edi + eax ]
movzx eax [ ecx + 0x1 ]
shl ebx 0x5
xor eax ebx
movzx ebx [ ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ esi + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ esi + 0x74 ]
cmp [ ecx + eax * 4 ] edi
lea eax [ ecx + eax * 4 ]
jne r-xdata
mov eax [ esi + 0x50 ]
sub eax edx
add eax ecx
sub ecx edx
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_40e890
add esp 0x8
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] 0xffffffff
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x24 ] eax
sub_40eae0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ eax ] 0x1
mov [ esi + 0x30 ] eax
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x7c ] edi
mov [ eax + 0x78 ] edi
mov [ eax + 0x74 ] edi
mov [ eax + 0x88 ] edi
mov [ eax + 0x84 ] edi
mov [ eax + 0x80 ] edi
mov [ eax + 0x8c ] edi
call sub_40e3c0
mov ebx eax
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
pop edi
mov [ esi + 0x18 ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_40e5e0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_40eb50
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub esi eax
mov ecx esi
sub ecx eax
push ecx
mov edx ebx
call sub_40e740
sub esi [ ebp + 0x8 ]
add esp 0x4
inc esi
jmp r-xdata
mov ecx [ ebx + 0x28 ]
inc ecx
mov [ edi + 0x4 ] ecx
mov esi ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_40e5e0
jmp r-xdata
add [ edi + 0x74 ] esi
mov eax ebx
mov [ ebx + 0x20 ] 0x1
call sub_40e960
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov [ edi + 0xc ] eax
mov eax ebx
mov [ edi + 0x8 ] edx
call sub_40e660
xor eax eax
cmp [ ebx + 0x2c ] eax
jge r-xdata
xor eax eax
pop ebp
retn
mov ecx [ edi + 0x74 ]
cmp ecx [ edi + 0x7c ]
jbe r-xdata
mov edx [ edi + 0x1c ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x70 ]
mov [ edi + 0x18 ] edx
pop esi
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
mov edx [ edi + 0x78 ]
push 0x3
push edx
push ecx
call eax
add esp 0x10
add [ edi + 0x7c ] 0x400
sub_40ebf0
push esi
xor esi esi
cmp edx 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edx esi
je r-xdata
mov [ ecx + 0x2c ] esi
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x44 ] esi
xor eax eax
pop esi
retn
cmp eax 0x8
je r-xdata
mov [ ecx + 0x34 ] esi
or eax 0xffffffff
pop esi
retn
mov [ ecx + 0x38 ] eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ecx + 0x3c ] eax
cmp eax 0x10
je r-xdata
cmp eax 0x20
jne r-xdata
sub_40ec40
mov ecx [ esi + 0x40 ]
mov eax [ esi + 0x2c ]
mov [ ecx ] al
cmp [ esi + 0x38 ] 0x10
jb r-xdata
retn
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
cmp [ esi + 0x38 ] 0x20
jne r-xdata
mov edx eax
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
sub_40ec70
mov ecx [ eax + 0x30 ]
push esi
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] edi
mov [ eax + 0x30 ] 0x1
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edi + edx * 2 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
sub_40ecf0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov [ eax + 0x40 ] 0x0
retn
push esi
cmp ecx [ eax + 0x38 ]
je r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
xor ecx ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x40 ] ecx
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
add edx edx
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jne r-xdata
sub_40edc0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_40ec70
mov edi 0x1
call sub_40ec70
pop edi
pop ebp
retn
push ebx
add edi 0x2
push esi
mov esi 0x4
mov [ ebp + 0x8 ] edi
lea ecx [ ecx ]
add esi esi
cmp edi esi
jae r-xdata
shr esi 0x1
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edi [ ebp + 0x8 ]
cmp esi 0x2
ja r-xdata
sub_40eef0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_40ec70
mov edi 0x1
call sub_40ec70
pop edi
pop ebp
retn
push ebx
push esi
mov esi 0x2
sub edi esi
add esi esi
add esi esi
cmp edi esi
jae r-xdata
mov [ ebp + 0x8 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov edi [ ebp + 0x8 ]
mov [ eax + 0x2c ] ecx
cmp esi 0x2
ja r-xdata
sub_40f090
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
push edi
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x6c ]
add [ esi + 0x84 ] ebx
cmp ebx [ eax + 0xc ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
add eax 0xfffffffd
push eax
push esi
call sub_40f090
mov eax [ esi + 0x54 ]
mov edx 0x3
sub edx eax
add ebx edx
add esp 0xc
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x4 ]
jbe r-xdata
mov [ eax + 0xc ] ebx
xor edi edi
mov eax esi
call sub_40ec70
mov ecx [ ebp + 0x10 ]
mov eax 0x500
cmp eax ecx
sbb edx edx
or eax 0xffffffff
neg edx
sub eax edx
add ebx eax
mov edx 0x2
cmp edx ebx
sbb eax eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax esi
cmp ecx [ esi + 0x14 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
dec ecx
shr ecx 0x7
inc ecx
push ecx
call sub_40eef0
mov al [ ebp + 0x10 ]
mov cl [ ebp + 0x8 ]
mov edx [ esi + 0x44 ]
dec al
add al al
xor cl 0x1
or al cl
add esp 0x4
mov [ edx ] al
inc [ esi + 0x44 ]
call sub_40ec70
mov edi 0x1
call sub_40ec70
mov edi [ ebp + 0x8 ]
call sub_40ec70
jmp r-xdata
cmp ebx 0x4
ja r-xdata
lea edi [ ebx - 0x1 ]
call sub_40ec70
mov eax [ ebp + 0x10 ]
pop edi
mov [ esi + 0x14 ] eax
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
mov eax esi
je r-xdata
xor edi edi
call sub_40ec70
add ebx 0xfffffffb
push ebx
call sub_40edc0
mov edx [ ebp + 0x10 ]
add esp 0x4
pop edi
mov [ esi + 0x14 ] edx
pop esi
pop ebx
pop ebp
retn
mov edi 0x1
call sub_40ec70
lea edi [ ebx - 0x3 ]
call sub_40ec70
mov ecx [ ebp + 0x10 ]
pop edi
mov [ esi + 0x14 ] ecx
pop esi
pop ebx
pop ebp
retn
sub_40f1b0
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov ecx [ eax + 0x6c ]
add [ eax + 0x80 ] edi
cmp edi [ ecx + 0x14 ]
jbe r-xdata
push ebx
push esi
mov ebx 0x1
mov [ ecx + 0x14 ] edi
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edx + edx + 0x1 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov esi [ ebp + 0x8 ]
mov dl [ esi ]
mov ecx [ eax + 0x44 ]
mov [ ecx ] dl
add [ eax + 0x44 ] ebx
add esi ebx
sub edi ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
sub_40f260
cmp edx 0x2
jb r-xdata
or eax 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x50 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
push esi
mov esi 0x500
cmp esi ecx
sbb esi esi
push edi
neg esi
mov edi 0xfffffffe
sub edi esi
add edx edi
pop edi
pop esi
cmp ecx [ eax + 0x14 ]
jne r-xdata
dec ecx
shr ecx 0x7
mov eax 0xa
test ecx ecx
je r-xdata
mov eax 0x3
jmp r-xdata
add eax 0x2
cmp edx 0x2
jb r-xdata
shr ecx 0x2
add eax 0x3
test ecx ecx
jne r-xdata
retn
cmp edx 0x4
jae r-xdata
sub edx 0x4
inc eax
retn
add eax 0x2
shr edx 0x1
jne r-xdata
retn
sub_40f2d0
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
lea ecx [ eax - 0x1 ]
mov ebx edx
cmp ecx 0x9
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_4170d2
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax * 8 ]
push 0x90
sub esi eax
lea edx [ ebp - 0xd4 ]
push 0x0
lea esi [ esi * 4 + r--data ]
push edx
mov [ ebp - 0xdc ] esi
call sub_420010
or eax 0xffffffff
lea ecx [ ebp - 0x44 ]
push 0x40
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
lea eax [ ebx + edi ]
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov edi [ ebp + 0x8 ]
mov edx ecx
push 0x0
push edx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x68 ] ecx
call sub_420010
mov ecx [ ebp - 0x68 ]
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x68 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8c ]
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x88 ]
add esp 0x18
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x9c ] 0x8
mov [ ebp - 0x98 ] 0x1
call sub_40ebf0
test eax eax
jne r-xdata
pop esi
pop edi
mov eax 0xfffffffe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x90 ] edi
mov edx 0x800
cmp eax 0x800
jae r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x16c ] edx
cmp eax 0x800000
jb r-xdata
mov edx eax
mov ecx [ ebp - 0x84 ]
mov edi 0xffff
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x164 ] edi
cmp ecx 0xffffffff
je r-xdata
mov eax 0x800000
cmp ebx eax
jae r-xdata
mov eax 0x800000
cmp ecx 0x800000
jae r-xdata
cmp edx 0x8
jb r-xdata
mov eax ebx
cmp ebx 0x100
jae r-xdata
mov [ ebp - 0x170 ] eax
mov eax ecx
cmp eax 0x100
jb r-xdata
mov [ ebp - 0x170 ] eax
mov eax 0x100
mov eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x170 ]
lea eax [ ebp - 0xd4 ]
call sub_40eae0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x164 ] edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0x15c ]
jae r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov [ ebp - 0x15c ] eax
push 0x0
xor eax eax
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] 0x1
call sub_40eb50
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push 0xffffffff
push 0x0
push 0x0
call edx
add esp 0x10
cmp [ ebp - 0xd0 ] eax
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_40f1b0
xor edi edi
call sub_40ec70
push 0x1000000
call sub_40eef0
mov eax [ ebp - 0x90 ]
mov [ eax ] 0xff
inc [ ebp - 0x90 ]
add esp 0x8
lea eax [ ebp - 0xd4 ]
call sub_40ecf0
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
mov edx [ ebp - 0xf0 ]
mov ecx eax
mov [ edx ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xcc ]
jmp r-xdata
lea esi [ ebp - 0x170 ]
call sub_40e5e0
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push 0x4
push ecx
mov ecx [ ebp - 0x60 ]
push ecx
call edx
add esp 0x10
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
cmp [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xc8 ]
mov ebx edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ecx
jne r-xdata
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xe0 ] edx
mov ecx [ esi + 0x10 ]
mov eax 0x1
add [ ebp - 0xd8 ] eax
push 0x0
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x160 ] ecx
call sub_40eb50
add esp 0x4
jne r-xdata
cmp ecx [ ebp - 0x84 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
mov eax [ ebp - 0xdc ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_40f1b0
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ebx
push ecx
mov [ ebp - 0xd8 ] 0x0
call sub_40f090
mov edx [ ebp - 0xdc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
inc esi
mov eax ebx
push esi
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_40eb50
mov esi [ ebp - 0xdc ]
add esp 0x14
jmp r-xdata
cmp edi [ eax + 0x8 ]
jae r-xdata
mov edi [ ebp - 0xcc ]
cmp ecx [ ebp - 0xc0 ]
je r-xdata
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_40f260
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xdc ]
mov eax [ eax ]
dec edi
mov [ ebp - 0xec ] eax
cmp eax edi
jbe r-xdata
cmp [ ebp - 0xec ] esi
jbe r-xdata
mov [ ebp - 0xec ] edi
mov [ ebp - 0xe4 ] esi
jmp r-xdata
cmp [ ebp - 0xd0 ] ebx
jbe r-xdata
mov eax [ ebp - 0xdc ]
cmp ebx [ eax + 0x4 ]
jb r-xdata
mov edx [ eax + 0x10 ]
mov [ ebp - 0x160 ] edx
mov ecx [ eax + 0x10 ]
shr ecx 0x2
mov [ ebp - 0x160 ] ecx
jmp r-xdata
mov ebx [ ebp - 0xe8 ]
cmp esi [ ebp - 0xec ]
jb r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_40f260
test eax eax
js r-xdata
push 0x0
mov eax 0x1
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_40eb50
mov edi [ ebp - 0xcc ]
add [ ebp - 0xe4 ] 0x9
add esp 0x4
inc esi
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov ecx edi
sub ecx [ ebp - 0xe8 ]
add ecx esi
lea edx [ edx + ecx * 4 ]
add edx ecx
mov ecx [ ebp - 0xe4 ]
add ecx eax
cmp edx ecx
jg r-xdata
inc [ ebp - 0x48 ]
add [ ebp - 0xd8 ] esi
mov esi [ ebp - 0xdc ]
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
ja r-xdata
sub_40f820
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov edx 0x1
nop
mov dl [ eax + edi ]
mov esi [ ebp + 0x10 ]
mov [ ebx + esi ] dl
inc ebx
inc eax
jmp r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
mov ebx [ ebp - 0x8 ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
cmp eax ecx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0x8 ] ebx
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
test dl 0x7f
je r-xdata
test dl 0x7f
je r-xdata
test esi esi
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc eax
inc edx
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc edx
jmp r-xdata
mov edx 0x1
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov esi edi
sub esi ebx
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x10 ]
mov bl [ esi + edx ]
add esi edx
mov [ edi + edx ] bl
inc edi
inc esi
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
jmp r-xdata
add ecx ecx
mov edx ecx
shr edx 0x8
and edx 0x1
jmp r-xdata
mov bl [ esi ]
mov [ edi + edx ] bl
inc edi
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
add edx 0x3
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
sub_40fa40
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor ecx ecx
xor eax eax
xor edi edi
mov [ ebp - 0xc ] 0x1
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov [ ebp - 0x4 ] edi
mov edi 0x1
mov dl [ eax + esi ]
mov ebx [ ebp + 0xc ]
mov [ edi + ebx ] dl
inc edi
inc eax
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea ebx [ edx + edi * 2 ]
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
movzx edi [ eax + esi ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
add edx edx
mov [ ebp - 0x8 ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax ecx
jne r-xdata
mov ecx edi
not ecx
shr edi 0x1
and ecx 0x1
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
test cx cx
jne r-xdata
test cx cx
jne r-xdata
test ecx ecx
lea ecx [ edx + edx ]
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x1 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
add ecx ecx
test cx cx
jne r-xdata
mov edx 0x500
cmp edx [ ebp - 0x8 ]
sbb edx edx
neg edx
add edi edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edi
mov edi edx
sub edi [ ebp - 0x8 ]
inc edx
add edi [ ebp + 0xc ]
mov bl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ edx + edi - 0x1 ] bl
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x3 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi [ ebp - 0x4 ]
mov bl [ edi ]
mov edi [ ebp + 0xc ]
mov [ edx + edi ] bl
mov edi 0x1
add [ ebp - 0x4 ] edi
add edx edi
sub [ ebp - 0x10 ] edi
jne r-xdata
mov [ ebp - 0x4 ] edx
mov edi edx
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x3
sub_40fcc0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx 0x1
lea ebx [ ebx ]
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx edx [ esi + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc esi
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov ebx edx
not ebx
shr edx 0x1
and ebx 0x1
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
jmp r-xdata
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edi eax
add esi 0x4
shr edi 0x1f
mov ecx 0x1f
lea ebx [ edi + 0x1 ]
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov ebx 0x1
lea esp [ esp ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
mov edi 0x500
cmp edi edx
sbb edi edi
neg edi
add ebx edi
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edi eax
add esi 0x4
shr edi 0x1f
mov ecx 0x1f
lea ebx [ edi + 0x3 ]
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
lea ebx [ edi + 0x3 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov edx [ ebp - 0xc ]
add ebx 0x3
test edx edx
je r-xdata
sub_40ff20
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
cmp eax [ ebp + 0xc ]
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov ebx [ ebp + 0xc ]
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
mov ebx [ ebp + 0x10 ]
mov [ esi + ebx ] dl
inc esi
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov [ ebp - 0x4 ] esi
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edx
cmp eax ebx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0xc ] ebx
test esi esi
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test dl 0x7f
je r-xdata
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov esi ecx
shr esi 0x8
and esi 0x1
inc eax
inc esi
jmp r-xdata
lea ecx [ edx + edx ]
mov esi ecx
shr esi 0x8
and esi 0x1
inc esi
jmp r-xdata
mov esi 0x1
lea esp [ esp ]
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
mov edx 0x500
cmp edx ebx
sbb edx edx
neg edx
add esi edx
mov edx [ ebp - 0x4 ]
add edx esi
cmp edx [ ebp - 0x8 ]
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov esi ecx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add ecx ecx
mov esi ecx
shr esi 0x8
and esi 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp ebx edx
ja r-xdata
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
lea esi [ edx + esi * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
add esi 0x3
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi edx
sub edi ebx
add edi [ ebp + 0x10 ]
inc edx
mov bl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ edx + edi - 0x1 ] bl
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov edi [ ebp - 0x4 ]
mov bl [ edi ]
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ edx + edi ] bl
inc edx
dec esi
jne r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov esi edx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
sub_410240
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push ebx
push edi
xor ecx ecx
xor eax eax
xor edi edi
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x8 ] edx
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea esp [ esp ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea ebx [ edx + edi * 2 ]
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov ebx [ ebp + 0xc ]
mov [ edi + ebx ] dl
inc edi
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
cmp eax edi
jae r-xdata
mov ecx [ ebp - 0x10 ]
add edx edx
mov [ ebp - 0xc ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + esi ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
mov ecx edi
not ecx
shr edi 0x1
and ecx 0x1
inc edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edi
test ecx ecx
lea ecx [ edx + edx ]
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test cx cx
jne r-xdata
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x1 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
add ecx ecx
test cx cx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx 0x500
cmp edx [ ebp - 0xc ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0x14 ] edi
add edi ebx
cmp edi [ ebp - 0x8 ]
ja r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x3 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
cmp edx ebx
ja r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi edx
add edi [ ebp + 0xc ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
add ecx ecx
test cx cx
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x14 ] edx
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov edi ebx
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add ecx ecx
test cx cx
jne r-xdata
add edi 0x3
sub_4105b0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] edx
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx 0x1
nop
cmp esi [ ebp + 0xc ]
jae r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
lea ebx [ edx + ebx * 2 ]
cmp esi [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
cmp ebx 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp esi [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ esi + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc esi
cmp edx 0xffffffff
je r-xdata
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
jmp r-xdata
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov ebx edx
not ebx
shr edx 0x1
and ebx 0x1
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
test ebx ebx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edi eax
shr edi 0x1f
add esi 0x4
inc edi
mov ecx 0x1f
mov [ ebp - 0x4 ] edi
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
inc edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ebx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
mov edi 0x500
cmp edi edx
mov edi [ ebp - 0x4 ]
sbb ebx ebx
neg ebx
add edi ebx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
add edi ebx
cmp edi [ ebp - 0xc ]
ja r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edi eax
shr edi 0x1f
add esi 0x4
add edi 0x3
mov ecx 0x1f
mov [ ebp - 0x4 ] edi
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
add edi 0x3
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edx ebx
ja r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x8 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x8 ]
mov [ ebx + edi - 0x1 ] dl
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0xc ]
jae r-xdata
lea edx [ edx + ebx * 2 ]
mov [ ebp - 0x4 ] edx
cmp esi [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
inc [ ebp - 0x8 ]
mov [ ebx + edi ] dl
inc ebx
dec [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x14 ]
test edx edx
je r-xdata
sub_410910
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push ebx
mov ebx [ ebp + 0x8 ]
add ebx eax
push esi
xor esi esi
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] ebx
cmp edx ebx
jb r-xdata
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
mov edi edi
cmp eax ebx
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp esi eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] esi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc eax
jmp r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
cmp eax ebx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0xc ] ebx
test esi esi
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test dl 0x7f
je r-xdata
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc eax
inc edx
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc edx
jmp r-xdata
mov edx 0x1
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov esi [ ebp - 0x4 ]
add edx esi
cmp edx [ ebp - 0x8 ]
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
jmp r-xdata
add ecx ecx
mov edx ecx
shr edx 0x8
and edx 0x1
jmp r-xdata
cmp ebx esi
ja r-xdata
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
add edx 0x3
mov edx [ ebp + 0xc ]
mov [ edx ] esi
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
mov [ eax ] edx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
sub_410c20
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ esi ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
add ebx eax
push edi
xor edi edi
xor ecx ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
mov [ ebp + 0x8 ] ebx
cmp [ ebp - 0x8 ] ebx
jb r-xdata
add ecx ecx
test cx cx
jne r-xdata
pop edi
mov [ esi ] ecx
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea ecx [ ecx ]
cmp eax ebx
jae r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea ebx [ ecx + edi * 2 ]
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
pop edi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edi eax
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
add esi esi
test si si
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] edi
pop edi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x4 ] edi
inc eax
jmp r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
cmp eax edi
jae r-xdata
mov ecx [ ebp - 0x10 ]
add esi esi
mov [ ebp - 0xc ] ecx
test si si
je r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + ebx * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + edx ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov ecx esi
shr ecx 0x10
and ecx 0x1
jmp r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
jmp r-xdata
lea esi [ ecx + ecx ]
test si si
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
mov ecx edi
not ecx
shr edi 0x1
and ecx 0x1
inc edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edi
test ecx ecx
lea ecx [ esi + esi ]
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test cx cx
jne r-xdata
test cx cx
jne r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + 0x1 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
add ecx ecx
test cx cx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov esi 0x500
cmp esi [ ebp - 0xc ]
sbb esi esi
neg esi
add esi edi
add esi ebx
cmp esi [ ebp - 0x8 ]
ja r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + 0x3 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] ebx
ja r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
cmp esi eax
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov edi esi
jmp r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
add edi 0x3
sub_410fc0
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp - 0xc ]
add esi edx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp + 0x8 ] esi
cmp edi esi
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
test esi esi
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp esi edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
lea edi [ esi + edi * 2 ]
mov [ ebp - 0x8 ] edi
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc edx
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
cmp edi 0x2
jne r-xdata
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
shr esi 0x1f
mov ecx 0x1f
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x8 ]
movzx edi [ edx + ebx ]
add esi 0xfffffffd
shl esi 0x8
add edi esi
inc edx
cmp edi 0xffffffff
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp edx eax
jne r-xdata
mov esi edi
not esi
shr edi 0x1
and esi 0x1
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] edi
test esi esi
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
shr esi 0x1f
add edx 0x4
inc esi
mov ecx 0x1f
mov [ ebp - 0x10 ] esi
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
inc esi
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov edi 0x1
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov esi 0x500
cmp esi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
sbb edi edi
neg edi
add esi edi
add esi [ ebp - 0x4 ]
mov [ ebp - 0x10 ] esi
cmp esi [ ebp - 0xc ]
ja r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
shr esi 0x1f
add edx 0x4
add esi 0x3
mov ecx 0x1f
mov [ ebp - 0x10 ] esi
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
add esi 0x3
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] esi
ja r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x10 ]
inc esi
mov [ ebp - 0x4 ] esi
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xc ]
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
add edi 0x3
mov [ ebp - 0x10 ] edi
test esi esi
je r-xdata
sub_411340
test ecx ecx
jne r-xdata
push esi
not eax
cmp edx 0x10
jb r-xdata
xor eax eax
retn
test edx edx
je r-xdata
movzx esi [ ecx ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x1 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x2 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x3 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x4 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x5 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x6 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x7 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x8 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x9 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xa ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xb ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xc ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xd ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xe ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xf ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
add ecx 0x10
sub edx 0x10
cmp edx 0x10
jae r-xdata
not eax
pop esi
retn
movzx esi [ ecx ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
inc ecx
dec edx
jne r-xdata
sub_4114f0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp + eax - 0x14 ] al
inc eax
cmp eax 0x10
jl r-xdata
lea eax [ ebp - 0x3d ]
shr eax 0x2
add eax eax
add eax eax
lea ecx [ ebp - 0x40 ]
sub eax ecx
xor ecx ecx
push esi
or esi 0xffffffff
mov edx 0xffff
cmp si dx
sete cl
xor edx edx
cmp esi esi
sete dl
and ecx edx
xor edx edx
cmp eax 0x4
setl dl
and ecx edx
xor edx edx
test eax eax
setns dl
and ecx edx
and ecx 0x1
mov eax ecx
je r-xdata
xor edx edx
xor ecx ecx
sete dl
and eax edx
cmp eax 0x1
jne r-xdata
mov ecx 0x8
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4170d2
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
shr ecx 0x2
add ecx ecx
add ecx ecx
lea eax [ ebp - 0x13 ]
sub ecx eax
inc ecx
lea edx [ ebp + ecx - 0x14 ]
test dl 0x3
mov eax 0x0
sete al
lea esi [ ebp - 0x13 ]
cmp edx esi
sbb esi esi
inc esi
and eax esi
cmp ecx 0x5
sbb esi esi
neg esi
and eax esi
cmp ecx 0x1
sbb esi esi
inc esi
and eax esi
and eax 0x1
lea esi [ ebp - 0xf ]
cmp edx esi
sbb esi esi
neg esi
and eax esi
cmp eax 0x1
jne r-xdata
and eax 0x1
dec ecx
jne r-xdata
xor eax eax
cmp eax [ ebp + ecx - 0x10 ]
sbb eax eax
neg eax
xor ecx ecx
cmp ecx [ edx ]
sbb edx edx
neg edx
and eax edx
and eax 0x1
sub_4115e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x20 ] eax
xor eax eax
mov [ esp ] 0x0
push ebx
mov [ esp + 0x4 ] ax
mov [ esp + eax + 0x4 ] al
inc eax
cmp eax 0x10
jl r-xdata
xor eax eax
mov ecx 0x3020100
cmp [ esp + 0x4 ] ecx
mov edx 0x100
sete al
xor ebx ebx
cmp [ esp + 0x4 ] dx
sete bl
and eax ebx
and eax 0x1
je r-xdata
mov ecx [ esp + 0x24 ]
dec eax
neg eax
sbb eax eax
pop ebx
xor ecx esp
call sub_4170d2
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov dx [ esp + eax + 0x4 ]
mov [ esp + eax * 2 + 0x14 ] dx
inc eax
cmp eax 0x4
jl r-xdata
xor edx edx
mov eax 0x403
cmp [ esp + 0x1a ] ax
mov eax 0x302
sete dl
xor ebx ebx
cmp [ esp + 0x18 ] ax
mov eax 0x201
sete bl
and edx ebx
xor ebx ebx
cmp [ esp + 0x16 ] ax
mov eax 0x100
sete bl
and edx ebx
xor ebx ebx
cmp [ esp + 0x14 ] ax
sete bl
and edx ebx
and edx 0x1
mov eax edx
je r-xdata
xor eax eax
nop
mov edx [ esp + eax + 0x4 ]
mov [ esp + eax * 4 + 0x14 ] edx
inc eax
cmp eax 0x4
jl r-xdata
xor eax eax
cmp [ esp + 0x1c ] 0x5040302
sete al
xor edx edx
cmp [ esp + 0x18 ] 0x4030201
sete dl
and eax edx
xor edx edx
cmp [ esp + 0x20 ] 0x6050403
sete dl
and eax edx
xor edx edx
cmp [ esp + 0x14 ] ecx
sete dl
and eax edx
and eax 0x1
je r-xdata
mov eax 0xc3
mov ecx r--data
mov edx 0x1
call sub_411970
xor ecx ecx
cmp eax 0x52ca3a75
sete cl
and ecx 0x1
mov eax ecx
je r-xdata
mov [ rwxdata ] 0xfffffffd
mov [ rwxdata ] 0xfffffffe
mov [ rwxdata ] 0xffffffff
call sub_4114f0
and eax 0x1
sub_411750
push ebp
mov ebp esp
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_4170d2
mov esp ebp
pop ebp
retn
sub_4117a0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ rwxdata ] 0x1
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
or eax 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x2
jne r-xdata
cmp edx 0xffffffff
je r-xdata
cmp eax 0x4
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp edx 0x4
jne r-xdata
cmp edi 0xffffffff
je r-xdata
cmp esi 0x4
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x4
jne r-xdata
pop ebp
jmp sub_4115e0
cmp eax 0x4
jne r-xdata
sub_411850
push esi
mov esi eax
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_411970
push ebx
push esi
push edi
mov edi edx
mov esi ecx
mov ebx eax
movzx ecx di
shr edi 0x10
test ebx ebx
je r-xdata
mov eax edi
pop edi
shl eax 0x10
pop esi
or eax ecx
pop ebx
retn
jmp r-xdata
mov eax ebx
cmp ebx 0x15b0
jb r-xdata
sub ebx eax
cmp eax 0x10
jl r-xdata
mov eax 0x15b0
test eax eax
je r-xdata
lea ebx [ ebx ]
mov eax 0x80078071
mul ecx
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mov eax 0x80078071
mul edi
shr edx 0xf
imul edx edx 0xffff000f
add edi edx
test ebx ebx
jne r-xdata
movzx edx [ esi ]
add ecx edx
dec eax
inc esi
add edi ecx
test eax eax
jg r-xdata
movzx edx [ esi ]
add ecx edx
movzx edx [ esi + 0x1 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x2 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x3 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x4 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x5 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x6 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x7 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x8 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x9 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xa ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xb ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xc ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xd ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xe ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xf ]
add edi ecx
add ecx edx
sub eax 0x10
add edi ecx
add esi 0x10
cmp eax 0x10
jge r-xdata
sub_411b60
push ebp
mov ebp esp
push 0xffffffff
push sub_4385f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] 0x5
mov eax [ rwxdata ]
add eax rwxdata
push eax
push rwxdata
lea ecx [ ebp - 0x48 ]
push ecx
call sub_412a60
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x68 ] 0x0
jmp r-xdata
cmp [ ebp - 0x68 ] 0x1
jge r-xdata
sub esp 0xc
mov eax esp
mov [ ebp - 0xa4 ] esp
lea edx [ ebp - 0x48 ]
call sub_412230
mov [ ebp - 0x118 ] eax
sub esp 0xc
mov eax esp
mov [ ebp - 0xa8 ] esp
lea ecx [ ebp - 0x48 ]
call sub_412210
mov [ ebp - 0x11c ] eax
lea esi [ ebp - 0x60 ]
call sub_412c90
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ rwxdata ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
xor edx edx
push edx
push ecx
mov eax 0x20d
sub eax 0x4
push eax
mov edx rwxdata
mov ecx rwxdata
call sub_405b70
add esp 0xc
mov ecx [ rwxdata ]
sub ecx 0x4
mov [ ebp - 0x1c ] ecx
mov edx [ rwxdata ]
mov [ ebp - 0x20 ] edx
lea eax [ ebp - 0x60 ]
call sub_412470
add eax 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x64 ] 0x4
mov eax [ ebp - 0x20 ]
xor ecx ecx
push ecx
push eax
mov ecx [ ebp - 0x50 ]
add ecx rwxdata
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x64 ]
push edx
mov edx [ ebp - 0x10 ]
call sub_405b70
add esp 0xc
mov eax [ ebp - 0x20 ]
mov [ rwxdata ] eax
mov ecx [ ebp - 0x20 ]
mov [ rwxdata ] ecx
push 0x4
push 0x4
push 0x4
push 0x4
push 0x2
push 0x10300
or ebx 0xffffffff
mov edi 0x4
mov esi 0x4
mov edx 0x4
call sub_4117a0
add esp 0x18
test eax eax
je r-xdata
sub esp 0xc
mov esi esp
mov [ ebp - 0x84 ] esp
lea ecx [ ebp - 0x48 ]
call sub_4122c0
mov [ ebp - 0x100 ] eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x88 ] esp
lea edx [ ebp - 0x48 ]
call sub_412250
mov [ ebp - 0x104 ] eax
lea eax [ ebp - 0x80 ]
push eax
call sub_412b10
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x48 ]
call j_sub_4125e0
sub esp 0xc
mov esi esp
mov [ ebp - 0x8c ] esp
lea ecx [ ebp - 0x80 ]
call sub_4123d0
mov [ ebp - 0x10c ] eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x90 ] esp
lea edx [ ebp - 0x80 ]
call sub_412360
mov [ ebp - 0x110 ] eax
lea eax [ ebp - 0xa0 ]
lea ecx [ ebp - 0x48 ]
call sub_412210
sub esp 0xc
mov ecx esp
mov [ ebp - 0x94 ] esp
mov edx eax
mov eax ecx
call sub_411ea0
mov [ ebp - 0x114 ] eax
lea edx [ ebp - 0x48 ]
push edx
call sub_412c00
call sub_411e80
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x80 ]
call sub_412340
jmp r-xdata
push 0x100400
call sub_4176e1
add esp 0x4
mov [ ebp - 0xb0 ] eax
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x30 ] edx
mov eax [ rwxdata ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] rwxdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x28 ]
mov [ edx + 0x12e ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x176 ] edx
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
mov [ ebp - 0xac ] 0x1
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x60 ]
call sub_412440
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x48 ]
call sub_4121f0
mov eax [ ebp - 0xac ]
jmp r-xdata
mov edx [ ebp - 0x68 ]
add edx 0x1
mov [ ebp - 0x68 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411ea0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_411f20
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
mov esi [ ebp + 0x8 ]
mov edi [ LoadStringA@IAT ]
push 0x64
push rwxdata
push 0x67
push esi
call edi
push 0x64
push rwxdata
push 0x6d
push esi
call edi
mov eax esi
call sub_412000
mov [ rwxdata ] esi
call sub_411b60
push 0x6d
push esi
call [ LoadAcceleratorsA@IAT ]
mov edi [ GetMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ TranslateAcceleratorA@IAT ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
sub_412000
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_412090
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push 0x6c
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rwxdata
call esi
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] eax
call [ RegisterClassExA@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_412090
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x48 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
xor ecx esp
xor eax eax
call sub_4170d2
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ EndPaint@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4170d2
mov esp ebp
pop ebp
retn 0x10
sub eax 0x102
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push ecx
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4170d2
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rwxdata ]
push 0x0
push sub_4121b0
push esi
push 0x67
push ecx
call [ DialogBoxParamA@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4170d2
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4170d2
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x111
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4170d2
mov esp ebp
pop ebp
retn 0x10
sub_4121b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push ecx
call [ EndDialog@IAT ]
cmp ax 0x2
je r-xdata
sub_412250
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_412230
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_4122c0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_412210
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_412360
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_412700
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_4123d0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4126e0
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_412480
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4124b0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4124e0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412510
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412540
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412570
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4125a0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4125e0
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_41827c
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_41827c
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_412670
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412720
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_41827c
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_41827c
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_4127b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4128c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412960
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412a00
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
push ecx
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_412a60
push ebp
mov ebp esp
push 0xffffffff
push sub_4384f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x8
mov [ esi ] edi
call sub_4186f1
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_41717a
push r--data
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] r--data
call sub_41e6fc
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
push esi
call sub_412f60
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_412b10
push ebp
mov ebp esp
push 0xffffffff
push sub_4384c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x8
mov [ esi ] edi
call sub_4186f1
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_41717a
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call sub_41e6fc
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
push ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x10 ] esp
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esp
cmp ecx edi
je r-xdata
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x14 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_413020
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax ] edx
sub_412c00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x2c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push edx
mov [ eax + 0x8 ] ecx
call sub_413110
mov esp ebp
pop ebp
retn 0x28
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_412c90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x1c ]
xor edx edx
push eax
sub esp 0xc
mov eax esp
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_4133d0
mov eax esi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_412d80
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
push ecx
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_412de0
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_4186f1
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_412e70
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_4186f1
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_412f10
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
sub_412f60
push ebp
mov ebp esp
push 0xffffffff
push sub_4384a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_412210
mov edx [ eax ]
xor ecx ecx
test edx edx
je r-xdata
mov edx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp + 0x10 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov [ eax + 0x8 ] edx
call sub_413e30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_413020
push ebp
mov ebp esp
push 0xffffffff
push sub_438480
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
sub esp 0xc
mov [ ebp - 0x4 ] esi
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x14 ] esp
cmp ecx esi
je r-xdata
mov edx [ ebp + 0x20 ]
mov [ eax + 0x8 ] edx
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] esp
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] edx
lea eax [ ebp - 0x20 ]
mov ecx edi
call sub_4126e0
sub esp 0xc
mov ecx esp
mov [ ecx ] esi
mov [ ecx + 0x4 ] esi
mov edx [ eax ]
mov [ ebp - 0x14 ] esp
cmp edx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov eax [ eax + 0x8 ]
push edi
mov [ ecx + 0x8 ] eax
call sub_413ae0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ edx ]
cmp edx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ edx ]
mov [ ecx ] edx
sub_413110
push ebp
mov ebp esp
push 0xffffffff
push sub_438460
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_412210
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
mov edi [ ebx + 0x10 ]
sub eax ecx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x28 ]
lea edx [ ebp + 0x24 ]
mov [ ebp - 0x18 ] edi
call sub_4148a0
mov esi [ ebp + 0x20 ]
cmp esi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
shr edi 0x1
cmp [ ebp - 0x1c ] edi
ja r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4c ]
lea edx [ ebp + 0x24 ]
call sub_4148a0
cmp esi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp + 0x24 ]
call sub_4148a0
cmp esi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
sub esp 0xc
mov eax esp
mov edx ebx
mov [ ebp + 0x8 ] esp
call sub_412230
mov edx [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push edx
lea eax [ ebp - 0x4c ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax edi
call sub_4136f0
mov eax [ ebp - 0x1c ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax edi
call sub_4136f0
lea ebx [ ebp - 0x34 ]
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
mov edi [ ebx + 0x10 ]
sub edi [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_412210
call sub_413bb0
mov edx [ ebp - 0x1c ]
add esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
push edx
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_412210
mov esi eax
lea eax [ ebp - 0x34 ]
call sub_4136f0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_412210
lea ebx [ ebp - 0x4c ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
lea ecx [ esi - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_413c10
add esp 0x24
lea ecx [ esi - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov esi [ eax ]
xor esi esi
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
mov eax [ ecx ]
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov al [ eax + ecx ]
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x11 ] al
push ecx
mov eax ebx
call sub_413650
mov esi [ ebp + 0x20 ]
dec esi
mov [ ebp + 0x20 ] esi
jmp r-xdata
sub eax edx
mov edx [ esi + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp edx eax
ja r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov al [ eax + ecx ]
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x11 ] al
push ecx
mov eax ebx
call sub_413580
mov esi [ ebp + 0x20 ]
dec esi
mov [ ebp + 0x20 ] esi
jmp r-xdata
sub eax edx
mov edx [ esi + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp edx eax
ja r-xdata
sub_4131f4
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_41e6fc
mov edi [ ebx + 0x10 ]
sub edi [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_412210
call sub_413bb0
mov edx [ ebp - 0x1c ]
add esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
push edx
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_412210
mov esi eax
lea eax [ ebp - 0x34 ]
call sub_4136f0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_412210
lea ebx [ ebp - 0x4c ]
jmp r-xdata
nop
call sub_413c10
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
mov eax esi
call sub_413620
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_413324
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_41e6fc
sub esp 0xc
mov eax esp
mov edx ebx
mov [ ebp + 0x8 ] esp
call sub_412230
mov edx [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push edx
lea eax [ ebp - 0x4c ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax edi
call sub_4136f0
mov eax [ ebp - 0x1c ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_412210
mov esi eax
mov eax edi
call sub_4136f0
lea ebx [ ebp - 0x34 ]
call sub_413c10
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
nop
mov ecx esi
call sub_412870
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_4133d0
push ebp
mov ebp esp
push 0xffffffff
push sub_438350
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ebp + 0x18 ]
xor edx edx
mov [ ebp - 0x14 ] ecx
cmp eax edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x20 ]
xor esi esi
cmp eax edi
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp edx edi
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ eax ]
sub esp 0xc
mov [ eax + 0x8 ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp esi edi
je r-xdata
mov edx [ edx ]
cmp edx edi
je r-xdata
mov esi [ eax ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_4143d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ esi ]
cmp edx edi
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
mov edx [ edx ]
mov [ eax ] edx
sub_413540
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
sub_413580
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
test [ ebx + 0xc ] 0xf
push edi
jne r-xdata
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov ecx [ ebx + 0x4 ]
dec edi
push esi
mov esi edi
shr esi 0x4
cmp [ ecx + esi * 4 ] 0x0
jne r-xdata
mov edi [ ebx + 0x8 ]
shl edi 0x4
call sub_4137b0
mov edx [ ebx + 0x4 ]
mov eax edi
and eax 0xf
add eax [ edx + esi * 4 ]
pop esi
je r-xdata
push 0x10
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
mov [ ebx + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov edx [ ebx + 0x4 ]
mov [ edx + esi * 4 ] eax
sub_413620
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
retn
inc [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
shl edi 0x4
cmp edi [ eax + 0xc ]
pop edi
ja r-xdata
dec ecx
mov [ eax + 0x10 ] ecx
jne r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0xc ] 0x0
sub_413650
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
push esi
test cl 0xf
jne r-xdata
mov esi [ ebx + 0xc ]
add esi [ ebx + 0x10 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi esi
shr edi 0x4
cmp eax edi
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
call sub_4137b0
mov ecx [ ebx + 0x4 ]
and esi 0xf
add esi [ ecx + edi * 4 ]
pop edi
je r-xdata
push 0x10
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ esi ] al
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov ecx [ ebx + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_4136f0
push ebp
mov ebp esp
mov ecx [ esi ]
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_413750
mov eax [ edx ]
xor ecx ecx
test eax eax
je r-xdata
mov eax [ edx + 0x8 ]
dec eax
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_4137b0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_4315a8
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x4
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_417380
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_417380
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_417380
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_417380
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_41717a
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_41e6fc
int3
lea ecx [ eax * 4 ]
push ecx
call sub_4186f1
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_41827c
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_413960
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_4139e0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx * 4 ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_413a40
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_413a90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
push ecx
sub esp 0xc
mov eax esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
push edx
call sub_413e30
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_413ae0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x2c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push edx
mov [ eax + 0x8 ] ecx
call sub_414020
mov esp ebp
pop ebp
retn 0x28
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_413b90
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4148a0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
xor ecx ecx
cmp edx [ eax + 0x8 ]
setne al
mov esp ebp
pop ebp
retn
sub_413bb0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x14 ]
sub esp 0x8
test eax eax
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_414310
add esp 0x14
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_413c10
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x1c ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
test eax eax
je r-xdata
cmp edi [ ebp + 0x28 ]
je r-xdata
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebx ] eax
xor edx edx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
push [ ebp + 0x28 ]
push edx
push edi
push ecx
push esi
push eax
call sub_414e60
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x28 ]
mov esi [ ebp + 0x10 ]
sub eax ecx
add esp 0x18
add esi eax
mov [ ebp + 0x10 ] esi
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_413cc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_4143d0
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_413d50
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_413da0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx * 4 ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_413e30
push ebp
mov ebp esp
push 0xffffffff
push sub_438440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
mov ecx edi
call sub_412210
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
sub eax ecx
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x10 ]
mov ebx eax
mov [ ebp - 0x18 ] ebx
cmp esi [ ebp + 0x18 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
shr eax 0x1
cmp [ ebp - 0x14 ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0x2
mov edi edi
mov [ ebp - 0x4 ] 0x0
sub esp 0xc
mov eax esp
mov edx edi
mov [ ebp + 0x18 ] esp
call sub_412230
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x48 ]
mov ecx edi
call sub_412210
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
mov edx [ ebp - 0x14 ]
sub esp 0xc
mov ebx esp
mov [ ebp + 0x18 ] esp
push edx
lea eax [ ebp - 0x3c ]
mov ecx edi
call sub_412210
mov esi eax
mov eax ebx
call sub_4136f0
lea ebx [ ebp - 0x30 ]
push esi
mov eax edi
call sub_413650
inc esi
jmp r-xdata
mov ebx [ edi + 0x10 ]
sub ebx [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x24 ]
mov ecx edi
call sub_412210
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x18 ] esp
call sub_412210
call sub_413bb0
mov ecx [ ebp - 0x14 ]
add esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
push ecx
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x24 ]
mov ecx edi
call sub_412210
mov esi eax
lea eax [ ebp - 0x30 ]
call sub_4136f0
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x3c ]
mov ecx edi
call sub_412210
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x18 ] esp
call sub_412210
lea ebx [ ebp - 0x48 ]
jmp r-xdata
push esi
mov eax edi
call sub_413580
inc esi
jmp r-xdata
cmp esi [ ebp + 0x18 ]
je r-xdata
call sub_413c10
add esp 0x24
cmp esi [ ebp + 0x18 ]
je r-xdata
sub_413ea8
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_41e6fc
mov ebx [ edi + 0x10 ]
sub ebx [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x24 ]
mov ecx edi
call sub_412210
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x18 ] esp
call sub_412210
call sub_413bb0
mov ecx [ ebp - 0x14 ]
add esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
push ecx
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x24 ]
mov ecx edi
call sub_412210
mov esi eax
lea eax [ ebp - 0x30 ]
call sub_4136f0
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x3c ]
mov ecx edi
call sub_412210
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x18 ] esp
call sub_412210
lea ebx [ ebp - 0x48 ]
jmp r-xdata
mov eax esi
call sub_413620
cmp edi [ esi + 0x10 ]
jb r-xdata
call sub_413c10
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_413f80
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_41e6fc
sub esp 0xc
mov eax esp
mov edx edi
mov [ ebp + 0x18 ] esp
call sub_412230
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x48 ]
mov ecx edi
call sub_412210
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4136f0
mov edx [ ebp - 0x14 ]
sub esp 0xc
mov ebx esp
mov [ ebp + 0x18 ] esp
push edx
lea eax [ ebp - 0x3c ]
mov ecx edi
call sub_412210
mov esi eax
mov eax ebx
call sub_4136f0
lea ebx [ ebp - 0x30 ]
call sub_413c10
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
jmp r-xdata
mov ecx esi
call sub_412870
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_414020
push ebp
mov ebp esp
push 0xffffffff
push sub_438420
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_4126e0
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
mov edi [ ebx + 0x10 ]
sub eax ecx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x28 ]
lea edx [ ebp + 0x24 ]
mov [ ebp - 0x18 ] edi
call sub_415530
mov esi [ ebp + 0x20 ]
cmp esi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
shr edi 0x1
cmp [ ebp - 0x1c ] edi
ja r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4c ]
lea edx [ ebp + 0x24 ]
call sub_415530
cmp esi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp + 0x24 ]
call sub_415530
cmp esi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
sub esp 0xc
mov eax esp
mov edx ebx
mov [ ebp + 0x8 ] esp
call sub_412700
mov edx [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push edx
lea eax [ ebp - 0x4c ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax edi
call sub_414840
mov eax [ ebp - 0x1c ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax edi
call sub_414840
lea ebx [ ebp - 0x34 ]
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
mov edi [ ebx + 0x10 ]
sub edi [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_414840
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_4126e0
call sub_414cd0
mov edx [ ebp - 0x1c ]
add esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
push edx
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_4126e0
mov esi eax
lea eax [ ebp - 0x34 ]
call sub_414840
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_414840
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_414840
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_4126e0
lea ebx [ ebp - 0x4c ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
lea ecx [ esi - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_414d30
add esp 0x24
lea ecx [ esi - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov esi [ eax ]
xor esi esi
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
mov eax [ ecx ]
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov al [ eax + ecx ]
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x11 ] al
push ecx
mov eax ebx
call sub_4147a0
mov esi [ ebp + 0x20 ]
dec esi
mov [ ebp + 0x20 ] esi
jmp r-xdata
sub eax edx
mov edx [ esi + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp edx eax
ja r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov al [ eax + ecx ]
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x11 ] al
push ecx
mov eax ebx
call sub_4146d0
mov esi [ ebp + 0x20 ]
dec esi
mov [ ebp + 0x20 ] esi
jmp r-xdata
sub eax edx
mov edx [ esi + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp edx eax
ja r-xdata
sub_414104
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_41e6fc
mov edi [ ebx + 0x10 ]
sub edi [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_414840
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_4126e0
call sub_414cd0
mov edx [ ebp - 0x1c ]
add esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
push edx
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x28 ]
mov ecx ebx
call sub_4126e0
mov esi eax
lea eax [ ebp - 0x34 ]
call sub_414840
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_414840
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_414840
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_4126e0
lea ebx [ ebp - 0x4c ]
jmp r-xdata
nop
call sub_414d30
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
mov eax esi
call sub_414770
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_414234
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_41e6fc
sub esp 0xc
mov eax esp
mov edx ebx
mov [ ebp + 0x8 ] esp
call sub_412700
mov edx [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push edx
lea eax [ ebp - 0x4c ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax edi
call sub_414840
mov eax [ ebp - 0x1c ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
call sub_4126e0
mov esi eax
mov eax edi
call sub_414840
lea ebx [ ebp - 0x34 ]
call sub_414d30
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
nop
mov ecx esi
call sub_412910
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_4142f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_414310
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
push edi
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec ecx
mov [ ebp + 0x18 ] ecx
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov edx [ edx + 0x8 ]
mov esi ecx
shr esi 0x4
and ecx 0xf
cmp edx esi
ja r-xdata
mov ebx [ ebp + 0xc ]
mov edx eax
and eax 0xf
mov edi eax
mov eax [ ebx + 0x8 ]
shr edx 0x4
cmp eax edx
ja r-xdata
sub esi edx
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
add eax ecx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
mov bl [ eax ]
mov dl [ ecx + edi ]
mov [ ecx + edi ] bl
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax ecx
jne r-xdata
sub edx eax
sub_414380
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_414e60
add esp 0x18
pop ecx
pop ebp
retn
sub_4143d0
push ebp
mov ebp esp
push 0xffffffff
push sub_438330
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x20 ]
sub eax ecx
mov edi eax
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov eax ecx
sub eax edx
dec eax
cmp eax edi
jae r-xdata
mov eax [ ebx + 0x8 ]
mov esi edx
sub esi ecx
add esi edi
sub eax ecx
cmp eax esi
jae r-xdata
push r--data
call sub_4315a8
push edx
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov ecx eax
shr eax 0x1
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
add ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
call sub_414fe0
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ eax + edi ]
cmp edx eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
call sub_412a00
mov edi eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
mov esi [ ebp + 0x8 ]
sub esi eax
push esi
push eax
push edi
mov [ ebp - 0x1c ] edi
call sub_417380
add esp 0xc
add eax esi
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov [ ebp - 0x14 ] esi
mov ecx esi
cmp ecx esi
jae r-xdata
add [ ebx + 0x4 ] edi
cmp eax ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
push edx
mov edi ecx
call sub_415880
mov edi [ ebp - 0x18 ]
add esp 0x4
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
call sub_414fe0
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x4 ]
sub edx ecx
push edx
push ecx
push eax
call sub_417380
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
mov esi [ ebp - 0x18 ]
sub ecx eax
add esp 0xc
add esi ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp - 0x14 ]
add edx edi
lea eax [ edi + esi ]
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] eax
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push eax
call sub_41827c
add esp 0x4
mov edx [ ecx ]
mov [ eax ] edx
sub_4145f0
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_414690
mov eax [ edx ]
xor ecx ecx
test eax eax
je r-xdata
mov eax [ edx + 0x8 ]
dec eax
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_4146d0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
test [ ebx + 0xc ] 0xf
push edi
jne r-xdata
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov ecx [ ebx + 0x4 ]
dec edi
push esi
mov esi edi
shr esi 0x4
cmp [ ecx + esi * 4 ] 0x0
jne r-xdata
mov edi [ ebx + 0x8 ]
shl edi 0x4
call sub_4149d0
mov edx [ ebx + 0x4 ]
mov eax edi
and eax 0xf
add eax [ edx + esi * 4 ]
pop esi
je r-xdata
push 0x10
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
mov [ ebx + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov edx [ ebx + 0x4 ]
mov [ edx + esi * 4 ] eax
sub_414770
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
retn
inc [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
shl edi 0x4
cmp edi [ eax + 0xc ]
pop edi
ja r-xdata
dec ecx
mov [ eax + 0x10 ] ecx
jne r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0xc ] 0x0
sub_4147a0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
push esi
test cl 0xf
jne r-xdata
mov esi [ ebx + 0xc ]
add esi [ ebx + 0x10 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi esi
shr edi 0x4
cmp eax edi
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
call sub_4149d0
mov ecx [ ebx + 0x4 ]
and esi 0xf
add esi [ ecx + edi * 4 ]
pop edi
je r-xdata
push 0x10
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ esi ] al
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov ecx [ ebx + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_414840
push ebp
mov ebp esp
mov ecx [ esi ]
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_4148a0
mov ecx [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_414900
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
mov ecx eax
or esi 0xffffffff
shr ecx 0x1
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_414980
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_4149d0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_4315a8
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x4
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_417380
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_417380
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_417380
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_417380
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_41717a
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_41e6fc
int3
lea ecx [ eax * 4 ]
push ecx
call sub_4186f1
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_41827c
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_414bc0
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_414c20
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx * 4 ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_414cb0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_415530
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
xor ecx ecx
cmp edx [ eax + 0x8 ]
setne al
mov esp ebp
pop ebp
retn
sub_414cd0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x14 ]
sub esp 0x8
test eax eax
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_4152d0
add esp 0x14
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_414d30
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x1c ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
test eax eax
je r-xdata
cmp edi [ ebp + 0x28 ]
je r-xdata
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebx ] eax
xor edx edx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
push [ ebp + 0x28 ]
push edx
push edi
push ecx
push esi
push eax
call sub_415680
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x28 ]
mov esi [ ebp + 0x10 ]
sub eax ecx
add esp 0x18
add esi eax
mov [ ebp + 0x10 ] esi
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_414de0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax ecx
and ecx 0xf
push ebx
mov ebx ecx
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx + 0x8 ]
shr eax 0x4
push esi
push edi
cmp ecx eax
ja r-xdata
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov ecx edx
shr ecx 0x4
and edx 0xf
cmp edi ecx
ja r-xdata
sub eax ecx
mov edi [ ebp + 0x10 ]
mov edi [ edi + 0x4 ]
mov esi [ esi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov ecx [ esi + ecx * 4 ]
add eax ebx
mov bl [ eax ]
add ecx edx
mov dl [ ecx ]
pop edi
mov [ ecx ] bl
pop esi
mov [ eax ] dl
pop ebx
pop ebp
retn
sub ecx edi
sub_414e60
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x1c ]
sub eax ebx
mov esi edi
sub esi ebx
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] eax
cmp ebx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] esi
cmp eax esi
jge r-xdata
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
cdq
idiv ecx
mov eax ecx
mov ecx edx
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
add ebx eax
mov eax [ ebp - 0x4 ]
add eax ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] ecx
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
mov edi [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
mov ecx esi
mov eax esi
shr ecx 0x4
and eax 0xf
cmp edx ecx
ja r-xdata
mov edx ebx
and ebx 0xf
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebx + 0x8 ]
shr edx 0x4
cmp ebx edx
ja r-xdata
sub ecx edx
mov ebx [ edi + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov bl [ ecx + eax ]
add ecx eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + edx * 4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edi
mov al [ edx ]
mov [ edx ] bl
mov [ ecx ] al
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
sub edx esi
mov [ ebp - 0x14 ] esi
cmp eax edx
jge r-xdata
sub edx ebx
mov eax [ ebp + 0x8 ]
mov ecx ebx
sub ecx edx
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] esi
add esi eax
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x28 ]
jmp r-xdata
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov esi [ eax + 0x4 ]
mov edi [ eax ]
cmp esi [ ebp - 0x34 ]
jne r-xdata
mov edi [ ebp + 0x1c ]
sub_414fc0
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_414fe0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
xor ecx ecx
push esi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
xor edx edx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x10 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x4 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
sub esp 0xc
mov [ eax + 0x8 ] esi
mov eax esp
mov [ ebp - 0x4 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ eax ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp + 0x20 ]
call sub_415820
add esp 0x1c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_415080
push esi
mov esi ecx
push edi
mov edi eax
cmp esi ebx
je r-xdata
pop edi
mov eax esi
pop esi
retn
cmp ebx edi
je r-xdata
push esi
mov eax ebx
call sub_415880
add esp 0x4
sub edi ebx
lea eax [ edi + esi ]
pop edi
pop esi
retn
sub_4150e0
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_415130
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
lea eax [ ecx * 4 ]
push eax
call sub_4186f1
add esp 0x4
test eax eax
jne r-xdata
sub_4151c0
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_415230
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_4152a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_4152d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
push edi
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec ecx
mov [ ebp + 0x18 ] ecx
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov edx [ edx + 0x8 ]
mov esi ecx
shr esi 0x4
and ecx 0xf
cmp edx esi
ja r-xdata
mov ebx [ ebp + 0xc ]
mov edx eax
and eax 0xf
mov edi eax
mov eax [ ebx + 0x8 ]
shr edx 0x4
cmp eax edx
ja r-xdata
sub esi edx
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
add eax ecx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
mov bl [ eax ]
mov dl [ ecx + edi ]
mov [ ecx + edi ] bl
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax ecx
jne r-xdata
sub edx eax
sub_415340
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_415680
add esp 0x18
pop ecx
pop ebp
retn
sub_4153b0
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_4153d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x20 ]
call sub_415820
add esp 0x1c
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_4154c0
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_415530
mov ecx [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_415600
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax ecx
and ecx 0xf
push ebx
mov ebx ecx
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx + 0x8 ]
shr eax 0x4
push esi
push edi
cmp ecx eax
ja r-xdata
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov ecx edx
shr ecx 0x4
and edx 0xf
cmp edi ecx
ja r-xdata
sub eax ecx
mov edi [ ebp + 0x10 ]
mov edi [ edi + 0x4 ]
mov esi [ esi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov ecx [ esi + ecx * 4 ]
add eax ebx
mov bl [ eax ]
add ecx edx
mov dl [ ecx ]
pop edi
mov [ ecx ] bl
pop esi
mov [ eax ] dl
pop ebx
pop ebp
retn
sub ecx edi
sub_415680
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x1c ]
sub eax ebx
mov esi edi
sub esi ebx
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] eax
cmp ebx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] esi
cmp eax esi
jge r-xdata
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
cdq
idiv ecx
mov eax ecx
mov ecx edx
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
add ebx eax
mov eax [ ebp - 0x4 ]
add eax ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] ecx
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
mov edi [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
mov ecx esi
mov eax esi
shr ecx 0x4
and eax 0xf
cmp edx ecx
ja r-xdata
mov edx ebx
and ebx 0xf
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebx + 0x8 ]
shr edx 0x4
cmp ebx edx
ja r-xdata
sub ecx edx
mov ebx [ edi + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov bl [ ecx + eax ]
add ecx eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + edx * 4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edi
mov al [ edx ]
mov [ edx ] bl
mov [ ecx ] al
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
sub edx esi
mov [ ebp - 0x14 ] esi
cmp eax edx
jge r-xdata
sub edx ebx
mov eax [ ebp + 0x8 ]
mov ecx ebx
sub ecx edx
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] esi
add esi eax
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x28 ]
jmp r-xdata
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov esi [ eax + 0x4 ]
mov edi [ eax ]
cmp esi [ ebp - 0x34 ]
jne r-xdata
mov edi [ ebp + 0x1c ]
sub_4157f0
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_417380
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_415820
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi [ ebp + 0x1c ]
je r-xdata
pop edi
pop ebp
retn
push ebx
push esi
mov edi edi
mov ebx [ ecx ]
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
sub ecx esi
mov esi [ ebx + 0x8 ]
mov ecx edi
mov edx edi
shr ecx 0x4
and edx 0xf
cmp esi ecx
ja r-xdata
inc edi
inc eax
mov [ ebp + 0x10 ] edi
cmp edi [ ebp + 0x1c ]
jne r-xdata
mov esi [ ebx + 0x4 ]
mov ecx [ esi + ecx * 4 ]
mov dl [ edx + ecx ]
mov [ eax ] dl
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
pop esi
pop ebx
sub_415880
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
sub esi ecx
mov edx edi
sub edx ecx
mov [ ebp - 0x10 ] edx
mov eax edx
mov [ ebp - 0x8 ] edx
mov ebx esi
test esi esi
je r-xdata
cmp eax edx
jge r-xdata
cdq
idiv ebx
mov eax ebx
mov ebx edx
test edx edx
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx ecx
neg edx
mov [ ebp - 0x18 ] edx
mov edx esi
neg edx
mov [ ebp - 0xc ] edx
mov edx edi
neg edx
lea ebx [ eax + ecx ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
lea edx [ ebx + esi ]
mov eax ebx
cmp edx edi
jne r-xdata
mov ecx edx
neg ecx
mov edx ecx
sub ecx [ ebp - 0x14 ]
mov eax esi
add ecx [ ebp - 0xc ]
sub eax edi
add eax [ ebp + 0x8 ]
add edx eax
add ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
add edx esi
add ecx [ ebp - 0xc ]
jmp r-xdata
movzx ebx [ eax ]
mov [ ebp - 0x1 ] bl
movzx ebx [ edx ]
mov [ eax ] bl
mov al [ ebp - 0x1 ]
mov [ edx ] al
lea ebx [ ecx + edi ]
mov eax edx
mov [ ebp - 0x1c ] eax
cmp esi ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
dec eax
dec ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ebx
test eax eax
jg r-xdata
mov ebx [ ebp - 0x10 ]
cmp edx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub_4159b0
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_415a30
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_415ac0
push ebp
mov ebp esp
push eax
push esi
push 0x1
push ecx
call sub_418f6d
add esp 0x10
cmp eax esi
jbe r-xdata
je r-xdata
push r--data
add [ rwxdata ] eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push r--data
jmp r-xdata
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x8
push 0x1
call sub_418663
sub_415b10
push ebp
mov ebp esp
test eax eax
je r-xdata
add [ rwxdata ] esi
mov eax esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x1
push eax
call sub_419277
add esp 0x10
cmp eax esi
je r-xdata
push eax
push esi
push r--data
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x10
push 0x1
call sub_418663
sub_415b60
push ebp
mov ebp esp
push ecx
push eax
push 0x1
lea ecx [ ebp - 0x1 ]
push 0x1
push ecx
call sub_418f6d
add esp 0x10
cmp eax 0x1
jbe r-xdata
je r-xdata
push r--data
inc [ rwxdata ]
movzx eax [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
push r--data
jmp r-xdata
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x8
push 0x1
call sub_418663
sub_415bb0
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
mov [ ebp + 0xb ] cl
test eax eax
je r-xdata
inc [ rwxdata ]
pop ebp
retn
push eax
push 0x1
lea edx [ ebp + 0xb ]
push 0x1
push edx
call sub_419277
add esp 0x10
cmp eax 0x1
je r-xdata
push eax
push 0x1
push r--data
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x10
push 0x1
call sub_418663
sub_415c00
push ebp
mov ebp esp
push ecx
push eax
push 0x4
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
call sub_418f6d
add esp 0x10
cmp eax 0x4
jbe r-xdata
je r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add [ rwxdata ] 0x4
movzx eax cl
shl eax 0x8
movzx edx ch
movzx ecx [ ebp - 0x2 ]
or eax edx
movzx edx [ ebp - 0x1 ]
shl eax 0x8
or eax ecx
shl eax 0x8
or eax edx
mov esp ebp
pop ebp
retn
push r--data
jmp r-xdata
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x8
push 0x1
call sub_418663
sub_415c70
push ebp
mov ebp esp
push ecx
mov edx eax
shr edx 0x8
mov [ ebp - 0x2 ] dl
mov edx eax
mov [ ebp - 0x1 ] al
shr edx 0x10
shr eax 0x18
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x4 ] al
test ecx ecx
je r-xdata
add [ rwxdata ] 0x4
mov esp ebp
pop ebp
retn
push ecx
push 0x4
lea eax [ ebp - 0x4 ]
push 0x1
push eax
call sub_419277
add esp 0x10
cmp eax 0x4
je r-xdata
push eax
push 0x4
push r--data
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x10
push 0x1
call sub_418663
sub_415ce0
push ebp
mov ebp esp
cmp eax 0x2b
je r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x3
add eax 0x100
pop ebp
retn
cmp eax 0x2d
je r-xdata
cmp eax 0x2e
je r-xdata
xor eax eax
pop ebp
retn
sub_415d10
lea edx [ eax - 0x1 ]
mov [ rwxdata ] 0x0
cmp edx 0x9
ja r-xdata
xor eax eax
retn
cmp ecx 0x2b
jne r-xdata
cmp ecx 0x2d
jne r-xdata
push eax
push r--data
jmp r-xdata
cmp ecx 0x2e
jne r-xdata
push eax
push r--data
jmp r-xdata
push rwxdata
call sub_41887e
add esp 0xc
mov eax 0x1
retn
push eax
push r--data
sub_415d60
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
xor ebx ebx
push edi
xor edi edi
cmp [ rwxdata ] edi
mov esi eax
sete bl
mov [ rwxdata ] edi
mov [ rwxdata ] edi
mov [ ebp - 0x20 ] ebx
cmp esi edi
je r-xdata
add [ rwxdata ] 0x8
mov eax ebx
mov ecx esi
call sub_415c70
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x1 ] bl
cmp esi edi
je r-xdata
push esi
push 0x8
push 0x1
push r--data
call sub_419277
add esp 0x10
cmp eax 0x8
je r-xdata
inc [ rwxdata ]
mov cl [ ebp + 0x10 ]
mov [ ebp - 0x1 ] cl
cmp esi edi
je r-xdata
push esi
push 0x1
lea eax [ ebp - 0x1 ]
push 0x1
push eax
call sub_419277
add esp 0x10
cmp eax 0x1
je r-xdata
push eax
push 0x8
mov edi [ ebp + 0x14 ]
inc [ rwxdata ]
mov eax edi
mov ecx esi
call sub_415c70
mov [ ebp - 0x1c ] 0x1
cmp ebx 0x2b
je r-xdata
push esi
push 0x1
lea edx [ ebp - 0x1 ]
push 0x1
push edx
call sub_419277
add esp 0x10
cmp eax 0x1
je r-xdata
push eax
push 0x1
jmp r-xdata
mov ebx edi
shr ebx 0x3
add ebx 0x100
cmp ebx 0x2d
je r-xdata
push eax
push 0x1
jmp r-xdata
push r--data
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x10
mov eax [ rwxdata ]
push eax
push r--data
test eax eax
je r-xdata
cmp ebx 0x2e
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push ecx
push edx
push 0x1
push edi
call sub_418f6d
mov ebx eax
add esp 0x10
cmp ebx [ ebp + 0x14 ]
ja r-xdata
xor ebx ebx
jmp r-xdata
push r--data
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x8
jmp r-xdata
mov edi edi
push edi
call sub_4187ea
add ebx [ ebp + 0x14 ]
mov edi eax
push ebx
call sub_4187ea
add esp 0x8
mov [ ebp - 0xc ] eax
test edi edi
je r-xdata
push 0x1
call sub_418663
xor eax eax
mov ecx esi
call sub_415c70
test [ ebp - 0x20 ] 0x1
je r-xdata
test [ ebp - 0x20 ] 0x1
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx esi
call sub_415c70
call sub_4181b6
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
or eax 0xffffffff
fdiv [ r--data ]
mov [ ebp - 0x8 ] 0x0
fstp [ ebp - 0x2c ]
cmp ecx 0x2b
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax ebx
mov ecx edi
call sub_411970
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_418771
push edi
call sub_418771
add esp 0x8
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x2d
jne r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov edx ebx
mov ecx edi
call sub_409b00
jmp r-xdata
cmp ecx 0x2e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov edx ebx
mov ecx edi
call sub_40c5b0
jmp r-xdata
add esp 0xc
cmp eax 0xfffffffd
je r-xdata
push eax
push r--data
call sub_417a0c
mov esi 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov edx ebx
mov ecx edi
call sub_40f2d0
mov edx [ rwxdata ]
push edx
push r--data
jmp r-xdata
test eax eax
jne r-xdata
add esp 0x8
call sub_417a0c
mov esi 0x1
mov ecx [ ebp + 0xc ]
cmp ecx 0x2b
je r-xdata
mov ecx ebx
shr ecx 0x3
add ecx 0x100
cmp ecx 0x2d
je r-xdata
call sub_4181b6
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
mov edx ebx
mov [ ebp - 0x30 ] edx
fdiv [ r--data ]
fild [ ebp - 0x30 ]
test edx edx
jns r-xdata
cmp ecx 0x2e
je r-xdata
fadd [ rwxdata ]
mov eax ebx
shr eax 0x8
mov ecx ebx
fstp [ rwxdata ]
shr ecx 0x10
mov edx ebx
fsub [ ebp - 0x2c ]
shr edx 0x18
mov [ ebp - 0xd ] bl
mov [ ebp - 0x24 ] eax
fadd [ rwxdata ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0xf ] cl
fstp [ rwxdata ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x10 ] dl
test esi esi
je r-xdata
fadd [ r--data ]
xor ecx ecx
jmp r-xdata
add [ rwxdata ] 0x4
cmp [ ebp - 0x8 ] ebx
jae r-xdata
push esi
push 0x4
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419277
add esp 0x10
cmp eax 0x4
jne r-xdata
add ecx ebx
cmp [ ebp - 0x8 ] ecx
ja r-xdata
mov [ ebp - 0x17 ] cl
mov cl [ ebp - 0x30 ]
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x16 ] al
mov [ ebp - 0x18 ] cl
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx eax
shr ecx 0x8
mov [ ebp - 0x12 ] cl
mov edx eax
mov ecx eax
shr edx 0x10
shr ecx 0x18
mov [ ebp - 0x11 ] al
mov [ ebp - 0x13 ] dl
mov [ ebp - 0x14 ] cl
test esi esi
je r-xdata
push eax
push 0x4
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
add [ rwxdata ] 0x4
test esi esi
je r-xdata
push esi
push 0x4
lea edx [ ebp - 0x18 ]
push 0x1
push edx
call sub_419277
add esp 0x10
cmp eax 0x4
jne r-xdata
add [ rwxdata ] 0x4
test esi esi
je r-xdata
push esi
push 0x4
lea edx [ ebp - 0x14 ]
push 0x1
push edx
call sub_419277
add esp 0x10
cmp eax 0x4
jne r-xdata
add [ rwxdata ] ebx
push esi
push ebx
push 0x1
push edi
call sub_419277
add esp 0x10
cmp eax ebx
jne r-xdata
add [ rwxdata ] eax
jmp r-xdata
push esi
push eax
mov eax [ ebp - 0xc ]
push 0x1
push eax
call sub_419277
mov ecx [ ebp - 0x8 ]
add esp 0x10
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x8 ]
add [ rwxdata ] ebx
test ebx ebx
je r-xdata
push eax
push ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push eax
push ecx
push 0x1
push edi
call sub_418f6d
mov ebx eax
add esp 0x10
cmp ebx [ ebp + 0x14 ]
jbe r-xdata
push eax
push ecx
jmp r-xdata
mov eax ecx
sub_416190
push ebp
mov ebp esp
sub esp 0xc
call sub_4181b6
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fdiv [ r--data ]
fstp [ ebp - 0xc ]
jbe r-xdata
call sub_4181b6
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
fdiv [ r--data ]
fsub [ ebp - 0xc ]
fadd [ rwxdata ]
fstp [ rwxdata ]
mov esp ebp
pop ebp
retn
fld [ rwxdata ]
cmp ebx 0x2d
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
push edx
call sub_40a050
jmp r-xdata
cmp ebx 0x2e
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
push edx
call sub_40cb00
jmp r-xdata
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
fstp st0
mov edx [ rwxdata ]
push ecx
push esi
push edi
push ebx
push eax
push edx
push r--data
call sub_417a0c
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
add esp 0x24
push 0x1
call sub_418663
int3
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
push edx
call sub_40f820
cmp [ ebp - 0x4 ] esi
jne r-xdata
mov eax esi
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
cmp [ ebp + 0x8 ] 0x0
faddp st1
fst [ rwxdata ]
ja r-xdata
fadd [ r--data ]
dec [ ebp + 0x8 ]
or eax 0xffffffff
mov [ ebp - 0x4 ] esi
cmp ebx 0x2b
jne r-xdata
fstp st0
sub_4162a0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push edi
push 0x8
xor esi esi
lea ecx [ ebp - 0xc ]
push 0x1
push ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
call sub_418f6d
add esp 0x10
cmp eax 0x8
jbe r-xdata
add [ rwxdata ] eax
cmp eax 0x8
jne r-xdata
push r--data
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
mov esi 0x1
xor ecx ecx
jmp r-xdata
mov edx [ ebp + ecx - 0xc ]
cmp edx [ ecx + r--data ]
jne r-xdata
sub eax 0x4
add ecx 0x4
cmp eax 0x4
jae r-xdata
push edi
mov esi 0x4
push esi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_418f6d
add esp 0x10
cmp eax esi
ja r-xdata
je r-xdata
mov ecx [ ebp - 0x14 ]
movzx edx [ ebp - 0x12 ]
add [ rwxdata ] esi
movzx eax cl
shl eax 0x8
movzx ecx ch
or eax ecx
movzx ecx [ ebp - 0x11 ]
shl eax 0x8
or eax edx
push edi
push 0x1
shl eax 0x8
lea edx [ ebp - 0xd ]
or eax ecx
push 0x1
push edx
mov [ ebp - 0x30 ] eax
call sub_418f6d
add esp 0x10
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
je r-xdata
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x8
inc [ rwxdata ]
movzx ebx [ ebp - 0xd ]
push edi
push 0x1
lea eax [ ebp - 0xe ]
push 0x1
push eax
call sub_418f6d
add esp 0x10
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
je r-xdata
inc [ rwxdata ]
push edi
push esi
lea ecx [ ebp - 0x28 ]
push 0x1
push ecx
call sub_418f6d
add esp 0x10
cmp eax esi
ja r-xdata
push r--data
jmp r-xdata
je r-xdata
add [ rwxdata ] esi
mov eax [ ebp - 0x28 ]
movzx ecx [ ebp - 0x25 ]
movzx esi al
shl esi 0x8
movzx edx ah
movzx eax [ ebp - 0x26 ]
or esi edx
shl esi 0x8
or esi eax
shl esi 0x8
or esi ecx
mov [ ebp - 0x38 ] esi
cmp ebx 0x2b
je r-xdata
push r--data
jmp r-xdata
mov eax esi
shr eax 0x3
add eax 0x100
mov [ ebp - 0x24 ] eax
je r-xdata
cmp ebx 0x2d
je r-xdata
movzx eax [ ebp - 0xe ]
mov edx [ rwxdata ]
push eax
push ebx
push edx
push r--data
call sub_417a0c
add esp 0x10
mov esi 0x2
jmp r-xdata
movzx eax [ ebp - 0xe ]
lea edx [ eax - 0x1 ]
mov [ rwxdata ] 0x0
cmp edx 0x9
ja r-xdata
cmp ebx 0x2e
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_418771
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
mov esp ebp
pop ebp
retn
cmp ebx 0x2b
jne r-xdata
cmp ebx 0x2d
jne r-xdata
push eax
push r--data
jmp r-xdata
cmp ebx 0x2e
jne r-xdata
push eax
push r--data
jmp r-xdata
push rwxdata
call sub_41887e
mov ecx [ rwxdata ]
add esp 0xc
lea eax [ esi - 0x400 ]
push esi
push ecx
cmp eax 0x7ffc00
ja r-xdata
push eax
push r--data
push r--data
call sub_417a0c
add esp 0xc
mov esi 0x3
jmp r-xdata
push r--data
call sub_417a0c
mov edx [ ebp - 0x24 ]
add esp 0xc
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + edx ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x24 ] eax
jbe r-xdata
push eax
call sub_4187ea
mov ebx eax
add esp 0x4
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
add eax esi
mov [ ebp - 0x24 ] eax
mov eax edi
call sub_415c00
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
lea esi [ ebx + 0x4 ]
jmp r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
jmp r-xdata
add esp 0x8
xor esi esi
jmp r-xdata
mov eax edi
call sub_415c00
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax edi
call sub_415c00
mov edi eax
cmp edi esi
ja r-xdata
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
mov esi 0x5
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax esi
ja r-xdata
mov edx [ rwxdata ]
push edx
push r--data
call sub_417a0c
mov esi 0x7
jmp r-xdata
test edi edi
je r-xdata
cmp edi eax
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x24 ]
push ecx
push edi
sub esi edi
add esi ebx
push 0x1
push esi
call sub_418f6d
add esp 0x10
cmp eax edi
ja r-xdata
jne r-xdata
add [ rwxdata ] eax
mov eax [ ebp - 0x18 ]
cmp edi eax
jae r-xdata
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
movzx ecx [ ebp - 0xd ]
mov [ ebp - 0x1c ] eax
cmp ecx 0x2b
jne r-xdata
add [ rwxdata ] edi
test [ ebp - 0x30 ] 0x1
je r-xdata
push eax
push edi
push 0x1
push esi
call sub_419277
add esp 0x10
cmp eax edi
jne r-xdata
cmp ecx 0x2d
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_415c00
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
push eax
push edi
jmp r-xdata
cmp ecx 0x2e
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push edi
push esi
call sub_40a5b0
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
push ebx
push edi
push esi
call sub_40a050
jmp r-xdata
mov esi [ ebp - 0x38 ]
test esi esi
jne r-xdata
push r--data
call sub_418a37
add eax 0x40
push eax
call sub_418f8a
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x34 ]
test ecx ecx
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
push ebx
push edi
push esi
call sub_40d120
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
push edi
push esi
call sub_40cb00
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax edi
mov ecx esi
call sub_411970
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
push 0x1
call sub_418663
add [ rwxdata ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push ecx
push eax
push 0x1
push ebx
call sub_419277
mov ecx [ ebp - 0x18 ]
add esp 0x10
cmp eax ecx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
push edi
push esi
call sub_40ff20
lea eax [ ebp - 0x1c ]
push eax
push ebx
push edi
push esi
call sub_40f820
jmp r-xdata
mov edx [ rwxdata ]
push ecx
mov ecx [ ebp - 0x18 ]
push ecx
movzx ecx [ ebp - 0xd ]
push edi
push ecx
push eax
push edx
push r--data
call sub_417a0c
add esp 0x1c
mov esi 0x6
jmp r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
push eax
push ecx
mov eax ecx
mov eax [ ebp - 0x18 ]
push ebx
movzx ebx [ ebp - 0xd ]
push esi
push ecx
mov esi eax
call sub_416190
mov ebx [ ebp - 0x2c ]
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx ebx
call sub_411970
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
sub_416800
push r--data
call sub_417a0c
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
mov ecx [ rwxdata ]
push ecx
push r--data
call sub_417a0c
mov edx [ rwxdata ]
push edx
push r--data
call sub_417a0c
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
add esp 0x40
push r--data
call sub_417a0c
push r--data
call sub_417a0c
add esp 0x8
push 0x1
call sub_418663
int3
sub_4168c0
push r--data
push esi
call sub_418ca8
add esp 0x8
test eax eax
jne r-xdata
retn
mov eax [ rwxdata ]
push esi
push eax
push r--data
call sub_417a0c
add esp 0xc
push 0x1
call sub_418663
sub_4168f0
push r--data
push esi
call sub_418ca8
add esp 0x8
test eax eax
jne r-xdata
retn
mov eax [ rwxdata ]
push esi
push eax
push r--data
call sub_417a0c
add esp 0xc
push 0x1
call sub_418663
sub_416920
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
push ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov cl [ eax ]
push esi
push edi
mov ebx 0x1
mov edi 0x2d
mov esi 0x7
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] esi
mov [ rwxdata ] eax
test cl cl
je r-xdata
push r--data
push r--data
push r--data
call sub_417a0c
push r--data
call sub_417a0c
push r--data
call sub_417a0c
add esp 0x14
mov [ rwxdata ] ebx
call sub_4115e0
test eax eax
je r-xdata
inc eax
mov [ ebp - 0x1c ] 0x40000
cmp [ ebp + 0x8 ] ebx
jle r-xdata
push r--data
call sub_417a0c
push r--data
call sub_417a0c
add esp 0x8
push 0x1
call sub_418663
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x5c
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x2 ]
cmp edx eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
mov esi [ ecx + ebx * 4 ]
cmp [ esi ] 0x2d
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov [ rwxdata ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call sub_416800
cmp [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov edx r--data
mov ecx esi
lea esp [ esp ]
cmp cl 0x2f
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp ebx eax
jge r-xdata
mov esi [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jl r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
push eax
push ecx
push r--data
call sub_417a0c
add esp 0xc
mov eax esi
mov ecx edi
call sub_415d10
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ecx + eax * 4 ]
mov edi [ ecx + eax * 4 + 0x4 ]
call sub_4168c0
mov esi edi
mov ebx eax
call sub_4168f0
mov esi eax
push 0x0
push esi
mov ecx ebx
call sub_4162a0
add esp 0x8
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_416800
mov edx r--data
mov ecx esi
lea esp [ esp ]
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ecx + eax * 4 ]
mov edi [ ecx + eax * 4 + 0x4 ]
call sub_4168c0
mov esi edi
mov ebx eax
call sub_4168f0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov esi eax
mov eax [ ebp - 0x1c ]
push eax
push ecx
push edx
push ebx
mov eax esi
call sub_415d60
add esp 0x10
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
mov edx [ rwxdata ]
push esi
push edi
push edx
push r--data
call sub_417a0c
mov eax [ ebp - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
push eax
push ecx
push edx
push r--data
call sub_417a0c
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + eax * 4 ]
inc eax
push r--data
push ebx
mov [ ebp - 0x4 ] eax
call sub_418ca8
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0x8 ]
jl r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
push eax
push ecx
push rwxdata
push edx
push r--data
call sub_417a0c
add esp 0x14
cmp [ rwxdata ] 0x1
jl r-xdata
test esi esi
je r-xdata
push ebx
call sub_4193d2
add esp 0x4
mov edx [ rwxdata ]
push ebx
push edx
push r--data
call sub_417a0c
add esp 0xc
push 0x1
call sub_418663
mov edx [ ebp - 0x18 ]
fldz
push edx
fst [ rwxdata ]
push 0x0
fstp [ rwxdata ]
mov ecx esi
call sub_4162a0
mov edi eax
add esp 0x8
mov [ ebp - 0x10 ] edi
test edi edi
jne r-xdata
mov edx r--data
mov ecx esi
lea esp [ esp ]
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov ebx eax
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
mov eax [ rwxdata ]
push edi
push eax
push r--data
call sub_417a0c
add esp 0xc
fldz
fld [ rwxdata ]
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
push esi
call sub_4193d2
add esp 0x4
push esi
call sub_4193d2
add esp 0x4
test edi edi
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
push eax
push ecx
push rwxdata
push ebx
push edx
push r--data
call sub_417a0c
add esp 0x18
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
fstp st1
fstp st0
fmul [ r--data ]
fld [ r--data ]
fld [ rwxdata ]
fcom st1
fnstsw ax
fstp st1
test ah 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
fldz
fld [ rwxdata ]
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov edx r--data
mov ecx esi
nop
mov [ rwxdata ] 0x1
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sub esp 0x18
fxch st2
fstp [ esp + 0x10 ]
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push r--data
call sub_417a0c
add esp 0x1c
jmp r-xdata
fstp st2
fld st0
fdiv st2
fxch st2
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fstp st0
fstp st0
fmul [ r--data ]
fld [ r--data ]
fld [ rwxdata ]
fcom st1
fnstsw ax
fstp st1
test ah 0x1
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov eax [ ebp - 0x18 ]
fxch st2
sub esp 0x18
fstp [ esp + 0x10 ]
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push eax
push r--data
call sub_417a0c
add esp 0x20
jmp r-xdata
fstp st2
fld st0
fdiv st2
fxch st2
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2b ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2b ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2d ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2d ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2e ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x31
jl r-xdata
lea edi [ ecx + 0x2e ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
mov edx r--data
mov ecx esi
nop
cmp al 0x39
jg r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
mov edx r--data
mov ecx esi
lea esp [ esp ]
mov [ ebp - 0xc ] 0xa
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
movsx eax al
sub eax 0x30
mov [ ebp - 0xc ] eax
jmp r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
cmp al 0x62
jne r-xdata
mov [ ebp - 0xc ] 0xa
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
cmp al 0x44
jne r-xdata
cmp [ esi + 0x2 ] 0x0
lea ecx [ esi + 0x2 ]
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov ecx r--data
mov eax esi
lea ecx [ ecx ]
cmp [ esi + 0x2 ] 0x0
lea ecx [ esi + 0x2 ]
je r-xdata
push ecx
call sub_4192f1
lea edx [ eax - 0x400 ]
add esp 0x4
cmp edx 0x7ffc00
ja r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
push ecx
call sub_4192f1
add esp 0x4
cmp eax 0x1
jle r-xdata
push eax
mov eax [ rwxdata ]
push eax
push r--data
call sub_417a0c
add esp 0xc
push 0x1
call sub_418663
mov [ ebp - 0x1c ] eax
jmp r-xdata
inc [ rwxdata ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ rwxdata ]
push eax
push ecx
push r--data
call sub_417a0c
add esp 0xc
push 0x1
call sub_418663
mov [ ebp - 0x18 ] eax
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_41711c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_4197a0
lea esi [ eax + 0x1 ]
push esi
call sub_4187ea
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_419733
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_41717a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_41711c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4171a1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_41715c
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_41711c
jmp r-xdata
sub_4171e1
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41720a
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41725b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41715c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_417282
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4171a1
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4172a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41715c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_4172eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41715c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_41732f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41715c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_417380
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_417404 ]
jmp [ ecx * 4 + jump_table_417484 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4174f0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41768c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_417590 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41768c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4174f0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41768c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4174f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4174f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4174f0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41768c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41768c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41768c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4176ec
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rwxdata ]
call esi
push [ rwxdata ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_419aaa
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_419a0a
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_419a0a
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
sub_4177a2
mov edi edi
push esi
push 0x4
push 0x20
call sub_4199be
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4177d3
push 0xc
push r--data
call sub_419ae0
call sub_4183a6
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4176ec
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417809
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
sub_417826
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41a947
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41a6e1
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_419f22
mov [ esi + 0x4 ] eax
sub_4178cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_417826
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_41af48
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41b01d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41b2d4
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41aec0
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4179e0
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4178cb
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_417a0c
push 0xc
push r--data
call sub_419ae0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_418a37
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_418b4f
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_418a37
add eax ebx
push eax
call sub_41c337
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_418a37
add eax ebx
push eax
call sub_41c4e7
mov [ ebp - 0x1c ] eax
call sub_418a37
add eax ebx
push eax
push edi
call sub_41c3d3
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417aa0
mov eax [ ebp - 0x1c ]
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
call sub_419b25
retn
sub_417b2e
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rwxdata ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rwxdata ] edx
pop ebp
retn
sub_417b6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417bc4
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417b6e
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_417bf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417c45
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417bf4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_417c73
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417cc4
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417c73
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_417cf2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417d43
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417cf2
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_417d71
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417dc7
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417d71
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_417df7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417e48
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417df7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_417e76
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417ec7
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417e76
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_417ef5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417f4b
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417ef5
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_417f7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_417fd1
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417f7b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_418001
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_418057
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_418001
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_418087
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4180d8
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_418087
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_418125
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417b6e
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_418148
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_417bc4
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_418167
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417ef5
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41818a
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_417f4b
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4181b6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
sub eax [ rwxdata ]
sbb ecx [ rwxdata ]
xor esi esi
add eax [ ebp - 0x8 ]
push esi
push 0x2710
adc ecx esi
push ecx
push eax
call sub_41d3f0
pop esi
leave
retn
sub_4181f0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
xor esi esi
xor eax eax
add eax [ ebp - 0x8 ]
adc ecx esi
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
xor eax eax
pop esi
leave
retn
sub_418248
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4182ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41829b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_4182ea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_41dbe0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_41830a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_41dbe0
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_41832b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_41dbe0
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_418363
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4183b8
mov edi edi
push esi
call sub_41a75a
mov esi eax
push esi
call sub_41e4b4
push esi
call sub_41d093
push esi
call sub_41d866
push esi
call sub_41e3b5
push esi
call sub_41dec2
push esi
call sub_41deb1
add esp 0x18
pop esi
retn
sub_4183eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_418408
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_41842c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_41845c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_41848c
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_41e584
push r--data
push r--data
call sub_418408
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_41e640
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_41e55e
call sub_41780f
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rwxdata ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rwxdata
call sub_41e640
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_418523
push 0x20
push r--data
call sub_419ae0
push 0x8
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41864e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] eax
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_419b25
retn
mov [ rwxdata ] 0x1
push 0x8
call sub_41dd09
pop ecx
push [ ebp + 0x8 ]
call sub_41838e
mov [ ebp - 0x20 ] r--data
push [ rwxdata ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rwxdata ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_41a75a
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_41a75a
mov [ edi ] eax
call ebx
push [ rwxdata ]
call esi
mov ebx eax
push [ rwxdata ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_4186cb
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_4170f2
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_4186f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4187ea
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41e510
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rwxdata ] 0x1
mov edi rwxdata
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_417282
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_41e6fc
int3
or [ rwxdata ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_4170f2
push sub_43884f
mov [ rwxdata ] esi
call sub_41780f
pop ecx
sub_418771
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41af48
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41af06
pop ecx
mov [ esi ] eax
pop esi
sub_4187ab
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_41d681
push 0x1e
call sub_41d4d2
push 0xff
call sub_41838e
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_4187ea
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_41e510
pop ecx
call sub_41af48
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_41d681
push 0x1e
call sub_41d4d2
push 0xff
call sub_41838e
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_41af48
mov [ eax ] esi
push ebx
call sub_41e510
pop ecx
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
jmp r-xdata
call sub_41af48
mov [ eax ] esi
sub_41887e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41c4e7
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41e780
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_41891e
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41eb6d
add esp 0x14
pop ebp
retn
sub_41893c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41eb6d
add esp 0x14
pop ebp
retn
sub_41895b
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ec01
add esp 0x18
pop ebp
retn
sub_41897c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ec01
add esp 0x18
pop ebp
retn
sub_41899e
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ed36
add esp 0x14
pop ebp
retn
sub_4189bc
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ed36
add esp 0x14
pop ebp
retn
sub_418a3d
mov eax [ rwxdata ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4199be
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rwxdata ] eax
xor edx edx
mov ecx rwxdata
jmp r-xdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_4199be
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rwxdata
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rwxdata ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rwxdata
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rwxdata
jl r-xdata
sub_418b0e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rwxdata
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rwxdata
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_41ddfa
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_418b4f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_41ddfa
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_418b81
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rwxdata
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41dd09
pop ecx
pop ebp
retn
sub_418bbd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_41dd09
pop ecx
pop ebp
retn
sub_418bec
push 0xc
push r--data
call sub_419ae0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_419b25
retn
call sub_41f511
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_41af48
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_41f27a
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418c9e
mov eax [ ebp - 0x1c ]
call sub_41af48
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_41f650
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_418cbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_418bec
add esp 0xc
mov [ esi ] eax
test eax eax
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
call sub_41af48
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_418d06
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_41af48
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test esi esi
je r-xdata
push ebx
push 0x0
push ecx
call sub_420010
add esp 0xc
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_41f7a2
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
js r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_41af48
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_420010
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_41ff71
pop ecx
push eax
call sub_41fe7b
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41ff97
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_41d26b
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_418edf
push 0xc
push r--data
call sub_419ae0
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_418b0e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418d06
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418f63
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_419b25
retn
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_420010
add esp 0xc
sub_418f8a
push 0xc
push r--data
call sub_419ae0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
cmp eax ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] edi
push edi
call sub_418b0e
pop ecx
mov [ ebp - 0x4 ] ebx
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_419b25
retn
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push edi
call sub_41ff71
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41908c
mov eax [ ebp - 0x1c ]
push edi
call sub_41c337
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push edi
call sub_41c4e7
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_41c3d3
add esp 0x1c
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_419120
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_41e780
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_41f094
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_41ff71
pop ecx
push eax
call sub_42094f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_420a30
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_419277
push 0xc
push r--data
call sub_419ae0
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_418b0e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419120
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4192e7
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
call sub_419b25
retn
sub_419365
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_41f094
push esi
mov edi eax
call sub_4214db
push esi
call sub_41ff71
push eax
call sub_421417
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_418771
and [ esi + 0x1c ] 0x0
pop ecx
sub_4193d2
push 0xc
push r--data
call sub_419ae0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
push esi
call sub_418b0e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_419365
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41943e
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_419b25
retn
mov eax [ ebp - 0x1c ]
sub_4194b6
push 0x58
push r--data
call sub_419ae0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_41e748
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_41ab0a
test eax eax
jne r-xdata
push 0x1c
call sub_419446
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_41e538
mov [ ebp - 0x4 ] esi
call sub_41ed60
test eax eax
jns r-xdata
push 0x10
call sub_419446
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_421a8b
mov [ rwxdata ] eax
call sub_4219d0
test eax eax
jns r-xdata
push 0x1b
call sub_4186ad
call sub_42174b
test eax eax
jns r-xdata
push 0x8
call sub_4186ad
push 0x1
call sub_41848c
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_4186ad
call sub_4216ec
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_4186ad
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_41868f
jmp r-xdata
push eax
call sub_418663
push ecx
push eax
push esi
push __dos_header
call sub_411f20
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_419b25
retn
sub_41962d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_421bbd
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_421bbd
pop ecx
sub_419733
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_41d26b
mov eax esi
jmp r-xdata
sub_4197a0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41993e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_419979
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4187ea
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_4199be
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421bc5
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_419a0a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421c47
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_419a58
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421cf4
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_419aaa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
pop ebp
retn
sub_419ae0
push sub_419b70
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_419b70
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4170d2
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4170d2
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_41f78b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_41f742
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4170d2
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4170d2
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_41f772
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_41f78b
mov eax [ ebp + 0xc ]
push r--data
call sub_41e640
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4170d2
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_41f759
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4170d2
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_419cff
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_419d2e
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_420010
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_419d92
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_421e49
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41aec0
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41aec0
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_420010
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_419f22
push 0xc
push r--data
call sub_419ae0
call sub_41a947
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419fbd
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_419b25
retn
push 0x20
call sub_4186ad
cmp esi rwxdata
je r-xdata
push esi
call sub_418771
pop ecx
sub_419fc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_417826
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41a042
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_419fc6
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_419d2e
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_420010
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_419cff
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_419d92
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_420010
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_419cff
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_41a22b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_41a269
push 0x14
push r--data
call sub_419ae0
or [ ebp - 0x20 ] 0xffffffff
call sub_41a947
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_419f22
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_419fc6
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_419979
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_419b25
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_41a042
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_41af48
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_418771
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_418771
pop ecx
push 0xd
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a3ca
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_418771
pop ecx
sub_41a421
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41a4b0
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41a549
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_418771
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_418771
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_418771
push [ esi + 0xc0 ]
call sub_418771
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_422688
push [ esi + 0xd4 ]
call sub_418771
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_418771
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_418771
pop ecx
push [ esi + 0xb0 ]
call sub_418771
push [ esi + 0xbc ]
call sub_418771
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_418771
push [ esi + 0xbc ]
call sub_422d35
pop ecx
pop ecx
push eax
call sub_418771
pop ecx
push eax
call sub_418771
push [ esi + 0xbc ]
call sub_422aac
pop ecx
pop ecx
sub_41a694
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_41a421
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_41a4b0
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_41a549
pop ecx
sub_41a6e1
push 0xc
push r--data
call sub_419ae0
call sub_41a947
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rwxdata ]
add esi 0x6c
push esi
call sub_41a694
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a74e
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41a947
mov esi [ eax + 0x6c ]
mov eax esi
call sub_419b25
retn
push 0x20
call sub_4186ad
sub_41a78c
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_41a7dd
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
or [ rwxdata ] 0xffffffff
jmp sub_41dcb2
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
sub_41a81a
push 0x8
push r--data
call sub_419ae0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a8bc
push 0xc
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_41a421
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a8c5
call sub_419b25
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_41a8ce
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_41a78c
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_4199be
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_418771
pop ecx
xor esi esi
push 0x0
push esi
call sub_41a81a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41a961
push 0x8
push r--data
call sub_419ae0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_419b25
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_418771
pop ecx
push 0xd
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_418771
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41aa7b
push 0xc
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41aa87
push esi
call sub_418771
pop ecx
push edi
call sub_41a4b0
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_418771
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41a549
pop ecx
sub_41aa90
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_41a961
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_41ab0a
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
call sub_41a7dd
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_41a763
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_4183b8
push [ rwxdata ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
call sub_41dc68
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_41a7dd
mov edi [ DecodePointer@IAT ]
push sub_41a961
push [ rwxdata ]
call edi
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_4199be
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41a81a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_41ac9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_418771
pop ecx
sub_41acbb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_41acd9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_41ac9b
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_4187ea
pop ecx
cmp eax ebx
je r-xdata
call sub_4231f0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_41ac9b
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_4187ea
pop ecx
cmp eax ebx
je r-xdata
call sub_4231f0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_41aec0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41acd9
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41af06
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_41af6e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41af5b
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41af06
pop ecx
mov esi eax
call sub_41af48
mov [ eax ] esi
pop esi
pop ebp
retn
sub_41af91
mov edi edi
push ebp
mov ebp esp
call sub_41a8ce
test eax eax
jne r-xdata
call sub_41af48
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_41afb2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_41af48
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_41d26b
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41afd7
mov edi edi
push ebp
mov ebp esp
call sub_41a8ce
test eax eax
jne r-xdata
call sub_41af5b
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_41aff8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_41af5b
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_41d26b
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41b01d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41b23c
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41b262
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41b288
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41b2ae
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41b2d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_417826
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41b01d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_421e49
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41b38c
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b2d4
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_41b3be
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41d1ff
sub_41b3eb
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_41a421
pop ecx
pop edi
sub_41b411
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41a947
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_41b498
push 0x8
push r--data
call sub_419ae0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_419b25
retn
push 0xd
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b545
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_418771
pop ecx
push 0xc
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_41a4b0
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b551
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_418771
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_41a549
pop ecx
sub_41b565
push 0xc
push r--data
call sub_419ae0
call sub_41a947
mov edi eax
push 0x1
push 0x8
call sub_4199be
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_41a6e1
call sub_419f22
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_41a421
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b5ff
push 0xd
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b60b
mov eax esi
call sub_41af48
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_419b25
retn
sub_41b61c
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41d1ff
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4236f1
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_41b65d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_420010
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_423760
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_4237a6
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_4237a6
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_41d1ff
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_423760
test eax eax
sub_41b77c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419733
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41d1ff
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b61c
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b61c
add esp 0x14
sub_41b7e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_419979
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_41b61c
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_41b61c
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_418771
pop ecx
push r--data
push ebx
push edi
call sub_4236f1
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_418771
pop ecx
push [ ebp - 0x10 ]
call sub_418771
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_418771
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_418771
pop ecx
sub_41b94c
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_41a947
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_4197a0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_41b65d
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_419733
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_423e28
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_41b77c
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_420a30
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_419733
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_420a30
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_4237a6
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
call sub_41d1ff
sub_41bb6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_41a947
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_41b94c
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_41dbe0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_4197a0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_419979
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_420a30
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_419733
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_420a30
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rwxdata
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_418771
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_421e49
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_418771
push [ ebx + 0x54 ]
call sub_418771
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_425533
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_41bea7
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_41b7e7
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_41bb6d
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_41b94c
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_41bb6d
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_426a87
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_4197a0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_423760
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_4237a6
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41d1ff
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_41bb6d
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_426b50
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_41c0c3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_4199be
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_4199be
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_41af48
mov [ eax ] 0xc
push edi
push 0x220
call sub_4199be
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_418771
mov eax [ esi ]
mov ecx rwxdata
call sub_41b3eb
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_41bea7
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_418771
push esi
call sub_418771
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_41a042
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_41a4b0
push [ esi ]
call sub_41a549
push esi
call sub_418771
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_418771
push [ esi ]
call sub_41a4b0
push [ esi ]
call sub_41a549
push esi
call sub_418771
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_41c1c3
push 0x14
push r--data
call sub_419ae0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_41a947
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_41a6e1
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_4199be
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c332
mov eax [ ebp - 0x20 ]
push 0xc
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_41b3eb
and [ ebp - 0x4 ] 0x0
call sub_41c2f5
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_41bea7
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_419b25
retn
push ebx
call sub_41a4b0
push ebx
call sub_41a549
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_41a694
push ebx
call sub_41a4b0
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41c301
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] edi
push [ edi ]
push rwxdata
call sub_41a694
pop ecx
pop ecx
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
sub_41c337
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41ff71
push eax
call sub_426b90
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_418a37
add eax 0x20
cmp esi eax
jne r-xdata
call sub_418a37
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rwxdata ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rwxdata ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_419979
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_41c3d3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_41f094
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_41c407
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41e780
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41c43a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_41c407
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_41c460
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_41c407
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_41af48
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_41c407
sub_41c4e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_417826
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_41ff71
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_41d0a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_420010
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_421bbd
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_421bbd
pop ecx
sub_41d1cb
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_41d1ff
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41d0a2
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_41d23e
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d1ff
int3
pop ebp
jmp eax
sub_41d27b
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_41d23e
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41d0a2
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_41d2b4
push 0x10
push r--data
call sub_419ae0
call sub_418a37
lea esi [ eax + 0x20 ]
mov [ ebp - 0x1c ] esi
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push esi
call sub_418b0e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41c337
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_41c3d3
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d331
mov eax [ ebp - 0x20 ]
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
call sub_419b25
retn
sub_41d3f0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41d458
call sub_41dfb3
test eax eax
je r-xdata
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_41e212
pop ecx
push 0x3
call sub_418679
int3
push 0x1
push 0x40000015
push 0x3
call sub_41d0a2
add esp 0xc
sub_41d48b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_41d4ac
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_41d4d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41d4ac
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
push 0x3
call sub_4292e9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_4292e9
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rwxdata
push edi
call sub_429286
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_4197a0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_41d1ff
push esi
call sub_42926b
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_429286
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_429129
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_42926b
lea eax [ eax * 2 + rwxdata ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_42919e
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_429129
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_428fbd
add esp 0xc
jmp r-xdata
sub_41d681
push 0x3
call sub_4292e9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41d4d2
push 0xff
call sub_41d4d2
pop ecx
pop ecx
push 0x3
call sub_4292e9
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_41d6ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_429411
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_4199be
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_418771
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_4199be
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_4237a6
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_429411
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41d1ff
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_418771
pop ecx
inc esi
push esi
push eax
call sub_4199be
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_418771
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_429411
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
sub_41d875
push 0xc
push r--data
call sub_419ae0
push 0xe
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d8dc
call sub_419b25
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_418771
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_418771
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_41d8e5
push 0xc
push r--data
call sub_419ae0
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_418771
push sub_4187ea
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_42e626
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_4197a0
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_419b25
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_418771
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d9ce
push 0x8
call sub_4187ea
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_4187ea
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_418771
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_419733
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_41d1ff
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_41d9d7
push 0xc
push r--data
call sub_419ae0
push 0xe
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41da3e
call sub_419b25
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_418771
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_418771
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_41da47
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_418771
push sub_4187ea
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e626
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_41da7a
push 0x10
push r--data
call sub_419ae0
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41db7d
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_41da47
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_4197a0
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_41f650
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_4187ea
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_419b25
retn
push [ ebp - 0x1c ]
call sub_418771
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_4187ea
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_418771
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_419733
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_41d1ff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_41db86
push 0x8
push r--data
call sub_419ae0
push 0xe
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41dbd0
call sub_419b25
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_418771
push esi
call sub_418771
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_41dbe0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_41dc68
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_41dcb2
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_418771
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_41dd38
push 0xc
push r--data
call sub_419ae0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_41d681
push 0x1e
call sub_41d4d2
push 0xff
call sub_41838e
push 0x18
call sub_419979
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_41af48
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_419b25
retn
push edi
call sub_418771
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_418771
pop ecx
call sub_41af48
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ddf1
mov eax [ ebp - 0x1c ]
sub_41ddfa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_41dd38
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4186ad
sub_41dee0
push 0x10
push r--data
call sub_419ae0
xor edi edi
push edi
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41df5c
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_41a75a
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_419b25
retn 0x4
sub_41df7c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_41dfd2
push 0x10
push r--data
call sub_419ae0
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_41dee0
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_41af5b
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e1d7
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_41a8ce
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_419b25
retn
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_41df7c
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_419979
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_420a30
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_41e212
push 0x20
push r--data
call sub_419ae0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_41a8ce
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_419b25
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41df7c
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_418679
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_41ddfa
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41a75a
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e379
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_41e3c4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_41af48
mov [ eax ] 0xc
call sub_41af48
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_41a75a
push edi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_41af48
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_41af06
pop ecx
mov [ edi ] eax
call sub_41d26b
call esi
push eax
call sub_41af06
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_41e4c3
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_41ddfa
pop ecx
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rwxdata ] eax
call sub_41dd09
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_41e510
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41e538
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_41e55e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_41e584
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rwxdata ]
call [ EncodePointer@IAT ]
mov [ edi + rwxdata ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_41e5b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_41e5f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e640
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_419b70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_41e5b0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_41e5f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e6fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41e780
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41ff71
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41af48
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_418a37
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_42094f
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_426b90
pop ecx
test eax eax
jne r-xdata
call sub_418a37
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_42094f
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_42ef8e
pop ecx
pop edi
mov eax rwxdata
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_42eea4
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41e8e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
leave
retn
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41c4e7
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41e780
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_41e982
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push 0x7
xor edx edx
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
[ edi ]
pop edi
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] edx
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
leave
retn
sub_41ea50
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41e780
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_41eb1a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_41ea50
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_41eb43
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_41ea50
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_41eb6d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
pop ebp
retn
call sub_41af48
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_41d26b
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_426f1b
call sub_41ea50
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_41af48
mov [ eax ] 0x22
sub_41ec01
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_41d26b
call sub_41af48
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_426f1b
call sub_41ea50
add esp 0x18
mov [ esi + edi - 0x1 ] 0x0
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
inc ebx
push ebx
push esi
push sub_426f1b
call sub_41ea50
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_41af48
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_41af48
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_41af48
mov [ eax ] edi
jmp r-xdata
call sub_41af48
mov [ eax ] 0x22
call sub_41af48
mov [ eax ] ebx
jmp r-xdata
sub_41eced
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ec01
add esp 0x18
pop ebp
retn
sub_41ed0d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_427cd1
call sub_41ea50
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_41ed36
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_427cd1
call sub_41ea50
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_41ed60
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_4199be
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rwxdata ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rwxdata ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rwxdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
add [ rwxdata ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rwxdata ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_4199be
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_41efa5
mov edi edi
push esi
push edi
mov edi rwxdata
add edi 0x4
cmp edi rwxdata
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_418771
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_41eff8
push 0x10
push r--data
call sub_419ae0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f08b
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
mov esi edi
mov eax [ rwxdata ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rwxdata ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_4193d2
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_418771
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_41f094
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_41ff71
pop ecx
push eax
call sub_42094f
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_41f0fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41f094
pop ecx
test eax eax
je r-xdata
push esi
call sub_41f144
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_41ff71
push eax
call sub_42efd7
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_41f144
push 0x14
push r--data
call sub_419ae0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f215
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_419b25
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
push eax
push esi
call sub_418b4f
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_41f1e6
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_41f0fc
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_41f0fc
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_41f21e
push 0xc
push r--data
call sub_419ae0
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_418b0e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_41f0fc
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f267
mov eax [ ebp - 0x1c ]
push esi
call sub_41f144
pop ecx
jmp r-xdata
call sub_419b25
retn
sub_41f27a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_42f988
add esp 0x14
test eax eax
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
inc [ rwxdata ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_42fd12
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_42fbac
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_42fbac
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_42fbac
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_41f511
push 0x10
push r--data
call sub_419ae0
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f63b
mov eax edi
call sub_419b25
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_419979
pop ecx
mov ecx [ rwxdata ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rwxdata ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rwxdata ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_418771
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_418b4f
pop ecx
pop ecx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_41dd38
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_418bbd
pop ecx
pop ecx
sub_41f650
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_41f6e0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_42fe45
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_42fe64
jmp r-xdata
sub_41f6e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4170d2
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_41f650
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41f742
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41f772
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f7a2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_42ef8e
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_41ff71
pop ecx
push eax
call sub_41fe7b
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_41ff71
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rwxdata
push esi
call sub_41ff71
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_41ff71
sar eax 0x5
push esi
lea edi [ eax * 4 + rwxdata ]
call sub_41ff71
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_41f8c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_41af5b
mov [ eax ] ebx
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
cmp esi [ rwxdata ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_41af5b
mov [ eax ] ebx
call sub_41af48
mov [ eax ] 0x9
jmp r-xdata
call sub_41af5b
mov [ eax ] ebx
call sub_41af48
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_41d26b
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_419979
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_42ee1f
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_41af48
mov [ eax ] 0xc
call sub_41af5b
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_41af6e
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_418771
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_41af48
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_42ee1f
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42ee1f
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_42ee1f
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_41fe7b
push 0x10
push r--data
call sub_419ae0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
cmp ebx [ rwxdata ]
jb r-xdata
call sub_419b25
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x16
jmp r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41f8c4
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_41d26b
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ff69
mov eax [ ebp - 0x1c ]
sub_41ff71
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
pop ebp
retn
sub_41ff97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_420010
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_420a30
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_41d26b
mov eax esi
jmp r-xdata
sub_420010
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_43034c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_42008a
push 0xc
push r--data
call sub_419ae0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] edi
push edi
call sub_418b0e
pop ecx
mov [ ebp - 0x4 ] esi
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_419b25
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push edi
call sub_41ff71
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42018b
mov eax [ ebp - 0x1c ]
push edi
call sub_41c337
mov esi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_41c3d3
add esp 0x1c
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_420252
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_4305c0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rwxdata ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_41af5b
mov [ eax ] edi
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
jmp r-xdata
push esi
call sub_426b90
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_42ee1f
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_41a947
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_41af48
mov [ eax ] 0x1c
call sub_41af5b
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_41af6e
pop ecx
jmp r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41b055
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_430406
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_4305a4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_4305a4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_430406
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_42094f
push 0x10
push r--data
call sub_419ae0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_419b25
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_420252
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420a1b
mov eax [ ebp - 0x1c ]
sub_420a30
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_420ab4 ]
jmp [ ecx * 4 + jump_table_420b34 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_420ba0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_420d3c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_420c40 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_420d3c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_420ba0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_420d3c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_420ba0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_420ba0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_420ba0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_420d3c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_420d3c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_420d3c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_420d91
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_417826
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41b2d4
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_41af48
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_420fbc
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_420d91
add esp 0x14
pop ebp
retn
sub_421004
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_420d91
add esp 0x14
pop ebp
retn
sub_42104d
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_417826
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_41b2d4
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_426de0
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_41af48
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_4305f0
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_4212ea
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_42104d
add esp 0x14
pop ebp
retn
sub_421332
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_42104d
add esp 0x14
pop ebp
retn
sub_42137b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42ff6e
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rwxdata ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_41af6e
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_42ff6e
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42ff6e
push 0x1
mov edi eax
call sub_42ff6e
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_42fee8
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_421417
push 0x10
push r--data
call sub_419ae0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_419b25
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_42137b
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4214d3
mov eax [ ebp - 0x1c ]
sub_4214db
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_418771
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_42150c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41de2d
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_42155c
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_421582
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41a8ce
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4216cc
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_421582
pop ecx
pop ecx
pop ebp
retn
sub_4216ec
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_41a403
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_430830
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_42174b
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_41a403
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_4199be
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_4197a0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_4197a0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rwxdata ]
call sub_418771
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_4199be
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_418771
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_419733
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
int3
add edi 0x4
sub_421836
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_430830
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_430830
pop ecx
test eax eax
je r-xdata
call sub_430830
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_4219d0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_41a403
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_421836
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_419979
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_421836
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_421a8b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_419979
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_418771
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_421b22
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_421bc5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_41af48
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rwxdata ] 0x0
je r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_41e510
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_421c47
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4187ea
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_418771
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_41e510
pop ecx
call sub_41af48
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
pop edi
call sub_41af48
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41af06
pop ecx
mov [ esi ] eax
push esi
call sub_41e510
pop ecx
test eax eax
je r-xdata
call sub_41af48
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41af06
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_421cf4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_421c47
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_419aaa
pop ecx
mov ebx eax
call sub_41af48
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_420010
add esp 0xc
sub_421d62
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_420010
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41ac9b
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4187ea
pop ecx
cmp eax ebx
je r-xdata
call sub_4231f0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_421e49
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_421d62
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_421e89
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_41d6ba
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41d6ba
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41d6ba
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41d6ba
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_422688
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_418771
push [ esi + 0x8 ]
call sub_418771
push [ esi + 0xc ]
call sub_418771
push [ esi + 0x10 ]
call sub_418771
push [ esi + 0x14 ]
call sub_418771
push [ esi + 0x18 ]
call sub_418771
push [ esi ]
call sub_418771
push [ esi + 0x20 ]
call sub_418771
push [ esi + 0x24 ]
call sub_418771
push [ esi + 0x28 ]
call sub_418771
push [ esi + 0x2c ]
call sub_418771
push [ esi + 0x30 ]
call sub_418771
push [ esi + 0x34 ]
call sub_418771
push [ esi + 0x1c ]
call sub_418771
push [ esi + 0x38 ]
call sub_418771
push [ esi + 0x3c ]
call sub_418771
add esp 0x40
push [ esi + 0x40 ]
call sub_418771
push [ esi + 0x44 ]
call sub_418771
push [ esi + 0x48 ]
call sub_418771
push [ esi + 0x4c ]
call sub_418771
push [ esi + 0x50 ]
call sub_418771
push [ esi + 0x54 ]
call sub_418771
push [ esi + 0x58 ]
call sub_418771
push [ esi + 0x5c ]
call sub_418771
push [ esi + 0x60 ]
call sub_418771
push [ esi + 0x64 ]
call sub_418771
push [ esi + 0x68 ]
call sub_418771
push [ esi + 0x6c ]
call sub_418771
push [ esi + 0x70 ]
call sub_418771
push [ esi + 0x74 ]
call sub_418771
push [ esi + 0x78 ]
call sub_418771
push [ esi + 0x7c ]
call sub_418771
add esp 0x40
push [ esi + 0x80 ]
call sub_418771
push [ esi + 0x84 ]
call sub_418771
push [ esi + 0x88 ]
call sub_418771
push [ esi + 0x8c ]
call sub_418771
push [ esi + 0x90 ]
call sub_418771
push [ esi + 0x94 ]
call sub_418771
push [ esi + 0x98 ]
call sub_418771
push [ esi + 0x9c ]
call sub_418771
push [ esi + 0xa0 ]
call sub_418771
push [ esi + 0xa4 ]
call sub_418771
push [ esi + 0xa8 ]
call sub_418771
push [ esi + 0xbc ]
call sub_418771
push [ esi + 0xc0 ]
call sub_418771
push [ esi + 0xc4 ]
call sub_418771
push [ esi + 0xc8 ]
call sub_418771
push [ esi + 0xcc ]
call sub_418771
add esp 0x40
push [ esi + 0xd0 ]
call sub_418771
push [ esi + 0xb8 ]
call sub_418771
push [ esi + 0xd8 ]
call sub_418771
push [ esi + 0xdc ]
call sub_418771
push [ esi + 0xe0 ]
call sub_418771
push [ esi + 0xe4 ]
call sub_418771
push [ esi + 0xe8 ]
call sub_418771
push [ esi + 0xec ]
call sub_418771
push [ esi + 0xd4 ]
call sub_418771
push [ esi + 0xf0 ]
call sub_418771
push [ esi + 0xf4 ]
call sub_418771
push [ esi + 0xf8 ]
call sub_418771
push [ esi + 0xfc ]
call sub_418771
push [ esi + 0x100 ]
call sub_418771
push [ esi + 0x104 ]
call sub_418771
push [ esi + 0x108 ]
call sub_418771
add esp 0x40
push [ esi + 0x10c ]
call sub_418771
push [ esi + 0x110 ]
call sub_418771
push [ esi + 0x114 ]
call sub_418771
push [ esi + 0x118 ]
call sub_418771
push [ esi + 0x11c ]
call sub_418771
push [ esi + 0x120 ]
call sub_418771
push [ esi + 0x124 ]
call sub_418771
push [ esi + 0x128 ]
call sub_418771
push [ esi + 0x12c ]
call sub_418771
push [ esi + 0x130 ]
call sub_418771
push [ esi + 0x134 ]
call sub_418771
push [ esi + 0x138 ]
call sub_418771
push [ esi + 0x13c ]
call sub_418771
push [ esi + 0x140 ]
call sub_418771
push [ esi + 0x144 ]
call sub_418771
push [ esi + 0x148 ]
call sub_418771
add esp 0x40
push [ esi + 0x14c ]
call sub_418771
push [ esi + 0x150 ]
call sub_418771
push [ esi + 0x154 ]
call sub_418771
push [ esi + 0x158 ]
call sub_418771
push [ esi + 0x15c ]
call sub_418771
push [ esi + 0x160 ]
call sub_418771
add esp 0x18
sub_4229ff
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rwxdata
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_4199be
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_421e89
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_422688
push edi
call sub_418771
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_422a7c
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_422aac
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
push esi
call sub_418771
pop ecx
sub_422b15
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_4199be
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_419979
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_418771
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov [ ebx ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x4 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x8 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x30 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_419979
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_422aac
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_418771
push [ esi + 0xbc ]
call sub_418771
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_418771
push [ ebp - 0x8 ]
call sub_418771
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_422d05
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_422d35
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_418771
pop ecx
push esi
call sub_418771
pop ecx
sub_422e33
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_4199be
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_419979
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_418771
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_419979
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41d6ba
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_418771
push [ ebp - 0x8 ]
call sub_418771
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_422d35
push ebx
call sub_418771
push [ ebp - 0x8 ]
call sub_418771
push [ ebp - 0x4 ]
call sub_418771
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_418771
push [ esi + 0xb0 ]
call sub_418771
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_42321c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_423290
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_419979
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_4199be
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_4199be
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_4199be
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_4199be
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_41d6ba
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_418771
push [ ebp - 0x1c ]
call sub_418771
push [ ebp - 0x20 ]
call sub_418771
push [ ebp - 0x28 ]
call sub_418771
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_418771
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_421e49
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_41aec0
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_41aec0
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_420a30
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_420a30
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_420a30
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_418771
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_418771
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_418771
push [ esi + 0xc0 ]
call sub_418771
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_4236f1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_41d26b
mov eax esi
jmp r-xdata
sub_423760
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4237a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_41d26b
mov eax esi
jmp r-xdata
sub_42385b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_4238d1
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_41dbe0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_4192f1
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_423955
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_42397a
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_4239ab
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_4239c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41a947
mov edx edi
mov esi eax
call sub_42397a
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_423955
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_423a6d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_4239ab
push esi
mov edi eax
call sub_4197a0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_423ac8
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41a947
mov edx edi
lea esi [ eax + 0x9c ]
call sub_42397a
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4309da
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_430b03
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_4197a0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_423955
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_4197a0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_423a6d
pop ecx
pop ecx
test eax eax
je r-xdata
sub_423c99
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41a947
mov edx edi
lea esi [ eax + 0x9c ]
call sub_42397a
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4309da
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_423a6d
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_423d59
push [ esi + 0x4 ]
call sub_4197a0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4239c6
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_423d85
push [ esi ]
call sub_4197a0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_4197a0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_4239ab
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_423ac8
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_423dec
push [ esi ]
call sub_4197a0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_4239ab
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_423c99
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_423e28
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41a947
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_42385b
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_4238d1
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_4197a0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4239c6
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_423dec
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_42385b
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_423d85
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_423dec
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_423d85
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_419733
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_430c10
add esp 0x10
sub_42403f
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_42407b
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_4240eb
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_4254b3 ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_425533
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_426a07 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_426a87
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_426b50
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_426b90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_426be6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_41af48
mov [ eax ] 0x2a
call sub_41af48
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41af48
push 0x22
pop esi
mov [ eax ] esi
call sub_41d26b
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_420010
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_420010
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_426d58
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_417826
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_426be6
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_426da9
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_423637
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_426be6
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_426de0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_426e75
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41e780
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_426ea8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_426e75
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_426ece
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_426e75
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_41af48
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_426e75
sub_426f1b
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
call sub_417826
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x244 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_41ff71
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_427acb ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_41b01d
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x234 ] ebx
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x218 ] ebx
test ebx ebx
jns r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_426e75
jmp r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_426e75
mov al [ edi ]
inc edi
mov [ ebp - 0x23c ] edi
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
add edi 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] edi
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add edi 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc edi
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x21c ] ebx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x260 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x260 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea edi [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ ebx - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x228 ] ebx
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x270 ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_418771
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
mov [ ebp - 0x264 ] ebx
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x258 ]
lea eax [ ebp - 0x224 ]
lea ecx [ ebp - 0x22c ]
call sub_426ece
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x278 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x270 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x228 ] ebx
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push edi
push eax
push [ rwxdata ]
call esi
call eax
mov ebx [ ebp - 0x210 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
call sub_417b58
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov ebx [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_426e75
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ ebx - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ ebx - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_426d3b
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
add eax 0x2
mov ecx [ ebp - 0x21c ]
push ebx
lea eax [ ebp - 0x224 ]
call sub_426ece
pop ecx
test ebx ebx
jle r-xdata
jmp r-xdata
test edi edi
jg r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_419979
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
test ebx ebx
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc edi
mov [ ebp - 0x21c ] edi
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_426de0
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov ebx [ ebp - 0x264 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x26c ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x30
dec ebx
call sub_426e75
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_4197a0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x260 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x26c ]
lea eax [ ebp - 0x224 ]
lea ecx [ ebp - 0xc ]
call sub_426ece
pop ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x20
dec ebx
call sub_426e75
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x26c ]
push eax
dec ebx
add esi 0x2
call sub_426d3b
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_427aeb
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_427c16
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41e780
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_427c49
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_427c16
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_427c6f
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_427c16
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_41af48
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_427c16
sub_427cd1
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
lea ecx [ ebp - 0x878 ]
mov [ ebp - 0x8b8 ] esi
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x8b4 ] ebx
mov [ ebp - 0x850 ] ebx
mov [ ebp - 0x89c ] ebx
mov [ ebp - 0x8bc ] ebx
mov [ ebp - 0x8a0 ] ebx
call sub_417826
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x898 ] ebx
cmp esi ebx
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x86c ] bl
cmp edi ebx
je r-xdata
push esi
call sub_41ff71
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x87c ] ebx
mov [ ebp - 0x8d0 ] edi
mov [ ebp - 0x864 ] ebx
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
mov eax [ ebp - 0x8d0 ]
or [ ebp - 0x894 ] 0xffffffff
or [ ebp - 0x880 ] 0xffffffff
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x8a8 ] ebx
mov [ ebp - 0x8a4 ] ebx
mov [ ebp - 0x8b0 ] ebx
mov [ ebp - 0x890 ] ebx
mov [ ebp - 0x858 ] ebx
mov bl [ eax ]
mov [ ebp - 0x85c ] bl
test bl bl
je r-xdata
cmp [ ebp - 0x860 ] ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
inc [ ebp - 0x864 ]
cmp [ ebp - 0x864 ] 0x2
jge r-xdata
mov esi eax
jmp r-xdata
cmp [ ebp - 0x86c ] 0x0
je r-xdata
xor ebx ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor ebx ebx
jmp r-xdata
inc esi
cmp [ ebp - 0x87c ] 0x0
mov [ ebp - 0x884 ] esi
jl r-xdata
mov eax [ ebp - 0x87c ]
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x864 ] 0x1
jne r-xdata
xor esi esi
cmp [ ebp - 0x8a4 ] esi
je r-xdata
lea eax [ ebx - 0x20 ]
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x860 ] 0x1
jne r-xdata
cmp [ ebp - 0x8a4 ] 0x7
jne r-xdata
xor eax eax
movsx eax bl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0x864 ] esi
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x86c ] 0x0
jmp r-xdata
cmp eax 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov edx [ ebp - 0x8a4 ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
xor edi edi
shr eax 0x4
inc edi
xor ecx ecx
mov [ ebp - 0x8a4 ] eax
cmp eax edi
jne r-xdata
cmp [ ebp - 0x894 ] esi
jl r-xdata
je r-xdata
cmp eax 0x7
ja r-xdata
mov edx [ ebp - 0x880 ]
mov eax [ ebp - 0x8a4 ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x860 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x854 ]
lea eax [ ebp - 0x648 ]
mov esi [ ebp - 0x884 ]
mov al [ esi ]
mov [ ebp - 0x85c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x860 ] edi
jne r-xdata
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push esi
call sub_420fbc
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov bl [ ebp - 0x85c ]
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push esi
call sub_420fbc
mov ecx [ ebp - 0x898 ]
add esp 0xc
dec eax
cmp [ ebp - 0x864 ] 0x0
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x880 ] eax
mov [ ebp - 0x884 ] edx
jne r-xdata
and [ ebp - 0x860 ] 0x0
xor ecx ecx
mov eax [ ebp - 0x898 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
xor ecx ecx
mov esi edx
test eax eax
js r-xdata
cmp [ ebp - 0x864 ] 0x0
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x860 ] edi
jmp r-xdata
push 0x640
lea eax [ ebp - 0x64c ]
push 0x0
push eax
call sub_420010
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x854 ] edx
cmp esi [ ebp - 0x894 ]
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x894 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x894 ] eax
sub_428fbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_41a75a
and [ ebp - 0x14 ] 0x0
cmp [ rwxdata ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rwxdata ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rwxdata ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rwxdata ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rwxdata ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_429129
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_41d26b
mov eax esi
sub_42919e
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_41d26b
mov eax esi
jmp r-xdata
sub_42926b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_429286
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_41d26b
mov eax esi
sub_4292e9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rwxdata ]
pop ebp
retn
sub_429337
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41ac9b
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_4187ea
pop ecx
cmp eax esi
je r-xdata
call sub_4231f0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_429411
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_429337
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429451
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_429470
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_429498
mov ecx [ rwxdata ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rwxdata ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rwxdata ] ecx
mov dl [ ecx ]
sub_4294fa
mov ecx [ rwxdata ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rwxdata ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rwxdata ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rwxdata ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rwxdata ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_4299ba ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rwxdata ] eax
call sub_4294fa
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_429ad1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_429c69
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_429cee
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_429d45
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_429d66
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_429d9b
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rwxdata ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rwxdata ] ecx
mov eax r--data
xor edx edx
mov [ rwxdata ] eax
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x2
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x3
mov [ rwxdata ] edx
mov eax rwxdata
pop ebp
retn
imul eax eax 0xc
add eax rwxdata
pop ebp
retn
sub_429e42
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_429e6d
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_429e89
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_429ec3
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_429ed9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_429f03
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rwxdata ] esi
mov [ rwxdata ] edx
pop esi
jmp r-xdata
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
pop ebp
retn 0x14
sub_429f72
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_42ddf1
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_429fab
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_42ddf1
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_429ffc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_42a033
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_429cee
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_42a086
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_429d9b
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_42a0cb
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rwxdata
call sub_429ad1
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_42a12a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_42a172
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_429cee
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_42a1bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_429d9b
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_42a1f6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_42a240
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_42a086
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_42a28f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rwxdata
call sub_429ad1
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_42a319
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429ffc
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_42a342
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_42ecce
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
call sub_42a033
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_42a386
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_42a1bf
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_429d9b
pop ecx
push eax
mov ecx esi
call sub_42a12a
jmp r-xdata
sub_42a3c8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rwxdata
je r-xdata
pop edi
push 0x8
call sub_429ad1
cmp eax ebx
je r-xdata
push 0xc
call sub_429ad1
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_42a28f
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_42a44b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_42a3c8
sub_42a478
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_42a3c8
sub_42a4b5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_42a3c8
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rwxdata ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_42a574
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_426de0
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_42a3c8
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn 0x8
sub_42a5e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_426de0
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_42a3c8
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_42a67d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42a386
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42a6a1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_42a386
jmp r-xdata
push ecx
mov ecx esi
call sub_42a12a
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_42a6e4
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_42a172
jmp r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_429cee
jmp r-xdata
movsx eax al
push eax
call sub_42a386
jmp r-xdata
push eax
mov ecx edi
call sub_42a12a
sub_42a74b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_42a3c8
sub_42a778
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_42a3c8
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_42a7ad
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rwxdata ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rwxdata ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_429ab2
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a778
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_42a875
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_42a478
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_42a8c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42a6a1
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42a8e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42a6e4
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42a908
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
push ebx
call sub_42a74b
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_42a12a
sub_42a95a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rwxdata
call sub_429ad1
cmp eax ebx
je r-xdata
push esi
call sub_42a778
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_42a28f
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_42a12a
sub_42a9be
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_42a908
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_42a386
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rwxdata ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_42eb1d
mov eax [ rwxdata ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rwxdata ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rwxdata ] edi
call sub_42a240
push eax
mov ecx esi
call sub_42a6a1
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_42a6a1
cmp [ rwxdata ] edi
jne r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_42a1f6
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_42aac4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42a95a
lea eax [ ebp - 0x8 ]
push eax
call sub_42d75b
pop ecx
push eax
mov ecx esi
call sub_42a6a1
push 0x7d
mov ecx esi
call sub_42a908
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rwxdata ]
sub_42ab18
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp + 0x8 ]
leave
retn
sub_42ab3c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42a086
mov ecx eax
call sub_42a8c0
mov eax [ ebp + 0x8 ]
leave
retn
sub_42ab60
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp + 0x8 ]
leave
retn
sub_42ab84
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42a908
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42aba8
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42a95a
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42abcc
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rwxdata ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rwxdata ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_42a574
lea ecx [ ebp - 0x8 ]
call sub_42a574
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42ab60
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rwxdata ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_42a574
lea ecx [ ebp - 0x18 ]
call sub_42a574
lea ecx [ ebp - 0x8 ]
call sub_42a5e2
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_42a5e2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42ab60
add esp 0xc
jmp r-xdata
sub_42ad12
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_42adde ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_42a778
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_42adfe
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rwxdata ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_42a9be
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_42a478
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rwxdata ]
cmp al 0x5a
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42aba8
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_42aede
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_42a478
mov ecx eax
call sub_42a67d
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42adfe
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rwxdata ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_42ab84
mov eax [ ebp + 0x8 ]
leave
retn
sub_42af68
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rwxdata ]
mov eax [ rwxdata ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rwxdata ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_42a3c8
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rwxdata ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rwxdata ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_42a3c8
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_42a574
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42a8c0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_42a908
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_42a908
mov edx [ rwxdata ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_42a386
inc [ rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_42b130
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_429498
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42a95a
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_42a386
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42a908
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_42e75a
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_42a95a
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_42a44b
mov ecx eax
call sub_42a67d
mov ecx eax
call sub_42ab84
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_42eb1d
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_42abcc
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42a908
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_42a6a1
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42a908
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_42a8c0
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_42b326
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42abcc
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_42ab84
mov eax [ ebp + 0x8 ]
leave
retn
sub_42b3a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rwxdata ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_429f72
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42a908
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a8c0
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_42a086
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
je r-xdata
inc [ rwxdata ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_42a95a
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_42d75b
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42a908
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_42a6a1
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_42a908
push ebx
mov ecx esi
call sub_42a386
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_42b504
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_42a478
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x5f
jne r-xdata
inc [ rwxdata ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42abcc
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42abcc
mov eax [ rwxdata ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rwxdata ] eax
call sub_42a086
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rwxdata ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_42b5b7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42abcc
pop ecx
pop ecx
inc [ rwxdata ]
lea eax [ ebp - 0x8 ]
push eax
call sub_42abcc
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_42ab18
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_42b609
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
inc [ rwxdata ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_42d4ed
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_42b5b7
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_42a0cb
lea eax [ ebp - 0x14 ]
push eax
call sub_4192f1
push eax
call [ rwxdata ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rwxdata ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_42a44b
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_42b5b7
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_42a478
mov ecx eax
call sub_42a8c0
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_42aba8
jmp r-xdata
mov ecx esi
call sub_42a478
jmp r-xdata
pop ecx
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_42b5b7
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42a6a1
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_42a908
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_42d4ed
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42a6a1
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_42a908
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_42c333
lea eax [ ebp - 0x80 ]
push eax
call sub_42b5b7
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_42d4ed
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_42a478
jmp r-xdata
inc [ rwxdata ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_42b5b7
lea eax [ ebp - 0x88 ]
push eax
call sub_42b5b7
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_42b5b7
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42a6a1
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_42a908
dec edi
je r-xdata
mov ecx eax
call sub_42a8c0
jmp r-xdata
push 0x1
mov ecx esi
call sub_42a086
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_42b5b7
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42a6a1
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_42a0cb
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_42ab84
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_42a478
mov ecx eax
call sub_42ab84
sub_42b8f9
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_42e75a
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_42b130
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_42ab60
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_42a478
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_42b9f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rwxdata ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rwxdata ] bl
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_42a908
mov eax [ rwxdata ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rwxdata ] eax
push ecx
mov ecx [ rwxdata ]
lea eax [ ebp - 0x74 ]
push eax
call sub_42a240
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rwxdata ] eax
push r--data
push eax
mov ecx esi
call sub_42a6a1
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rwxdata ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_42eb1d
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_42b5b7
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov [ rwxdata ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_42b609
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_42a95a
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_42a0cb
lea eax [ ebp - 0x14 ]
push eax
call sub_4192f1
push eax
call [ rwxdata ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_42a1f6
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_42a95a
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_42a778
jmp r-xdata
sub_42bc06
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rwxdata ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_42a778
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rwxdata ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_42c333
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rwxdata ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_42b9f7
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_42a6a1
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_42a908
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_42a478
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_42a908
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_42a778
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_42bc06
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_42a478
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rwxdata ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_42a778
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_42a778
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_42a67d
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_42b504
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_42a778
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_42a478
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_42ecce
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42a908
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_42c74d
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
lea eax [ ebp - 0x80 ]
push eax
call sub_42d4ed
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_42a8c0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_42b5b7
pop ecx
mov ecx eax
call sub_42ab84
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_42b5b7
pop ecx
mov ecx eax
call sub_42ab84
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_42b5b7
pop ecx
mov ecx eax
call sub_42ab84
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_42abcc
pop ecx
pop ecx
mov ecx eax
call sub_42ab84
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_42ab84
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_42a95a
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
dec [ rwxdata ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
sub_42c1dc
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rwxdata ]
push esi
mov esi [ rwxdata ]
lea ecx [ ebp - 0x50 ]
mov [ rwxdata ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rwxdata ]
mov [ rwxdata ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_42c333
inc eax
mov [ rwxdata ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_42bc06
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rwxdata ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rwxdata ] edi
pop edi
mov [ rwxdata ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rwxdata ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_42b9f7
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42a6a1
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_42a908
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_42a908
inc [ rwxdata ]
sub_42c333
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rwxdata ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rwxdata ]
push eax
inc ebx
push esi
mov [ rwxdata ] ebx
call sub_42a240
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_42c1dc
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rwxdata ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rwxdata ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_42a1bf
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rwxdata ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_42b5b7
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_42a1f6
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rwxdata ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42a0cb
lea eax [ ebp - 0x14 ]
push eax
call sub_4192f1
push eax
call [ rwxdata ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rwxdata
lea ecx [ ebp - 0x34 ]
call sub_42a4b5
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_42a778
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_42a95a
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_42a6a1
jmp r-xdata
push eax
call sub_42a778
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rwxdata ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_42c549
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_42c333
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rwxdata ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_42d75b
pop ecx
mov ecx eax
call sub_42aba8
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_42a086
mov ecx eax
call sub_42aba8
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_42a1bf
jmp r-xdata
sub_42c63d
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rwxdata ]
push r--data
call sub_42a478
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rwxdata ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rwxdata ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_42c549
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_42a6a1
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_42a778
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_42ad12
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_42c74d
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_42c333
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_42bc06
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_42c1dc
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_42c797
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_429ab2
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a478
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_42a386
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42a95a
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42a95a
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_42c549
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_42c833
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_4294fa
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_42b3a5
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_42a95a
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_42abcc
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a908
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_42a6a1
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_42aba8
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_42c797
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_429c69
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_42c797
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_42aac4
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_42abcc
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_42ab84
mov ecx eax
call sub_42a8c0
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
lea eax [ ebp - 0x48 ]
push eax
call sub_42a875
mov esi 0x1000
pop ecx
test [ rwxdata ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42a95a
lea eax [ ebp - 0x48 ]
push eax
call sub_42a7ad
mov eax [ rwxdata ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a95a
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_42ed9d
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42abcc
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_42a7ad
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_429c69
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42abcc
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42abcc
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42abcc
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_42a7ad
pop ecx
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_429fab
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_429c69
call sub_429fab
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rwxdata ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a908
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_42a6a1
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rwxdata
call sub_429ad1
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_42a342
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
test [ rwxdata ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rwxdata ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42abcc
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_42a342
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rwxdata ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_42adfe
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a908
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42a95a
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_42aede
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_429c69
call sub_42aede
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_42a908
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a908
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_42a6a1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rwxdata ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a908
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42a95a
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42a6a1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_42d4ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rwxdata ] esi
je r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rwxdata ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_42ecce
or [ rwxdata ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
lea eax [ ebp - 0xc ]
push eax
call sub_42c74d
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_42d4ed
mov eax [ rwxdata ]
pop ecx
jmp r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rwxdata ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_42d75b
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_42a95a
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_42a6a1
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rwxdata ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_42a6a1
mov eax [ rwxdata ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_42d75b
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_42a95a
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42a6a1
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rwxdata ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_42c833
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rwxdata ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_42c833
pop ecx
pop ecx
jmp r-xdata
sub_42d75b
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_42a086
mov ecx eax
call sub_42aba8
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_42a1bf
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rwxdata ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_42c333
add esp 0xc
push 0x40
push rwxdata
lea ecx [ ebp - 0x30 ]
call sub_42a4b5
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_42a1f6
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_42d4ed
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42a908
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_42a8c0
mov [ rwxdata ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_42bc06
add esp 0xc
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rwxdata ] ecx
call sub_42c333
add esp 0xc
mov ecx eax
call sub_42ab84
mov ecx eax
call sub_42a8c0
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_42b326
pop ecx
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_42da12
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rwxdata ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rwxdata ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_42a086
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_42d75b
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_42a7ad
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_429c69
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_42a7ad
pop ecx
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_42c797
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_429c69
call sub_42c797
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42a6a1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_42a086
mov ecx eax
call sub_42a8c0
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rwxdata
call sub_429ad1
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42a908
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_429fab
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_429c69
jmp r-xdata
call sub_429fab
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_42a342
lea eax [ ebp - 0x38 ]
push eax
call sub_42adfe
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42a908
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_42aede
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_429c69
call sub_42aede
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_42a086
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_42ddf1
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42a086
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_42af68
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rwxdata ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_42a086
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_42a908
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_42a8c0
jmp r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_42af68
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_42a908
push 0x8
call sub_429ab2
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_429ab2
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_42a778
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_42a908
push 0xa
call sub_429ab2
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42aba8
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rwxdata ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_42a478
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42a6a1
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_42a908
push 0x9
call sub_429ab2
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_42a908
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_42a6a1
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_429ab2
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_42a778
push eax
call sub_42aba8
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_42a908
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42a6a1
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_42c797
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_429c69
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_42c797
pop ecx
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_42a386
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_42d75b
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_429c69
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_42a086
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_42d75b
pop ecx
mov ecx eax
call sub_42a8c0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_42a908
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_42a8c0
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42a6a1
sub_42e390
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rwxdata ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_42d4ed
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
call sub_42a778
test [ rwxdata ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rwxdata ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_42d4ed
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_42a0cb
mov eax [ rwxdata ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_42c1dc
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rwxdata ]
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rwxdata ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_42e4cf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_42a086
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_42a95a
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_42ddf1
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_42b8f9
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_42a478
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_42a908
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_42da12
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a6a1
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_42e626
push 0x64
push r--data
call sub_419ae0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_41dd38
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_429f03
lea ecx [ ebp - 0x74 ]
call sub_42e390
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_429470
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e6b7
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
sub_42e6c0
push 0x64
push r--data
call sub_419ae0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_41dd38
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_429f03
lea ecx [ ebp - 0x74 ]
call sub_42e390
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_429470
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e751
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
sub_42e75a
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42a778
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42a95a
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_42eb12 ]
jmp [ eax * 4 + jump_table_42eafa ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_42e4cf
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rwxdata ]
push eax
call sub_42c63d
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_42e4cf
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_42a95a
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_42a44b
mov ecx eax
call sub_42a8c0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42a6a1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_42a778
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42a778
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_42a478
mov ecx eax
call sub_42a8c0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42a778
push r--data
lea ecx [ ebp - 0xc ]
call sub_42a95a
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rwxdata ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_42a1bf
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_42e75a
push eax
push r--data
push [ ebp + 0x8 ]
call sub_42ab60
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_42eb1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rwxdata ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rwxdata ] 0x2
mov eax [ rwxdata ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42a778
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42e75a
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42a778
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_42a908
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_42a908
inc [ rwxdata ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rwxdata ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_42e4cf
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_42a478
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_42ab3c
inc [ rwxdata ]
push esi
push [ ebp + 0x8 ]
call sub_42da12
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rwxdata ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_42b8f9
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_42ddf1
push eax
push [ ebp + 0x8 ]
call sub_42e75a
add esp 0x1c
jmp r-xdata
sub_42ecce
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_42a033
mov eax [ rwxdata ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_42a086
cmp al 0x3f
je r-xdata
inc [ rwxdata ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_42ddf1
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_42eb1d
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rwxdata ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_42eb1d
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_42a478
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_42a478
jmp r-xdata
mov ecx eax
call sub_42a8c0
sub_42ed9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rwxdata
call sub_429ad1
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42ecce
lea eax [ ebp - 0x10 ]
push eax
call sub_429f72
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42a908
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42a8c0
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_42ee1f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_42ff6e
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_41af48
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_41af6e
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_42eea4
push 0x14
push r--data
call sub_419ae0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_419b25
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ee1f
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ef84
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_42ef8e
mov edi edi
push ebp
mov ebp esp
inc [ rwxdata ]
push 0x1000
call sub_419979
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_42efd7
push 0x10
push r--data
call sub_419ae0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_419b25
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_42ff6e
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f0a8
mov eax [ ebp - 0x1c ]
call sub_41af5b
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_42f0b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41d1ff
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4312ba
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_41af5b
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rwxdata ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_41af5b
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_43009d
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_41af5b
and [ eax ] 0x0
mov [ esi ] ebx
call sub_41af48
mov [ eax ] 0x18
call sub_41af48
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_41af6e
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_41af6e
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_41af48
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_41af48
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_42fe67
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_431074
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] 0x0
call sub_41f8c4
add esp 0xc
test eax eax
jne r-xdata
call sub_41af5b
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_431074
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_42137b
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_41af6e
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_42fee8
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_430dbb
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_41f8c4
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_42ee1f
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_42ee1f
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_42137b
pop ecx
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_431074
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_42094f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_431074
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_42ee1f
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_42ee1f
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_42f7e4
push 0x14
push r--data
call sub_419ae0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x20 ] edi
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_42f0b0
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f858
mov esi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
mov eax [ ebp - 0x1c ]
call sub_41af48
mov [ eax ] esi
jmp r-xdata
call sub_419b25
retn
or eax 0xffffffff
jmp r-xdata
sub_42f858
cmp [ ebp - 0x20 ] edi
je r-xdata
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp - 0x1c ]
call sub_430076
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_42f892
push 0x14
push r--data
call sub_419ae0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_419b25
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_42f0b0
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f928
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_42f928
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_430076
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rwxdata ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_42f956
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f892
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_42f988
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42f892
add esp 0x18
pop ebp
retn
sub_42f9a8
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_417826
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430b03
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx edx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov si bx
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx edx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx ecx [ edi ]
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_42fbc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426a87
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx ecx [ ebx ]
dec [ ebp + 0x10 ]
movzx eax cl
inc ebx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ esi ]
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cx cx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
movzx ecx cx
inc ebx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
shl eax 0x8
movzx edx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_42fd30
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fd50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4170d2
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_42fd95
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42fd95
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_42fd50
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_42fe45
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_42fe64
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_42fe3c
push ebx
push ecx
mov ebx rwxdata
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_42fe45
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_42fe67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rwxdata ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rwxdata ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_42fee8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rwxdata ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rwxdata ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_42ff6e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_42ffd7
push 0xc
push r--data
call sub_419ae0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43006d
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_430076
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_43009d
push 0x18
push r--data
call sub_419ae0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_41dd38
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_41ddfa
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43022d
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rwxdata ]
test esi esi
je r-xdata
call sub_419b25
retn
push 0x40
push 0x20
call sub_4199be
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rwxdata ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_42ffd7
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_41ddfa
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43016f
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rwxdata ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_430236
push 0xc
push r--data
call sub_419ae0
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41af6e
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_43009d
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_42fe67
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rwxdata ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430324
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_41af48
mov [ eax ] 0x18
call sub_41af5b
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_419b25
retn
sub_430324
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_430076
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_43034c
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_430406
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
jne r-xdata
call sub_4313d2
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_430448
push 0xc
push r--data
call sub_419ae0
push 0x3
call sub_41ddfa
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_430406
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430485
mov ax [ ebp - 0x1c ]
call sub_419b25
retn
sub_43048e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41b01d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_41af48
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4305c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4305f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_430624
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_430879
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_4308e1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_43091a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_4308e1
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4178cb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4178cb
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_4309da
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43091a
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_4308e1
sub_430a21
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_431410
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4178cb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4178cb
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_430b03
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430a21
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_431410
sub_430b56
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_41af48
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_41af48
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_430c10
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_430b56
pop ebp
retn
sub_430c3a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_430b56
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_430c7b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_41af48
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_41af48
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_426de0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_41d26b
mov eax esi
jmp r-xdata
sub_430d67
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430c7b
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_430d9c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430c7b
pop edi
pop ebp
retn
sub_430dbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_42ee1f
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_41af48
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_42ee1f
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_42ee1f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ee1f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_4311bd
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_41af48
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_42ff6e
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_41af48
mov [ eax ] 0xd
call sub_41af5b
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_41af5b
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_41af48
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_420252
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4311bd
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_430f71
push 0x10
push r--data
call sub_419ae0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41af5b
and [ eax ] 0x0
push 0x9
pop eax
jmp r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
push 0x9
pop esi
mov [ eax ] esi
cmp ebx [ rwxdata ]
jb r-xdata
call sub_419b25
retn
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
jl r-xdata
call sub_41af48
push 0x9
pop esi
mov [ eax ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_430dbb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
push 0x16
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431050
mov eax [ ebp - 0x1c ]
call sub_41d26b
mov eax esi
jmp r-xdata
sub_431058
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_430f71
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_431074
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42ff6e
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_41af48
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_41af6e
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_4310e9
push 0x10
push r--data
call sub_419ae0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
call sub_41af48
mov [ eax ] 0x9
call sub_41d26b
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_419b25
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x9
call sub_41af5b
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_431074
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4311b5
mov eax [ ebp - 0x1c ]
sub_4311bd
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rwxdata ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_431278
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
push eax
push rwxdata
call [ InterlockedExchange@IAT ]
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
push 0x16
pop eax
pop ebp
retn
sub_4312ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
push 0x16
pop eax
pop ebp
retn
sub_4312e7
push 0x10
push r--data
call sub_419ae0
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
test ebx ebx
js r-xdata
call sub_41af48
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_41af48
mov [ eax ] 0x9
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
call sub_41d26b
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
call sub_419b25
retn
cmp eax 0x20000
je r-xdata
push ebx
call sub_42ffd7
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41af48
mov [ eax ] 0x16
call sub_41af48
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push ebx
call sub_4311bd
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4313ca
mov eax [ ebp - 0x1c ]
sub_431410
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_431471
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_431494
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4314bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4314e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43150f
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_431532
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43155b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41717a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41e6fc
int3
sub_4315a8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41717a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41e6fc
int3
sub_4315f5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41717a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41e6fc
int3
sub_431642
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41717a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41e6fc
int3
sub_43168f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41717a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41e6fc
int3
sub_4316bf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_4316e0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_431701
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_431722
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_431743
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_431764
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_431a28
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_431a6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_431ac3
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433b44
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_431af9
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433b44
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_431b2f
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433b44
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_431b84
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4170d2
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_433b44
add esp 0x20
pop esi
pop ebp
retn
sub_431bb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_431c8e
mov eax [ rwxdata ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41a947
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_431c8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4170d2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_433b44
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_431bb7
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_431a6f
pop ebx
leave
retn
sub_431d2d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_41de79
call sub_41de79
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_431da0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41a947
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41a947
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_431dcc
mov edi edi
push ebp
mov ebp esp
call sub_41a947
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_431df3
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41a947
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41a947
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41a947
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_41de79
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_431e45
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_431b84
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_433c30
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_431eb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4179e0
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_417d43
test eax eax
movsx eax [ esi ]
push eax
call sub_4179e0
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_431f24
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_417826
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_431fa6
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_431fc2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_433e2c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_433cad
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_43201e
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_4197a0
inc eax
push eax
push esi
add esi edi
push esi
call sub_417380
add esp 0x10
sub_432063
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_417826
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_41af48
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_41af48
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_43201e
pop esi
mov [ eax ] esi
call sub_41d26b
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_419733
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rwxdata ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_417380
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_4321c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_434089
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_41af48
mov [ eax ] ebx
call sub_41d26b
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_432063
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_433f23
add esp 0x10
test eax eax
je r-xdata
sub_43228b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4321c4
add esp 0x18
pop ebp
retn
sub_4322ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_417826
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_41af48
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_41af48
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_41d26b
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_43228b
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_433c80
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_434200
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_434200
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_420010
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_434200
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_434120
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_434120
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_434120
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_432621
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4322ab
add esp 0x18
pop ebp
retn
sub_432641
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_417826
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_4197a0
inc eax
push eax
push esi
push ebx
call sub_417380
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_4197a0
inc eax
push eax
push esi
push ebx
call sub_417380
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_43201e
push edi
push 0x30
push ebx
call sub_420010
add esp 0xc
sub_432744
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_434089
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_41af48
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_41af48
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_433f23
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_432641
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_432822
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_434089
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_41af48
mov [ eax ] edi
call sub_41d26b
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_433f23
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_432063
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_432641
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_43290f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432822
add esp 0x18
pop ebp
retn
sub_43292f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4321c4
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432744
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4322ab
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432822
jmp r-xdata
sub_4329b7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43292f
add esp 0x1c
pop ebp
retn
sub_4329da
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_43421f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_41d1ff
sub_432a02
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41717a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_432a2b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4171d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41827c
pop ecx
sub_432a52
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_432ab1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_41a947
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_41a947
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_41a947
and [ eax + 0x90 ] 0x0
jmp sub_41de2d
sub_432b00
push 0x10
push r--data
call sub_419ae0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_432bc2
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41a947
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_419b25
retn
call sub_41de79
call sub_41de79
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_433c30
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_432bdc
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41a947
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_432c21
push 0x8
push r--data
call sub_419ae0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_419b25
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_431a5a
mov [ ebp - 0x4 ] 0xfffffffe
sub_432c76
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_432cb0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_41a947
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_431da0
pop ecx
pop ecx
call sub_41a947
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_41a947
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_41a947
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_41a947
dec [ eax + 0x90 ]
call sub_41a947
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41a947
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_432d66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41a947
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_432db7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_431df3
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_41a947
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_41a947
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_431dcc
pop ecx
test eax eax
je r-xdata
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_41a947
dec [ eax + 0x90 ]
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_41a947
push [ eax + 0x88 ]
call sub_432c21
pop ecx
pop ecx
call sub_41a947
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_432f90
push 0x8
push r--data
call sub_419ae0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432fcb
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_41de79
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_432a52
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_43308c
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_4182ea
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_4330bc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_41de79
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_41de79
call sub_41de79
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_41834f
push eax
call sub_41dbe0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_433142
push 0x2c
push r--data
call sub_419ae0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_431da0
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41a947
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41a947
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41a947
mov [ eax + 0x88 ] esi
call sub_41a947
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_431e45
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_433268
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
sub_4331db
mov esp [ ebp - 0x18 ]
call sub_41a947
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_432b00
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_433268
mov eax [ ebp - 0x1c ]
call sub_419b25
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_433268
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_431df3
pop ecx
call sub_41a947
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41a947
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_431dcc
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_432c21
pop ecx
pop ecx
sub_4332de
push 0xc
push r--data
call sub_419ae0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_434388
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_434388
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41de79
push ebx
push esi
call sub_43439a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_434388
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_434388
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_43439a
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_43439a
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_43439a
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_417380
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_4343ac
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_432c76
pop ecx
pop ecx
push eax
push esi
call sub_417380
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_419b25
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_432c76
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_43345d
push 0x8
push r--data
call sub_419ae0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_432c76
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_431a61
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_4332de
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_432c76
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_431a68
jmp r-xdata
sub_4334ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_41a947
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41a947
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_41a947
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_41a947
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_432a52
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_41a947
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_43345d
add esp 0x10
jmp r-xdata
sub_43363d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_43345d
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_431a28
call sub_431a6f
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_432b00
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_433142
add esp 0x28
test eax eax
je r-xdata
sub_4336ab
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41a947
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41a947
lea edi [ eax + 0x80 ]
call sub_41a75a
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_431d2d
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_41de79
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_431bb7
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_43363d
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_4337b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_41de79
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41a947
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_41de79
call sub_41de2d
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4336ab
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41a947
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41a947
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41a947
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_434388
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_431d2d
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_41de79
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_432c21
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_41a947
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_41a947
mov edi [ eax + 0x94 ]
call sub_41a947
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_432fcb
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_432fcb
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_4182ea
test al al
jne r-xdata
call sub_41de79
cmp eax 0x19930522
jne r-xdata
call sub_41a947
call sub_41a947
call sub_41a947
mov [ eax + 0x88 ] esi
call sub_41a947
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_432a52
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_432c21
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_41717a
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_41e6fc
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_43363d
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_431a6f
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_432b00
add esp 0x10
push [ esi + 0x1c ]
call sub_433041
sub_433b44
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41a947
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_4337b2
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_432b00
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_433c30
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_42fe3c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_42fe3c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_433c80
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_433cad
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_417826
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_435d18
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_434bba
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
sub_433d6c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_417826
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push 0x1
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_435d18
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43565c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
sub_433e2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_417826
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_435d18
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43510b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
sub_433eeb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rwxdata ]
test eax 0xfffffffe
je r-xdata
mov [ rwxdata ] eax
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_433f23
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_41af48
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_41d26b
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_4197a0
inc eax
push eax
push edi
push esi
call sub_417380
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_433fd6
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_434089
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_433fd6
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4364c0
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_419733
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
sub_434120
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_434200
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_43421f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_43783f
call sub_43783f
mov [ esi ] eax
jmp r-xdata
call sub_41af48
push 0x16
pop esi
mov [ eax ] esi
call sub_41d26b
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_43783f
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_43427e
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4342b1
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4342e7
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_43431d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4343be
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop esi
pop ebp
retn
sub_4343e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ ebp + 0x8 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43442b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
mov edi [ ebp + 0x8 ]
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov ecx [ edi + eax * 4 ]
xor ebx ebx
lea esi [ ecx + edx ]
cmp esi ecx
jb r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
dec eax
jns r-xdata
mov [ edi + eax * 4 ] esi
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov ecx [ edi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor ebx ebx
cmp edx ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp edx 0x1
jae r-xdata
mov [ edi + eax * 4 ] edx
sub_434498
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
lea ebx [ edx + eax ]
lea eax [ edi + 0x1 ]
sar ebx 0x5
and eax 0x8000001f
jns r-xdata
mov esi [ ebp + 0x8 ]
push 0x1f
pop ecx
sub ecx eax
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ esi + ebx * 4 ] eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi + ebx * 4 ] eax
inc ebx
cmp ebx ecx
jge r-xdata
or edx 0xffffffff
shl edx cl
mov eax ebx
not edx
test [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub ecx ebx
lea edi [ esi + ebx * 4 ]
xor eax eax
[ edi ]
jne r-xdata
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
and [ ebp + 0xc ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
mov ecx [ esi + eax * 4 ]
lea edi [ ecx + edx ]
cmp edi ecx
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ esi + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp + 0xc ] 0x1
cmp edi edx
jae r-xdata
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + eax * 4 ] edi
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor edi edi
cmp edx ecx
jb r-xdata
xor edi edi
inc edi
cmp edx 0x1
jae r-xdata
mov [ esi + eax * 4 ] edx
mov ecx edi
sub_434584
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
pop ebp
retn
sub_4345b4
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4345d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
and edx 0x1f
sub esp 0xc
add eax edx
mov edx [ ebp + 0xc ]
push esi
sar eax 0x5
and edx 0x8000001f
push edi
jns r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp + 0xc ] 0x0
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
push ebx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp + 0xc ]
mov ebx [ edi + ecx * 4 ]
and ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ edi + ecx * 4 ]
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0xc ]
or ebx [ ebp - 0x8 ]
mov [ edi + ecx * 4 ] ebx
mov ebx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
shl ebx cl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x3
mov [ ebp - 0x8 ] ebx
jl r-xdata
push 0x2
pop ecx
mov edx ecx
sub edx eax
lea edx [ edi + edx * 4 ]
pop ebx
and [ edi + ecx * 4 ] 0x0
mov esi [ edx ]
mov [ edi + ecx * 4 ] esi
jmp r-xdata
cmp ecx eax
jl r-xdata
pop edi
pop esi
leave
retn
sub edx 0x4
dec ecx
jns r-xdata
sub_43466b
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
and ecx 0x8000
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
and edx 0x7fff
sub edx 0x3fff
shl eax 0x10
push esi
push edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
and [ ebp - 0x30 ] 0x0
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax edx
movsd [ edi ] [ esi ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x28 ] eax
jns r-xdata
xor esi esi
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x34 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x34 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + eax * 4 - 0x10 ] esi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
push 0x1f
pop ecx
sub ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
shl esi cl
mov ecx [ ebp - 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0x10 ]
cmp ebx 0x40
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov edx eax
sub edx [ ebx + 0x8 ]
cmp ecx edx
jge r-xdata
inc [ ebp - 0x20 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
cmp ebx 0x20
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
cmp ecx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x30 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x24 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x24 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
mov ecx [ ebp - 0x38 ]
mov [ ecx ] esi
cmp ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
cdq
and edx 0x1f
movsd [ edi ] [ esi ]
lea esi [ edx + eax ]
mov edx ecx
sar esi 0x5
and edx 0x8000001f
jns r-xdata
xor esi esi
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x24 ] edx
jmp r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebp - 0x20 ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x34 ] eax
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x30 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x24 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x30 ]
jns r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x10 ]
mov ecx eax
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x20 ]
or eax [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl eax cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] eax
jl r-xdata
mov edx [ ebp - 0x34 ]
mov edi edx
push 0x2
shl edi 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edi
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
cmp edi 0x1
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edi [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp ecx esi
jl r-xdata
mov edi [ ebx + 0x8 ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] eax
jns r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp ecx edx
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp edx eax
jl r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebx ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov [ ebp - 0x34 ] ecx
test [ ebp + eax * 4 - 0x10 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x34 ]
or edx 0xffffffff
shl edx cl
push 0x3
pop ecx
and [ ebp + eax * 4 - 0x10 ] edx
inc eax
cmp eax ecx
jge r-xdata
or esi 0xffffffff
shl esi cl
mov edx eax
not esi
test [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
lea esi [ edx + eax ]
lea edx [ ecx + 0x1 ]
sar esi 0x5
and edx 0x8000001f
jns r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx 0x3
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
lea esi [ edi + edx ]
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp esi edx
jae r-xdata
cmp ecx esi
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
dec eax
jns r-xdata
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_434bba
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rwxdata ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rwxdata ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rwxdata ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov ecx eax
sub ecx [ rwxdata ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
cmp ebx [ rwxdata ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rwxdata ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rwxdata ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rwxdata ]
add ebx [ rwxdata ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rwxdata ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_43510b
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rwxdata ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rwxdata ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rwxdata ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov ecx eax
sub ecx [ rwxdata ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
cmp ebx [ rwxdata ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rwxdata ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rwxdata ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rwxdata ]
add ebx [ rwxdata ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rwxdata ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_43565c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0xa ]
and [ ebp - 0x20 ] 0x0
mov eax edx
and eax 0x7fff
and edx 0x8000
push esi
mov esi [ ecx + 0x6 ]
mov [ ebp - 0x14 ] eax
mov eax edx
mov edx [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl ecx 0x10
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ecx
test ecx ecx
jns r-xdata
mov ecx 0x7fff
cmp [ ebp - 0x14 ] cx
jne r-xdata
test ecx 0x7fffffff
je r-xdata
or eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x20 ]
mov [ edi ] edx
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn
mov [ ebp - 0x20 ] 0x1
lea ecx [ edx + 0x1 ]
xor esi esi
cmp ecx edx
jb r-xdata
xor esi esi
inc esi
cmp ecx 0x1
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
and [ ebp - 0x1c ] 0x0
lea ecx [ ebp + ecx * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] ecx
mov ecx esi
mov [ ebp - 0x1c ] 0x1
cmp esi 0x1
jae r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
dec [ ebp - 0x18 ]
mov [ ecx ] esi
mov ecx [ ebp - 0x1c ]
jns r-xdata
inc [ ebp - 0x14 ]
mov esi 0x80000000
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_435739
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
pop ebp
retn
sub_43576c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr edx 0x1
shr ecx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_43579e
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
movzx edx [ ebx + 0xa ]
push esi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x20 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
push edi
movzx esi si
mov edi 0x7fff
mov [ ebp - 0x30 ] esi
cmp cx di
jae r-xdata
xor edx edx
xor ecx ecx
cmp [ ebp - 0x20 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx di
jae r-xdata
mov edi 0xbffd
cmp si di
ja r-xdata
mov edi 0x3fbf
cmp si di
ja r-xdata
mov edi 0x7fffffff
test cx cx
jne r-xdata
xor ecx ecx
xor ecx ecx
inc esi
mov [ ebp - 0x30 ] esi
test [ eax + 0x8 ] edi
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x1c ] ecx
lea edi [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x5
inc esi
mov [ ebp - 0x30 ] esi
test [ ebx + 0x8 ] edi
jne r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] ecx
jne r-xdata
add edi 0x2
inc [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
add ebx 0x8
mov [ ebp - 0x24 ] ebx
lea ebx [ eax + ecx ]
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp dx cx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add ecx ecx
mov [ ebp - 0x28 ] edx
test edx edx
jle r-xdata
add esi 0xc002
mov edi 0xffff
test si si
jle r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi ecx
jae r-xdata
cmp [ ebx ] ecx
je r-xdata
mov [ eax + 0xa ] cx
jmp r-xdata
add esi edi
test si si
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
sub [ ebp - 0x24 ] 0x2
add ebx 0x2
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x14 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx esi
neg ecx
movzx ecx cx
mov [ ebp - 0x14 ] ecx
add esi ecx
test si si
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
add ebx ebx
or ebx ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add esi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
test si si
jg r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
movzx ecx [ ebx ]
and [ ebp - 0x14 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea esi [ edx + ecx ]
cmp esi edx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x2c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp si cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
or esi [ ebp - 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] si
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] di
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc esi
jmp r-xdata
sub_435a19
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
sub ecx 0x60
xor edx edx
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170d2
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
neg [ ebp + 0xc ]
mov ecx rwxdata
sub ecx 0x60
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push esi
push edi
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x24 ]
mov ebx ecx
mov ecx 0x8000
cmp [ ebx ] cx
jb r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x54
sar [ ebp + 0xc ] 0x3
and ecx 0x7
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0xa ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
movzx edx [ ebx + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x30 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea edi [ edx + ecx ]
movzx edi di
mov [ ebp - 0x28 ] edi
cmp cx si
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x1a ]
lea ebx [ ebp - 0x1c ]
xor edx edx
xor ecx ecx
cmp [ ebp - 0x30 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx si
jae r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ eax + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ ebp - 0x34 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
add esi 0x2
inc [ ebp - 0x34 ]
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
jg r-xdata
lea edx [ ebx + 0x8 ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ eax ] esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp edi ecx
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor ecx ecx
mov [ eax + 0xa ] cx
jmp r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x3c ] 0x2
sub [ ebp - 0x40 ] 0x2
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x44 ] 0x0
mov [ esi - 0x4 ] edi
je r-xdata
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] esi
mov [ eax ] esi
jmp r-xdata
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
test di di
jg r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea edi [ edx + ecx ]
cmp edi edx
jb r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x38 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp di cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
mov cx [ ebp - 0xe ]
or edi [ ebp - 0x30 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] di
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov edx 0xffff
cmp [ ebp - 0x6 ] dx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
sub_435d18
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_41af48
mov [ eax ] 0x16
call sub_41d26b
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_4363c4 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_437e66
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rwxdata
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rwxdata
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_4363f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push edx
xor edx edx
push edx
push edx
push edx
push [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_435d18
mov edi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43565c
add esp 0x28
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_4170d2
leave
retn
or edi 0x2
sub_43644f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ecx + 0x1 ]
xor esi esi
cmp edx ecx
jb r-xdata
mov [ eax ] esi
test ebx ebx
je r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov ecx [ edi + 0x8 ]
add [ eax + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_4364c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rwxdata
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rwxdata
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170d2
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_419733
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41d1ff
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_419733
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_436db8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebp + 0x8 ] 0x9001f
jne r-xdata
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
push esi
call sub_43421f
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_41d1ff
fwait
fnstcw [ ebp - 0x4 ]
movzx ecx [ ebp - 0x4 ]
and ecx 0x1f3d
mov edx 0x23d
cmp cx dx
jne r-xdata
cmp [ rwxdata ] esi
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
and ecx 0xfec0
cmp ecx 0x1e80
je r-xdata
sub_436e2b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
movzx edx cx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebx 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebx
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
test [ ebp + 0x8 ] 0x1000
pop edi
pop esi
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_436eca
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_436f58
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_436f9b
xor eax eax
test dl dl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx edx
je r-xdata
push 0x10
pop eax
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov edi 0x100
test edi edx
je r-xdata
or eax 0x1
mov ecx edx
mov esi 0x6000
and ecx esi
je r-xdata
or eax 0x80000
pop edi
and edx 0x8040
sub edx 0x40
pop esi
pop ebx
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax edi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
retn
sub edx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x1000000
retn
or eax 0x300
jmp r-xdata
sub_43703b
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4370db
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43712a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov al [ ebp - 0x4 ]
xor edx edx
mov esi 0x80000
test al 0x3f
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
test al 0x1
je r-xdata
mov eax edx
stmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
or eax edx
jmp r-xdata
test cl 0x1
je r-xdata
test al 0x8
je r-xdata
or edx 0x8
pop esi
leave
retn
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test cl 0x20
je r-xdata
or eax 0x2
or edx esi
test cl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_4371bc
mov edi edi
push esi
call sub_41dfc9
mov esi [ eax ]
fninit
call sub_4329da
push 0x1f80
call sub_43810c
pop ecx
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_4371f4
call sub_4380ee
xor ecx ecx
test al 0x3f
je r-xdata
mov eax ecx
retn
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_43722f
mov edi edi
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43727f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp + 0xc ] 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
mov esi 0x8040
and ecx esi
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_43703b
push eax
mov [ ebp - 0x4 ] eax
call sub_43810c
pop ecx
stmxcsr [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
xor eax eax
test dl dl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp edx edi
jne r-xdata
test ebx edx
je r-xdata
push 0x10
pop eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx esi
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax ebx
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_4373f5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp + 0x8 ]
mov al [ ebp + 0x8 ]
xor ecx ecx
test al 0x3f
je r-xdata
pop esi
pop ebp
retn
call sub_4371f4
mov [ esi ] eax
mov [ edx ] ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_43744f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rwxdata ] 0x0
je r-xdata
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov al [ ebp - 0x4 ]
xor edx edx
push esi
mov esi 0x80000
test al 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffffc0
ldmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or eax edx
pop esi
leave
retn
test cl 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test cl 0x20
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test cl 0x2
je r-xdata
or eax 0x1
or edx esi
or eax esi
sub_437528
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor edx edx
push edi
mov edi 0x300
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
and eax 0x308031f
mov [ ebp - 0x10 ] eax
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x1000
je r-xdata
or esi 0x2
movzx eax bx
mov ecx eax
mov esi 0xc00
and ecx esi
je r-xdata
or edx 0x80000
test eax 0x100
je r-xdata
or esi 0x1
and eax edi
je r-xdata
cmp ecx 0x400
je r-xdata
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
or edx 0x20000
cmp eax 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ebx
and ebx edx
or ebx eax
cmp ebx edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx esi
jne r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
call sub_436eca
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor ebx ebx
test dl 0x1
je r-xdata
or edx edi
jmp r-xdata
call sub_43703b
push eax
mov [ ebp + 0x10 ] eax
call sub_43810c
pop ecx
stmxcsr [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ebx
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test dl 0x8
je r-xdata
or ebx 0x8
test ecx 0x400
je r-xdata
or edx 0x8
test dl 0x10
je r-xdata
or ebx 0x4
test ecx 0x800
je r-xdata
or edx 0x4
test dl 0x20
je r-xdata
or ebx 0x2
test ecx 0x1000
je r-xdata
or edx 0x2
test dl 0x2
je r-xdata
or ebx 0x1
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
movzx ecx dx
mov eax ecx
and eax esi
je r-xdata
or ebx 0x80000
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
and ecx ebx
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or ebx 0x20000
cmp ecx 0x200
jne r-xdata
or ebx 0x100
cmp eax 0x800
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or ebx 0x40000
test edx 0x1000
je r-xdata
or ebx 0x10000
jmp r-xdata
or ebx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
or ebx edi
jmp r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_43783f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov ebx eax
call sub_436eca
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_43703b
push eax
mov [ ebp - 0xc ] eax
call sub_43810c
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_437b51
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0xfff7ffff
fwait
fnstcw [ ebp + 0xc ]
mov bx [ ebp + 0xc ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
je r-xdata
or edx 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov eax edi
not eax
mov ecx edi
and ecx [ ebp + 0x8 ]
and eax edx
or eax ecx
mov [ ebp - 0x10 ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov ebx eax
call sub_436eca
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ ebp - 0x10 ] edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_43703b
push eax
mov [ ebp - 0x8 ] eax
call sub_43810c
pop ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
test dl dl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or edx 0x300
jmp r-xdata
test edx 0x200
je r-xdata
push 0x10
pop eax
mov ecx eax
xor ecx [ ebp - 0x10 ]
or eax [ ebp - 0x10 ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
or eax 0x80000000
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx ebx
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax esi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_437e66
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_43806b
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_438096
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rwxdata ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_43810c
push 0x8
push r--data
call sub_419ae0
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
call sub_419b25
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_4381c6
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
call sub_4380ee
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
not eax
or eax 0xffff807f
and eax esi
or eax ecx
push eax
call sub_43810c
pop ecx
sub_438690
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ rwxdata ] eax
mov [ eax ] eax
mov eax [ rwxdata ]
mov [ eax + 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax + 0x8 ] eax
mov ecx [ rwxdata ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rwxdata ]
push sub_438790
mov [ edx + 0x15 ] al
call sub_41780f
add esp 0x4
mov esp ebp
pop ebp
retn
sub_438710
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4186f1
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_41717a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_41e6fc
int3
mov [ rwxdata ] eax
mov [ eax ] eax
mov eax [ rwxdata ]
mov [ eax + 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax + 0x8 ] eax
mov ecx [ rwxdata ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rwxdata ]
push sub_4387f0
mov [ edx + 0x15 ] al
call sub_41780f
add esp 0x4
mov esp ebp
pop ebp
retn
sub_438790
push ebp
mov ebp esp
push 0xffffffff
push sub_43862a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ rwxdata ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax rwxdata
call sub_4066a0
mov eax [ rwxdata ]
push eax
call sub_41827c
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4387f0
push ebp
mov ebp esp
push 0xffffffff
push sub_43865a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ rwxdata ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax rwxdata
call sub_4066a0
mov eax [ rwxdata ]
push eax
call sub_41827c
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_401030
mov [ ecx ] r--data
jmp sub_4171d6
sub_401070
retn
sub_401080
retn
sub_401090
retn
sub_4010a0
retn
sub_4010b0
push ebp
mov ebp esp
lea edx [ ebp + 0x8 ]
mov eax rwxdata
call sub_405cf0
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn
sub_401140
push ebp
mov ebp esp
lea edx [ ebp + 0x8 ]
mov eax rwxdata
call sub_405cf0
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn
sub_4012b0
push eax
call sub_401160
add esp 0x4
retn
sub_4012c0
mov edx ecx
mov [ eax ] cl
sar edx 0x8
sar ecx 0x10
mov [ eax + 0x1 ] dl
mov [ eax + 0x2 ] cl
retn
sub_4012e0
movzx eax [ ecx + 0x2 ]
movzx edx [ ecx + 0x1 ]
movzx ecx [ ecx ]
shl eax 0x8
or eax edx
shl eax 0x8
or eax ecx
retn
sub_401490
mov [ ecx ] r--data
retn
sub_4014d0
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x80704
retn
sub_401550
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
pop ebp
retn 0x4
sub_401560
movzx eax [ eax ]
retn
sub_401570
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
pop ebp
retn 0x4
sub_401580
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
retn
sub_401590
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
retn
sub_4015a0
movzx eax [ eax + 0x1 ]
retn
sub_403fa0
mov [ eax ] r--data
retn
sub_404750
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_404fe0
mov ecx [ eax + 0x10 ]
push ecx
call sub_4181ab
pop ecx
retn
sub_405990
push r--data
call sub_417a0c
add esp 0x4
push 0x1
call sub_418663
int3
sub_405b40
push esi
call sub_405630
push esi
call sub_41827c
add esp 0x4
mov eax esi
retn
sub_405b60
retn
sub_405dd0
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_405e40
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
setne al
retn
sub_405e70
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_405ea0
mov ecx [ eax ]
lea eax [ ecx + edx * 2 ]
retn
sub_405ef0
mov ecx [ eax ]
push ecx
call sub_4181ab
pop ecx
retn
sub_405f00
push esi
mov esi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_406350
mov eax esi
pop esi
retn
sub_405f20
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_405f50
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
retn
sub_405f60
push ebp
mov ebp esp
mov eax [ eax ]
add eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_405f70
push ebp
mov ebp esp
mov eax [ eax ]
add eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_405f80
push esi
mov esi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_406420
mov eax esi
pop esi
retn
sub_405fa0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_405fd0
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_405ff0
lea eax [ eax + eax * 2 ]
add eax [ ecx ]
retn
sub_406040
mov ecx [ eax ]
push ecx
call sub_4181ab
pop ecx
retn
sub_406050
push esi
mov esi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_406540
mov eax esi
pop esi
retn
sub_406070
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_4060a0
mov edx [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
retn
sub_4060f0
mov ecx [ eax ]
push ecx
call sub_4181ab
pop ecx
retn
sub_406100
mov [ ecx ] 0x0
retn
sub_406110
dec ecx
js r-xdata
retn
xor dl dl
mov [ eax ] dl
mov [ eax + 0x1 ] dl
add eax 0x2
dec ecx
jns r-xdata
sub_4061f0
mov ecx [ eax + 0x4 ]
push ecx
call sub_41827c
pop ecx
retn
sub_406200
add eax 0xc
retn
sub_406210
retn
sub_406220
mov ecx [ eax ]
cmp ecx [ edx ]
sbb eax eax
neg eax
retn
sub_406230
mov [ eax ] ecx
retn
sub_406240
mov eax [ eax ]
add eax 0xc
retn
sub_406250
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_406260
mov eax [ eax ]
retn
sub_4062f0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_406320
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_406330
retn
sub_406340
retn
sub_4063c0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_4063f0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_406400
retn
sub_406410
retn
sub_4064e0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_406510
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_406520
retn
sub_406530
retn
sub_406610
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_406640
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_406650
retn
sub_406660
retn
sub_406670
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_406690
mov edx [ ecx + 0x4 ]
mov ecx [ edx ]
mov [ eax ] ecx
retn
sub_4067f0
retn
sub_406800
push eax
call sub_41827c
pop ecx
retn
sub_406810
mov [ eax ] ecx
retn
sub_406820
mov eax [ eax ]
add eax 0xc
retn
sub_406830
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_406840
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_406850
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x1
retn
sub_4068a0
retn
sub_406910
retn
sub_406920
push eax
call sub_41827c
pop ecx
retn
sub_406930
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_406940
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_406990
retn
sub_4069f0
retn
sub_406a00
push eax
call sub_41827c
pop ecx
retn
sub_406a10
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_406a20
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_406a70
retn
sub_406af0
retn
sub_406b00
push eax
call sub_41827c
pop ecx
retn
sub_406b10
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_406b20
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_406b30
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_406b90
retn
sub_406c10
retn
sub_406c20
push eax
call sub_41827c
pop ecx
retn
sub_406c30
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_406c50
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
lea edx [ edx + ecx * 2 ]
mov [ eax ] edx
pop ebp
retn 0x4
sub_406c70
mov edx [ ecx ]
add edx __dos_header
mov [ eax ] edx
retn
sub_406c80
mov edx [ ecx ]
add edx 0x300000
mov [ eax ] edx
retn
sub_406c90
mov edx [ ecx ]
add edx 0xc00
mov [ eax ] edx
retn
sub_406f50
mov eax [ eax + 0x4 ]
retn
sub_406f60
mov eax [ eax + 0x4 ]
add eax 0x4
retn
sub_406f70
add eax 0x14
retn
sub_406f80
add eax 0x15
retn
sub_406f90
retn
sub_406fa0
add eax 0x4
retn
sub_406fb0
add eax 0x8
retn
sub_406fc0
retn 0x4
sub_407010
mov ecx [ eax ]
mov [ esi ] ecx
call sub_4079b0
mov eax esi
retn
sub_407020
mov [ eax ] ecx
retn
sub_4070dc
mov ecx [ ebp - 0x14 ]
push ecx
call sub_41827c
add esp 0x4
push 0x0
push 0x0
call sub_41e6fc
int3
sub_407110
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_407120
mov eax 0x7fffffff
retn
sub_407160
push r--data
call sub_4315a8
sub_4071e0
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
retn
sub_4071f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_407200
or eax 0xffffffff
retn
sub_407240
push r--data
call sub_4315a8
sub_407317
mov edx [ ebp - 0x14 ]
push edx
call sub_41827c
add esp 0x4
push 0x0
push 0x0
call sub_41e6fc
int3
sub_407350
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_407360
mov eax 0x55555555
retn
sub_4073a0
push r--data
call sub_4315a8
sub_40747d
mov eax [ ebp - 0x14 ]
push eax
call sub_41827c
add esp 0x4
push 0x0
push 0x0
call sub_41e6fc
int3
sub_4074c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_4074d0
mov eax 0x15555555
retn
sub_407520
push r--data
call sub_4315a8
sub_407690
mov eax [ eax + 0x4 ]
add eax 0x8
retn
sub_407700
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_407720
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_407740
retn 0x4
sub_407750
mov eax esi
call sub_4079b0
mov eax esi
retn
sub_4077b0
mov eax 0x7fffffff
retn
sub_407810
or eax 0xffffffff
retn
sub_407870
mov eax 0x55555555
retn
sub_4078e0
mov eax 0x15555555
retn
sub_4078f0
mov [ eax ] ecx
retn
sub_407900
lea edx [ ecx + ecx ]
add [ eax ] edx
retn
sub_407910
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_407920
mov [ eax ] ecx
retn
sub_407930
add [ eax ] __dos_header
retn
sub_407940
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_407950
mov [ eax ] ecx
retn
sub_407960
add [ eax ] 0x300000
retn
sub_407970
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_407980
mov [ eax ] ecx
retn
sub_407990
add [ eax ] 0xc00
retn
sub_4079a0
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_407a00
retn
sub_407a10
retn
sub_407a20
retn
sub_407a30
retn
sub_407c50
retn
sub_407c60
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_408600
add esp 0x4
mov esp ebp
pop ebp
retn
sub_407c80
push ebp
mov ebp esp
test eax eax
je r-xdata
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call sub_420010
add esp 0xc
sub_407ca0
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_408690
add esp 0x4
mov esp ebp
pop ebp
retn
sub_407cc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4086e0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_407ce0
retn
sub_407cf0
cmp ecx edx
je r-xdata
retn
push esi
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
pop esi
sub_407d10
retn
sub_407d20
push esi
sub eax ecx
mov esi eax
push esi
push ecx
push edi
call sub_417380
add esp 0xc
lea eax [ esi + edi ]
pop esi
retn
sub_407d40
retn
sub_407d50
cmp ecx esi
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov dl [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
add ecx 0x3
add eax 0x3
cmp ecx esi
jne r-xdata
sub_407d70
retn
sub_407db0
retn
sub_407dc0
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_407dd0
retn
sub_407de0
retn
sub_407df0
retn
sub_407e50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4089f0
add esp 0x4
pop ebp
retn 0x4
sub_407e90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_408a30
add esp 0x4
pop ebp
retn 0x4
sub_407eb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_408a50
add esp 0x4
pop ebp
retn 0x4
sub_408010
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408150
retn
sub_408160
mov eax [ eax + 0x8 ]
retn
sub_408460
mov [ eax ] 0x0
retn
sub_408470
mov eax esi
call sub_4084b0
mov eax esi
retn
sub_408480
mov eax 0x1fffffff
retn
sub_408490
mov eax esi
call sub_4084b0
mov eax esi
retn
sub_4084a0
mov [ eax ] 0x0
retn
sub_408510
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
pop ebp
retn 0x4
sub_408530
mov eax 0x1fffffff
retn
sub_408540
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
pop ebp
retn 0x4
sub_408560
retn
sub_4085f0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_408630
xor eax eax
retn
sub_408640
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_408650
push ebp
mov ebp esp
test eax eax
je r-xdata
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call sub_420010
add esp 0xc
sub_408670
xor eax eax
retn
sub_408680
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4086c0
xor eax eax
retn
sub_4086d0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_408710
cmp ecx edx
je r-xdata
retn
push esi
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
pop esi
sub_408730
retn
sub_408740
push esi
sub eax ecx
mov esi eax
push esi
push ecx
push edi
call sub_417380
add esp 0xc
lea eax [ esi + edi ]
pop esi
retn
sub_408760
retn
sub_408770
cmp ecx esi
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov dl [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
add ecx 0x3
add eax 0x3
cmp ecx esi
jne r-xdata
sub_408790
retn
sub_4087d0
retn
sub_4087e0
retn
sub_4087f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4089f0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_408830
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_408a30
add esp 0x4
mov esp ebp
pop ebp
retn
sub_408850
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_408a50
add esp 0x4
mov esp ebp
pop ebp
retn
sub_408870
retn
sub_408880
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
pop ebp
retn 0x4
sub_4088a0
retn
sub_4088b0
retn
sub_408940
retn
sub_408950
test eax eax
je r-xdata
retn
mov dl [ esi ]
mov [ ecx ] dl
inc ecx
dec eax
jne r-xdata
sub_408960
test eax eax
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov cl [ ecx + 0x2 ]
mov [ eax + 0x2 ] cl
sub_408980
retn
sub_408990
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
sub_4089b0
retn
sub_4089c0
retn
sub_4089d0
retn
sub_4089e0
retn
sub_408a80
retn
sub_408a90
retn
sub_408aa0
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
pop ebp
retn 0x4
sub_408ac0
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_408ad0
test eax eax
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
sub_408ae0
retn
sub_408af0
test eax eax
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov cl [ ecx + 0x2 ]
mov [ eax + 0x2 ] cl
sub_408b10
retn
sub_408b20
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
sub_408b40
retn
sub_408b50
retn
sub_408b60
retn
sub_408b70
retn
sub_408b80
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_408b90
retn
sub_408ba0
retn
sub_408bb0
retn
sub_408bc0
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_408be0
retn
sub_408bf0
retn
sub_408c00
retn
sub_408c10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx 0xffffffff
jae r-xdata
pop ebp
retn
push ecx
call sub_4187ea
add esp 0x4
sub_408c30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
call sub_418771
add esp 0x4
sub_408c50
mov [ rwxdata ] sub_408c10
mov [ rwxdata ] sub_408c30
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov [ rwxdata ] eax
retn
mov [ rwxdata ] ecx
sub_408c80
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov edx [ rwxdata ]
mov [ eax ] edx
retn
mov eax [ rwxdata ]
mov [ ecx ] eax
sub_408ca0
test eax eax
jne r-xdata
push eax
call [ rwxdata ]
add esp 0x4
retn
retn
sub_408ce0
test eax eax
je r-xdata
retn
push eax
call [ rwxdata ]
pop ecx
sub_408cf0
xor ecx ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
retn
sub_4096d0
push ebp
mov ebp esp
mov ecx [ eax + 0x44 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
inc [ eax + 0x44 ]
pop ebp
retn
sub_40b600
xor ecx ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
retn
sub_40bfe0
push ebp
mov ebp esp
mov ecx [ eax + 0x44 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
inc [ eax + 0x44 ]
pop ebp
retn
sub_40e300
xor ecx ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
retn
sub_40ece0
push ebp
mov ebp esp
mov ecx [ eax + 0x44 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
inc [ eax + 0x44 ]
pop ebp
retn
sub_411330
mov eax r--data
retn
sub_411770
cmp [ rwxdata ] 0xfffffffd
jne r-xdata
mov eax 0x1
retn
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
cmp [ rwxdata ] 0xffffffff
jne r-xdata
xor eax eax
retn
sub_411830
retn
sub_411840
lea eax [ ecx + 0x3 ]
shr eax 0x2
add eax eax
add eax eax
sub eax ecx
retn
sub_4118d0
push eax
push ecx
push edx
call sub_420a30
add esp 0xc
retn
sub_4118e0
push eax
push ecx
push edx
call sub_417380
add esp 0xc
retn
sub_4118f0
push eax
push ecx
push edx
call sub_420010
add esp 0xc
retn
sub_411900
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn
sub_411910
mov eax r--data
retn
sub_411920
mov eax 0x10300
retn
sub_411930
mov eax r--data
retn
sub_411940
mov eax r--data
retn
sub_411950
mov eax r--data
retn
sub_411960
mov eax r--data
retn
sub_411a90
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_411aa0
mov [ eax ] 0x0
retn
sub_411ab0
retn
sub_411ac0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_411ad0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_411af0
mov ecx [ ecx ]
cmp [ eax ] ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_411b10
retn
sub_411b20
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_411b30
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
retn
sub_411b40
retn
sub_411b50
retn
sub_411e70
retn
sub_411e80
retn
sub_411e90
retn
sub_411ed0
retn
sub_411ee0
retn
sub_411ef0
retn
sub_411f00
retn
sub_411f10
retn
sub_412080
mov [ rwxdata ] eax
call sub_411b60
mov eax 0x1
retn
sub_4121f0
push esi
mov esi eax
call sub_4125e0
mov eax [ esi ]
push eax
call sub_41827c
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_412230
mov ecx [ edx + 0x10 ]
add ecx [ edx + 0xc ]
mov edx [ edx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
j_sub_4125e0
jmp sub_4125e0
sub_412340
push esi
mov esi eax
call sub_412720
mov eax [ esi ]
push eax
call sub_41827c
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_412440
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_412470
mov eax [ eax ]
retn
sub_4125d0
retn
sub_412650
mov eax [ esi ]
push eax
call sub_41827c
add esp 0x4
mov [ esi ] 0x0
retn
sub_4126c0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412700
mov ecx [ edx + 0x10 ]
add ecx [ edx + 0xc ]
mov edx [ edx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
sub_412790
mov eax [ esi ]
push eax
call sub_41827c
add esp 0x4
mov [ esi ] 0x0
retn
sub_412800
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_41827c
add esp 0x4
sub_412830
retn
sub_412840
retn
sub_412850
push eax
call sub_41827c
pop ecx
retn
sub_412860
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_412870
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
mov [ ecx + 0xc ] 0x0
sub_412890
push eax
call sub_41827c
pop ecx
retn
sub_4128a0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_412900
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_412910
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
mov [ ecx + 0xc ] 0x0
sub_412930
push eax
call sub_41827c
pop ecx
retn
sub_412940
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4129a0
retn
sub_4129b0
push eax
call sub_41827c
pop ecx
retn
sub_4129c0
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_4129d0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4129f0
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_412a50
or eax 0xffffffff
retn
sub_412d00
retn
sub_412d10
retn
sub_412d20
retn
sub_412d30
retn
sub_412d40
retn
sub_412d50
retn
sub_412d60
retn
sub_412d70
retn
sub_412dd0
retn
sub_412e50
retn
sub_412e60
retn
sub_412ee0
retn
sub_412ef0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_412f00
retn
sub_412f50
retn
sub_412ffd
mov esi [ ebp + 0x8 ]
call sub_4125e0
push 0x0
push 0x0
call sub_41e6fc
int3
sub_413010
retn
sub_4130e2
mov esi [ ebp + 0x8 ]
call sub_412720
xor esi esi
push esi
push esi
call sub_41e6fc
int3
sub_413100
retn
sub_4133c0
retn
sub_413490
mov esi [ ebp + 0x8 ]
call sub_412800
xor edi edi
push edi
push edi
call sub_41e6fc
int3
sub_4134b0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4134c0
retn
sub_4134d0
retn
sub_4134e0
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_4134f0
retn
sub_413500
retn
sub_413510
retn
sub_413520
retn
sub_413530
retn
sub_413730
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_413740
dec [ eax + 0x8 ]
retn
sub_413790
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_4137a0
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_413950
retn
sub_413990
dec [ eax + 0x8 ]
retn
sub_4139a0
dec [ eax + 0x8 ]
retn
sub_4139b0
mov [ eax ] ecx
retn
sub_4139c0
or eax 0xffffffff
retn
sub_4139d0
push r--data
call sub_4315a8
sub_413a70
dec [ eax + 0x8 ]
retn
sub_413a80
mov [ eax ] ecx
retn
sub_413b70
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4148a0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn
sub_413d30
retn
sub_413d40
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_413d80
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_413d90
retn
sub_413e00
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_413e10
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
setne al
retn
sub_413e20
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
sete al
retn
sub_4142d0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4148a0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_4143b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax ecx
pop ebp
retn
sub_4143c0
add [ eax + 0x8 ] ecx
retn
sub_4145d0
retn
sub_4145e0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_414620
xor eax eax
retn
sub_414630
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_414640
retn
sub_414650
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_414660
dec [ eax + 0x8 ]
retn
sub_414670
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
sub_414880
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_414890
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
sete al
retn
sub_4148d0
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
retn
sub_4148e0
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
retn
sub_4148f0
or eax 0xffffffff
retn
sub_414930
push r--data
call sub_4315a8
sub_414940
retn
sub_414950
inc [ eax + 0x4 ]
retn
sub_414960
dec [ eax + 0x4 ]
retn
sub_414970
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
setne al
retn
sub_4149b0
dec [ eax + 0x8 ]
retn
sub_4149c0
dec [ eax + 0x8 ]
retn
sub_414b70
retn
sub_414b80
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_414b90
inc [ eax + 0x4 ]
retn
sub_414ba0
dec [ eax + 0x4 ]
retn
sub_414bb0
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
sete al
retn
sub_414bf0
dec [ eax + 0x8 ]
retn
sub_414c00
or eax 0xffffffff
retn
sub_414c10
push r--data
call sub_4315a8
sub_414c80
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_414c90
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_415530
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn
sub_414e40
xor eax eax
retn
sub_414e50
xor eax eax
retn
sub_414f90
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_414fa0
add [ eax + 0x8 ] ecx
retn
sub_414fb0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_4150b0
test eax eax
je r-xdata
retn
push esi
mov esi [ edx ]
mov [ ecx ] esi
add ecx 0x4
dec eax
jne r-xdata
pop esi
sub_4150d0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_415110
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_415120
retn
sub_415190
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_4151a0
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_4151b0
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
setne al
retn
sub_4151f0
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_415210
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_415220
add [ eax + 0x4 ] ecx
retn
sub_415260
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_415270
add [ eax + 0x4 ] ecx
retn
sub_415280
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_415530
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_4152c0
retn
sub_415370
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax ecx
pop ebp
retn
sub_415380
add [ eax + 0x8 ] ecx
retn
sub_415390
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_4153a0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_415440
retn
sub_415450
retn
sub_415460
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
call sub_415880
add esp 0x4
pop ebp
retn
sub_415480
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
pop ebp
retn
sub_415490
add [ eax ] ecx
retn
sub_4154a0
retn
sub_4154b0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4154f0
xor eax eax
retn
sub_415500
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_415510
retn
sub_415520
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_415560
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
sub_415580
inc [ eax + 0x4 ]
retn
sub_415590
dec [ eax + 0x4 ]
retn
sub_4155a0
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
setne al
retn
sub_4155b0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_4155c0
inc [ eax + 0x4 ]
retn
sub_4155d0
dec [ eax + 0x4 ]
retn
sub_4155e0
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
sete al
retn
sub_4155f0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_415660
xor eax eax
retn
sub_415670
xor eax eax
retn
sub_4157b0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_4157c0
add [ eax + 0x8 ] ecx
retn
sub_4157d0
retn
sub_4157e0
xor eax eax
retn
sub_415810
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_415870
xor eax eax
retn
sub_415950
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_415960
add [ eax ] ecx
retn
sub_415970
test eax eax
je r-xdata
retn
push esi
mov esi [ edx ]
mov [ ecx ] esi
add ecx 0x4
dec eax
jne r-xdata
pop esi
sub_415990
inc [ eax + 0x8 ]
retn
sub_4159a0
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_4159e0
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_415a00
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_415a10
inc [ eax + 0x8 ]
retn
sub_415a20
add [ eax + 0x4 ] ecx
retn
sub_415a60
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_415a70
add [ eax + 0x4 ] ecx
retn
sub_415a80
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_415a90
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_415aa0
retn
sub_415ab0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_4170e1
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_4170f2
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_41710f
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41715c
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_418771
pop ecx
sub_4171d6
mov [ ecx ] r--data
jmp sub_41715c
sub_4171ff
mov [ ecx ] r--data
jmp sub_41715c
sub_417228
mov [ ecx ] r--data
jmp sub_41715c
sub_417233
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41720a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417250
mov [ ecx ] r--data
jmp sub_41715c
sub_4172ce
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417312
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417356
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417312
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4176e1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4186f1
sub_417809
call sub_4183af
retn
sub_41780f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4177d3
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4178ad
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4178bb
mov eax ecx
retn
sub_4178be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_417aa0
call sub_418a37
add eax 0x20
push eax
push 0x1
call sub_418bbd
pop ecx
pop ecx
retn
sub_417ab3
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d339
add esp 0xc
pop ebp
retn
sub_417acc
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d356
add esp 0xc
pop ebp
retn
sub_417ae5
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_41d356
add esp 0xc
pop ebp
retn
sub_417afd
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d373
add esp 0xc
pop ebp
retn
sub_417b16
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_41d373
add esp 0xc
pop ebp
retn
sub_417b58
mov eax [ rwxdata ]
or eax 0x1
xor ecx ecx
cmp [ rwxdata ] eax
sete cl
mov eax ecx
retn
sub_418106
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_418118
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_4181ab
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41827c
sub_41821e
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_41d4d2
push 0x1
push 0x0
call sub_41d48b
add esp 0xc
jmp sub_41d458
call eax
sub_41826f
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_41827c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_418771
sub_418287
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_41d8e5
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41829b
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41d875
pop ecx
retn
sub_4182cc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_41da7a
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4182e2
push ecx
call sub_41d9d7
pop ecx
retn
sub_41834f
lea eax [ ecx + 0x8 ]
retn
sub_418353
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_41835e
mov eax ecx
retn 0x4
sub_41838e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_418363
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4183a6
push 0x8
call sub_41ddfa
pop ecx
retn
sub_4183af
push 0x8
call sub_41dd09
pop ecx
retn
sub_41864e
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_41dd09
pop ecx
sub_418663
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_418523
add esp 0xc
pop ebp
retn
sub_418679
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_418523
add esp 0xc
pop ebp
retn
sub_41868f
push 0x1
push 0x0
push 0x0
call sub_418523
add esp 0xc
retn
sub_41869e
push 0x1
push 0x1
push 0x0
call sub_418523
add esp 0xc
retn
sub_418902
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e8e4
add esp 0x10
pop ebp
retn
sub_4189db
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_41e9de
pop ecx
pop ecx
pop ebp
retn
sub_4189f0
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_41ea17
pop ecx
pop ecx
pop ebp
retn
sub_418a05
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e9fa
add esp 0xc
pop ebp
retn
sub_418a1e
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ea33
add esp 0xc
pop ebp
retn
sub_418aee
call sub_41f271
cmp [ rwxdata ] 0x0
je r-xdata
push [ rwxdata ]
call sub_418771
pop ecx
retn
call sub_41eff8
sub_418c9e
push [ ebp + 0x8 ]
call sub_418b81
pop ecx
retn
sub_418ca8
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418bec
add esp 0xc
pop ebp
retn
sub_418ec2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_418d06
add esp 0x14
pop ebp
retn
sub_418f63
push [ ebp + 0x18 ]
call sub_418b81
pop ecx
retn
sub_418f6d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_418edf
add esp 0x14
pop ebp
retn
sub_41908c
push [ ebp + 0x8 ]
call sub_418b81
pop ecx
retn
sub_419096
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420195
add esp 0x10
pop ebp
retn
sub_4190b2
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4201b5
add esp 0x10
pop ebp
retn
sub_4190ce
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4201b5
add esp 0x10
pop ebp
retn
sub_4190e9
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4201d5
add esp 0x10
pop ebp
retn
sub_419105
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4201d5
add esp 0x10
pop ebp
retn
sub_4192e7
push [ ebp + 0x14 ]
call sub_418b81
pop ecx
retn
sub_4192f1
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_420fbc
add esp 0xc
pop ebp
retn
sub_419307
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_420fe7
add esp 0x10
pop ebp
retn
sub_419320
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4192f1
sub_41932b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_419307
sub_419336
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4212ea
add esp 0xc
pop ebp
retn
sub_41934c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_421315
add esp 0x10
pop ebp
retn
sub_41943e
push esi
call sub_418b81
pop ecx
retn
sub_4195e5
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_421582
pop ecx
pop ecx
retn
sub_4195f9
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_41869e
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_419b25
retn
push eax
call sub_418679
_start
call sub_421b22
jmp sub_4194b6
sub_41992e
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_419964
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_419b25
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_419b40
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_4170d2
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4170d2
sub_419fbd
push 0xd
call sub_41dd09
pop ecx
retn
sub_41a3ca
push 0xd
call sub_41dd09
pop ecx
retn
sub_41a403
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_41a269
pop ecx
mov [ rwxdata ] 0x1
sub_41a74e
push 0xc
call sub_41dd09
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41a75a
push 0x0
call [ EncodePointer@IAT ]
retn
sub_41a763
call [ TlsAlloc@IAT ]
retn 0x4
sub_41a76c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_41a786
mov eax [ rwxdata ]
retn
sub_41a7c0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_41a8bc
push 0xd
call sub_41dd09
pop ecx
retn
sub_41a8c5
push 0xc
call sub_41dd09
pop ecx
retn
sub_41aa7b
push 0xd
call sub_41dd09
pop ecx
retn
sub_41aa87
push 0xc
call sub_41dd09
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_41ac85
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_41b055
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41b01d
pop ecx
pop ecx
pop ebp
retn
sub_41b068
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b07e
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b094
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b0a7
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b0ba
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b0cd
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b0e0
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b0f3
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b106
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b11c
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b132
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b145
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b158
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b16b
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b17e
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b194
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b1aa
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b1c0
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b1d6
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b1ec
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b202
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b215
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_41b228
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_41b3df
mov eax [ rwxdata ]
retn
sub_41b3e5
mov eax rwxdata
retn
sub_41b46f
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_41b545
push 0xd
call sub_41dd09
pop ecx
retn
sub_41b551
push 0xc
call sub_41dd09
pop ecx
retn
sub_41b55a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41b498
sub_41b5ff
push 0xc
call sub_41dd09
pop ecx
retn
sub_41b60b
push 0xd
call sub_41dd09
pop ecx
retn
j_sub_41b565
jmp sub_41b565
sub_41b619
xor eax eax
retn
sub_41c1b8
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41c0c3
sub_41c2f5
push 0xc
call sub_41dd09
pop ecx
retn
sub_41c301
push 0xc
call sub_41dd09
pop ecx
retn
sub_41c30a
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c332
mov eax [ ebp - 0x20 ]
call sub_419b25
retn
sub_41c332
and [ esi + 0x70 ] 0xffffffef
retn
sub_41c4ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41c4bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_41c4d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_41d093
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41d1f2
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_41d224
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d1ff
int3
sub_41d2a9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41d23e
sub_41d331
push esi
call sub_418b81
pop ecx
retn
sub_41d339
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_41d2b4
add esp 0x10
pop ebp
retn
sub_41d356
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_426f1b
call sub_41d2b4
add esp 0x10
pop ebp
retn
sub_41d373
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_427cd1
call sub_41d2b4
add esp 0x10
pop ebp
retn
sub_41d390
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_41d2b4
add esp 0x10
pop ebp
retn
sub_41d3ac
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_426f1b
call sub_41d2b4
add esp 0x10
pop ebp
retn
sub_41d3c8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_427cd1
call sub_41d2b4
add esp 0x10
pop ebp
retn
sub_41d866
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41d8dc
push 0xe
call sub_41dd09
pop ecx
retn
sub_41d9ce
push 0xe
call sub_41dd09
pop ecx
retn
sub_41da3e
push 0xe
call sub_41dd09
pop ecx
retn
sub_41db7d
push 0xe
call sub_41dd09
pop ecx
retn
sub_41dbd0
push 0xe
call sub_41dd09
pop ecx
retn
sub_41dd09
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41dd20
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_41838e
sub_41ddf1
push 0xa
call sub_41dd09
pop ecx
retn
sub_41de2d
push 0x8
push r--data
call sub_419ae0
call sub_41a947
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41d458
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41de4d
xor eax eax
inc eax
retn
sub_41de66
call sub_41a947
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41de2d
call eax
sub_41de9d
xor eax eax
inc eax
retn
sub_41deb1
push sub_41de2d
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
retn
sub_41dec2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_41df5c
push edi
call sub_41dd09
pop ecx
retn
sub_41dfb3
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_41dfc0
call sub_41a947
add eax 0x64
retn
sub_41dfc9
call sub_41a947
add eax 0x60
retn
sub_41e1d7
push 0x0
call sub_41dd09
pop ecx
retn
sub_41e379
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_41dd09
pop ecx
sub_41e3b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41e4b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41e4fa
push 0x0
call sub_41e4c3
pop ecx
retn
sub_41e503
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_41e6cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_41e748
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rwxdata ] eax
mov eax ecx
retn
sub_41e766
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
sub_41e77a
mov eax [ rwxdata ]
retn
sub_41e968
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e8e4
add esp 0x10
pop ebp
retn
sub_41e9de
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_41e982
add esp 0x10
pop ebp
retn
sub_41e9fa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_41e982
add esp 0x10
pop ebp
retn
sub_41ea17
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_427cd1
call sub_41e982
add esp 0x10
pop ebp
retn
sub_41ea33
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_427cd1
call sub_41e982
add esp 0x10
pop ebp
retn
sub_41ebe4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41eb6d
add esp 0x14
pop ebp
retn
sub_41f08b
push 0x1
call sub_41dd09
pop ecx
retn
sub_41f1e6
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_418bbd
pop ecx
pop ecx
retn
sub_41f215
push 0x1
call sub_41dd09
pop ecx
retn
sub_41f267
push [ ebp + 0x8 ]
call sub_418b81
pop ecx
retn
sub_41f271
push 0x1
call sub_41f144
pop ecx
retn
sub_41f63b
push 0x1
call sub_41dd09
pop ecx
retn
sub_41f726
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_41f650
add esp 0xc
pop ebp
retn 0x4
sub_41f759
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_42fe45
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41f78b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_41f650
add esp 0xc
pop ebp
retn 0x8
sub_41ff69
push ebx
call sub_430076
pop ecx
retn
sub_42018b
push [ ebp + 0xc ]
call sub_418b81
pop ecx
retn
sub_420195
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_42008a
add esp 0x14
pop ebp
retn
sub_4201b5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_426f1b
call sub_42008a
add esp 0x14
pop ebp
retn
sub_4201d5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_427cd1
call sub_42008a
add esp 0x14
pop ebp
retn
sub_4201f5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41c4e7
call sub_42008a
add esp 0x14
pop ebp
retn
sub_420214
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_426f1b
call sub_42008a
add esp 0x14
pop ebp
retn
sub_420233
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_427cd1
call sub_42008a
add esp 0x14
pop ebp
retn
sub_420a1b
push ebx
call sub_430076
pop ecx
retn
sub_420fe7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420d91
add esp 0x14
pop ebp
retn
sub_421030
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420d91
add esp 0x14
pop ebp
retn
sub_421315
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_42104d
add esp 0x14
pop ebp
retn
sub_42135e
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_42104d
add esp 0x14
pop ebp
retn
sub_4214d3
push ebx
call sub_430076
pop ecx
retn
sub_42154e
push sub_42150c
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_421827
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_421bbd
and [ rwxdata ] 0x0
retn
sub_423193
call sub_41a947
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41a6e1
sub_4231b9
mov eax [ rwxdata ]
retn
sub_4231bf
call sub_41a947
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41a6e1
sub_4231f0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4305c0
sub_423206
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4305c0
sub_423271
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42321c
sub_42327c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42321c
pop ecx
pop ecx
pop ebp
retn
sub_423637
call sub_41a947
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41a6e1
sub_423660
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_423637
sub_42367c
call sub_41a947
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41a6e1
sub_4236a2
call sub_41a947
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41a6e1
sub_4236c8
call sub_41a947
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41a6e1
sub_4236ee
xor eax eax
retn
sub_4238bd
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_424019
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_424029
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_427cbc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_429328
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_42944b
mov eax ecx
and [ eax ] 0x0
retn
sub_4299de
mov eax [ rwxdata ]
not eax
and eax 0x1
retn
sub_4299e9
mov eax [ rwxdata ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_4299f6
mov eax [ rwxdata ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_429a04
mov eax [ rwxdata ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_429a12
mov eax [ rwxdata ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_429a20
mov eax [ rwxdata ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_429a2e
mov eax [ rwxdata ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_429a40
mov eax [ rwxdata ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_429a4e
mov eax [ rwxdata ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_429a5c
mov eax [ rwxdata ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_429a6a
mov eax [ rwxdata ]
and eax 0x1000
retn
sub_429a75
mov eax [ rwxdata ]
and eax 0x2000
retn
sub_429a80
mov eax [ rwxdata ]
and eax 0x4000
retn
sub_429a8b
mov eax [ rwxdata ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_429a99
mov eax [ rwxdata ]
and eax 0x10000
retn
sub_429aa4
mov eax [ rwxdata ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_429b59
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_429b6a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_429b82
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_429b8c
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_429b94
movsx eax [ ecx + 0x4 ]
retn
sub_429b99
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_429ba3
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_429bad
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_429bbe
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_429bcb
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_429bdc
or [ ecx + 0x4 ] 0x800
retn
sub_429be4
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_429bee
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_429bf8
or [ ecx + 0x4 ] 0x1000
retn
sub_429c00
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_429c0a
or [ ecx + 0x4 ] 0x2000
retn
sub_429c12
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_429c1c
or [ ecx + 0x4 ] 0x4000
retn
sub_429c24
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_429c2e
or [ ecx + 0x4 ] 0x8000
retn
sub_429c36
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_429c51
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_429c88
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_429ca0
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_429ca9
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_429caf
mov eax ecx
mov [ eax ] r--data
retn
sub_429cb8
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_429ccf
xor eax eax
inc eax
retn
sub_429cd3
mov al [ ecx + 0x4 ]
retn
sub_429cd7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_429d18
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_429d8b
mov eax [ ecx + 0x8 ]
retn
sub_429d8f
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_429e21
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_429eb5
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_429fe5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rwxdata
push [ ebp + 0x8 ]
call sub_429ad1
pop ebp
retn
sub_42a2e6
mov eax [ ecx + 0x8 ]
retn
sub_42a2ea
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_42a2fc
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429ffc
add esp 0x10
pop ebp
retn 0x8
sub_42a373
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_429f72
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_42b363
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_42abcc
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b379
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42abcc
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b38f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42abcc
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b9e0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b3a5
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42c62a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42c549
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_42e5c8
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e4cf
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_42e5e8
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e4cf
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_42e608
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e4cf
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_42e6b7
push 0x5
call sub_41dd09
pop ecx
retn
sub_42e751
push 0x5
call sub_41dd09
pop ecx
retn
sub_42ee16
push 0x2
call sub_4186ad
sub_42ef84
push [ ebp + 0x8 ]
call sub_430076
pop ecx
retn
sub_42f0a8
push ebx
call sub_430076
pop ecx
retn
sub_42fbac
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f9a8
add esp 0x10
pop ebp
retn
sub_42fd12
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42fbc6
add esp 0x10
pop ebp
retn
sub_42fe19
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_42fd50
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_42fe64
call eax
retn
sub_43006d
push 0xa
call sub_41dd09
pop ecx
retn
sub_43016f
push 0xa
call sub_41dd09
pop ecx
retn
sub_43022d
push 0xb
call sub_41dd09
pop ecx
retn
sub_430485
push 0x3
call sub_41dd09
pop ecx
retn
sub_4305a4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43048e
add esp 0x10
pop ebp
retn
sub_430677
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_430690
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_4306a8
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_4306c1
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_4306d9
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_4306f2
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_43070a
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_430726
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_430741
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_43075d
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_430778
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_430794
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_4307af
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_4307cb
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_4307e6
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_4307ff
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_430817
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_430830
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_430848
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430624
add esp 0x10
pop ebp
retn
sub_430861
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_430624
add esp 0x10
pop ebp
retn
sub_4308ce
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_430879
pop ecx
pop ecx
pop ebp
retn
sub_430c61
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_430b56
pop ebp
retn
sub_431050
push ebx
call sub_430076
pop ecx
retn
sub_4311b5
push ebx
call sub_430076
pop ecx
retn
sub_4313ca
push ebx
call sub_430076
pop ecx
retn
sub_4313d2
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rwxdata ] eax
retn
sub_4313f1
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
j_sub_4171d6#5
jmp sub_4171d6
j_sub_4171d6#4
jmp sub_4171d6
j_sub_4171d6#3
jmp sub_4171d6
j_sub_4171d6#2
jmp sub_4171d6
j_sub_4171d6#6
jmp sub_4171d6
j_sub_4171d6
jmp sub_4171d6
sub_43158b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4315d8
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_431625
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_431672
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_431785
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4317a2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
EncodePointer
jmp [ EncodePointer@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
Sleep
jmp [ Sleep@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
sub_43199a
mov eax sub_4329b7
mov [ rwxdata ] eax
mov [ rwxdata ] sub_432050
mov [ rwxdata ] sub_432004
mov [ rwxdata ] sub_43203d
mov [ rwxdata ] sub_431fa6
mov [ rwxdata ] eax
mov [ rwxdata ] sub_43292f
mov [ rwxdata ] sub_431fc2
mov [ rwxdata ] sub_431f24
mov [ rwxdata ] sub_431eb0
retn
sub_4319fa
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_431a0f
mov edi edi
push ebp
mov ebp esp
call sub_43199a
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_4329da
sub_431a5a
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_431a61
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_431a68
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_431b65
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_432b00
add esp 0x10
pop ebp
retn 0x4
sub_431ea5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_433c80
sub_432004
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431fc2
add esp 0x10
pop ebp
retn
sub_43203d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_431eb0
pop ecx
pop ecx
pop ebp
retn
sub_432050
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_431f24
pop ecx
pop ecx
pop ebp
retn
sub_432805
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432744
add esp 0x14
pop ebp
retn
sub_432a20
mov [ ecx ] r--data
jmp sub_4171d6
sub_432b7e
push [ ebp - 0x14 ]
call sub_432ab1
pop ecx
retn
sub_432bc2
call sub_41a947
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41a947
dec [ eax + 0x90 ]
sub_432c64
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_432c6d
mov esp [ ebp - 0x18 ]
call sub_41de2d
sub_432c9f
call sub_41a947
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_432ef5
push 0x10
pop eax
retn
sub_432ef9
push 0x8
push r--data
call sub_419ae0
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432f11
push [ ebp - 0x14 ]
call sub_432ab1
pop ecx
retn
sub_432f1b
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432f2b
push 0x8
push r--data
call sub_419ae0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432f44
push [ ebp - 0x14 ]
call sub_432ab1
pop ecx
retn
sub_432f4e
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432f5e
push 0x8
push r--data
call sub_419ae0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432f76
push [ ebp - 0x14 ]
call sub_432ab1
pop ecx
retn
sub_432f80
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_432fb1
push [ ebp - 0x14 ]
call sub_432ab1
pop ecx
retn
sub_432fbb
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b25
retn
sub_433041
push 0x4
mov eax sub_438675
call sub_4342b1
call sub_41a947
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41de66
call sub_41de79
sub_4331d2
mov eax [ ebp - 0x14 ]
call sub_432bdc
retn
sub_433449
xor eax eax
inc eax
retn
sub_43344d
mov esp [ ebp - 0x18 ]
call sub_41de2d
sub_4334e2
xor eax eax
inc eax
retn
sub_4334e6
mov esp [ ebp - 0x18 ]
call sub_41de2d
sub_433b27
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417282
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_433d55
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433cad
add esp 0xc
pop ebp
retn
sub_433e15
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433d6c
add esp 0xc
pop ebp
retn
sub_433ed4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433e2c
add esp 0xc
pop ebp
retn
sub_433f1d
mov eax [ rwxdata ]
retn
sub_434356
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_43436a
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170d2
jmp sub_434356
sub_434379
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170d2
jmp sub_434356
sub_434388
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_43439a
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4343ac
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4345a3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
pop ebp
retn
sub_43711e
push 0x1f80
call sub_43810c
pop ecx
retn
sub_43804a
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_43805a
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_4380ee
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
stmxcsr [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_438139
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_43817e
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
leave
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_43819b
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
retn
call sub_4380ee
and eax 0x3f
sub_4381ae
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
retn
call sub_4380ee
and eax 0x3f
jmp sub_43817e
sub_4381fd
mov edi edi
push ebp
mov ebp esp
call sub_4380ee
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_43810c
pop ecx
pop ebp
retn
sub_438220
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438240
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438260
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438280
mov ecx [ ebp + 0x8 ]
jmp sub_401490
sub_438288
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_406070
sub_438293
mov eax [ ebp + 0x8 ]
add eax 0x24
jmp sub_4060f0
sub_43829e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4382c0
mov ecx [ ebp + 0x8 ]
jmp sub_401490
sub_4382c8
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_405f20
sub_4382d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4382f0
mov ecx [ ebp + 0x8 ]
jmp sub_401490
sub_4382f8
mov esi [ ebp + 0x8 ]
add esi 0xc
jmp sub_405e70
sub_438303
mov esi [ ebp + 0x8 ]
add esi 0x1c
jmp sub_405e70
sub_43830e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438330
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438350
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438370
mov eax [ ebp + 0x8 ]
jmp sub_4061f0
sub_438378
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4383a0
mov esi [ ebp + 0x8 ]
jmp sub_403fb0
sub_4383a8
mov ecx [ ebp - 0x10 ]
jmp sub_401490
sub_4383b0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_405f20
sub_4383bb
mov esi [ ebp + 0x8 ]
add esi 0x7c
jmp sub_404540
sub_4383c6
mov eax [ ebp + 0x8 ]
add eax 0xb4
jmp sub_404fe0
sub_4383d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4383f0
mov eax [ ebp + 0x8 ]
jmp sub_4061f0
sub_4383f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438420
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438440
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438460
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438480
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4384a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4384c0
mov esi [ ebp + 0x8 ]
jmp sub_412790
sub_4384c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4384f0
mov esi [ ebp + 0x8 ]
jmp sub_412650
sub_4384f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438520
mov esi [ ebp + 0x8 ]
add esi 0x200400
jmp sub_404ed0
sub_43852e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438550
mov esi [ ebp + 0x8 ]
add esi 0x200400
jmp sub_404ed0
sub_43855e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438580
mov eax [ ebp + 0x8 ]
push eax
call sub_41827c
pop ecx
retn
sub_43858b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4385b0
mov eax [ ebp + 0xc ]
push eax
call sub_41827c
pop ecx
retn
sub_4385bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_4385e0
lea eax [ ebp - 0x48 ]
jmp sub_4121f0
sub_4385e8
lea eax [ ebp - 0x80 ]
jmp sub_412340
sub_4385f0
lea esi [ ebp - 0x60 ]
jmp sub_412440
sub_4385f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438620
mov eax rwxdata
jmp sub_4061f0
sub_43862a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438650
mov eax rwxdata
jmp sub_4061f0
sub_43865a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_438675
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170d2
mov eax r--data
jmp sub_431af9
sub_43884f
mov [ rwxdata ] r--data
mov ecx rwxdata
jmp sub_4171d6
